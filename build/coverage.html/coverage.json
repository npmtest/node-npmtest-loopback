{"/home/travis/build/npmtest/node-npmtest-loopback/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_loopback */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-loopback/lib.npmtest_loopback.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/lib.npmtest_loopback.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":53}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":59}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_loopback */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_loopback = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_loopback = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-loopback/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":52}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":66},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-loopback && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_loopback */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_loopback","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_loopback.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_loopback.rollup.js'] =","            local.assetsDict['/assets.npmtest_loopback.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_loopback.__dirname + '/lib.npmtest_loopback.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":60}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":65}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":64}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":53}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"6":{"start":{"line":21,"column":0},"end":{"line":21,"column":55}},"7":{"start":{"line":27,"column":0},"end":{"line":27,"column":76}},"8":{"start":{"line":28,"column":0},"end":{"line":28,"column":58}}},"branchMap":{},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","/**"," * loopback ~ public api"," */","","const loopback = module.exports = require('./lib/loopback');","const datasourceJuggler = require('loopback-datasource-juggler');","","/**"," * Connectors"," */","","loopback.Connector = require('./lib/connectors/base-connector');","loopback.Memory = require('./lib/connectors/memory');","loopback.Mail = require('./lib/connectors/mail');","loopback.Remote = require('loopback-connector-remote');","","/**"," * Types"," */","","loopback.GeoPoint = require('loopback-datasource-juggler/lib/geo').GeoPoint;","loopback.ValidationError = loopback.Model.ValidationError;",""],"l":{"11":1,"12":1,"18":1,"19":1,"20":1,"21":1,"27":1,"28":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/loopback.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/loopback.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":2,"38":9,"39":9,"40":0,"41":9,"42":1,"43":1,"44":1,"45":1,"46":8,"47":8,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":1,"65":1,"66":11,"67":1,"68":0,"69":1,"70":0,"71":1,"72":0,"73":1,"74":0,"75":1,"76":0,"77":1,"78":0,"79":1,"80":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,9],"6":[1,0],"7":[1,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":2,"8":8,"9":8,"10":0,"11":0,"12":0,"13":11,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"(anonymous_1)","line":54,"loc":{"start":{"line":54,"column":9},"end":{"line":54,"column":20}}},"2":{"name":"(anonymous_2)","line":57,"loc":{"start":{"line":57,"column":9},"end":{"line":57,"column":20}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":60,"column":9},"end":{"line":60,"column":20}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":9},"end":{"line":63,"column":20}}},"5":{"name":"createApplication","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":36}}},"6":{"name":"(anonymous_6)","line":82,"loc":{"start":{"line":82,"column":15},"end":{"line":82,"column":26}}},"7":{"name":"mixin","line":113,"loc":{"start":{"line":113,"column":0},"end":{"line":113,"column":23}}},"8":{"name":"(anonymous_8)","line":142,"loc":{"start":{"line":142,"column":12},"end":{"line":142,"column":27}}},"9":{"name":"(anonymous_9)","line":145,"loc":{"start":{"line":145,"column":13},"end":{"line":145,"column":25}}},"10":{"name":"(anonymous_10)","line":178,"loc":{"start":{"line":178,"column":24},"end":{"line":178,"column":46}}},"11":{"name":"(anonymous_11)","line":181,"loc":{"start":{"line":181,"column":33},"end":{"line":181,"column":47}}},"12":{"name":"(anonymous_12)","line":198,"loc":{"start":{"line":198,"column":20},"end":{"line":198,"column":35}}},"13":{"name":"(anonymous_13)","line":272,"loc":{"start":{"line":272,"column":23},"end":{"line":272,"column":59}}},"14":{"name":"(anonymous_14)","line":286,"loc":{"start":{"line":286,"column":26},"end":{"line":286,"column":54}}},"15":{"name":"(anonymous_15)","line":298,"loc":{"start":{"line":298,"column":21},"end":{"line":298,"column":41}}},"16":{"name":"(anonymous_16)","line":311,"loc":{"start":{"line":311,"column":20},"end":{"line":311,"column":40}}},"17":{"name":"(anonymous_17)","line":324,"loc":{"start":{"line":324,"column":26},"end":{"line":324,"column":46}}},"18":{"name":"(anonymous_18)","line":338,"loc":{"start":{"line":338,"column":28},"end":{"line":338,"column":52}}},"19":{"name":"(anonymous_19)","line":349,"loc":{"start":{"line":349,"column":18},"end":{"line":349,"column":33}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":33}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":23}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":25}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":27}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":36}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":31}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":53}},"11":{"start":{"line":42,"column":0},"end":{"line":42,"column":50}},"12":{"start":{"line":48,"column":0},"end":{"line":48,"column":54}},"13":{"start":{"line":50,"column":0},"end":{"line":50,"column":35}},"14":{"start":{"line":52,"column":0},"end":{"line":65,"column":3}},"15":{"start":{"line":54,"column":22},"end":{"line":54,"column":61}},"16":{"start":{"line":57,"column":22},"end":{"line":57,"column":70}},"17":{"start":{"line":60,"column":22},"end":{"line":60,"column":62}},"18":{"start":{"line":63,"column":22},"end":{"line":63,"column":56}},"19":{"start":{"line":74,"column":0},"end":{"line":111,"column":1}},"20":{"start":{"line":75,"column":2},"end":{"line":75,"column":30}},"21":{"start":{"line":77,"column":2},"end":{"line":77,"column":20}},"22":{"start":{"line":79,"column":2},"end":{"line":79,"column":26}},"23":{"start":{"line":82,"column":2},"end":{"line":84,"column":4}},"24":{"start":{"line":83,"column":4},"end":{"line":83,"column":47}},"25":{"start":{"line":87,"column":2},"end":{"line":87,"column":41}},"26":{"start":{"line":90,"column":2},"end":{"line":90,"column":22}},"27":{"start":{"line":95,"column":2},"end":{"line":95,"column":43}},"28":{"start":{"line":96,"column":2},"end":{"line":96,"column":43}},"29":{"start":{"line":97,"column":2},"end":{"line":98,"column":69}},"30":{"start":{"line":100,"column":2},"end":{"line":108,"column":3}},"31":{"start":{"line":102,"column":4},"end":{"line":102,"column":49}},"32":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"33":{"start":{"line":104,"column":6},"end":{"line":104,"column":44}},"34":{"start":{"line":107,"column":4},"end":{"line":107,"column":37}},"35":{"start":{"line":110,"column":2},"end":{"line":110,"column":13}},"36":{"start":{"line":113,"column":0},"end":{"line":122,"column":1}},"37":{"start":{"line":114,"column":2},"end":{"line":121,"column":3}},"38":{"start":{"line":115,"column":4},"end":{"line":115,"column":60}},"39":{"start":{"line":118,"column":4},"end":{"line":118,"column":24}},"40":{"start":{"line":118,"column":15},"end":{"line":118,"column":24}},"41":{"start":{"line":120,"column":4},"end":{"line":120,"column":47}},"42":{"start":{"line":124,"column":0},"end":{"line":124,"column":28}},"43":{"start":{"line":130,"column":0},"end":{"line":130,"column":15}},"44":{"start":{"line":139,"column":0},"end":{"line":154,"column":1}},"45":{"start":{"line":140,"column":2},"end":{"line":147,"column":7}},"46":{"start":{"line":143,"column":6},"end":{"line":143,"column":33}},"47":{"start":{"line":146,"column":6},"end":{"line":146,"column":78}},"48":{"start":{"line":149,"column":2},"end":{"line":149,"column":51}},"49":{"start":{"line":150,"column":2},"end":{"line":150,"column":35}},"50":{"start":{"line":152,"column":2},"end":{"line":152,"column":52}},"51":{"start":{"line":153,"column":2},"end":{"line":153,"column":35}},"52":{"start":{"line":159,"column":0},"end":{"line":170,"column":1}},"53":{"start":{"line":169,"column":2},"end":{"line":169,"column":67}},"54":{"start":{"line":178,"column":0},"end":{"line":186,"column":2}},"55":{"start":{"line":179,"column":2},"end":{"line":179,"column":19}},"56":{"start":{"line":180,"column":2},"end":{"line":184,"column":3}},"57":{"start":{"line":181,"column":4},"end":{"line":183,"column":7}},"58":{"start":{"line":182,"column":6},"end":{"line":182,"column":29}},"59":{"start":{"line":185,"column":2},"end":{"line":185,"column":37}},"60":{"start":{"line":198,"column":0},"end":{"line":204,"column":2}},"61":{"start":{"line":199,"column":2},"end":{"line":199,"column":60}},"62":{"start":{"line":200,"column":2},"end":{"line":200,"column":81}},"63":{"start":{"line":201,"column":2},"end":{"line":203,"column":5}},"64":{"start":{"line":206,"column":0},"end":{"line":206,"column":44}},"65":{"start":{"line":272,"column":0},"end":{"line":274,"column":2}},"66":{"start":{"line":273,"column":2},"end":{"line":273,"column":67}},"67":{"start":{"line":286,"column":0},"end":{"line":288,"column":2}},"68":{"start":{"line":287,"column":2},"end":{"line":287,"column":70}},"69":{"start":{"line":298,"column":0},"end":{"line":300,"column":2}},"70":{"start":{"line":299,"column":2},"end":{"line":299,"column":65}},"71":{"start":{"line":311,"column":0},"end":{"line":313,"column":2}},"72":{"start":{"line":312,"column":2},"end":{"line":312,"column":64}},"73":{"start":{"line":324,"column":0},"end":{"line":326,"column":2}},"74":{"start":{"line":325,"column":2},"end":{"line":325,"column":70}},"75":{"start":{"line":338,"column":0},"end":{"line":340,"column":2}},"76":{"start":{"line":339,"column":2},"end":{"line":339,"column":72}},"77":{"start":{"line":349,"column":0},"end":{"line":351,"column":2}},"78":{"start":{"line":350,"column":2},"end":{"line":350,"column":62}},"79":{"start":{"line":356,"column":0},"end":{"line":356,"column":38}},"80":{"start":{"line":358,"column":0},"end":{"line":358,"column":41}}},"branchMap":{"1":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"2":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":28}},{"start":{"line":100,"column":32},"end":{"line":100,"column":39}},{"start":{"line":100,"column":43},"end":{"line":100,"column":73}}]},"3":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"4":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":8},"end":{"line":103,"column":15}},{"start":{"line":103,"column":19},"end":{"line":103,"column":53}}]},"5":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"6":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":0},"end":{"line":139,"column":0}},{"start":{"line":139,"column":0},"end":{"line":139,"column":0}}]},"7":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":0},"end":{"line":159,"column":0}},{"start":{"line":159,"column":0},"end":{"line":159,"column":0}}]},"8":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"9":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":12},"end":{"line":185,"column":19}},{"start":{"line":185,"column":23},"end":{"line":185,"column":36}}]},"10":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":18},"end":{"line":199,"column":33}},{"start":{"line":199,"column":38},"end":{"line":199,"column":58}}]},"11":{"line":200,"type":"binary-expr","locations":[{"start":{"line":200,"column":12},"end":{"line":200,"column":27}},{"start":{"line":200,"column":32},"end":{"line":200,"column":79}}]}},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/*!"," * Module dependencies."," */","","'use strict';","var express = require('express');","var loopbackExpress = require('./server-app');","var proto = require('./application');","var fs = require('fs');","var ejs = require('ejs');","var path = require('path');","var merge = require('util')._extend;","var assert = require('assert');","var Registry = require('./registry');","var juggler = require('loopback-datasource-juggler');","","/**"," * LoopBack core module. It provides static properties and"," * methods to create models and data sources. The module itself is a function"," * that creates loopback `app`. For example:"," *"," * ```js"," * var loopback = require('loopback');"," * var app = loopback();"," * ```"," *"," * @property {String} version Version of LoopBack framework.  Static read-only property."," * @property {Boolean} isBrowser True if running in a browser environment; false otherwise.  Static read-only property."," * @property {Boolean} isServer True if running in a server environment; false otherwise.  Static read-only property."," * @property {Registry} registry The global `Registry` object."," * @property {String} faviconFile Path to a default favicon shipped with LoopBack."," * Use as follows: `app.use(require('serve-favicon')(loopback.faviconFile));`"," * @class loopback"," * @header loopback"," */","","var loopback = module.exports = createApplication;","","/*!"," * Framework version."," */","","loopback.version = require('../package.json').version;","","loopback.registry = new Registry();","","Object.defineProperties(loopback, {","  Model: {","    get: function() { return this.registry.getModel('Model'); },","  },","  PersistedModel: {","    get: function() { return this.registry.getModel('PersistedModel'); },","  },","  defaultDataSources: {","    get: function() { return this.registry.defaultDataSources; },","  },","  modelBuilder: {","    get: function() { return this.registry.modelBuilder; },","  },","});","","/*!"," * Create an loopback application."," *"," * @return {Function}"," * @api public"," */","","function createApplication(options) {","  var app = loopbackExpress();","","  merge(app, proto);","","  app.loopback = loopback;","","  // Create a new instance of models registry per each app instance","  app.models = function() {","    return proto.models.apply(this, arguments);","  };","","  // Create a new instance of datasources registry per each app instance","  app.datasources = app.dataSources = {};","","  // Create a new instance of connector registry per each app instance","  app.connectors = {};","","  // Register built-in connectors. It's important to keep this code","  // hand-written, so that all require() calls are static","  // and thus browserify can process them (include connectors in the bundle)","  app.connector('memory', loopback.Memory);","  app.connector('remote', loopback.Remote);","  app.connector('kv-memory',","    require('loopback-datasource-juggler/lib/connectors/kv-memory'));","","  if (loopback.localRegistry || options && options.localRegistry === true) {","    // setup the app registry","    var registry = app.registry = new Registry();","    if (options && options.loadBuiltinModels === true) {","      require('./builtin-models')(registry);","    }","  } else {","    app.registry = loopback.registry;","  }","","  return app;","}","","function mixin(source) {","  for (var key in source) {","    var desc = Object.getOwnPropertyDescriptor(source, key);","","    // Fix for legacy (pre-ES5) browsers like PhantomJS","    if (!desc) continue;","","    Object.defineProperty(loopback, key, desc);","  }","}","","mixin(require('./runtime'));","","/*!"," * Expose static express methods like `express.Router`."," */","","mixin(express);","","/*!"," * Expose additional loopback middleware"," * for example `loopback.configure` etc."," *"," * ***only in node***"," */","","if (loopback.isServer) {","  fs","    .readdirSync(path.join(__dirname, '..', 'server', 'middleware'))","    .filter(function(file) {","      return file.match(/\\.js$/);","    })","    .forEach(function(m) {","      loopback[m.replace(/\\.js$/, '')] = require('../server/middleware/' + m);","    });","","  loopback.urlNotFound = loopback['url-not-found'];","  delete loopback['url-not-found'];","","  loopback.errorHandler = loopback['error-handler'];","  delete loopback['error-handler'];","}","","// Expose path to the default favicon file","// ***only in node***","","if (loopback.isServer) {","  /*!","   * Path to a default favicon shipped with LoopBack.","   *","   * **Example**","   *","   * ```js","   * app.use(require('serve-favicon')(loopback.faviconFile));","   * ```","   */","  loopback.faviconFile = path.resolve(__dirname, '../favicon.ico');","}","","/**"," * Add a remote method to a model."," * @param {Function} fn"," * @param {Object} options (optional)"," */","","loopback.remoteMethod = function(fn, options) {","  fn.shared = true;","  if (typeof options === 'object') {","    Object.keys(options).forEach(function(key) {","      fn[key] = options[key];","    });","  }","  fn.http = fn.http || {verb: 'get'};","};","","/**"," * Create a template helper."," *"," *     var render = loopback.template('foo.ejs');"," *     var html = render({foo: 'bar'});"," *"," * @param {String} path Path to the template file."," * @returns {Function}"," */","","loopback.template = function(file) {","  var templates = this._templates || (this._templates = {});","  var str = templates[file] || (templates[file] = fs.readFileSync(file, 'utf8'));","  return ejs.compile(str, {","    filename: file,","  });","};","","require('../lib/current-context')(loopback);","","/**"," * Create a named vanilla JavaScript class constructor with an attached"," * set of properties and options."," *"," * This function comes with two variants:"," *  * `loopback.createModel(name, properties, options)`"," *  * `loopback.createModel(config)`"," *"," * In the second variant, the parameters `name`, `properties` and `options`"," * are provided in the config object. Any additional config entries are"," * interpreted as `options`, i.e. the following two configs are identical:"," *"," * ```js"," * { name: 'Customer', base: 'User' }"," * { name: 'Customer', options: { base: 'User' } }"," * ```"," *"," * **Example**"," *"," * Create an `Author` model using the three-parameter variant:"," *"," * ```js"," * loopback.createModel("," *   'Author',"," *   {"," *     firstName: 'string',"," *     lastName: 'string'"," *   },"," *   {"," *     relations: {"," *       books: {"," *         model: 'Book',"," *         type: 'hasAndBelongsToMany'"," *       }"," *     }"," *   }"," * );"," * ```"," *"," * Create the same model using a config object:"," *"," * ```js"," * loopback.createModel({"," *   name: 'Author',"," *   properties: {"," *     firstName: 'string',"," *     lastName: 'string'"," *   },"," *   relations: {"," *     books: {"," *       model: 'Book',"," *       type: 'hasAndBelongsToMany'"," *     }"," *   }"," * });"," * ```"," *"," * @param {String} name Unique name."," * @param {Object} properties"," * @param {Object} options (optional)"," *"," * @header loopback.createModel"," */","","loopback.createModel = function(name, properties, options) {","  return this.registry.createModel.apply(this.registry, arguments);","};","","/**"," * Alter an existing Model class."," * @param {Model} ModelCtor The model constructor to alter."," * @options {Object} config Additional configuration to apply"," * @property {DataSource} dataSource Attach the model to a dataSource."," * @property {Object} [relations] Model relations to add/update."," *"," * @header loopback.configureModel(ModelCtor, config)"," */","","loopback.configureModel = function(ModelCtor, config) {","  return this.registry.configureModel.apply(this.registry, arguments);","};","","/**"," * Look up a model class by name from all models created by"," * `loopback.createModel()`"," * @param {String} modelName The model name"," * @returns {Model} The model class"," *"," * @header loopback.findModel(modelName)"," */","loopback.findModel = function(modelName) {","  return this.registry.findModel.apply(this.registry, arguments);","};","","/**"," * Look up a model class by name from all models created by"," * `loopback.createModel()`. Throw an error when no such model exists."," *"," * @param {String} modelName The model name"," * @returns {Model} The model class"," *"," * @header loopback.getModel(modelName)"," */","loopback.getModel = function(modelName) {","  return this.registry.getModel.apply(this.registry, arguments);","};","","/**"," * Look up a model class by the base model class."," * The method can be used by LoopBack"," * to find configured models in models.json over the base model."," * @param {Model} modelType The base model class"," * @returns {Model} The subclass if found or the base class"," *"," * @header loopback.getModelByType(modelType)"," */","loopback.getModelByType = function(modelType) {","  return this.registry.getModelByType.apply(this.registry, arguments);","};","","/**"," * Create a data source with passing the provided options to the connector."," *"," * @param {String} name Optional name."," * @options {Object} options Data Source options"," * @property {Object} connector LoopBack connector."," * @property {*} [*] Other&nbsp;connector properties."," *   See the relevant connector documentation."," */","","loopback.createDataSource = function(name, options) {","  return this.registry.createDataSource.apply(this.registry, arguments);","};","","/**"," * Get an in-memory data source. Use one if it already exists."," *"," * @param {String} [name] The name of the data source."," * If not provided, the `'default'` is used."," */","","loopback.memory = function(name) {","  return this.registry.memory.apply(this.registry, arguments);","};","/*!"," * Built in models / services"," */","","require('./builtin-models')(loopback);","","loopback.DataSource = juggler.DataSource;",""],"l":{"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"42":1,"48":1,"50":1,"52":1,"54":1,"57":1,"60":0,"63":0,"74":1,"75":0,"77":0,"79":0,"82":0,"83":0,"87":0,"90":0,"95":0,"96":0,"97":0,"100":0,"102":0,"103":0,"104":0,"107":0,"110":0,"113":1,"114":2,"115":9,"118":9,"120":9,"124":1,"130":1,"139":1,"140":1,"143":8,"146":8,"149":1,"150":1,"152":1,"153":1,"159":1,"169":1,"178":1,"179":0,"180":0,"181":0,"182":0,"185":0,"198":1,"199":0,"200":0,"201":0,"206":1,"272":1,"273":11,"286":1,"287":0,"298":1,"299":0,"311":1,"312":0,"324":1,"325":0,"338":1,"339":0,"349":1,"350":0,"356":1,"358":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/server-app.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/server-app.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"loopbackExpress","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":44}}},"2":{"name":"(anonymous_2)","line":58,"loc":{"start":{"line":58,"column":29},"end":{"line":58,"column":55}}},"3":{"name":"(anonymous_3)","line":79,"loc":{"start":{"line":79,"column":22},"end":{"line":79,"column":37}}},"4":{"name":"(anonymous_4)","line":86,"loc":{"start":{"line":86,"column":18},"end":{"line":86,"column":43}}},"5":{"name":"(anonymous_5)","line":94,"loc":{"start":{"line":94,"column":18},"end":{"line":94,"column":48}}},"6":{"name":"(anonymous_6)","line":140,"loc":{"start":{"line":140,"column":31},"end":{"line":140,"column":53}}},"7":{"name":"(anonymous_7)","line":169,"loc":{"start":{"line":169,"column":19},"end":{"line":169,"column":50}}},"8":{"name":"(anonymous_8)","line":222,"loc":{"start":{"line":222,"column":28},"end":{"line":222,"column":46}}},"9":{"name":"(anonymous_9)","line":245,"loc":{"start":{"line":245,"column":19},"end":{"line":245,"column":30}}},"10":{"name":"(anonymous_10)","line":255,"loc":{"start":{"line":255,"column":23},"end":{"line":255,"column":39}}},"11":{"name":"useAndSort","line":260,"loc":{"start":{"line":260,"column":15},"end":{"line":260,"column":37}}},"12":{"name":"routeAndSort","line":267,"loc":{"start":{"line":267,"column":17},"end":{"line":267,"column":41}}},"13":{"name":"(anonymous_13)","line":279,"loc":{"start":{"line":279,"column":27},"end":{"line":279,"column":38}}},"14":{"name":"(anonymous_14)","line":283,"loc":{"start":{"line":283,"column":38},"end":{"line":283,"column":57}}},"15":{"name":"compareLayers","line":292,"loc":{"start":{"line":292,"column":2},"end":{"line":292,"column":38}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":33}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":72}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":45}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":50}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"9":{"start":{"line":17,"column":0},"end":{"line":17,"column":15}},"10":{"start":{"line":19,"column":0},"end":{"line":24,"column":2}},"11":{"start":{"line":20,"column":2},"end":{"line":20,"column":22}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":43}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":20}},"14":{"start":{"line":23,"column":2},"end":{"line":23,"column":13}},"15":{"start":{"line":58,"column":0},"end":{"line":106,"column":2}},"16":{"start":{"line":59,"column":2},"end":{"line":59,"column":72}},"17":{"start":{"line":60,"column":2},"end":{"line":60,"column":67}},"18":{"start":{"line":61,"column":2},"end":{"line":62,"column":49}},"19":{"start":{"line":64,"column":2},"end":{"line":65,"column":11}},"20":{"start":{"line":65,"column":4},"end":{"line":65,"column":11}},"21":{"start":{"line":67,"column":2},"end":{"line":67,"column":29}},"22":{"start":{"line":68,"column":2},"end":{"line":72,"column":3}},"23":{"start":{"line":69,"column":4},"end":{"line":69,"column":16}},"24":{"start":{"line":70,"column":9},"end":{"line":72,"column":3}},"25":{"start":{"line":71,"column":4},"end":{"line":71,"column":22}},"26":{"start":{"line":74,"column":2},"end":{"line":74,"column":44}},"27":{"start":{"line":77,"column":2},"end":{"line":77,"column":45}},"28":{"start":{"line":78,"column":2},"end":{"line":102,"column":3}},"29":{"start":{"line":79,"column":4},"end":{"line":81,"column":7}},"30":{"start":{"line":80,"column":6},"end":{"line":80,"column":40}},"31":{"start":{"line":82,"column":4},"end":{"line":101,"column":5}},"32":{"start":{"line":83,"column":6},"end":{"line":83,"column":36}},"33":{"start":{"line":84,"column":6},"end":{"line":100,"column":7}},"34":{"start":{"line":86,"column":8},"end":{"line":91,"column":10}},"35":{"start":{"line":87,"column":10},"end":{"line":89,"column":11}},"36":{"start":{"line":88,"column":12},"end":{"line":88,"column":26}},"37":{"start":{"line":90,"column":10},"end":{"line":90,"column":42}},"38":{"start":{"line":94,"column":8},"end":{"line":99,"column":10}},"39":{"start":{"line":95,"column":10},"end":{"line":97,"column":11}},"40":{"start":{"line":96,"column":12},"end":{"line":96,"column":29}},"41":{"start":{"line":98,"column":10},"end":{"line":98,"column":47}},"42":{"start":{"line":103,"column":2},"end":{"line":103,"column":61}},"43":{"start":{"line":105,"column":2},"end":{"line":105,"column":14}},"44":{"start":{"line":140,"column":0},"end":{"line":153,"column":2}},"45":{"start":{"line":141,"column":2},"end":{"line":141,"column":20}},"46":{"start":{"line":143,"column":2},"end":{"line":150,"column":3}},"47":{"start":{"line":144,"column":4},"end":{"line":145,"column":68}},"48":{"start":{"line":148,"column":4},"end":{"line":148,"column":65}},"49":{"start":{"line":149,"column":4},"end":{"line":149,"column":69}},"50":{"start":{"line":152,"column":2},"end":{"line":152,"column":14}},"51":{"start":{"line":169,"column":0},"end":{"line":213,"column":2}},"52":{"start":{"line":170,"column":2},"end":{"line":170,"column":20}},"53":{"start":{"line":172,"column":2},"end":{"line":175,"column":3}},"54":{"start":{"line":173,"column":4},"end":{"line":173,"column":20}},"55":{"start":{"line":174,"column":4},"end":{"line":174,"column":22}},"56":{"start":{"line":177,"column":2},"end":{"line":177,"column":80}},"57":{"start":{"line":178,"column":2},"end":{"line":178,"column":72}},"58":{"start":{"line":180,"column":2},"end":{"line":182,"column":3}},"59":{"start":{"line":181,"column":4},"end":{"line":181,"column":16}},"60":{"start":{"line":184,"column":2},"end":{"line":184,"column":27}},"61":{"start":{"line":185,"column":2},"end":{"line":185,"column":50}},"62":{"start":{"line":187,"column":2},"end":{"line":187,"column":46}},"63":{"start":{"line":188,"column":2},"end":{"line":190,"column":3}},"64":{"start":{"line":189,"column":4},"end":{"line":189,"column":16}},"65":{"start":{"line":192,"column":2},"end":{"line":193,"column":66}},"66":{"start":{"line":193,"column":4},"end":{"line":193,"column":66}},"67":{"start":{"line":195,"column":2},"end":{"line":195,"column":59}},"68":{"start":{"line":197,"column":2},"end":{"line":197,"column":32}},"69":{"start":{"line":198,"column":2},"end":{"line":198,"column":27}},"70":{"start":{"line":200,"column":2},"end":{"line":200,"column":48}},"71":{"start":{"line":201,"column":2},"end":{"line":206,"column":3}},"72":{"start":{"line":203,"column":4},"end":{"line":203,"column":32}},"73":{"start":{"line":205,"column":4},"end":{"line":205,"column":78}},"74":{"start":{"line":208,"column":2},"end":{"line":208,"column":33}},"75":{"start":{"line":210,"column":2},"end":{"line":210,"column":28}},"76":{"start":{"line":212,"column":2},"end":{"line":212,"column":14}},"77":{"start":{"line":222,"column":0},"end":{"line":242,"column":2}},"78":{"start":{"line":225,"column":2},"end":{"line":240,"column":3}},"79":{"start":{"line":226,"column":4},"end":{"line":239,"column":5}},"80":{"start":{"line":230,"column":6},"end":{"line":230,"column":35}},"81":{"start":{"line":234,"column":6},"end":{"line":238,"column":7}},"82":{"start":{"line":235,"column":8},"end":{"line":237,"column":9}},"83":{"start":{"line":236,"column":10},"end":{"line":236,"column":39}},"84":{"start":{"line":241,"column":2},"end":{"line":241,"column":14}},"85":{"start":{"line":245,"column":0},"end":{"line":277,"column":2}},"86":{"start":{"line":246,"column":2},"end":{"line":246,"column":18}},"87":{"start":{"line":247,"column":2},"end":{"line":247,"column":27}},"88":{"start":{"line":247,"column":20},"end":{"line":247,"column":27}},"89":{"start":{"line":249,"column":2},"end":{"line":249,"column":29}},"90":{"start":{"line":251,"column":2},"end":{"line":251,"column":28}},"91":{"start":{"line":255,"column":2},"end":{"line":257,"column":5}},"92":{"start":{"line":256,"column":4},"end":{"line":256,"column":37}},"93":{"start":{"line":259,"column":2},"end":{"line":259,"column":35}},"94":{"start":{"line":260,"column":2},"end":{"line":264,"column":4}},"95":{"start":{"line":261,"column":4},"end":{"line":261,"column":58}},"96":{"start":{"line":262,"column":4},"end":{"line":262,"column":30}},"97":{"start":{"line":263,"column":4},"end":{"line":263,"column":18}},"98":{"start":{"line":266,"column":2},"end":{"line":266,"column":39}},"99":{"start":{"line":267,"column":2},"end":{"line":271,"column":4}},"100":{"start":{"line":268,"column":4},"end":{"line":268,"column":60}},"101":{"start":{"line":269,"column":4},"end":{"line":269,"column":30}},"102":{"start":{"line":270,"column":4},"end":{"line":270,"column":18}},"103":{"start":{"line":273,"column":2},"end":{"line":276,"column":4}},"104":{"start":{"line":279,"column":0},"end":{"line":317,"column":2}},"105":{"start":{"line":280,"column":2},"end":{"line":280,"column":37}},"106":{"start":{"line":280,"column":30},"end":{"line":280,"column":37}},"107":{"start":{"line":282,"column":2},"end":{"line":282,"column":22}},"108":{"start":{"line":283,"column":2},"end":{"line":287,"column":5}},"109":{"start":{"line":284,"column":4},"end":{"line":284,"column":42}},"110":{"start":{"line":285,"column":4},"end":{"line":285,"column":34}},"111":{"start":{"line":286,"column":4},"end":{"line":286,"column":45}},"112":{"start":{"line":289,"column":2},"end":{"line":289,"column":28}},"113":{"start":{"line":290,"column":2},"end":{"line":290,"column":49}},"114":{"start":{"line":292,"column":2},"end":{"line":316,"column":3}},"115":{"start":{"line":293,"column":4},"end":{"line":293,"column":31}},"116":{"start":{"line":294,"column":4},"end":{"line":294,"column":33}},"117":{"start":{"line":296,"column":4},"end":{"line":296,"column":43}},"118":{"start":{"line":296,"column":34},"end":{"line":296,"column":43}},"119":{"start":{"line":299,"column":4},"end":{"line":299,"column":52}},"120":{"start":{"line":299,"column":42},"end":{"line":299,"column":52}},"121":{"start":{"line":300,"column":4},"end":{"line":300,"column":52}},"122":{"start":{"line":300,"column":43},"end":{"line":300,"column":52}},"123":{"start":{"line":304,"column":4},"end":{"line":309,"column":5}},"124":{"start":{"line":305,"column":6},"end":{"line":306,"column":18}},"125":{"start":{"line":306,"column":8},"end":{"line":306,"column":18}},"126":{"start":{"line":308,"column":6},"end":{"line":308,"column":59}},"127":{"start":{"line":311,"column":4},"end":{"line":312,"column":41}},"128":{"start":{"line":312,"column":6},"end":{"line":312,"column":41}},"129":{"start":{"line":315,"column":4},"end":{"line":315,"column":58}}},"branchMap":{"1":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":9},"end":{"line":61,"column":41}},{"start":{"line":61,"column":45},"end":{"line":61,"column":57}}]},"2":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"3":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"4":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":9},"end":{"line":70,"column":9}},{"start":{"line":70,"column":9},"end":{"line":70,"column":9}}]},"5":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":14},"end":{"line":77,"column":28}},{"start":{"line":77,"column":32},"end":{"line":77,"column":44}}]},"6":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"7":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":13},"end":{"line":80,"column":17}},{"start":{"line":80,"column":21},"end":{"line":80,"column":39}}]},"8":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"9":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":6},"end":{"line":84,"column":6}},{"start":{"line":84,"column":6},"end":{"line":84,"column":6}}]},"10":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":10},"end":{"line":87,"column":10}},{"start":{"line":87,"column":10},"end":{"line":87,"column":10}}]},"11":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":10},"end":{"line":95,"column":10}},{"start":{"line":95,"column":10},"end":{"line":95,"column":10}}]},"12":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":32},"end":{"line":103,"column":44}},{"start":{"line":103,"column":48},"end":{"line":103,"column":50}}]},"13":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]},"14":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"15":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":27}},{"start":{"line":172,"column":31},"end":{"line":172,"column":58}}]},"16":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":9},"end":{"line":177,"column":33}},{"start":{"line":177,"column":37},"end":{"line":177,"column":41}}]},"17":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"18":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":20},"end":{"line":185,"column":32}},{"start":{"line":185,"column":36},"end":{"line":185,"column":49}}]},"19":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":2},"end":{"line":188,"column":2}},{"start":{"line":188,"column":2},"end":{"line":188,"column":2}}]},"20":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"21":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":201,"column":2}},{"start":{"line":201,"column":2},"end":{"line":201,"column":2}}]},"22":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":4},"end":{"line":226,"column":4}},{"start":{"line":226,"column":4},"end":{"line":226,"column":4}}]},"23":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":8},"end":{"line":226,"column":48}},{"start":{"line":228,"column":6},"end":{"line":228,"column":63}}]},"24":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":8},"end":{"line":235,"column":8}},{"start":{"line":235,"column":8},"end":{"line":235,"column":8}}]},"25":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":2},"end":{"line":247,"column":2}},{"start":{"line":247,"column":2},"end":{"line":247,"column":2}}]},"26":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":2},"end":{"line":280,"column":2}},{"start":{"line":280,"column":2},"end":{"line":280,"column":2}}]},"27":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":4},"end":{"line":296,"column":4}},{"start":{"line":296,"column":4},"end":{"line":296,"column":4}}]},"28":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":299,"column":4}},{"start":{"line":299,"column":4},"end":{"line":299,"column":4}}]},"29":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":4},"end":{"line":300,"column":4}},{"start":{"line":300,"column":4},"end":{"line":300,"column":4}}]},"30":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":4},"end":{"line":304,"column":4}},{"start":{"line":304,"column":4},"end":{"line":304,"column":4}}]},"31":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":6},"end":{"line":305,"column":6}},{"start":{"line":305,"column":6},"end":{"line":305,"column":6}}]},"32":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":4},"end":{"line":311,"column":4}},{"start":{"line":311,"column":4},"end":{"line":311,"column":4}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var g = require('./globalize');","var assert = require('assert');","var express = require('express');","var merge = require('util')._extend;","var mergePhaseNameLists = require('loopback-phase').mergePhaseNameLists;","var debug = require('debug')('loopback:app');","var stableSortInPlace = require('stable').inplace;","","var BUILTIN_MIDDLEWARE = {builtin: true};","","var proto = {};","","module.exports = function loopbackExpress() {","  var app = express();","  app.__expressLazyRouter = app.lazyrouter;","  merge(app, proto);","  return app;","};","","/**"," * Register a middleware using a factory function and a JSON config."," *"," * **Example**"," *"," * ```js"," * app.middlewareFromConfig(compression, {"," *   enabled: true,"," *   phase: 'initial',"," *   params: {"," *     threshold: 128"," *   }"," * });"," * ```"," *"," * @param {function} factory The factory function creating a middleware handler."," *   Typically a result of `require()` call, e.g. `require('compression')`."," * @options {Object} config The configuration."," * @property {String} phase The phase to register the middleware in."," * @property {Boolean} [enabled] Whether the middleware is enabled."," *   Default: `true`."," * @property {Array|*} [params] The arguments to pass to the factory"," *   function. Either an array of arguments,"," *   or the value of the first argument when the factory expects"," *   a single argument only."," * @property {Array|string|RegExp} [paths] Optional list of paths limiting"," *   the scope of the middleware."," *"," * @returns {object} this (fluent API)"," *"," * @header app.middlewareFromConfig(factory, config)"," */","proto.middlewareFromConfig = function(factory, config) {","  assert(typeof factory === 'function', '\"factory\" must be a function');","  assert(typeof config === 'object', '\"config\" must be an object');","  assert(typeof config.phase === 'string' && config.phase,","    '\"config.phase\" must be a non-empty string');","","  if (config.enabled === false)","    return;","","  var params = config.params;","  if (params === undefined) {","    params = [];","  } else if (!Array.isArray(params)) {","    params = [params];","  }","","  var handler = factory.apply(null, params);","","  // Check if methods/verbs filter exists","  var verbs = config.methods || config.verbs;","  if (Array.isArray(verbs)) {","    verbs = verbs.map(function(verb) {","      return verb && verb.toUpperCase();","    });","    if (verbs.indexOf('ALL') === -1) {","      var originalHandler = handler;","      if (handler.length <= 3) {","        // Regular handler","        handler = function(req, res, next) {","          if (verbs.indexOf(req.method.toUpperCase()) === -1) {","            return next();","          }","          originalHandler(req, res, next);","        };","      } else {","        // Error handler","        handler = function(err, req, res, next) {","          if (verbs.indexOf(req.method.toUpperCase()) === -1) {","            return next(err);","          }","          originalHandler(err, req, res, next);","        };","      }","    }","  }","  this.middleware(config.phase, config.paths || [], handler);","","  return this;","};","","/**"," * Register (new) middleware phases."," *"," * If all names are new, then the phases are added just before \"routes\" phase."," * Otherwise the provided list of names is merged with the existing phases"," * in such way that the order of phases is preserved."," *"," * **Examples**"," *"," * ```js"," * // built-in phases:"," * // initial, session, auth, parse, routes, files, final"," *"," * app.defineMiddlewarePhases('custom');"," * // new list of phases"," * // initial, session, auth, parse, custom, routes, files, final"," *"," * app.defineMiddlewarePhases(["," *   'initial', 'postinit', 'preauth', 'routes', 'subapps'"," * ]);"," * // new list of phases"," * // initial, postinit, preauth, session, auth, parse, custom,"," * // routes, subapps, files, final"," * ```"," *"," * @param {string|Array.<string>} nameOrArray A phase name or a list of phase"," *   names to add."," *"," * @returns {object} this (fluent API)"," *"," * @header app.defineMiddlewarePhases(nameOrArray)"," */","proto.defineMiddlewarePhases = function(nameOrArray) {","  this.lazyrouter();","","  if (Array.isArray(nameOrArray)) {","    this._requestHandlingPhases =","      mergePhaseNameLists(this._requestHandlingPhases, nameOrArray);","  } else {","    // add the new phase before 'routes'","    var routesIx = this._requestHandlingPhases.indexOf('routes');","    this._requestHandlingPhases.splice(routesIx - 1, 0, nameOrArray);","  }","","  return this;","};","","/**"," * Register a middleware handler to be executed in a given phase."," * @param {string} name The phase name, e.g. \"init\" or \"routes\"."," * @param {Array|string|RegExp} [paths] Optional list of paths limiting"," *   the scope of the middleware."," *   String paths are interpreted as expressjs path patterns,"," *   regular expressions are used as-is."," * @param {function} handler The middleware handler, one of"," *   `function(req, res, next)` or"," *   `function(err, req, res, next)`"," * @returns {object} this (fluent API)"," *"," * @header app.middleware(name, handler)"," */","proto.middleware = function(name, paths, handler) {","  this.lazyrouter();","","  if (handler === undefined && typeof paths === 'function') {","    handler = paths;","    paths = undefined;","  }","","  assert(typeof name === 'string' && name, '\"name\" must be a non-empty string');","  assert(typeof handler === 'function', '\"handler\" must be a function');","","  if (paths === undefined) {","    paths = '/';","  }","","  var fullPhaseName = name;","  var handlerName = handler.name || '<anonymous>';","","  var m = name.match(/^(.+):(before|after)$/);","  if (m) {","    name = m[1];","  }","","  if (this._requestHandlingPhases.indexOf(name) === -1)","    throw new Error(g.f('Unknown {{middleware}} phase %s', name));","","  debug('use %s %s %s', fullPhaseName, paths, handlerName);","","  this._skipLayerSorting = true;","  this.use(paths, handler);","","  var layer = this._findLayerByHandler(handler);","  if (layer) {","    // Set the phase name for sorting","    layer.phase = fullPhaseName;","  } else {","    debug('No matching layer is found for %s %s', fullPhaseName, handlerName);","  }","","  this._skipLayerSorting = false;","","  this._sortLayersByPhase();","","  return this;","};","","/*!"," * Find the corresponding express layer by handler"," *"," * This is needed because monitoring agents such as NewRelic can add handlers"," * to the stack. For example, NewRelic adds sentinel handler. We need to search"," * the stackto find the correct layer."," */","proto._findLayerByHandler = function(handler) {","  // Other handlers can be added to the stack, for example,","  // NewRelic adds sentinel handler. We need to search the stack","  for (var k = this._router.stack.length - 1; k >= 0; k--) {","    if (this._router.stack[k].handle === handler ||","      // NewRelic replaces the handle and keeps it as __NR_original","      this._router.stack[k].handle['__NR_original'] === handler","      ) {","      return this._router.stack[k];","    } else {","      // Aggressively check if the original handler has been wrapped","      // into a new function with a property pointing to the original handler","      for (var p in this._router.stack[k].handle) {","        if (this._router.stack[k].handle[p] === handler) {","          return this._router.stack[k];","        }","      }","    }","  }","  return null;","};","","// Install our custom PhaseList-based handler into the app","proto.lazyrouter = function() {","  var self = this;","  if (self._router) return;","","  self.__expressLazyRouter();","","  var router = self._router;","","  // Mark all middleware added by Router ctor as builtin","  // The sorting algo will keep them at beginning of the list","  router.stack.forEach(function(layer) {","    layer.phase = BUILTIN_MIDDLEWARE;","  });","","  router.__expressUse = router.use;","  router.use = function useAndSort() {","    var retval = this.__expressUse.apply(this, arguments);","    self._sortLayersByPhase();","    return retval;","  };","","  router.__expressRoute = router.route;","  router.route = function routeAndSort() {","    var retval = this.__expressRoute.apply(this, arguments);","    self._sortLayersByPhase();","    return retval;","  };","","  self._requestHandlingPhases = [","    'initial', 'session', 'auth', 'parse',","    'routes', 'files', 'final',","  ];","};","","proto._sortLayersByPhase = function() {","  if (this._skipLayerSorting) return;","","  var phaseOrder = {};","  this._requestHandlingPhases.forEach(function(name, ix) {","    phaseOrder[name + ':before'] = ix * 3;","    phaseOrder[name] = ix * 3 + 1;","    phaseOrder[name + ':after'] = ix * 3 + 2;","  });","","  var router = this._router;","  stableSortInPlace(router.stack, compareLayers);","","  function compareLayers(left, right) {","    var leftPhase = left.phase;","    var rightPhase = right.phase;","","    if (leftPhase === rightPhase) return 0;","","    // Builtin middleware is always first","    if (leftPhase === BUILTIN_MIDDLEWARE) return -1;","    if (rightPhase === BUILTIN_MIDDLEWARE) return 1;","","    // Layers registered via app.use and app.route","    // are executed as the first items in `routes` phase","    if (leftPhase === undefined) {","      if (rightPhase === 'routes')","        return -1;","","      return phaseOrder['routes'] - phaseOrder[rightPhase];","    }","","    if (rightPhase === undefined)","      return -compareLayers(right, left);","","    // Layers registered via `app.middleware` are compared via phase & hook","    return phaseOrder[leftPhase] - phaseOrder[rightPhase];","  }","};",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"15":1,"17":1,"19":1,"20":0,"21":0,"22":0,"23":0,"58":1,"59":0,"60":0,"61":0,"64":0,"65":0,"67":0,"68":0,"69":0,"70":0,"71":0,"74":0,"77":0,"78":0,"79":0,"80":0,"82":0,"83":0,"84":0,"86":0,"87":0,"88":0,"90":0,"94":0,"95":0,"96":0,"98":0,"103":0,"105":0,"140":1,"141":0,"143":0,"144":0,"148":0,"149":0,"152":0,"169":1,"170":0,"172":0,"173":0,"174":0,"177":0,"178":0,"180":0,"181":0,"184":0,"185":0,"187":0,"188":0,"189":0,"192":0,"193":0,"195":0,"197":0,"198":0,"200":0,"201":0,"203":0,"205":0,"208":0,"210":0,"212":0,"222":1,"225":0,"226":0,"230":0,"234":0,"235":0,"236":0,"241":0,"245":1,"246":0,"247":0,"249":0,"251":0,"255":0,"256":0,"259":0,"260":0,"261":0,"262":0,"263":0,"266":0,"267":0,"268":0,"269":0,"270":0,"273":0,"279":1,"280":0,"282":0,"283":0,"284":0,"285":0,"286":0,"289":0,"290":0,"292":1,"293":0,"294":0,"296":0,"299":0,"300":0,"304":0,"305":0,"306":0,"308":0,"311":0,"312":0,"315":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/globalize.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/globalize.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":73}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":22}}},"branchMap":{},"code":["// Copyright IBM Corp. 2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var path = require('path');","var SG = require('strong-globalize');","","SG.SetRootDir(path.join(__dirname, '..'), {autonomousMsgLoading: 'all'});","module.exports = SG();",""],"l":{"7":1,"8":1,"10":1,"11":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-phase/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-phase/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":25}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":48}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":64}}},"branchMap":{},"code":["// Copyright IBM Corp. 2014. All Rights Reserved.","// Node module: loopback-phase","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","var SG = require('strong-globalize');","SG.SetRootDir(__dirname);","","exports.PhaseList = require('./lib/phase-list');","exports.Phase = require('./lib/phase');","exports.mergePhaseNameLists = require('./lib/merge-name-lists');",""],"l":{"6":1,"7":1,"9":1,"10":1,"11":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-phase/lib/phase-list.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-phase/lib/phase-list.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"PhaseList","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":21}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":28},"end":{"line":37,"column":39}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":27},"end":{"line":47,"column":38}}},"4":{"name":"(anonymous_4)","line":58,"loc":{"start":{"line":58,"column":26},"end":{"line":58,"column":42}}},"5":{"name":"(anonymous_5)","line":72,"loc":{"start":{"line":72,"column":46},"end":{"line":72,"column":68}}},"6":{"name":"(anonymous_6)","line":99,"loc":{"start":{"line":99,"column":28},"end":{"line":99,"column":51}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":31},"end":{"line":112,"column":54}}},"8":{"name":"(anonymous_8)","line":127,"loc":{"start":{"line":127,"column":32},"end":{"line":127,"column":56}}},"9":{"name":"(anonymous_9)","line":142,"loc":{"start":{"line":142,"column":29},"end":{"line":142,"column":45}}},"10":{"name":"(anonymous_10)","line":190,"loc":{"start":{"line":190,"column":31},"end":{"line":190,"column":47}}},"11":{"name":"(anonymous_11)","line":194,"loc":{"start":{"line":194,"column":33},"end":{"line":194,"column":48}}},"12":{"name":"(anonymous_12)","line":209,"loc":{"start":{"line":209,"column":27},"end":{"line":209,"column":40}}},"13":{"name":"(anonymous_13)","line":220,"loc":{"start":{"line":220,"column":32},"end":{"line":220,"column":45}}},"14":{"name":"(anonymous_14)","line":232,"loc":{"start":{"line":232,"column":30},"end":{"line":232,"column":41}}},"15":{"name":"(anonymous_15)","line":246,"loc":{"start":{"line":246,"column":26},"end":{"line":246,"column":44}}},"16":{"name":"(anonymous_16)","line":255,"loc":{"start":{"line":255,"column":29},"end":{"line":255,"column":51}}},"17":{"name":"(anonymous_17)","line":268,"loc":{"start":{"line":268,"column":36},"end":{"line":268,"column":47}}},"18":{"name":"(anonymous_18)","line":269,"loc":{"start":{"line":269,"column":26},"end":{"line":269,"column":42}}},"19":{"name":"(anonymous_19)","line":293,"loc":{"start":{"line":293,"column":38},"end":{"line":293,"column":67}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":45}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":29}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":27}},"6":{"start":{"line":26,"column":0},"end":{"line":29,"column":1}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":20}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":22}},"9":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":25}},"11":{"start":{"line":47,"column":0},"end":{"line":49,"column":2}},"12":{"start":{"line":48,"column":2},"end":{"line":48,"column":47}},"13":{"start":{"line":58,"column":0},"end":{"line":70,"column":2}},"14":{"start":{"line":59,"column":2},"end":{"line":59,"column":23}},"15":{"start":{"line":60,"column":2},"end":{"line":60,"column":55}},"16":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"17":{"start":{"line":63,"column":4},"end":{"line":63,"column":57}},"18":{"start":{"line":66,"column":2},"end":{"line":66,"column":46}},"19":{"start":{"line":67,"column":2},"end":{"line":67,"column":27}},"20":{"start":{"line":69,"column":2},"end":{"line":69,"column":15}},"21":{"start":{"line":72,"column":0},"end":{"line":90,"column":2}},"22":{"start":{"line":73,"column":2},"end":{"line":73,"column":26}},"23":{"start":{"line":75,"column":2},"end":{"line":77,"column":3}},"24":{"start":{"line":76,"column":4},"end":{"line":76,"column":29}},"25":{"start":{"line":79,"column":2},"end":{"line":81,"column":3}},"26":{"start":{"line":80,"column":4},"end":{"line":80,"column":65}},"27":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"28":{"start":{"line":85,"column":4},"end":{"line":85,"column":77}},"29":{"start":{"line":88,"column":2},"end":{"line":88,"column":35}},"30":{"start":{"line":89,"column":2},"end":{"line":89,"column":15}},"31":{"start":{"line":99,"column":0},"end":{"line":103,"column":2}},"32":{"start":{"line":100,"column":2},"end":{"line":100,"column":46}},"33":{"start":{"line":101,"column":2},"end":{"line":101,"column":39}},"34":{"start":{"line":102,"column":2},"end":{"line":102,"column":15}},"35":{"start":{"line":112,"column":0},"end":{"line":118,"column":2}},"36":{"start":{"line":113,"column":2},"end":{"line":113,"column":47}},"37":{"start":{"line":114,"column":2},"end":{"line":116,"column":3}},"38":{"start":{"line":115,"column":4},"end":{"line":115,"column":53}},"39":{"start":{"line":117,"column":2},"end":{"line":117,"column":33}},"40":{"start":{"line":127,"column":0},"end":{"line":133,"column":2}},"41":{"start":{"line":128,"column":2},"end":{"line":128,"column":48}},"42":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"43":{"start":{"line":130,"column":4},"end":{"line":130,"column":54}},"44":{"start":{"line":132,"column":2},"end":{"line":132,"column":31}},"45":{"start":{"line":142,"column":0},"end":{"line":162,"column":2}},"46":{"start":{"line":143,"column":2},"end":{"line":143,"column":28}},"47":{"start":{"line":144,"column":2},"end":{"line":144,"column":32}},"48":{"start":{"line":145,"column":2},"end":{"line":145,"column":14}},"49":{"start":{"line":147,"column":2},"end":{"line":147,"column":25}},"50":{"start":{"line":147,"column":13},"end":{"line":147,"column":25}},"51":{"start":{"line":149,"column":2},"end":{"line":154,"column":3}},"52":{"start":{"line":150,"column":4},"end":{"line":150,"column":23}},"53":{"start":{"line":152,"column":4},"end":{"line":152,"column":20}},"54":{"start":{"line":153,"column":4},"end":{"line":153,"column":30}},"55":{"start":{"line":156,"column":2},"end":{"line":156,"column":47}},"56":{"start":{"line":156,"column":35},"end":{"line":156,"column":47}},"57":{"start":{"line":158,"column":2},"end":{"line":158,"column":42}},"58":{"start":{"line":159,"column":2},"end":{"line":159,"column":33}},"59":{"start":{"line":161,"column":2},"end":{"line":161,"column":15}},"60":{"start":{"line":190,"column":0},"end":{"line":200,"column":2}},"61":{"start":{"line":191,"column":2},"end":{"line":191,"column":28}},"62":{"start":{"line":191,"column":21},"end":{"line":191,"column":28}},"63":{"start":{"line":193,"column":2},"end":{"line":193,"column":58}},"64":{"start":{"line":194,"column":2},"end":{"line":199,"column":11}},"65":{"start":{"line":195,"column":4},"end":{"line":195,"column":35}},"66":{"start":{"line":196,"column":4},"end":{"line":198,"column":41}},"67":{"start":{"line":209,"column":0},"end":{"line":211,"column":2}},"68":{"start":{"line":210,"column":2},"end":{"line":210,"column":36}},"69":{"start":{"line":220,"column":0},"end":{"line":224,"column":2}},"70":{"start":{"line":221,"column":2},"end":{"line":221,"column":28}},"71":{"start":{"line":222,"column":2},"end":{"line":222,"column":25}},"72":{"start":{"line":222,"column":12},"end":{"line":222,"column":25}},"73":{"start":{"line":223,"column":2},"end":{"line":223,"column":22}},"74":{"start":{"line":232,"column":0},"end":{"line":234,"column":2}},"75":{"start":{"line":233,"column":2},"end":{"line":233,"column":31}},"76":{"start":{"line":246,"column":0},"end":{"line":261,"column":2}},"77":{"start":{"line":247,"column":2},"end":{"line":247,"column":28}},"78":{"start":{"line":249,"column":2},"end":{"line":252,"column":3}},"79":{"start":{"line":250,"column":4},"end":{"line":250,"column":13}},"80":{"start":{"line":251,"column":4},"end":{"line":251,"column":20}},"81":{"start":{"line":254,"column":2},"end":{"line":260,"column":3}},"82":{"start":{"line":255,"column":4},"end":{"line":257,"column":11}},"83":{"start":{"line":256,"column":6},"end":{"line":256,"column":27}},"84":{"start":{"line":259,"column":4},"end":{"line":259,"column":25}},"85":{"start":{"line":268,"column":0},"end":{"line":272,"column":2}},"86":{"start":{"line":269,"column":2},"end":{"line":271,"column":5}},"87":{"start":{"line":270,"column":4},"end":{"line":270,"column":20}},"88":{"start":{"line":293,"column":0},"end":{"line":303,"column":2}},"89":{"start":{"line":294,"column":2},"end":{"line":294,"column":23}},"90":{"start":{"line":295,"column":2},"end":{"line":295,"column":51}},"91":{"start":{"line":296,"column":2},"end":{"line":299,"column":3}},"92":{"start":{"line":297,"column":4},"end":{"line":297,"column":21}},"93":{"start":{"line":298,"column":4},"end":{"line":298,"column":20}},"94":{"start":{"line":300,"column":2},"end":{"line":300,"column":35}},"95":{"start":{"line":301,"column":2},"end":{"line":301,"column":66}},"96":{"start":{"line":301,"column":14},"end":{"line":301,"column":66}},"97":{"start":{"line":302,"column":2},"end":{"line":302,"column":27}}},"branchMap":{"1":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":42},"end":{"line":60,"column":47}},{"start":{"line":60,"column":50},"end":{"line":60,"column":54}}]},"2":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"3":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"4":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"5":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"6":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]},"7":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"8":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":2},"end":{"line":147,"column":2}},{"start":{"line":147,"column":2},"end":{"line":147,"column":2}}]},"9":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":2},"end":{"line":149,"column":2}},{"start":{"line":149,"column":2},"end":{"line":149,"column":2}}]},"10":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":2},"end":{"line":156,"column":2}},{"start":{"line":156,"column":2},"end":{"line":156,"column":2}}]},"11":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":5},"end":{"line":156,"column":11}},{"start":{"line":156,"column":15},"end":{"line":156,"column":33}}]},"12":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"13":{"line":196,"type":"cond-expr","locations":[{"start":{"line":197,"column":6},"end":{"line":197,"column":14}},{"start":{"line":198,"column":6},"end":{"line":198,"column":40}}]},"14":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":9},"end":{"line":210,"column":27}},{"start":{"line":210,"column":31},"end":{"line":210,"column":35}}]},"15":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":2},"end":{"line":222,"column":2}},{"start":{"line":222,"column":2},"end":{"line":222,"column":2}}]},"16":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"17":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":2},"end":{"line":254,"column":2}},{"start":{"line":254,"column":2},"end":{"line":254,"column":2}}]},"18":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":2},"end":{"line":296,"column":2}},{"start":{"line":296,"column":2},"end":{"line":296,"column":2}}]},"19":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":2},"end":{"line":301,"column":2}},{"start":{"line":301,"column":2},"end":{"line":301,"column":2}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback-phase","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","var g = require('strong-globalize')();","","var Phase = require('./phase');","var zipMerge = require('./merge-name-lists');","var async = require('async');","","module.exports = PhaseList;","","/**"," * An ordered list of phases."," *"," * ```js"," * var PhaseList = require('loopback-phase').PhaseList;"," * var phases = new PhaseList();"," * phases.add('my-phase');"," * ```"," *"," * @class PhaseList"," */","","function PhaseList() {","  this._phases = [];","  this._phaseMap = {};","}","","/**"," * Get the first `Phase` in the list."," *"," * @returns {Phase} The first phase."," */","","PhaseList.prototype.first = function() {","  return this._phases[0];","};","","/**"," * Get the last `Phase` in the list."," *"," * @returns {Phase} The last phase."," */","","PhaseList.prototype.last = function() {","  return this._phases[this._phases.length - 1];","};","","/**"," * Add one or more phases to the list."," *"," * @param {Phase|String|String[]} phase The phase (or phases) to be added."," * @returns {Phase|Phase[]} The added phase or phases."," */","","PhaseList.prototype.add = function(phase) {","  var phaseList = this;","  var phaseArray = Array.isArray(phase) ? phase : null;","","  if(phaseArray) {","    return phaseArray.map(phaseList.add.bind(phaseList));","  }","","  phase = this._resolveNameAndAddToMap(phase);","  this._phases.push(phase);","","  return phase;","};","","PhaseList.prototype._resolveNameAndAddToMap = function(phaseOrName) {","  var phase = phaseOrName;","","  if(typeof phase === 'string') {","    phase = new Phase(phase);","  }","","  if (phase.id in this._phaseMap) {","    throw new Error(g.f('Phase \"%s\" already exists.', phase.id));","  }","","","  if(!phase.__isPhase__) {","    throw new Error(g.f('Cannot add a non phase object to a {{PhaseList}}'));","  }","","  this._phaseMap[phase.id] = phase;","  return phase;","};","","/**"," * Add a new phase at the specified index."," * @param {Number} index The zero-based index."," * @param {String|String[]} phase The name of the phase to add."," * @returns {Phase} The added phase."," */","","PhaseList.prototype.addAt = function(index, phase) {","  phase = this._resolveNameAndAddToMap(phase);","  this._phases.splice(index, 0, phase);","  return phase;","};","","/**"," * Add a new phase as the next one after the given phase."," * @param {String} after The referential phase."," * @param {String|String[]} phase The name of the phase to add."," * @returns {Phase} The added phase."," */","","PhaseList.prototype.addAfter = function(after, phase) {","  var ix = this.getPhaseNames().indexOf(after);","  if (ix === -1) {","    throw new Error(g.f('Unknown phase: %s', after));","  }","  return this.addAt(ix+1, phase);","};","","/**"," * Add a new phase as the previous one before the given phase."," * @param {String} before The referential phase."," * @param {String|String[]} phase The name of the phase to add."," * @returns {Phase} The added phase."," */","","PhaseList.prototype.addBefore = function(before, phase) {","  var ix = this.getPhaseNames().indexOf(before);","  if (ix === -1) {","    throw new Error(g.f('Unknown phase: %s', before));","  }","  return this.addAt(ix, phase);","};","","/**"," * Remove a `Phase` from the list."," *"," * @param {Phase|String} phase The phase to be removed."," * @returns {Phase} The removed phase."," */","","PhaseList.prototype.remove = function(phase) {","  var phases = this._phases;","  var phaseMap = this._phaseMap;","  var phaseId;","","  if(!phase) return null;","","  if(typeof phase === 'object') {","    phaseId = phase.id;","  } else {","    phaseId = phase;","    phase = phaseMap[phaseId];","  }","","  if(!phase || !phase.__isPhase__) return null;","","  phases.splice(phases.indexOf(phase), 1);","  delete this._phaseMap[phaseId];","","  return phase;","};","","/**"," * Merge the provided list of names with the existing phases"," * in such way that the order of phases is preserved."," *"," * **Example**"," *"," * ```js"," * // Initial list of phases"," * phaseList.add(['initial', 'session', 'auth', 'routes', 'files', 'final']);"," *"," * // zip-merge more phases"," * phaseList.zipMerge(["," *   'initial', 'postinit', 'preauth', 'auth',"," *   'routes', 'subapps', 'final', 'last'"," * ]);"," *"," * // print the result"," * console.log('Result:', phaseList.getPhaseNames());"," * // Result: ["," * //   'initial', 'postinit', 'preauth', 'session', 'auth',"," * //   'routes', 'subapps', 'files', 'final', 'last'"," * // ]"," * ```"," *"," * @param {String[]} names List of phase names to zip-merge"," */","PhaseList.prototype.zipMerge = function(names) {","  if (!names.length) return;","","  var mergedNames = zipMerge(this.getPhaseNames(), names);","  this._phases = mergedNames.map(function(name) {","    var existing = this.find(name);","    return existing ?","      existing :","      this._resolveNameAndAddToMap(name);","  }, this);","};","","/**"," * Find a `Phase` from the list."," *"," * @param {String} id The phase identifier"," * @returns {Phase} The `Phase` with the given `id`."," */","","PhaseList.prototype.find = function(id) {","  return this._phaseMap[id] || null;","};","","/**"," * Find or add a `Phase` from/into the list."," *"," * @param {String} id The phase identifier"," * @returns {Phase} The `Phase` with the given `id`."," */","","PhaseList.prototype.findOrAdd = function(id) {","  var phase = this.find(id);","  if(phase) return phase;","  return this.add(id);","};","","/**"," * Get the list of phases as an array of `Phase` objects."," *"," * @returns {Phase[]} An array of phases."," */","","PhaseList.prototype.toArray = function() {","  return this._phases.slice(0);","};","","/**"," * Launch the phases contained in the list. If there are no phases"," * in the list `process.nextTick` is called with the provided callback."," *"," * @param {Object} [context] The context of each `Phase` handler."," * @callback {Function} cb"," * @param {Error} err Any error that occured during a phase contained"," * in the list."," */","","PhaseList.prototype.run = function(ctx, cb) {","  var phases = this._phases;","","  if(typeof ctx === 'function') {","    cb = ctx;","    ctx = undefined;","  }","","  if(phases.length) {","    async.eachSeries(phases, function(phase, next) {","      phase.run(ctx, next);","    }, cb);","  } else {","    process.nextTick(cb);","  }","};","","/**"," * Get an array of phase identifiers."," * @returns {String[]} phaseNames"," */","","PhaseList.prototype.getPhaseNames = function() {","  return this._phases.map(function(phase) {","    return phase.id;","  });","};","","/**"," * Register a phase handler for the given phase (and sub-phase)."," *"," * **Example**"," *"," * ```js"," * // register via phase.use()"," * phaseList.registerHandler('routes', function(ctx, next) { next(); });"," * // register via phase.before()"," * phaseList.registerHandler('auth:before', function(ctx, next) { next(); });"," * // register via phase.after()"," * phaseList.registerHandler('auth:after', function(ctx, next) { next(); });"," * ```"," *"," * @param {String} phaseName Name of an existing phase, optionally with"," *   \":before\" or \":after\" suffix."," * @param {Function(Object, Function)} handler The handler function to register"," *   with the given phase."," */","PhaseList.prototype.registerHandler = function(phaseName, handler) {","  var subphase = 'use';","  var m = phaseName.match(/^(.+):(before|after)$/);","  if (m) {","    phaseName = m[1];","    subphase = m[2];","  }","  var phase = this.find(phaseName);","  if (!phase) throw new Error(g.f('Unknown phase %s', phaseName));","  phase[subphase](handler);","};",""],"l":{"6":1,"8":1,"9":1,"10":1,"12":1,"26":1,"27":0,"28":0,"37":1,"38":0,"47":1,"48":0,"58":1,"59":0,"60":0,"62":0,"63":0,"66":0,"67":0,"69":0,"72":1,"73":0,"75":0,"76":0,"79":0,"80":0,"84":0,"85":0,"88":0,"89":0,"99":1,"100":0,"101":0,"102":0,"112":1,"113":0,"114":0,"115":0,"117":0,"127":1,"128":0,"129":0,"130":0,"132":0,"142":1,"143":0,"144":0,"145":0,"147":0,"149":0,"150":0,"152":0,"153":0,"156":0,"158":0,"159":0,"161":0,"190":1,"191":0,"193":0,"194":0,"195":0,"196":0,"209":1,"210":0,"220":1,"221":0,"222":0,"223":0,"232":1,"233":0,"246":1,"247":0,"249":0,"250":0,"251":0,"254":0,"255":0,"256":0,"259":0,"268":1,"269":0,"270":0,"293":1,"294":0,"295":0,"296":0,"297":0,"298":0,"300":0,"301":0,"302":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-phase/lib/phase.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-phase/lib/phase.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":1,"16":0,"17":0,"18":1,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"Phase","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":28}}},"2":{"name":"(anonymous_2)","line":82,"loc":{"start":{"line":82,"column":22},"end":{"line":82,"column":40}}},"3":{"name":"(anonymous_3)","line":94,"loc":{"start":{"line":94,"column":25},"end":{"line":94,"column":43}}},"4":{"name":"(anonymous_4)","line":106,"loc":{"start":{"line":106,"column":24},"end":{"line":106,"column":42}}},"5":{"name":"(anonymous_5)","line":126,"loc":{"start":{"line":126,"column":22},"end":{"line":126,"column":40}}},"6":{"name":"runHandler","line":134,"loc":{"start":{"line":134,"column":2},"end":{"line":134,"column":37}}},"7":{"name":"runHandlers","line":139,"loc":{"start":{"line":139,"column":2},"end":{"line":139,"column":39}}},"8":{"name":"(anonymous_8)","line":157,"loc":{"start":{"line":157,"column":27},"end":{"line":157,"column":38}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":23}},"3":{"start":{"line":46,"column":0},"end":{"line":56,"column":1}},"4":{"start":{"line":47,"column":2},"end":{"line":50,"column":3}},"5":{"start":{"line":48,"column":4},"end":{"line":48,"column":17}},"6":{"start":{"line":49,"column":4},"end":{"line":49,"column":20}},"7":{"start":{"line":51,"column":2},"end":{"line":51,"column":15}},"8":{"start":{"line":52,"column":2},"end":{"line":52,"column":31}},"9":{"start":{"line":53,"column":2},"end":{"line":53,"column":21}},"10":{"start":{"line":54,"column":2},"end":{"line":54,"column":27}},"11":{"start":{"line":55,"column":2},"end":{"line":55,"column":26}},"12":{"start":{"line":82,"column":0},"end":{"line":85,"column":2}},"13":{"start":{"line":83,"column":2},"end":{"line":83,"column":30}},"14":{"start":{"line":84,"column":2},"end":{"line":84,"column":14}},"15":{"start":{"line":94,"column":0},"end":{"line":97,"column":2}},"16":{"start":{"line":95,"column":2},"end":{"line":95,"column":36}},"17":{"start":{"line":96,"column":2},"end":{"line":96,"column":14}},"18":{"start":{"line":106,"column":0},"end":{"line":109,"column":2}},"19":{"start":{"line":107,"column":2},"end":{"line":107,"column":35}},"20":{"start":{"line":108,"column":2},"end":{"line":108,"column":14}},"21":{"start":{"line":126,"column":0},"end":{"line":150,"column":2}},"22":{"start":{"line":127,"column":2},"end":{"line":130,"column":3}},"23":{"start":{"line":128,"column":4},"end":{"line":128,"column":13}},"24":{"start":{"line":129,"column":4},"end":{"line":129,"column":13}},"25":{"start":{"line":132,"column":2},"end":{"line":132,"column":18}},"26":{"start":{"line":134,"column":2},"end":{"line":136,"column":3}},"27":{"start":{"line":135,"column":4},"end":{"line":135,"column":23}},"28":{"start":{"line":139,"column":2},"end":{"line":146,"column":3}},"29":{"start":{"line":141,"column":4},"end":{"line":145,"column":5}},"30":{"start":{"line":142,"column":6},"end":{"line":142,"column":45}},"31":{"start":{"line":144,"column":6},"end":{"line":144,"column":51}},"32":{"start":{"line":148,"column":2},"end":{"line":149,"column":21}},"33":{"start":{"line":157,"column":0},"end":{"line":159,"column":2}},"34":{"start":{"line":158,"column":2},"end":{"line":158,"column":17}},"35":{"start":{"line":166,"column":0},"end":{"line":166,"column":35}}},"branchMap":{"1":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"2":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":6},"end":{"line":47,"column":28}},{"start":{"line":47,"column":32},"end":{"line":47,"column":53}}]},"3":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":17},"end":{"line":52,"column":24}},{"start":{"line":52,"column":28},"end":{"line":52,"column":30}}]},"4":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"5":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]}},"code":["// Copyright IBM Corp. 2014. All Rights Reserved.","// Node module: loopback-phase","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","var async = require('async');","","module.exports = Phase;","","/**"," * A slice of time in an application. Provides hooks to allow"," * functions to be executed before, during and after, the defined slice."," * Handlers can be registered to a phase using `before()`, `use()`, or `after()`"," * so that they are placed into one of the three stages."," *"," * ```js"," * var Phase = require('loopback-phase').Phase;"," *"," * // Create a phase without id"," * var anonymousPhase = new Phase();"," *"," * // Create a named phase"," * var myPhase1 = new Phase('my-phase');"," *"," * // Create a named phase with id & options"," * var myPhase2 = new Phase('my-phase', {parallel: true});"," *"," * // Create a named phase with options only"," * var myPhase3 = new Phase({id: 'my-phase', parallel: true});"," *"," * ```"," *"," * @class Phase"," *"," * @prop {String} id The name or identifier of the `Phase`."," * @prop {Object} options The options to configure the `Phase`"," *"," * @param {String} [id] The name or identifier of the `Phase`."," * @options {Object} [options] Options for the `Phase`"," * @property {String} [id] The name or identifier of the Phase"," * @property {Boolean} [parallel] To execute handlers in the same stage"," * in parallel"," * @end"," */","","function Phase(id, options) {","  if (typeof id === 'object' && options === undefined) {","    options = id;","    id = options.id;","  }","  this.id = id;","  this.options = options || {};","  this.handlers = [];","  this.beforeHandlers = [];","  this.afterHandlers = [];","}","","/**"," * Register a phase handler. The handler will be executed"," * once the phase is launched. Handlers must callback once"," * complete. If the handler calls back with an error, the phase will immediately"," * halt execution and call the callback provided to"," * `phase.run(callback)`."," *"," * **Example**"," *"," * ```js"," * phase.use(function(ctx, next) {"," *   // specify an error if one occurred..."," *   var err = null;"," *   console.log(ctx.message, 'world!'); // => hello world"," *   next(err);"," * });"," *"," * phase.run({message: 'hello'}, function(err) {"," *   if(err) return console.error('phase has errored', err);"," *   console.log('phase has finished');"," * });"," * ```"," */","","Phase.prototype.use = function(handler) {","  this.handlers.push(handler);","  return this;","};","","/**"," * Register a phase handler to be executed before the phase begins."," * See `use()` for an example."," *"," * @param {Function} handler"," */","","Phase.prototype.before = function(handler) {","  this.beforeHandlers.push(handler);","  return this;","};","","/**"," * Register a phase handler to be executed after the phase completes."," * See `use()` for an example."," *"," * @param {Function} handler"," */","","Phase.prototype.after = function(handler) {","  this.afterHandlers.push(handler);","  return this;","};","","/**"," * Begin the execution of a phase and its handlers. Provide"," * a context object to be passed as the first argument for each handler"," * function."," *"," * The handlers are executed in serial stage by stage: beforeHandlers, handlers,"," * and afterHandlers. Handlers within the same stage are executed in serial by"," * default and in parallel only if the options.parallel is true,"," *"," * @param {Object} [context] The scope applied to each handler function."," * @callback {Function} callback"," * @param {Error} err Any `Error` that occurs during the execution of"," * the phase."," */","","Phase.prototype.run = function(ctx, cb) {","  if (typeof ctx === 'function') {","    cb = ctx;","    ctx = {};","  }","","  var self = this;","  // Run a single handler with ctx","  function runHandler(handler, done) {","    handler(ctx, done);","  }","","  // Run an array of handlers with ctx","  function runHandlers(handlers, done) {","    // Only run the handlers in parallel if the options.parallel is true","    if (self.options.parallel) {","      async.each(handlers, runHandler, done);","    } else {","      async.eachSeries(handlers, runHandler, done);","    }","  }","","  async.eachSeries([this.beforeHandlers, this.handlers, this.afterHandlers],","    runHandlers, cb);","};","","","/**"," * Return the `Phase` as a string."," */","","Phase.prototype.toString = function() {","  return this.id;","};","","// Internal flag to be used instead of","// `instanceof Phase` which breaks","// when there are two instances of","// `require('loopback-phase')","","Phase.prototype.__isPhase__ = true;",""],"l":{"6":1,"8":1,"46":1,"47":0,"48":0,"49":0,"51":0,"52":0,"53":0,"54":0,"55":0,"82":1,"83":0,"84":0,"94":1,"95":0,"96":0,"106":1,"107":0,"108":0,"126":1,"127":0,"128":0,"129":0,"132":0,"134":1,"135":0,"139":1,"141":0,"142":0,"144":0,"148":0,"157":1,"158":0,"166":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-phase/node_modules/async/lib/async.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-phase/node_modules/async/lib/async.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1,"19":0,"20":1,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":1,"54":1,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":1,"89":0,"90":0,"91":1,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":6,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":1,"124":6,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":1,"142":1,"143":0,"144":1,"145":0,"146":1,"147":0,"148":0,"149":0,"150":0,"151":0,"152":1,"153":1,"154":1,"155":0,"156":0,"157":0,"158":1,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":1,"173":1,"174":1,"175":1,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":1,"188":1,"189":1,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":1,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":1,"208":1,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":1,"217":1,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":1,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":1,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":1,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":1,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":1,"339":0,"340":1,"341":0,"342":1,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":1,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":1,"372":0,"373":0,"374":0,"375":1,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":1,"383":1,"384":1,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":1,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":1,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":1,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":1,"415":0,"416":0,"417":1,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":1,"467":1,"468":0,"469":1,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":1,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":1,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":1,"532":2,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":1,"544":1,"545":1,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":1,"570":0,"571":0,"572":1,"573":0,"574":0,"575":0,"576":0,"577":1,"578":0,"579":0,"580":0,"581":0,"582":1,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":1,"595":0,"596":1,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":1,"608":1,"609":1,"610":1,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":1,"618":1,"619":0,"620":0,"621":0,"622":0},"b":{"1":[1,0],"2":[0,0],"3":[1,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,1],"9":[1,1],"10":[0,0],"11":[1,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[1,0],"129":[1,1],"130":[0,0],"131":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":6,"33":0,"34":0,"35":0,"36":6,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":2,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":1},"end":{"line":10,"column":13}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":23},"end":{"line":22,"column":35}}},"3":{"name":"only_once","line":27,"loc":{"start":{"line":27,"column":4},"end":{"line":27,"column":27}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":15},"end":{"line":29,"column":26}}},"5":{"name":"(anonymous_5)","line":40,"loc":{"start":{"line":40,"column":36},"end":{"line":40,"column":51}}},"6":{"name":"(anonymous_6)","line":44,"loc":{"start":{"line":44,"column":16},"end":{"line":44,"column":41}}},"7":{"name":"(anonymous_7)","line":50,"loc":{"start":{"line":50,"column":15},"end":{"line":50,"column":40}}},"8":{"name":"(anonymous_8)","line":55,"loc":{"start":{"line":55,"column":19},"end":{"line":55,"column":38}}},"9":{"name":"(anonymous_9)","line":61,"loc":{"start":{"line":61,"column":18},"end":{"line":61,"column":49}}},"10":{"name":"(anonymous_10)","line":65,"loc":{"start":{"line":65,"column":19},"end":{"line":65,"column":38}}},"11":{"name":"(anonymous_11)","line":71,"loc":{"start":{"line":71,"column":16},"end":{"line":71,"column":31}}},"12":{"name":"(anonymous_12)","line":89,"loc":{"start":{"line":89,"column":29},"end":{"line":89,"column":43}}},"13":{"name":"(anonymous_13)","line":96,"loc":{"start":{"line":96,"column":29},"end":{"line":96,"column":43}}},"14":{"name":"(anonymous_14)","line":105,"loc":{"start":{"line":105,"column":33},"end":{"line":105,"column":47}}},"15":{"name":"(anonymous_15)","line":115,"loc":{"start":{"line":115,"column":17},"end":{"line":115,"column":52}}},"16":{"name":"(anonymous_16)","line":116,"loc":{"start":{"line":116,"column":31},"end":{"line":116,"column":43}}},"17":{"name":"(anonymous_17)","line":121,"loc":{"start":{"line":121,"column":19},"end":{"line":121,"column":32}}},"18":{"name":"done","line":124,"loc":{"start":{"line":124,"column":8},"end":{"line":124,"column":27}}},"19":{"name":"(anonymous_19)","line":127,"loc":{"start":{"line":127,"column":25},"end":{"line":127,"column":37}}},"20":{"name":"(anonymous_20)","line":139,"loc":{"start":{"line":139,"column":23},"end":{"line":139,"column":58}}},"21":{"name":"(anonymous_21)","line":140,"loc":{"start":{"line":140,"column":31},"end":{"line":140,"column":43}}},"22":{"name":"(anonymous_22)","line":145,"loc":{"start":{"line":145,"column":22},"end":{"line":145,"column":34}}},"23":{"name":"(anonymous_23)","line":146,"loc":{"start":{"line":146,"column":37},"end":{"line":146,"column":52}}},"24":{"name":"(anonymous_24)","line":149,"loc":{"start":{"line":149,"column":31},"end":{"line":149,"column":43}}},"25":{"name":"(anonymous_25)","line":166,"loc":{"start":{"line":166,"column":22},"end":{"line":166,"column":64}}},"26":{"name":"(anonymous_26)","line":172,"loc":{"start":{"line":172,"column":21},"end":{"line":172,"column":38}}},"27":{"name":"(anonymous_27)","line":174,"loc":{"start":{"line":174,"column":15},"end":{"line":174,"column":50}}},"28":{"name":"(anonymous_28)","line":175,"loc":{"start":{"line":175,"column":35},"end":{"line":175,"column":47}}},"29":{"name":"replenish","line":183,"loc":{"start":{"line":183,"column":13},"end":{"line":183,"column":35}}},"30":{"name":"(anonymous_30)","line":191,"loc":{"start":{"line":191,"column":47},"end":{"line":191,"column":62}}},"31":{"name":"(anonymous_31)","line":194,"loc":{"start":{"line":194,"column":39},"end":{"line":194,"column":51}}},"32":{"name":"(anonymous_32)","line":213,"loc":{"start":{"line":213,"column":21},"end":{"line":213,"column":35}}},"33":{"name":"(anonymous_33)","line":214,"loc":{"start":{"line":214,"column":15},"end":{"line":214,"column":27}}},"34":{"name":"(anonymous_34)","line":219,"loc":{"start":{"line":219,"column":26},"end":{"line":219,"column":46}}},"35":{"name":"(anonymous_35)","line":220,"loc":{"start":{"line":220,"column":15},"end":{"line":220,"column":27}}},"36":{"name":"(anonymous_36)","line":225,"loc":{"start":{"line":225,"column":19},"end":{"line":225,"column":33}}},"37":{"name":"(anonymous_37)","line":226,"loc":{"start":{"line":226,"column":15},"end":{"line":226,"column":27}}},"38":{"name":"(anonymous_38)","line":233,"loc":{"start":{"line":233,"column":20},"end":{"line":233,"column":63}}},"39":{"name":"(anonymous_39)","line":234,"loc":{"start":{"line":234,"column":24},"end":{"line":234,"column":40}}},"40":{"name":"(anonymous_40)","line":238,"loc":{"start":{"line":238,"column":24},"end":{"line":238,"column":47}}},"41":{"name":"(anonymous_41)","line":239,"loc":{"start":{"line":239,"column":34},"end":{"line":239,"column":49}}},"42":{"name":"(anonymous_42)","line":245,"loc":{"start":{"line":245,"column":24},"end":{"line":245,"column":47}}},"43":{"name":"(anonymous_43)","line":246,"loc":{"start":{"line":246,"column":34},"end":{"line":246,"column":52}}},"44":{"name":"(anonymous_44)","line":250,"loc":{"start":{"line":250,"column":15},"end":{"line":250,"column":30}}},"45":{"name":"(anonymous_45)","line":257,"loc":{"start":{"line":257,"column":21},"end":{"line":257,"column":63}}},"46":{"name":"(anonymous_46)","line":261,"loc":{"start":{"line":261,"column":20},"end":{"line":261,"column":36}}},"47":{"name":"(anonymous_47)","line":267,"loc":{"start":{"line":267,"column":19},"end":{"line":267,"column":60}}},"48":{"name":"(anonymous_48)","line":268,"loc":{"start":{"line":268,"column":30},"end":{"line":268,"column":53}}},"49":{"name":"(anonymous_49)","line":269,"loc":{"start":{"line":269,"column":30},"end":{"line":269,"column":48}}},"50":{"name":"(anonymous_50)","line":273,"loc":{"start":{"line":273,"column":11},"end":{"line":273,"column":26}}},"51":{"name":"(anonymous_51)","line":282,"loc":{"start":{"line":282,"column":24},"end":{"line":282,"column":65}}},"52":{"name":"(anonymous_52)","line":283,"loc":{"start":{"line":283,"column":33},"end":{"line":283,"column":46}}},"53":{"name":"(anonymous_53)","line":291,"loc":{"start":{"line":291,"column":18},"end":{"line":291,"column":61}}},"54":{"name":"(anonymous_54)","line":293,"loc":{"start":{"line":293,"column":24},"end":{"line":293,"column":40}}},"55":{"name":"(anonymous_55)","line":296,"loc":{"start":{"line":296,"column":20},"end":{"line":296,"column":43}}},"56":{"name":"(anonymous_56)","line":297,"loc":{"start":{"line":297,"column":30},"end":{"line":297,"column":43}}},"57":{"name":"(anonymous_57)","line":303,"loc":{"start":{"line":303,"column":11},"end":{"line":303,"column":26}}},"58":{"name":"(anonymous_58)","line":304,"loc":{"start":{"line":304,"column":39},"end":{"line":304,"column":55}}},"59":{"name":"(anonymous_59)","line":306,"loc":{"start":{"line":306,"column":16},"end":{"line":306,"column":29}}},"60":{"name":"(anonymous_60)","line":317,"loc":{"start":{"line":317,"column":18},"end":{"line":317,"column":61}}},"61":{"name":"(anonymous_61)","line":319,"loc":{"start":{"line":319,"column":24},"end":{"line":319,"column":40}}},"62":{"name":"(anonymous_62)","line":322,"loc":{"start":{"line":322,"column":20},"end":{"line":322,"column":43}}},"63":{"name":"(anonymous_63)","line":323,"loc":{"start":{"line":323,"column":30},"end":{"line":323,"column":43}}},"64":{"name":"(anonymous_64)","line":329,"loc":{"start":{"line":329,"column":11},"end":{"line":329,"column":26}}},"65":{"name":"(anonymous_65)","line":330,"loc":{"start":{"line":330,"column":39},"end":{"line":330,"column":55}}},"66":{"name":"(anonymous_66)","line":332,"loc":{"start":{"line":332,"column":16},"end":{"line":332,"column":29}}},"67":{"name":"(anonymous_67)","line":340,"loc":{"start":{"line":340,"column":18},"end":{"line":340,"column":66}}},"68":{"name":"(anonymous_68)","line":341,"loc":{"start":{"line":341,"column":20},"end":{"line":341,"column":43}}},"69":{"name":"(anonymous_69)","line":342,"loc":{"start":{"line":342,"column":24},"end":{"line":342,"column":42}}},"70":{"name":"(anonymous_70)","line":345,"loc":{"start":{"line":345,"column":36},"end":{"line":345,"column":48}}},"71":{"name":"(anonymous_71)","line":351,"loc":{"start":{"line":351,"column":11},"end":{"line":351,"column":26}}},"72":{"name":"(anonymous_72)","line":358,"loc":{"start":{"line":358,"column":17},"end":{"line":358,"column":57}}},"73":{"name":"(anonymous_73)","line":359,"loc":{"start":{"line":359,"column":24},"end":{"line":359,"column":47}}},"74":{"name":"(anonymous_74)","line":360,"loc":{"start":{"line":360,"column":24},"end":{"line":360,"column":37}}},"75":{"name":"(anonymous_75)","line":363,"loc":{"start":{"line":363,"column":36},"end":{"line":363,"column":48}}},"76":{"name":"(anonymous_76)","line":367,"loc":{"start":{"line":367,"column":11},"end":{"line":367,"column":26}}},"77":{"name":"(anonymous_77)","line":374,"loc":{"start":{"line":374,"column":18},"end":{"line":374,"column":58}}},"78":{"name":"(anonymous_78)","line":375,"loc":{"start":{"line":375,"column":24},"end":{"line":375,"column":47}}},"79":{"name":"(anonymous_79)","line":376,"loc":{"start":{"line":376,"column":24},"end":{"line":376,"column":37}}},"80":{"name":"(anonymous_80)","line":379,"loc":{"start":{"line":379,"column":36},"end":{"line":379,"column":48}}},"81":{"name":"(anonymous_81)","line":383,"loc":{"start":{"line":383,"column":11},"end":{"line":383,"column":26}}},"82":{"name":"(anonymous_82)","line":390,"loc":{"start":{"line":390,"column":19},"end":{"line":390,"column":54}}},"83":{"name":"(anonymous_83)","line":391,"loc":{"start":{"line":391,"column":23},"end":{"line":391,"column":46}}},"84":{"name":"(anonymous_84)","line":392,"loc":{"start":{"line":392,"column":24},"end":{"line":392,"column":49}}},"85":{"name":"(anonymous_85)","line":400,"loc":{"start":{"line":400,"column":11},"end":{"line":400,"column":35}}},"86":{"name":"(anonymous_86)","line":405,"loc":{"start":{"line":405,"column":25},"end":{"line":405,"column":48}}},"87":{"name":"(anonymous_87)","line":409,"loc":{"start":{"line":409,"column":54},"end":{"line":409,"column":67}}},"88":{"name":"(anonymous_88)","line":416,"loc":{"start":{"line":416,"column":17},"end":{"line":416,"column":44}}},"89":{"name":"(anonymous_89)","line":417,"loc":{"start":{"line":417,"column":31},"end":{"line":417,"column":43}}},"90":{"name":"(anonymous_90)","line":427,"loc":{"start":{"line":427,"column":26},"end":{"line":427,"column":40}}},"91":{"name":"(anonymous_91)","line":430,"loc":{"start":{"line":430,"column":29},"end":{"line":430,"column":43}}},"92":{"name":"(anonymous_92)","line":438,"loc":{"start":{"line":438,"column":27},"end":{"line":438,"column":39}}},"93":{"name":"(anonymous_93)","line":440,"loc":{"start":{"line":440,"column":38},"end":{"line":440,"column":52}}},"94":{"name":"(anonymous_94)","line":445,"loc":{"start":{"line":445,"column":20},"end":{"line":445,"column":32}}},"95":{"name":"(anonymous_95)","line":449,"loc":{"start":{"line":449,"column":27},"end":{"line":449,"column":39}}},"96":{"name":"(anonymous_96)","line":455,"loc":{"start":{"line":455,"column":20},"end":{"line":455,"column":33}}},"97":{"name":"(anonymous_97)","line":457,"loc":{"start":{"line":457,"column":31},"end":{"line":457,"column":46}}},"98":{"name":"(anonymous_98)","line":464,"loc":{"start":{"line":464,"column":42},"end":{"line":464,"column":57}}},"99":{"name":"(anonymous_99)","line":470,"loc":{"start":{"line":470,"column":31},"end":{"line":470,"column":43}}},"100":{"name":"(anonymous_100)","line":478,"loc":{"start":{"line":478,"column":24},"end":{"line":478,"column":36}}},"101":{"name":"(anonymous_101)","line":479,"loc":{"start":{"line":479,"column":41},"end":{"line":479,"column":57}}},"102":{"name":"(anonymous_102)","line":487,"loc":{"start":{"line":487,"column":31},"end":{"line":487,"column":43}}},"103":{"name":"(anonymous_103)","line":498,"loc":{"start":{"line":498,"column":18},"end":{"line":498,"column":50}}},"104":{"name":"(anonymous_104)","line":509,"loc":{"start":{"line":509,"column":26},"end":{"line":509,"column":68}}},"105":{"name":"(anonymous_105)","line":510,"loc":{"start":{"line":510,"column":31},"end":{"line":510,"column":60}}},"106":{"name":"(anonymous_106)","line":511,"loc":{"start":{"line":511,"column":23},"end":{"line":511,"column":48}}},"107":{"name":"(anonymous_107)","line":512,"loc":{"start":{"line":512,"column":25},"end":{"line":512,"column":46}}},"108":{"name":"(anonymous_108)","line":520,"loc":{"start":{"line":520,"column":35},"end":{"line":520,"column":55}}},"109":{"name":"(anonymous_109)","line":529,"loc":{"start":{"line":529,"column":22},"end":{"line":529,"column":49}}},"110":{"name":"(anonymous_110)","line":530,"loc":{"start":{"line":530,"column":31},"end":{"line":530,"column":43}}},"111":{"name":"(anonymous_111)","line":538,"loc":{"start":{"line":538,"column":27},"end":{"line":538,"column":47}}},"112":{"name":"(anonymous_112)","line":539,"loc":{"start":{"line":539,"column":19},"end":{"line":539,"column":34}}},"113":{"name":"(anonymous_113)","line":542,"loc":{"start":{"line":542,"column":31},"end":{"line":542,"column":43}}},"114":{"name":"(anonymous_114)","line":553,"loc":{"start":{"line":553,"column":39},"end":{"line":553,"column":51}}},"115":{"name":"(anonymous_115)","line":562,"loc":{"start":{"line":562,"column":20},"end":{"line":562,"column":54}}},"116":{"name":"(anonymous_116)","line":563,"loc":{"start":{"line":563,"column":31},"end":{"line":563,"column":43}}},"117":{"name":"(anonymous_117)","line":565,"loc":{"start":{"line":565,"column":30},"end":{"line":565,"column":54}}},"118":{"name":"(anonymous_118)","line":567,"loc":{"start":{"line":567,"column":23},"end":{"line":567,"column":38}}},"119":{"name":"(anonymous_119)","line":579,"loc":{"start":{"line":579,"column":38},"end":{"line":579,"column":61}}},"120":{"name":"(anonymous_120)","line":580,"loc":{"start":{"line":580,"column":25},"end":{"line":580,"column":40}}},"121":{"name":"(anonymous_121)","line":588,"loc":{"start":{"line":588,"column":15},"end":{"line":588,"column":30}}},"122":{"name":"(anonymous_122)","line":594,"loc":{"start":{"line":594,"column":21},"end":{"line":594,"column":48}}},"123":{"name":"(anonymous_123)","line":598,"loc":{"start":{"line":598,"column":26},"end":{"line":598,"column":59}}},"124":{"name":"(anonymous_124)","line":602,"loc":{"start":{"line":602,"column":19},"end":{"line":602,"column":46}}},"125":{"name":"(anonymous_125)","line":603,"loc":{"start":{"line":603,"column":31},"end":{"line":603,"column":43}}},"126":{"name":"(anonymous_126)","line":605,"loc":{"start":{"line":605,"column":35},"end":{"line":605,"column":59}}},"127":{"name":"(anonymous_127)","line":607,"loc":{"start":{"line":607,"column":23},"end":{"line":607,"column":38}}},"128":{"name":"(anonymous_128)","line":619,"loc":{"start":{"line":619,"column":43},"end":{"line":619,"column":66}}},"129":{"name":"(anonymous_129)","line":620,"loc":{"start":{"line":620,"column":25},"end":{"line":620,"column":40}}},"130":{"name":"(anonymous_130)","line":628,"loc":{"start":{"line":628,"column":15},"end":{"line":628,"column":30}}},"131":{"name":"(anonymous_131)","line":634,"loc":{"start":{"line":634,"column":21},"end":{"line":634,"column":38}}},"132":{"name":"(anonymous_132)","line":635,"loc":{"start":{"line":635,"column":27},"end":{"line":635,"column":44}}},"133":{"name":"(anonymous_133)","line":636,"loc":{"start":{"line":636,"column":21},"end":{"line":636,"column":33}}},"134":{"name":"(anonymous_134)","line":642,"loc":{"start":{"line":642,"column":22},"end":{"line":642,"column":34}}},"135":{"name":"(anonymous_135)","line":650,"loc":{"start":{"line":650,"column":18},"end":{"line":650,"column":32}}},"136":{"name":"(anonymous_136)","line":652,"loc":{"start":{"line":652,"column":15},"end":{"line":652,"column":27}}},"137":{"name":"(anonymous_137)","line":659,"loc":{"start":{"line":659,"column":18},"end":{"line":659,"column":55}}},"138":{"name":"(anonymous_138)","line":661,"loc":{"start":{"line":661,"column":20},"end":{"line":661,"column":37}}},"139":{"name":"(anonymous_139)","line":662,"loc":{"start":{"line":662,"column":18},"end":{"line":662,"column":36}}},"140":{"name":"(anonymous_140)","line":666,"loc":{"start":{"line":666,"column":11},"end":{"line":666,"column":26}}},"141":{"name":"(anonymous_141)","line":673,"loc":{"start":{"line":673,"column":19},"end":{"line":673,"column":55}}},"142":{"name":"(anonymous_142)","line":675,"loc":{"start":{"line":675,"column":21},"end":{"line":675,"column":36}}},"143":{"name":"(anonymous_143)","line":687,"loc":{"start":{"line":687,"column":21},"end":{"line":687,"column":57}}},"144":{"name":"(anonymous_144)","line":688,"loc":{"start":{"line":688,"column":17},"end":{"line":688,"column":32}}},"145":{"name":"(anonymous_145)","line":702,"loc":{"start":{"line":702,"column":18},"end":{"line":702,"column":54}}},"146":{"name":"(anonymous_146)","line":704,"loc":{"start":{"line":704,"column":21},"end":{"line":704,"column":36}}},"147":{"name":"(anonymous_147)","line":716,"loc":{"start":{"line":716,"column":20},"end":{"line":716,"column":56}}},"148":{"name":"(anonymous_148)","line":717,"loc":{"start":{"line":717,"column":17},"end":{"line":717,"column":32}}},"149":{"name":"(anonymous_149)","line":731,"loc":{"start":{"line":731,"column":18},"end":{"line":731,"column":49}}},"150":{"name":"_insert","line":735,"loc":{"start":{"line":735,"column":8},"end":{"line":735,"column":49}}},"151":{"name":"(anonymous_151)","line":744,"loc":{"start":{"line":744,"column":39},"end":{"line":744,"column":50}}},"152":{"name":"(anonymous_152)","line":750,"loc":{"start":{"line":750,"column":22},"end":{"line":750,"column":37}}},"153":{"name":"(anonymous_153)","line":778,"loc":{"start":{"line":778,"column":18},"end":{"line":778,"column":44}}},"154":{"name":"(anonymous_154)","line":781,"loc":{"start":{"line":781,"column":18},"end":{"line":781,"column":30}}},"155":{"name":"(anonymous_155)","line":785,"loc":{"start":{"line":785,"column":21},"end":{"line":785,"column":47}}},"156":{"name":"(anonymous_156)","line":788,"loc":{"start":{"line":788,"column":21},"end":{"line":788,"column":33}}},"157":{"name":"(anonymous_157)","line":795,"loc":{"start":{"line":795,"column":31},"end":{"line":795,"column":43}}},"158":{"name":"(anonymous_158)","line":809,"loc":{"start":{"line":809,"column":20},"end":{"line":809,"column":32}}},"159":{"name":"(anonymous_159)","line":812,"loc":{"start":{"line":812,"column":21},"end":{"line":812,"column":33}}},"160":{"name":"(anonymous_160)","line":815,"loc":{"start":{"line":815,"column":18},"end":{"line":815,"column":29}}},"161":{"name":"(anonymous_161)","line":818,"loc":{"start":{"line":818,"column":19},"end":{"line":818,"column":31}}},"162":{"name":"(anonymous_162)","line":822,"loc":{"start":{"line":822,"column":20},"end":{"line":822,"column":32}}},"163":{"name":"(anonymous_163)","line":835,"loc":{"start":{"line":835,"column":26},"end":{"line":835,"column":57}}},"164":{"name":"_compareTasks","line":837,"loc":{"start":{"line":837,"column":8},"end":{"line":837,"column":36}}},"165":{"name":"_binarySearch","line":841,"loc":{"start":{"line":841,"column":8},"end":{"line":841,"column":56}}},"166":{"name":"_insert","line":855,"loc":{"start":{"line":855,"column":8},"end":{"line":855,"column":54}}},"167":{"name":"(anonymous_167)","line":864,"loc":{"start":{"line":864,"column":39},"end":{"line":864,"column":50}}},"168":{"name":"(anonymous_168)","line":870,"loc":{"start":{"line":870,"column":22},"end":{"line":870,"column":37}}},"169":{"name":"(anonymous_169)","line":890,"loc":{"start":{"line":890,"column":17},"end":{"line":890,"column":53}}},"170":{"name":"(anonymous_170)","line":900,"loc":{"start":{"line":900,"column":18},"end":{"line":900,"column":45}}},"171":{"name":"(anonymous_171)","line":911,"loc":{"start":{"line":911,"column":18},"end":{"line":911,"column":44}}},"172":{"name":"(anonymous_172)","line":915,"loc":{"start":{"line":915,"column":28},"end":{"line":915,"column":43}}},"173":{"name":"process","line":927,"loc":{"start":{"line":927,"column":21},"end":{"line":927,"column":40}}},"174":{"name":"(anonymous_174)","line":939,"loc":{"start":{"line":939,"column":34},"end":{"line":939,"column":50}}},"175":{"name":"(anonymous_175)","line":945,"loc":{"start":{"line":945,"column":27},"end":{"line":945,"column":39}}},"176":{"name":"(anonymous_176)","line":949,"loc":{"start":{"line":949,"column":30},"end":{"line":949,"column":46}}},"177":{"name":"(anonymous_177)","line":958,"loc":{"start":{"line":958,"column":20},"end":{"line":958,"column":32}}},"178":{"name":"(anonymous_178)","line":961,"loc":{"start":{"line":961,"column":21},"end":{"line":961,"column":33}}},"179":{"name":"(anonymous_179)","line":968,"loc":{"start":{"line":968,"column":22},"end":{"line":968,"column":38}}},"180":{"name":"(anonymous_180)","line":969,"loc":{"start":{"line":969,"column":15},"end":{"line":969,"column":29}}},"181":{"name":"(anonymous_181)","line":971,"loc":{"start":{"line":971,"column":40},"end":{"line":971,"column":55}}},"182":{"name":"(anonymous_182)","line":980,"loc":{"start":{"line":980,"column":36},"end":{"line":980,"column":49}}},"183":{"name":"(anonymous_183)","line":994,"loc":{"start":{"line":994,"column":20},"end":{"line":994,"column":42}}},"184":{"name":"(anonymous_184)","line":997,"loc":{"start":{"line":997,"column":27},"end":{"line":997,"column":40}}},"185":{"name":"(anonymous_185)","line":1000,"loc":{"start":{"line":1000,"column":23},"end":{"line":1000,"column":35}}},"186":{"name":"(anonymous_186)","line":1005,"loc":{"start":{"line":1005,"column":31},"end":{"line":1005,"column":43}}},"187":{"name":"(anonymous_187)","line":1014,"loc":{"start":{"line":1014,"column":44},"end":{"line":1014,"column":56}}},"188":{"name":"(anonymous_188)","line":1029,"loc":{"start":{"line":1029,"column":22},"end":{"line":1029,"column":36}}},"189":{"name":"(anonymous_189)","line":1030,"loc":{"start":{"line":1030,"column":13},"end":{"line":1030,"column":25}}},"190":{"name":"(anonymous_190)","line":1035,"loc":{"start":{"line":1035,"column":18},"end":{"line":1035,"column":55}}},"191":{"name":"(anonymous_191)","line":1043,"loc":{"start":{"line":1043,"column":24},"end":{"line":1043,"column":61}}},"192":{"name":"(anonymous_192)","line":1051,"loc":{"start":{"line":1051,"column":16},"end":{"line":1051,"column":46}}},"193":{"name":"(anonymous_193)","line":1053,"loc":{"start":{"line":1053,"column":15},"end":{"line":1053,"column":27}}},"194":{"name":"(anonymous_194)","line":1057,"loc":{"start":{"line":1057,"column":36},"end":{"line":1057,"column":63}}},"195":{"name":"(anonymous_195)","line":1058,"loc":{"start":{"line":1058,"column":47},"end":{"line":1058,"column":59}}},"196":{"name":"(anonymous_196)","line":1064,"loc":{"start":{"line":1064,"column":12},"end":{"line":1064,"column":36}}},"197":{"name":"(anonymous_197)","line":1070,"loc":{"start":{"line":1070,"column":20},"end":{"line":1070,"column":50}}},"198":{"name":"(anonymous_198)","line":1074,"loc":{"start":{"line":1074,"column":21},"end":{"line":1074,"column":56}}},"199":{"name":"(anonymous_199)","line":1075,"loc":{"start":{"line":1075,"column":17},"end":{"line":1075,"column":29}}},"200":{"name":"(anonymous_200)","line":1079,"loc":{"start":{"line":1079,"column":31},"end":{"line":1079,"column":49}}},"201":{"name":"(anonymous_201)","line":1095,"loc":{"start":{"line":1095,"column":20},"end":{"line":1095,"column":44}}},"202":{"name":"next","line":1096,"loc":{"start":{"line":1096,"column":8},"end":{"line":1096,"column":27}}},"203":{"name":"(anonymous_203)","line":1114,"loc":{"start":{"line":1114,"column":19},"end":{"line":1114,"column":31}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":1123,"column":5}},"2":{"start":{"line":12,"column":4},"end":{"line":12,"column":19}},"3":{"start":{"line":15,"column":4},"end":{"line":15,"column":29}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":16}},"5":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"6":{"start":{"line":19,"column":6},"end":{"line":19,"column":34}},"7":{"start":{"line":22,"column":4},"end":{"line":25,"column":6}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":36}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":21}},"10":{"start":{"line":27,"column":4},"end":{"line":34,"column":5}},"11":{"start":{"line":28,"column":8},"end":{"line":28,"column":27}},"12":{"start":{"line":29,"column":8},"end":{"line":33,"column":9}},"13":{"start":{"line":30,"column":12},"end":{"line":30,"column":72}},"14":{"start":{"line":30,"column":24},"end":{"line":30,"column":72}},"15":{"start":{"line":31,"column":12},"end":{"line":31,"column":26}},"16":{"start":{"line":32,"column":12},"end":{"line":32,"column":38}},"17":{"start":{"line":38,"column":4},"end":{"line":38,"column":46}},"18":{"start":{"line":40,"column":4},"end":{"line":42,"column":6}},"19":{"start":{"line":41,"column":8},"end":{"line":41,"column":56}},"20":{"start":{"line":44,"column":4},"end":{"line":48,"column":6}},"21":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"22":{"start":{"line":46,"column":12},"end":{"line":46,"column":37}},"23":{"start":{"line":50,"column":4},"end":{"line":59,"column":6}},"24":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"25":{"start":{"line":52,"column":12},"end":{"line":52,"column":37}},"26":{"start":{"line":54,"column":8},"end":{"line":54,"column":25}},"27":{"start":{"line":55,"column":8},"end":{"line":57,"column":11}},"28":{"start":{"line":56,"column":12},"end":{"line":56,"column":44}},"29":{"start":{"line":58,"column":8},"end":{"line":58,"column":23}},"30":{"start":{"line":61,"column":4},"end":{"line":69,"column":6}},"31":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"32":{"start":{"line":63,"column":12},"end":{"line":63,"column":46}},"33":{"start":{"line":65,"column":8},"end":{"line":67,"column":11}},"34":{"start":{"line":66,"column":12},"end":{"line":66,"column":43}},"35":{"start":{"line":68,"column":8},"end":{"line":68,"column":20}},"36":{"start":{"line":71,"column":4},"end":{"line":82,"column":6}},"37":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"38":{"start":{"line":73,"column":12},"end":{"line":73,"column":36}},"39":{"start":{"line":75,"column":8},"end":{"line":75,"column":22}},"40":{"start":{"line":76,"column":8},"end":{"line":80,"column":9}},"41":{"start":{"line":77,"column":12},"end":{"line":79,"column":13}},"42":{"start":{"line":78,"column":16},"end":{"line":78,"column":29}},"43":{"start":{"line":81,"column":8},"end":{"line":81,"column":20}},"44":{"start":{"line":87,"column":4},"end":{"line":113,"column":5}},"45":{"start":{"line":88,"column":8},"end":{"line":100,"column":9}},"46":{"start":{"line":89,"column":12},"end":{"line":92,"column":14}},"47":{"start":{"line":91,"column":16},"end":{"line":91,"column":33}},"48":{"start":{"line":93,"column":12},"end":{"line":93,"column":48}},"49":{"start":{"line":96,"column":12},"end":{"line":98,"column":14}},"50":{"start":{"line":97,"column":16},"end":{"line":97,"column":34}},"51":{"start":{"line":99,"column":12},"end":{"line":99,"column":48}},"52":{"start":{"line":103,"column":8},"end":{"line":103,"column":42}},"53":{"start":{"line":104,"column":8},"end":{"line":112,"column":9}},"54":{"start":{"line":105,"column":12},"end":{"line":108,"column":14}},"55":{"start":{"line":107,"column":14},"end":{"line":107,"column":31}},"56":{"start":{"line":111,"column":12},"end":{"line":111,"column":48}},"57":{"start":{"line":115,"column":4},"end":{"line":136,"column":6}},"58":{"start":{"line":116,"column":8},"end":{"line":116,"column":46}},"59":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"60":{"start":{"line":118,"column":12},"end":{"line":118,"column":30}},"61":{"start":{"line":120,"column":8},"end":{"line":120,"column":26}},"62":{"start":{"line":121,"column":8},"end":{"line":123,"column":11}},"63":{"start":{"line":122,"column":12},"end":{"line":122,"column":42}},"64":{"start":{"line":124,"column":8},"end":{"line":135,"column":9}},"65":{"start":{"line":125,"column":10},"end":{"line":134,"column":11}},"66":{"start":{"line":126,"column":14},"end":{"line":126,"column":28}},"67":{"start":{"line":127,"column":14},"end":{"line":127,"column":40}},"68":{"start":{"line":130,"column":14},"end":{"line":130,"column":29}},"69":{"start":{"line":131,"column":14},"end":{"line":133,"column":15}},"70":{"start":{"line":132,"column":18},"end":{"line":132,"column":29}},"71":{"start":{"line":137,"column":4},"end":{"line":137,"column":31}},"72":{"start":{"line":139,"column":4},"end":{"line":163,"column":6}},"73":{"start":{"line":140,"column":8},"end":{"line":140,"column":46}},"74":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"75":{"start":{"line":142,"column":12},"end":{"line":142,"column":30}},"76":{"start":{"line":144,"column":8},"end":{"line":144,"column":26}},"77":{"start":{"line":145,"column":8},"end":{"line":161,"column":10}},"78":{"start":{"line":146,"column":12},"end":{"line":160,"column":15}},"79":{"start":{"line":147,"column":16},"end":{"line":159,"column":17}},"80":{"start":{"line":148,"column":20},"end":{"line":148,"column":34}},"81":{"start":{"line":149,"column":20},"end":{"line":149,"column":46}},"82":{"start":{"line":152,"column":20},"end":{"line":152,"column":35}},"83":{"start":{"line":153,"column":20},"end":{"line":158,"column":21}},"84":{"start":{"line":154,"column":24},"end":{"line":154,"column":35}},"85":{"start":{"line":157,"column":24},"end":{"line":157,"column":34}},"86":{"start":{"line":162,"column":8},"end":{"line":162,"column":18}},"87":{"start":{"line":164,"column":4},"end":{"line":164,"column":43}},"88":{"start":{"line":166,"column":4},"end":{"line":169,"column":6}},"89":{"start":{"line":167,"column":8},"end":{"line":167,"column":35}},"90":{"start":{"line":168,"column":8},"end":{"line":168,"column":50}},"91":{"start":{"line":170,"column":4},"end":{"line":170,"column":41}},"92":{"start":{"line":172,"column":4},"end":{"line":210,"column":6}},"93":{"start":{"line":174,"column":8},"end":{"line":209,"column":10}},"94":{"start":{"line":175,"column":12},"end":{"line":175,"column":50}},"95":{"start":{"line":176,"column":12},"end":{"line":178,"column":13}},"96":{"start":{"line":177,"column":16},"end":{"line":177,"column":34}},"97":{"start":{"line":179,"column":12},"end":{"line":179,"column":30}},"98":{"start":{"line":180,"column":12},"end":{"line":180,"column":28}},"99":{"start":{"line":181,"column":12},"end":{"line":181,"column":28}},"100":{"start":{"line":183,"column":12},"end":{"line":208,"column":17}},"101":{"start":{"line":184,"column":16},"end":{"line":186,"column":17}},"102":{"start":{"line":185,"column":20},"end":{"line":185,"column":38}},"103":{"start":{"line":188,"column":16},"end":{"line":207,"column":17}},"104":{"start":{"line":189,"column":20},"end":{"line":189,"column":33}},"105":{"start":{"line":190,"column":20},"end":{"line":190,"column":33}},"106":{"start":{"line":191,"column":20},"end":{"line":206,"column":23}},"107":{"start":{"line":192,"column":24},"end":{"line":205,"column":25}},"108":{"start":{"line":193,"column":28},"end":{"line":193,"column":42}},"109":{"start":{"line":194,"column":28},"end":{"line":194,"column":54}},"110":{"start":{"line":197,"column":28},"end":{"line":197,"column":43}},"111":{"start":{"line":198,"column":28},"end":{"line":198,"column":41}},"112":{"start":{"line":199,"column":28},"end":{"line":204,"column":29}},"113":{"start":{"line":200,"column":32},"end":{"line":200,"column":43}},"114":{"start":{"line":203,"column":32},"end":{"line":203,"column":44}},"115":{"start":{"line":213,"column":4},"end":{"line":218,"column":6}},"116":{"start":{"line":214,"column":8},"end":{"line":217,"column":10}},"117":{"start":{"line":215,"column":12},"end":{"line":215,"column":61}},"118":{"start":{"line":216,"column":12},"end":{"line":216,"column":61}},"119":{"start":{"line":219,"column":4},"end":{"line":224,"column":6}},"120":{"start":{"line":220,"column":8},"end":{"line":223,"column":10}},"121":{"start":{"line":221,"column":12},"end":{"line":221,"column":61}},"122":{"start":{"line":222,"column":12},"end":{"line":222,"column":68}},"123":{"start":{"line":225,"column":4},"end":{"line":230,"column":6}},"124":{"start":{"line":226,"column":8},"end":{"line":229,"column":10}},"125":{"start":{"line":227,"column":12},"end":{"line":227,"column":61}},"126":{"start":{"line":228,"column":12},"end":{"line":228,"column":67}},"127":{"start":{"line":233,"column":4},"end":{"line":254,"column":6}},"128":{"start":{"line":234,"column":8},"end":{"line":236,"column":11}},"129":{"start":{"line":235,"column":12},"end":{"line":235,"column":40}},"130":{"start":{"line":237,"column":8},"end":{"line":253,"column":9}},"131":{"start":{"line":238,"column":12},"end":{"line":242,"column":15}},"132":{"start":{"line":239,"column":16},"end":{"line":241,"column":19}},"133":{"start":{"line":240,"column":20},"end":{"line":240,"column":34}},"134":{"start":{"line":244,"column":12},"end":{"line":244,"column":29}},"135":{"start":{"line":245,"column":12},"end":{"line":252,"column":15}},"136":{"start":{"line":246,"column":16},"end":{"line":249,"column":19}},"137":{"start":{"line":247,"column":20},"end":{"line":247,"column":41}},"138":{"start":{"line":248,"column":20},"end":{"line":248,"column":34}},"139":{"start":{"line":251,"column":16},"end":{"line":251,"column":39}},"140":{"start":{"line":255,"column":4},"end":{"line":255,"column":38}},"141":{"start":{"line":256,"column":4},"end":{"line":256,"column":42}},"142":{"start":{"line":257,"column":4},"end":{"line":259,"column":6}},"143":{"start":{"line":258,"column":8},"end":{"line":258,"column":57}},"144":{"start":{"line":261,"column":4},"end":{"line":263,"column":6}},"145":{"start":{"line":262,"column":8},"end":{"line":262,"column":49}},"146":{"start":{"line":267,"column":4},"end":{"line":276,"column":6}},"147":{"start":{"line":268,"column":8},"end":{"line":275,"column":11}},"148":{"start":{"line":269,"column":12},"end":{"line":272,"column":15}},"149":{"start":{"line":270,"column":16},"end":{"line":270,"column":25}},"150":{"start":{"line":271,"column":16},"end":{"line":271,"column":30}},"151":{"start":{"line":274,"column":12},"end":{"line":274,"column":32}},"152":{"start":{"line":278,"column":4},"end":{"line":278,"column":32}},"153":{"start":{"line":280,"column":4},"end":{"line":280,"column":31}},"154":{"start":{"line":282,"column":4},"end":{"line":287,"column":6}},"155":{"start":{"line":283,"column":8},"end":{"line":285,"column":21}},"156":{"start":{"line":284,"column":12},"end":{"line":284,"column":21}},"157":{"start":{"line":286,"column":8},"end":{"line":286,"column":57}},"158":{"start":{"line":289,"column":4},"end":{"line":289,"column":36}},"159":{"start":{"line":291,"column":4},"end":{"line":310,"column":6}},"160":{"start":{"line":292,"column":8},"end":{"line":292,"column":25}},"161":{"start":{"line":293,"column":8},"end":{"line":295,"column":11}},"162":{"start":{"line":294,"column":12},"end":{"line":294,"column":40}},"163":{"start":{"line":296,"column":8},"end":{"line":309,"column":11}},"164":{"start":{"line":297,"column":12},"end":{"line":302,"column":15}},"165":{"start":{"line":298,"column":16},"end":{"line":300,"column":17}},"166":{"start":{"line":299,"column":20},"end":{"line":299,"column":36}},"167":{"start":{"line":301,"column":16},"end":{"line":301,"column":27}},"168":{"start":{"line":304,"column":12},"end":{"line":308,"column":16}},"169":{"start":{"line":305,"column":16},"end":{"line":305,"column":41}},"170":{"start":{"line":307,"column":16},"end":{"line":307,"column":31}},"171":{"start":{"line":311,"column":4},"end":{"line":311,"column":39}},"172":{"start":{"line":312,"column":4},"end":{"line":312,"column":43}},"173":{"start":{"line":314,"column":4},"end":{"line":314,"column":32}},"174":{"start":{"line":315,"column":4},"end":{"line":315,"column":44}},"175":{"start":{"line":317,"column":4},"end":{"line":336,"column":6}},"176":{"start":{"line":318,"column":8},"end":{"line":318,"column":25}},"177":{"start":{"line":319,"column":8},"end":{"line":321,"column":11}},"178":{"start":{"line":320,"column":12},"end":{"line":320,"column":40}},"179":{"start":{"line":322,"column":8},"end":{"line":335,"column":11}},"180":{"start":{"line":323,"column":12},"end":{"line":328,"column":15}},"181":{"start":{"line":324,"column":16},"end":{"line":326,"column":17}},"182":{"start":{"line":325,"column":20},"end":{"line":325,"column":36}},"183":{"start":{"line":327,"column":16},"end":{"line":327,"column":27}},"184":{"start":{"line":330,"column":12},"end":{"line":334,"column":16}},"185":{"start":{"line":331,"column":16},"end":{"line":331,"column":41}},"186":{"start":{"line":333,"column":16},"end":{"line":333,"column":31}},"187":{"start":{"line":337,"column":4},"end":{"line":337,"column":39}},"188":{"start":{"line":338,"column":4},"end":{"line":338,"column":43}},"189":{"start":{"line":340,"column":4},"end":{"line":354,"column":6}},"190":{"start":{"line":341,"column":8},"end":{"line":353,"column":11}},"191":{"start":{"line":342,"column":12},"end":{"line":350,"column":15}},"192":{"start":{"line":343,"column":16},"end":{"line":349,"column":17}},"193":{"start":{"line":344,"column":20},"end":{"line":344,"column":37}},"194":{"start":{"line":345,"column":20},"end":{"line":345,"column":51}},"195":{"start":{"line":348,"column":20},"end":{"line":348,"column":31}},"196":{"start":{"line":352,"column":12},"end":{"line":352,"column":28}},"197":{"start":{"line":355,"column":4},"end":{"line":355,"column":39}},"198":{"start":{"line":356,"column":4},"end":{"line":356,"column":43}},"199":{"start":{"line":358,"column":4},"end":{"line":370,"column":6}},"200":{"start":{"line":359,"column":8},"end":{"line":369,"column":11}},"201":{"start":{"line":360,"column":12},"end":{"line":366,"column":15}},"202":{"start":{"line":361,"column":16},"end":{"line":364,"column":17}},"203":{"start":{"line":362,"column":20},"end":{"line":362,"column":40}},"204":{"start":{"line":363,"column":20},"end":{"line":363,"column":51}},"205":{"start":{"line":365,"column":16},"end":{"line":365,"column":27}},"206":{"start":{"line":368,"column":12},"end":{"line":368,"column":33}},"207":{"start":{"line":372,"column":4},"end":{"line":372,"column":27}},"208":{"start":{"line":374,"column":4},"end":{"line":386,"column":6}},"209":{"start":{"line":375,"column":8},"end":{"line":385,"column":11}},"210":{"start":{"line":376,"column":12},"end":{"line":382,"column":15}},"211":{"start":{"line":377,"column":16},"end":{"line":380,"column":17}},"212":{"start":{"line":378,"column":20},"end":{"line":378,"column":41}},"213":{"start":{"line":379,"column":20},"end":{"line":379,"column":51}},"214":{"start":{"line":381,"column":16},"end":{"line":381,"column":27}},"215":{"start":{"line":384,"column":12},"end":{"line":384,"column":32}},"216":{"start":{"line":388,"column":4},"end":{"line":388,"column":28}},"217":{"start":{"line":390,"column":4},"end":{"line":414,"column":6}},"218":{"start":{"line":391,"column":8},"end":{"line":413,"column":11}},"219":{"start":{"line":392,"column":12},"end":{"line":399,"column":15}},"220":{"start":{"line":393,"column":16},"end":{"line":398,"column":17}},"221":{"start":{"line":394,"column":20},"end":{"line":394,"column":34}},"222":{"start":{"line":397,"column":20},"end":{"line":397,"column":67}},"223":{"start":{"line":401,"column":12},"end":{"line":412,"column":13}},"224":{"start":{"line":402,"column":16},"end":{"line":402,"column":37}},"225":{"start":{"line":405,"column":16},"end":{"line":408,"column":18}},"226":{"start":{"line":406,"column":20},"end":{"line":406,"column":62}},"227":{"start":{"line":407,"column":20},"end":{"line":407,"column":54}},"228":{"start":{"line":409,"column":16},"end":{"line":411,"column":20}},"229":{"start":{"line":410,"column":20},"end":{"line":410,"column":35}},"230":{"start":{"line":416,"column":4},"end":{"line":496,"column":6}},"231":{"start":{"line":417,"column":8},"end":{"line":417,"column":46}},"232":{"start":{"line":418,"column":8},"end":{"line":418,"column":32}},"233":{"start":{"line":419,"column":8},"end":{"line":419,"column":40}},"234":{"start":{"line":420,"column":8},"end":{"line":422,"column":9}},"235":{"start":{"line":421,"column":12},"end":{"line":421,"column":30}},"236":{"start":{"line":424,"column":8},"end":{"line":424,"column":25}},"237":{"start":{"line":426,"column":8},"end":{"line":426,"column":27}},"238":{"start":{"line":427,"column":8},"end":{"line":429,"column":10}},"239":{"start":{"line":428,"column":12},"end":{"line":428,"column":34}},"240":{"start":{"line":430,"column":8},"end":{"line":437,"column":10}},"241":{"start":{"line":431,"column":12},"end":{"line":436,"column":13}},"242":{"start":{"line":432,"column":16},"end":{"line":435,"column":17}},"243":{"start":{"line":433,"column":20},"end":{"line":433,"column":43}},"244":{"start":{"line":434,"column":20},"end":{"line":434,"column":27}},"245":{"start":{"line":438,"column":8},"end":{"line":443,"column":10}},"246":{"start":{"line":439,"column":12},"end":{"line":439,"column":28}},"247":{"start":{"line":440,"column":12},"end":{"line":442,"column":15}},"248":{"start":{"line":441,"column":16},"end":{"line":441,"column":21}},"249":{"start":{"line":445,"column":8},"end":{"line":453,"column":11}},"250":{"start":{"line":446,"column":12},"end":{"line":452,"column":13}},"251":{"start":{"line":447,"column":16},"end":{"line":447,"column":43}},"252":{"start":{"line":449,"column":16},"end":{"line":449,"column":42}},"253":{"start":{"line":451,"column":16},"end":{"line":451,"column":43}},"254":{"start":{"line":455,"column":8},"end":{"line":495,"column":11}},"255":{"start":{"line":456,"column":12},"end":{"line":456,"column":65}},"256":{"start":{"line":457,"column":12},"end":{"line":476,"column":14}},"257":{"start":{"line":458,"column":16},"end":{"line":458,"column":68}},"258":{"start":{"line":459,"column":16},"end":{"line":461,"column":17}},"259":{"start":{"line":460,"column":20},"end":{"line":460,"column":35}},"260":{"start":{"line":462,"column":16},"end":{"line":475,"column":17}},"261":{"start":{"line":463,"column":20},"end":{"line":463,"column":41}},"262":{"start":{"line":464,"column":20},"end":{"line":466,"column":23}},"263":{"start":{"line":465,"column":24},"end":{"line":465,"column":58}},"264":{"start":{"line":467,"column":20},"end":{"line":467,"column":42}},"265":{"start":{"line":468,"column":20},"end":{"line":468,"column":47}},"266":{"start":{"line":470,"column":20},"end":{"line":470,"column":46}},"267":{"start":{"line":473,"column":20},"end":{"line":473,"column":38}},"268":{"start":{"line":474,"column":20},"end":{"line":474,"column":53}},"269":{"start":{"line":477,"column":12},"end":{"line":477,"column":74}},"270":{"start":{"line":478,"column":12},"end":{"line":482,"column":14}},"271":{"start":{"line":479,"column":16},"end":{"line":481,"column":55}},"272":{"start":{"line":480,"column":20},"end":{"line":480,"column":60}},"273":{"start":{"line":483,"column":12},"end":{"line":494,"column":13}},"274":{"start":{"line":484,"column":16},"end":{"line":484,"column":61}},"275":{"start":{"line":487,"column":16},"end":{"line":492,"column":18}},"276":{"start":{"line":488,"column":20},"end":{"line":491,"column":21}},"277":{"start":{"line":489,"column":24},"end":{"line":489,"column":49}},"278":{"start":{"line":490,"column":24},"end":{"line":490,"column":69}},"279":{"start":{"line":493,"column":16},"end":{"line":493,"column":38}},"280":{"start":{"line":498,"column":4},"end":{"line":527,"column":6}},"281":{"start":{"line":499,"column":8},"end":{"line":499,"column":30}},"282":{"start":{"line":500,"column":8},"end":{"line":500,"column":26}},"283":{"start":{"line":502,"column":8},"end":{"line":506,"column":9}},"284":{"start":{"line":503,"column":12},"end":{"line":503,"column":28}},"285":{"start":{"line":504,"column":12},"end":{"line":504,"column":25}},"286":{"start":{"line":505,"column":12},"end":{"line":505,"column":34}},"287":{"start":{"line":508,"column":8},"end":{"line":508,"column":53}},"288":{"start":{"line":509,"column":8},"end":{"line":524,"column":9}},"289":{"start":{"line":510,"column":12},"end":{"line":516,"column":14}},"290":{"start":{"line":511,"column":16},"end":{"line":515,"column":18}},"291":{"start":{"line":512,"column":20},"end":{"line":514,"column":39}},"292":{"start":{"line":513,"column":24},"end":{"line":513,"column":89}},"293":{"start":{"line":517,"column":12},"end":{"line":519,"column":13}},"294":{"start":{"line":518,"column":16},"end":{"line":518,"column":63}},"295":{"start":{"line":520,"column":12},"end":{"line":523,"column":15}},"296":{"start":{"line":521,"column":16},"end":{"line":521,"column":45}},"297":{"start":{"line":522,"column":16},"end":{"line":522,"column":69}},"298":{"start":{"line":526,"column":8},"end":{"line":526,"column":53}},"299":{"start":{"line":529,"column":4},"end":{"line":560,"column":6}},"300":{"start":{"line":530,"column":8},"end":{"line":530,"column":46}},"301":{"start":{"line":531,"column":8},"end":{"line":534,"column":9}},"302":{"start":{"line":532,"column":10},"end":{"line":532,"column":91}},"303":{"start":{"line":533,"column":10},"end":{"line":533,"column":31}},"304":{"start":{"line":535,"column":8},"end":{"line":537,"column":9}},"305":{"start":{"line":536,"column":12},"end":{"line":536,"column":30}},"306":{"start":{"line":538,"column":8},"end":{"line":558,"column":10}},"307":{"start":{"line":539,"column":12},"end":{"line":557,"column":14}},"308":{"start":{"line":540,"column":16},"end":{"line":556,"column":17}},"309":{"start":{"line":541,"column":20},"end":{"line":541,"column":52}},"310":{"start":{"line":542,"column":20},"end":{"line":542,"column":46}},"311":{"start":{"line":545,"column":20},"end":{"line":545,"column":72}},"312":{"start":{"line":546,"column":20},"end":{"line":546,"column":47}},"313":{"start":{"line":547,"column":20},"end":{"line":552,"column":21}},"314":{"start":{"line":548,"column":24},"end":{"line":548,"column":54}},"315":{"start":{"line":551,"column":24},"end":{"line":551,"column":44}},"316":{"start":{"line":553,"column":20},"end":{"line":555,"column":23}},"317":{"start":{"line":554,"column":24},"end":{"line":554,"column":51}},"318":{"start":{"line":559,"column":8},"end":{"line":559,"column":46}},"319":{"start":{"line":562,"column":4},"end":{"line":592,"column":6}},"320":{"start":{"line":563,"column":8},"end":{"line":563,"column":46}},"321":{"start":{"line":564,"column":8},"end":{"line":591,"column":9}},"322":{"start":{"line":565,"column":12},"end":{"line":575,"column":25}},"323":{"start":{"line":566,"column":16},"end":{"line":574,"column":17}},"324":{"start":{"line":567,"column":20},"end":{"line":573,"column":23}},"325":{"start":{"line":568,"column":24},"end":{"line":568,"column":76}},"326":{"start":{"line":569,"column":24},"end":{"line":571,"column":25}},"327":{"start":{"line":570,"column":28},"end":{"line":570,"column":43}},"328":{"start":{"line":572,"column":24},"end":{"line":572,"column":55}},"329":{"start":{"line":578,"column":12},"end":{"line":578,"column":29}},"330":{"start":{"line":579,"column":12},"end":{"line":590,"column":15}},"331":{"start":{"line":580,"column":16},"end":{"line":587,"column":19}},"332":{"start":{"line":581,"column":20},"end":{"line":581,"column":72}},"333":{"start":{"line":582,"column":20},"end":{"line":584,"column":21}},"334":{"start":{"line":583,"column":24},"end":{"line":583,"column":39}},"335":{"start":{"line":585,"column":20},"end":{"line":585,"column":38}},"336":{"start":{"line":586,"column":20},"end":{"line":586,"column":34}},"337":{"start":{"line":589,"column":16},"end":{"line":589,"column":39}},"338":{"start":{"line":594,"column":4},"end":{"line":596,"column":6}},"339":{"start":{"line":595,"column":8},"end":{"line":595,"column":73}},"340":{"start":{"line":598,"column":4},"end":{"line":600,"column":6}},"341":{"start":{"line":599,"column":8},"end":{"line":599,"column":87}},"342":{"start":{"line":602,"column":4},"end":{"line":632,"column":6}},"343":{"start":{"line":603,"column":8},"end":{"line":603,"column":46}},"344":{"start":{"line":604,"column":8},"end":{"line":631,"column":9}},"345":{"start":{"line":605,"column":12},"end":{"line":615,"column":25}},"346":{"start":{"line":606,"column":16},"end":{"line":614,"column":17}},"347":{"start":{"line":607,"column":20},"end":{"line":613,"column":23}},"348":{"start":{"line":608,"column":24},"end":{"line":608,"column":76}},"349":{"start":{"line":609,"column":24},"end":{"line":611,"column":25}},"350":{"start":{"line":610,"column":28},"end":{"line":610,"column":43}},"351":{"start":{"line":612,"column":24},"end":{"line":612,"column":55}},"352":{"start":{"line":618,"column":12},"end":{"line":618,"column":29}},"353":{"start":{"line":619,"column":12},"end":{"line":630,"column":15}},"354":{"start":{"line":620,"column":16},"end":{"line":627,"column":19}},"355":{"start":{"line":621,"column":20},"end":{"line":621,"column":72}},"356":{"start":{"line":622,"column":20},"end":{"line":624,"column":21}},"357":{"start":{"line":623,"column":24},"end":{"line":623,"column":39}},"358":{"start":{"line":625,"column":20},"end":{"line":625,"column":38}},"359":{"start":{"line":626,"column":20},"end":{"line":626,"column":34}},"360":{"start":{"line":629,"column":16},"end":{"line":629,"column":39}},"361":{"start":{"line":634,"column":4},"end":{"line":648,"column":6}},"362":{"start":{"line":635,"column":8},"end":{"line":646,"column":10}},"363":{"start":{"line":636,"column":12},"end":{"line":641,"column":14}},"364":{"start":{"line":637,"column":16},"end":{"line":639,"column":17}},"365":{"start":{"line":638,"column":20},"end":{"line":638,"column":56}},"366":{"start":{"line":640,"column":16},"end":{"line":640,"column":33}},"367":{"start":{"line":642,"column":12},"end":{"line":644,"column":14}},"368":{"start":{"line":643,"column":16},"end":{"line":643,"column":82}},"369":{"start":{"line":645,"column":12},"end":{"line":645,"column":22}},"370":{"start":{"line":647,"column":8},"end":{"line":647,"column":31}},"371":{"start":{"line":650,"column":4},"end":{"line":657,"column":6}},"372":{"start":{"line":651,"column":8},"end":{"line":651,"column":60}},"373":{"start":{"line":652,"column":8},"end":{"line":656,"column":10}},"374":{"start":{"line":653,"column":12},"end":{"line":655,"column":14}},"375":{"start":{"line":659,"column":4},"end":{"line":669,"column":6}},"376":{"start":{"line":660,"column":8},"end":{"line":660,"column":19}},"377":{"start":{"line":661,"column":8},"end":{"line":668,"column":11}},"378":{"start":{"line":662,"column":12},"end":{"line":665,"column":15}},"379":{"start":{"line":663,"column":16},"end":{"line":663,"column":38}},"380":{"start":{"line":664,"column":16},"end":{"line":664,"column":24}},"381":{"start":{"line":667,"column":12},"end":{"line":667,"column":29}},"382":{"start":{"line":670,"column":4},"end":{"line":670,"column":39}},"383":{"start":{"line":671,"column":4},"end":{"line":671,"column":43}},"384":{"start":{"line":673,"column":4},"end":{"line":685,"column":6}},"385":{"start":{"line":674,"column":8},"end":{"line":684,"column":9}},"386":{"start":{"line":675,"column":12},"end":{"line":680,"column":15}},"387":{"start":{"line":676,"column":16},"end":{"line":678,"column":17}},"388":{"start":{"line":677,"column":20},"end":{"line":677,"column":41}},"389":{"start":{"line":679,"column":16},"end":{"line":679,"column":55}},"390":{"start":{"line":683,"column":12},"end":{"line":683,"column":23}},"391":{"start":{"line":687,"column":4},"end":{"line":700,"column":6}},"392":{"start":{"line":688,"column":8},"end":{"line":699,"column":11}},"393":{"start":{"line":689,"column":12},"end":{"line":691,"column":13}},"394":{"start":{"line":690,"column":16},"end":{"line":690,"column":37}},"395":{"start":{"line":692,"column":12},"end":{"line":692,"column":64}},"396":{"start":{"line":693,"column":12},"end":{"line":698,"column":13}},"397":{"start":{"line":694,"column":16},"end":{"line":694,"column":57}},"398":{"start":{"line":697,"column":16},"end":{"line":697,"column":27}},"399":{"start":{"line":702,"column":4},"end":{"line":714,"column":6}},"400":{"start":{"line":703,"column":8},"end":{"line":713,"column":9}},"401":{"start":{"line":704,"column":12},"end":{"line":709,"column":15}},"402":{"start":{"line":705,"column":16},"end":{"line":707,"column":17}},"403":{"start":{"line":706,"column":20},"end":{"line":706,"column":41}},"404":{"start":{"line":708,"column":16},"end":{"line":708,"column":54}},"405":{"start":{"line":712,"column":12},"end":{"line":712,"column":23}},"406":{"start":{"line":716,"column":4},"end":{"line":729,"column":6}},"407":{"start":{"line":717,"column":8},"end":{"line":728,"column":11}},"408":{"start":{"line":718,"column":12},"end":{"line":720,"column":13}},"409":{"start":{"line":719,"column":16},"end":{"line":719,"column":37}},"410":{"start":{"line":721,"column":12},"end":{"line":721,"column":64}},"411":{"start":{"line":722,"column":12},"end":{"line":727,"column":13}},"412":{"start":{"line":723,"column":16},"end":{"line":723,"column":56}},"413":{"start":{"line":726,"column":16},"end":{"line":726,"column":27}},"414":{"start":{"line":731,"column":4},"end":{"line":833,"column":6}},"415":{"start":{"line":732,"column":8},"end":{"line":734,"column":9}},"416":{"start":{"line":733,"column":12},"end":{"line":733,"column":28}},"417":{"start":{"line":735,"column":8},"end":{"line":767,"column":9}},"418":{"start":{"line":736,"column":10},"end":{"line":738,"column":11}},"419":{"start":{"line":737,"column":12},"end":{"line":737,"column":29}},"420":{"start":{"line":739,"column":10},"end":{"line":741,"column":11}},"421":{"start":{"line":740,"column":14},"end":{"line":740,"column":28}},"422":{"start":{"line":742,"column":10},"end":{"line":749,"column":11}},"423":{"start":{"line":744,"column":13},"end":{"line":748,"column":16}},"424":{"start":{"line":745,"column":17},"end":{"line":747,"column":18}},"425":{"start":{"line":746,"column":21},"end":{"line":746,"column":31}},"426":{"start":{"line":750,"column":10},"end":{"line":766,"column":13}},"427":{"start":{"line":751,"column":14},"end":{"line":754,"column":16}},"428":{"start":{"line":756,"column":14},"end":{"line":760,"column":15}},"429":{"start":{"line":757,"column":16},"end":{"line":757,"column":38}},"430":{"start":{"line":759,"column":16},"end":{"line":759,"column":35}},"431":{"start":{"line":762,"column":14},"end":{"line":764,"column":15}},"432":{"start":{"line":763,"column":18},"end":{"line":763,"column":32}},"433":{"start":{"line":765,"column":14},"end":{"line":765,"column":44}},"434":{"start":{"line":769,"column":8},"end":{"line":769,"column":24}},"435":{"start":{"line":770,"column":8},"end":{"line":831,"column":10}},"436":{"start":{"line":779,"column":14},"end":{"line":779,"column":48}},"437":{"start":{"line":782,"column":14},"end":{"line":782,"column":29}},"438":{"start":{"line":783,"column":14},"end":{"line":783,"column":27}},"439":{"start":{"line":786,"column":14},"end":{"line":786,"column":47}},"440":{"start":{"line":789,"column":16},"end":{"line":807,"column":17}},"441":{"start":{"line":790,"column":20},"end":{"line":790,"column":47}},"442":{"start":{"line":791,"column":20},"end":{"line":793,"column":21}},"443":{"start":{"line":792,"column":24},"end":{"line":792,"column":34}},"444":{"start":{"line":794,"column":20},"end":{"line":794,"column":33}},"445":{"start":{"line":795,"column":20},"end":{"line":804,"column":22}},"446":{"start":{"line":796,"column":24},"end":{"line":796,"column":37}},"447":{"start":{"line":797,"column":24},"end":{"line":799,"column":25}},"448":{"start":{"line":798,"column":28},"end":{"line":798,"column":65}},"449":{"start":{"line":800,"column":24},"end":{"line":802,"column":25}},"450":{"start":{"line":801,"column":28},"end":{"line":801,"column":38}},"451":{"start":{"line":803,"column":24},"end":{"line":803,"column":36}},"452":{"start":{"line":805,"column":20},"end":{"line":805,"column":45}},"453":{"start":{"line":806,"column":20},"end":{"line":806,"column":42}},"454":{"start":{"line":810,"column":16},"end":{"line":810,"column":38}},"455":{"start":{"line":813,"column":16},"end":{"line":813,"column":31}},"456":{"start":{"line":816,"column":16},"end":{"line":816,"column":54}},"457":{"start":{"line":819,"column":16},"end":{"line":819,"column":50}},"458":{"start":{"line":819,"column":41},"end":{"line":819,"column":48}},"459":{"start":{"line":820,"column":16},"end":{"line":820,"column":32}},"460":{"start":{"line":823,"column":16},"end":{"line":823,"column":51}},"461":{"start":{"line":823,"column":42},"end":{"line":823,"column":49}},"462":{"start":{"line":824,"column":16},"end":{"line":824,"column":33}},"463":{"start":{"line":827,"column":16},"end":{"line":829,"column":17}},"464":{"start":{"line":828,"column":20},"end":{"line":828,"column":50}},"465":{"start":{"line":832,"column":8},"end":{"line":832,"column":17}},"466":{"start":{"line":835,"column":4},"end":{"line":898,"column":6}},"467":{"start":{"line":837,"column":8},"end":{"line":839,"column":9}},"468":{"start":{"line":838,"column":10},"end":{"line":838,"column":41}},"469":{"start":{"line":841,"column":8},"end":{"line":853,"column":9}},"470":{"start":{"line":842,"column":10},"end":{"line":843,"column":40}},"471":{"start":{"line":844,"column":10},"end":{"line":851,"column":11}},"472":{"start":{"line":845,"column":12},"end":{"line":845,"column":52}},"473":{"start":{"line":846,"column":12},"end":{"line":850,"column":13}},"474":{"start":{"line":847,"column":14},"end":{"line":847,"column":24}},"475":{"start":{"line":849,"column":14},"end":{"line":849,"column":28}},"476":{"start":{"line":852,"column":10},"end":{"line":852,"column":21}},"477":{"start":{"line":855,"column":8},"end":{"line":884,"column":9}},"478":{"start":{"line":856,"column":10},"end":{"line":858,"column":11}},"479":{"start":{"line":857,"column":12},"end":{"line":857,"column":29}},"480":{"start":{"line":859,"column":10},"end":{"line":861,"column":11}},"481":{"start":{"line":860,"column":14},"end":{"line":860,"column":28}},"482":{"start":{"line":862,"column":10},"end":{"line":869,"column":11}},"483":{"start":{"line":864,"column":13},"end":{"line":868,"column":16}},"484":{"start":{"line":865,"column":17},"end":{"line":867,"column":18}},"485":{"start":{"line":866,"column":21},"end":{"line":866,"column":31}},"486":{"start":{"line":870,"column":10},"end":{"line":883,"column":13}},"487":{"start":{"line":871,"column":14},"end":{"line":875,"column":16}},"488":{"start":{"line":877,"column":14},"end":{"line":877,"column":87}},"489":{"start":{"line":879,"column":14},"end":{"line":881,"column":15}},"490":{"start":{"line":880,"column":18},"end":{"line":880,"column":32}},"491":{"start":{"line":882,"column":14},"end":{"line":882,"column":44}},"492":{"start":{"line":887,"column":8},"end":{"line":887,"column":49}},"493":{"start":{"line":890,"column":8},"end":{"line":892,"column":10}},"494":{"start":{"line":891,"column":10},"end":{"line":891,"column":47}},"495":{"start":{"line":895,"column":8},"end":{"line":895,"column":25}},"496":{"start":{"line":897,"column":8},"end":{"line":897,"column":17}},"497":{"start":{"line":900,"column":4},"end":{"line":966,"column":6}},"498":{"start":{"line":901,"column":8},"end":{"line":902,"column":29}},"499":{"start":{"line":904,"column":8},"end":{"line":964,"column":10}},"500":{"start":{"line":912,"column":16},"end":{"line":914,"column":17}},"501":{"start":{"line":913,"column":20},"end":{"line":913,"column":34}},"502":{"start":{"line":915,"column":16},"end":{"line":924,"column":19}},"503":{"start":{"line":916,"column":20},"end":{"line":919,"column":23}},"504":{"start":{"line":920,"column":20},"end":{"line":920,"column":42}},"505":{"start":{"line":921,"column":20},"end":{"line":923,"column":21}},"506":{"start":{"line":922,"column":24},"end":{"line":922,"column":42}},"507":{"start":{"line":925,"column":16},"end":{"line":925,"column":50}},"508":{"start":{"line":928,"column":16},"end":{"line":928,"column":36}},"509":{"start":{"line":928,"column":29},"end":{"line":928,"column":36}},"510":{"start":{"line":929,"column":16},"end":{"line":933,"column":17}},"511":{"start":{"line":930,"column":20},"end":{"line":930,"column":68}},"512":{"start":{"line":930,"column":54},"end":{"line":930,"column":68}},"513":{"start":{"line":931,"column":20},"end":{"line":931,"column":41}},"514":{"start":{"line":932,"column":20},"end":{"line":932,"column":27}},"515":{"start":{"line":935,"column":16},"end":{"line":937,"column":60}},"516":{"start":{"line":939,"column":16},"end":{"line":941,"column":19}},"517":{"start":{"line":940,"column":20},"end":{"line":940,"column":37}},"518":{"start":{"line":943,"column":16},"end":{"line":943,"column":46}},"519":{"start":{"line":943,"column":32},"end":{"line":943,"column":46}},"520":{"start":{"line":944,"column":16},"end":{"line":944,"column":31}},"521":{"start":{"line":945,"column":16},"end":{"line":956,"column":19}},"522":{"start":{"line":946,"column":20},"end":{"line":946,"column":36}},"523":{"start":{"line":948,"column":20},"end":{"line":948,"column":41}},"524":{"start":{"line":949,"column":20},"end":{"line":953,"column":23}},"525":{"start":{"line":950,"column":24},"end":{"line":952,"column":25}},"526":{"start":{"line":951,"column":28},"end":{"line":951,"column":60}},"527":{"start":{"line":955,"column":20},"end":{"line":955,"column":30}},"528":{"start":{"line":959,"column":16},"end":{"line":959,"column":36}},"529":{"start":{"line":962,"column":16},"end":{"line":962,"column":31}},"530":{"start":{"line":965,"column":8},"end":{"line":965,"column":21}},"531":{"start":{"line":968,"column":4},"end":{"line":987,"column":6}},"532":{"start":{"line":969,"column":8},"end":{"line":986,"column":10}},"533":{"start":{"line":970,"column":12},"end":{"line":970,"column":64}},"534":{"start":{"line":971,"column":12},"end":{"line":985,"column":17}},"535":{"start":{"line":972,"column":16},"end":{"line":972,"column":68}},"536":{"start":{"line":973,"column":16},"end":{"line":984,"column":17}},"537":{"start":{"line":974,"column":20},"end":{"line":983,"column":21}},"538":{"start":{"line":975,"column":24},"end":{"line":977,"column":25}},"539":{"start":{"line":976,"column":28},"end":{"line":976,"column":47}},"540":{"start":{"line":979,"column":25},"end":{"line":983,"column":21}},"541":{"start":{"line":980,"column":24},"end":{"line":982,"column":27}},"542":{"start":{"line":981,"column":28},"end":{"line":981,"column":45}},"543":{"start":{"line":988,"column":4},"end":{"line":988,"column":35}},"544":{"start":{"line":989,"column":4},"end":{"line":989,"column":35}},"545":{"start":{"line":994,"column":4},"end":{"line":1027,"column":6}},"546":{"start":{"line":995,"column":8},"end":{"line":995,"column":22}},"547":{"start":{"line":996,"column":8},"end":{"line":996,"column":24}},"548":{"start":{"line":997,"column":8},"end":{"line":999,"column":10}},"549":{"start":{"line":998,"column":12},"end":{"line":998,"column":21}},"550":{"start":{"line":1000,"column":8},"end":{"line":1023,"column":10}},"551":{"start":{"line":1001,"column":12},"end":{"line":1001,"column":61}},"552":{"start":{"line":1002,"column":12},"end":{"line":1002,"column":38}},"553":{"start":{"line":1003,"column":12},"end":{"line":1003,"column":47}},"554":{"start":{"line":1004,"column":12},"end":{"line":1022,"column":13}},"555":{"start":{"line":1005,"column":16},"end":{"line":1007,"column":19}},"556":{"start":{"line":1006,"column":20},"end":{"line":1006,"column":52}},"557":{"start":{"line":1009,"column":17},"end":{"line":1022,"column":13}},"558":{"start":{"line":1010,"column":16},"end":{"line":1010,"column":43}},"559":{"start":{"line":1013,"column":16},"end":{"line":1013,"column":41}},"560":{"start":{"line":1014,"column":16},"end":{"line":1021,"column":21}},"561":{"start":{"line":1015,"column":20},"end":{"line":1015,"column":42}},"562":{"start":{"line":1016,"column":20},"end":{"line":1016,"column":40}},"563":{"start":{"line":1017,"column":20},"end":{"line":1017,"column":39}},"564":{"start":{"line":1018,"column":20},"end":{"line":1020,"column":21}},"565":{"start":{"line":1019,"column":22},"end":{"line":1019,"column":50}},"566":{"start":{"line":1024,"column":8},"end":{"line":1024,"column":29}},"567":{"start":{"line":1025,"column":8},"end":{"line":1025,"column":33}},"568":{"start":{"line":1026,"column":8},"end":{"line":1026,"column":24}},"569":{"start":{"line":1029,"column":4},"end":{"line":1033,"column":6}},"570":{"start":{"line":1030,"column":6},"end":{"line":1032,"column":8}},"571":{"start":{"line":1031,"column":8},"end":{"line":1031,"column":60}},"572":{"start":{"line":1035,"column":4},"end":{"line":1041,"column":6}},"573":{"start":{"line":1036,"column":8},"end":{"line":1036,"column":25}},"574":{"start":{"line":1037,"column":8},"end":{"line":1039,"column":9}},"575":{"start":{"line":1038,"column":12},"end":{"line":1038,"column":28}},"576":{"start":{"line":1040,"column":8},"end":{"line":1040,"column":54}},"577":{"start":{"line":1043,"column":4},"end":{"line":1049,"column":6}},"578":{"start":{"line":1044,"column":8},"end":{"line":1044,"column":25}},"579":{"start":{"line":1045,"column":8},"end":{"line":1047,"column":9}},"580":{"start":{"line":1046,"column":12},"end":{"line":1046,"column":28}},"581":{"start":{"line":1048,"column":8},"end":{"line":1048,"column":60}},"582":{"start":{"line":1051,"column":4},"end":{"line":1068,"column":6}},"583":{"start":{"line":1052,"column":8},"end":{"line":1052,"column":28}},"584":{"start":{"line":1053,"column":8},"end":{"line":1067,"column":10}},"585":{"start":{"line":1054,"column":12},"end":{"line":1054,"column":28}},"586":{"start":{"line":1055,"column":12},"end":{"line":1055,"column":61}},"587":{"start":{"line":1056,"column":12},"end":{"line":1056,"column":38}},"588":{"start":{"line":1057,"column":12},"end":{"line":1066,"column":15}},"589":{"start":{"line":1058,"column":16},"end":{"line":1062,"column":20}},"590":{"start":{"line":1059,"column":20},"end":{"line":1059,"column":43}},"591":{"start":{"line":1060,"column":20},"end":{"line":1060,"column":76}},"592":{"start":{"line":1061,"column":20},"end":{"line":1061,"column":38}},"593":{"start":{"line":1065,"column":16},"end":{"line":1065,"column":60}},"594":{"start":{"line":1070,"column":4},"end":{"line":1072,"column":6}},"595":{"start":{"line":1071,"column":6},"end":{"line":1071,"column":76}},"596":{"start":{"line":1074,"column":4},"end":{"line":1091,"column":6}},"597":{"start":{"line":1075,"column":8},"end":{"line":1083,"column":10}},"598":{"start":{"line":1076,"column":12},"end":{"line":1076,"column":28}},"599":{"start":{"line":1077,"column":12},"end":{"line":1077,"column":61}},"600":{"start":{"line":1078,"column":12},"end":{"line":1078,"column":38}},"601":{"start":{"line":1079,"column":12},"end":{"line":1082,"column":22}},"602":{"start":{"line":1080,"column":16},"end":{"line":1080,"column":50}},"603":{"start":{"line":1084,"column":8},"end":{"line":1090,"column":9}},"604":{"start":{"line":1085,"column":12},"end":{"line":1085,"column":64}},"605":{"start":{"line":1086,"column":12},"end":{"line":1086,"column":40}},"606":{"start":{"line":1089,"column":12},"end":{"line":1089,"column":22}},"607":{"start":{"line":1092,"column":4},"end":{"line":1092,"column":45}},"608":{"start":{"line":1093,"column":4},"end":{"line":1093,"column":49}},"609":{"start":{"line":1095,"column":4},"end":{"line":1106,"column":6}},"610":{"start":{"line":1096,"column":8},"end":{"line":1104,"column":9}},"611":{"start":{"line":1097,"column":12},"end":{"line":1102,"column":13}},"612":{"start":{"line":1098,"column":16},"end":{"line":1100,"column":17}},"613":{"start":{"line":1099,"column":20},"end":{"line":1099,"column":41}},"614":{"start":{"line":1101,"column":16},"end":{"line":1101,"column":26}},"615":{"start":{"line":1103,"column":12},"end":{"line":1103,"column":21}},"616":{"start":{"line":1105,"column":8},"end":{"line":1105,"column":15}},"617":{"start":{"line":1109,"column":4},"end":{"line":1121,"column":5}},"618":{"start":{"line":1110,"column":8},"end":{"line":1110,"column":31}},"619":{"start":{"line":1113,"column":9},"end":{"line":1121,"column":5}},"620":{"start":{"line":1114,"column":8},"end":{"line":1116,"column":11}},"621":{"start":{"line":1115,"column":12},"end":{"line":1115,"column":25}},"622":{"start":{"line":1120,"column":8},"end":{"line":1120,"column":27}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":12}},{"start":{"line":30,"column":12},"end":{"line":30,"column":12}}]},"3":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":19},"end":{"line":40,"column":32}},{"start":{"line":40,"column":36},"end":{"line":42,"column":5}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8}},{"start":{"line":51,"column":8},"end":{"line":51,"column":8}}]},"5":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":62,"column":8}},{"start":{"line":62,"column":8},"end":{"line":62,"column":8}}]},"6":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":72,"column":8}},{"start":{"line":72,"column":8},"end":{"line":72,"column":8}}]},"7":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":12},"end":{"line":77,"column":12}},{"start":{"line":77,"column":12},"end":{"line":77,"column":12}}]},"8":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"9":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":38}},{"start":{"line":87,"column":42},"end":{"line":87,"column":61}}]},"10":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":88,"column":8}},{"start":{"line":88,"column":8},"end":{"line":88,"column":8}}]},"11":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":8}},{"start":{"line":104,"column":8},"end":{"line":104,"column":8}}]},"12":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":19},"end":{"line":116,"column":27}},{"start":{"line":116,"column":31},"end":{"line":116,"column":45}}]},"13":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":8},"end":{"line":117,"column":8}},{"start":{"line":117,"column":8},"end":{"line":117,"column":8}}]},"14":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":10},"end":{"line":125,"column":10}},{"start":{"line":125,"column":10},"end":{"line":125,"column":10}}]},"15":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":14},"end":{"line":131,"column":14}},{"start":{"line":131,"column":14},"end":{"line":131,"column":14}}]},"16":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":19},"end":{"line":140,"column":27}},{"start":{"line":140,"column":31},"end":{"line":140,"column":45}}]},"17":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":141,"column":8}},{"start":{"line":141,"column":8},"end":{"line":141,"column":8}}]},"18":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":16},"end":{"line":147,"column":16}},{"start":{"line":147,"column":16},"end":{"line":147,"column":16}}]},"19":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":20},"end":{"line":153,"column":20}},{"start":{"line":153,"column":20},"end":{"line":153,"column":20}}]},"20":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":23},"end":{"line":175,"column":31}},{"start":{"line":175,"column":35},"end":{"line":175,"column":49}}]},"21":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":12},"end":{"line":176,"column":12}},{"start":{"line":176,"column":12},"end":{"line":176,"column":12}}]},"22":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":16},"end":{"line":176,"column":27}},{"start":{"line":176,"column":31},"end":{"line":176,"column":41}}]},"23":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":16},"end":{"line":184,"column":16}},{"start":{"line":184,"column":16},"end":{"line":184,"column":16}}]},"24":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":23},"end":{"line":188,"column":38}},{"start":{"line":188,"column":42},"end":{"line":188,"column":62}}]},"25":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":24},"end":{"line":192,"column":24}},{"start":{"line":192,"column":24},"end":{"line":192,"column":24}}]},"26":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":28},"end":{"line":199,"column":28}},{"start":{"line":199,"column":28},"end":{"line":199,"column":28}}]},"27":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":8},"end":{"line":237,"column":8}},{"start":{"line":237,"column":8},"end":{"line":237,"column":8}}]},"28":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":16},"end":{"line":298,"column":16}},{"start":{"line":298,"column":16},"end":{"line":298,"column":16}}]},"29":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":16},"end":{"line":324,"column":16}},{"start":{"line":324,"column":16},"end":{"line":324,"column":16}}]},"30":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":16},"end":{"line":343,"column":16}},{"start":{"line":343,"column":16},"end":{"line":343,"column":16}}]},"31":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":16},"end":{"line":361,"column":16}},{"start":{"line":361,"column":16},"end":{"line":361,"column":16}}]},"32":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":16},"end":{"line":377,"column":16}},{"start":{"line":377,"column":16},"end":{"line":377,"column":16}}]},"33":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":16},"end":{"line":393,"column":16}},{"start":{"line":393,"column":16},"end":{"line":393,"column":16}}]},"34":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":12},"end":{"line":401,"column":12}},{"start":{"line":401,"column":12},"end":{"line":401,"column":12}}]},"35":{"line":407,"type":"cond-expr","locations":[{"start":{"line":407,"column":35},"end":{"line":407,"column":37}},{"start":{"line":407,"column":40},"end":{"line":407,"column":53}}]},"36":{"line":407,"type":"cond-expr","locations":[{"start":{"line":407,"column":48},"end":{"line":407,"column":49}},{"start":{"line":407,"column":52},"end":{"line":407,"column":53}}]},"37":{"line":417,"type":"binary-expr","locations":[{"start":{"line":417,"column":19},"end":{"line":417,"column":27}},{"start":{"line":417,"column":31},"end":{"line":417,"column":45}}]},"38":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":8},"end":{"line":420,"column":8}},{"start":{"line":420,"column":8},"end":{"line":420,"column":8}}]},"39":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":16},"end":{"line":432,"column":16}},{"start":{"line":432,"column":16},"end":{"line":432,"column":16}}]},"40":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":12},"end":{"line":446,"column":12}},{"start":{"line":446,"column":12},"end":{"line":446,"column":12}}]},"41":{"line":456,"type":"cond-expr","locations":[{"start":{"line":456,"column":44},"end":{"line":456,"column":52}},{"start":{"line":456,"column":54},"end":{"line":456,"column":64}}]},"42":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":16},"end":{"line":459,"column":16}},{"start":{"line":459,"column":16},"end":{"line":459,"column":16}}]},"43":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":16},"end":{"line":462,"column":16}},{"start":{"line":462,"column":16},"end":{"line":462,"column":16}}]},"44":{"line":477,"type":"binary-expr","locations":[{"start":{"line":477,"column":27},"end":{"line":477,"column":67}},{"start":{"line":477,"column":71},"end":{"line":477,"column":73}}]},"45":{"line":479,"type":"binary-expr","locations":[{"start":{"line":479,"column":23},"end":{"line":481,"column":24}},{"start":{"line":481,"column":28},"end":{"line":481,"column":54}}]},"46":{"line":480,"type":"binary-expr","locations":[{"start":{"line":480,"column":28},"end":{"line":480,"column":29}},{"start":{"line":480,"column":33},"end":{"line":480,"column":58}}]},"47":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":12},"end":{"line":483,"column":12}},{"start":{"line":483,"column":12},"end":{"line":483,"column":12}}]},"48":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":20},"end":{"line":488,"column":20}},{"start":{"line":488,"column":20},"end":{"line":488,"column":20}}]},"49":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":8},"end":{"line":502,"column":8}},{"start":{"line":502,"column":8},"end":{"line":502,"column":8}}]},"50":{"line":508,"type":"binary-expr","locations":[{"start":{"line":508,"column":16},"end":{"line":508,"column":35}},{"start":{"line":508,"column":39},"end":{"line":508,"column":52}}]},"51":{"line":513,"type":"binary-expr","locations":[{"start":{"line":513,"column":39},"end":{"line":513,"column":43}},{"start":{"line":513,"column":47},"end":{"line":513,"column":59}}]},"52":{"line":522,"type":"binary-expr","locations":[{"start":{"line":522,"column":17},"end":{"line":522,"column":32}},{"start":{"line":522,"column":36},"end":{"line":522,"column":44}}]},"53":{"line":526,"type":"cond-expr","locations":[{"start":{"line":526,"column":26},"end":{"line":526,"column":39}},{"start":{"line":526,"column":42},"end":{"line":526,"column":53}}]},"54":{"line":530,"type":"binary-expr","locations":[{"start":{"line":530,"column":19},"end":{"line":530,"column":27}},{"start":{"line":530,"column":31},"end":{"line":530,"column":45}}]},"55":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":8},"end":{"line":531,"column":8}},{"start":{"line":531,"column":8},"end":{"line":531,"column":8}}]},"56":{"line":535,"type":"if","locations":[{"start":{"line":535,"column":8},"end":{"line":535,"column":8}},{"start":{"line":535,"column":8},"end":{"line":535,"column":8}}]},"57":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":16},"end":{"line":540,"column":16}},{"start":{"line":540,"column":16},"end":{"line":540,"column":16}}]},"58":{"line":547,"type":"if","locations":[{"start":{"line":547,"column":20},"end":{"line":547,"column":20}},{"start":{"line":547,"column":20},"end":{"line":547,"column":20}}]},"59":{"line":563,"type":"binary-expr","locations":[{"start":{"line":563,"column":19},"end":{"line":563,"column":27}},{"start":{"line":563,"column":31},"end":{"line":563,"column":45}}]},"60":{"line":564,"type":"if","locations":[{"start":{"line":564,"column":8},"end":{"line":564,"column":8}},{"start":{"line":564,"column":8},"end":{"line":564,"column":8}}]},"61":{"line":566,"type":"if","locations":[{"start":{"line":566,"column":16},"end":{"line":566,"column":16}},{"start":{"line":566,"column":16},"end":{"line":566,"column":16}}]},"62":{"line":569,"type":"if","locations":[{"start":{"line":569,"column":24},"end":{"line":569,"column":24}},{"start":{"line":569,"column":24},"end":{"line":569,"column":24}}]},"63":{"line":582,"type":"if","locations":[{"start":{"line":582,"column":20},"end":{"line":582,"column":20}},{"start":{"line":582,"column":20},"end":{"line":582,"column":20}}]},"64":{"line":603,"type":"binary-expr","locations":[{"start":{"line":603,"column":19},"end":{"line":603,"column":27}},{"start":{"line":603,"column":31},"end":{"line":603,"column":45}}]},"65":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":8},"end":{"line":604,"column":8}},{"start":{"line":604,"column":8},"end":{"line":604,"column":8}}]},"66":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":16},"end":{"line":606,"column":16}},{"start":{"line":606,"column":16},"end":{"line":606,"column":16}}]},"67":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":24},"end":{"line":609,"column":24}},{"start":{"line":609,"column":24},"end":{"line":609,"column":24}}]},"68":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":20},"end":{"line":622,"column":20}},{"start":{"line":622,"column":20},"end":{"line":622,"column":20}}]},"69":{"line":637,"type":"if","locations":[{"start":{"line":637,"column":16},"end":{"line":637,"column":16}},{"start":{"line":637,"column":16},"end":{"line":637,"column":16}}]},"70":{"line":643,"type":"cond-expr","locations":[{"start":{"line":643,"column":52},"end":{"line":643,"column":75}},{"start":{"line":643,"column":77},"end":{"line":643,"column":81}}]},"71":{"line":663,"type":"binary-expr","locations":[{"start":{"line":663,"column":29},"end":{"line":663,"column":30}},{"start":{"line":663,"column":34},"end":{"line":663,"column":36}}]},"72":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":8},"end":{"line":674,"column":8}},{"start":{"line":674,"column":8},"end":{"line":674,"column":8}}]},"73":{"line":676,"type":"if","locations":[{"start":{"line":676,"column":16},"end":{"line":676,"column":16}},{"start":{"line":676,"column":16},"end":{"line":676,"column":16}}]},"74":{"line":689,"type":"if","locations":[{"start":{"line":689,"column":12},"end":{"line":689,"column":12}},{"start":{"line":689,"column":12},"end":{"line":689,"column":12}}]},"75":{"line":693,"type":"if","locations":[{"start":{"line":693,"column":12},"end":{"line":693,"column":12}},{"start":{"line":693,"column":12},"end":{"line":693,"column":12}}]},"76":{"line":703,"type":"if","locations":[{"start":{"line":703,"column":8},"end":{"line":703,"column":8}},{"start":{"line":703,"column":8},"end":{"line":703,"column":8}}]},"77":{"line":705,"type":"if","locations":[{"start":{"line":705,"column":16},"end":{"line":705,"column":16}},{"start":{"line":705,"column":16},"end":{"line":705,"column":16}}]},"78":{"line":718,"type":"if","locations":[{"start":{"line":718,"column":12},"end":{"line":718,"column":12}},{"start":{"line":718,"column":12},"end":{"line":718,"column":12}}]},"79":{"line":722,"type":"if","locations":[{"start":{"line":722,"column":12},"end":{"line":722,"column":12}},{"start":{"line":722,"column":12},"end":{"line":722,"column":12}}]},"80":{"line":732,"type":"if","locations":[{"start":{"line":732,"column":8},"end":{"line":732,"column":8}},{"start":{"line":732,"column":8},"end":{"line":732,"column":8}}]},"81":{"line":736,"type":"if","locations":[{"start":{"line":736,"column":10},"end":{"line":736,"column":10}},{"start":{"line":736,"column":10},"end":{"line":736,"column":10}}]},"82":{"line":739,"type":"if","locations":[{"start":{"line":739,"column":10},"end":{"line":739,"column":10}},{"start":{"line":739,"column":10},"end":{"line":739,"column":10}}]},"83":{"line":742,"type":"if","locations":[{"start":{"line":742,"column":10},"end":{"line":742,"column":10}},{"start":{"line":742,"column":10},"end":{"line":742,"column":10}}]},"84":{"line":745,"type":"if","locations":[{"start":{"line":745,"column":17},"end":{"line":745,"column":17}},{"start":{"line":745,"column":17},"end":{"line":745,"column":17}}]},"85":{"line":753,"type":"cond-expr","locations":[{"start":{"line":753,"column":61},"end":{"line":753,"column":69}},{"start":{"line":753,"column":72},"end":{"line":753,"column":76}}]},"86":{"line":756,"type":"if","locations":[{"start":{"line":756,"column":14},"end":{"line":756,"column":14}},{"start":{"line":756,"column":14},"end":{"line":756,"column":14}}]},"87":{"line":762,"type":"if","locations":[{"start":{"line":762,"column":14},"end":{"line":762,"column":14}},{"start":{"line":762,"column":14},"end":{"line":762,"column":14}}]},"88":{"line":762,"type":"binary-expr","locations":[{"start":{"line":762,"column":18},"end":{"line":762,"column":29}},{"start":{"line":762,"column":33},"end":{"line":762,"column":65}}]},"89":{"line":789,"type":"if","locations":[{"start":{"line":789,"column":16},"end":{"line":789,"column":16}},{"start":{"line":789,"column":16},"end":{"line":789,"column":16}}]},"90":{"line":789,"type":"binary-expr","locations":[{"start":{"line":789,"column":20},"end":{"line":789,"column":29}},{"start":{"line":789,"column":33},"end":{"line":789,"column":56}},{"start":{"line":789,"column":60},"end":{"line":789,"column":74}}]},"91":{"line":791,"type":"if","locations":[{"start":{"line":791,"column":20},"end":{"line":791,"column":20}},{"start":{"line":791,"column":20},"end":{"line":791,"column":20}}]},"92":{"line":791,"type":"binary-expr","locations":[{"start":{"line":791,"column":24},"end":{"line":791,"column":31}},{"start":{"line":791,"column":35},"end":{"line":791,"column":55}}]},"93":{"line":797,"type":"if","locations":[{"start":{"line":797,"column":24},"end":{"line":797,"column":24}},{"start":{"line":797,"column":24},"end":{"line":797,"column":24}}]},"94":{"line":800,"type":"if","locations":[{"start":{"line":800,"column":24},"end":{"line":800,"column":24}},{"start":{"line":800,"column":24},"end":{"line":800,"column":24}}]},"95":{"line":800,"type":"binary-expr","locations":[{"start":{"line":800,"column":28},"end":{"line":800,"column":35}},{"start":{"line":800,"column":39},"end":{"line":800,"column":69}}]},"96":{"line":819,"type":"if","locations":[{"start":{"line":819,"column":16},"end":{"line":819,"column":16}},{"start":{"line":819,"column":16},"end":{"line":819,"column":16}}]},"97":{"line":823,"type":"if","locations":[{"start":{"line":823,"column":16},"end":{"line":823,"column":16}},{"start":{"line":823,"column":16},"end":{"line":823,"column":16}}]},"98":{"line":846,"type":"if","locations":[{"start":{"line":846,"column":12},"end":{"line":846,"column":12}},{"start":{"line":846,"column":12},"end":{"line":846,"column":12}}]},"99":{"line":856,"type":"if","locations":[{"start":{"line":856,"column":10},"end":{"line":856,"column":10}},{"start":{"line":856,"column":10},"end":{"line":856,"column":10}}]},"100":{"line":859,"type":"if","locations":[{"start":{"line":859,"column":10},"end":{"line":859,"column":10}},{"start":{"line":859,"column":10},"end":{"line":859,"column":10}}]},"101":{"line":862,"type":"if","locations":[{"start":{"line":862,"column":10},"end":{"line":862,"column":10}},{"start":{"line":862,"column":10},"end":{"line":862,"column":10}}]},"102":{"line":865,"type":"if","locations":[{"start":{"line":865,"column":17},"end":{"line":865,"column":17}},{"start":{"line":865,"column":17},"end":{"line":865,"column":17}}]},"103":{"line":874,"type":"cond-expr","locations":[{"start":{"line":874,"column":61},"end":{"line":874,"column":69}},{"start":{"line":874,"column":72},"end":{"line":874,"column":76}}]},"104":{"line":879,"type":"if","locations":[{"start":{"line":879,"column":14},"end":{"line":879,"column":14}},{"start":{"line":879,"column":14},"end":{"line":879,"column":14}}]},"105":{"line":879,"type":"binary-expr","locations":[{"start":{"line":879,"column":18},"end":{"line":879,"column":29}},{"start":{"line":879,"column":33},"end":{"line":879,"column":65}}]},"106":{"line":912,"type":"if","locations":[{"start":{"line":912,"column":16},"end":{"line":912,"column":16}},{"start":{"line":912,"column":16},"end":{"line":912,"column":16}}]},"107":{"line":918,"type":"cond-expr","locations":[{"start":{"line":918,"column":67},"end":{"line":918,"column":75}},{"start":{"line":918,"column":78},"end":{"line":918,"column":82}}]},"108":{"line":921,"type":"if","locations":[{"start":{"line":921,"column":20},"end":{"line":921,"column":20}},{"start":{"line":921,"column":20},"end":{"line":921,"column":20}}]},"109":{"line":921,"type":"binary-expr","locations":[{"start":{"line":921,"column":24},"end":{"line":921,"column":39}},{"start":{"line":921,"column":43},"end":{"line":921,"column":67}}]},"110":{"line":928,"type":"if","locations":[{"start":{"line":928,"column":16},"end":{"line":928,"column":16}},{"start":{"line":928,"column":16},"end":{"line":928,"column":16}}]},"111":{"line":929,"type":"if","locations":[{"start":{"line":929,"column":16},"end":{"line":929,"column":16}},{"start":{"line":929,"column":16},"end":{"line":929,"column":16}}]},"112":{"line":930,"type":"if","locations":[{"start":{"line":930,"column":20},"end":{"line":930,"column":20}},{"start":{"line":930,"column":20},"end":{"line":930,"column":20}}]},"113":{"line":930,"type":"binary-expr","locations":[{"start":{"line":930,"column":23},"end":{"line":930,"column":34}},{"start":{"line":930,"column":38},"end":{"line":930,"column":52}}]},"114":{"line":935,"type":"cond-expr","locations":[{"start":{"line":936,"column":30},"end":{"line":936,"column":54}},{"start":{"line":937,"column":30},"end":{"line":937,"column":59}}]},"115":{"line":943,"type":"if","locations":[{"start":{"line":943,"column":16},"end":{"line":943,"column":16}},{"start":{"line":943,"column":16},"end":{"line":943,"column":16}}]},"116":{"line":950,"type":"if","locations":[{"start":{"line":950,"column":24},"end":{"line":950,"column":24}},{"start":{"line":950,"column":24},"end":{"line":950,"column":24}}]},"117":{"line":973,"type":"if","locations":[{"start":{"line":973,"column":16},"end":{"line":973,"column":16}},{"start":{"line":973,"column":16},"end":{"line":973,"column":16}}]},"118":{"line":974,"type":"if","locations":[{"start":{"line":974,"column":20},"end":{"line":974,"column":20}},{"start":{"line":974,"column":20},"end":{"line":974,"column":20}}]},"119":{"line":975,"type":"if","locations":[{"start":{"line":975,"column":24},"end":{"line":975,"column":24}},{"start":{"line":975,"column":24},"end":{"line":975,"column":24}}]},"120":{"line":979,"type":"if","locations":[{"start":{"line":979,"column":25},"end":{"line":979,"column":25}},{"start":{"line":979,"column":25},"end":{"line":979,"column":25}}]},"121":{"line":997,"type":"binary-expr","locations":[{"start":{"line":997,"column":17},"end":{"line":997,"column":23}},{"start":{"line":997,"column":27},"end":{"line":999,"column":9}}]},"122":{"line":1004,"type":"if","locations":[{"start":{"line":1004,"column":12},"end":{"line":1004,"column":12}},{"start":{"line":1004,"column":12},"end":{"line":1004,"column":12}}]},"123":{"line":1009,"type":"if","locations":[{"start":{"line":1009,"column":17},"end":{"line":1009,"column":17}},{"start":{"line":1009,"column":17},"end":{"line":1009,"column":17}}]},"124":{"line":1031,"type":"binary-expr","locations":[{"start":{"line":1031,"column":16},"end":{"line":1031,"column":29}},{"start":{"line":1031,"column":33},"end":{"line":1031,"column":35}}]},"125":{"line":1084,"type":"if","locations":[{"start":{"line":1084,"column":8},"end":{"line":1084,"column":8}},{"start":{"line":1084,"column":8},"end":{"line":1084,"column":8}}]},"126":{"line":1097,"type":"if","locations":[{"start":{"line":1097,"column":12},"end":{"line":1097,"column":12}},{"start":{"line":1097,"column":12},"end":{"line":1097,"column":12}}]},"127":{"line":1098,"type":"if","locations":[{"start":{"line":1098,"column":16},"end":{"line":1098,"column":16}},{"start":{"line":1098,"column":16},"end":{"line":1098,"column":16}}]},"128":{"line":1109,"type":"if","locations":[{"start":{"line":1109,"column":4},"end":{"line":1109,"column":4}},{"start":{"line":1109,"column":4},"end":{"line":1109,"column":4}}]},"129":{"line":1109,"type":"binary-expr","locations":[{"start":{"line":1109,"column":8},"end":{"line":1109,"column":37}},{"start":{"line":1109,"column":41},"end":{"line":1109,"column":55}}]},"130":{"line":1113,"type":"if","locations":[{"start":{"line":1113,"column":9},"end":{"line":1113,"column":9}},{"start":{"line":1113,"column":9},"end":{"line":1113,"column":9}}]},"131":{"line":1113,"type":"binary-expr","locations":[{"start":{"line":1113,"column":13},"end":{"line":1113,"column":42}},{"start":{"line":1113,"column":46},"end":{"line":1113,"column":56}}]}},"code":["/*!"," * async"," * https://github.com/caolan/async"," *"," * Copyright 2010-2014 Caolan McMahon"," * Released under the MIT license"," */","/*jshint onevar: false, indent:4 */","/*global setImmediate: false, setTimeout: false, console: false */","(function () {","","    var async = {};","","    // global on the server, window in the browser","    var root, previous_async;","","    root = this;","    if (root != null) {","      previous_async = root.async;","    }","","    async.noConflict = function () {","        root.async = previous_async;","        return async;","    };","","    function only_once(fn) {","        var called = false;","        return function() {","            if (called) throw new Error(\"Callback was already called.\");","            called = true;","            fn.apply(root, arguments);","        }","    }","","    //// cross-browser compatiblity functions ////","","    var _toString = Object.prototype.toString;","","    var _isArray = Array.isArray || function (obj) {","        return _toString.call(obj) === '[object Array]';","    };","","    var _each = function (arr, iterator) {","        for (var i = 0; i < arr.length; i += 1) {","            iterator(arr[i], i, arr);","        }","    };","","    var _map = function (arr, iterator) {","        if (arr.map) {","            return arr.map(iterator);","        }","        var results = [];","        _each(arr, function (x, i, a) {","            results.push(iterator(x, i, a));","        });","        return results;","    };","","    var _reduce = function (arr, iterator, memo) {","        if (arr.reduce) {","            return arr.reduce(iterator, memo);","        }","        _each(arr, function (x, i, a) {","            memo = iterator(memo, x, i, a);","        });","        return memo;","    };","","    var _keys = function (obj) {","        if (Object.keys) {","            return Object.keys(obj);","        }","        var keys = [];","        for (var k in obj) {","            if (obj.hasOwnProperty(k)) {","                keys.push(k);","            }","        }","        return keys;","    };","","    //// exported async module functions ////","","    //// nextTick implementation with browser-compatible fallback ////","    if (typeof process === 'undefined' || !(process.nextTick)) {","        if (typeof setImmediate === 'function') {","            async.nextTick = function (fn) {","                // not a direct alias for IE10 compatibility","                setImmediate(fn);","            };","            async.setImmediate = async.nextTick;","        }","        else {","            async.nextTick = function (fn) {","                setTimeout(fn, 0);","            };","            async.setImmediate = async.nextTick;","        }","    }","    else {","        async.nextTick = process.nextTick;","        if (typeof setImmediate !== 'undefined') {","            async.setImmediate = function (fn) {","              // not a direct alias for IE10 compatibility","              setImmediate(fn);","            };","        }","        else {","            async.setImmediate = async.nextTick;","        }","    }","","    async.each = function (arr, iterator, callback) {","        callback = callback || function () {};","        if (!arr.length) {","            return callback();","        }","        var completed = 0;","        _each(arr, function (x) {","            iterator(x, only_once(done) );","        });","        function done(err) {","          if (err) {","              callback(err);","              callback = function () {};","          }","          else {","              completed += 1;","              if (completed >= arr.length) {","                  callback();","              }","          }","        }","    };","    async.forEach = async.each;","","    async.eachSeries = function (arr, iterator, callback) {","        callback = callback || function () {};","        if (!arr.length) {","            return callback();","        }","        var completed = 0;","        var iterate = function () {","            iterator(arr[completed], function (err) {","                if (err) {","                    callback(err);","                    callback = function () {};","                }","                else {","                    completed += 1;","                    if (completed >= arr.length) {","                        callback();","                    }","                    else {","                        iterate();","                    }","                }","            });","        };","        iterate();","    };","    async.forEachSeries = async.eachSeries;","","    async.eachLimit = function (arr, limit, iterator, callback) {","        var fn = _eachLimit(limit);","        fn.apply(null, [arr, iterator, callback]);","    };","    async.forEachLimit = async.eachLimit;","","    var _eachLimit = function (limit) {","","        return function (arr, iterator, callback) {","            callback = callback || function () {};","            if (!arr.length || limit <= 0) {","                return callback();","            }","            var completed = 0;","            var started = 0;","            var running = 0;","","            (function replenish () {","                if (completed >= arr.length) {","                    return callback();","                }","","                while (running < limit && started < arr.length) {","                    started += 1;","                    running += 1;","                    iterator(arr[started - 1], function (err) {","                        if (err) {","                            callback(err);","                            callback = function () {};","                        }","                        else {","                            completed += 1;","                            running -= 1;","                            if (completed >= arr.length) {","                                callback();","                            }","                            else {","                                replenish();","                            }","                        }","                    });","                }","            })();","        };","    };","","","    var doParallel = function (fn) {","        return function () {","            var args = Array.prototype.slice.call(arguments);","            return fn.apply(null, [async.each].concat(args));","        };","    };","    var doParallelLimit = function(limit, fn) {","        return function () {","            var args = Array.prototype.slice.call(arguments);","            return fn.apply(null, [_eachLimit(limit)].concat(args));","        };","    };","    var doSeries = function (fn) {","        return function () {","            var args = Array.prototype.slice.call(arguments);","            return fn.apply(null, [async.eachSeries].concat(args));","        };","    };","","","    var _asyncMap = function (eachfn, arr, iterator, callback) {","        arr = _map(arr, function (x, i) {","            return {index: i, value: x};","        });","        if (!callback) {","            eachfn(arr, function (x, callback) {","                iterator(x.value, function (err) {","                    callback(err);","                });","            });","        } else {","            var results = [];","            eachfn(arr, function (x, callback) {","                iterator(x.value, function (err, v) {","                    results[x.index] = v;","                    callback(err);","                });","            }, function (err) {","                callback(err, results);","            });","        }","    };","    async.map = doParallel(_asyncMap);","    async.mapSeries = doSeries(_asyncMap);","    async.mapLimit = function (arr, limit, iterator, callback) {","        return _mapLimit(limit)(arr, iterator, callback);","    };","","    var _mapLimit = function(limit) {","        return doParallelLimit(limit, _asyncMap);","    };","","    // reduce only has a series version, as doing reduce in parallel won't","    // work in many situations.","    async.reduce = function (arr, memo, iterator, callback) {","        async.eachSeries(arr, function (x, callback) {","            iterator(memo, x, function (err, v) {","                memo = v;","                callback(err);","            });","        }, function (err) {","            callback(err, memo);","        });","    };","    // inject alias","    async.inject = async.reduce;","    // foldl alias","    async.foldl = async.reduce;","","    async.reduceRight = function (arr, memo, iterator, callback) {","        var reversed = _map(arr, function (x) {","            return x;","        }).reverse();","        async.reduce(reversed, memo, iterator, callback);","    };","    // foldr alias","    async.foldr = async.reduceRight;","","    var _filter = function (eachfn, arr, iterator, callback) {","        var results = [];","        arr = _map(arr, function (x, i) {","            return {index: i, value: x};","        });","        eachfn(arr, function (x, callback) {","            iterator(x.value, function (v) {","                if (v) {","                    results.push(x);","                }","                callback();","            });","        }, function (err) {","            callback(_map(results.sort(function (a, b) {","                return a.index - b.index;","            }), function (x) {","                return x.value;","            }));","        });","    };","    async.filter = doParallel(_filter);","    async.filterSeries = doSeries(_filter);","    // select alias","    async.select = async.filter;","    async.selectSeries = async.filterSeries;","","    var _reject = function (eachfn, arr, iterator, callback) {","        var results = [];","        arr = _map(arr, function (x, i) {","            return {index: i, value: x};","        });","        eachfn(arr, function (x, callback) {","            iterator(x.value, function (v) {","                if (!v) {","                    results.push(x);","                }","                callback();","            });","        }, function (err) {","            callback(_map(results.sort(function (a, b) {","                return a.index - b.index;","            }), function (x) {","                return x.value;","            }));","        });","    };","    async.reject = doParallel(_reject);","    async.rejectSeries = doSeries(_reject);","","    var _detect = function (eachfn, arr, iterator, main_callback) {","        eachfn(arr, function (x, callback) {","            iterator(x, function (result) {","                if (result) {","                    main_callback(x);","                    main_callback = function () {};","                }","                else {","                    callback();","                }","            });","        }, function (err) {","            main_callback();","        });","    };","    async.detect = doParallel(_detect);","    async.detectSeries = doSeries(_detect);","","    async.some = function (arr, iterator, main_callback) {","        async.each(arr, function (x, callback) {","            iterator(x, function (v) {","                if (v) {","                    main_callback(true);","                    main_callback = function () {};","                }","                callback();","            });","        }, function (err) {","            main_callback(false);","        });","    };","    // any alias","    async.any = async.some;","","    async.every = function (arr, iterator, main_callback) {","        async.each(arr, function (x, callback) {","            iterator(x, function (v) {","                if (!v) {","                    main_callback(false);","                    main_callback = function () {};","                }","                callback();","            });","        }, function (err) {","            main_callback(true);","        });","    };","    // all alias","    async.all = async.every;","","    async.sortBy = function (arr, iterator, callback) {","        async.map(arr, function (x, callback) {","            iterator(x, function (err, criteria) {","                if (err) {","                    callback(err);","                }","                else {","                    callback(null, {value: x, criteria: criteria});","                }","            });","        }, function (err, results) {","            if (err) {","                return callback(err);","            }","            else {","                var fn = function (left, right) {","                    var a = left.criteria, b = right.criteria;","                    return a < b ? -1 : a > b ? 1 : 0;","                };","                callback(null, _map(results.sort(fn), function (x) {","                    return x.value;","                }));","            }","        });","    };","","    async.auto = function (tasks, callback) {","        callback = callback || function () {};","        var keys = _keys(tasks);","        var remainingTasks = keys.length","        if (!remainingTasks) {","            return callback();","        }","","        var results = {};","","        var listeners = [];","        var addListener = function (fn) {","            listeners.unshift(fn);","        };","        var removeListener = function (fn) {","            for (var i = 0; i < listeners.length; i += 1) {","                if (listeners[i] === fn) {","                    listeners.splice(i, 1);","                    return;","                }","            }","        };","        var taskComplete = function () {","            remainingTasks--","            _each(listeners.slice(0), function (fn) {","                fn();","            });","        };","","        addListener(function () {","            if (!remainingTasks) {","                var theCallback = callback;","                // prevent final callback from calling itself if it errors","                callback = function () {};","","                theCallback(null, results);","            }","        });","","        _each(keys, function (k) {","            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];","            var taskCallback = function (err) {","                var args = Array.prototype.slice.call(arguments, 1);","                if (args.length <= 1) {","                    args = args[0];","                }","                if (err) {","                    var safeResults = {};","                    _each(_keys(results), function(rkey) {","                        safeResults[rkey] = results[rkey];","                    });","                    safeResults[k] = args;","                    callback(err, safeResults);","                    // stop subsequent errors hitting callback multiple times","                    callback = function () {};","                }","                else {","                    results[k] = args;","                    async.setImmediate(taskComplete);","                }","            };","            var requires = task.slice(0, Math.abs(task.length - 1)) || [];","            var ready = function () {","                return _reduce(requires, function (a, x) {","                    return (a && results.hasOwnProperty(x));","                }, true) && !results.hasOwnProperty(k);","            };","            if (ready()) {","                task[task.length - 1](taskCallback, results);","            }","            else {","                var listener = function () {","                    if (ready()) {","                        removeListener(listener);","                        task[task.length - 1](taskCallback, results);","                    }","                };","                addListener(listener);","            }","        });","    };","","    async.retry = function(times, task, callback) {","        var DEFAULT_TIMES = 5;","        var attempts = [];","        // Use defaults if times not passed","        if (typeof times === 'function') {","            callback = task;","            task = times;","            times = DEFAULT_TIMES;","        }","        // Make sure times is a number","        times = parseInt(times, 10) || DEFAULT_TIMES;","        var wrappedTask = function(wrappedCallback, wrappedResults) {","            var retryAttempt = function(task, finalAttempt) {","                return function(seriesCallback) {","                    task(function(err, result){","                        seriesCallback(!err || finalAttempt, {err: err, result: result});","                    }, wrappedResults);","                };","            };","            while (times) {","                attempts.push(retryAttempt(task, !(times-=1)));","            }","            async.series(attempts, function(done, data){","                data = data[data.length - 1];","                (wrappedCallback || callback)(data.err, data.result);","            });","        }","        // If a callback is passed, run this as a controll flow","        return callback ? wrappedTask() : wrappedTask","    };","","    async.waterfall = function (tasks, callback) {","        callback = callback || function () {};","        if (!_isArray(tasks)) {","          var err = new Error('First argument to waterfall must be an array of functions');","          return callback(err);","        }","        if (!tasks.length) {","            return callback();","        }","        var wrapIterator = function (iterator) {","            return function (err) {","                if (err) {","                    callback.apply(null, arguments);","                    callback = function () {};","                }","                else {","                    var args = Array.prototype.slice.call(arguments, 1);","                    var next = iterator.next();","                    if (next) {","                        args.push(wrapIterator(next));","                    }","                    else {","                        args.push(callback);","                    }","                    async.setImmediate(function () {","                        iterator.apply(null, args);","                    });","                }","            };","        };","        wrapIterator(async.iterator(tasks))();","    };","","    var _parallel = function(eachfn, tasks, callback) {","        callback = callback || function () {};","        if (_isArray(tasks)) {","            eachfn.map(tasks, function (fn, callback) {","                if (fn) {","                    fn(function (err) {","                        var args = Array.prototype.slice.call(arguments, 1);","                        if (args.length <= 1) {","                            args = args[0];","                        }","                        callback.call(null, err, args);","                    });","                }","            }, callback);","        }","        else {","            var results = {};","            eachfn.each(_keys(tasks), function (k, callback) {","                tasks[k](function (err) {","                    var args = Array.prototype.slice.call(arguments, 1);","                    if (args.length <= 1) {","                        args = args[0];","                    }","                    results[k] = args;","                    callback(err);","                });","            }, function (err) {","                callback(err, results);","            });","        }","    };","","    async.parallel = function (tasks, callback) {","        _parallel({ map: async.map, each: async.each }, tasks, callback);","    };","","    async.parallelLimit = function(tasks, limit, callback) {","        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);","    };","","    async.series = function (tasks, callback) {","        callback = callback || function () {};","        if (_isArray(tasks)) {","            async.mapSeries(tasks, function (fn, callback) {","                if (fn) {","                    fn(function (err) {","                        var args = Array.prototype.slice.call(arguments, 1);","                        if (args.length <= 1) {","                            args = args[0];","                        }","                        callback.call(null, err, args);","                    });","                }","            }, callback);","        }","        else {","            var results = {};","            async.eachSeries(_keys(tasks), function (k, callback) {","                tasks[k](function (err) {","                    var args = Array.prototype.slice.call(arguments, 1);","                    if (args.length <= 1) {","                        args = args[0];","                    }","                    results[k] = args;","                    callback(err);","                });","            }, function (err) {","                callback(err, results);","            });","        }","    };","","    async.iterator = function (tasks) {","        var makeCallback = function (index) {","            var fn = function () {","                if (tasks.length) {","                    tasks[index].apply(null, arguments);","                }","                return fn.next();","            };","            fn.next = function () {","                return (index < tasks.length - 1) ? makeCallback(index + 1): null;","            };","            return fn;","        };","        return makeCallback(0);","    };","","    async.apply = function (fn) {","        var args = Array.prototype.slice.call(arguments, 1);","        return function () {","            return fn.apply(","                null, args.concat(Array.prototype.slice.call(arguments))","            );","        };","    };","","    var _concat = function (eachfn, arr, fn, callback) {","        var r = [];","        eachfn(arr, function (x, cb) {","            fn(x, function (err, y) {","                r = r.concat(y || []);","                cb(err);","            });","        }, function (err) {","            callback(err, r);","        });","    };","    async.concat = doParallel(_concat);","    async.concatSeries = doSeries(_concat);","","    async.whilst = function (test, iterator, callback) {","        if (test()) {","            iterator(function (err) {","                if (err) {","                    return callback(err);","                }","                async.whilst(test, iterator, callback);","            });","        }","        else {","            callback();","        }","    };","","    async.doWhilst = function (iterator, test, callback) {","        iterator(function (err) {","            if (err) {","                return callback(err);","            }","            var args = Array.prototype.slice.call(arguments, 1);","            if (test.apply(null, args)) {","                async.doWhilst(iterator, test, callback);","            }","            else {","                callback();","            }","        });","    };","","    async.until = function (test, iterator, callback) {","        if (!test()) {","            iterator(function (err) {","                if (err) {","                    return callback(err);","                }","                async.until(test, iterator, callback);","            });","        }","        else {","            callback();","        }","    };","","    async.doUntil = function (iterator, test, callback) {","        iterator(function (err) {","            if (err) {","                return callback(err);","            }","            var args = Array.prototype.slice.call(arguments, 1);","            if (!test.apply(null, args)) {","                async.doUntil(iterator, test, callback);","            }","            else {","                callback();","            }","        });","    };","","    async.queue = function (worker, concurrency) {","        if (concurrency === undefined) {","            concurrency = 1;","        }","        function _insert(q, data, pos, callback) {","          if (!q.started){","            q.started = true;","          }","          if (!_isArray(data)) {","              data = [data];","          }","          if(data.length == 0) {","             // call drain immediately if there are no tasks","             return async.setImmediate(function() {","                 if (q.drain) {","                     q.drain();","                 }","             });","          }","          _each(data, function(task) {","              var item = {","                  data: task,","                  callback: typeof callback === 'function' ? callback : null","              };","","              if (pos) {","                q.tasks.unshift(item);","              } else {","                q.tasks.push(item);","              }","","              if (q.saturated && q.tasks.length === q.concurrency) {","                  q.saturated();","              }","              async.setImmediate(q.process);","          });","        }","","        var workers = 0;","        var q = {","            tasks: [],","            concurrency: concurrency,","            saturated: null,","            empty: null,","            drain: null,","            started: false,","            paused: false,","            push: function (data, callback) {","              _insert(q, data, false, callback);","            },","            kill: function () {","              q.drain = null;","              q.tasks = [];","            },","            unshift: function (data, callback) {","              _insert(q, data, true, callback);","            },","            process: function () {","                if (!q.paused && workers < q.concurrency && q.tasks.length) {","                    var task = q.tasks.shift();","                    if (q.empty && q.tasks.length === 0) {","                        q.empty();","                    }","                    workers += 1;","                    var next = function () {","                        workers -= 1;","                        if (task.callback) {","                            task.callback.apply(task, arguments);","                        }","                        if (q.drain && q.tasks.length + workers === 0) {","                            q.drain();","                        }","                        q.process();","                    };","                    var cb = only_once(next);","                    worker(task.data, cb);","                }","            },","            length: function () {","                return q.tasks.length;","            },","            running: function () {","                return workers;","            },","            idle: function() {","                return q.tasks.length + workers === 0;","            },","            pause: function () {","                if (q.paused === true) { return; }","                q.paused = true;","            },","            resume: function () {","                if (q.paused === false) { return; }","                q.paused = false;","                // Need to call q.process once per concurrent","                // worker to preserve full concurrency after pause","                for (var w = 1; w <= q.concurrency; w++) {","                    async.setImmediate(q.process);","                }","            }","        };","        return q;","    };","","    async.priorityQueue = function (worker, concurrency) {","","        function _compareTasks(a, b){","          return a.priority - b.priority;","        };","","        function _binarySearch(sequence, item, compare) {","          var beg = -1,","              end = sequence.length - 1;","          while (beg < end) {","            var mid = beg + ((end - beg + 1) >>> 1);","            if (compare(item, sequence[mid]) >= 0) {","              beg = mid;","            } else {","              end = mid - 1;","            }","          }","          return beg;","        }","","        function _insert(q, data, priority, callback) {","          if (!q.started){","            q.started = true;","          }","          if (!_isArray(data)) {","              data = [data];","          }","          if(data.length == 0) {","             // call drain immediately if there are no tasks","             return async.setImmediate(function() {","                 if (q.drain) {","                     q.drain();","                 }","             });","          }","          _each(data, function(task) {","              var item = {","                  data: task,","                  priority: priority,","                  callback: typeof callback === 'function' ? callback : null","              };","","              q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);","","              if (q.saturated && q.tasks.length === q.concurrency) {","                  q.saturated();","              }","              async.setImmediate(q.process);","          });","        }","","        // Start with a normal queue","        var q = async.queue(worker, concurrency);","","        // Override push to accept second parameter representing priority","        q.push = function (data, priority, callback) {","          _insert(q, data, priority, callback);","        };","","        // Remove unshift function","        delete q.unshift;","","        return q;","    };","","    async.cargo = function (worker, payload) {","        var working     = false,","            tasks       = [];","","        var cargo = {","            tasks: tasks,","            payload: payload,","            saturated: null,","            empty: null,","            drain: null,","            drained: true,","            push: function (data, callback) {","                if (!_isArray(data)) {","                    data = [data];","                }","                _each(data, function(task) {","                    tasks.push({","                        data: task,","                        callback: typeof callback === 'function' ? callback : null","                    });","                    cargo.drained = false;","                    if (cargo.saturated && tasks.length === payload) {","                        cargo.saturated();","                    }","                });","                async.setImmediate(cargo.process);","            },","            process: function process() {","                if (working) return;","                if (tasks.length === 0) {","                    if(cargo.drain && !cargo.drained) cargo.drain();","                    cargo.drained = true;","                    return;","                }","","                var ts = typeof payload === 'number'","                            ? tasks.splice(0, payload)","                            : tasks.splice(0, tasks.length);","","                var ds = _map(ts, function (task) {","                    return task.data;","                });","","                if(cargo.empty) cargo.empty();","                working = true;","                worker(ds, function () {","                    working = false;","","                    var args = arguments;","                    _each(ts, function (data) {","                        if (data.callback) {","                            data.callback.apply(null, args);","                        }","                    });","","                    process();","                });","            },","            length: function () {","                return tasks.length;","            },","            running: function () {","                return working;","            }","        };","        return cargo;","    };","","    var _console_fn = function (name) {","        return function (fn) {","            var args = Array.prototype.slice.call(arguments, 1);","            fn.apply(null, args.concat([function (err) {","                var args = Array.prototype.slice.call(arguments, 1);","                if (typeof console !== 'undefined') {","                    if (err) {","                        if (console.error) {","                            console.error(err);","                        }","                    }","                    else if (console[name]) {","                        _each(args, function (x) {","                            console[name](x);","                        });","                    }","                }","            }]));","        };","    };","    async.log = _console_fn('log');","    async.dir = _console_fn('dir');","    /*async.info = _console_fn('info');","    async.warn = _console_fn('warn');","    async.error = _console_fn('error');*/","","    async.memoize = function (fn, hasher) {","        var memo = {};","        var queues = {};","        hasher = hasher || function (x) {","            return x;","        };","        var memoized = function () {","            var args = Array.prototype.slice.call(arguments);","            var callback = args.pop();","            var key = hasher.apply(null, args);","            if (key in memo) {","                async.nextTick(function () {","                    callback.apply(null, memo[key]);","                });","            }","            else if (key in queues) {","                queues[key].push(callback);","            }","            else {","                queues[key] = [callback];","                fn.apply(null, args.concat([function () {","                    memo[key] = arguments;","                    var q = queues[key];","                    delete queues[key];","                    for (var i = 0, l = q.length; i < l; i++) {","                      q[i].apply(null, arguments);","                    }","                }]));","            }","        };","        memoized.memo = memo;","        memoized.unmemoized = fn;","        return memoized;","    };","","    async.unmemoize = function (fn) {","      return function () {","        return (fn.unmemoized || fn).apply(null, arguments);","      };","    };","","    async.times = function (count, iterator, callback) {","        var counter = [];","        for (var i = 0; i < count; i++) {","            counter.push(i);","        }","        return async.map(counter, iterator, callback);","    };","","    async.timesSeries = function (count, iterator, callback) {","        var counter = [];","        for (var i = 0; i < count; i++) {","            counter.push(i);","        }","        return async.mapSeries(counter, iterator, callback);","    };","","    async.seq = function (/* functions... */) {","        var fns = arguments;","        return function () {","            var that = this;","            var args = Array.prototype.slice.call(arguments);","            var callback = args.pop();","            async.reduce(fns, args, function (newargs, fn, cb) {","                fn.apply(that, newargs.concat([function () {","                    var err = arguments[0];","                    var nextargs = Array.prototype.slice.call(arguments, 1);","                    cb(err, nextargs);","                }]))","            },","            function (err, results) {","                callback.apply(that, [err].concat(results));","            });","        };","    };","","    async.compose = function (/* functions... */) {","      return async.seq.apply(null, Array.prototype.reverse.call(arguments));","    };","","    var _applyEach = function (eachfn, fns /*args...*/) {","        var go = function () {","            var that = this;","            var args = Array.prototype.slice.call(arguments);","            var callback = args.pop();","            return eachfn(fns, function (fn, cb) {","                fn.apply(that, args.concat([cb]));","            },","            callback);","        };","        if (arguments.length > 2) {","            var args = Array.prototype.slice.call(arguments, 2);","            return go.apply(this, args);","        }","        else {","            return go;","        }","    };","    async.applyEach = doParallel(_applyEach);","    async.applyEachSeries = doSeries(_applyEach);","","    async.forever = function (fn, callback) {","        function next(err) {","            if (err) {","                if (callback) {","                    return callback(err);","                }","                throw err;","            }","            fn(next);","        }","        next();","    };","","    // Node.js","    if (typeof module !== 'undefined' && module.exports) {","        module.exports = async;","    }","    // AMD / RequireJS","    else if (typeof define !== 'undefined' && define.amd) {","        define([], function () {","            return async;","        });","    }","    // included directly via <script> tag","    else {","        root.async = async;","    }","","}());",""],"l":{"10":1,"12":1,"15":1,"17":1,"18":1,"19":1,"22":1,"23":0,"24":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"38":1,"40":1,"41":0,"44":1,"45":0,"46":0,"50":1,"51":0,"52":0,"54":0,"55":0,"56":0,"58":0,"61":1,"62":0,"63":0,"65":0,"66":0,"68":0,"71":1,"72":0,"73":0,"75":0,"76":0,"77":0,"78":0,"81":0,"87":1,"88":0,"89":0,"91":0,"93":0,"96":0,"97":0,"99":0,"103":1,"104":1,"105":1,"107":0,"111":0,"115":1,"116":0,"117":0,"118":0,"120":0,"121":0,"122":0,"124":1,"125":0,"126":0,"127":0,"130":0,"131":0,"132":0,"137":1,"139":1,"140":0,"141":0,"142":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"152":0,"153":0,"154":0,"157":0,"162":0,"164":1,"166":1,"167":0,"168":0,"170":1,"172":1,"174":0,"175":0,"176":0,"177":0,"179":0,"180":0,"181":0,"183":0,"184":0,"185":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"197":0,"198":0,"199":0,"200":0,"203":0,"213":1,"214":6,"215":0,"216":0,"219":1,"220":0,"221":0,"222":0,"225":1,"226":6,"227":0,"228":0,"233":1,"234":0,"235":0,"237":0,"238":0,"239":0,"240":0,"244":0,"245":0,"246":0,"247":0,"248":0,"251":0,"255":1,"256":1,"257":1,"258":0,"261":1,"262":0,"267":1,"268":0,"269":0,"270":0,"271":0,"274":0,"278":1,"280":1,"282":1,"283":0,"284":0,"286":0,"289":1,"291":1,"292":0,"293":0,"294":0,"296":0,"297":0,"298":0,"299":0,"301":0,"304":0,"305":0,"307":0,"311":1,"312":1,"314":1,"315":1,"317":1,"318":0,"319":0,"320":0,"322":0,"323":0,"324":0,"325":0,"327":0,"330":0,"331":0,"333":0,"337":1,"338":1,"340":1,"341":0,"342":0,"343":0,"344":0,"345":0,"348":0,"352":0,"355":1,"356":1,"358":1,"359":0,"360":0,"361":0,"362":0,"363":0,"365":0,"368":0,"372":1,"374":1,"375":0,"376":0,"377":0,"378":0,"379":0,"381":0,"384":0,"388":1,"390":1,"391":0,"392":0,"393":0,"394":0,"397":0,"401":0,"402":0,"405":0,"406":0,"407":0,"409":0,"410":0,"416":1,"417":0,"418":0,"419":0,"420":0,"421":0,"424":0,"426":0,"427":0,"428":0,"430":0,"431":0,"432":0,"433":0,"434":0,"438":0,"439":0,"440":0,"441":0,"445":0,"446":0,"447":0,"449":0,"451":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"462":0,"463":0,"464":0,"465":0,"467":0,"468":0,"470":0,"473":0,"474":0,"477":0,"478":0,"479":0,"480":0,"483":0,"484":0,"487":0,"488":0,"489":0,"490":0,"493":0,"498":1,"499":0,"500":0,"502":0,"503":0,"504":0,"505":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"517":0,"518":0,"520":0,"521":0,"522":0,"526":0,"529":1,"530":0,"531":0,"532":0,"533":0,"535":0,"536":0,"538":0,"539":0,"540":0,"541":0,"542":0,"545":0,"546":0,"547":0,"548":0,"551":0,"553":0,"554":0,"559":0,"562":1,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"572":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"585":0,"586":0,"589":0,"594":1,"595":0,"598":1,"599":0,"602":1,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"612":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"625":0,"626":0,"629":0,"634":1,"635":0,"636":0,"637":0,"638":0,"640":0,"642":0,"643":0,"645":0,"647":0,"650":1,"651":0,"652":0,"653":0,"659":1,"660":0,"661":0,"662":0,"663":0,"664":0,"667":0,"670":1,"671":1,"673":1,"674":0,"675":0,"676":0,"677":0,"679":0,"683":0,"687":1,"688":0,"689":0,"690":0,"692":0,"693":0,"694":0,"697":0,"702":1,"703":0,"704":0,"705":0,"706":0,"708":0,"712":0,"716":1,"717":0,"718":0,"719":0,"721":0,"722":0,"723":0,"726":0,"731":1,"732":0,"733":0,"735":1,"736":0,"737":0,"739":0,"740":0,"742":0,"744":0,"745":0,"746":0,"750":0,"751":0,"756":0,"757":0,"759":0,"762":0,"763":0,"765":0,"769":0,"770":0,"779":0,"782":0,"783":0,"786":0,"789":0,"790":0,"791":0,"792":0,"794":0,"795":0,"796":0,"797":0,"798":0,"800":0,"801":0,"803":0,"805":0,"806":0,"810":0,"813":0,"816":0,"819":0,"820":0,"823":0,"824":0,"827":0,"828":0,"832":0,"835":1,"837":1,"838":0,"841":1,"842":0,"844":0,"845":0,"846":0,"847":0,"849":0,"852":0,"855":1,"856":0,"857":0,"859":0,"860":0,"862":0,"864":0,"865":0,"866":0,"870":0,"871":0,"877":0,"879":0,"880":0,"882":0,"887":0,"890":0,"891":0,"895":0,"897":0,"900":1,"901":0,"904":0,"912":0,"913":0,"915":0,"916":0,"920":0,"921":0,"922":0,"925":0,"928":0,"929":0,"930":0,"931":0,"932":0,"935":0,"939":0,"940":0,"943":0,"944":0,"945":0,"946":0,"948":0,"949":0,"950":0,"951":0,"955":0,"959":0,"962":0,"965":0,"968":1,"969":2,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"979":0,"980":0,"981":0,"988":1,"989":1,"994":1,"995":0,"996":0,"997":0,"998":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1009":0,"1010":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1024":0,"1025":0,"1026":0,"1029":1,"1030":0,"1031":0,"1035":1,"1036":0,"1037":0,"1038":0,"1040":0,"1043":1,"1044":0,"1045":0,"1046":0,"1048":0,"1051":1,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1065":0,"1070":1,"1071":0,"1074":1,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1084":0,"1085":0,"1086":0,"1089":0,"1092":1,"1093":1,"1095":1,"1096":1,"1097":0,"1098":0,"1099":0,"1101":0,"1103":0,"1105":0,"1109":1,"1110":1,"1113":0,"1114":0,"1115":0,"1120":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-phase/lib/merge-name-lists.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-phase/lib/merge-name-lists.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"mergePhaseNameLists","line":45,"loc":{"start":{"line":45,"column":17},"end":{"line":45,"column":74}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"2":{"start":{"line":45,"column":0},"end":{"line":81,"column":2}},"3":{"start":{"line":46,"column":2},"end":{"line":46,"column":56}},"4":{"start":{"line":46,"column":28},"end":{"line":46,"column":56}},"5":{"start":{"line":48,"column":2},"end":{"line":48,"column":41}},"6":{"start":{"line":49,"column":2},"end":{"line":49,"column":54}},"7":{"start":{"line":51,"column":2},"end":{"line":56,"column":3}},"8":{"start":{"line":54,"column":4},"end":{"line":54,"column":46}},"9":{"start":{"line":55,"column":4},"end":{"line":55,"column":17}},"10":{"start":{"line":59,"column":2},"end":{"line":78,"column":3}},"11":{"start":{"line":60,"column":4},"end":{"line":60,"column":44}},"12":{"start":{"line":61,"column":4},"end":{"line":61,"column":51}},"13":{"start":{"line":62,"column":4},"end":{"line":62,"column":63}},"14":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"15":{"start":{"line":67,"column":6},"end":{"line":71,"column":7}},"16":{"start":{"line":68,"column":8},"end":{"line":70,"column":58}},"17":{"start":{"line":72,"column":6},"end":{"line":72,"column":58}},"18":{"start":{"line":73,"column":6},"end":{"line":73,"column":56}},"19":{"start":{"line":76,"column":6},"end":{"line":76,"column":28}},"20":{"start":{"line":80,"column":2},"end":{"line":80,"column":21}}},"branchMap":{"1":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"2":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"3":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"4":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":6}},{"start":{"line":67,"column":6},"end":{"line":67,"column":6}}]}},"code":["// Copyright IBM Corp. 2014. All Rights Reserved.","// Node module: loopback-phase","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","var g = require('strong-globalize')();","","/**"," * Extend the list of builtin phases by merging in an array of phases"," * requested by a user while preserving the relative order of phases"," * as specified by both arrays."," *"," * If the first new name does not match any existing phase, it is inserted"," * as the first phase in the new list. The same applies for the second phase,"," * and so on, until an existing phase is found."," *"," * Any new names in the middle of the array are inserted immediatelly after"," * the last common phase. For example, extending"," * `[\"initial\", \"session\", \"auth\"]` with `[\"initial\", \"preauth\", \"auth\"]`"," * results in `[\"initial\", \"preauth\", \"session\", \"auth\"]`."," *"," *"," * **Example**"," *"," * ```js"," * var result = mergePhaseNameLists("," *   ['initial', 'session', 'auth', 'routes', 'files', 'final'],"," *   ['initial', 'postinit', 'preauth', 'auth',"," *     'routes', 'subapps', 'final', 'last']"," * );"," *"," * // result: ["," * //   'initial', 'postinit', 'preauth', 'session', 'auth',"," * //   'routes', 'subapps', 'files', 'final', 'last'"," * // ]"," * ```"," *"," * @param {Array} currentNames The current list of phase names."," * @param {Array} namesToMerge The items to add (zip merge) into the target"," *   array."," * @returns {Array} A new array containing combined items from both arrays."," *"," * @header mergePhaseNameLists"," */","module.exports = function mergePhaseNameLists(currentNames, namesToMerge) {","  if (!namesToMerge.length) return currentNames.slice();","","  var targetArray = currentNames.slice();","  var targetIx = targetArray.indexOf(namesToMerge[0]);","","  if (targetIx === -1) {","    // the first new item does not match any existing one","    // start adding the new items at the start of the list","    targetArray.splice(0, 0, namesToMerge[0]);","    targetIx = 0;","  }","","  // merge (zip) two arrays","  for (var sourceIx = 1; sourceIx < namesToMerge.length; sourceIx++) {","    var valueToAdd = namesToMerge[sourceIx];","    var previousValue = namesToMerge[sourceIx - 1];","    var existingIx = targetArray.indexOf(valueToAdd, targetIx);","","    if (existingIx === -1) {","      // A new phase - try to add it after the last one,","      // unless it was already registered","      if (targetArray.indexOf(valueToAdd) !== -1) {","        throw new Error(g.f('Ordering conflict: cannot add \"%s' +","        '\" after \"%s\", because the opposite order was ' +","        ' already specified', valueToAdd, previousValue));","      }","      var previousIx = targetArray.indexOf(previousValue);","      targetArray.splice(previousIx + 1, 0, valueToAdd);","    } else {","      // An existing phase - move the pointer","      targetIx = existingIx;","    }","  }","","  return targetArray;","};",""],"l":{"6":1,"45":1,"46":0,"48":0,"49":0,"51":0,"54":0,"55":0,"59":0,"60":0,"61":0,"62":0,"64":0,"67":0,"68":0,"72":0,"73":0,"76":0,"80":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/application.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/application.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":1,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":1,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":1,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":1,"215":0,"216":1,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0,0],"60":[0,0],"61":[0,0],"62":[0,0,0],"63":[0,0],"64":[0,0,0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0,0],"76":[0,0],"77":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"fnMap":{"1":{"name":"App","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":15}}},"2":{"name":"(anonymous_2)","line":61,"loc":{"start":{"line":61,"column":14},"end":{"line":61,"column":25}}},"3":{"name":"(anonymous_3)","line":79,"loc":{"start":{"line":79,"column":13},"end":{"line":79,"column":29}}},"4":{"name":"(anonymous_4)","line":113,"loc":{"start":{"line":113,"column":12},"end":{"line":113,"column":36}}},"5":{"name":"(anonymous_5)","line":141,"loc":{"start":{"line":141,"column":53},"end":{"line":141,"column":68}}},"6":{"name":"(anonymous_6)","line":153,"loc":{"start":{"line":153,"column":35},"end":{"line":153,"column":63}}},"7":{"name":"(anonymous_7)","line":156,"loc":{"start":{"line":156,"column":32},"end":{"line":156,"column":48}}},"8":{"name":"(anonymous_8)","line":217,"loc":{"start":{"line":217,"column":13},"end":{"line":217,"column":24}}},"9":{"name":"(anonymous_9)","line":227,"loc":{"start":{"line":227,"column":17},"end":{"line":227,"column":40}}},"10":{"name":"(anonymous_10)","line":258,"loc":{"start":{"line":258,"column":16},"end":{"line":258,"column":42}}},"11":{"name":"(anonymous_11)","line":269,"loc":{"start":{"line":269,"column":20},"end":{"line":269,"column":31}}},"12":{"name":"(anonymous_12)","line":272,"loc":{"start":{"line":272,"column":35},"end":{"line":272,"column":57}}},"13":{"name":"(anonymous_13)","line":284,"loc":{"start":{"line":284,"column":14},"end":{"line":284,"column":38}}},"14":{"name":"(anonymous_14)","line":293,"loc":{"start":{"line":293,"column":28},"end":{"line":293,"column":50}}},"15":{"name":"(anonymous_15)","line":310,"loc":{"start":{"line":310,"column":17},"end":{"line":310,"column":35}}},"16":{"name":"(anonymous_16)","line":318,"loc":{"start":{"line":318,"column":24},"end":{"line":318,"column":36}}},"17":{"name":"(anonymous_17)","line":343,"loc":{"start":{"line":343,"column":26},"end":{"line":343,"column":46}}},"18":{"name":"(anonymous_18)","line":370,"loc":{"start":{"line":370,"column":8},"end":{"line":370,"column":31}}},"19":{"name":"(anonymous_19)","line":409,"loc":{"start":{"line":409,"column":32},"end":{"line":409,"column":43}}},"20":{"name":"scheduleVerification","line":425,"loc":{"start":{"line":425,"column":2},"end":{"line":425,"column":49}}},"21":{"name":"verifyAccessTokenRelations","line":433,"loc":{"start":{"line":433,"column":2},"end":{"line":433,"column":45}}},"22":{"name":"verifyUserRelations","line":459,"loc":{"start":{"line":459,"column":2},"end":{"line":459,"column":38}}},"23":{"name":"(anonymous_23)","line":486,"loc":{"start":{"line":486,"column":11},"end":{"line":486,"column":29}}},"24":{"name":"dataSourcesFromConfig","line":491,"loc":{"start":{"line":491,"column":0},"end":{"line":491,"column":74}}},"25":{"name":"configureModel","line":515,"loc":{"start":{"line":515,"column":0},"end":{"line":515,"column":48}}},"26":{"name":"setSharedMethodSharedProperties","line":541,"loc":{"start":{"line":541,"column":0},"end":{"line":541,"column":67}}},"27":{"name":"(anonymous_27)","line":562,"loc":{"start":{"line":562,"column":32},"end":{"line":562,"column":50}}},"28":{"name":"(anonymous_28)","line":571,"loc":{"start":{"line":571,"column":24},"end":{"line":571,"column":47}}},"29":{"name":"clearHandlerCache","line":584,"loc":{"start":{"line":584,"column":0},"end":{"line":584,"column":32}}},"30":{"name":"(anonymous_30)","line":616,"loc":{"start":{"line":616,"column":13},"end":{"line":616,"column":26}}},"31":{"name":"(anonymous_31)","line":621,"loc":{"start":{"line":621,"column":25},"end":{"line":621,"column":36}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":67}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":23}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":47}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":53}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":27}},"12":{"start":{"line":44,"column":0},"end":{"line":46,"column":1}},"13":{"start":{"line":52,"column":0},"end":{"line":52,"column":30}},"14":{"start":{"line":61,"column":0},"end":{"line":73,"column":2}},"15":{"start":{"line":62,"column":2},"end":{"line":72,"column":3}},"16":{"start":{"line":63,"column":4},"end":{"line":63,"column":25}},"17":{"start":{"line":65,"column":4},"end":{"line":65,"column":21}},"18":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"19":{"start":{"line":68,"column":6},"end":{"line":68,"column":37}},"20":{"start":{"line":71,"column":4},"end":{"line":71,"column":59}},"21":{"start":{"line":79,"column":0},"end":{"line":87,"column":2}},"22":{"start":{"line":80,"column":2},"end":{"line":86,"column":3}},"23":{"start":{"line":81,"column":4},"end":{"line":85,"column":5}},"24":{"start":{"line":82,"column":6},"end":{"line":84,"column":7}},"25":{"start":{"line":83,"column":8},"end":{"line":83,"column":32}},"26":{"start":{"line":113,"column":0},"end":{"line":164,"column":2}},"27":{"start":{"line":114,"column":2},"end":{"line":114,"column":22}},"28":{"start":{"line":115,"column":2},"end":{"line":115,"column":31}},"29":{"start":{"line":117,"column":2},"end":{"line":122,"column":3}},"30":{"start":{"line":118,"column":4},"end":{"line":120,"column":46}},"31":{"start":{"line":121,"column":4},"end":{"line":121,"column":25}},"32":{"start":{"line":124,"column":2},"end":{"line":131,"column":3}},"33":{"start":{"line":125,"column":4},"end":{"line":125,"column":26}},"34":{"start":{"line":126,"column":4},"end":{"line":126,"column":40}},"35":{"start":{"line":127,"column":4},"end":{"line":127,"column":39}},"36":{"start":{"line":129,"column":4},"end":{"line":130,"column":67}},"37":{"start":{"line":133,"column":2},"end":{"line":133,"column":34}},"38":{"start":{"line":134,"column":2},"end":{"line":136,"column":47}},"39":{"start":{"line":138,"column":2},"end":{"line":138,"column":28}},"40":{"start":{"line":140,"column":2},"end":{"line":150,"column":3}},"41":{"start":{"line":141,"column":4},"end":{"line":143,"column":7}},"42":{"start":{"line":142,"column":6},"end":{"line":142,"column":29}},"43":{"start":{"line":144,"column":4},"end":{"line":144,"column":47}},"44":{"start":{"line":145,"column":4},"end":{"line":147,"column":5}},"45":{"start":{"line":146,"column":6},"end":{"line":146,"column":56}},"46":{"start":{"line":148,"column":4},"end":{"line":148,"column":28}},"47":{"start":{"line":149,"column":4},"end":{"line":149,"column":49}},"48":{"start":{"line":152,"column":2},"end":{"line":152,"column":18}},"49":{"start":{"line":153,"column":2},"end":{"line":155,"column":5}},"50":{"start":{"line":154,"column":4},"end":{"line":154,"column":57}},"51":{"start":{"line":156,"column":2},"end":{"line":158,"column":5}},"52":{"start":{"line":157,"column":4},"end":{"line":157,"column":42}},"53":{"start":{"line":160,"column":2},"end":{"line":160,"column":26}},"54":{"start":{"line":161,"column":2},"end":{"line":161,"column":19}},"55":{"start":{"line":162,"column":2},"end":{"line":162,"column":31}},"56":{"start":{"line":163,"column":2},"end":{"line":163,"column":15}},"57":{"start":{"line":217,"column":0},"end":{"line":219,"column":2}},"58":{"start":{"line":218,"column":2},"end":{"line":218,"column":45}},"59":{"start":{"line":227,"column":0},"end":{"line":242,"column":2}},"60":{"start":{"line":228,"column":2},"end":{"line":241,"column":3}},"61":{"start":{"line":229,"column":4},"end":{"line":229,"column":81}},"62":{"start":{"line":230,"column":4},"end":{"line":232,"column":42}},"63":{"start":{"line":233,"column":4},"end":{"line":233,"column":18}},"64":{"start":{"line":234,"column":4},"end":{"line":234,"column":14}},"65":{"start":{"line":236,"column":4},"end":{"line":239,"column":5}},"66":{"start":{"line":237,"column":6},"end":{"line":238,"column":43}},"67":{"start":{"line":240,"column":4},"end":{"line":240,"column":14}},"68":{"start":{"line":258,"column":0},"end":{"line":262,"column":2}},"69":{"start":{"line":259,"column":2},"end":{"line":261,"column":46}},"70":{"start":{"line":269,"column":0},"end":{"line":277,"column":2}},"71":{"start":{"line":270,"column":2},"end":{"line":270,"column":18}},"72":{"start":{"line":272,"column":2},"end":{"line":274,"column":5}},"73":{"start":{"line":273,"column":4},"end":{"line":273,"column":48}},"74":{"start":{"line":276,"column":2},"end":{"line":276,"column":16}},"75":{"start":{"line":284,"column":0},"end":{"line":298,"column":2}},"76":{"start":{"line":285,"column":2},"end":{"line":285,"column":57}},"77":{"start":{"line":286,"column":2},"end":{"line":288,"column":3}},"78":{"start":{"line":287,"column":4},"end":{"line":287,"column":26}},"79":{"start":{"line":290,"column":2},"end":{"line":290,"column":31}},"80":{"start":{"line":291,"column":2},"end":{"line":291,"column":70}},"81":{"start":{"line":293,"column":2},"end":{"line":295,"column":5}},"82":{"start":{"line":294,"column":4},"end":{"line":294,"column":64}},"83":{"start":{"line":297,"column":2},"end":{"line":297,"column":17}},"84":{"start":{"line":304,"column":0},"end":{"line":304,"column":39}},"85":{"start":{"line":310,"column":0},"end":{"line":407,"column":2}},"86":{"start":{"line":311,"column":2},"end":{"line":311,"column":74}},"87":{"start":{"line":313,"column":2},"end":{"line":313,"column":31}},"88":{"start":{"line":314,"column":2},"end":{"line":314,"column":17}},"89":{"start":{"line":316,"column":2},"end":{"line":341,"column":3}},"90":{"start":{"line":317,"column":4},"end":{"line":317,"column":53}},"91":{"start":{"line":318,"column":4},"end":{"line":340,"column":7}},"92":{"start":{"line":319,"column":6},"end":{"line":319,"column":44}},"93":{"start":{"line":320,"column":6},"end":{"line":323,"column":7}},"94":{"start":{"line":321,"column":8},"end":{"line":322,"column":69}},"95":{"start":{"line":325,"column":6},"end":{"line":325,"column":48}},"96":{"start":{"line":325,"column":41},"end":{"line":325,"column":48}},"97":{"start":{"line":329,"column":6},"end":{"line":334,"column":7}},"98":{"start":{"line":330,"column":8},"end":{"line":330,"column":40}},"99":{"start":{"line":331,"column":8},"end":{"line":331,"column":62}},"100":{"start":{"line":332,"column":8},"end":{"line":332,"column":67}},"101":{"start":{"line":333,"column":8},"end":{"line":333,"column":45}},"102":{"start":{"line":333,"column":38},"end":{"line":333,"column":45}},"103":{"start":{"line":336,"column":6},"end":{"line":339,"column":9}},"104":{"start":{"line":343,"column":2},"end":{"line":402,"column":4}},"105":{"start":{"line":344,"column":4},"end":{"line":344,"column":28}},"106":{"start":{"line":345,"column":4},"end":{"line":345,"column":22}},"107":{"start":{"line":346,"column":4},"end":{"line":346,"column":28}},"108":{"start":{"line":347,"column":4},"end":{"line":347,"column":37}},"109":{"start":{"line":349,"column":4},"end":{"line":354,"column":18}},"110":{"start":{"line":356,"column":4},"end":{"line":356,"column":36}},"111":{"start":{"line":358,"column":4},"end":{"line":358,"column":45}},"112":{"start":{"line":359,"column":4},"end":{"line":359,"column":89}},"113":{"start":{"line":360,"column":4},"end":{"line":362,"column":5}},"114":{"start":{"line":361,"column":6},"end":{"line":361,"column":26}},"115":{"start":{"line":364,"column":4},"end":{"line":401,"column":5}},"116":{"start":{"line":365,"column":6},"end":{"line":398,"column":8}},"117":{"start":{"line":371,"column":10},"end":{"line":396,"column":11}},"118":{"start":{"line":372,"column":12},"end":{"line":372,"column":29}},"119":{"start":{"line":373,"column":12},"end":{"line":373,"column":22}},"120":{"start":{"line":374,"column":17},"end":{"line":396,"column":11}},"121":{"start":{"line":375,"column":12},"end":{"line":375,"column":19}},"122":{"start":{"line":377,"column":12},"end":{"line":390,"column":14}},"123":{"start":{"line":392,"column":12},"end":{"line":392,"column":88}},"124":{"start":{"line":393,"column":12},"end":{"line":393,"column":41}},"125":{"start":{"line":394,"column":12},"end":{"line":394,"column":72}},"126":{"start":{"line":395,"column":12},"end":{"line":395,"column":20}},"127":{"start":{"line":400,"column":6},"end":{"line":400,"column":13}},"128":{"start":{"line":404,"column":2},"end":{"line":404,"column":35}},"129":{"start":{"line":406,"column":2},"end":{"line":406,"column":28}},"130":{"start":{"line":409,"column":0},"end":{"line":484,"column":2}},"131":{"start":{"line":411,"column":2},"end":{"line":411,"column":62}},"132":{"start":{"line":411,"column":55},"end":{"line":411,"column":62}},"133":{"start":{"line":413,"column":2},"end":{"line":413,"column":61}},"134":{"start":{"line":414,"column":2},"end":{"line":414,"column":47}},"135":{"start":{"line":415,"column":2},"end":{"line":423,"column":5}},"136":{"start":{"line":416,"column":4},"end":{"line":418,"column":5}},"137":{"start":{"line":417,"column":6},"end":{"line":417,"column":62}},"138":{"start":{"line":420,"column":4},"end":{"line":422,"column":5}},"139":{"start":{"line":421,"column":6},"end":{"line":421,"column":55}},"140":{"start":{"line":425,"column":2},"end":{"line":431,"column":3}},"141":{"start":{"line":426,"column":4},"end":{"line":430,"column":5}},"142":{"start":{"line":427,"column":6},"end":{"line":427,"column":22}},"143":{"start":{"line":429,"column":6},"end":{"line":429,"column":50}},"144":{"start":{"line":429,"column":33},"end":{"line":429,"column":48}},"145":{"start":{"line":433,"column":2},"end":{"line":457,"column":3}},"146":{"start":{"line":434,"column":4},"end":{"line":434,"column":66}},"147":{"start":{"line":435,"column":4},"end":{"line":435,"column":30}},"148":{"start":{"line":435,"column":23},"end":{"line":435,"column":30}},"149":{"start":{"line":437,"column":4},"end":{"line":437,"column":59}},"150":{"start":{"line":438,"column":4},"end":{"line":438,"column":56}},"151":{"start":{"line":439,"column":4},"end":{"line":450,"column":5}},"152":{"start":{"line":440,"column":6},"end":{"line":448,"column":45}},"153":{"start":{"line":449,"column":6},"end":{"line":449,"column":13}},"154":{"start":{"line":452,"column":4},"end":{"line":456,"column":23}},"155":{"start":{"line":459,"column":2},"end":{"line":483,"column":3}},"156":{"start":{"line":460,"column":4},"end":{"line":460,"column":74}},"157":{"start":{"line":461,"column":4},"end":{"line":461,"column":30}},"158":{"start":{"line":461,"column":23},"end":{"line":461,"column":30}},"159":{"start":{"line":463,"column":4},"end":{"line":463,"column":59}},"160":{"start":{"line":464,"column":4},"end":{"line":464,"column":71}},"161":{"start":{"line":465,"column":4},"end":{"line":476,"column":5}},"162":{"start":{"line":466,"column":6},"end":{"line":474,"column":59}},"163":{"start":{"line":475,"column":6},"end":{"line":475,"column":13}},"164":{"start":{"line":478,"column":4},"end":{"line":482,"column":23}},"165":{"start":{"line":486,"column":0},"end":{"line":489,"column":2}},"166":{"start":{"line":487,"column":2},"end":{"line":488,"column":85}},"167":{"start":{"line":491,"column":0},"end":{"line":513,"column":1}},"168":{"start":{"line":492,"column":2},"end":{"line":492,"column":20}},"169":{"start":{"line":494,"column":2},"end":{"line":495,"column":56}},"170":{"start":{"line":497,"column":2},"end":{"line":510,"column":3}},"171":{"start":{"line":498,"column":4},"end":{"line":498,"column":28}},"172":{"start":{"line":499,"column":4},"end":{"line":507,"column":5}},"173":{"start":{"line":500,"column":6},"end":{"line":500,"column":49}},"174":{"start":{"line":502,"column":6},"end":{"line":502,"column":71}},"175":{"start":{"line":504,"column":6},"end":{"line":506,"column":7}},"176":{"start":{"line":505,"column":8},"end":{"line":505,"column":50}},"177":{"start":{"line":508,"column":4},"end":{"line":509,"column":35}},"178":{"start":{"line":509,"column":6},"end":{"line":509,"column":35}},"179":{"start":{"line":512,"column":2},"end":{"line":512,"column":43}},"180":{"start":{"line":515,"column":0},"end":{"line":539,"column":1}},"181":{"start":{"line":516,"column":2},"end":{"line":517,"column":69}},"182":{"start":{"line":519,"column":2},"end":{"line":519,"column":37}},"183":{"start":{"line":521,"column":2},"end":{"line":531,"column":3}},"184":{"start":{"line":522,"column":4},"end":{"line":524,"column":5}},"185":{"start":{"line":523,"column":6},"end":{"line":523,"column":47}},"186":{"start":{"line":526,"column":4},"end":{"line":530,"column":6}},"187":{"start":{"line":533,"column":2},"end":{"line":533,"column":30}},"188":{"start":{"line":534,"column":2},"end":{"line":534,"column":33}},"189":{"start":{"line":536,"column":2},"end":{"line":536,"column":58}},"190":{"start":{"line":538,"column":2},"end":{"line":538,"column":49}},"191":{"start":{"line":541,"column":0},"end":{"line":582,"column":1}},"192":{"start":{"line":542,"column":2},"end":{"line":542,"column":20}},"193":{"start":{"line":545,"column":2},"end":{"line":545,"column":35}},"194":{"start":{"line":546,"column":2},"end":{"line":548,"column":47}},"195":{"start":{"line":549,"column":2},"end":{"line":550,"column":49}},"196":{"start":{"line":550,"column":4},"end":{"line":550,"column":49}},"197":{"start":{"line":553,"column":2},"end":{"line":553,"column":41}},"198":{"start":{"line":554,"column":2},"end":{"line":557,"column":61}},"199":{"start":{"line":558,"column":2},"end":{"line":559,"column":63}},"200":{"start":{"line":559,"column":4},"end":{"line":559,"column":63}},"201":{"start":{"line":562,"column":2},"end":{"line":567,"column":5}},"202":{"start":{"line":563,"column":4},"end":{"line":563,"column":41}},"203":{"start":{"line":564,"column":4},"end":{"line":564,"column":47}},"204":{"start":{"line":565,"column":4},"end":{"line":566,"column":77}},"205":{"start":{"line":566,"column":6},"end":{"line":566,"column":77}},"206":{"start":{"line":570,"column":2},"end":{"line":570,"column":73}},"207":{"start":{"line":571,"column":2},"end":{"line":581,"column":5}},"208":{"start":{"line":573,"column":4},"end":{"line":573,"column":72}},"209":{"start":{"line":574,"column":4},"end":{"line":580,"column":5}},"210":{"start":{"line":575,"column":6},"end":{"line":575,"column":56}},"211":{"start":{"line":577,"column":6},"end":{"line":577,"column":59}},"212":{"start":{"line":578,"column":6},"end":{"line":579,"column":44}},"213":{"start":{"line":579,"column":8},"end":{"line":579,"column":44}},"214":{"start":{"line":584,"column":0},"end":{"line":586,"column":1}},"215":{"start":{"line":585,"column":2},"end":{"line":585,"column":28}},"216":{"start":{"line":616,"column":0},"end":{"line":661,"column":2}},"217":{"start":{"line":617,"column":2},"end":{"line":617,"column":18}},"218":{"start":{"line":619,"column":2},"end":{"line":619,"column":50}},"219":{"start":{"line":621,"column":2},"end":{"line":644,"column":5}},"220":{"start":{"line":622,"column":4},"end":{"line":622,"column":42}},"221":{"start":{"line":624,"column":4},"end":{"line":624,"column":31}},"222":{"start":{"line":625,"column":4},"end":{"line":625,"column":32}},"223":{"start":{"line":626,"column":4},"end":{"line":632,"column":5}},"224":{"start":{"line":627,"column":6},"end":{"line":627,"column":28}},"225":{"start":{"line":628,"column":6},"end":{"line":628,"column":36}},"226":{"start":{"line":629,"column":6},"end":{"line":629,"column":29}},"227":{"start":{"line":630,"column":11},"end":{"line":632,"column":5}},"228":{"start":{"line":631,"column":6},"end":{"line":631,"column":28}},"229":{"start":{"line":634,"column":4},"end":{"line":643,"column":5}},"230":{"start":{"line":635,"column":6},"end":{"line":640,"column":7}},"231":{"start":{"line":639,"column":8},"end":{"line":639,"column":27}},"232":{"start":{"line":641,"column":6},"end":{"line":641,"column":64}},"233":{"start":{"line":642,"column":6},"end":{"line":642,"column":27}},"234":{"start":{"line":646,"column":2},"end":{"line":648,"column":67}},"235":{"start":{"line":650,"column":2},"end":{"line":658,"column":3}},"236":{"start":{"line":651,"column":4},"end":{"line":651,"column":32}},"237":{"start":{"line":654,"column":4},"end":{"line":654,"column":37}},"238":{"start":{"line":654,"column":28},"end":{"line":654,"column":37}},"239":{"start":{"line":655,"column":4},"end":{"line":655,"column":46}},"240":{"start":{"line":657,"column":4},"end":{"line":657,"column":43}},"241":{"start":{"line":660,"column":2},"end":{"line":660,"column":16}}},"branchMap":{"1":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"2":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"3":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"4":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":6},"end":{"line":82,"column":6}},{"start":{"line":82,"column":6},"end":{"line":82,"column":6}}]},"5":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"6":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":124,"column":2}},{"start":{"line":124,"column":2},"end":{"line":124,"column":2}}]},"7":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":13},"end":{"line":125,"column":19}},{"start":{"line":125,"column":23},"end":{"line":125,"column":25}}]},"8":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":2},"end":{"line":140,"column":2}},{"start":{"line":140,"column":2},"end":{"line":140,"column":2}}]},"9":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":6},"end":{"line":140,"column":14}},{"start":{"line":140,"column":18},"end":{"line":140,"column":35}}]},"10":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"11":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":8},"end":{"line":145,"column":35}},{"start":{"line":145,"column":39},"end":{"line":145,"column":51}}]},"12":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":9},"end":{"line":218,"column":21}},{"start":{"line":218,"column":26},"end":{"line":218,"column":43}}]},"13":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":4},"end":{"line":236,"column":4}},{"start":{"line":236,"column":4},"end":{"line":236,"column":4}}]},"14":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":17},"end":{"line":285,"column":31}},{"start":{"line":285,"column":36},"end":{"line":285,"column":55}}]},"15":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":2},"end":{"line":286,"column":2}},{"start":{"line":286,"column":2},"end":{"line":286,"column":2}}]},"16":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":2},"end":{"line":316,"column":2}},{"start":{"line":316,"column":2},"end":{"line":316,"column":2}}]},"17":{"line":316,"type":"binary-expr","locations":[{"start":{"line":316,"column":6},"end":{"line":316,"column":13}},{"start":{"line":316,"column":17},"end":{"line":316,"column":35}}]},"18":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":6},"end":{"line":320,"column":6}},{"start":{"line":320,"column":6},"end":{"line":320,"column":6}}]},"19":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":6},"end":{"line":325,"column":6}},{"start":{"line":325,"column":6},"end":{"line":325,"column":6}}]},"20":{"line":325,"type":"binary-expr","locations":[{"start":{"line":325,"column":10},"end":{"line":325,"column":26}},{"start":{"line":325,"column":30},"end":{"line":325,"column":39}}]},"21":{"line":332,"type":"binary-expr","locations":[{"start":{"line":332,"column":25},"end":{"line":332,"column":47}},{"start":{"line":332,"column":51},"end":{"line":332,"column":66}}]},"22":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":8},"end":{"line":333,"column":8}},{"start":{"line":333,"column":8},"end":{"line":333,"column":8}}]},"23":{"line":333,"type":"binary-expr","locations":[{"start":{"line":333,"column":12},"end":{"line":333,"column":22}},{"start":{"line":333,"column":26},"end":{"line":333,"column":36}}]},"24":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":18},"end":{"line":349,"column":31}},{"start":{"line":349,"column":35},"end":{"line":349,"column":51}},{"start":{"line":351,"column":7},"end":{"line":354,"column":16}}]},"25":{"line":351,"type":"cond-expr","locations":[{"start":{"line":351,"column":51},"end":{"line":351,"column":64}},{"start":{"line":352,"column":7},"end":{"line":354,"column":16}}]},"26":{"line":351,"type":"binary-expr","locations":[{"start":{"line":351,"column":7},"end":{"line":351,"column":17}},{"start":{"line":351,"column":21},"end":{"line":351,"column":48}}]},"27":{"line":352,"type":"cond-expr","locations":[{"start":{"line":352,"column":47},"end":{"line":352,"column":58}},{"start":{"line":353,"column":7},"end":{"line":354,"column":16}}]},"28":{"line":352,"type":"binary-expr","locations":[{"start":{"line":352,"column":7},"end":{"line":352,"column":15}},{"start":{"line":352,"column":19},"end":{"line":352,"column":44}}]},"29":{"line":353,"type":"cond-expr","locations":[{"start":{"line":353,"column":49},"end":{"line":353,"column":61}},{"start":{"line":354,"column":7},"end":{"line":354,"column":16}}]},"30":{"line":353,"type":"binary-expr","locations":[{"start":{"line":353,"column":7},"end":{"line":353,"column":16}},{"start":{"line":353,"column":20},"end":{"line":353,"column":46}}]},"31":{"line":358,"type":"binary-expr","locations":[{"start":{"line":358,"column":24},"end":{"line":358,"column":38}},{"start":{"line":358,"column":42},"end":{"line":358,"column":44}}]},"32":{"line":359,"type":"binary-expr","locations":[{"start":{"line":359,"column":24},"end":{"line":359,"column":52}},{"start":{"line":359,"column":56},"end":{"line":359,"column":81}},{"start":{"line":359,"column":85},"end":{"line":359,"column":88}}]},"33":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":4},"end":{"line":360,"column":4}},{"start":{"line":360,"column":4},"end":{"line":360,"column":4}}]},"34":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":4},"end":{"line":364,"column":4}},{"start":{"line":364,"column":4},"end":{"line":364,"column":4}}]},"35":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":10},"end":{"line":371,"column":10}},{"start":{"line":371,"column":10},"end":{"line":371,"column":10}}]},"36":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":17},"end":{"line":374,"column":17}},{"start":{"line":374,"column":17},"end":{"line":374,"column":17}}]},"37":{"line":392,"type":"binary-expr","locations":[{"start":{"line":392,"column":30},"end":{"line":392,"column":61}},{"start":{"line":392,"column":65},"end":{"line":392,"column":86}}]},"38":{"line":394,"type":"binary-expr","locations":[{"start":{"line":394,"column":21},"end":{"line":394,"column":49}},{"start":{"line":394,"column":53},"end":{"line":394,"column":71}}]},"39":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":2},"end":{"line":411,"column":2}},{"start":{"line":411,"column":2},"end":{"line":411,"column":2}}]},"40":{"line":416,"type":"if","locations":[{"start":{"line":416,"column":4},"end":{"line":416,"column":4}},{"start":{"line":416,"column":4},"end":{"line":416,"column":4}}]},"41":{"line":416,"type":"binary-expr","locations":[{"start":{"line":416,"column":8},"end":{"line":416,"column":29}},{"start":{"line":416,"column":33},"end":{"line":416,"column":71}}]},"42":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":4},"end":{"line":420,"column":4}},{"start":{"line":420,"column":4},"end":{"line":420,"column":4}}]},"43":{"line":420,"type":"binary-expr","locations":[{"start":{"line":420,"column":8},"end":{"line":420,"column":22}},{"start":{"line":420,"column":26},"end":{"line":420,"column":57}}]},"44":{"line":426,"type":"if","locations":[{"start":{"line":426,"column":4},"end":{"line":426,"column":4}},{"start":{"line":426,"column":4},"end":{"line":426,"column":4}}]},"45":{"line":434,"type":"binary-expr","locations":[{"start":{"line":434,"column":26},"end":{"line":434,"column":41}},{"start":{"line":434,"column":45},"end":{"line":434,"column":65}}]},"46":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":4},"end":{"line":435,"column":4}},{"start":{"line":435,"column":4},"end":{"line":435,"column":4}}]},"47":{"line":437,"type":"binary-expr","locations":[{"start":{"line":437,"column":28},"end":{"line":437,"column":52}},{"start":{"line":437,"column":56},"end":{"line":437,"column":58}}]},"48":{"line":438,"type":"binary-expr","locations":[{"start":{"line":438,"column":22},"end":{"line":438,"column":42}},{"start":{"line":438,"column":46},"end":{"line":438,"column":48}}]},"49":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":4},"end":{"line":439,"column":4}},{"start":{"line":439,"column":4},"end":{"line":439,"column":4}}]},"50":{"line":460,"type":"binary-expr","locations":[{"start":{"line":460,"column":26},"end":{"line":460,"column":41}},{"start":{"line":460,"column":45},"end":{"line":460,"column":73}}]},"51":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":4},"end":{"line":461,"column":4}},{"start":{"line":461,"column":4},"end":{"line":461,"column":4}}]},"52":{"line":463,"type":"binary-expr","locations":[{"start":{"line":463,"column":28},"end":{"line":463,"column":52}},{"start":{"line":463,"column":56},"end":{"line":463,"column":58}}]},"53":{"line":464,"type":"binary-expr","locations":[{"start":{"line":464,"column":29},"end":{"line":464,"column":57}},{"start":{"line":464,"column":61},"end":{"line":464,"column":63}}]},"54":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":4},"end":{"line":465,"column":4}},{"start":{"line":465,"column":4},"end":{"line":465,"column":4}}]},"55":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":2},"end":{"line":497,"column":2}},{"start":{"line":497,"column":2},"end":{"line":497,"column":2}}]},"56":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":4},"end":{"line":499,"column":4}},{"start":{"line":499,"column":4},"end":{"line":499,"column":4}}]},"57":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":6},"end":{"line":504,"column":6}},{"start":{"line":504,"column":6},"end":{"line":504,"column":6}}]},"58":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":4},"end":{"line":508,"column":4}},{"start":{"line":508,"column":4},"end":{"line":508,"column":4}}]},"59":{"line":508,"type":"binary-expr","locations":[{"start":{"line":508,"column":8},"end":{"line":508,"column":24}},{"start":{"line":508,"column":28},"end":{"line":508,"column":64}},{"start":{"line":508,"column":68},"end":{"line":508,"column":90}}]},"60":{"line":521,"type":"if","locations":[{"start":{"line":521,"column":2},"end":{"line":521,"column":2}},{"start":{"line":521,"column":2},"end":{"line":521,"column":2}}]},"61":{"line":522,"type":"if","locations":[{"start":{"line":522,"column":4},"end":{"line":522,"column":4}},{"start":{"line":522,"column":4},"end":{"line":522,"column":4}}]},"62":{"line":546,"type":"binary-expr","locations":[{"start":{"line":546,"column":39},"end":{"line":546,"column":45}},{"start":{"line":547,"column":6},"end":{"line":547,"column":26}},{"start":{"line":548,"column":6},"end":{"line":548,"column":46}}]},"63":{"line":549,"type":"if","locations":[{"start":{"line":549,"column":2},"end":{"line":549,"column":2}},{"start":{"line":549,"column":2},"end":{"line":549,"column":2}}]},"64":{"line":554,"type":"binary-expr","locations":[{"start":{"line":554,"column":44},"end":{"line":554,"column":55}},{"start":{"line":555,"column":6},"end":{"line":555,"column":26}},{"start":{"line":556,"column":6},"end":{"line":556,"column":40}},{"start":{"line":557,"column":6},"end":{"line":557,"column":60}}]},"65":{"line":558,"type":"if","locations":[{"start":{"line":558,"column":2},"end":{"line":558,"column":2}},{"start":{"line":558,"column":2},"end":{"line":558,"column":2}}]},"66":{"line":565,"type":"if","locations":[{"start":{"line":565,"column":4},"end":{"line":565,"column":4}},{"start":{"line":565,"column":4},"end":{"line":565,"column":4}}]},"67":{"line":574,"type":"if","locations":[{"start":{"line":574,"column":4},"end":{"line":574,"column":4}},{"start":{"line":574,"column":4},"end":{"line":574,"column":4}}]},"68":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":6},"end":{"line":578,"column":6}},{"start":{"line":578,"column":6},"end":{"line":578,"column":6}}]},"69":{"line":626,"type":"if","locations":[{"start":{"line":626,"column":4},"end":{"line":626,"column":4}},{"start":{"line":626,"column":4},"end":{"line":626,"column":4}}]},"70":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":11},"end":{"line":630,"column":11}},{"start":{"line":630,"column":11},"end":{"line":630,"column":11}}]},"71":{"line":630,"type":"binary-expr","locations":[{"start":{"line":630,"column":15},"end":{"line":630,"column":33}},{"start":{"line":630,"column":37},"end":{"line":630,"column":50}}]},"72":{"line":634,"type":"if","locations":[{"start":{"line":634,"column":4},"end":{"line":634,"column":4}},{"start":{"line":634,"column":4},"end":{"line":634,"column":4}}]},"73":{"line":635,"type":"if","locations":[{"start":{"line":635,"column":6},"end":{"line":635,"column":6}},{"start":{"line":635,"column":6},"end":{"line":635,"column":6}}]},"74":{"line":635,"type":"binary-expr","locations":[{"start":{"line":635,"column":10},"end":{"line":635,"column":38}},{"start":{"line":635,"column":42},"end":{"line":635,"column":56}}]},"75":{"line":647,"type":"binary-expr","locations":[{"start":{"line":647,"column":4},"end":{"line":647,"column":26}},{"start":{"line":648,"column":7},"end":{"line":648,"column":28}},{"start":{"line":648,"column":32},"end":{"line":648,"column":65}}]},"76":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":2},"end":{"line":650,"column":2}},{"start":{"line":650,"column":2},"end":{"line":650,"column":2}}]},"77":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":4},"end":{"line":654,"column":4}},{"start":{"line":654,"column":4},"end":{"line":654,"column":4}}]}},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/*!"," * Module dependencies."," */","","'use strict';","var g = require('./globalize');","var DataSource = require('loopback-datasource-juggler').DataSource;","var Registry = require('./registry');","var assert = require('assert');","var fs = require('fs');","var extend = require('util')._extend;","var RemoteObjects = require('strong-remoting');","var classify = require('underscore.string/classify');","var camelize = require('underscore.string/camelize');","var path = require('path');","var util = require('util');","","/**"," * The `App` object represents a Loopback application."," *"," * The App object extends [Express](http://expressjs.com/api.html#express) and"," * supports Express middleware. See"," * [Express documentation](http://expressjs.com/) for details."," *"," * ```js"," * var loopback = require('loopback');"," * var app = loopback();"," *"," * app.get('/', function(req, res){"," *   res.send('hello world');"," * });"," *"," * app.listen(3000);"," * ```"," *"," * @class LoopBackApplication"," * @header var app = loopback()"," */","function App() {","  // this is a dummy placeholder for jsdox","}","","/*!"," * Export the app prototype."," */","","var app = module.exports = {};","","/**"," * Lazily load a set of [remote objects](http://apidocs.strongloop.com/strong-remoting/#remoteobjectsoptions)."," *"," * **NOTE:** Calling `app.remotes()` more than once returns only a single set of remote objects."," * @returns {RemoteObjects}"," */","","app.remotes = function() {","  if (this._remotes) {","    return this._remotes;","  } else {","    var options = {};","","    if (this.get) {","      options = this.get('remoting');","    }","","    return (this._remotes = RemoteObjects.create(options));","  }","};","","/*!"," * Remove a route by reference."," */","","app.disuse = function(route) {","  if (this.stack) {","    for (var i = 0; i < this.stack.length; i++) {","      if (this.stack[i].route === route) {","        this.stack.splice(i, 1);","      }","    }","  }","};","","/**"," * Attach a model to the app. The `Model` will be available on the"," * `app.models` object."," *"," * Example - Attach an existing model:"," ```js"," * var User = loopback.User;"," * app.model(User);"," *```"," * Example - Attach an existing model, alter some aspects of the model:"," * ```js"," * var User = loopback.User;"," * app.model(User, { dataSource: 'db' });"," *```"," *"," * @param {Object} Model The model to attach."," * @options {Object} config The model's configuration."," * @property {String|DataSource} dataSource The `DataSource` to which to attach the model."," * @property {Boolean} [public] Whether the model should be exposed via REST API."," * @property {Object} [relations] Relations to add/update."," * @end"," * @returns {ModelConstructor} the model class"," */","","app.model = function(Model, config) {","  var isPublic = true;","  var registry = this.registry;","","  if (typeof Model === 'string') {","    var msg = 'app.model(modelName, settings) is no longer supported. ' +","      'Use app.registry.createModel(modelName, definition) and ' +","      'app.model(ModelCtor, config) instead.';","    throw new Error(msg);","  }","","  if (arguments.length > 1) {","    config = config || {};","    configureModel(Model, config, this);","    isPublic = config.public !== false;","  } else {","    assert(Model.prototype instanceof Model.registry.getModel('Model'),","      Model.modelName + ' must be a descendant of loopback.Model');","  }","","  var modelName = Model.modelName;","  this.models[modelName] =","    this.models[classify(modelName)] =","      this.models[camelize(modelName)] = Model;","","  this.models().push(Model);","","  if (isPublic && Model.sharedClass) {","    this.remotes().defineObjectType(Model.modelName, function(data) {","      return new Model(data);","    });","    this.remotes().addClass(Model.sharedClass);","    if (Model.settings.trackChanges && Model.Change) {","      this.remotes().addClass(Model.Change.sharedClass);","    }","    clearHandlerCache(this);","    this.emit('modelRemoted', Model.sharedClass);","  }","","  var self = this;","  Model.on('remoteMethodDisabled', function(model, methodName) {","    self.emit('remoteMethodDisabled', model, methodName);","  });","  Model.on('remoteMethodAdded', function(model) {","    self.emit('remoteMethodAdded', model);","  });","","  Model.shared = isPublic;","  Model.app = this;","  Model.emit('attached', this);","  return Model;","};","","/**"," * Get the models exported by the app. Returns only models defined using `app.model()`"," *"," * There are two ways to access models:"," *"," * 1.  Call `app.models()` to get a list of all models."," *"," * ```js"," * var models = app.models();"," *"," * models.forEach(function(Model) {"," *  console.log(Model.modelName); // color"," * });"," * ```"," *"," * 2. Use `app.models` to access a model by name."," * `app.models` has properties for all defined models."," *"," * The following example illustrates accessing the `Product` and `CustomerReceipt` models"," * using the `models` object."," *"," * ```js"," * var loopback = require('loopback');"," *  var app = loopback();"," *  app.boot({"," *   dataSources: {"," *     db: {connector: 'memory'}"," *   }"," * });"," *"," * var productModel = app.registry.createModel('product');"," * app.model(productModel, {dataSource: 'db'});"," * var customerReceiptModel = app.registry.createModel('customer-receipt');"," * app.model(customerReceiptModel, {dataSource: 'db'});"," *"," * // available based on the given name"," * var Product = app.models.Product;"," *"," * // also available as camelCase"," * var product = app.models.product;"," *"," * // multi-word models are avaiable as pascal cased"," * var CustomerReceipt = app.models.CustomerReceipt;"," *"," * // also available as camelCase"," * var customerReceipt = app.models.customerReceipt;"," * ```"," *"," * @returns {Array} Array of model classes."," */","","app.models = function() {","  return this._models || (this._models = []);","};","","/**"," * Define a DataSource."," *"," * @param {String} name The data source name"," * @param {Object} config The data source config"," */","app.dataSource = function(name, config) {","  try {","    var ds = dataSourcesFromConfig(name, config, this.connectors, this.registry);","    this.dataSources[name] =","    this.dataSources[classify(name)] =","    this.dataSources[camelize(name)] = ds;","    ds.app = this;","    return ds;","  } catch (err) {","    if (err.message) {","      err.message = g.f('Cannot create data source %s: %s',","        JSON.stringify(name), err.message);","    }","    throw err;","  }","};","","/**"," * Register a connector."," *"," * When a new data-source is being added via `app.dataSource`, the connector"," * name is looked up in the registered connectors first."," *"," * Connectors are required to be explicitly registered only for applications"," * using browserify, because browserify does not support dynamic require,"," * which is used by LoopBack to automatically load the connector module."," *"," * @param {String} name Name of the connector, e.g. 'mysql'."," * @param {Object} connector Connector object as returned"," *   by `require('loopback-connector-{name}')`."," */","app.connector = function(name, connector) {","  this.connectors[name] =","  this.connectors[classify(name)] =","  this.connectors[camelize(name)] = connector;","};","","/**"," * Get all remote objects."," * @returns {Object} [Remote objects](http://apidocs.strongloop.com/strong-remoting/#remoteobjectsoptions)."," */","","app.remoteObjects = function() {","  var result = {};","","  this.remotes().classes().forEach(function(sharedClass) {","    result[sharedClass.name] = sharedClass.ctor;","  });","","  return result;","};","","/*!"," * Get a handler of the specified type from the handler cache."," * @triggers `mounted` events on shared class constructors (models)"," */","","app.handler = function(type, options) {","  var handlers = this._handlers || (this._handlers = {});","  if (handlers[type]) {","    return handlers[type];","  }","","  var remotes = this.remotes();","  var handler = this._handlers[type] = remotes.handler(type, options);","","  remotes.classes().forEach(function(sharedClass) {","    sharedClass.ctor.emit('mounted', app, sharedClass, remotes);","  });","","  return handler;","};","","/**"," * An object to store dataSource instances."," */","","app.dataSources = app.datasources = {};","","/**"," * Enable app wide authentication."," */","","app.enableAuth = function(options) {","  var AUTH_MODELS = ['User', 'AccessToken', 'ACL', 'Role', 'RoleMapping'];","","  var remotes = this.remotes();","  var app = this;","","  if (options && options.dataSource) {","    var appModels = app.registry.modelBuilder.models;","    AUTH_MODELS.forEach(function(m) {","      var Model = app.registry.findModel(m);","      if (!Model) {","        throw new Error(","          g.f('Authentication requires model %s to be defined.', m));","      }","","      if (Model.dataSource || Model.app) return;","","      // Find descendants of Model that are attached,","      // for example \"Customer\" extending \"User\" model","      for (var name in appModels) {","        var candidate = appModels[name];","        var isSubclass = candidate.prototype instanceof Model;","        var isAttached = !!candidate.dataSource || !!candidate.app;","        if (isSubclass && isAttached) return;","      }","","      app.model(Model, {","        dataSource: options.dataSource,","        public: m === 'User',","      });","    });","  }","","  remotes.authorization = function(ctx, next) {","    var method = ctx.method;","    var req = ctx.req;","    var Model = method.ctor;","    var modelInstance = ctx.instance;","","    var modelId = modelInstance && modelInstance.id ||","      // replacement for deprecated req.param()","      (req.params && req.params.id !== undefined ? req.params.id :","       req.body && req.body.id !== undefined ? req.body.id :","       req.query && req.query.id !== undefined ? req.query.id :","       undefined);","","    var modelName = Model.modelName;","","    var modelSettings = Model.settings || {};","    var errStatusCode = modelSettings.aclErrorStatus || app.get('aclErrorStatus') || 401;","    if (!req.accessToken) {","      errStatusCode = 401;","    }","","    if (Model.checkAccess) {","      Model.checkAccess(","        req.accessToken,","        modelId,","        method,","        ctx,","        function(err, allowed) {","          if (err) {","            console.log(err);","            next(err);","          } else if (allowed) {","            next();","          } else {","            var messages = {","              403: {","                message: g.f('Access Denied'),","                code: 'ACCESS_DENIED',","              },","              404: {","                message: (g.f('could not find %s with id %s', modelName, modelId)),","                code: 'MODEL_NOT_FOUND',","              },","              401: {","                message: g.f('Authorization Required'),","                code: 'AUTHORIZATION_REQUIRED',","              },","            };","","            var e = new Error(messages[errStatusCode].message || messages[403].message);","            e.statusCode = errStatusCode;","            e.code = messages[errStatusCode].code || messages[403].code;","            next(e);","          }","        }","      );","    } else {","      next();","    }","  };","","  this._verifyAuthModelRelations();","","  this.isAuthEnabled = true;","};","","app._verifyAuthModelRelations = function() {","  // Allow unit-tests (but also LoopBack users) to disable the warnings","  if (this.get('_verifyAuthModelRelations') === false) return;","","  const AccessToken = this.registry.findModel('AccessToken');","  const User = this.registry.findModel('User');","  this.models().forEach(Model => {","    if (Model === AccessToken || Model.prototype instanceof AccessToken) {","      scheduleVerification(Model, verifyAccessTokenRelations);","    }","","    if (Model === User || Model.prototype instanceof User) {","      scheduleVerification(Model, verifyUserRelations);","    }","  });","","  function scheduleVerification(Model, verifyFn) {","    if (Model.dataSource) {","      verifyFn(Model);","    } else {","      Model.on('attached', () => verifyFn(Model));","    }","  }","","  function verifyAccessTokenRelations(Model) {","    const belongsToUser = Model.relations && Model.relations.user;","    if (belongsToUser) return;","","    const relationsConfig = Model.settings.relations || {};","    const userName = (relationsConfig.user || {}).model;","    if (userName) {","      console.warn(","        'The model %j configures \"belongsTo User-like models\" relation ' +","          'with target model %j. However, the model %j is not attached to ' +","          'the application and therefore cannot be used by this relation. ' +","          'This typically happens when the application has a custom ' +","          'custom User subclass, but does not fix AccessToken relations ' +","          'to use this new model.\\n' +","          'Learn more at http://ibm.biz/setup-loopback-auth',","        Model.modelName, userName, userName);","      return;","    }","","    console.warn(","      'The model %j does not have \"belongsTo User-like model\" relation ' +","        'configured.\\n' +","        'Learn more at http://ibm.biz/setup-loopback-auth',","      Model.modelName);","  }","","  function verifyUserRelations(Model) {","    const hasManyTokens = Model.relations && Model.relations.accessTokens;","    if (hasManyTokens) return;","","    const relationsConfig = Model.settings.relations || {};","    const accessTokenName = (relationsConfig.accessTokens || {}).model;","    if (accessTokenName) {","      console.warn(","        'The model %j configures \"hasMany AccessToken-like models\" relation ' +","          'with target model %j. However, the model %j is not attached to ' +","          'the application and therefore cannot be used by this relation. ' +","          'This typically happens when the application has a custom ' +","          'AccessToken subclass, but does not fix User relations to use this ' +","          'new model.\\n' +","          'Learn more at http://ibm.biz/setup-loopback-auth',","        Model.modelName, accessTokenName, accessTokenName);","      return;","    }","","    console.warn(","      'The model %j does not have \"hasMany AccessToken-like models\" relation ' +","        'configured.\\n' +","        'Learn more at http://ibm.biz/setup-loopback-auth',","      Model.modelName);","  }","};","","app.boot = function(options) {","  throw new Error(","    g.f('{{`app.boot`}} was removed, use the new module {{loopback-boot}} instead'));","};","","function dataSourcesFromConfig(name, config, connectorRegistry, registry) {","  var connectorPath;","","  assert(typeof config === 'object',","    'can not create data source without config object');","","  if (typeof config.connector === 'string') {","    name = config.connector;","    if (connectorRegistry[name]) {","      config.connector = connectorRegistry[name];","    } else {","      connectorPath = path.join(__dirname, 'connectors', name + '.js');","","      if (fs.existsSync(connectorPath)) {","        config.connector = require(connectorPath);","      }","    }","    if (config.connector && typeof config.connector === 'object' && !config.connector.name)","      config.connector.name = name;","  }","","  return registry.createDataSource(config);","}","","function configureModel(ModelCtor, config, app) {","  assert(ModelCtor.prototype instanceof ModelCtor.registry.getModel('Model'),","    ModelCtor.modelName + ' must be a descendant of loopback.Model');","","  var dataSource = config.dataSource;","","  if (dataSource) {","    if (typeof dataSource === 'string') {","      dataSource = app.dataSources[dataSource];","    }","","    assert(","      dataSource instanceof DataSource,","      ModelCtor.modelName + ' is referencing a dataSource that does not exist: \"' +","      config.dataSource + '\"'","    );","  }","","  config = extend({}, config);","  config.dataSource = dataSource;","","  setSharedMethodSharedProperties(ModelCtor, app, config);","","  app.registry.configureModel(ModelCtor, config);","}","","function setSharedMethodSharedProperties(model, app, modelConfigs) {","  var settings = {};","","  // apply config.json settings","  var config = app.get('remoting');","  var configHasSharedMethodsSettings = config &&","      config.sharedMethods &&","      typeof config.sharedMethods === 'object';","  if (configHasSharedMethodsSettings)","    util._extend(settings, config.sharedMethods);","","  // apply model-config.json settings","  var modelConfig = modelConfigs.options;","  var modelConfigHasSharedMethodsSettings = modelConfig &&","      modelConfig.remoting &&","      modelConfig.remoting.sharedMethods &&","      typeof modelConfig.remoting.sharedMethods === 'object';","  if (modelConfigHasSharedMethodsSettings)","    util._extend(settings, modelConfig.remoting.sharedMethods);","","  // validate setting values","  Object.keys(settings).forEach(function(setting) {","    var settingValue = settings[setting];","    var settingValueType = typeof settingValue;","    if (settingValueType !== 'boolean')","      throw new TypeError(g.f('Expected boolean, got %s', settingValueType));","  });","","  // set sharedMethod.shared using the merged settings","  var sharedMethods = model.sharedClass.methods({includeDisabled: true});","  sharedMethods.forEach(function(sharedMethod) {","    // use the specific setting if it exists","    var hasSpecificSetting = settings.hasOwnProperty(sharedMethod.name);","    if (hasSpecificSetting) {","      sharedMethod.shared = settings[sharedMethod.name];","    } else { // otherwise, use the default setting if it exists","      var hasDefaultSetting = settings.hasOwnProperty('*');","      if (hasDefaultSetting)","        sharedMethod.shared = settings['*'];","    }","  });","}","","function clearHandlerCache(app) {","  app._handlers = undefined;","}","","/**"," * Listen for connections and update the configured port."," *"," * When there are no parameters or there is only one callback parameter,"," * the server will listen on `app.get('host')` and `app.get('port')`."," *"," * For example, to listen on host/port configured in app config:"," * ```js"," * app.listen();"," * ```"," *"," * Otherwise all arguments are forwarded to `http.Server.listen`."," *"," * For example, to listen on the specified port and all hosts, and ignore app config."," * ```js"," * app.listen(80);"," * ```"," *"," * The function also installs a `listening` callback that calls"," * `app.set('port')` with the value returned by `server.address().port`."," * This way the port param contains always the real port number, even when"," * listen was called with port number 0."," *"," * @param {Function} [cb] If specified, the callback is added as a listener"," *   for the server's \"listening\" event."," * @returns {http.Server} A node `http.Server` with this application configured"," *   as the request handler."," */","app.listen = function(cb) {","  var self = this;","","  var server = require('http').createServer(this);","","  server.on('listening', function() {","    self.set('port', this.address().port);","","    var listeningOnAll = false;","    var host = self.get('host');","    if (!host) {","      listeningOnAll = true;","      host = this.address().address;","      self.set('host', host);","    } else if (host === '0.0.0.0' || host === '::') {","      listeningOnAll = true;","    }","","    if (!self.get('url')) {","      if (process.platform === 'win32' && listeningOnAll) {","        // Windows browsers don't support `0.0.0.0` host in the URL","        // We are replacing it with localhost to build a URL","        // that can be copied and pasted into the browser.","        host = 'localhost';","      }","      var url = 'http://' + host + ':' + self.get('port') + '/';","      self.set('url', url);","    }","  });","","  var useAppConfig =","    arguments.length === 0 ||","      (arguments.length == 1 && typeof arguments[0] == 'function');","","  if (useAppConfig) {","    var port = this.get('port');","    // NOTE(bajtos) port:undefined no longer works on node@6,","    // we must pass port:0 explicitly","    if (port === undefined) port = 0;","    server.listen(port, this.get('host'), cb);","  } else {","    server.listen.apply(server, arguments);","  }","","  return server;","};",""],"l":{"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"44":1,"52":1,"61":1,"62":0,"63":0,"65":0,"67":0,"68":0,"71":0,"79":1,"80":0,"81":0,"82":0,"83":0,"113":1,"114":0,"115":0,"117":0,"118":0,"121":0,"124":0,"125":0,"126":0,"127":0,"129":0,"133":0,"134":0,"138":0,"140":0,"141":0,"142":0,"144":0,"145":0,"146":0,"148":0,"149":0,"152":0,"153":0,"154":0,"156":0,"157":0,"160":0,"161":0,"162":0,"163":0,"217":1,"218":0,"227":1,"228":0,"229":0,"230":0,"233":0,"234":0,"236":0,"237":0,"240":0,"258":1,"259":0,"269":1,"270":0,"272":0,"273":0,"276":0,"284":1,"285":0,"286":0,"287":0,"290":0,"291":0,"293":0,"294":0,"297":0,"304":1,"310":1,"311":0,"313":0,"314":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"325":0,"329":0,"330":0,"331":0,"332":0,"333":0,"336":0,"343":0,"344":0,"345":0,"346":0,"347":0,"349":0,"356":0,"358":0,"359":0,"360":0,"361":0,"364":0,"365":0,"371":0,"372":0,"373":0,"374":0,"375":0,"377":0,"392":0,"393":0,"394":0,"395":0,"400":0,"404":0,"406":0,"409":1,"411":0,"413":0,"414":0,"415":0,"416":0,"417":0,"420":0,"421":0,"425":1,"426":0,"427":0,"429":0,"433":1,"434":0,"435":0,"437":0,"438":0,"439":0,"440":0,"449":0,"452":0,"459":1,"460":0,"461":0,"463":0,"464":0,"465":0,"466":0,"475":0,"478":0,"486":1,"487":0,"491":1,"492":0,"494":0,"497":0,"498":0,"499":0,"500":0,"502":0,"504":0,"505":0,"508":0,"509":0,"512":0,"515":1,"516":0,"519":0,"521":0,"522":0,"523":0,"526":0,"533":0,"534":0,"536":0,"538":0,"541":1,"542":0,"545":0,"546":0,"549":0,"550":0,"553":0,"554":0,"558":0,"559":0,"562":0,"563":0,"564":0,"565":0,"566":0,"570":0,"571":0,"573":0,"574":0,"575":0,"577":0,"578":0,"579":0,"584":1,"585":0,"616":1,"617":0,"619":0,"621":0,"622":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"634":0,"635":0,"639":0,"641":0,"642":0,"646":0,"650":0,"651":0,"654":0,"655":0,"657":0,"660":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":1,"12":0,"13":1,"14":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":7},"end":{"line":17,"column":18}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":7},"end":{"line":22,"column":18}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":25}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":84}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":80}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":51}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":52}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":74}},"8":{"start":{"line":16,"column":0},"end":{"line":18,"column":3}},"9":{"start":{"line":17,"column":20},"end":{"line":17,"column":61}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":38}},"11":{"start":{"line":21,"column":0},"end":{"line":23,"column":3}},"12":{"start":{"line":22,"column":20},"end":{"line":22,"column":47}},"13":{"start":{"line":25,"column":0},"end":{"line":25,"column":64}},"14":{"start":{"line":27,"column":0},"end":{"line":27,"column":53}}},"branchMap":{},"code":["// Copyright IBM Corp. 2011,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","'use strict';","","var SG = require('strong-globalize');","SG.SetRootDir(__dirname);","","exports.ModelBuilder = exports.LDL = require('./lib/model-builder.js').ModelBuilder;","exports.DataSource = exports.Schema = require('./lib/datasource.js').DataSource;","exports.ModelBaseClass = require('./lib/model.js');","exports.GeoPoint = require('./lib/geo.js').GeoPoint;","exports.ValidationError = require('./lib/validations.js').ValidationError;","","Object.defineProperty(exports, 'version', {","  get: function() { return require('./package.json').version; },","});","","var commonTest = './test/common_test';","Object.defineProperty(exports, 'test', {","  get: function() { return require(commonTest); },","});","","exports.Transaction = require('loopback-connector').Transaction;","","exports.KeyValueAccessObject = require('./lib/kvao');",""],"l":{"7":1,"8":1,"10":1,"11":1,"12":1,"13":1,"14":1,"16":1,"17":0,"20":1,"21":1,"22":0,"25":1,"27":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/model-builder.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/model-builder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":2,"18":2,"19":2,"20":2,"21":2,"22":1,"23":1,"24":1,"25":12,"26":0,"27":12,"28":1,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":1,"36":19,"37":19,"38":19,"39":19,"40":19,"41":19,"42":0,"43":19,"44":1,"45":1,"46":19,"47":1,"48":1,"49":19,"50":19,"51":19,"52":1,"53":19,"54":19,"55":19,"56":12,"57":12,"58":12,"59":10,"60":2,"61":2,"62":19,"63":0,"64":19,"65":19,"66":19,"67":3,"68":0,"69":3,"70":0,"71":3,"72":19,"73":19,"74":19,"75":304,"76":247,"77":19,"78":19,"79":19,"80":19,"81":0,"82":0,"83":19,"84":19,"85":19,"86":19,"87":19,"88":19,"89":19,"90":19,"91":19,"92":19,"93":19,"94":1799,"95":1545,"96":19,"97":0,"98":0,"99":0,"100":19,"101":19,"102":19,"103":86,"104":0,"105":86,"106":0,"107":86,"108":0,"109":19,"110":19,"111":19,"112":19,"113":19,"114":19,"115":13,"116":19,"117":19,"118":12,"119":19,"120":1,"121":19,"122":19,"123":13,"124":13,"125":0,"126":0,"127":0,"128":6,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":19,"136":0,"137":0,"138":0,"139":0,"140":19,"141":0,"142":19,"143":12,"144":12,"145":12,"146":12,"147":12,"148":12,"149":27,"150":5,"151":5,"152":12,"153":12,"154":12,"155":12,"156":5,"157":7,"158":7,"159":7,"160":7,"161":7,"162":7,"163":12,"164":12,"165":12,"166":10,"167":12,"168":12,"169":12,"170":12,"171":19,"172":87,"173":87,"174":87,"175":87,"176":0,"177":87,"178":8,"179":8,"180":87,"181":604,"182":8,"183":596,"184":1,"185":1,"186":0,"187":1,"188":0,"189":1,"190":0,"191":1,"192":0,"193":1,"194":1,"195":0,"196":1,"197":0,"198":1,"199":1,"200":0,"201":1,"202":0,"203":1,"204":87,"205":0,"206":0,"207":0,"208":0,"209":19,"210":19,"211":19,"212":19,"213":87,"214":87,"215":19,"216":19,"217":19,"218":19,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":19,"232":19,"233":1,"234":0,"235":0,"236":0,"237":0,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":1,"247":0,"248":0,"249":1,"250":0,"251":1,"252":0,"253":0,"254":0,"255":0,"256":0,"257":1,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":1,"273":171,"274":1,"275":6,"276":0,"277":6,"278":1,"279":5,"280":6,"281":1,"282":151,"283":0,"284":151,"285":4,"286":4,"287":4,"288":0,"289":147,"290":73,"291":73,"292":73,"293":0,"294":0,"295":74,"296":66,"297":60,"298":6,"299":8,"300":8,"301":0,"302":1,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":1,"327":0,"328":0},"b":{"1":[0,12],"2":[0,0],"3":[0,0],"4":[19,18,19],"5":[19,18,19],"6":[19,19],"7":[0,19],"8":[1,18],"9":[1,18],"10":[19,0],"11":[19,0],"12":[1,18],"13":[19,18],"14":[19,7],"15":[19,7],"16":[12,7],"17":[10,2],"18":[0,19],"19":[19,12,19,7],"20":[19,0],"21":[19,0],"22":[0,3],"23":[0,3],"24":[247,57],"25":[0,19],"26":[19,0],"27":[1545,254],"28":[1799,1798],"29":[0,19],"30":[0,0],"31":[0,86],"32":[86,86],"33":[0,86],"34":[0,86],"35":[13,6],"36":[12,7],"37":[1,18],"38":[13,6],"39":[0,13],"40":[12,2],"41":[12,1],"42":[5,22],"43":[27,27],"44":[5,7],"45":[12,5],"46":[7,0],"47":[7,0],"48":[7,7],"49":[10,2],"50":[12,0],"51":[0,87],"52":[8,79],"53":[0,8],"54":[8,596],"55":[596,0],"56":[0,1],"57":[1,1],"58":[0,1],"59":[0,1],"60":[0,1],"61":[0,1],"62":[1,0],"63":[0,1],"64":[1,0],"65":[0,1],"66":[1,1],"67":[0,1],"68":[0,1],"69":[0,0],"70":[0,0],"71":[19,19],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0,0,0],"80":[0,0],"81":[0,0],"82":[0,6],"83":[1,5],"84":[0,151],"85":[4,147],"86":[151,4],"87":[4,0],"88":[73,74],"89":[73,0],"90":[73,0],"91":[66,8],"92":[60,6],"93":[6,6],"94":[8,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0]},"f":{"1":2,"2":12,"3":0,"4":0,"5":19,"6":3,"7":0,"8":0,"9":0,"10":0,"11":0,"12":12,"13":87,"14":604,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":171,"27":6,"28":151,"29":0,"30":0},"fnMap":{"1":{"name":"ModelBuilder","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":24}}},"2":{"name":"isModelClass","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":27}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":34},"end":{"line":74,"column":62}}},"4":{"name":"(anonymous_4)","line":87,"loc":{"start":{"line":87,"column":44},"end":{"line":87,"column":59}}},"5":{"name":"defineClass","line":120,"loc":{"start":{"line":120,"column":32},"end":{"line":120,"column":94}}},"6":{"name":"ModelConstructor","line":178,"loc":{"start":{"line":178,"column":17},"end":{"line":178,"column":58}}},"7":{"name":"(anonymous_7)","line":235,"loc":{"start":{"line":235,"column":41},"end":{"line":235,"column":53}}},"8":{"name":"(anonymous_8)","line":296,"loc":{"start":{"line":296,"column":13},"end":{"line":296,"column":24}}},"9":{"name":"(anonymous_9)","line":307,"loc":{"start":{"line":307,"column":11},"end":{"line":307,"column":22}}},"10":{"name":"(anonymous_10)","line":322,"loc":{"start":{"line":322,"column":31},"end":{"line":322,"column":44}}},"11":{"name":"(anonymous_11)","line":331,"loc":{"start":{"line":331,"column":24},"end":{"line":331,"column":45}}},"12":{"name":"(anonymous_12)","line":355,"loc":{"start":{"line":355,"column":22},"end":{"line":355,"column":80}}},"13":{"name":"(anonymous_13)","line":417,"loc":{"start":{"line":417,"column":32},"end":{"line":417,"column":55}}},"14":{"name":"(anonymous_14)","line":431,"loc":{"start":{"line":431,"column":11},"end":{"line":431,"column":22}}},"15":{"name":"(anonymous_15)","line":438,"loc":{"start":{"line":438,"column":11},"end":{"line":438,"column":27}}},"16":{"name":"(anonymous_16)","line":479,"loc":{"start":{"line":479,"column":11},"end":{"line":479,"column":22}}},"17":{"name":"(anonymous_17)","line":482,"loc":{"start":{"line":482,"column":11},"end":{"line":482,"column":27}}},"18":{"name":"(anonymous_18)","line":511,"loc":{"start":{"line":511,"column":20},"end":{"line":511,"column":32}}},"19":{"name":"DateType","line":528,"loc":{"start":{"line":528,"column":0},"end":{"line":528,"column":23}}},"20":{"name":"BooleanType","line":537,"loc":{"start":{"line":537,"column":0},"end":{"line":537,"column":26}}},"21":{"name":"(anonymous_21)","line":561,"loc":{"start":{"line":561,"column":40},"end":{"line":561,"column":90}}},"22":{"name":"(anonymous_22)","line":571,"loc":{"start":{"line":571,"column":41},"end":{"line":571,"column":65}}},"23":{"name":"(anonymous_23)","line":605,"loc":{"start":{"line":605,"column":37},"end":{"line":605,"column":60}}},"24":{"name":"copyModel","line":614,"loc":{"start":{"line":614,"column":35},"end":{"line":614,"column":62}}},"25":{"name":"SlaveModel","line":618,"loc":{"start":{"line":618,"column":14},"end":{"line":618,"column":36}}},"26":{"name":"hiddenProperty","line":645,"loc":{"start":{"line":645,"column":0},"end":{"line":645,"column":48}}},"27":{"name":"(anonymous_27)","line":657,"loc":{"start":{"line":657,"column":39},"end":{"line":657,"column":54}}},"28":{"name":"(anonymous_28)","line":674,"loc":{"start":{"line":674,"column":37},"end":{"line":674,"column":52}}},"29":{"name":"(anonymous_29)","line":726,"loc":{"start":{"line":726,"column":37},"end":{"line":726,"column":68}}},"30":{"name":"(anonymous_30)","line":781,"loc":{"start":{"line":781,"column":48},"end":{"line":781,"column":78}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":38}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":39}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":50}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":31}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":64}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":50}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":32}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":55}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":53}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}},"12":{"start":{"line":24,"column":0},"end":{"line":24,"column":33}},"13":{"start":{"line":26,"column":0},"end":{"line":26,"column":58}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":53}},"15":{"start":{"line":36,"column":0},"end":{"line":36,"column":34}},"16":{"start":{"line":45,"column":0},"end":{"line":52,"column":1}},"17":{"start":{"line":47,"column":2},"end":{"line":47,"column":19}},"18":{"start":{"line":48,"column":2},"end":{"line":48,"column":24}},"19":{"start":{"line":49,"column":2},"end":{"line":49,"column":21}},"20":{"start":{"line":50,"column":2},"end":{"line":50,"column":40}},"21":{"start":{"line":51,"column":2},"end":{"line":51,"column":53}},"22":{"start":{"line":55,"column":0},"end":{"line":55,"column":42}},"23":{"start":{"line":58,"column":0},"end":{"line":58,"column":50}},"24":{"start":{"line":60,"column":0},"end":{"line":65,"column":1}},"25":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"26":{"start":{"line":62,"column":4},"end":{"line":62,"column":17}},"27":{"start":{"line":64,"column":2},"end":{"line":64,"column":56}},"28":{"start":{"line":74,"column":0},"end":{"line":80,"column":2}},"29":{"start":{"line":75,"column":2},"end":{"line":75,"column":32}},"30":{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},"31":{"start":{"line":77,"column":4},"end":{"line":77,"column":54}},"32":{"start":{"line":79,"column":2},"end":{"line":79,"column":15}},"33":{"start":{"line":87,"column":0},"end":{"line":89,"column":2}},"34":{"start":{"line":88,"column":2},"end":{"line":88,"column":32}},"35":{"start":{"line":120,"column":0},"end":{"line":525,"column":2}},"36":{"start":{"line":121,"column":2},"end":{"line":121,"column":26}},"37":{"start":{"line":122,"column":2},"end":{"line":122,"column":35}},"38":{"start":{"line":123,"column":2},"end":{"line":124,"column":36}},"39":{"start":{"line":126,"column":2},"end":{"line":126,"column":54}},"40":{"start":{"line":127,"column":2},"end":{"line":127,"column":48}},"41":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"42":{"start":{"line":130,"column":4},"end":{"line":130,"column":48}},"43":{"start":{"line":132,"column":2},"end":{"line":135,"column":3}},"44":{"start":{"line":133,"column":4},"end":{"line":133,"column":20}},"45":{"start":{"line":134,"column":4},"end":{"line":134,"column":26}},"46":{"start":{"line":136,"column":2},"end":{"line":139,"column":3}},"47":{"start":{"line":137,"column":4},"end":{"line":137,"column":18}},"48":{"start":{"line":138,"column":4},"end":{"line":138,"column":24}},"49":{"start":{"line":141,"column":2},"end":{"line":141,"column":32}},"50":{"start":{"line":142,"column":2},"end":{"line":142,"column":28}},"51":{"start":{"line":145,"column":2},"end":{"line":147,"column":3}},"52":{"start":{"line":146,"column":4},"end":{"line":146,"column":28}},"53":{"start":{"line":150,"column":2},"end":{"line":150,"column":60}},"54":{"start":{"line":151,"column":2},"end":{"line":151,"column":53}},"55":{"start":{"line":152,"column":2},"end":{"line":163,"column":3}},"56":{"start":{"line":154,"column":4},"end":{"line":154,"column":30}},"57":{"start":{"line":155,"column":4},"end":{"line":155,"column":29}},"58":{"start":{"line":157,"column":4},"end":{"line":162,"column":5}},"59":{"start":{"line":158,"column":6},"end":{"line":158,"column":33}},"60":{"start":{"line":160,"column":6},"end":{"line":160,"column":46}},"61":{"start":{"line":161,"column":6},"end":{"line":161,"column":70}},"62":{"start":{"line":167,"column":2},"end":{"line":169,"column":3}},"63":{"start":{"line":168,"column":4},"end":{"line":168,"column":66}},"64":{"start":{"line":172,"column":2},"end":{"line":172,"column":42}},"65":{"start":{"line":176,"column":2},"end":{"line":198,"column":3}},"66":{"start":{"line":178,"column":4},"end":{"line":186,"column":6}},"67":{"start":{"line":179,"column":6},"end":{"line":181,"column":7}},"68":{"start":{"line":180,"column":8},"end":{"line":180,"column":51}},"69":{"start":{"line":182,"column":6},"end":{"line":184,"column":7}},"70":{"start":{"line":183,"column":8},"end":{"line":183,"column":79}},"71":{"start":{"line":185,"column":6},"end":{"line":185,"column":44}},"72":{"start":{"line":188,"column":4},"end":{"line":188,"column":36}},"73":{"start":{"line":191,"column":4},"end":{"line":191,"column":31}},"74":{"start":{"line":192,"column":4},"end":{"line":196,"column":5}},"75":{"start":{"line":193,"column":6},"end":{"line":195,"column":7}},"76":{"start":{"line":194,"column":8},"end":{"line":194,"column":63}},"77":{"start":{"line":197,"column":4},"end":{"line":197,"column":55}},"78":{"start":{"line":200,"column":2},"end":{"line":200,"column":44}},"79":{"start":{"line":203,"column":2},"end":{"line":203,"column":38}},"80":{"start":{"line":206,"column":2},"end":{"line":209,"column":3}},"81":{"start":{"line":207,"column":4},"end":{"line":207,"column":45}},"82":{"start":{"line":208,"column":4},"end":{"line":208,"column":22}},"83":{"start":{"line":212,"column":2},"end":{"line":212,"column":59}},"84":{"start":{"line":213,"column":2},"end":{"line":213,"column":49}},"85":{"start":{"line":214,"column":2},"end":{"line":214,"column":60}},"86":{"start":{"line":215,"column":2},"end":{"line":215,"column":46}},"87":{"start":{"line":216,"column":2},"end":{"line":219,"column":3}},"88":{"start":{"line":218,"column":4},"end":{"line":218,"column":30}},"89":{"start":{"line":220,"column":2},"end":{"line":220,"column":55}},"90":{"start":{"line":221,"column":2},"end":{"line":221,"column":53}},"91":{"start":{"line":222,"column":2},"end":{"line":222,"column":47}},"92":{"start":{"line":223,"column":2},"end":{"line":223,"column":44}},"93":{"start":{"line":226,"column":2},"end":{"line":231,"column":3}},"94":{"start":{"line":228,"column":4},"end":{"line":230,"column":5}},"95":{"start":{"line":229,"column":6},"end":{"line":229,"column":40}},"96":{"start":{"line":234,"column":2},"end":{"line":239,"column":3}},"97":{"start":{"line":235,"column":4},"end":{"line":238,"column":7}},"98":{"start":{"line":236,"column":6},"end":{"line":236,"column":37}},"99":{"start":{"line":237,"column":6},"end":{"line":237,"column":93}},"100":{"start":{"line":241,"column":2},"end":{"line":241,"column":25}},"101":{"start":{"line":242,"column":2},"end":{"line":242,"column":25}},"102":{"start":{"line":244,"column":2},"end":{"line":261,"column":3}},"103":{"start":{"line":246,"column":4},"end":{"line":249,"column":5}},"104":{"start":{"line":248,"column":6},"end":{"line":248,"column":27}},"105":{"start":{"line":252,"column":4},"end":{"line":255,"column":5}},"106":{"start":{"line":253,"column":6},"end":{"line":254,"column":50}},"107":{"start":{"line":258,"column":4},"end":{"line":260,"column":5}},"108":{"start":{"line":259,"column":6},"end":{"line":259,"column":95}},"109":{"start":{"line":263,"column":2},"end":{"line":263,"column":83}},"110":{"start":{"line":265,"column":2},"end":{"line":265,"column":48}},"111":{"start":{"line":268,"column":2},"end":{"line":268,"column":42}},"112":{"start":{"line":270,"column":2},"end":{"line":270,"column":49}},"113":{"start":{"line":272,"column":2},"end":{"line":272,"column":41}},"114":{"start":{"line":273,"column":2},"end":{"line":276,"column":3}},"115":{"start":{"line":275,"column":4},"end":{"line":275,"column":23}},"116":{"start":{"line":278,"column":2},"end":{"line":278,"column":42}},"117":{"start":{"line":279,"column":2},"end":{"line":282,"column":3}},"118":{"start":{"line":281,"column":4},"end":{"line":281,"column":24}},"119":{"start":{"line":285,"column":2},"end":{"line":288,"column":3}},"120":{"start":{"line":287,"column":4},"end":{"line":287,"column":87}},"121":{"start":{"line":290,"column":2},"end":{"line":290,"column":38}},"122":{"start":{"line":292,"column":2},"end":{"line":319,"column":3}},"123":{"start":{"line":293,"column":4},"end":{"line":293,"column":28}},"124":{"start":{"line":294,"column":4},"end":{"line":303,"column":5}},"125":{"start":{"line":295,"column":6},"end":{"line":302,"column":9}},"126":{"start":{"line":297,"column":10},"end":{"line":297,"column":58}},"127":{"start":{"line":298,"column":10},"end":{"line":298,"column":37}},"128":{"start":{"line":306,"column":4},"end":{"line":318,"column":7}},"129":{"start":{"line":308,"column":8},"end":{"line":308,"column":29}},"130":{"start":{"line":309,"column":8},"end":{"line":309,"column":54}},"131":{"start":{"line":310,"column":8},"end":{"line":313,"column":9}},"132":{"start":{"line":311,"column":10},"end":{"line":311,"column":25}},"133":{"start":{"line":312,"column":10},"end":{"line":312,"column":42}},"134":{"start":{"line":314,"column":8},"end":{"line":314,"column":27}},"135":{"start":{"line":322,"column":2},"end":{"line":328,"column":4}},"136":{"start":{"line":323,"column":4},"end":{"line":323,"column":49}},"137":{"start":{"line":324,"column":4},"end":{"line":324,"column":34}},"138":{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},"139":{"start":{"line":326,"column":6},"end":{"line":326,"column":34}},"140":{"start":{"line":331,"column":2},"end":{"line":333,"column":4}},"141":{"start":{"line":332,"column":4},"end":{"line":332,"column":28}},"142":{"start":{"line":355,"column":2},"end":{"line":411,"column":4}},"143":{"start":{"line":356,"column":4},"end":{"line":356,"column":54}},"144":{"start":{"line":357,"column":4},"end":{"line":357,"column":50}},"145":{"start":{"line":359,"column":4},"end":{"line":359,"column":50}},"146":{"start":{"line":360,"column":4},"end":{"line":360,"column":46}},"147":{"start":{"line":363,"column":4},"end":{"line":363,"column":24}},"148":{"start":{"line":364,"column":4},"end":{"line":369,"column":5}},"149":{"start":{"line":365,"column":6},"end":{"line":368,"column":7}},"150":{"start":{"line":366,"column":8},"end":{"line":366,"column":23}},"151":{"start":{"line":367,"column":8},"end":{"line":367,"column":14}},"152":{"start":{"line":372,"column":4},"end":{"line":372,"column":39}},"153":{"start":{"line":373,"column":4},"end":{"line":389,"column":5}},"154":{"start":{"line":374,"column":6},"end":{"line":374,"column":24}},"155":{"start":{"line":376,"column":6},"end":{"line":379,"column":7}},"156":{"start":{"line":378,"column":8},"end":{"line":378,"column":17}},"157":{"start":{"line":380,"column":6},"end":{"line":388,"column":7}},"158":{"start":{"line":381,"column":8},"end":{"line":381,"column":39}},"159":{"start":{"line":382,"column":8},"end":{"line":382,"column":36}},"160":{"start":{"line":383,"column":8},"end":{"line":386,"column":9}},"161":{"start":{"line":385,"column":10},"end":{"line":385,"column":55}},"162":{"start":{"line":387,"column":8},"end":{"line":387,"column":47}},"163":{"start":{"line":392,"column":4},"end":{"line":392,"column":52}},"164":{"start":{"line":393,"column":4},"end":{"line":393,"column":65}},"165":{"start":{"line":398,"column":4},"end":{"line":400,"column":5}},"166":{"start":{"line":399,"column":6},"end":{"line":399,"column":41}},"167":{"start":{"line":403,"column":4},"end":{"line":403,"column":100}},"168":{"start":{"line":406,"column":4},"end":{"line":408,"column":5}},"169":{"start":{"line":407,"column":6},"end":{"line":407,"column":36}},"170":{"start":{"line":410,"column":4},"end":{"line":410,"column":20}},"171":{"start":{"line":417,"column":2},"end":{"line":491,"column":4}},"172":{"start":{"line":418,"column":4},"end":{"line":418,"column":45}},"173":{"start":{"line":419,"column":4},"end":{"line":419,"column":40}},"174":{"start":{"line":420,"column":4},"end":{"line":420,"column":29}},"175":{"start":{"line":421,"column":4},"end":{"line":423,"column":5}},"176":{"start":{"line":422,"column":6},"end":{"line":422,"column":73}},"177":{"start":{"line":425,"column":4},"end":{"line":428,"column":5}},"178":{"start":{"line":426,"column":6},"end":{"line":426,"column":90}},"179":{"start":{"line":427,"column":6},"end":{"line":427,"column":68}},"180":{"start":{"line":430,"column":4},"end":{"line":474,"column":7}},"181":{"start":{"line":432,"column":8},"end":{"line":436,"column":9}},"182":{"start":{"line":433,"column":10},"end":{"line":433,"column":60}},"183":{"start":{"line":435,"column":10},"end":{"line":435,"column":58}},"184":{"start":{"line":439,"column":8},"end":{"line":439,"column":75}},"185":{"start":{"line":440,"column":8},"end":{"line":448,"column":9}},"186":{"start":{"line":441,"column":10},"end":{"line":441,"column":26}},"187":{"start":{"line":442,"column":15},"end":{"line":448,"column":9}},"188":{"start":{"line":443,"column":10},"end":{"line":443,"column":30}},"189":{"start":{"line":444,"column":15},"end":{"line":448,"column":9}},"190":{"start":{"line":445,"column":10},"end":{"line":445,"column":33}},"191":{"start":{"line":446,"column":15},"end":{"line":448,"column":9}},"192":{"start":{"line":447,"column":10},"end":{"line":447,"column":56}},"193":{"start":{"line":450,"column":8},"end":{"line":450,"column":91}},"194":{"start":{"line":451,"column":8},"end":{"line":453,"column":9}},"195":{"start":{"line":452,"column":10},"end":{"line":452,"column":23}},"196":{"start":{"line":455,"column":8},"end":{"line":470,"column":9}},"197":{"start":{"line":456,"column":10},"end":{"line":456,"column":60}},"198":{"start":{"line":458,"column":10},"end":{"line":458,"column":42}},"199":{"start":{"line":459,"column":10},"end":{"line":469,"column":11}},"200":{"start":{"line":460,"column":12},"end":{"line":460,"column":46}},"201":{"start":{"line":462,"column":12},"end":{"line":468,"column":13}},"202":{"start":{"line":463,"column":14},"end":{"line":463,"column":102}},"203":{"start":{"line":467,"column":14},"end":{"line":467,"column":96}},"204":{"start":{"line":478,"column":4},"end":{"line":490,"column":7}},"205":{"start":{"line":480,"column":8},"end":{"line":480,"column":56}},"206":{"start":{"line":483,"column":8},"end":{"line":485,"column":9}},"207":{"start":{"line":484,"column":10},"end":{"line":484,"column":27}},"208":{"start":{"line":486,"column":8},"end":{"line":486,"column":42}},"209":{"start":{"line":493,"column":2},"end":{"line":493,"column":47}},"210":{"start":{"line":494,"column":2},"end":{"line":494,"column":32}},"211":{"start":{"line":495,"column":2},"end":{"line":495,"column":25}},"212":{"start":{"line":496,"column":2},"end":{"line":499,"column":3}},"213":{"start":{"line":497,"column":4},"end":{"line":497,"column":31}},"214":{"start":{"line":498,"column":4},"end":{"line":498,"column":46}},"215":{"start":{"line":501,"column":2},"end":{"line":501,"column":44}},"216":{"start":{"line":502,"column":2},"end":{"line":502,"column":36}},"217":{"start":{"line":503,"column":2},"end":{"line":503,"column":21}},"218":{"start":{"line":504,"column":2},"end":{"line":520,"column":3}},"219":{"start":{"line":505,"column":4},"end":{"line":505,"column":23}},"220":{"start":{"line":506,"column":4},"end":{"line":506,"column":36}},"221":{"start":{"line":507,"column":4},"end":{"line":509,"column":5}},"222":{"start":{"line":508,"column":6},"end":{"line":508,"column":17}},"223":{"start":{"line":510,"column":4},"end":{"line":519,"column":5}},"224":{"start":{"line":511,"column":6},"end":{"line":516,"column":9}},"225":{"start":{"line":512,"column":8},"end":{"line":512,"column":31}},"226":{"start":{"line":512,"column":24},"end":{"line":512,"column":31}},"227":{"start":{"line":513,"column":8},"end":{"line":515,"column":9}},"228":{"start":{"line":514,"column":10},"end":{"line":514,"column":62}},"229":{"start":{"line":517,"column":11},"end":{"line":519,"column":5}},"230":{"start":{"line":518,"column":6},"end":{"line":518,"column":62}},"231":{"start":{"line":522,"column":2},"end":{"line":522,"column":41}},"232":{"start":{"line":524,"column":2},"end":{"line":524,"column":20}},"233":{"start":{"line":528,"column":0},"end":{"line":534,"column":1}},"234":{"start":{"line":529,"column":2},"end":{"line":529,"column":24}},"235":{"start":{"line":530,"column":2},"end":{"line":532,"column":3}},"236":{"start":{"line":531,"column":4},"end":{"line":531,"column":50}},"237":{"start":{"line":533,"column":2},"end":{"line":533,"column":11}},"238":{"start":{"line":537,"column":0},"end":{"line":552,"column":1}},"239":{"start":{"line":538,"column":2},"end":{"line":547,"column":3}},"240":{"start":{"line":539,"column":4},"end":{"line":546,"column":5}},"241":{"start":{"line":542,"column":8},"end":{"line":542,"column":20}},"242":{"start":{"line":545,"column":8},"end":{"line":545,"column":21}},"243":{"start":{"line":548,"column":2},"end":{"line":550,"column":3}},"244":{"start":{"line":549,"column":4},"end":{"line":549,"column":16}},"245":{"start":{"line":551,"column":2},"end":{"line":551,"column":22}},"246":{"start":{"line":561,"column":0},"end":{"line":564,"column":2}},"247":{"start":{"line":562,"column":2},"end":{"line":562,"column":75}},"248":{"start":{"line":563,"column":2},"end":{"line":563,"column":52}},"249":{"start":{"line":571,"column":0},"end":{"line":573,"column":2}},"250":{"start":{"line":572,"column":2},"end":{"line":572,"column":43}},"251":{"start":{"line":605,"column":0},"end":{"line":612,"column":2}},"252":{"start":{"line":606,"column":2},"end":{"line":606,"column":15}},"253":{"start":{"line":607,"column":2},"end":{"line":607,"column":32}},"254":{"start":{"line":608,"column":2},"end":{"line":611,"column":3}},"255":{"start":{"line":609,"column":4},"end":{"line":609,"column":36}},"256":{"start":{"line":610,"column":4},"end":{"line":610,"column":49}},"257":{"start":{"line":614,"column":0},"end":{"line":640,"column":2}},"258":{"start":{"line":615,"column":2},"end":{"line":615,"column":26}},"259":{"start":{"line":616,"column":2},"end":{"line":616,"column":35}},"260":{"start":{"line":617,"column":2},"end":{"line":617,"column":54}},"261":{"start":{"line":618,"column":2},"end":{"line":620,"column":4}},"262":{"start":{"line":619,"column":4},"end":{"line":619,"column":49}},"263":{"start":{"line":622,"column":2},"end":{"line":622,"column":31}},"264":{"start":{"line":624,"column":2},"end":{"line":624,"column":27}},"265":{"start":{"line":626,"column":2},"end":{"line":626,"column":54}},"266":{"start":{"line":627,"column":2},"end":{"line":627,"column":48}},"267":{"start":{"line":628,"column":2},"end":{"line":628,"column":55}},"268":{"start":{"line":630,"column":2},"end":{"line":637,"column":3}},"269":{"start":{"line":632,"column":4},"end":{"line":632,"column":43}},"270":{"start":{"line":633,"column":4},"end":{"line":636,"column":6}},"271":{"start":{"line":639,"column":2},"end":{"line":639,"column":15}},"272":{"start":{"line":645,"column":0},"end":{"line":652,"column":1}},"273":{"start":{"line":646,"column":2},"end":{"line":651,"column":5}},"274":{"start":{"line":657,"column":0},"end":{"line":667,"column":2}},"275":{"start":{"line":658,"column":2},"end":{"line":660,"column":3}},"276":{"start":{"line":659,"column":4},"end":{"line":659,"column":16}},"277":{"start":{"line":661,"column":2},"end":{"line":665,"column":3}},"278":{"start":{"line":662,"column":4},"end":{"line":662,"column":24}},"279":{"start":{"line":664,"column":4},"end":{"line":664,"column":22}},"280":{"start":{"line":666,"column":2},"end":{"line":666,"column":45}},"281":{"start":{"line":674,"column":0},"end":{"line":712,"column":2}},"282":{"start":{"line":675,"column":2},"end":{"line":677,"column":3}},"283":{"start":{"line":676,"column":4},"end":{"line":676,"column":16}},"284":{"start":{"line":678,"column":2},"end":{"line":686,"column":3}},"285":{"start":{"line":680,"column":4},"end":{"line":680,"column":45}},"286":{"start":{"line":681,"column":4},"end":{"line":685,"column":5}},"287":{"start":{"line":682,"column":6},"end":{"line":682,"column":24}},"288":{"start":{"line":684,"column":6},"end":{"line":684,"column":22}},"289":{"start":{"line":687,"column":2},"end":{"line":710,"column":3}},"290":{"start":{"line":688,"column":4},"end":{"line":688,"column":87}},"291":{"start":{"line":689,"column":4},"end":{"line":695,"column":5}},"292":{"start":{"line":690,"column":6},"end":{"line":690,"column":24}},"293":{"start":{"line":693,"column":6},"end":{"line":693,"column":55}},"294":{"start":{"line":694,"column":6},"end":{"line":694,"column":18}},"295":{"start":{"line":696,"column":9},"end":{"line":710,"column":3}},"296":{"start":{"line":698,"column":4},"end":{"line":707,"column":5}},"297":{"start":{"line":699,"column":6},"end":{"line":699,"column":41}},"298":{"start":{"line":701,"column":6},"end":{"line":706,"column":11}},"299":{"start":{"line":708,"column":9},"end":{"line":710,"column":3}},"300":{"start":{"line":709,"column":4},"end":{"line":709,"column":16}},"301":{"start":{"line":711,"column":2},"end":{"line":711,"column":14}},"302":{"start":{"line":726,"column":0},"end":{"line":772,"column":2}},"303":{"start":{"line":727,"column":2},"end":{"line":727,"column":18}},"304":{"start":{"line":730,"column":2},"end":{"line":744,"column":3}},"305":{"start":{"line":731,"column":4},"end":{"line":743,"column":5}},"306":{"start":{"line":733,"column":6},"end":{"line":733,"column":26}},"307":{"start":{"line":736,"column":6},"end":{"line":742,"column":8}},"308":{"start":{"line":746,"column":2},"end":{"line":746,"column":21}},"309":{"start":{"line":747,"column":2},"end":{"line":758,"column":3}},"310":{"start":{"line":748,"column":4},"end":{"line":748,"column":51}},"311":{"start":{"line":749,"column":4},"end":{"line":749,"column":27}},"312":{"start":{"line":750,"column":4},"end":{"line":750,"column":14}},"313":{"start":{"line":751,"column":4},"end":{"line":755,"column":5}},"314":{"start":{"line":752,"column":6},"end":{"line":752,"column":86}},"315":{"start":{"line":754,"column":6},"end":{"line":754,"column":86}},"316":{"start":{"line":756,"column":4},"end":{"line":756,"column":25}},"317":{"start":{"line":757,"column":4},"end":{"line":757,"column":61}},"318":{"start":{"line":761,"column":2},"end":{"line":770,"column":3}},"319":{"start":{"line":762,"column":4},"end":{"line":762,"column":32}},"320":{"start":{"line":763,"column":4},"end":{"line":763,"column":46}},"321":{"start":{"line":764,"column":4},"end":{"line":764,"column":46}},"322":{"start":{"line":765,"column":4},"end":{"line":769,"column":5}},"323":{"start":{"line":766,"column":6},"end":{"line":768,"column":7}},"324":{"start":{"line":767,"column":8},"end":{"line":767,"column":67}},"325":{"start":{"line":771,"column":2},"end":{"line":771,"column":16}},"326":{"start":{"line":781,"column":0},"end":{"line":787,"column":2}},"327":{"start":{"line":783,"column":2},"end":{"line":783,"column":32}},"328":{"start":{"line":786,"column":2},"end":{"line":786,"column":44}}},"branchMap":{"1":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"2":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"3":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":6},"end":{"line":76,"column":12}},{"start":{"line":76,"column":16},"end":{"line":76,"column":27}}]},"4":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":20},"end":{"line":123,"column":28}},{"start":{"line":123,"column":32},"end":{"line":123,"column":47}},{"start":{"line":124,"column":4},"end":{"line":124,"column":35}}]},"5":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":21},"end":{"line":126,"column":29}},{"start":{"line":126,"column":33},"end":{"line":126,"column":46}},{"start":{"line":126,"column":51},"end":{"line":126,"column":53}}]},"6":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":17},"end":{"line":127,"column":33}},{"start":{"line":127,"column":37},"end":{"line":127,"column":47}}]},"7":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"8":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"9":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":2},"end":{"line":136,"column":2}},{"start":{"line":136,"column":2},"end":{"line":136,"column":2}}]},"10":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":15},"end":{"line":141,"column":25}},{"start":{"line":141,"column":29},"end":{"line":141,"column":31}}]},"11":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":13},"end":{"line":142,"column":21}},{"start":{"line":142,"column":25},"end":{"line":142,"column":27}}]},"12":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"13":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":6},"end":{"line":145,"column":35}},{"start":{"line":145,"column":39},"end":{"line":145,"column":63}}]},"14":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":23},"end":{"line":150,"column":29}},{"start":{"line":150,"column":33},"end":{"line":150,"column":59}}]},"15":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":18},"end":{"line":151,"column":31}},{"start":{"line":151,"column":35},"end":{"line":151,"column":52}}]},"16":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":2},"end":{"line":152,"column":2}},{"start":{"line":152,"column":2},"end":{"line":152,"column":2}}]},"17":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"18":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"19":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":7},"end":{"line":167,"column":13}},{"start":{"line":167,"column":17},"end":{"line":167,"column":31}},{"start":{"line":167,"column":37},"end":{"line":167,"column":44}},{"start":{"line":167,"column":48},"end":{"line":167,"column":61}}]},"20":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"21":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":6},"end":{"line":176,"column":17}},{"start":{"line":176,"column":21},"end":{"line":176,"column":52}}]},"22":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":6},"end":{"line":179,"column":6}},{"start":{"line":179,"column":6},"end":{"line":179,"column":6}}]},"23":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":6},"end":{"line":182,"column":6}},{"start":{"line":182,"column":6},"end":{"line":182,"column":6}}]},"24":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":6},"end":{"line":193,"column":6}},{"start":{"line":193,"column":6},"end":{"line":193,"column":6}}]},"25":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"26":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":2},"end":{"line":216,"column":2}},{"start":{"line":216,"column":2},"end":{"line":216,"column":2}}]},"27":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":228,"column":4}},{"start":{"line":228,"column":4},"end":{"line":228,"column":4}}]},"28":{"line":228,"type":"binary-expr","locations":[{"start":{"line":228,"column":8},"end":{"line":228,"column":23}},{"start":{"line":228,"column":27},"end":{"line":228,"column":45}}]},"29":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":2},"end":{"line":234,"column":2}},{"start":{"line":234,"column":2},"end":{"line":234,"column":2}}]},"30":{"line":237,"type":"cond-expr","locations":[{"start":{"line":237,"column":50},"end":{"line":237,"column":84}},{"start":{"line":237,"column":87},"end":{"line":237,"column":92}}]},"31":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":4},"end":{"line":246,"column":4}},{"start":{"line":246,"column":4},"end":{"line":246,"column":4}}]},"32":{"line":246,"type":"binary-expr","locations":[{"start":{"line":246,"column":8},"end":{"line":246,"column":30}},{"start":{"line":246,"column":34},"end":{"line":246,"column":57}}]},"33":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":4},"end":{"line":252,"column":4}},{"start":{"line":252,"column":4},"end":{"line":252,"column":4}}]},"34":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":4},"end":{"line":258,"column":4}},{"start":{"line":258,"column":4},"end":{"line":258,"column":4}}]},"35":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":2},"end":{"line":273,"column":2}},{"start":{"line":273,"column":2},"end":{"line":273,"column":2}}]},"36":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":2},"end":{"line":279,"column":2}},{"start":{"line":279,"column":2},"end":{"line":279,"column":2}}]},"37":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":2},"end":{"line":285,"column":2}},{"start":{"line":285,"column":2},"end":{"line":285,"column":2}}]},"38":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":2},"end":{"line":292,"column":2}},{"start":{"line":292,"column":2},"end":{"line":292,"column":2}}]},"39":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":4},"end":{"line":294,"column":4}},{"start":{"line":294,"column":4},"end":{"line":294,"column":4}}]},"40":{"line":359,"type":"binary-expr","locations":[{"start":{"line":359,"column":25},"end":{"line":359,"column":43}},{"start":{"line":359,"column":47},"end":{"line":359,"column":49}}]},"41":{"line":360,"type":"binary-expr","locations":[{"start":{"line":360,"column":23},"end":{"line":360,"column":39}},{"start":{"line":360,"column":43},"end":{"line":360,"column":45}}]},"42":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":6},"end":{"line":365,"column":6}},{"start":{"line":365,"column":6},"end":{"line":365,"column":6}}]},"43":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":10},"end":{"line":365,"column":31}},{"start":{"line":365,"column":35},"end":{"line":365,"column":59}}]},"44":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":6},"end":{"line":376,"column":6}},{"start":{"line":376,"column":6},"end":{"line":376,"column":6}}]},"45":{"line":376,"type":"binary-expr","locations":[{"start":{"line":376,"column":10},"end":{"line":376,"column":17}},{"start":{"line":376,"column":21},"end":{"line":376,"column":39}}]},"46":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":6},"end":{"line":380,"column":6}},{"start":{"line":380,"column":6},"end":{"line":380,"column":6}}]},"47":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":8},"end":{"line":383,"column":8}},{"start":{"line":383,"column":8},"end":{"line":383,"column":8}}]},"48":{"line":383,"type":"binary-expr","locations":[{"start":{"line":383,"column":12},"end":{"line":383,"column":20}},{"start":{"line":383,"column":24},"end":{"line":383,"column":52}}]},"49":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":4},"end":{"line":398,"column":4}},{"start":{"line":398,"column":4},"end":{"line":398,"column":4}}]},"50":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":4},"end":{"line":406,"column":4}},{"start":{"line":406,"column":4},"end":{"line":406,"column":4}}]},"51":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":4},"end":{"line":421,"column":4}},{"start":{"line":421,"column":4},"end":{"line":421,"column":4}}]},"52":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":4},"end":{"line":425,"column":4}},{"start":{"line":425,"column":4},"end":{"line":425,"column":4}}]},"53":{"line":426,"type":"cond-expr","locations":[{"start":{"line":426,"column":64},"end":{"line":426,"column":77}},{"start":{"line":426,"column":80},"end":{"line":426,"column":89}}]},"54":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":8},"end":{"line":432,"column":8}},{"start":{"line":432,"column":8},"end":{"line":432,"column":8}}]},"55":{"line":435,"type":"binary-expr","locations":[{"start":{"line":435,"column":17},"end":{"line":435,"column":28}},{"start":{"line":435,"column":32},"end":{"line":435,"column":57}}]},"56":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":8},"end":{"line":440,"column":8}},{"start":{"line":440,"column":8},"end":{"line":440,"column":8}}]},"57":{"line":440,"type":"binary-expr","locations":[{"start":{"line":440,"column":12},"end":{"line":440,"column":35}},{"start":{"line":440,"column":39},"end":{"line":440,"column":57}}]},"58":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":15},"end":{"line":442,"column":15}},{"start":{"line":442,"column":15},"end":{"line":442,"column":15}}]},"59":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":15},"end":{"line":444,"column":15}},{"start":{"line":444,"column":15},"end":{"line":444,"column":15}}]},"60":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":15},"end":{"line":446,"column":15}},{"start":{"line":446,"column":15},"end":{"line":446,"column":15}}]},"61":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":8},"end":{"line":451,"column":8}},{"start":{"line":451,"column":8},"end":{"line":451,"column":8}}]},"62":{"line":451,"type":"binary-expr","locations":[{"start":{"line":451,"column":12},"end":{"line":451,"column":31}},{"start":{"line":451,"column":35},"end":{"line":451,"column":57}}]},"63":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":8},"end":{"line":455,"column":8}},{"start":{"line":455,"column":8},"end":{"line":455,"column":8}}]},"64":{"line":458,"type":"binary-expr","locations":[{"start":{"line":458,"column":24},"end":{"line":458,"column":35}},{"start":{"line":458,"column":39},"end":{"line":458,"column":41}}]},"65":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":10},"end":{"line":459,"column":10}},{"start":{"line":459,"column":10},"end":{"line":459,"column":10}}]},"66":{"line":459,"type":"binary-expr","locations":[{"start":{"line":459,"column":14},"end":{"line":459,"column":28}},{"start":{"line":459,"column":32},"end":{"line":459,"column":51}}]},"67":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":12},"end":{"line":462,"column":12}},{"start":{"line":462,"column":12},"end":{"line":462,"column":12}}]},"68":{"line":467,"type":"cond-expr","locations":[{"start":{"line":467,"column":72},"end":{"line":467,"column":77}},{"start":{"line":467,"column":80},"end":{"line":467,"column":95}}]},"69":{"line":480,"type":"binary-expr","locations":[{"start":{"line":480,"column":15},"end":{"line":480,"column":26}},{"start":{"line":480,"column":30},"end":{"line":480,"column":55}}]},"70":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":8},"end":{"line":483,"column":8}},{"start":{"line":483,"column":8},"end":{"line":483,"column":8}}]},"71":{"line":501,"type":"binary-expr","locations":[{"start":{"line":501,"column":22},"end":{"line":501,"column":37}},{"start":{"line":501,"column":41},"end":{"line":501,"column":43}}]},"72":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":4},"end":{"line":507,"column":4}},{"start":{"line":507,"column":4},"end":{"line":507,"column":4}}]},"73":{"line":510,"type":"if","locations":[{"start":{"line":510,"column":4},"end":{"line":510,"column":4}},{"start":{"line":510,"column":4},"end":{"line":510,"column":4}}]},"74":{"line":512,"type":"if","locations":[{"start":{"line":512,"column":8},"end":{"line":512,"column":8}},{"start":{"line":512,"column":8},"end":{"line":512,"column":8}}]},"75":{"line":513,"type":"if","locations":[{"start":{"line":513,"column":8},"end":{"line":513,"column":8}},{"start":{"line":513,"column":8},"end":{"line":513,"column":8}}]},"76":{"line":517,"type":"if","locations":[{"start":{"line":517,"column":11},"end":{"line":517,"column":11}},{"start":{"line":517,"column":11},"end":{"line":517,"column":11}}]},"77":{"line":530,"type":"if","locations":[{"start":{"line":530,"column":2},"end":{"line":530,"column":2}},{"start":{"line":530,"column":2},"end":{"line":530,"column":2}}]},"78":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":2},"end":{"line":538,"column":2}},{"start":{"line":538,"column":2},"end":{"line":538,"column":2}}]},"79":{"line":539,"type":"switch","locations":[{"start":{"line":540,"column":6},"end":{"line":540,"column":18}},{"start":{"line":541,"column":6},"end":{"line":542,"column":20}},{"start":{"line":543,"column":6},"end":{"line":543,"column":19}},{"start":{"line":544,"column":6},"end":{"line":545,"column":21}}]},"80":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":2},"end":{"line":548,"column":2}},{"start":{"line":548,"column":2},"end":{"line":548,"column":2}}]},"81":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":2},"end":{"line":630,"column":2}},{"start":{"line":630,"column":2},"end":{"line":630,"column":2}}]},"82":{"line":658,"type":"if","locations":[{"start":{"line":658,"column":2},"end":{"line":658,"column":2}},{"start":{"line":658,"column":2},"end":{"line":658,"column":2}}]},"83":{"line":661,"type":"if","locations":[{"start":{"line":661,"column":2},"end":{"line":661,"column":2}},{"start":{"line":661,"column":2},"end":{"line":661,"column":2}}]},"84":{"line":675,"type":"if","locations":[{"start":{"line":675,"column":2},"end":{"line":675,"column":2}},{"start":{"line":675,"column":2},"end":{"line":675,"column":2}}]},"85":{"line":678,"type":"if","locations":[{"start":{"line":678,"column":2},"end":{"line":678,"column":2}},{"start":{"line":678,"column":2},"end":{"line":678,"column":2}}]},"86":{"line":678,"type":"binary-expr","locations":[{"start":{"line":678,"column":6},"end":{"line":678,"column":25}},{"start":{"line":678,"column":29},"end":{"line":678,"column":44}}]},"87":{"line":681,"type":"if","locations":[{"start":{"line":681,"column":4},"end":{"line":681,"column":4}},{"start":{"line":681,"column":4},"end":{"line":681,"column":4}}]},"88":{"line":687,"type":"if","locations":[{"start":{"line":687,"column":2},"end":{"line":687,"column":2}},{"start":{"line":687,"column":2},"end":{"line":687,"column":2}}]},"89":{"line":688,"type":"binary-expr","locations":[{"start":{"line":688,"column":21},"end":{"line":688,"column":65}},{"start":{"line":688,"column":69},"end":{"line":688,"column":86}}]},"90":{"line":689,"type":"if","locations":[{"start":{"line":689,"column":4},"end":{"line":689,"column":4}},{"start":{"line":689,"column":4},"end":{"line":689,"column":4}}]},"91":{"line":696,"type":"if","locations":[{"start":{"line":696,"column":9},"end":{"line":696,"column":9}},{"start":{"line":696,"column":9},"end":{"line":696,"column":9}}]},"92":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":4},"end":{"line":698,"column":4}},{"start":{"line":698,"column":4},"end":{"line":698,"column":4}}]},"93":{"line":705,"type":"binary-expr","locations":[{"start":{"line":705,"column":18},"end":{"line":705,"column":52}},{"start":{"line":705,"column":56},"end":{"line":705,"column":61}}]},"94":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":9},"end":{"line":708,"column":9}},{"start":{"line":708,"column":9},"end":{"line":708,"column":9}}]},"95":{"line":730,"type":"if","locations":[{"start":{"line":730,"column":2},"end":{"line":730,"column":2}},{"start":{"line":730,"column":2},"end":{"line":730,"column":2}}]},"96":{"line":731,"type":"if","locations":[{"start":{"line":731,"column":4},"end":{"line":731,"column":4}},{"start":{"line":731,"column":4},"end":{"line":731,"column":4}}]},"97":{"line":731,"type":"binary-expr","locations":[{"start":{"line":731,"column":8},"end":{"line":731,"column":26}},{"start":{"line":731,"column":30},"end":{"line":731,"column":42}}]},"98":{"line":751,"type":"if","locations":[{"start":{"line":751,"column":4},"end":{"line":751,"column":4}},{"start":{"line":751,"column":4},"end":{"line":751,"column":4}}]},"99":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":4},"end":{"line":765,"column":4}},{"start":{"line":765,"column":4},"end":{"line":765,"column":4}}]},"100":{"line":765,"type":"binary-expr","locations":[{"start":{"line":765,"column":8},"end":{"line":765,"column":19}},{"start":{"line":765,"column":23},"end":{"line":765,"column":34}}]},"101":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":6},"end":{"line":766,"column":6}},{"start":{"line":766,"column":6},"end":{"line":766,"column":6}}]}},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","'use strict';","","/*!"," * Module dependencies"," */","","var g = require('strong-globalize')();","var inflection = require('inflection');","var EventEmitter = require('events').EventEmitter;","var util = require('util');","var assert = require('assert');","var deprecated = require('depd')('loopback-datasource-juggler');","var DefaultModelBaseClass = require('./model.js');","var List = require('./list.js');","var ModelDefinition = require('./model-definition.js');","var mergeSettings = require('./utils').mergeSettings;","var MixinProvider = require('./mixins');","","// Set up types","require('./types')(ModelBuilder);","","var introspect = require('./introspection')(ModelBuilder);","","/*!"," * Export public API"," */","exports.ModelBuilder = exports.Schema = ModelBuilder;","","/*!"," * Helpers"," */","var slice = Array.prototype.slice;","","/**"," * ModelBuilder - A builder to define data models."," *"," * @property {Object} definitions Definitions of the models."," * @property {Object} models Model constructors"," * @class"," */","function ModelBuilder() {","  // create blank models pool","  this.models = {};","  this.definitions = {};","  this.settings = {};","  this.mixins = new MixinProvider(this);","  this.defaultModelBaseClass = DefaultModelBaseClass;","}","","// Inherit from EventEmitter","util.inherits(ModelBuilder, EventEmitter);","","// Create a default instance","ModelBuilder.defaultInstance = new ModelBuilder();","","function isModelClass(cls) {","  if (!cls) {","    return false;","  }","  return cls.prototype instanceof DefaultModelBaseClass;","}","","/**"," * Get a model by name."," *"," * @param {String} name The model name"," * @param {Boolean} forceCreate Whether the create a stub for the given name if a model doesn't exist."," * @returns {*} The model class"," */","ModelBuilder.prototype.getModel = function(name, forceCreate) {","  var model = this.models[name];","  if (!model && forceCreate) {","    model = this.define(name, {}, {unresolved: true});","  }","  return model;","};","","/**"," * Get the model definition by name"," * @param {String} name The model name"," * @returns {ModelDefinition} The model definition"," */","ModelBuilder.prototype.getModelDefinition = function(name) {","  return this.definitions[name];","};","","/**"," * Define a model class."," * Simple example:"," * ```"," * var User = modelBuilder.define('User', {"," *     email: String,"," *     password: String,"," *     birthDate: Date,"," *     activated: Boolean"," * });"," * ```"," * More advanced example:"," * ```"," * var User = modelBuilder.define('User', {"," *     email: { type: String, limit: 150, index: true },"," *     password: { type: String, limit: 50 },"," *     birthDate: Date,"," *     registrationDate: {type: Date, default: function () { return new Date }},"," *     activated: { type: Boolean, default: false }"," * });"," * ```"," *"," * @param {String} className Name of class"," * @param {Object} properties Hash of class properties in format `{property: Type, property2: Type2, ...}` or `{property: {type: Type}, property2: {type: Type2}, ...}`"," * @param {Object} settings Other configuration of class"," * @param {Function} parent Parent model"," * @return newly created class"," *"," */","ModelBuilder.prototype.define = function defineClass(className, properties, settings, parent) {","  var modelBuilder = this;","  var args = slice.call(arguments);","  var pluralName = (settings && settings.plural) ||","    inflection.pluralize(className);","","  var httpOptions = (settings && settings.http) || {};","  var pathName = httpOptions.path || pluralName;","","  if (!className) {","    throw new Error(g.f('Class name required'));","  }","  if (args.length === 1) {","    properties = {};","    args.push(properties);","  }","  if (args.length === 2) {","    settings = {};","    args.push(settings);","  }","","  properties = properties || {};","  settings = settings || {};","","  // Set the strict mode to be false by default","  if (settings.strict === undefined || settings.strict === null) {","    settings.strict = false;","  }","","  // Set up the base model class","  var ModelBaseClass = parent || this.defaultModelBaseClass;","  var baseClass = settings.base || settings['super'];","  if (baseClass) {","    // Normalize base model property","    settings.base = baseClass;","    delete settings['super'];","","    if (isModelClass(baseClass)) {","      ModelBaseClass = baseClass;","    } else {","      ModelBaseClass = this.models[baseClass];","      assert(ModelBaseClass, 'Base model is not found: ' + baseClass);","    }","  }","","  // Make sure base properties are inherited","  // See https://github.com/strongloop/loopback-datasource-juggler/issues/293","  if ((parent && !settings.base) || (!parent && settings.base)) {","    return ModelBaseClass.extend(className, properties, settings);","  }","","  // Check if there is a unresolved model with the same name","  var ModelClass = this.models[className];","","  // Create the ModelClass if it doesn't exist or it's resolved (override)","  // TODO: [rfeng] We need to decide what names to use for built-in models such as User.","  if (!ModelClass || !ModelClass.settings.unresolved) {","    // every class can receive hash of data as optional param","    ModelClass = function ModelConstructor(data, options) {","      if (!(this instanceof ModelConstructor)) {","        return new ModelConstructor(data, options);","      }","      if (ModelClass.settings.unresolved) {","        throw new Error(g.f('Model %s is not defined.', ModelClass.modelName));","      }","      ModelBaseClass.apply(this, arguments);","    };","    // mix in EventEmitter (don't inherit from)","    var events = new EventEmitter();","    // The model can have more than 10 listeners for lazy relationship setup","    // See https://github.com/strongloop/loopback/issues/404","    events.setMaxListeners(32);","    for (var f in EventEmitter.prototype) {","      if (typeof EventEmitter.prototype[f] === 'function') {","        ModelClass[f] = EventEmitter.prototype[f].bind(events);","      }","    }","    hiddenProperty(ModelClass, 'modelName', className);","  }","","  util.inherits(ModelClass, ModelBaseClass);","","  // store class in model pool","  this.models[className] = ModelClass;","","  // Return the unresolved model","  if (settings.unresolved) {","    ModelClass.settings = {unresolved: true};","    return ModelClass;","  }","","  // Add metadata to the ModelClass","  hiddenProperty(ModelClass, 'modelBuilder', modelBuilder);","  hiddenProperty(ModelClass, 'dataSource', null); // Keep for back-compatibility","  hiddenProperty(ModelClass, 'pluralModelName', pluralName);","  hiddenProperty(ModelClass, 'relations', {});","  if (pathName[0] !== '/') {","    // Support both flavors path: 'x' and path: '/x'","    pathName = '/' + pathName;","  }","  hiddenProperty(ModelClass, 'http', {path: pathName});","  hiddenProperty(ModelClass, 'base', ModelBaseClass);","  hiddenProperty(ModelClass, '_observers', {});","  hiddenProperty(ModelClass, '_warned', {});","","  // inherit ModelBaseClass static methods","  for (var i in ModelBaseClass) {","    // We need to skip properties that are already in the subclass, for example, the event emitter methods","    if (i !== '_mixins' && !(i in ModelClass)) {","      ModelClass[i] = ModelBaseClass[i];","    }","  }","","  // Load and inject the model classes","  if (settings.models) {","    Object.keys(settings.models).forEach(function(m) {","      var model = settings.models[m];","      ModelClass[m] = typeof model === 'string' ? modelBuilder.getModel(model, true) : model;","    });","  }","","  ModelClass.getter = {};","  ModelClass.setter = {};","","  for (var p in properties) {","    // Remove properties that reverted by the subclass","    if (properties[p] === null || properties[p] === false) {","      // Hide the base property","      delete properties[p];","    }","","    // Throw error for properties with unsupported names","    if (/\\./.test(p)) {","      throw new Error(g.f('Property names containing dot(s) are not supported. ' +","        'Model: %s, property: %s', className, p));","    }","","    // Warn if property name is 'constructor'","    if (p === 'constructor') {","      deprecated(g.f('Property name should not be \"{{constructor}}\" in Model: %s', className));","    }","  }","","  var modelDefinition = new ModelDefinition(this, className, properties, settings);","","  this.definitions[className] = modelDefinition;","","  // expose properties on the ModelClass","  ModelClass.definition = modelDefinition;","  // keep a pointer to settings as models can use it for configuration","  ModelClass.settings = modelDefinition.settings;","","  var idInjection = settings.idInjection;","  if (idInjection !== false) {","    // Default to true if undefined","    idInjection = true;","  }","","  var idNames = modelDefinition.idNames();","  if (idNames.length > 0) {","    // id already exists","    idInjection = false;","  }","","  // Add the id property","  if (idInjection) {","    // Set up the id property","    ModelClass.definition.defineProperty('id', {type: Number, id: 1, generated: true});","  }","","  idNames = modelDefinition.idNames(); // Reload it after rebuild","  // Create a virtual property 'id'","  if (idNames.length === 1) {","    var idProp = idNames[0];","    if (idProp !== 'id') {","      Object.defineProperty(ModelClass.prototype, 'id', {","        get: function() {","          var idProp = ModelClass.definition.idNames()[0];","          return this.__data[idProp];","        },","        configurable: true,","        enumerable: false,","      });","    }","  } else {","    // Now the id property is an object that consists of multiple keys","    Object.defineProperty(ModelClass.prototype, 'id', {","      get: function() {","        var compositeId = {};","        var idNames = ModelClass.definition.idNames();","        for (var i = 0, p; i < idNames.length; i++) {","          p = idNames[i];","          compositeId[p] = this.__data[p];","        }","        return compositeId;","      },","      configurable: true,","      enumerable: false,","    });","  }","","  // A function to loop through the properties","  ModelClass.forEachProperty = function(cb) {","    var props = ModelClass.definition.properties;","    var keys = Object.keys(props);","    for (var i = 0, n = keys.length; i < n; i++) {","      cb(keys[i], props[keys[i]]);","    }","  };","","  // A function to attach the model class to a data source","  ModelClass.attachTo = function(dataSource) {","    dataSource.attach(this);","  };","","  /** Extend the model with the specified model, properties, and other settings.","   * For example, to extend an existing model, for example, a built-in model:","   *","   * ```js","   * var Customer = User.extend('customer', {","   *   accountId: String,","   *   vip: Boolean","   * });","   * ```","   *","   * To extend the base model, essentially creating a new model:","   * ```js","   * var user = loopback.Model.extend('user', properties, options);","   * ```","   *","   * @param {String} className Name of the new model being defined.","   * @options {Object} properties Properties to define for the model, added to properties of model being extended.","   * @options {Object} settings Model settings, such as relations and acls.","   *","   */","  ModelClass.extend = function(className, subclassProperties, subclassSettings) {","    var properties = ModelClass.definition.properties;","    var settings = ModelClass.definition.settings;","","    subclassProperties = subclassProperties || {};","    subclassSettings = subclassSettings || {};","","    // Check if subclass redefines the ids","    var idFound = false;","    for (var k in subclassProperties) {","      if (subclassProperties[k] && subclassProperties[k].id) {","        idFound = true;","        break;","      }","    }","","    // Merging the properties","    var keys = Object.keys(properties);","    for (var i = 0, n = keys.length; i < n; i++) {","      var key = keys[i];","","      if (idFound && properties[key].id) {","        // don't inherit id properties","        continue;","      }","      if (subclassProperties[key] === undefined) {","        var baseProp = properties[key];","        var basePropCopy = baseProp;","        if (baseProp && typeof baseProp === 'object') {","          // Deep clone the base prop","          basePropCopy = mergeSettings(null, baseProp);","        }","        subclassProperties[key] = basePropCopy;","      }","    }","","    // Merge the settings","    var originalSubclassSettings = subclassSettings;","    subclassSettings = mergeSettings(settings, subclassSettings);","","    // Ensure 'base' is not inherited. Note we don't have to delete 'super'","    // as that is removed from settings by modelBuilder.define and thus","    // it is never inherited","    if (!originalSubclassSettings.base) {","      subclassSettings.base = ModelClass;","    }","","    // Define the subclass","    var subClass = modelBuilder.define(className, subclassProperties, subclassSettings, ModelClass);","","    // Calling the setup function","    if (typeof subClass.setup === 'function') {","      subClass.setup.call(subClass);","    }","","    return subClass;","  };","","  /**","   * Register a property for the model class","   * @param {String} propertyName Name of the property.","   */","  ModelClass.registerProperty = function(propertyName) {","    var properties = modelDefinition.build();","    var prop = properties[propertyName];","    var DataType = prop.type;","    if (!DataType) {","      throw new Error(g.f('Invalid type for property %s', propertyName));","    }","","    if (prop.required) {","      var requiredOptions = typeof prop.required === 'object' ? prop.required : undefined;","      ModelClass.validatesPresenceOf(propertyName, requiredOptions);","    }","","    Object.defineProperty(ModelClass.prototype, propertyName, {","      get: function() {","        if (ModelClass.getter[propertyName]) {","          return ModelClass.getter[propertyName].call(this); // Try getter first","        } else {","          return this.__data && this.__data[propertyName]; // Try __data","        }","      },","      set: function(value) {","        var DataType = ModelClass.definition.properties[propertyName].type;","        if (Array.isArray(DataType) || DataType === Array) {","          DataType = List;","        } else if (DataType === Date) {","          DataType = DateType;","        } else if (DataType === Boolean) {","          DataType = BooleanType;","        } else if (typeof DataType === 'string') {","          DataType = modelBuilder.resolveType(DataType);","        }","","        var persistUndefinedAsNull = ModelClass.definition.settings.persistUndefinedAsNull;","        if (value === undefined && persistUndefinedAsNull) {","          value = null;","        }","","        if (ModelClass.setter[propertyName]) {","          ModelClass.setter[propertyName].call(this, value); // Try setter first","        } else {","          this.__data = this.__data || {};","          if (value === null || value === undefined) {","            this.__data[propertyName] = value;","          } else {","            if (DataType === List) {","              this.__data[propertyName] = DataType(value, properties[propertyName].type, this.__data);","            } else {","              // Assume the type constructor handles Constructor() call","              // If not, we should call new DataType(value).valueOf();","              this.__data[propertyName] = (value instanceof DataType) ? value : DataType(value);","            }","          }","        }","      },","      configurable: true,","      enumerable: true,","    });","","    // FIXME: [rfeng] Do we need to keep the raw data?","    // Use $ as the prefix to avoid conflicts with properties such as _id","    Object.defineProperty(ModelClass.prototype, '$' + propertyName, {","      get: function() {","        return this.__data && this.__data[propertyName];","      },","      set: function(value) {","        if (!this.__data) {","          this.__data = {};","        }","        this.__data[propertyName] = value;","      },","      configurable: true,","      enumerable: false,","    });","  };","","  var props = ModelClass.definition.properties;","  var keys = Object.keys(props);","  var size = keys.length;","  for (i = 0; i < size; i++) {","    var propertyName = keys[i];","    ModelClass.registerProperty(propertyName);","  }","","  var mixinSettings = settings.mixins || {};","  keys = Object.keys(mixinSettings);","  size = keys.length;","  for (i = 0; i < size; i++) {","    var name = keys[i];","    var mixin = mixinSettings[name];","    if (mixin === true) {","      mixin = {};","    }","    if (Array.isArray(mixin)) {","      mixin.forEach(function(m) {","        if (m === true) m = {};","        if (typeof m === 'object') {","          modelBuilder.mixins.applyMixin(ModelClass, name, m);","        }","      });","    } else if (typeof mixin === 'object') {","      modelBuilder.mixins.applyMixin(ModelClass, name, mixin);","    }","  }","","  ModelClass.emit('defined', ModelClass);","","  return ModelClass;","};","","// DataType for Date","function DateType(arg) {","  var d = new Date(arg);","  if (isNaN(d.getTime())) {","    throw new Error(g.f('Invalid date: %s', arg));","  }","  return d;","}","","// Relax the Boolean coercision","function BooleanType(arg) {","  if (typeof arg === 'string') {","    switch (arg) {","      case 'true':","      case '1':","        return true;","      case 'false':","      case '0':","        return false;","    }","  }","  if (arg == null) {","    return null;","  }","  return Boolean(arg);","}","","/**"," * Define single property named `propertyName` on `model`"," *"," * @param {String} model Name of model"," * @param {String} propertyName Name of property"," * @param {Object} propertyDefinition Property settings"," */","ModelBuilder.prototype.defineProperty = function(model, propertyName, propertyDefinition) {","  this.definitions[model].defineProperty(propertyName, propertyDefinition);","  this.models[model].registerProperty(propertyName);","};","","/**"," * Define a new value type that can be used in model schemas as a property type."," * @param {function()} type Type constructor."," * @param {string[]=} aliases Optional list of alternative names for this type."," */","ModelBuilder.prototype.defineValueType = function(type, aliases) {","  ModelBuilder.registerType(type, aliases);","};","","/**"," * Extend existing model with specified properties"," *"," * Example:"," * Instead of extending a model with attributes like this (for example):"," *"," * ```js"," *     db.defineProperty('Content', 'competitionType',"," *       { type: String });"," *     db.defineProperty('Content', 'expiryDate',"," *       { type: Date, index: true });"," *     db.defineProperty('Content', 'isExpired',"," *       { type: Boolean, index: true });"," *```"," * This method enables you to extend a model as follows (for example):"," * ```js"," *     db.extendModel('Content', {"," *       competitionType: String,"," *       expiryDate: { type: Date, index: true },"," *       isExpired: { type: Boolean, index: true }"," *     });"," *```"," *"," * @param {String} model Name of model"," * @options {Object} properties JSON object specifying properties.  Each property is a key whos value is"," * either the [type](http://docs.strongloop.com/display/LB/LoopBack+types) or `propertyName: {options}`"," * where the options are described below."," * @property {String} type Datatype of property: Must be an [LDL type](http://docs.strongloop.com/display/LB/LoopBack+types)."," * @property {Boolean} index True if the property is an index; false otherwise."," */","ModelBuilder.prototype.extendModel = function(model, props) {","  var t = this;","  var keys = Object.keys(props);","  for (var i = 0; i < keys.length; i++) {","    var definition = props[keys[i]];","    t.defineProperty(model, keys[i], definition);","  }","};","","ModelBuilder.prototype.copyModel = function copyModel(Master) {","  var modelBuilder = this;","  var className = Master.modelName;","  var md = Master.modelBuilder.definitions[className];","  var Slave = function SlaveModel() {","    Master.apply(this, [].slice.call(arguments));","  };","","  util.inherits(Slave, Master);","","  Slave.__proto__ = Master;","","  hiddenProperty(Slave, 'modelBuilder', modelBuilder);","  hiddenProperty(Slave, 'modelName', className);","  hiddenProperty(Slave, 'relations', Master.relations);","","  if (!(className in modelBuilder.models)) {","    // store class in model pool","    modelBuilder.models[className] = Slave;","    modelBuilder.definitions[className] = {","      properties: md.properties,","      settings: md.settings,","    };","  }","","  return Slave;","};","","/*!"," * Define hidden property"," */","function hiddenProperty(where, property, value) {","  Object.defineProperty(where, property, {","    writable: true,","    enumerable: false,","    configurable: true,","    value: value,","  });","}","","/**"," * Get the schema name"," */","ModelBuilder.prototype.getSchemaName = function(name) {","  if (name) {","    return name;","  }","  if (typeof this._nameCount !== 'number') {","    this._nameCount = 0;","  } else {","    this._nameCount++;","  }","  return 'AnonymousModel_' + this._nameCount;","};","","/**"," * Resolve the type string to be a function, for example, 'String' to String."," * Returns {Function} if the type is resolved"," * @param {String} type The type string, such as 'number', 'Number', 'boolean', or 'String'. It's case insensitive"," */","ModelBuilder.prototype.resolveType = function(type) {","  if (!type) {","    return type;","  }","  if (Array.isArray(type) && type.length > 0) {","    // For array types, the first item should be the type string","    var itemType = this.resolveType(type[0]);","    if (typeof itemType === 'function') {","      return [itemType];","    } else {","      return itemType; // Not resolved, return the type string","    }","  }","  if (typeof type === 'string') {","    var schemaType = ModelBuilder.schemaTypes[type.toLowerCase()] || this.models[type];","    if (schemaType) {","      return schemaType;","    } else {","      // The type cannot be resolved, let's create a place holder","      type = this.define(type, {}, {unresolved: true});","      return type;","    }","  } else if (type.constructor.name === 'Object') {","    // We also support the syntax {type: 'string', ...}","    if (type.type) {","      return this.resolveType(type.type);","    } else {","      return this.define(this.getSchemaName(null),","        type, {","          anonymous: true,","          idInjection: false,","          strict: this.settings.strictEmbeddedModels || false,","        });","    }","  } else if ('function' === typeof type) {","    return type;","  }","  return type;","};","","/**"," * Build models from schema definitions"," *"," * `schemas` can be one of the following:"," *"," * 1. An array of named schema definition JSON objects"," * 2. A schema definition JSON object"," * 3. A list of property definitions (anonymous)"," *"," * @param {*} schemas The schemas"," * @returns {Object} A map of model constructors keyed by model name"," */","ModelBuilder.prototype.buildModels = function(schemas, createModel) {","  var models = {};","","  // Normalize the schemas to be an array of the schema objects {name: <name>, properties: {}, options: {}}","  if (!Array.isArray(schemas)) {","    if (schemas.properties && schemas.name) {","      // Only one item","      schemas = [schemas];","    } else {","      // Anonymous schema","      schemas = [","        {","          name: this.getSchemaName(),","          properties: schemas,","          options: {anonymous: true},","        },","      ];","    }","  }","","  var relations = [];","  for (var s = 0, n = schemas.length; s < n; s++) {","    var name = this.getSchemaName(schemas[s].name);","    schemas[s].name = name;","    var model;","    if (typeof createModel === 'function') {","      model = createModel(schemas[s].name, schemas[s].properties, schemas[s].options);","    } else {","      model = this.define(schemas[s].name, schemas[s].properties, schemas[s].options);","    }","    models[name] = model;","    relations = relations.concat(model.definition.relations);","  }","","  // Connect the models based on the relations","  for (var i = 0; i < relations.length; i++) {","    var relation = relations[i];","    var sourceModel = models[relation.source];","    var targetModel = models[relation.target];","    if (sourceModel && targetModel) {","      if (typeof sourceModel[relation.type] === 'function') {","        sourceModel[relation.type](targetModel, {as: relation.as});","      }","    }","  }","  return models;","};","","/**"," * Introspect the JSON document to build a corresponding model."," * @param {String} name The model name"," * @param {Object} json The JSON object"," * @param {Object} options The options"," * @returns {}"," */","ModelBuilder.prototype.buildModelFromInstance = function(name, json, options) {","  // Introspect the JSON document to generate a schema","  var schema = introspect(json);","","  // Create a model for the generated schema","  return this.define(name, schema, options);","};",""],"l":{"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"24":1,"26":1,"31":1,"36":1,"45":1,"47":2,"48":2,"49":2,"50":2,"51":2,"55":1,"58":1,"60":1,"61":12,"62":0,"64":12,"74":1,"75":0,"76":0,"77":0,"79":0,"87":1,"88":0,"120":1,"121":19,"122":19,"123":19,"126":19,"127":19,"129":19,"130":0,"132":19,"133":1,"134":1,"136":19,"137":1,"138":1,"141":19,"142":19,"145":19,"146":1,"150":19,"151":19,"152":19,"154":12,"155":12,"157":12,"158":10,"160":2,"161":2,"167":19,"168":0,"172":19,"176":19,"178":19,"179":3,"180":0,"182":3,"183":0,"185":3,"188":19,"191":19,"192":19,"193":304,"194":247,"197":19,"200":19,"203":19,"206":19,"207":0,"208":0,"212":19,"213":19,"214":19,"215":19,"216":19,"218":19,"220":19,"221":19,"222":19,"223":19,"226":19,"228":1799,"229":1545,"234":19,"235":0,"236":0,"237":0,"241":19,"242":19,"244":19,"246":86,"248":0,"252":86,"253":0,"258":86,"259":0,"263":19,"265":19,"268":19,"270":19,"272":19,"273":19,"275":13,"278":19,"279":19,"281":12,"285":19,"287":1,"290":19,"292":19,"293":13,"294":13,"295":0,"297":0,"298":0,"306":6,"308":0,"309":0,"310":0,"311":0,"312":0,"314":0,"322":19,"323":0,"324":0,"325":0,"326":0,"331":19,"332":0,"355":19,"356":12,"357":12,"359":12,"360":12,"363":12,"364":12,"365":27,"366":5,"367":5,"372":12,"373":12,"374":12,"376":12,"378":5,"380":7,"381":7,"382":7,"383":7,"385":7,"387":7,"392":12,"393":12,"398":12,"399":10,"403":12,"406":12,"407":12,"410":12,"417":19,"418":87,"419":87,"420":87,"421":87,"422":0,"425":87,"426":8,"427":8,"430":87,"432":604,"433":8,"435":596,"439":1,"440":1,"441":0,"442":1,"443":0,"444":1,"445":0,"446":1,"447":0,"450":1,"451":1,"452":0,"455":1,"456":0,"458":1,"459":1,"460":0,"462":1,"463":0,"467":1,"478":87,"480":0,"483":0,"484":0,"486":0,"493":19,"494":19,"495":19,"496":19,"497":87,"498":87,"501":19,"502":19,"503":19,"504":19,"505":0,"506":0,"507":0,"508":0,"510":0,"511":0,"512":0,"513":0,"514":0,"517":0,"518":0,"522":19,"524":19,"528":1,"529":0,"530":0,"531":0,"533":0,"537":1,"538":0,"539":0,"542":0,"545":0,"548":0,"549":0,"551":0,"561":1,"562":0,"563":0,"571":1,"572":0,"605":1,"606":0,"607":0,"608":0,"609":0,"610":0,"614":1,"615":0,"616":0,"617":0,"618":0,"619":0,"622":0,"624":0,"626":0,"627":0,"628":0,"630":0,"632":0,"633":0,"639":0,"645":1,"646":171,"657":1,"658":6,"659":0,"661":6,"662":1,"664":5,"666":6,"674":1,"675":151,"676":0,"678":151,"680":4,"681":4,"682":4,"684":0,"687":147,"688":73,"689":73,"690":73,"693":0,"694":0,"696":74,"698":66,"699":60,"701":6,"708":8,"709":8,"711":0,"726":1,"727":0,"730":0,"731":0,"733":0,"736":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"754":0,"756":0,"757":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"771":0,"781":1,"783":0,"786":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/model.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/model.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":1,"27":0,"28":1,"29":1,"30":1,"31":0,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":0,"39":0,"40":1,"41":1,"42":0,"43":0,"44":0,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":0,"52":1,"53":0,"54":1,"55":0,"56":1,"57":1,"58":0,"59":0,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":0,"67":1,"68":0,"69":1,"70":1,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":1,"98":0,"99":0,"100":1,"101":1,"102":3,"103":3,"104":3,"105":3,"106":2,"107":2,"108":1,"109":0,"110":0,"111":0,"112":1,"113":0,"114":1,"115":3,"116":1,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":1,"124":1,"125":0,"126":0,"127":0,"128":1,"129":1,"130":3,"131":0,"132":3,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":1,"144":1,"145":0,"146":0,"147":0,"148":1,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":1,"158":0,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":1,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":1,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":1,"259":0,"260":1,"261":0,"262":0,"263":1,"264":0,"265":0,"266":0,"267":0,"268":1,"269":3,"270":1,"271":1,"272":0,"273":0,"274":0,"275":1,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":1,"286":0,"287":1,"288":0,"289":1,"290":0,"291":1,"292":1,"293":1},"b":{"1":[1,1],"2":[1,0],"3":[1,0],"4":[0,1],"5":[1,1,1],"6":[0,1],"7":[1,0],"8":[0,1],"9":[1,0],"10":[1,0],"11":[0,0],"12":[0,1],"13":[0,0],"14":[0,1],"15":[0,1],"16":[0,1],"17":[0,1],"18":[0,1],"19":[0,1],"20":[1,0],"21":[1,0],"22":[1,0],"23":[1,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,1],"39":[2,1],"40":[3,3],"41":[1,1],"42":[0,1],"43":[0,0],"44":[0,1],"45":[1,0],"46":[1,2],"47":[3,3],"48":[0,0,0,0,1,0,0],"49":[1,0],"50":[0,3],"51":[3,0],"52":[0,3],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[1,0],"115":[1,1],"116":[1,0,0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":3,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"ModelBaseClass","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":39}}},"2":{"name":"(anonymous_2)","line":71,"loc":{"start":{"line":71,"column":43},"end":{"line":71,"column":67}}},"3":{"name":"(anonymous_3)","line":179,"loc":{"start":{"line":179,"column":23},"end":{"line":179,"column":35}}},"4":{"name":"(anonymous_4)","line":264,"loc":{"start":{"line":264,"column":23},"end":{"line":264,"column":35}}},"5":{"name":"(anonymous_5)","line":366,"loc":{"start":{"line":366,"column":32},"end":{"line":366,"column":55}}},"6":{"name":"(anonymous_6)","line":374,"loc":{"start":{"line":374,"column":33},"end":{"line":374,"column":52}}},"7":{"name":"(anonymous_7)","line":387,"loc":{"start":{"line":387,"column":43},"end":{"line":387,"column":62}}},"8":{"name":"(anonymous_8)","line":395,"loc":{"start":{"line":395,"column":26},"end":{"line":395,"column":37}}},"9":{"name":"(anonymous_9)","line":405,"loc":{"start":{"line":405,"column":36},"end":{"line":405,"column":88}}},"10":{"name":"(anonymous_10)","line":530,"loc":{"start":{"line":530,"column":37},"end":{"line":530,"column":60}}},"11":{"name":"(anonymous_11)","line":549,"loc":{"start":{"line":549,"column":34},"end":{"line":549,"column":57}}},"12":{"name":"(anonymous_12)","line":568,"loc":{"start":{"line":568,"column":34},"end":{"line":568,"column":45}}},"13":{"name":"(anonymous_13)","line":572,"loc":{"start":{"line":572,"column":38},"end":{"line":572,"column":52}}},"14":{"name":"(anonymous_14)","line":583,"loc":{"start":{"line":583,"column":33},"end":{"line":583,"column":44}}},"15":{"name":"(anonymous_15)","line":596,"loc":{"start":{"line":596,"column":41},"end":{"line":596,"column":53}}},"16":{"name":"(anonymous_16)","line":604,"loc":{"start":{"line":604,"column":35},"end":{"line":604,"column":51}}},"17":{"name":"(anonymous_17)","line":617,"loc":{"start":{"line":617,"column":23},"end":{"line":617,"column":55}}},"18":{"name":"(anonymous_18)","line":634,"loc":{"start":{"line":634,"column":41},"end":{"line":634,"column":52}}},"19":{"name":"(anonymous_19)","line":638,"loc":{"start":{"line":638,"column":31},"end":{"line":638,"column":42}}},"20":{"name":"(anonymous_20)","line":642,"loc":{"start":{"line":642,"column":37},"end":{"line":642,"column":54}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":32}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":38}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":31}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":29}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":34}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":43}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":27}},"9":{"start":{"line":26,"column":0},"end":{"line":26,"column":31}},"10":{"start":{"line":27,"column":0},"end":{"line":27,"column":40}},"11":{"start":{"line":28,"column":0},"end":{"line":28,"column":27}},"12":{"start":{"line":29,"column":0},"end":{"line":29,"column":33}},"13":{"start":{"line":32,"column":0},"end":{"line":39,"column":2}},"14":{"start":{"line":49,"column":0},"end":{"line":59,"column":1}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":26}},"16":{"start":{"line":51,"column":2},"end":{"line":54,"column":3}},"17":{"start":{"line":53,"column":4},"end":{"line":53,"column":32}},"18":{"start":{"line":55,"column":2},"end":{"line":57,"column":3}},"19":{"start":{"line":56,"column":4},"end":{"line":56,"column":38}},"20":{"start":{"line":58,"column":2},"end":{"line":58,"column":38}},"21":{"start":{"line":71,"column":0},"end":{"line":359,"column":2}},"22":{"start":{"line":72,"column":2},"end":{"line":72,"column":18}},"23":{"start":{"line":73,"column":2},"end":{"line":73,"column":30}},"24":{"start":{"line":75,"column":2},"end":{"line":78,"column":3}},"25":{"start":{"line":77,"column":4},"end":{"line":77,"column":102}},"26":{"start":{"line":80,"column":2},"end":{"line":83,"column":3}},"27":{"start":{"line":82,"column":4},"end":{"line":82,"column":32}},"28":{"start":{"line":84,"column":2},"end":{"line":84,"column":59}},"29":{"start":{"line":85,"column":2},"end":{"line":85,"column":20}},"30":{"start":{"line":87,"column":2},"end":{"line":89,"column":3}},"31":{"start":{"line":88,"column":4},"end":{"line":88,"column":31}},"32":{"start":{"line":91,"column":2},"end":{"line":91,"column":26}},"33":{"start":{"line":92,"column":2},"end":{"line":92,"column":42}},"34":{"start":{"line":93,"column":2},"end":{"line":93,"column":54}},"35":{"start":{"line":94,"column":2},"end":{"line":94,"column":30}},"36":{"start":{"line":96,"column":2},"end":{"line":102,"column":3}},"37":{"start":{"line":97,"column":4},"end":{"line":97,"column":45}},"38":{"start":{"line":98,"column":9},"end":{"line":102,"column":3}},"39":{"start":{"line":99,"column":4},"end":{"line":101,"column":72}},"40":{"start":{"line":104,"column":2},"end":{"line":104,"column":79}},"41":{"start":{"line":106,"column":2},"end":{"line":166,"column":3}},"42":{"start":{"line":110,"column":4},"end":{"line":147,"column":7}},"43":{"start":{"line":149,"column":4},"end":{"line":156,"column":5}},"44":{"start":{"line":150,"column":6},"end":{"line":155,"column":9}},"45":{"start":{"line":158,"column":4},"end":{"line":158,"column":32}},"46":{"start":{"line":159,"column":4},"end":{"line":159,"column":21}},"47":{"start":{"line":160,"column":4},"end":{"line":160,"column":43}},"48":{"start":{"line":161,"column":4},"end":{"line":161,"column":27}},"49":{"start":{"line":162,"column":4},"end":{"line":162,"column":29}},"50":{"start":{"line":163,"column":4},"end":{"line":165,"column":5}},"51":{"start":{"line":164,"column":6},"end":{"line":164,"column":36}},"52":{"start":{"line":168,"column":2},"end":{"line":170,"column":3}},"53":{"start":{"line":169,"column":4},"end":{"line":169,"column":50}},"54":{"start":{"line":172,"column":2},"end":{"line":174,"column":3}},"55":{"start":{"line":173,"column":4},"end":{"line":173,"column":52}},"56":{"start":{"line":176,"column":2},"end":{"line":176,"column":31}},"57":{"start":{"line":178,"column":2},"end":{"line":182,"column":3}},"58":{"start":{"line":179,"column":4},"end":{"line":181,"column":7}},"59":{"start":{"line":180,"column":6},"end":{"line":180,"column":47}},"60":{"start":{"line":184,"column":2},"end":{"line":184,"column":25}},"61":{"start":{"line":185,"column":2},"end":{"line":185,"column":17}},"62":{"start":{"line":186,"column":2},"end":{"line":259,"column":3}},"63":{"start":{"line":187,"column":4},"end":{"line":187,"column":16}},"64":{"start":{"line":188,"column":4},"end":{"line":188,"column":22}},"65":{"start":{"line":189,"column":4},"end":{"line":191,"column":5}},"66":{"start":{"line":190,"column":6},"end":{"line":190,"column":15}},"67":{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},"68":{"start":{"line":194,"column":6},"end":{"line":194,"column":21}},"69":{"start":{"line":197,"column":4},"end":{"line":258,"column":5}},"70":{"start":{"line":199,"column":6},"end":{"line":203,"column":7}},"71":{"start":{"line":200,"column":8},"end":{"line":200,"column":26}},"72":{"start":{"line":202,"column":8},"end":{"line":202,"column":33}},"73":{"start":{"line":204,"column":11},"end":{"line":258,"column":5}},"74":{"start":{"line":205,"column":6},"end":{"line":205,"column":48}},"75":{"start":{"line":207,"column":6},"end":{"line":207,"column":18}},"76":{"start":{"line":208,"column":6},"end":{"line":217,"column":7}},"77":{"start":{"line":209,"column":8},"end":{"line":209,"column":62}},"78":{"start":{"line":210,"column":8},"end":{"line":210,"column":50}},"79":{"start":{"line":211,"column":8},"end":{"line":211,"column":62}},"80":{"start":{"line":212,"column":8},"end":{"line":212,"column":54}},"81":{"start":{"line":213,"column":8},"end":{"line":213,"column":57}},"82":{"start":{"line":220,"column":6},"end":{"line":236,"column":7}},"83":{"start":{"line":222,"column":8},"end":{"line":222,"column":82}},"84":{"start":{"line":224,"column":8},"end":{"line":235,"column":9}},"85":{"start":{"line":225,"column":10},"end":{"line":226,"column":68}},"86":{"start":{"line":227,"column":10},"end":{"line":229,"column":11}},"87":{"start":{"line":228,"column":12},"end":{"line":228,"column":49}},"88":{"start":{"line":230,"column":10},"end":{"line":234,"column":13}},"89":{"start":{"line":238,"column":6},"end":{"line":238,"column":42}},"90":{"start":{"line":241,"column":6},"end":{"line":257,"column":7}},"91":{"start":{"line":242,"column":8},"end":{"line":243,"column":72}},"92":{"start":{"line":246,"column":8},"end":{"line":252,"column":9}},"93":{"start":{"line":247,"column":10},"end":{"line":251,"column":13}},"94":{"start":{"line":254,"column":8},"end":{"line":256,"column":9}},"95":{"start":{"line":255,"column":10},"end":{"line":255,"column":43}},"96":{"start":{"line":261,"column":2},"end":{"line":261,"column":33}},"97":{"start":{"line":263,"column":2},"end":{"line":267,"column":3}},"98":{"start":{"line":264,"column":4},"end":{"line":266,"column":7}},"99":{"start":{"line":265,"column":6},"end":{"line":265,"column":47}},"100":{"start":{"line":269,"column":2},"end":{"line":269,"column":21}},"101":{"start":{"line":271,"column":2},"end":{"line":357,"column":3}},"102":{"start":{"line":272,"column":4},"end":{"line":272,"column":16}},"103":{"start":{"line":273,"column":4},"end":{"line":273,"column":29}},"104":{"start":{"line":274,"column":4},"end":{"line":274,"column":34}},"105":{"start":{"line":277,"column":4},"end":{"line":296,"column":5}},"106":{"start":{"line":278,"column":6},"end":{"line":278,"column":41}},"107":{"start":{"line":279,"column":6},"end":{"line":295,"column":7}},"108":{"start":{"line":280,"column":8},"end":{"line":291,"column":9}},"109":{"start":{"line":281,"column":10},"end":{"line":288,"column":11}},"110":{"start":{"line":285,"column":12},"end":{"line":285,"column":29}},"111":{"start":{"line":287,"column":12},"end":{"line":287,"column":24}},"112":{"start":{"line":289,"column":15},"end":{"line":291,"column":9}},"113":{"start":{"line":290,"column":10},"end":{"line":290,"column":27}},"114":{"start":{"line":294,"column":8},"end":{"line":294,"column":39}},"115":{"start":{"line":299,"column":4},"end":{"line":327,"column":5}},"116":{"start":{"line":300,"column":6},"end":{"line":300,"column":41}},"117":{"start":{"line":301,"column":6},"end":{"line":322,"column":7}},"118":{"start":{"line":303,"column":10},"end":{"line":303,"column":16}},"119":{"start":{"line":307,"column":10},"end":{"line":307,"column":30}},"120":{"start":{"line":308,"column":10},"end":{"line":308,"column":16}},"121":{"start":{"line":311,"column":10},"end":{"line":311,"column":30}},"122":{"start":{"line":312,"column":10},"end":{"line":312,"column":16}},"123":{"start":{"line":314,"column":10},"end":{"line":314,"column":31}},"124":{"start":{"line":315,"column":10},"end":{"line":315,"column":16}},"125":{"start":{"line":317,"column":10},"end":{"line":317,"column":39}},"126":{"start":{"line":318,"column":10},"end":{"line":318,"column":16}},"127":{"start":{"line":321,"column":10},"end":{"line":321,"column":60}},"128":{"start":{"line":325,"column":6},"end":{"line":326,"column":33}},"129":{"start":{"line":326,"column":8},"end":{"line":326,"column":33}},"130":{"start":{"line":329,"column":4},"end":{"line":331,"column":5}},"131":{"start":{"line":330,"column":6},"end":{"line":330,"column":38}},"132":{"start":{"line":334,"column":4},"end":{"line":356,"column":5}},"133":{"start":{"line":335,"column":6},"end":{"line":341,"column":7}},"134":{"start":{"line":336,"column":8},"end":{"line":340,"column":9}},"135":{"start":{"line":337,"column":10},"end":{"line":337,"column":59}},"136":{"start":{"line":339,"column":10},"end":{"line":339,"column":50}},"137":{"start":{"line":343,"column":6},"end":{"line":355,"column":7}},"138":{"start":{"line":344,"column":8},"end":{"line":348,"column":9}},"139":{"start":{"line":347,"column":10},"end":{"line":347,"column":52}},"140":{"start":{"line":349,"column":13},"end":{"line":355,"column":7}},"141":{"start":{"line":350,"column":8},"end":{"line":354,"column":9}},"142":{"start":{"line":353,"column":10},"end":{"line":353,"column":60}},"143":{"start":{"line":358,"column":2},"end":{"line":358,"column":29}},"144":{"start":{"line":366,"column":0},"end":{"line":372,"column":2}},"145":{"start":{"line":367,"column":2},"end":{"line":371,"column":3}},"146":{"start":{"line":368,"column":4},"end":{"line":368,"column":65}},"147":{"start":{"line":370,"column":4},"end":{"line":370,"column":67}},"148":{"start":{"line":374,"column":0},"end":{"line":385,"column":2}},"149":{"start":{"line":375,"column":2},"end":{"line":375,"column":50}},"150":{"start":{"line":376,"column":2},"end":{"line":379,"column":3}},"151":{"start":{"line":378,"column":4},"end":{"line":378,"column":16}},"152":{"start":{"line":380,"column":2},"end":{"line":383,"column":3}},"153":{"start":{"line":381,"column":4},"end":{"line":381,"column":90}},"154":{"start":{"line":384,"column":2},"end":{"line":384,"column":24}},"155":{"start":{"line":387,"column":0},"end":{"line":389,"column":2}},"156":{"start":{"line":388,"column":2},"end":{"line":388,"column":52}},"157":{"start":{"line":395,"column":0},"end":{"line":397,"column":2}},"158":{"start":{"line":396,"column":2},"end":{"line":396,"column":42}},"159":{"start":{"line":405,"column":0},"end":{"line":528,"column":2}},"160":{"start":{"line":406,"column":2},"end":{"line":408,"column":3}},"161":{"start":{"line":407,"column":4},"end":{"line":407,"column":22}},"162":{"start":{"line":409,"column":2},"end":{"line":409,"column":16}},"163":{"start":{"line":410,"column":2},"end":{"line":410,"column":18}},"164":{"start":{"line":411,"column":2},"end":{"line":411,"column":31}},"165":{"start":{"line":414,"column":2},"end":{"line":416,"column":3}},"166":{"start":{"line":415,"column":4},"end":{"line":415,"column":16}},"167":{"start":{"line":418,"column":2},"end":{"line":418,"column":29}},"168":{"start":{"line":419,"column":2},"end":{"line":419,"column":53}},"169":{"start":{"line":420,"column":2},"end":{"line":420,"column":80}},"170":{"start":{"line":422,"column":2},"end":{"line":422,"column":42}},"171":{"start":{"line":423,"column":2},"end":{"line":423,"column":32}},"172":{"start":{"line":424,"column":2},"end":{"line":424,"column":24}},"173":{"start":{"line":426,"column":2},"end":{"line":455,"column":3}},"174":{"start":{"line":427,"column":4},"end":{"line":427,"column":27}},"175":{"start":{"line":428,"column":4},"end":{"line":428,"column":29}},"176":{"start":{"line":431,"column":4},"end":{"line":433,"column":5}},"177":{"start":{"line":432,"column":6},"end":{"line":432,"column":15}},"178":{"start":{"line":435,"column":4},"end":{"line":437,"column":5}},"179":{"start":{"line":436,"column":6},"end":{"line":436,"column":15}},"180":{"start":{"line":439,"column":4},"end":{"line":441,"column":5}},"181":{"start":{"line":440,"column":6},"end":{"line":440,"column":15}},"182":{"start":{"line":443,"column":4},"end":{"line":454,"column":5}},"183":{"start":{"line":444,"column":6},"end":{"line":444,"column":73}},"184":{"start":{"line":446,"column":6},"end":{"line":453,"column":7}},"185":{"start":{"line":447,"column":8},"end":{"line":447,"column":75}},"186":{"start":{"line":449,"column":8},"end":{"line":451,"column":9}},"187":{"start":{"line":450,"column":10},"end":{"line":450,"column":21}},"188":{"start":{"line":452,"column":8},"end":{"line":452,"column":33}},"189":{"start":{"line":457,"column":2},"end":{"line":525,"column":3}},"190":{"start":{"line":461,"column":4},"end":{"line":461,"column":29}},"191":{"start":{"line":462,"column":4},"end":{"line":462,"column":27}},"192":{"start":{"line":463,"column":4},"end":{"line":493,"column":5}},"193":{"start":{"line":464,"column":6},"end":{"line":464,"column":29}},"194":{"start":{"line":465,"column":6},"end":{"line":467,"column":7}},"195":{"start":{"line":466,"column":8},"end":{"line":466,"column":17}},"196":{"start":{"line":468,"column":6},"end":{"line":470,"column":7}},"197":{"start":{"line":469,"column":8},"end":{"line":469,"column":17}},"198":{"start":{"line":471,"column":6},"end":{"line":473,"column":7}},"199":{"start":{"line":472,"column":8},"end":{"line":472,"column":17}},"200":{"start":{"line":474,"column":6},"end":{"line":476,"column":7}},"201":{"start":{"line":475,"column":8},"end":{"line":475,"column":17}},"202":{"start":{"line":477,"column":6},"end":{"line":479,"column":7}},"203":{"start":{"line":478,"column":8},"end":{"line":478,"column":17}},"204":{"start":{"line":480,"column":6},"end":{"line":480,"column":31}},"205":{"start":{"line":481,"column":6},"end":{"line":492,"column":7}},"206":{"start":{"line":482,"column":8},"end":{"line":484,"column":9}},"207":{"start":{"line":483,"column":10},"end":{"line":483,"column":19}},"208":{"start":{"line":485,"column":8},"end":{"line":489,"column":9}},"209":{"start":{"line":486,"column":10},"end":{"line":486,"column":77}},"210":{"start":{"line":488,"column":10},"end":{"line":488,"column":35}},"211":{"start":{"line":490,"column":13},"end":{"line":492,"column":7}},"212":{"start":{"line":491,"column":8},"end":{"line":491,"column":34}},"213":{"start":{"line":495,"column":4},"end":{"line":495,"column":36}},"214":{"start":{"line":496,"column":4},"end":{"line":496,"column":23}},"215":{"start":{"line":497,"column":4},"end":{"line":524,"column":5}},"216":{"start":{"line":498,"column":6},"end":{"line":498,"column":29}},"217":{"start":{"line":499,"column":6},"end":{"line":501,"column":7}},"218":{"start":{"line":500,"column":8},"end":{"line":500,"column":17}},"219":{"start":{"line":502,"column":6},"end":{"line":523,"column":7}},"220":{"start":{"line":503,"column":8},"end":{"line":505,"column":9}},"221":{"start":{"line":504,"column":10},"end":{"line":504,"column":19}},"222":{"start":{"line":506,"column":8},"end":{"line":508,"column":9}},"223":{"start":{"line":507,"column":10},"end":{"line":507,"column":19}},"224":{"start":{"line":509,"column":8},"end":{"line":509,"column":40}},"225":{"start":{"line":511,"column":8},"end":{"line":511,"column":108}},"226":{"start":{"line":512,"column":8},"end":{"line":514,"column":9}},"227":{"start":{"line":513,"column":10},"end":{"line":513,"column":19}},"228":{"start":{"line":516,"column":8},"end":{"line":522,"column":9}},"229":{"start":{"line":517,"column":10},"end":{"line":517,"column":77}},"230":{"start":{"line":518,"column":15},"end":{"line":522,"column":9}},"231":{"start":{"line":519,"column":10},"end":{"line":519,"column":36}},"232":{"start":{"line":521,"column":10},"end":{"line":521,"column":35}},"233":{"start":{"line":527,"column":2},"end":{"line":527,"column":14}},"234":{"start":{"line":530,"column":0},"end":{"line":547,"column":2}},"235":{"start":{"line":531,"column":2},"end":{"line":531,"column":19}},"236":{"start":{"line":532,"column":2},"end":{"line":532,"column":63}},"237":{"start":{"line":533,"column":2},"end":{"line":533,"column":93}},"238":{"start":{"line":534,"column":2},"end":{"line":541,"column":3}},"239":{"start":{"line":536,"column":4},"end":{"line":536,"column":38}},"240":{"start":{"line":537,"column":4},"end":{"line":539,"column":5}},"241":{"start":{"line":538,"column":6},"end":{"line":538,"column":66}},"242":{"start":{"line":540,"column":4},"end":{"line":540,"column":55}},"243":{"start":{"line":542,"column":2},"end":{"line":546,"column":3}},"244":{"start":{"line":543,"column":4},"end":{"line":543,"column":45}},"245":{"start":{"line":545,"column":4},"end":{"line":545,"column":17}},"246":{"start":{"line":549,"column":0},"end":{"line":566,"column":2}},"247":{"start":{"line":550,"column":2},"end":{"line":550,"column":19}},"248":{"start":{"line":551,"column":2},"end":{"line":551,"column":63}},"249":{"start":{"line":552,"column":2},"end":{"line":552,"column":84}},"250":{"start":{"line":553,"column":2},"end":{"line":560,"column":3}},"251":{"start":{"line":555,"column":4},"end":{"line":555,"column":35}},"252":{"start":{"line":556,"column":4},"end":{"line":558,"column":5}},"253":{"start":{"line":557,"column":6},"end":{"line":557,"column":60}},"254":{"start":{"line":559,"column":4},"end":{"line":559,"column":49}},"255":{"start":{"line":561,"column":2},"end":{"line":565,"column":3}},"256":{"start":{"line":562,"column":4},"end":{"line":562,"column":42}},"257":{"start":{"line":564,"column":4},"end":{"line":564,"column":17}},"258":{"start":{"line":568,"column":0},"end":{"line":570,"column":2}},"259":{"start":{"line":569,"column":2},"end":{"line":569,"column":43}},"260":{"start":{"line":572,"column":0},"end":{"line":576,"column":2}},"261":{"start":{"line":573,"column":2},"end":{"line":575,"column":3}},"262":{"start":{"line":574,"column":4},"end":{"line":574,"column":25}},"263":{"start":{"line":583,"column":0},"end":{"line":590,"column":2}},"264":{"start":{"line":584,"column":2},"end":{"line":584,"column":17}},"265":{"start":{"line":585,"column":2},"end":{"line":589,"column":3}},"266":{"start":{"line":586,"column":4},"end":{"line":588,"column":5}},"267":{"start":{"line":587,"column":6},"end":{"line":587,"column":20}},"268":{"start":{"line":595,"column":0},"end":{"line":597,"column":12}},"269":{"start":{"line":596,"column":55},"end":{"line":596,"column":65}},"270":{"start":{"line":599,"column":0},"end":{"line":602,"column":51}},"271":{"start":{"line":604,"column":0},"end":{"line":615,"column":2}},"272":{"start":{"line":605,"column":2},"end":{"line":606,"column":23}},"273":{"start":{"line":606,"column":4},"end":{"line":606,"column":23}},"274":{"start":{"line":610,"column":2},"end":{"line":614,"column":5}},"275":{"start":{"line":617,"column":0},"end":{"line":632,"column":2}},"276":{"start":{"line":618,"column":2},"end":{"line":631,"column":3}},"277":{"start":{"line":619,"column":4},"end":{"line":619,"column":69}},"278":{"start":{"line":621,"column":4},"end":{"line":629,"column":5}},"279":{"start":{"line":622,"column":6},"end":{"line":622,"column":53}},"280":{"start":{"line":623,"column":6},"end":{"line":628,"column":7}},"281":{"start":{"line":624,"column":8},"end":{"line":626,"column":9}},"282":{"start":{"line":625,"column":10},"end":{"line":625,"column":19}},"283":{"start":{"line":627,"column":8},"end":{"line":627,"column":41}},"284":{"start":{"line":630,"column":4},"end":{"line":630,"column":52}},"285":{"start":{"line":634,"column":0},"end":{"line":636,"column":2}},"286":{"start":{"line":635,"column":2},"end":{"line":635,"column":58}},"287":{"start":{"line":638,"column":0},"end":{"line":640,"column":2}},"288":{"start":{"line":639,"column":2},"end":{"line":639,"column":25}},"289":{"start":{"line":642,"column":0},"end":{"line":644,"column":2}},"290":{"start":{"line":643,"column":2},"end":{"line":643,"column":25}},"291":{"start":{"line":647,"column":0},"end":{"line":647,"column":51}},"292":{"start":{"line":649,"column":0},"end":{"line":649,"column":38}},"293":{"start":{"line":650,"column":0},"end":{"line":650,"column":53}}},"branchMap":{"1":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":19}},{"start":{"line":50,"column":23},"end":{"line":50,"column":25}}]},"2":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"4":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"5":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":33}},{"start":{"line":75,"column":37},"end":{"line":75,"column":53}},{"start":{"line":76,"column":6},"end":{"line":76,"column":46}}]},"6":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"7":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":9},"end":{"line":85,"column":13}},{"start":{"line":85,"column":17},"end":{"line":85,"column":19}}]},"8":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":12},"end":{"line":91,"column":19}},{"start":{"line":91,"column":23},"end":{"line":91,"column":25}}]},"10":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"11":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":9},"end":{"line":98,"column":9}},{"start":{"line":98,"column":9},"end":{"line":98,"column":9}}]},"12":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"13":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":149,"column":4}},{"start":{"line":149,"column":4},"end":{"line":149,"column":4}}]},"14":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":163,"column":4}},{"start":{"line":163,"column":4},"end":{"line":163,"column":4}}]},"15":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":2},"end":{"line":168,"column":2}},{"start":{"line":168,"column":2},"end":{"line":168,"column":2}}]},"16":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"17":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"18":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":189,"column":4}},{"start":{"line":189,"column":4},"end":{"line":189,"column":4}}]},"19":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"20":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":8},"end":{"line":193,"column":29}},{"start":{"line":193,"column":33},"end":{"line":193,"column":55}}]},"21":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":197,"column":4}},{"start":{"line":197,"column":4},"end":{"line":197,"column":4}}]},"22":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":6},"end":{"line":199,"column":6}},{"start":{"line":199,"column":6},"end":{"line":199,"column":6}}]},"23":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":10},"end":{"line":199,"column":22}},{"start":{"line":199,"column":26},"end":{"line":199,"column":42}}]},"24":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":11},"end":{"line":204,"column":11}},{"start":{"line":204,"column":11},"end":{"line":204,"column":11}}]},"25":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":6},"end":{"line":208,"column":6}},{"start":{"line":208,"column":6},"end":{"line":208,"column":6}}]},"26":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":18},"end":{"line":209,"column":43}},{"start":{"line":209,"column":47},"end":{"line":209,"column":61}}]},"27":{"line":211,"type":"cond-expr","locations":[{"start":{"line":211,"column":34},"end":{"line":211,"column":41}},{"start":{"line":211,"column":44},"end":{"line":211,"column":61}}]},"28":{"line":212,"type":"cond-expr","locations":[{"start":{"line":212,"column":34},"end":{"line":212,"column":43}},{"start":{"line":212,"column":46},"end":{"line":212,"column":53}}]},"29":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":6},"end":{"line":220,"column":6}},{"start":{"line":220,"column":6},"end":{"line":220,"column":6}}]},"30":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":10},"end":{"line":220,"column":38}},{"start":{"line":220,"column":42},"end":{"line":220,"column":57}}]},"31":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":8},"end":{"line":224,"column":8}},{"start":{"line":224,"column":8},"end":{"line":224,"column":8}}]},"32":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":10},"end":{"line":227,"column":10}},{"start":{"line":227,"column":10},"end":{"line":227,"column":10}}]},"33":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":6},"end":{"line":241,"column":6}},{"start":{"line":241,"column":6},"end":{"line":241,"column":6}}]},"34":{"line":241,"type":"binary-expr","locations":[{"start":{"line":241,"column":10},"end":{"line":241,"column":26}},{"start":{"line":241,"column":30},"end":{"line":241,"column":55}}]},"35":{"line":243,"type":"cond-expr","locations":[{"start":{"line":243,"column":36},"end":{"line":243,"column":43}},{"start":{"line":243,"column":46},"end":{"line":243,"column":71}}]},"36":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":8},"end":{"line":246,"column":8}},{"start":{"line":246,"column":8},"end":{"line":246,"column":8}}]},"37":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":8},"end":{"line":254,"column":8}},{"start":{"line":254,"column":8},"end":{"line":254,"column":8}}]},"38":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":2},"end":{"line":263,"column":2}},{"start":{"line":263,"column":2},"end":{"line":263,"column":2}}]},"39":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":4},"end":{"line":277,"column":4}},{"start":{"line":277,"column":4},"end":{"line":277,"column":4}}]},"40":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":8},"end":{"line":277,"column":26}},{"start":{"line":277,"column":30},"end":{"line":277,"column":51}}]},"41":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":6},"end":{"line":279,"column":6}},{"start":{"line":279,"column":6},"end":{"line":279,"column":6}}]},"42":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":8},"end":{"line":280,"column":8}},{"start":{"line":280,"column":8},"end":{"line":280,"column":8}}]},"43":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":10},"end":{"line":281,"column":10}},{"start":{"line":281,"column":10},"end":{"line":281,"column":10}}]},"44":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":15},"end":{"line":289,"column":15}},{"start":{"line":289,"column":15},"end":{"line":289,"column":15}}]},"45":{"line":289,"type":"binary-expr","locations":[{"start":{"line":289,"column":19},"end":{"line":289,"column":39}},{"start":{"line":289,"column":43},"end":{"line":289,"column":57}}]},"46":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":299,"column":4}},{"start":{"line":299,"column":4},"end":{"line":299,"column":4}}]},"47":{"line":299,"type":"binary-expr","locations":[{"start":{"line":299,"column":8},"end":{"line":299,"column":26}},{"start":{"line":299,"column":30},"end":{"line":299,"column":51}}]},"48":{"line":301,"type":"switch","locations":[{"start":{"line":302,"column":8},"end":{"line":303,"column":16}},{"start":{"line":304,"column":8},"end":{"line":304,"column":20}},{"start":{"line":305,"column":8},"end":{"line":308,"column":16}},{"start":{"line":309,"column":8},"end":{"line":312,"column":16}},{"start":{"line":313,"column":8},"end":{"line":315,"column":16}},{"start":{"line":316,"column":8},"end":{"line":318,"column":16}},{"start":{"line":319,"column":8},"end":{"line":321,"column":60}}]},"49":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":6},"end":{"line":325,"column":6}},{"start":{"line":325,"column":6},"end":{"line":325,"column":6}}]},"50":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":4},"end":{"line":329,"column":4}},{"start":{"line":329,"column":4},"end":{"line":329,"column":4}}]},"51":{"line":329,"type":"binary-expr","locations":[{"start":{"line":329,"column":8},"end":{"line":329,"column":29}},{"start":{"line":329,"column":33},"end":{"line":329,"column":55}}]},"52":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":4},"end":{"line":334,"column":4}},{"start":{"line":334,"column":4},"end":{"line":334,"column":4}}]},"53":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":6},"end":{"line":335,"column":6}},{"start":{"line":335,"column":6},"end":{"line":335,"column":6}}]},"54":{"line":335,"type":"binary-expr","locations":[{"start":{"line":335,"column":10},"end":{"line":335,"column":44}},{"start":{"line":335,"column":48},"end":{"line":335,"column":62}}]},"55":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":6},"end":{"line":343,"column":6}},{"start":{"line":343,"column":6},"end":{"line":343,"column":6}}]},"56":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":8},"end":{"line":344,"column":8}},{"start":{"line":344,"column":8},"end":{"line":344,"column":8}}]},"57":{"line":344,"type":"binary-expr","locations":[{"start":{"line":344,"column":12},"end":{"line":344,"column":45}},{"start":{"line":345,"column":12},"end":{"line":345,"column":46}},{"start":{"line":346,"column":12},"end":{"line":346,"column":35}}]},"58":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":13},"end":{"line":349,"column":13}},{"start":{"line":349,"column":13},"end":{"line":349,"column":13}}]},"59":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":17},"end":{"line":349,"column":38}},{"start":{"line":349,"column":42},"end":{"line":349,"column":61}}]},"60":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":8},"end":{"line":350,"column":8}},{"start":{"line":350,"column":8},"end":{"line":350,"column":8}}]},"61":{"line":350,"type":"binary-expr","locations":[{"start":{"line":350,"column":12},"end":{"line":350,"column":45}},{"start":{"line":351,"column":12},"end":{"line":351,"column":40}},{"start":{"line":352,"column":12},"end":{"line":352,"column":35}}]},"62":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":2},"end":{"line":367,"column":2}},{"start":{"line":367,"column":2},"end":{"line":367,"column":2}}]},"63":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":2},"end":{"line":376,"column":2}},{"start":{"line":376,"column":2},"end":{"line":376,"column":2}}]},"64":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":2},"end":{"line":380,"column":2}},{"start":{"line":380,"column":2},"end":{"line":380,"column":2}}]},"65":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":2},"end":{"line":406,"column":2}},{"start":{"line":406,"column":2},"end":{"line":406,"column":2}}]},"66":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":2},"end":{"line":414,"column":2}},{"start":{"line":414,"column":2},"end":{"line":414,"column":2}}]},"67":{"line":419,"type":"binary-expr","locations":[{"start":{"line":419,"column":20},"end":{"line":419,"column":36}},{"start":{"line":419,"column":41},"end":{"line":419,"column":52}}]},"68":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":4},"end":{"line":431,"column":4}},{"start":{"line":431,"column":4},"end":{"line":431,"column":4}}]},"69":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":4},"end":{"line":435,"column":4}},{"start":{"line":435,"column":4},"end":{"line":435,"column":4}}]},"70":{"line":435,"type":"binary-expr","locations":[{"start":{"line":435,"column":8},"end":{"line":435,"column":20}},{"start":{"line":435,"column":24},"end":{"line":435,"column":60}}]},"71":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":4},"end":{"line":439,"column":4}},{"start":{"line":439,"column":4},"end":{"line":439,"column":4}}]},"72":{"line":439,"type":"binary-expr","locations":[{"start":{"line":439,"column":8},"end":{"line":439,"column":23}},{"start":{"line":439,"column":27},"end":{"line":439,"column":66}}]},"73":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":4},"end":{"line":443,"column":4}},{"start":{"line":443,"column":4},"end":{"line":443,"column":4}}]},"74":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":6},"end":{"line":446,"column":6}},{"start":{"line":446,"column":6},"end":{"line":446,"column":6}}]},"75":{"line":446,"type":"binary-expr","locations":[{"start":{"line":446,"column":10},"end":{"line":446,"column":27}},{"start":{"line":446,"column":31},"end":{"line":446,"column":43}},{"start":{"line":446,"column":47},"end":{"line":446,"column":59}}]},"76":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":8},"end":{"line":449,"column":8}},{"start":{"line":449,"column":8},"end":{"line":449,"column":8}}]},"77":{"line":449,"type":"binary-expr","locations":[{"start":{"line":449,"column":12},"end":{"line":449,"column":29}},{"start":{"line":449,"column":33},"end":{"line":449,"column":55}}]},"78":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":2},"end":{"line":457,"column":2}},{"start":{"line":457,"column":2},"end":{"line":457,"column":2}}]},"79":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":6},"end":{"line":465,"column":6}},{"start":{"line":465,"column":6},"end":{"line":465,"column":6}}]},"80":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":6},"end":{"line":468,"column":6}},{"start":{"line":468,"column":6},"end":{"line":468,"column":6}}]},"81":{"line":471,"type":"if","locations":[{"start":{"line":471,"column":6},"end":{"line":471,"column":6}},{"start":{"line":471,"column":6},"end":{"line":471,"column":6}}]},"82":{"line":471,"type":"binary-expr","locations":[{"start":{"line":471,"column":10},"end":{"line":471,"column":22}},{"start":{"line":471,"column":26},"end":{"line":471,"column":62}}]},"83":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":6},"end":{"line":474,"column":6}},{"start":{"line":474,"column":6},"end":{"line":474,"column":6}}]},"84":{"line":474,"type":"binary-expr","locations":[{"start":{"line":474,"column":10},"end":{"line":474,"column":25}},{"start":{"line":474,"column":29},"end":{"line":474,"column":68}}]},"85":{"line":477,"type":"if","locations":[{"start":{"line":477,"column":6},"end":{"line":477,"column":6}},{"start":{"line":477,"column":6},"end":{"line":477,"column":6}}]},"86":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":6},"end":{"line":481,"column":6}},{"start":{"line":481,"column":6},"end":{"line":481,"column":6}}]},"87":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":8},"end":{"line":482,"column":8}},{"start":{"line":482,"column":8},"end":{"line":482,"column":8}}]},"88":{"line":485,"type":"if","locations":[{"start":{"line":485,"column":8},"end":{"line":485,"column":8}},{"start":{"line":485,"column":8},"end":{"line":485,"column":8}}]},"89":{"line":485,"type":"binary-expr","locations":[{"start":{"line":485,"column":12},"end":{"line":485,"column":24}},{"start":{"line":485,"column":28},"end":{"line":485,"column":40}}]},"90":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":13},"end":{"line":490,"column":13}},{"start":{"line":490,"column":13},"end":{"line":490,"column":13}}]},"91":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":6},"end":{"line":499,"column":6}},{"start":{"line":499,"column":6},"end":{"line":499,"column":6}}]},"92":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":6},"end":{"line":502,"column":6}},{"start":{"line":502,"column":6},"end":{"line":502,"column":6}}]},"93":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":8},"end":{"line":503,"column":8}},{"start":{"line":503,"column":8},"end":{"line":503,"column":8}}]},"94":{"line":503,"type":"binary-expr","locations":[{"start":{"line":503,"column":12},"end":{"line":503,"column":24}},{"start":{"line":503,"column":28},"end":{"line":503,"column":64}}]},"95":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":8},"end":{"line":506,"column":8}},{"start":{"line":506,"column":8},"end":{"line":506,"column":8}}]},"96":{"line":506,"type":"binary-expr","locations":[{"start":{"line":506,"column":12},"end":{"line":506,"column":27}},{"start":{"line":506,"column":31},"end":{"line":506,"column":70}}]},"97":{"line":511,"type":"cond-expr","locations":[{"start":{"line":511,"column":73},"end":{"line":511,"column":79}},{"start":{"line":511,"column":82},"end":{"line":511,"column":107}}]},"98":{"line":511,"type":"binary-expr","locations":[{"start":{"line":511,"column":15},"end":{"line":511,"column":35}},{"start":{"line":511,"column":40},"end":{"line":511,"column":68}}]},"99":{"line":512,"type":"if","locations":[{"start":{"line":512,"column":8},"end":{"line":512,"column":8}},{"start":{"line":512,"column":8},"end":{"line":512,"column":8}}]},"100":{"line":516,"type":"if","locations":[{"start":{"line":516,"column":8},"end":{"line":516,"column":8}},{"start":{"line":516,"column":8},"end":{"line":516,"column":8}}]},"101":{"line":516,"type":"binary-expr","locations":[{"start":{"line":516,"column":12},"end":{"line":516,"column":29}},{"start":{"line":516,"column":33},"end":{"line":516,"column":45}},{"start":{"line":516,"column":49},"end":{"line":516,"column":61}}]},"102":{"line":518,"type":"if","locations":[{"start":{"line":518,"column":15},"end":{"line":518,"column":15}},{"start":{"line":518,"column":15},"end":{"line":518,"column":15}}]},"103":{"line":518,"type":"binary-expr","locations":[{"start":{"line":518,"column":19},"end":{"line":518,"column":36}},{"start":{"line":518,"column":40},"end":{"line":518,"column":62}}]},"104":{"line":532,"type":"binary-expr","locations":[{"start":{"line":532,"column":17},"end":{"line":532,"column":33}},{"start":{"line":532,"column":37},"end":{"line":532,"column":62}}]},"105":{"line":533,"type":"binary-expr","locations":[{"start":{"line":533,"column":28},"end":{"line":533,"column":36}},{"start":{"line":533,"column":41},"end":{"line":533,"column":69}},{"start":{"line":533,"column":73},"end":{"line":533,"column":91}}]},"106":{"line":534,"type":"if","locations":[{"start":{"line":534,"column":2},"end":{"line":534,"column":2}},{"start":{"line":534,"column":2},"end":{"line":534,"column":2}}]},"107":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":2},"end":{"line":542,"column":2}},{"start":{"line":542,"column":2},"end":{"line":542,"column":2}}]},"108":{"line":551,"type":"binary-expr","locations":[{"start":{"line":551,"column":17},"end":{"line":551,"column":33}},{"start":{"line":551,"column":37},"end":{"line":551,"column":62}}]},"109":{"line":552,"type":"binary-expr","locations":[{"start":{"line":552,"column":25},"end":{"line":552,"column":33}},{"start":{"line":552,"column":38},"end":{"line":552,"column":63}},{"start":{"line":552,"column":67},"end":{"line":552,"column":82}}]},"110":{"line":553,"type":"if","locations":[{"start":{"line":553,"column":2},"end":{"line":553,"column":2}},{"start":{"line":553,"column":2},"end":{"line":553,"column":2}}]},"111":{"line":561,"type":"if","locations":[{"start":{"line":561,"column":2},"end":{"line":561,"column":2}},{"start":{"line":561,"column":2},"end":{"line":561,"column":2}}]},"112":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":4},"end":{"line":586,"column":4}},{"start":{"line":586,"column":4},"end":{"line":586,"column":4}}]},"113":{"line":586,"type":"binary-expr","locations":[{"start":{"line":586,"column":8},"end":{"line":586,"column":18}},{"start":{"line":586,"column":22},"end":{"line":586,"column":102}}]},"114":{"line":595,"type":"cond-expr","locations":[{"start":{"line":596,"column":2},"end":{"line":596,"column":68}},{"start":{"line":597,"column":2},"end":{"line":597,"column":11}}]},"115":{"line":595,"type":"binary-expr","locations":[{"start":{"line":595,"column":19},"end":{"line":595,"column":35}},{"start":{"line":595,"column":39},"end":{"line":595,"column":60}}]},"116":{"line":600,"type":"binary-expr","locations":[{"start":{"line":600,"column":1},"end":{"line":600,"column":20}},{"start":{"line":601,"column":1},"end":{"line":601,"column":21}},{"start":{"line":602,"column":2},"end":{"line":602,"column":24}},{"start":{"line":602,"column":28},"end":{"line":602,"column":49}}]},"117":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":2},"end":{"line":605,"column":2}},{"start":{"line":605,"column":2},"end":{"line":605,"column":2}}]},"118":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":2},"end":{"line":618,"column":2}},{"start":{"line":618,"column":2},"end":{"line":618,"column":2}}]},"119":{"line":621,"type":"if","locations":[{"start":{"line":621,"column":4},"end":{"line":621,"column":4}},{"start":{"line":621,"column":4},"end":{"line":621,"column":4}}]},"120":{"line":624,"type":"if","locations":[{"start":{"line":624,"column":8},"end":{"line":624,"column":8}},{"start":{"line":624,"column":8},"end":{"line":624,"column":8}}]},"121":{"line":635,"type":"binary-expr","locations":[{"start":{"line":635,"column":9},"end":{"line":635,"column":26}},{"start":{"line":635,"column":30},"end":{"line":635,"column":57}}]}},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","// Turning on strict for this file breaks lots of test cases;","// disabling strict for this file","/* eslint-disable strict */","","/*!"," * Module exports class Model"," */","module.exports = ModelBaseClass;","","/*!"," * Module dependencies"," */","","var g = require('strong-globalize')();","var util = require('util');","var jutil = require('./jutil');","var List = require('./list');","var Hookable = require('./hooks');","var validations = require('./validations');","var _extend = util._extend;","var utils = require('./utils');","var fieldsToArray = utils.fieldsToArray;","var uuid = require('uuid');","var shortid = require('shortid');","","// Set up an object for quick lookup","var BASE_TYPES = {","  'String': true,","  'Boolean': true,","  'Number': true,","  'Date': true,","  'Text': true,","  'ObjectID': true,","};","","/**"," * Model class: base class for all persistent objects."," *"," * `ModelBaseClass` mixes `Validatable` and `Hookable` classes methods"," *"," * @class"," * @param {Object} data Initial object data"," */","function ModelBaseClass(data, options) {","  options = options || {};","  if (!('applySetters' in options)) {","    // Default to true","    options.applySetters = true;","  }","  if (!('applyDefaultValues' in options)) {","    options.applyDefaultValues = true;","  }","  this._initProperties(data, options);","}","","/**"," * Initialize the model instance with a list of properties"," * @param {Object} data The data object"," * @param {Object} options An object to control the instantiation"," * @property {Boolean} applySetters Controls if the setters will be applied"," * @property {Boolean} applyDefaultValues Default attributes and values will be applied"," * @property {Boolean} strict Set the instance level strict mode"," * @property {Boolean} persisted Whether the instance has been persisted"," * @private"," */","ModelBaseClass.prototype._initProperties = function(data, options) {","  var self = this;","  var ctor = this.constructor;","                                     // issue#1261","  if (typeof data !== 'undefined' && data.constructor &&","      typeof (data.constructor) !== 'function') {","    throw new Error(g.f('Property name \"{{constructor}}\" is not allowed in %s data', ctor.modelName));","  }","","  if (data instanceof ctor) {","    // Convert the data to be plain object to avoid pollutions","    data = data.toObject(false);","  }","  var properties = _extend({}, ctor.definition.properties);","  data = data || {};","","  if (typeof ctor.applyProperties === 'function') {","    ctor.applyProperties(data);","  }","","  options = options || {};","  var applySetters = options.applySetters;","  var applyDefaultValues = options.applyDefaultValues;","  var strict = options.strict;","","  if (strict === undefined) {","    strict = ctor.definition.settings.strict;","  } else if (strict === 'throw') {","    g.warn('Warning: Model %s, {{strict mode: `throw`}} has been removed, ' +","      'please use {{`strict: true`}} instead, which returns' +","      '{{`Validation Error`}} for unknown properties,', ctor.modelName);","  }","","  var persistUndefinedAsNull = ctor.definition.settings.persistUndefinedAsNull;","","  if (ctor.hideInternalProperties) {","    // Object.defineProperty() is expensive. We only try to make the internal","    // properties hidden (non-enumerable) if the model class has the","    // `hideInternalProperties` set to true","    Object.defineProperties(this, {","      __cachedRelations: {","        writable: true,","        enumerable: false,","        configurable: true,","        value: {},","      },","","      __data: {","        writable: true,","        enumerable: false,","        configurable: true,","        value: {},","      },","","      // Instance level data source","      __dataSource: {","        writable: true,","        enumerable: false,","        configurable: true,","        value: options.dataSource,","      },","","      // Instance level strict mode","      __strict: {","        writable: true,","        enumerable: false,","        configurable: true,","        value: strict,","      },","","      __persisted: {","        writable: true,","        enumerable: false,","        configurable: true,","        value: false,","      },","    });","","    if (strict) {","      Object.defineProperty(this, '__unknownProperties', {","        writable: true,","        enumerable: false,","        configrable: true,","        value: [],","      });","    }","  } else {","    this.__cachedRelations = {};","    this.__data = {};","    this.__dataSource = options.dataSource;","    this.__strict = strict;","    this.__persisted = false;","    if (strict) {","      this.__unknownProperties = [];","    }","  }","","  if (options.persisted !== undefined) {","    this.__persisted = options.persisted === true;","  }","","  if (data.__cachedRelations) {","    this.__cachedRelations = data.__cachedRelations;","  }","","  var keys = Object.keys(data);","","  if (Array.isArray(options.fields)) {","    keys = keys.filter(function(k) {","      return (options.fields.indexOf(k) != -1);","    });","  }","","  var size = keys.length;","  var p, propVal;","  for (var k = 0; k < size; k++) {","    p = keys[k];","    propVal = data[p];","    if (typeof propVal === 'function') {","      continue;","    }","","    if (propVal === undefined && persistUndefinedAsNull) {","      propVal = null;","    }","","    if (properties[p]) {","      // Managed property","      if (applySetters || properties[p].id) {","        self[p] = propVal;","      } else {","        self.__data[p] = propVal;","      }","    } else if (ctor.relations[p]) {","      var relationType = ctor.relations[p].type;","","      var modelTo;","      if (!properties[p]) {","        modelTo = ctor.relations[p].modelTo || ModelBaseClass;","        var multiple = ctor.relations[p].multiple;","        var typeName = multiple ? 'Array' : modelTo.modelName;","        var propType = multiple ? [modelTo] : modelTo;","        properties[p] = {name: typeName, type: propType};","        /* Issue #1252","        this.setStrict(false);","        */","      }","","      // Relation","      if (relationType === 'belongsTo' && propVal != null) {","        // If the related model is populated","        self.__data[ctor.relations[p].keyFrom] = propVal[ctor.relations[p].keyTo];","","        if (ctor.relations[p].options.embedsProperties) {","          var fields = fieldsToArray(ctor.relations[p].properties,","            modelTo.definition.properties, modelTo.settings.strict);","          if (!~fields.indexOf(ctor.relations[p].keyTo)) {","            fields.push(ctor.relations[p].keyTo);","          }","          self.__data[p] = new modelTo(propVal, {","            fields: fields,","            applySetters: false,","            persisted: options.persisted,","          });","        }","      }","","      self.__cachedRelations[p] = propVal;","    } else {","      // Un-managed property","      if (strict === false || self.__cachedRelations[p]) {","        self[p] = self.__data[p] =","          (propVal !== undefined) ? propVal : self.__cachedRelations[p];","","        // Throw error for properties with unsupported names","        if (/\\./.test(p)) {","          throw new Error(g.f(","            'Property names containing dot(s) are not supported. ' +","            'Model: %s, dynamic property: %s',","            this.constructor.modelName, p","          ));","        }","      } else {","        if (strict !== 'filter') {","          this.__unknownProperties.push(p);","        }","      }","    }","  }","","  keys = Object.keys(properties);","","  if (Array.isArray(options.fields)) {","    keys = keys.filter(function(k) {","      return (options.fields.indexOf(k) != -1);","    });","  }","","  size = keys.length;","","  for (k = 0; k < size; k++) {","    p = keys[k];","    propVal = self.__data[p];","    var type = properties[p].type;","","    // Set default values","    if (applyDefaultValues && propVal === undefined) {","      var def = properties[p]['default'];","      if (def !== undefined) {","        if (typeof def === 'function') {","          if (def === Date) {","            // FIXME: We should coerce the value in general","            // This is a work around to {default: Date}","            // Date() will return a string instead of Date","            def = new Date();","          } else {","            def = def();","          }","        } else if (type.name === 'Date' && def === '$now') {","          def = new Date();","        }","        // FIXME: We should coerce the value","        // will implement it after we refactor the PropertyDefinition","        self.__data[p] = propVal = def;","      }","    }","","    // Set default value using a named function","    if (applyDefaultValues && propVal === undefined) {","      var defn = properties[p].defaultFn;","      switch (defn) {","        case undefined:","          break;","        case 'guid':","        case 'uuid':","          // Generate a v1 (time-based) id","          propVal = uuid.v1();","          break;","        case 'uuidv4':","          // Generate a RFC4122 v4 UUID","          propVal = uuid.v4();","          break;","        case 'now':","          propVal = new Date();","          break;","        case 'shortid':","          propVal = shortid.generate();","          break;","        default:","          // TODO Support user-provided functions via a registry of functions","          g.warn('Unknown default value provider %s', defn);","      }","      // FIXME: We should coerce the value","      // will implement it after we refactor the PropertyDefinition","      if (propVal !== undefined)","        self.__data[p] = propVal;","    }","","    if (propVal === undefined && persistUndefinedAsNull) {","      self.__data[p] = propVal = null;","    }","","    // Handle complex types (JSON/Object)","    if (!BASE_TYPES[type.name]) {","      if (typeof self.__data[p] !== 'object' && self.__data[p]) {","        try {","          self.__data[p] = JSON.parse(self.__data[p] + '');","        } catch (e) {","          self.__data[p] = String(self.__data[p]);","        }","      }","","      if (type.prototype instanceof ModelBaseClass) {","        if (!(self.__data[p] instanceof type) &&","            typeof self.__data[p] === 'object' &&","            self.__data[p] !== null) {","          self.__data[p] = new type(self.__data[p]);","        }","      } else if (type.name === 'Array' || Array.isArray(type)) {","        if (!(self.__data[p] instanceof List) &&","            self.__data[p] !== undefined &&","            self.__data[p] !== null) {","          self.__data[p] = List(self.__data[p], type, self);","        }","      }","    }","  }","  this.trigger('initialize');","};","","/**"," * Define a property on the model."," * @param {String} prop Property name"," * @param {Object} params Various property configuration"," */","ModelBaseClass.defineProperty = function(prop, params) {","  if (this.dataSource) {","    this.dataSource.defineProperty(this.modelName, prop, params);","  } else {","    this.modelBuilder.defineProperty(this.modelName, prop, params);","  }","};","","ModelBaseClass.getPropertyType = function(propName) {","  var prop = this.definition.properties[propName];","  if (!prop) {","    // The property is not part of the definition","    return null;","  }","  if (!prop.type) {","    throw new Error(g.f('Type not defined for property %s.%s', this.modelName, propName));","    // return null;","  }","  return prop.type.name;","};","","ModelBaseClass.prototype.getPropertyType = function(propName) {","  return this.constructor.getPropertyType(propName);","};","","/**"," * Return string representation of class"," * This overrides the default `toString()` method"," */","ModelBaseClass.toString = function() {","  return '[Model ' + this.modelName + ']';","};","","/**"," * Convert model instance to a plain JSON object."," * Returns a canonical object representation (no getters and setters)."," *"," * @param {Boolean} onlySchema Restrict properties to dataSource only.  Default is false.  If true, the function returns only properties defined in the schema;  Otherwise it returns all enumerable properties."," */","ModelBaseClass.prototype.toObject = function(onlySchema, removeHidden, removeProtected) {","  if (onlySchema === undefined) {","    onlySchema = true;","  }","  var data = {};","  var self = this;","  var Model = this.constructor;","","  // if it is already an Object","  if (Model === Object) {","    return self;","  }","","  var strict = this.__strict;","  var schemaLess = (strict === false) || !onlySchema;","  var persistUndefinedAsNull = Model.definition.settings.persistUndefinedAsNull;","","  var props = Model.definition.properties;","  var keys = Object.keys(props);","  var propertyName, val;","","  for (var i = 0; i < keys.length; i++) {","    propertyName = keys[i];","    val = self[propertyName];","","    // Exclude functions","    if (typeof val === 'function') {","      continue;","    }","    // Exclude hidden properties","    if (removeHidden && Model.isHiddenProperty(propertyName)) {","      continue;","    }","","    if (removeProtected && Model.isProtectedProperty(propertyName)) {","      continue;","    }","","    if (val instanceof List) {","      data[propertyName] = val.toObject(!schemaLess, removeHidden, true);","    } else {","      if (val !== undefined && val !== null && val.toObject) {","        data[propertyName] = val.toObject(!schemaLess, removeHidden, true);","      } else {","        if (val === undefined && persistUndefinedAsNull) {","          val = null;","        }","        data[propertyName] = val;","      }","    }","  }","","  if (schemaLess) {","    // Find its own properties which can be set via myModel.myProperty = 'myValue'.","    // If the property is not declared in the model definition, no setter will be","    // triggered to add it to __data","    keys = Object.keys(self);","    var size = keys.length;","    for (i = 0; i < size; i++) {","      propertyName = keys[i];","      if (props[propertyName]) {","        continue;","      }","      if (propertyName.indexOf('__') === 0) {","        continue;","      }","      if (removeHidden && Model.isHiddenProperty(propertyName)) {","        continue;","      }","      if (removeProtected && Model.isProtectedProperty(propertyName)) {","        continue;","      }","      if (data[propertyName] !== undefined) {","        continue;","      }","      val = self[propertyName];","      if (val !== undefined) {","        if (typeof val === 'function') {","          continue;","        }","        if (val !== null && val.toObject) {","          data[propertyName] = val.toObject(!schemaLess, removeHidden, true);","        } else {","          data[propertyName] = val;","        }","      } else if (persistUndefinedAsNull) {","        data[propertyName] = null;","      }","    }","    // Now continue to check __data","    keys = Object.keys(self.__data);","    size = keys.length;","    for (i = 0; i < size; i++) {","      propertyName = keys[i];","      if (propertyName.indexOf('__') === 0) {","        continue;","      }","      if (data[propertyName] === undefined) {","        if (removeHidden && Model.isHiddenProperty(propertyName)) {","          continue;","        }","        if (removeProtected && Model.isProtectedProperty(propertyName)) {","          continue;","        }","        var ownVal = self[propertyName];","        // The ownVal can be a relation function","        val = (ownVal !== undefined && (typeof ownVal !== 'function')) ? ownVal : self.__data[propertyName];","        if (typeof val === 'function') {","          continue;","        }","","        if (val !== undefined && val !== null && val.toObject) {","          data[propertyName] = val.toObject(!schemaLess, removeHidden, true);","        } else if (val === undefined && persistUndefinedAsNull) {","          data[propertyName] = null;","        } else {","          data[propertyName] = val;","        }","      }","    }","  }","","  return data;","};","","ModelBaseClass.isProtectedProperty = function(propertyName) {","  var Model = this;","  var settings = Model.definition && Model.definition.settings;","  var protectedProperties = settings && (settings.protectedProperties || settings.protected);","  if (Array.isArray(protectedProperties)) {","    // Cache the protected properties as an object for quick lookup","    settings.protectedProperties = {};","    for (var i = 0; i < protectedProperties.length; i++) {","      settings.protectedProperties[protectedProperties[i]] = true;","    }","    protectedProperties = settings.protectedProperties;","  }","  if (protectedProperties) {","    return protectedProperties[propertyName];","  } else {","    return false;","  }","};","","ModelBaseClass.isHiddenProperty = function(propertyName) {","  var Model = this;","  var settings = Model.definition && Model.definition.settings;","  var hiddenProperties = settings && (settings.hiddenProperties || settings.hidden);","  if (Array.isArray(hiddenProperties)) {","    // Cache the hidden properties as an object for quick lookup","    settings.hiddenProperties = {};","    for (var i = 0; i < hiddenProperties.length; i++) {","      settings.hiddenProperties[hiddenProperties[i]] = true;","    }","    hiddenProperties = settings.hiddenProperties;","  }","  if (hiddenProperties) {","    return hiddenProperties[propertyName];","  } else {","    return false;","  }","};","","ModelBaseClass.prototype.toJSON = function() {","  return this.toObject(false, true, false);","};","","ModelBaseClass.prototype.fromObject = function(obj) {","  for (var key in obj) {","    this[key] = obj[key];","  }","};","","/**"," * Reset dirty attributes."," * This method does not perform any database operations; it just resets the object to its"," * initial state."," */","ModelBaseClass.prototype.reset = function() {","  var obj = this;","  for (var k in obj) {","    if (k !== 'id' && !obj.constructor.dataSource.definitions[obj.constructor.modelName].properties[k]) {","      delete obj[k];","    }","  }","};","","// Node v0.11+ allows custom inspect functions to return an object","// instead of string. That way options like `showHidden` and `colors`","// can be preserved.","var versionParts = process.versions && process.versions.node ?","  process.versions.node.split(/\\./g).map(function(v) { return +v; }) :","  [1, 0, 0]; // browserify ships 1.0-compatible version of util.inspect","","var INSPECT_SUPPORTS_OBJECT_RETVAL ="," versionParts[0] > 0 ||"," versionParts[1] > 11 ||"," (versionParts[0] === 11 && versionParts[1] >= 14);","","ModelBaseClass.prototype.inspect = function(depth) {","  if (INSPECT_SUPPORTS_OBJECT_RETVAL)","    return this.__data;","","  // Workaround for older versions","  // See also https://github.com/joyent/node/commit/66280de133","  return util.inspect(this.__data, {","    showHidden: false,","    depth: depth,","    colors: false,","  });","};","","ModelBaseClass.mixin = function(anotherClass, options) {","  if (typeof anotherClass === 'string') {","    this.modelBuilder.mixins.applyMixin(this, anotherClass, options);","  } else {","    if (anotherClass.prototype instanceof ModelBaseClass) {","      var props = anotherClass.definition.properties;","      for (var i in props) {","        if (this.definition.properties[i]) {","          continue;","        }","        this.defineProperty(i, props[i]);","      }","    }","    return jutil.mixin(this, anotherClass, options);","  }","};","","ModelBaseClass.prototype.getDataSource = function() {","  return this.__dataSource || this.constructor.dataSource;","};","","ModelBaseClass.getDataSource = function() {","  return this.dataSource;","};","","ModelBaseClass.prototype.setStrict = function(strict) {","  this.__strict = strict;","};","","// Mixin observer","jutil.mixin(ModelBaseClass, require('./observer'));","","jutil.mixin(ModelBaseClass, Hookable);","jutil.mixin(ModelBaseClass, validations.Validatable);",""],"l":{"13":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"32":1,"49":1,"50":1,"51":1,"53":1,"55":1,"56":1,"58":1,"71":1,"72":1,"73":1,"75":1,"77":0,"80":1,"82":0,"84":1,"85":1,"87":1,"88":0,"91":1,"92":1,"93":1,"94":1,"96":1,"97":1,"98":0,"99":0,"104":1,"106":1,"110":0,"149":0,"150":0,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":0,"168":1,"169":0,"172":1,"173":0,"176":1,"178":1,"179":0,"180":0,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":0,"193":1,"194":0,"197":1,"199":1,"200":1,"202":0,"204":0,"205":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"220":0,"222":0,"224":0,"225":0,"227":0,"228":0,"230":0,"238":0,"241":0,"242":0,"246":0,"247":0,"254":0,"255":0,"261":1,"263":1,"264":0,"265":0,"269":1,"271":1,"272":3,"273":3,"274":3,"277":3,"278":2,"279":2,"280":1,"281":0,"285":0,"287":0,"289":1,"290":0,"294":1,"299":3,"300":1,"301":1,"303":0,"307":0,"308":0,"311":0,"312":0,"314":1,"315":1,"317":0,"318":0,"321":0,"325":1,"326":1,"329":3,"330":0,"334":3,"335":0,"336":0,"337":0,"339":0,"343":0,"344":0,"347":0,"349":0,"350":0,"353":0,"358":1,"366":1,"367":0,"368":0,"370":0,"374":1,"375":0,"376":0,"378":0,"380":0,"381":0,"384":0,"387":1,"388":0,"395":1,"396":0,"405":1,"406":0,"407":0,"409":0,"410":0,"411":0,"414":0,"415":0,"418":0,"419":0,"420":0,"422":0,"423":0,"424":0,"426":0,"427":0,"428":0,"431":0,"432":0,"435":0,"436":0,"439":0,"440":0,"443":0,"444":0,"446":0,"447":0,"449":0,"450":0,"452":0,"457":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"468":0,"469":0,"471":0,"472":0,"474":0,"475":0,"477":0,"478":0,"480":0,"481":0,"482":0,"483":0,"485":0,"486":0,"488":0,"490":0,"491":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"502":0,"503":0,"504":0,"506":0,"507":0,"509":0,"511":0,"512":0,"513":0,"516":0,"517":0,"518":0,"519":0,"521":0,"527":0,"530":1,"531":0,"532":0,"533":0,"534":0,"536":0,"537":0,"538":0,"540":0,"542":0,"543":0,"545":0,"549":1,"550":0,"551":0,"552":0,"553":0,"555":0,"556":0,"557":0,"559":0,"561":0,"562":0,"564":0,"568":1,"569":0,"572":1,"573":0,"574":0,"583":1,"584":0,"585":0,"586":0,"587":0,"595":1,"596":3,"599":1,"604":1,"605":0,"606":0,"610":0,"617":1,"618":0,"619":0,"621":0,"622":0,"623":0,"624":0,"625":0,"627":0,"630":0,"634":1,"635":0,"638":1,"639":0,"642":1,"643":0,"647":1,"649":1,"650":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/jutil.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/jutil.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":7,"12":4,"13":0,"14":4,"15":3,"16":7,"17":7,"18":0,"19":7,"20":0,"21":7,"22":7,"23":7,"24":7,"25":7,"26":1,"27":14,"28":46,"29":46,"30":46,"31":46,"32":46,"33":46,"34":46,"35":46,"36":0,"37":0,"38":46,"39":46,"40":1,"41":0,"42":0,"43":0,"44":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[4,3],"6":[0,4],"7":[7,7],"8":[0,7],"9":[0,7],"10":[7,0],"11":[7,0],"12":[7,7],"13":[46,0],"14":[46,0],"15":[46,0],"16":[46,46,0],"17":[0,46],"18":[46,0],"19":[0,0]},"f":{"1":0,"2":0,"3":7,"4":14,"5":46,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":19},"end":{"line":15,"column":58}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":35},"end":{"line":24,"column":55}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":16},"end":{"line":40,"column":56}}},"4":{"name":"mixInto","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":52}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":35},"end":{"line":77,"column":58}}},"6":{"name":"mergeMixins","line":97,"loc":{"start":{"line":97,"column":0},"end":{"line":97,"column":37}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"2":{"start":{"line":15,"column":0},"end":{"line":32,"column":2}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":37}},"4":{"start":{"line":18,"column":2},"end":{"line":21,"column":4}},"5":{"start":{"line":23,"column":2},"end":{"line":31,"column":3}},"6":{"start":{"line":24,"column":4},"end":{"line":30,"column":7}},"7":{"start":{"line":25,"column":6},"end":{"line":29,"column":7}},"8":{"start":{"line":27,"column":8},"end":{"line":27,"column":71}},"9":{"start":{"line":28,"column":8},"end":{"line":28,"column":55}},"10":{"start":{"line":40,"column":0},"end":{"line":74,"column":2}},"11":{"start":{"line":41,"column":2},"end":{"line":48,"column":3}},"12":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"13":{"start":{"line":43,"column":6},"end":{"line":43,"column":13}},"14":{"start":{"line":45,"column":4},"end":{"line":45,"column":38}},"15":{"start":{"line":47,"column":4},"end":{"line":47,"column":36}},"16":{"start":{"line":50,"column":2},"end":{"line":55,"column":4}},"17":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"18":{"start":{"line":58,"column":4},"end":{"line":58,"column":36}},"19":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"20":{"start":{"line":62,"column":4},"end":{"line":62,"column":38}},"21":{"start":{"line":65,"column":2},"end":{"line":67,"column":3}},"22":{"start":{"line":66,"column":4},"end":{"line":66,"column":43}},"23":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"24":{"start":{"line":70,"column":4},"end":{"line":70,"column":63}},"25":{"start":{"line":73,"column":2},"end":{"line":73,"column":18}},"26":{"start":{"line":76,"column":0},"end":{"line":95,"column":1}},"27":{"start":{"line":77,"column":2},"end":{"line":94,"column":5}},"28":{"start":{"line":78,"column":4},"end":{"line":78,"column":72}},"29":{"start":{"line":79,"column":4},"end":{"line":79,"column":84}},"30":{"start":{"line":80,"column":4},"end":{"line":80,"column":108}},"31":{"start":{"line":81,"column":4},"end":{"line":81,"column":66}},"32":{"start":{"line":82,"column":4},"end":{"line":82,"column":84}},"33":{"start":{"line":83,"column":4},"end":{"line":83,"column":62}},"34":{"start":{"line":84,"column":4},"end":{"line":84,"column":81}},"35":{"start":{"line":86,"column":4},"end":{"line":89,"column":5}},"36":{"start":{"line":87,"column":6},"end":{"line":87,"column":60}},"37":{"start":{"line":88,"column":6},"end":{"line":88,"column":13}},"38":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"39":{"start":{"line":92,"column":6},"end":{"line":92,"column":71}},"40":{"start":{"line":97,"column":0},"end":{"line":104,"column":1}},"41":{"start":{"line":99,"column":2},"end":{"line":103,"column":3}},"42":{"start":{"line":100,"column":4},"end":{"line":100,"column":24}},"43":{"start":{"line":101,"column":4},"end":{"line":102,"column":22}},"44":{"start":{"line":102,"column":6},"end":{"line":102,"column":22}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":12},"end":{"line":18,"column":19}},{"start":{"line":18,"column":23},"end":{"line":21,"column":3}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":6}},{"start":{"line":25,"column":6},"end":{"line":25,"column":6}}]},"4":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":10},"end":{"line":25,"column":32}},{"start":{"line":25,"column":37},"end":{"line":25,"column":72}},{"start":{"line":26,"column":10},"end":{"line":26,"column":26}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"7":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":19}},{"start":{"line":50,"column":23},"end":{"line":55,"column":3}}]},"8":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"9":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"10":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"11":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"12":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":32}},{"start":{"line":69,"column":36},"end":{"line":69,"column":56}}]},"13":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":25},"end":{"line":80,"column":45}},{"start":{"line":80,"column":49},"end":{"line":80,"column":107}}]},"14":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":17},"end":{"line":82,"column":37}},{"start":{"line":82,"column":41},"end":{"line":82,"column":83}}]},"15":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":21},"end":{"line":83,"column":27}},{"start":{"line":83,"column":31},"end":{"line":83,"column":61}}]},"16":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":25},"end":{"line":84,"column":41}},{"start":{"line":84,"column":45},"end":{"line":84,"column":66}},{"start":{"line":84,"column":70},"end":{"line":84,"column":80}}]},"17":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"18":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"19":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]}},"code":["// Copyright IBM Corp. 2011,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","var util = require('util');","","/**"," *"," * @param newClass"," * @param baseClass"," */","exports.inherits = function(newClass, baseClass, options) {","  util.inherits(newClass, baseClass);","","  options = options || {","    staticProperties: true,","    override: false,","  };","","  if (options.staticProperties) {","    Object.keys(baseClass).forEach(function(classProp) {","      if (classProp !== 'super_' && (!newClass.hasOwnProperty(classProp) ||","          options.override)) {","        var pd = Object.getOwnPropertyDescriptor(baseClass, classProp);","        Object.defineProperty(newClass, classProp, pd);","      }","    });","  }","};","","/**"," * Mix in the a class into the new class"," * @param newClass The target class to receive the mixin"," * @param mixinClass The class to be mixed in"," * @param options"," */","exports.mixin = function(newClass, mixinClass, options) {","  if (Array.isArray(newClass._mixins)) {","    if (newClass._mixins.indexOf(mixinClass) !== -1) {","      return;","    }","    newClass._mixins.push(mixinClass);","  } else {","    newClass._mixins = [mixinClass];","  }","","  options = options || {","    staticProperties: true,","    instanceProperties: true,","    override: false,","    proxyFunctions: false,","  };","","  if (options.staticProperties === undefined) {","    options.staticProperties = true;","  }","","  if (options.instanceProperties === undefined) {","    options.instanceProperties = true;","  }","","  if (options.staticProperties) {","    mixInto(mixinClass, newClass, options);","  }","","  if (options.instanceProperties && mixinClass.prototype) {","    mixInto(mixinClass.prototype, newClass.prototype, options);","  }","","  return newClass;","};","","function mixInto(sourceScope, targetScope, options) {","  Object.keys(sourceScope).forEach(function(propertyName) {","    var targetPropertyExists = targetScope.hasOwnProperty(propertyName);","    var sourceProperty = Object.getOwnPropertyDescriptor(sourceScope, propertyName);","    var targetProperty = targetPropertyExists && Object.getOwnPropertyDescriptor(targetScope, propertyName);","    var sourceIsFunc = typeof sourceProperty.value === 'function';","    var isFunc = targetPropertyExists && typeof targetProperty.value === 'function';","    var isDelegate = isFunc && targetProperty.value._delegate;","    var shouldOverride = options.override || !targetPropertyExists || isDelegate;","","    if (propertyName == '_mixins') {","      mergeMixins(sourceScope._mixins, targetScope._mixins);","      return;","    }","","    if (shouldOverride) {","      Object.defineProperty(targetScope, propertyName, sourceProperty);","    }","  });","}","","function mergeMixins(source, target) {","  // hand-written equivalent of lodash.union()","  for (var ix in source) {","    var mx = source[ix];","    if (target.indexOf(mx) === -1)","      target.push(mx);","  }","}",""],"l":{"8":1,"15":1,"16":0,"18":0,"23":0,"24":0,"25":0,"27":0,"28":0,"40":1,"41":7,"42":4,"43":0,"45":4,"47":3,"50":7,"57":7,"58":0,"61":7,"62":0,"65":7,"66":7,"69":7,"70":7,"73":7,"76":1,"77":14,"78":46,"79":46,"80":46,"81":46,"82":46,"83":46,"84":46,"86":46,"87":0,"88":0,"91":46,"92":46,"97":1,"99":0,"100":0,"101":0,"102":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/list.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/list.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":1,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":1,"52":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"List","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":39}}},"2":{"name":"(anonymous_2)","line":66,"loc":{"start":{"line":66,"column":16},"end":{"line":66,"column":34}}},"3":{"name":"(anonymous_3)","line":81,"loc":{"start":{"line":81,"column":22},"end":{"line":81,"column":36}}},"4":{"name":"(anonymous_4)","line":87,"loc":{"start":{"line":87,"column":26},"end":{"line":87,"column":78}}},"5":{"name":"(anonymous_5)","line":89,"loc":{"start":{"line":89,"column":15},"end":{"line":89,"column":30}}},"6":{"name":"(anonymous_6)","line":99,"loc":{"start":{"line":99,"column":24},"end":{"line":99,"column":35}}},"7":{"name":"(anonymous_7)","line":103,"loc":{"start":{"line":103,"column":26},"end":{"line":103,"column":37}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":22}},"5":{"start":{"line":14,"column":0},"end":{"line":75,"column":1}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":18}},"7":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":45}},"9":{"start":{"line":20,"column":2},"end":{"line":28,"column":3}},"10":{"start":{"line":21,"column":4},"end":{"line":27,"column":5}},"11":{"start":{"line":22,"column":6},"end":{"line":22,"column":32}},"12":{"start":{"line":24,"column":6},"end":{"line":24,"column":86}},"13":{"start":{"line":25,"column":6},"end":{"line":25,"column":27}},"14":{"start":{"line":26,"column":6},"end":{"line":26,"column":16}},"15":{"start":{"line":30,"column":2},"end":{"line":30,"column":15}},"16":{"start":{"line":31,"column":2},"end":{"line":31,"column":33}},"17":{"start":{"line":33,"column":2},"end":{"line":33,"column":22}},"18":{"start":{"line":34,"column":2},"end":{"line":38,"column":3}},"19":{"start":{"line":35,"column":4},"end":{"line":35,"column":68}},"20":{"start":{"line":36,"column":4},"end":{"line":36,"column":25}},"21":{"start":{"line":37,"column":4},"end":{"line":37,"column":14}},"22":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"23":{"start":{"line":41,"column":4},"end":{"line":41,"column":48}},"24":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"25":{"start":{"line":45,"column":4},"end":{"line":45,"column":27}},"26":{"start":{"line":48,"column":2},"end":{"line":50,"column":3}},"27":{"start":{"line":49,"column":4},"end":{"line":49,"column":19}},"28":{"start":{"line":52,"column":2},"end":{"line":56,"column":5}},"29":{"start":{"line":58,"column":2},"end":{"line":64,"column":3}},"30":{"start":{"line":59,"column":4},"end":{"line":63,"column":7}},"31":{"start":{"line":66,"column":2},"end":{"line":72,"column":5}},"32":{"start":{"line":67,"column":4},"end":{"line":71,"column":5}},"33":{"start":{"line":68,"column":6},"end":{"line":68,"column":30}},"34":{"start":{"line":70,"column":6},"end":{"line":70,"column":20}},"35":{"start":{"line":74,"column":2},"end":{"line":74,"column":13}},"36":{"start":{"line":77,"column":0},"end":{"line":77,"column":27}},"37":{"start":{"line":79,"column":0},"end":{"line":79,"column":32}},"38":{"start":{"line":81,"column":0},"end":{"line":85,"column":2}},"39":{"start":{"line":82,"column":2},"end":{"line":82,"column":88}},"40":{"start":{"line":83,"column":2},"end":{"line":83,"column":25}},"41":{"start":{"line":84,"column":2},"end":{"line":84,"column":14}},"42":{"start":{"line":87,"column":0},"end":{"line":97,"column":2}},"43":{"start":{"line":88,"column":2},"end":{"line":88,"column":17}},"44":{"start":{"line":89,"column":2},"end":{"line":95,"column":5}},"45":{"start":{"line":90,"column":4},"end":{"line":94,"column":5}},"46":{"start":{"line":91,"column":6},"end":{"line":91,"column":75}},"47":{"start":{"line":93,"column":6},"end":{"line":93,"column":23}},"48":{"start":{"line":96,"column":2},"end":{"line":96,"column":15}},"49":{"start":{"line":99,"column":0},"end":{"line":101,"column":2}},"50":{"start":{"line":100,"column":2},"end":{"line":100,"column":29}},"51":{"start":{"line":103,"column":0},"end":{"line":105,"column":2}},"52":{"start":{"line":104,"column":2},"end":{"line":104,"column":39}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"3":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":10},"end":{"line":33,"column":15}},{"start":{"line":33,"column":19},"end":{"line":33,"column":21}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"5":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"6":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":15},"end":{"line":41,"column":23}},{"start":{"line":41,"column":27},"end":{"line":41,"column":47}}]},"7":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"8":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"9":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"10":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"11":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":16}},{"start":{"line":67,"column":20},"end":{"line":67,"column":47}}]},"12":{"line":82,"type":"cond-expr","locations":[{"start":{"line":82,"column":63},"end":{"line":82,"column":66}},{"start":{"line":82,"column":69},"end":{"line":82,"column":87}}]},"13":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":13},"end":{"line":82,"column":26}},{"start":{"line":82,"column":31},"end":{"line":82,"column":59}}]},"14":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"15":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":12}},{"start":{"line":90,"column":16},"end":{"line":90,"column":40}},{"start":{"line":90,"column":44},"end":{"line":90,"column":57}}]}},"code":["// Copyright IBM Corp. 2012,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","var g = require('strong-globalize')();","var util = require('util');","var Any = require('./types').Types.Any;","","module.exports = List;","","function List(items, itemType, parent) {","  var list = this;","  if (!(list instanceof List)) {","    return new List(items, itemType, parent);","  }","","  if (typeof items === 'string') {","    try {","      items = JSON.parse(items);","    } catch (e) {","      const err = new Error(g.f('could not create List from JSON string: %j', items));","      err.statusCode = 400;","      throw err;","    }","  }","","  var arr = [];","  arr.__proto__ = List.prototype;","","  items = items || [];","  if (!Array.isArray(items)) {","    const err = new Error(g.f('Items must be an array: %j', items));","    err.statusCode = 400;","    throw err;","  }","","  if (!itemType) {","    itemType = items[0] && items[0].constructor;","  }","","  if (Array.isArray(itemType)) {","    itemType = itemType[0];","  }","","  if (itemType === Array) {","    itemType = Any;","  }","","  Object.defineProperty(arr, 'itemType', {","    writable: true,","    enumerable: false,","    value: itemType,","  });","","  if (parent) {","    Object.defineProperty(arr, 'parent', {","      writable: true,","      enumerable: false,","      value: parent,","    });","  }","","  items.forEach(function(item, i) {","    if (itemType && !(item instanceof itemType)) {","      arr[i] = itemType(item);","    } else {","      arr[i] = item;","    }","  });","","  return arr;","}","","util.inherits(List, Array);","","var _push = List.prototype.push;","","List.prototype.push = function(obj) {","  var item = this.itemType && (obj instanceof this.itemType) ? obj : this.itemType(obj);","  _push.call(this, item);","  return item;","};","","List.prototype.toObject = function(onlySchema, removeHidden, removeProtected) {","  var items = [];","  this.forEach(function(item) {","    if (item && typeof item === 'object' && item.toObject) {","      items.push(item.toObject(onlySchema, removeHidden, removeProtected));","    } else {","      items.push(item);","    }","  });","  return items;","};","","List.prototype.toJSON = function() {","  return this.toObject(true);","};","","List.prototype.toString = function() {","  return JSON.stringify(this.toJSON());","};","",""],"l":{"8":1,"9":1,"10":1,"12":1,"14":1,"15":0,"16":0,"17":0,"20":0,"21":0,"22":0,"24":0,"25":0,"26":0,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"37":0,"40":0,"41":0,"44":0,"45":0,"48":0,"49":0,"52":0,"58":0,"59":0,"66":0,"67":0,"68":0,"70":0,"74":0,"77":1,"79":1,"81":1,"82":0,"83":0,"84":0,"87":1,"88":0,"89":0,"90":0,"91":0,"93":0,"96":0,"99":1,"100":0,"103":1,"104":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/types.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/types.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":1,"15":0,"16":0,"17":0,"18":1,"19":0,"20":1,"21":2,"22":2,"23":6,"24":2,"25":2,"26":22,"27":22,"28":22,"29":24,"30":2,"31":2,"32":2,"33":2,"34":2,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[22,20]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":2,"8":22},"fnMap":{"1":{"name":"Text","line":11,"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":34}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":62},"end":{"line":18,"column":73}}},"3":{"name":"JSON","line":22,"loc":{"start":{"line":22,"column":13},"end":{"line":22,"column":34}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":62},"end":{"line":28,"column":73}}},"5":{"name":"Any","line":32,"loc":{"start":{"line":32,"column":12},"end":{"line":32,"column":32}}},"6":{"name":"(anonymous_6)","line":38,"loc":{"start":{"line":38,"column":60},"end":{"line":38,"column":71}}},"7":{"name":"(anonymous_7)","line":42,"loc":{"start":{"line":42,"column":17},"end":{"line":42,"column":38}}},"8":{"name":"(anonymous_8)","line":50,"loc":{"start":{"line":50,"column":28},"end":{"line":50,"column":50}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":15}},"2":{"start":{"line":11,"column":0},"end":{"line":16,"column":2}},"3":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":17}},"5":{"start":{"line":15,"column":2},"end":{"line":15,"column":21}},"6":{"start":{"line":18,"column":0},"end":{"line":20,"column":2}},"7":{"start":{"line":19,"column":2},"end":{"line":19,"column":20}},"8":{"start":{"line":22,"column":0},"end":{"line":27,"column":2}},"9":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"10":{"start":{"line":24,"column":4},"end":{"line":24,"column":17}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":21}},"12":{"start":{"line":28,"column":0},"end":{"line":30,"column":2}},"13":{"start":{"line":29,"column":2},"end":{"line":29,"column":20}},"14":{"start":{"line":32,"column":0},"end":{"line":37,"column":2}},"15":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"16":{"start":{"line":34,"column":4},"end":{"line":34,"column":17}},"17":{"start":{"line":36,"column":2},"end":{"line":36,"column":21}},"18":{"start":{"line":38,"column":0},"end":{"line":40,"column":2}},"19":{"start":{"line":39,"column":2},"end":{"line":39,"column":20}},"20":{"start":{"line":42,"column":0},"end":{"line":70,"column":2}},"21":{"start":{"line":43,"column":2},"end":{"line":43,"column":43}},"22":{"start":{"line":45,"column":2},"end":{"line":47,"column":3}},"23":{"start":{"line":46,"column":4},"end":{"line":46,"column":29}},"24":{"start":{"line":49,"column":2},"end":{"line":49,"column":30}},"25":{"start":{"line":50,"column":2},"end":{"line":56,"column":4}},"26":{"start":{"line":51,"column":4},"end":{"line":51,"column":24}},"27":{"start":{"line":52,"column":4},"end":{"line":52,"column":38}},"28":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"29":{"start":{"line":54,"column":6},"end":{"line":54,"column":54}},"30":{"start":{"line":58,"column":2},"end":{"line":58,"column":38}},"31":{"start":{"line":59,"column":2},"end":{"line":59,"column":38}},"32":{"start":{"line":60,"column":2},"end":{"line":60,"column":37}},"33":{"start":{"line":62,"column":2},"end":{"line":62,"column":34}},"34":{"start":{"line":63,"column":2},"end":{"line":63,"column":34}},"35":{"start":{"line":64,"column":2},"end":{"line":64,"column":35}},"36":{"start":{"line":65,"column":2},"end":{"line":65,"column":32}},"37":{"start":{"line":66,"column":2},"end":{"line":66,"column":46}},"38":{"start":{"line":67,"column":2},"end":{"line":67,"column":33}},"39":{"start":{"line":68,"column":2},"end":{"line":68,"column":36}},"40":{"start":{"line":69,"column":2},"end":{"line":69,"column":34}},"41":{"start":{"line":72,"column":0},"end":{"line":72,"column":29}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"4":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":17}},{"start":{"line":51,"column":21},"end":{"line":51,"column":23}}]}},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","'use strict';","","var Types = {};","/**"," * Schema types"," */","Types.Text = function Text(value) {","  if (!(this instanceof Text)) {","    return value;","  }","  this.value = value;","}; // Text type","","Types.Text.prototype.toObject = Types.Text.prototype.toJSON = function() {","  return this.value;","};","","Types.JSON = function JSON(value) {","  if (!(this instanceof JSON)) {","    return value;","  }","  this.value = value;","}; // JSON Object","Types.JSON.prototype.toObject = Types.JSON.prototype.toJSON = function() {","  return this.value;","};","","Types.Any = function Any(value) {","  if (!(this instanceof Any)) {","    return value;","  }","  this.value = value;","}; // Any Type","Types.Any.prototype.toObject = Types.Any.prototype.toJSON = function() {","  return this.value;","};","","module.exports = function(modelTypes) {","  var GeoPoint = require('./geo').GeoPoint;","","  for (var t in Types) {","    modelTypes[t] = Types[t];","  }","","  modelTypes.schemaTypes = {};","  modelTypes.registerType = function(type, names) {","    names = names || [];","    names = names.concat([type.name]);","    for (var n = 0; n < names.length; n++) {","      this.schemaTypes[names[n].toLowerCase()] = type;","    }","  };","","  modelTypes.registerType(Types.Text);","  modelTypes.registerType(Types.JSON);","  modelTypes.registerType(Types.Any);","","  modelTypes.registerType(String);","  modelTypes.registerType(Number);","  modelTypes.registerType(Boolean);","  modelTypes.registerType(Date);","  modelTypes.registerType(Buffer, ['Binary']);","  modelTypes.registerType(Array);","  modelTypes.registerType(GeoPoint);","  modelTypes.registerType(Object);","};","","module.exports.Types = Types;",""],"l":{"7":1,"11":1,"12":0,"13":0,"15":0,"18":1,"19":0,"22":1,"23":0,"24":0,"26":0,"28":1,"29":0,"32":1,"33":0,"34":0,"36":0,"38":1,"39":0,"42":1,"43":2,"45":2,"46":6,"49":2,"50":2,"51":22,"52":22,"53":22,"54":24,"58":2,"59":2,"60":2,"62":2,"63":2,"64":2,"65":2,"66":2,"67":2,"68":2,"69":2,"72":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/hooks.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/hooks.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":1,"39":0,"40":1,"41":0,"42":1,"43":1,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0},"b":{"1":[1,1],"2":[1,1],"3":[0,1],"4":[0,0],"5":[0,0],"6":[0,1],"7":[0,0],"8":[0,0],"9":[0,1],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,1],"14":[0,1],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":1,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"Hookable","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":20}}},"2":{"name":"trigger","line":40,"loc":{"start":{"line":40,"column":29},"end":{"line":40,"column":80}}},"3":{"name":"(anonymous_3)","line":63,"loc":{"start":{"line":63,"column":28},"end":{"line":63,"column":39}}},"4":{"name":"next","line":79,"loc":{"start":{"line":79,"column":2},"end":{"line":79,"column":22}}},"5":{"name":"capitalize","line":88,"loc":{"start":{"line":88,"column":0},"end":{"line":88,"column":28}}},"6":{"name":"deprecateHook","line":92,"loc":{"start":{"line":92,"column":0},"end":{"line":92,"column":56}}},"7":{"name":"(anonymous_7)","line":93,"loc":{"start":{"line":93,"column":36},"end":{"line":93,"column":48}}},"8":{"name":"(anonymous_8)","line":97,"loc":{"start":{"line":97,"column":39},"end":{"line":97,"column":54}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":64}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":26}},"4":{"start":{"line":21,"column":0},"end":{"line":22,"column":1}},"5":{"start":{"line":27,"column":0},"end":{"line":27,"column":32}},"6":{"start":{"line":28,"column":0},"end":{"line":28,"column":31}},"7":{"start":{"line":29,"column":0},"end":{"line":29,"column":30}},"8":{"start":{"line":30,"column":0},"end":{"line":30,"column":27}},"9":{"start":{"line":31,"column":0},"end":{"line":31,"column":26}},"10":{"start":{"line":32,"column":0},"end":{"line":32,"column":29}},"11":{"start":{"line":33,"column":0},"end":{"line":33,"column":28}},"12":{"start":{"line":34,"column":0},"end":{"line":34,"column":29}},"13":{"start":{"line":35,"column":0},"end":{"line":35,"column":28}},"14":{"start":{"line":36,"column":0},"end":{"line":36,"column":30}},"15":{"start":{"line":37,"column":0},"end":{"line":37,"column":29}},"16":{"start":{"line":40,"column":0},"end":{"line":86,"column":2}},"17":{"start":{"line":41,"column":2},"end":{"line":41,"column":47}},"18":{"start":{"line":42,"column":2},"end":{"line":43,"column":46}},"19":{"start":{"line":44,"column":2},"end":{"line":45,"column":47}},"20":{"start":{"line":46,"column":2},"end":{"line":49,"column":3}},"21":{"start":{"line":47,"column":4},"end":{"line":47,"column":65}},"22":{"start":{"line":48,"column":4},"end":{"line":48,"column":62}},"23":{"start":{"line":50,"column":2},"end":{"line":50,"column":18}},"24":{"start":{"line":52,"column":2},"end":{"line":57,"column":3}},"25":{"start":{"line":53,"column":4},"end":{"line":54,"column":74}},"26":{"start":{"line":54,"column":6},"end":{"line":54,"column":74}},"27":{"start":{"line":55,"column":4},"end":{"line":56,"column":74}},"28":{"start":{"line":56,"column":6},"end":{"line":56,"column":74}},"29":{"start":{"line":60,"column":2},"end":{"line":77,"column":3}},"30":{"start":{"line":61,"column":4},"end":{"line":74,"column":5}},"31":{"start":{"line":63,"column":6},"end":{"line":71,"column":15}},"32":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"33":{"start":{"line":66,"column":10},"end":{"line":66,"column":61}},"34":{"start":{"line":70,"column":8},"end":{"line":70,"column":30}},"35":{"start":{"line":73,"column":6},"end":{"line":73,"column":28}},"36":{"start":{"line":76,"column":4},"end":{"line":76,"column":11}},"37":{"start":{"line":79,"column":2},"end":{"line":85,"column":3}},"38":{"start":{"line":80,"column":4},"end":{"line":84,"column":5}},"39":{"start":{"line":81,"column":6},"end":{"line":81,"column":33}},"40":{"start":{"line":82,"column":11},"end":{"line":84,"column":5}},"41":{"start":{"line":83,"column":6},"end":{"line":83,"column":22}},"42":{"start":{"line":88,"column":0},"end":{"line":90,"column":1}},"43":{"start":{"line":89,"column":2},"end":{"line":89,"column":58}},"44":{"start":{"line":92,"column":0},"end":{"line":103,"column":1}},"45":{"start":{"line":93,"column":2},"end":{"line":93,"column":81}},"46":{"start":{"line":93,"column":50},"end":{"line":93,"column":77}},"47":{"start":{"line":94,"column":2},"end":{"line":95,"column":52}},"48":{"start":{"line":95,"column":4},"end":{"line":95,"column":52}},"49":{"start":{"line":97,"column":2},"end":{"line":97,"column":83}},"50":{"start":{"line":97,"column":56},"end":{"line":97,"column":76}},"51":{"start":{"line":98,"column":2},"end":{"line":98,"column":24}},"52":{"start":{"line":98,"column":17},"end":{"line":98,"column":24}},"53":{"start":{"line":99,"column":2},"end":{"line":99,"column":66}},"54":{"start":{"line":99,"column":22},"end":{"line":99,"column":66}},"55":{"start":{"line":100,"column":2},"end":{"line":102,"column":76}}},"branchMap":{"1":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":19},"end":{"line":42,"column":63}},{"start":{"line":43,"column":4},"end":{"line":43,"column":45}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":18},"end":{"line":44,"column":61}},{"start":{"line":45,"column":4},"end":{"line":45,"column":46}}]},"3":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"4":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":17},"end":{"line":47,"column":27}},{"start":{"line":47,"column":31},"end":{"line":47,"column":64}}]},"5":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":16},"end":{"line":48,"column":25}},{"start":{"line":48,"column":29},"end":{"line":48,"column":61}}]},"6":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"7":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"9":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]},"10":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"11":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"12":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":17},"end":{"line":66,"column":25}},{"start":{"line":66,"column":29},"end":{"line":66,"column":60}}]},"13":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"14":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":11},"end":{"line":82,"column":11}},{"start":{"line":82,"column":11},"end":{"line":82,"column":11}}]},"15":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":2},"end":{"line":94,"column":2}},{"start":{"line":94,"column":2},"end":{"line":94,"column":2}}]},"16":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"17":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]}},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","var deprecated = require('depd')('loopback-datasource-juggler');","var g = require('strong-globalize')();","","/*!"," * Module exports"," */","module.exports = Hookable;","","/*"," * Hooks object."," * @class Hookable"," */","","function Hookable() {","}","","/**"," * List of hooks available"," */","Hookable.afterInitialize = null;","Hookable.beforeValidate = null;","Hookable.afterValidate = null;","Hookable.beforeSave = null;","Hookable.afterSave = null;","Hookable.beforeCreate = null;","Hookable.afterCreate = null;","Hookable.beforeUpdate = null;","Hookable.afterUpdate = null;","Hookable.beforeDestroy = null;","Hookable.afterDestroy = null;","","// TODO: Evaluate https://github.com/bnoguchi/hooks-js/","Hookable.prototype.trigger = function trigger(actionName, work, data, callback) {","  var capitalizedName = capitalize(actionName);","  var beforeHook = this.constructor['before' + capitalizedName] ||","    this.constructor['pre' + capitalizedName];","  var afterHook = this.constructor['after' + capitalizedName] ||","    this.constructor['post' + capitalizedName];","  if (actionName === 'validate') {","    beforeHook = beforeHook || this.constructor.beforeValidation;","    afterHook = afterHook || this.constructor.afterValidation;","  }","  var inst = this;","","  if (actionName !== 'initialize') {","    if (beforeHook)","      deprecateHook(inst.constructor, ['before', 'pre'], capitalizedName);","    if (afterHook)","      deprecateHook(inst.constructor, ['after', 'post'], capitalizedName);","  }","","  // we only call \"before\" hook when we have actual action (work) to perform","  if (work) {","    if (beforeHook) {","      // before hook should be called on instance with two parameters: next and data","      beforeHook.call(inst, function() {","        // Check arguments to next(err, result)","        if (arguments.length) {","          return callback && callback.apply(null, arguments);","        }","        // No err & result is present, proceed with the real work","        // actual action also have one param: callback","        work.call(inst, next);","      }, data);","    } else {","      work.call(inst, next);","    }","  } else {","    next();","  }","","  function next(done) {","    if (afterHook) {","      afterHook.call(inst, done);","    } else if (done) {","      done.call(this);","    }","  }","};","","function capitalize(string) {","  return string.charAt(0).toUpperCase() + string.slice(1);","}","","function deprecateHook(ctor, prefixes, capitalizedName) {","  var candidateNames = prefixes.map(function(p) { return p + capitalizedName; });","  if (capitalizedName === 'Validate')","    candidateNames.push(prefixes[0] + 'Validation');","","  var hookName = candidateNames.filter(function(hook) { return !!ctor[hook]; })[0];","  if (!hookName) return; // just to be sure, this should never happen","  if (ctor.modelName) hookName  = ctor.modelName + '.' + hookName;","  deprecated(g.f('Model hook \"%s\" is deprecated, ' +","    'use Operation hooks instead. ' +","    '{{http://docs.strongloop.com/display/LB/Operation+hooks}}', hookName));","}",""],"l":{"8":1,"9":1,"14":1,"21":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"40":1,"41":1,"42":1,"44":1,"46":1,"47":0,"48":0,"50":1,"52":1,"53":0,"54":0,"55":0,"56":0,"60":1,"61":0,"63":0,"65":0,"66":0,"70":0,"73":0,"76":1,"79":1,"80":1,"81":0,"82":1,"83":0,"88":1,"89":1,"92":1,"93":0,"94":0,"95":0,"97":0,"98":0,"99":0,"100":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/validations.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/validations.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":1,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":1,"89":10,"90":12,"91":12,"92":12,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":1,"144":0,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":1,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":1,"203":1,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":1,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":1,"226":12,"227":5,"228":12,"229":12,"230":12,"231":12,"232":0,"233":12,"234":1,"235":12,"236":12,"237":12,"238":12,"239":12,"240":12,"241":12,"242":1,"243":0,"244":1,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":1,"252":0,"253":0,"254":0,"255":1,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":1,"268":1,"269":1,"270":1,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":1,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":1,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0,0,0],"34":[12,8],"35":[0,0],"36":[0,0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[5,7],"92":[12,0],"93":[1,11],"94":[12,1],"95":[12,0],"96":[12,9],"97":[12,9],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":10,"14":12,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":12,"33":12,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},"fnMap":{"1":{"name":"Validatable","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":23}}},"2":{"name":"validatePresence","line":251,"loc":{"start":{"line":251,"column":0},"end":{"line":251,"column":52}}},"3":{"name":"validateAbsence","line":260,"loc":{"start":{"line":260,"column":0},"end":{"line":260,"column":51}}},"4":{"name":"validateLength","line":269,"loc":{"start":{"line":269,"column":0},"end":{"line":269,"column":50}}},"5":{"name":"validateNumericality","line":287,"loc":{"start":{"line":287,"column":0},"end":{"line":287,"column":56}}},"6":{"name":"validateInclusion","line":301,"loc":{"start":{"line":301,"column":0},"end":{"line":301,"column":53}}},"7":{"name":"validateExclusion","line":312,"loc":{"start":{"line":312,"column":0},"end":{"line":312,"column":53}}},"8":{"name":"validateFormat","line":323,"loc":{"start":{"line":323,"column":0},"end":{"line":323,"column":50}}},"9":{"name":"validateCustom","line":338,"loc":{"start":{"line":338,"column":0},"end":{"line":338,"column":56}}},"10":{"name":"validateUniqueness","line":349,"loc":{"start":{"line":349,"column":0},"end":{"line":349,"column":60}}},"11":{"name":"(anonymous_11)","line":361,"loc":{"start":{"line":361,"column":26},"end":{"line":361,"column":38}}},"12":{"name":"(anonymous_12)","line":370,"loc":{"start":{"line":370,"column":39},"end":{"line":370,"column":62}}},"13":{"name":"getConfigurator","line":398,"loc":{"start":{"line":398,"column":0},"end":{"line":398,"column":37}}},"14":{"name":"(anonymous_14)","line":399,"loc":{"start":{"line":399,"column":9},"end":{"line":399,"column":20}}},"15":{"name":"(anonymous_15)","line":438,"loc":{"start":{"line":438,"column":32},"end":{"line":438,"column":66}}},"16":{"name":"(anonymous_16)","line":450,"loc":{"start":{"line":450,"column":31},"end":{"line":450,"column":57}}},"17":{"name":"(anonymous_17)","line":451,"loc":{"start":{"line":451,"column":35},"end":{"line":451,"column":46}}},"18":{"name":"(anonymous_18)","line":465,"loc":{"start":{"line":465,"column":27},"end":{"line":465,"column":53}}},"19":{"name":"(anonymous_19)","line":471,"loc":{"start":{"line":471,"column":18},"end":{"line":471,"column":33}}},"20":{"name":"(anonymous_20)","line":473,"loc":{"start":{"line":473,"column":30},"end":{"line":473,"column":42}}},"21":{"name":"(anonymous_21)","line":477,"loc":{"start":{"line":477,"column":27},"end":{"line":477,"column":38}}},"22":{"name":"(anonymous_22)","line":499,"loc":{"start":{"line":499,"column":33},"end":{"line":499,"column":44}}},"23":{"name":"done","line":507,"loc":{"start":{"line":507,"column":4},"end":{"line":507,"column":24}}},"24":{"name":"(anonymous_24)","line":510,"loc":{"start":{"line":510,"column":35},"end":{"line":510,"column":46}}},"25":{"name":"cleanErrors","line":529,"loc":{"start":{"line":529,"column":0},"end":{"line":529,"column":27}}},"26":{"name":"validationFailed","line":537,"loc":{"start":{"line":537,"column":0},"end":{"line":537,"column":57}}},"27":{"name":"onerror","line":560,"loc":{"start":{"line":560,"column":26},"end":{"line":560,"column":49}}},"28":{"name":"(anonymous_28)","line":587,"loc":{"start":{"line":587,"column":28},"end":{"line":587,"column":39}}},"29":{"name":"skipValidation","line":595,"loc":{"start":{"line":595,"column":0},"end":{"line":595,"column":42}}},"30":{"name":"nullCheck","line":644,"loc":{"start":{"line":644,"column":0},"end":{"line":644,"column":36}}},"31":{"name":"blank","line":670,"loc":{"start":{"line":670,"column":0},"end":{"line":670,"column":18}}},"32":{"name":"configure","line":679,"loc":{"start":{"line":679,"column":0},"end":{"line":679,"column":48}}},"33":{"name":"(anonymous_33)","line":699,"loc":{"start":{"line":699,"column":15},"end":{"line":699,"column":30}}},"34":{"name":"Errors","line":709,"loc":{"start":{"line":709,"column":0},"end":{"line":709,"column":18}}},"35":{"name":"(anonymous_35)","line":717,"loc":{"start":{"line":717,"column":23},"end":{"line":717,"column":54}}},"36":{"name":"ErrorCodes","line":727,"loc":{"start":{"line":727,"column":0},"end":{"line":727,"column":30}}},"37":{"name":"(anonymous_37)","line":729,"loc":{"start":{"line":729,"column":32},"end":{"line":729,"column":48}}},"38":{"name":"ValidationError","line":784,"loc":{"start":{"line":784,"column":0},"end":{"line":784,"column":30}}},"39":{"name":"formatErrors","line":821,"loc":{"start":{"line":821,"column":0},"end":{"line":821,"column":46}}},"40":{"name":"(anonymous_40)","line":825,"loc":{"start":{"line":825,"column":12},"end":{"line":825,"column":35}}},"41":{"name":"(anonymous_41)","line":828,"loc":{"start":{"line":828,"column":9},"end":{"line":828,"column":32}}},"42":{"name":"(anonymous_42)","line":831,"loc":{"start":{"line":831,"column":26},"end":{"line":831,"column":40}}},"43":{"name":"formatPropertyError","line":838,"loc":{"start":{"line":838,"column":0},"end":{"line":838,"column":72}}},"44":{"name":"truncatePropertyString","line":861,"loc":{"start":{"line":861,"column":0},"end":{"line":861,"column":39}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":26}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":42}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}},"6":{"start":{"line":30,"column":0},"end":{"line":31,"column":1}},"7":{"start":{"line":54,"column":0},"end":{"line":54,"column":62}},"8":{"start":{"line":68,"column":0},"end":{"line":68,"column":60}},"9":{"start":{"line":99,"column":0},"end":{"line":99,"column":58}},"10":{"start":{"line":118,"column":0},"end":{"line":118,"column":70}},"11":{"start":{"line":138,"column":0},"end":{"line":138,"column":64}},"12":{"start":{"line":151,"column":0},"end":{"line":151,"column":64}},"13":{"start":{"line":165,"column":0},"end":{"line":165,"column":58}},"14":{"start":{"line":187,"column":0},"end":{"line":187,"column":49}},"15":{"start":{"line":219,"column":0},"end":{"line":219,"column":69}},"16":{"start":{"line":244,"column":0},"end":{"line":244,"column":81}},"17":{"start":{"line":251,"column":0},"end":{"line":255,"column":1}},"18":{"start":{"line":252,"column":2},"end":{"line":254,"column":3}},"19":{"start":{"line":253,"column":4},"end":{"line":253,"column":10}},"20":{"start":{"line":260,"column":0},"end":{"line":264,"column":1}},"21":{"start":{"line":261,"column":2},"end":{"line":263,"column":3}},"22":{"start":{"line":262,"column":4},"end":{"line":262,"column":10}},"23":{"start":{"line":269,"column":0},"end":{"line":282,"column":1}},"24":{"start":{"line":270,"column":2},"end":{"line":270,"column":52}},"25":{"start":{"line":270,"column":45},"end":{"line":270,"column":52}},"26":{"start":{"line":272,"column":2},"end":{"line":272,"column":30}},"27":{"start":{"line":273,"column":2},"end":{"line":275,"column":3}},"28":{"start":{"line":274,"column":4},"end":{"line":274,"column":15}},"29":{"start":{"line":276,"column":2},"end":{"line":278,"column":3}},"30":{"start":{"line":277,"column":4},"end":{"line":277,"column":15}},"31":{"start":{"line":279,"column":2},"end":{"line":281,"column":3}},"32":{"start":{"line":280,"column":4},"end":{"line":280,"column":14}},"33":{"start":{"line":287,"column":0},"end":{"line":296,"column":1}},"34":{"start":{"line":288,"column":2},"end":{"line":288,"column":52}},"35":{"start":{"line":288,"column":45},"end":{"line":288,"column":52}},"36":{"start":{"line":290,"column":2},"end":{"line":292,"column":3}},"37":{"start":{"line":291,"column":4},"end":{"line":291,"column":25}},"38":{"start":{"line":293,"column":2},"end":{"line":295,"column":3}},"39":{"start":{"line":294,"column":4},"end":{"line":294,"column":22}},"40":{"start":{"line":301,"column":0},"end":{"line":307,"column":1}},"41":{"start":{"line":302,"column":2},"end":{"line":302,"column":52}},"42":{"start":{"line":302,"column":45},"end":{"line":302,"column":52}},"43":{"start":{"line":304,"column":2},"end":{"line":306,"column":3}},"44":{"start":{"line":305,"column":4},"end":{"line":305,"column":10}},"45":{"start":{"line":312,"column":0},"end":{"line":318,"column":1}},"46":{"start":{"line":313,"column":2},"end":{"line":313,"column":52}},"47":{"start":{"line":313,"column":45},"end":{"line":313,"column":52}},"48":{"start":{"line":315,"column":2},"end":{"line":317,"column":3}},"49":{"start":{"line":316,"column":4},"end":{"line":316,"column":10}},"50":{"start":{"line":323,"column":0},"end":{"line":333,"column":1}},"51":{"start":{"line":324,"column":2},"end":{"line":324,"column":52}},"52":{"start":{"line":324,"column":45},"end":{"line":324,"column":52}},"53":{"start":{"line":326,"column":2},"end":{"line":332,"column":3}},"54":{"start":{"line":327,"column":4},"end":{"line":329,"column":5}},"55":{"start":{"line":328,"column":6},"end":{"line":328,"column":12}},"56":{"start":{"line":331,"column":4},"end":{"line":331,"column":10}},"57":{"start":{"line":338,"column":0},"end":{"line":344,"column":1}},"58":{"start":{"line":339,"column":2},"end":{"line":342,"column":3}},"59":{"start":{"line":340,"column":4},"end":{"line":340,"column":19}},"60":{"start":{"line":341,"column":4},"end":{"line":341,"column":17}},"61":{"start":{"line":343,"column":2},"end":{"line":343,"column":45}},"62":{"start":{"line":349,"column":0},"end":{"line":384,"column":1}},"63":{"start":{"line":350,"column":2},"end":{"line":353,"column":3}},"64":{"start":{"line":351,"column":4},"end":{"line":351,"column":19}},"65":{"start":{"line":352,"column":4},"end":{"line":352,"column":17}},"66":{"start":{"line":354,"column":2},"end":{"line":356,"column":3}},"67":{"start":{"line":355,"column":4},"end":{"line":355,"column":34}},"68":{"start":{"line":357,"column":2},"end":{"line":357,"column":25}},"69":{"start":{"line":358,"column":2},"end":{"line":358,"column":32}},"70":{"start":{"line":360,"column":2},"end":{"line":366,"column":3}},"71":{"start":{"line":361,"column":4},"end":{"line":365,"column":13}},"72":{"start":{"line":362,"column":6},"end":{"line":362,"column":24}},"73":{"start":{"line":363,"column":6},"end":{"line":364,"column":32}},"74":{"start":{"line":364,"column":8},"end":{"line":364,"column":32}},"75":{"start":{"line":368,"column":2},"end":{"line":368,"column":52}},"76":{"start":{"line":369,"column":2},"end":{"line":369,"column":39}},"77":{"start":{"line":370,"column":2},"end":{"line":383,"column":16}},"78":{"start":{"line":371,"column":4},"end":{"line":381,"column":5}},"79":{"start":{"line":372,"column":6},"end":{"line":372,"column":17}},"80":{"start":{"line":373,"column":11},"end":{"line":381,"column":5}},"81":{"start":{"line":374,"column":6},"end":{"line":374,"column":12}},"82":{"start":{"line":375,"column":11},"end":{"line":381,"column":5}},"83":{"start":{"line":376,"column":6},"end":{"line":376,"column":12}},"84":{"start":{"line":377,"column":11},"end":{"line":381,"column":5}},"85":{"start":{"line":380,"column":6},"end":{"line":380,"column":12}},"86":{"start":{"line":382,"column":4},"end":{"line":382,"column":11}},"87":{"start":{"line":386,"column":0},"end":{"line":396,"column":2}},"88":{"start":{"line":398,"column":0},"end":{"line":404,"column":1}},"89":{"start":{"line":399,"column":2},"end":{"line":403,"column":4}},"90":{"start":{"line":400,"column":4},"end":{"line":400,"column":53}},"91":{"start":{"line":401,"column":4},"end":{"line":401,"column":28}},"92":{"start":{"line":402,"column":4},"end":{"line":402,"column":38}},"93":{"start":{"line":438,"column":0},"end":{"line":527,"column":2}},"94":{"start":{"line":439,"column":2},"end":{"line":439,"column":26}},"95":{"start":{"line":440,"column":2},"end":{"line":440,"column":57}},"96":{"start":{"line":441,"column":2},"end":{"line":441,"column":49}},"97":{"start":{"line":443,"column":2},"end":{"line":444,"column":64}},"98":{"start":{"line":447,"column":2},"end":{"line":457,"column":3}},"99":{"start":{"line":448,"column":4},"end":{"line":448,"column":22}},"100":{"start":{"line":449,"column":4},"end":{"line":455,"column":5}},"101":{"start":{"line":450,"column":6},"end":{"line":454,"column":25}},"102":{"start":{"line":451,"column":8},"end":{"line":453,"column":11}},"103":{"start":{"line":452,"column":10},"end":{"line":452,"column":26}},"104":{"start":{"line":456,"column":4},"end":{"line":456,"column":17}},"105":{"start":{"line":459,"column":2},"end":{"line":463,"column":5}},"106":{"start":{"line":465,"column":2},"end":{"line":518,"column":21}},"107":{"start":{"line":466,"column":4},"end":{"line":467,"column":24}},"108":{"start":{"line":469,"column":4},"end":{"line":469,"column":47}},"109":{"start":{"line":471,"column":4},"end":{"line":486,"column":7}},"110":{"start":{"line":472,"column":6},"end":{"line":472,"column":52}},"111":{"start":{"line":473,"column":6},"end":{"line":485,"column":9}},"112":{"start":{"line":474,"column":8},"end":{"line":484,"column":9}},"113":{"start":{"line":475,"column":10},"end":{"line":475,"column":23}},"114":{"start":{"line":476,"column":10},"end":{"line":476,"column":20}},"115":{"start":{"line":477,"column":10},"end":{"line":479,"column":13}},"116":{"start":{"line":478,"column":12},"end":{"line":478,"column":59}},"117":{"start":{"line":481,"column":10},"end":{"line":483,"column":11}},"118":{"start":{"line":482,"column":12},"end":{"line":482,"column":26}},"119":{"start":{"line":488,"column":4},"end":{"line":496,"column":5}},"120":{"start":{"line":489,"column":6},"end":{"line":495,"column":7}},"121":{"start":{"line":490,"column":8},"end":{"line":490,"column":47}},"122":{"start":{"line":491,"column":8},"end":{"line":491,"column":38}},"123":{"start":{"line":492,"column":8},"end":{"line":492,"column":40}},"124":{"start":{"line":493,"column":8},"end":{"line":493,"column":40}},"125":{"start":{"line":494,"column":8},"end":{"line":494,"column":22}},"126":{"start":{"line":498,"column":4},"end":{"line":505,"column":5}},"127":{"start":{"line":499,"column":6},"end":{"line":504,"column":9}},"128":{"start":{"line":500,"column":8},"end":{"line":500,"column":37}},"129":{"start":{"line":500,"column":19},"end":{"line":500,"column":37}},"130":{"start":{"line":501,"column":8},"end":{"line":503,"column":9}},"131":{"start":{"line":502,"column":10},"end":{"line":502,"column":26}},"132":{"start":{"line":507,"column":4},"end":{"line":517,"column":5}},"133":{"start":{"line":508,"column":6},"end":{"line":508,"column":36}},"134":{"start":{"line":509,"column":6},"end":{"line":516,"column":7}},"135":{"start":{"line":510,"column":8},"end":{"line":515,"column":11}},"136":{"start":{"line":511,"column":10},"end":{"line":511,"column":53}},"137":{"start":{"line":511,"column":35},"end":{"line":511,"column":53}},"138":{"start":{"line":512,"column":10},"end":{"line":514,"column":11}},"139":{"start":{"line":513,"column":12},"end":{"line":513,"column":42}},"140":{"start":{"line":520,"column":2},"end":{"line":526,"column":3}},"141":{"start":{"line":523,"column":4},"end":{"line":523,"column":11}},"142":{"start":{"line":525,"column":4},"end":{"line":525,"column":17}},"143":{"start":{"line":529,"column":0},"end":{"line":535,"column":1}},"144":{"start":{"line":530,"column":2},"end":{"line":534,"column":5}},"145":{"start":{"line":537,"column":0},"end":{"line":593,"column":1}},"146":{"start":{"line":538,"column":2},"end":{"line":538,"column":32}},"147":{"start":{"line":540,"column":2},"end":{"line":543,"column":3}},"148":{"start":{"line":541,"column":4},"end":{"line":541,"column":17}},"149":{"start":{"line":542,"column":4},"end":{"line":542,"column":17}},"150":{"start":{"line":545,"column":2},"end":{"line":545,"column":45}},"151":{"start":{"line":545,"column":32},"end":{"line":545,"column":45}},"152":{"start":{"line":549,"column":2},"end":{"line":553,"column":3}},"153":{"start":{"line":551,"column":4},"end":{"line":551,"column":22}},"154":{"start":{"line":551,"column":12},"end":{"line":551,"column":22}},"155":{"start":{"line":552,"column":4},"end":{"line":552,"column":17}},"156":{"start":{"line":555,"column":2},"end":{"line":555,"column":19}},"157":{"start":{"line":556,"column":2},"end":{"line":556,"column":46}},"158":{"start":{"line":557,"column":2},"end":{"line":557,"column":30}},"159":{"start":{"line":558,"column":2},"end":{"line":558,"column":32}},"160":{"start":{"line":559,"column":2},"end":{"line":559,"column":32}},"161":{"start":{"line":560,"column":2},"end":{"line":584,"column":5}},"162":{"start":{"line":561,"column":4},"end":{"line":561,"column":53}},"163":{"start":{"line":562,"column":4},"end":{"line":564,"column":5}},"164":{"start":{"line":563,"column":6},"end":{"line":563,"column":29}},"165":{"start":{"line":565,"column":4},"end":{"line":567,"column":5}},"166":{"start":{"line":566,"column":6},"end":{"line":566,"column":49}},"167":{"start":{"line":568,"column":4},"end":{"line":570,"column":5}},"168":{"start":{"line":569,"column":6},"end":{"line":569,"column":29}},"169":{"start":{"line":571,"column":4},"end":{"line":581,"column":5}},"170":{"start":{"line":572,"column":6},"end":{"line":572,"column":25}},"171":{"start":{"line":573,"column":6},"end":{"line":580,"column":7}},"172":{"start":{"line":575,"column":8},"end":{"line":575,"column":32}},"173":{"start":{"line":576,"column":13},"end":{"line":580,"column":7}},"174":{"start":{"line":577,"column":8},"end":{"line":577,"column":47}},"175":{"start":{"line":579,"column":8},"end":{"line":579,"column":31}},"176":{"start":{"line":582,"column":4},"end":{"line":582,"column":61}},"177":{"start":{"line":582,"column":24},"end":{"line":582,"column":61}},"178":{"start":{"line":583,"column":4},"end":{"line":583,"column":16}},"179":{"start":{"line":585,"column":2},"end":{"line":585,"column":35}},"180":{"start":{"line":586,"column":2},"end":{"line":590,"column":3}},"181":{"start":{"line":587,"column":4},"end":{"line":589,"column":7}},"182":{"start":{"line":588,"column":6},"end":{"line":588,"column":15}},"183":{"start":{"line":591,"column":2},"end":{"line":591,"column":44}},"184":{"start":{"line":592,"column":2},"end":{"line":592,"column":14}},"185":{"start":{"line":595,"column":0},"end":{"line":612,"column":1}},"186":{"start":{"line":596,"column":2},"end":{"line":596,"column":24}},"187":{"start":{"line":597,"column":2},"end":{"line":610,"column":3}},"188":{"start":{"line":598,"column":4},"end":{"line":598,"column":39}},"189":{"start":{"line":599,"column":4},"end":{"line":599,"column":52}},"190":{"start":{"line":599,"column":27},"end":{"line":599,"column":52}},"191":{"start":{"line":600,"column":9},"end":{"line":610,"column":3}},"192":{"start":{"line":601,"column":4},"end":{"line":609,"column":5}},"193":{"start":{"line":602,"column":6},"end":{"line":602,"column":47}},"194":{"start":{"line":603,"column":6},"end":{"line":603,"column":54}},"195":{"start":{"line":603,"column":29},"end":{"line":603,"column":54}},"196":{"start":{"line":604,"column":11},"end":{"line":609,"column":5}},"197":{"start":{"line":605,"column":6},"end":{"line":605,"column":36}},"198":{"start":{"line":606,"column":6},"end":{"line":606,"column":54}},"199":{"start":{"line":606,"column":29},"end":{"line":606,"column":54}},"200":{"start":{"line":608,"column":6},"end":{"line":608,"column":33}},"201":{"start":{"line":611,"column":2},"end":{"line":611,"column":21}},"202":{"start":{"line":614,"column":0},"end":{"line":634,"column":2}},"203":{"start":{"line":644,"column":0},"end":{"line":661,"column":1}},"204":{"start":{"line":646,"column":2},"end":{"line":659,"column":3}},"205":{"start":{"line":647,"column":4},"end":{"line":649,"column":5}},"206":{"start":{"line":648,"column":6},"end":{"line":648,"column":19}},"207":{"start":{"line":650,"column":4},"end":{"line":650,"column":16}},"208":{"start":{"line":653,"column":4},"end":{"line":658,"column":5}},"209":{"start":{"line":654,"column":6},"end":{"line":656,"column":7}},"210":{"start":{"line":655,"column":8},"end":{"line":655,"column":20}},"211":{"start":{"line":657,"column":6},"end":{"line":657,"column":18}},"212":{"start":{"line":660,"column":2},"end":{"line":660,"column":15}},"213":{"start":{"line":670,"column":0},"end":{"line":677,"column":1}},"214":{"start":{"line":671,"column":2},"end":{"line":671,"column":44}},"215":{"start":{"line":671,"column":32},"end":{"line":671,"column":44}},"216":{"start":{"line":672,"column":2},"end":{"line":672,"column":56}},"217":{"start":{"line":672,"column":44},"end":{"line":672,"column":56}},"218":{"start":{"line":673,"column":2},"end":{"line":673,"column":30}},"219":{"start":{"line":673,"column":18},"end":{"line":673,"column":30}},"220":{"start":{"line":674,"column":2},"end":{"line":674,"column":53}},"221":{"start":{"line":674,"column":41},"end":{"line":674,"column":53}},"222":{"start":{"line":675,"column":2},"end":{"line":675,"column":52}},"223":{"start":{"line":675,"column":40},"end":{"line":675,"column":52}},"224":{"start":{"line":676,"column":2},"end":{"line":676,"column":15}},"225":{"start":{"line":679,"column":0},"end":{"line":707,"column":1}},"226":{"start":{"line":680,"column":2},"end":{"line":687,"column":3}},"227":{"start":{"line":681,"column":4},"end":{"line":686,"column":7}},"228":{"start":{"line":688,"column":2},"end":{"line":688,"column":29}},"229":{"start":{"line":689,"column":2},"end":{"line":689,"column":11}},"230":{"start":{"line":690,"column":2},"end":{"line":694,"column":3}},"231":{"start":{"line":691,"column":4},"end":{"line":691,"column":22}},"232":{"start":{"line":693,"column":4},"end":{"line":693,"column":14}},"233":{"start":{"line":695,"column":2},"end":{"line":697,"column":3}},"234":{"start":{"line":696,"column":4},"end":{"line":696,"column":38}},"235":{"start":{"line":698,"column":2},"end":{"line":698,"column":31}},"236":{"start":{"line":699,"column":2},"end":{"line":706,"column":5}},"237":{"start":{"line":700,"column":4},"end":{"line":705,"column":5}},"238":{"start":{"line":701,"column":6},"end":{"line":701,"column":40}},"239":{"start":{"line":702,"column":6},"end":{"line":702,"column":38}},"240":{"start":{"line":703,"column":6},"end":{"line":703,"column":58}},"241":{"start":{"line":704,"column":6},"end":{"line":704,"column":45}},"242":{"start":{"line":709,"column":0},"end":{"line":715,"column":1}},"243":{"start":{"line":710,"column":2},"end":{"line":714,"column":5}},"244":{"start":{"line":717,"column":0},"end":{"line":725,"column":2}},"245":{"start":{"line":718,"column":2},"end":{"line":718,"column":27}},"246":{"start":{"line":719,"column":2},"end":{"line":722,"column":3}},"247":{"start":{"line":720,"column":4},"end":{"line":720,"column":21}},"248":{"start":{"line":721,"column":4},"end":{"line":721,"column":27}},"249":{"start":{"line":723,"column":2},"end":{"line":723,"column":28}},"250":{"start":{"line":724,"column":2},"end":{"line":724,"column":31}},"251":{"start":{"line":727,"column":0},"end":{"line":732,"column":1}},"252":{"start":{"line":728,"column":2},"end":{"line":728,"column":15}},"253":{"start":{"line":729,"column":2},"end":{"line":731,"column":5}},"254":{"start":{"line":730,"column":4},"end":{"line":730,"column":37}},"255":{"start":{"line":784,"column":0},"end":{"line":813,"column":1}},"256":{"start":{"line":785,"column":2},"end":{"line":785,"column":74}},"257":{"start":{"line":785,"column":42},"end":{"line":785,"column":74}},"258":{"start":{"line":787,"column":2},"end":{"line":787,"column":32}},"259":{"start":{"line":789,"column":2},"end":{"line":789,"column":68}},"260":{"start":{"line":790,"column":2},"end":{"line":794,"column":4}},"261":{"start":{"line":796,"column":2},"end":{"line":796,"column":24}},"262":{"start":{"line":798,"column":2},"end":{"line":802,"column":4}},"263":{"start":{"line":804,"column":2},"end":{"line":810,"column":3}},"264":{"start":{"line":806,"column":4},"end":{"line":806,"column":52}},"265":{"start":{"line":807,"column":9},"end":{"line":810,"column":3}},"266":{"start":{"line":809,"column":4},"end":{"line":809,"column":35}},"267":{"start":{"line":815,"column":0},"end":{"line":815,"column":38}},"268":{"start":{"line":817,"column":0},"end":{"line":817,"column":48}},"269":{"start":{"line":819,"column":0},"end":{"line":819,"column":45}},"270":{"start":{"line":821,"column":0},"end":{"line":836,"column":1}},"271":{"start":{"line":822,"column":2},"end":{"line":822,"column":19}},"272":{"start":{"line":823,"column":2},"end":{"line":823,"column":24}},"273":{"start":{"line":824,"column":2},"end":{"line":835,"column":17}},"274":{"start":{"line":826,"column":6},"end":{"line":826,"column":49}},"275":{"start":{"line":829,"column":6},"end":{"line":829,"column":42}},"276":{"start":{"line":830,"column":6},"end":{"line":830,"column":55}},"277":{"start":{"line":831,"column":6},"end":{"line":833,"column":21}},"278":{"start":{"line":832,"column":8},"end":{"line":832,"column":69}},"279":{"start":{"line":838,"column":0},"end":{"line":859,"column":1}},"280":{"start":{"line":839,"column":2},"end":{"line":839,"column":21}},"281":{"start":{"line":840,"column":2},"end":{"line":840,"column":39}},"282":{"start":{"line":841,"column":2},"end":{"line":856,"column":3}},"283":{"start":{"line":842,"column":4},"end":{"line":842,"column":75}},"284":{"start":{"line":843,"column":9},"end":{"line":856,"column":3}},"285":{"start":{"line":844,"column":4},"end":{"line":844,"column":49}},"286":{"start":{"line":845,"column":9},"end":{"line":856,"column":3}},"287":{"start":{"line":847,"column":4},"end":{"line":852,"column":7}},"288":{"start":{"line":853,"column":4},"end":{"line":853,"column":60}},"289":{"start":{"line":855,"column":4},"end":{"line":855,"column":64}},"290":{"start":{"line":857,"column":2},"end":{"line":858,"column":39}},"291":{"start":{"line":861,"column":0},"end":{"line":878,"column":1}},"292":{"start":{"line":862,"column":2},"end":{"line":862,"column":52}},"293":{"start":{"line":863,"column":2},"end":{"line":863,"column":40}},"294":{"start":{"line":863,"column":27},"end":{"line":863,"column":40}},"295":{"start":{"line":867,"column":2},"end":{"line":867,"column":11}},"296":{"start":{"line":868,"column":2},"end":{"line":868,"column":39}},"297":{"start":{"line":869,"column":2},"end":{"line":875,"column":3}},"298":{"start":{"line":870,"column":4},"end":{"line":870,"column":26}},"299":{"start":{"line":871,"column":4},"end":{"line":871,"column":23}},"300":{"start":{"line":873,"column":4},"end":{"line":873,"column":27}},"301":{"start":{"line":874,"column":4},"end":{"line":874,"column":13}},"302":{"start":{"line":877,"column":2},"end":{"line":877,"column":48}}},"branchMap":{"1":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":2},"end":{"line":252,"column":2}},{"start":{"line":252,"column":2},"end":{"line":252,"column":2}}]},"2":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":2},"end":{"line":261,"column":2}},{"start":{"line":261,"column":2},"end":{"line":261,"column":2}}]},"3":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":2},"end":{"line":270,"column":2}},{"start":{"line":270,"column":2},"end":{"line":270,"column":2}}]},"4":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":2},"end":{"line":273,"column":2}},{"start":{"line":273,"column":2},"end":{"line":273,"column":2}}]},"5":{"line":273,"type":"binary-expr","locations":[{"start":{"line":273,"column":6},"end":{"line":273,"column":14}},{"start":{"line":273,"column":18},"end":{"line":273,"column":32}}]},"6":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":2},"end":{"line":276,"column":2}},{"start":{"line":276,"column":2},"end":{"line":276,"column":2}}]},"7":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":6},"end":{"line":276,"column":14}},{"start":{"line":276,"column":18},"end":{"line":276,"column":32}}]},"8":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":2},"end":{"line":279,"column":2}},{"start":{"line":279,"column":2},"end":{"line":279,"column":2}}]},"9":{"line":279,"type":"binary-expr","locations":[{"start":{"line":279,"column":6},"end":{"line":279,"column":13}},{"start":{"line":279,"column":17},"end":{"line":279,"column":32}}]},"10":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":2},"end":{"line":288,"column":2}},{"start":{"line":288,"column":2},"end":{"line":288,"column":2}}]},"11":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":2},"end":{"line":290,"column":2}},{"start":{"line":290,"column":2},"end":{"line":290,"column":2}}]},"12":{"line":290,"type":"binary-expr","locations":[{"start":{"line":290,"column":6},"end":{"line":290,"column":36}},{"start":{"line":290,"column":40},"end":{"line":290,"column":57}}]},"13":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":2},"end":{"line":293,"column":2}},{"start":{"line":293,"column":2},"end":{"line":293,"column":2}}]},"14":{"line":293,"type":"binary-expr","locations":[{"start":{"line":293,"column":6},"end":{"line":293,"column":14}},{"start":{"line":293,"column":18},"end":{"line":293,"column":55}}]},"15":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":2},"end":{"line":302,"column":2}},{"start":{"line":302,"column":2},"end":{"line":302,"column":2}}]},"16":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":2},"end":{"line":304,"column":2}},{"start":{"line":304,"column":2},"end":{"line":304,"column":2}}]},"17":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":2},"end":{"line":313,"column":2}},{"start":{"line":313,"column":2},"end":{"line":313,"column":2}}]},"18":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":2},"end":{"line":315,"column":2}},{"start":{"line":315,"column":2},"end":{"line":315,"column":2}}]},"19":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":2},"end":{"line":324,"column":2}},{"start":{"line":324,"column":2},"end":{"line":324,"column":2}}]},"20":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":2},"end":{"line":326,"column":2}},{"start":{"line":326,"column":2},"end":{"line":326,"column":2}}]},"21":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":4},"end":{"line":327,"column":4}},{"start":{"line":327,"column":4},"end":{"line":327,"column":4}}]},"22":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":2},"end":{"line":339,"column":2}},{"start":{"line":339,"column":2},"end":{"line":339,"column":2}}]},"23":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":2},"end":{"line":350,"column":2}},{"start":{"line":350,"column":2},"end":{"line":350,"column":2}}]},"24":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":2},"end":{"line":354,"column":2}},{"start":{"line":354,"column":2},"end":{"line":354,"column":2}}]},"25":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":2},"end":{"line":360,"column":2}},{"start":{"line":360,"column":2},"end":{"line":360,"column":2}}]},"26":{"line":360,"type":"binary-expr","locations":[{"start":{"line":360,"column":6},"end":{"line":360,"column":10}},{"start":{"line":360,"column":14},"end":{"line":360,"column":27}}]},"27":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":6},"end":{"line":363,"column":6}},{"start":{"line":363,"column":6},"end":{"line":363,"column":6}}]},"28":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":4},"end":{"line":371,"column":4}},{"start":{"line":371,"column":4},"end":{"line":371,"column":4}}]},"29":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":11},"end":{"line":373,"column":11}},{"start":{"line":373,"column":11},"end":{"line":373,"column":11}}]},"30":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":11},"end":{"line":375,"column":11}},{"start":{"line":375,"column":11},"end":{"line":375,"column":11}}]},"31":{"line":375,"type":"binary-expr","locations":[{"start":{"line":375,"column":15},"end":{"line":375,"column":33}},{"start":{"line":375,"column":37},"end":{"line":375,"column":52}},{"start":{"line":375,"column":56},"end":{"line":375,"column":67}}]},"32":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":11},"end":{"line":377,"column":11}},{"start":{"line":377,"column":11},"end":{"line":377,"column":11}}]},"33":{"line":377,"type":"binary-expr","locations":[{"start":{"line":377,"column":15},"end":{"line":377,"column":33}},{"start":{"line":378,"column":6},"end":{"line":378,"column":14}},{"start":{"line":378,"column":18},"end":{"line":378,"column":30}},{"start":{"line":378,"column":34},"end":{"line":378,"column":78}}]},"34":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":14},"end":{"line":401,"column":21}},{"start":{"line":401,"column":25},"end":{"line":401,"column":27}}]},"35":{"line":439,"type":"binary-expr","locations":[{"start":{"line":439,"column":12},"end":{"line":439,"column":19}},{"start":{"line":439,"column":23},"end":{"line":439,"column":25}}]},"36":{"line":443,"type":"binary-expr","locations":[{"start":{"line":443,"column":34},"end":{"line":443,"column":47}},{"start":{"line":444,"column":4},"end":{"line":444,"column":28}},{"start":{"line":444,"column":32},"end":{"line":444,"column":63}}]},"37":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":2},"end":{"line":447,"column":2}},{"start":{"line":447,"column":2},"end":{"line":447,"column":2}}]},"38":{"line":447,"type":"binary-expr","locations":[{"start":{"line":447,"column":6},"end":{"line":447,"column":37}},{"start":{"line":447,"column":41},"end":{"line":447,"column":67}}]},"39":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":4},"end":{"line":449,"column":4}},{"start":{"line":449,"column":4},"end":{"line":449,"column":4}}]},"40":{"line":469,"type":"binary-expr","locations":[{"start":{"line":469,"column":28},"end":{"line":469,"column":39}},{"start":{"line":469,"column":43},"end":{"line":469,"column":45}}]},"41":{"line":472,"type":"binary-expr","locations":[{"start":{"line":472,"column":28},"end":{"line":472,"column":45}},{"start":{"line":472,"column":49},"end":{"line":472,"column":51}}]},"42":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":8},"end":{"line":474,"column":8}},{"start":{"line":474,"column":8},"end":{"line":474,"column":8}}]},"43":{"line":474,"type":"binary-expr","locations":[{"start":{"line":474,"column":12},"end":{"line":474,"column":21}},{"start":{"line":474,"column":25},"end":{"line":474,"column":40}}]},"44":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":10},"end":{"line":481,"column":10}},{"start":{"line":481,"column":10},"end":{"line":481,"column":10}}]},"45":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":4},"end":{"line":488,"column":4}},{"start":{"line":488,"column":4},"end":{"line":488,"column":4}}]},"46":{"line":498,"type":"if","locations":[{"start":{"line":498,"column":4},"end":{"line":498,"column":4}},{"start":{"line":498,"column":4},"end":{"line":498,"column":4}}]},"47":{"line":500,"type":"if","locations":[{"start":{"line":500,"column":8},"end":{"line":500,"column":8}},{"start":{"line":500,"column":8},"end":{"line":500,"column":8}}]},"48":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":8},"end":{"line":501,"column":8}},{"start":{"line":501,"column":8},"end":{"line":501,"column":8}}]},"49":{"line":508,"type":"binary-expr","locations":[{"start":{"line":508,"column":18},"end":{"line":508,"column":27}},{"start":{"line":508,"column":31},"end":{"line":508,"column":35}}]},"50":{"line":509,"type":"if","locations":[{"start":{"line":509,"column":6},"end":{"line":509,"column":6}},{"start":{"line":509,"column":6},"end":{"line":509,"column":6}}]},"51":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":10},"end":{"line":511,"column":10}},{"start":{"line":511,"column":10},"end":{"line":511,"column":10}}]},"52":{"line":511,"type":"binary-expr","locations":[{"start":{"line":511,"column":14},"end":{"line":511,"column":19}},{"start":{"line":511,"column":23},"end":{"line":511,"column":33}}]},"53":{"line":512,"type":"if","locations":[{"start":{"line":512,"column":10},"end":{"line":512,"column":10}},{"start":{"line":512,"column":10},"end":{"line":512,"column":10}}]},"54":{"line":513,"type":"binary-expr","locations":[{"start":{"line":513,"column":21},"end":{"line":513,"column":26}},{"start":{"line":513,"column":30},"end":{"line":513,"column":40}}]},"55":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":2},"end":{"line":520,"column":2}},{"start":{"line":520,"column":2},"end":{"line":520,"column":2}}]},"56":{"line":538,"type":"binary-expr","locations":[{"start":{"line":538,"column":13},"end":{"line":538,"column":25}},{"start":{"line":538,"column":29},"end":{"line":538,"column":31}}]},"57":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":2},"end":{"line":540,"column":2}},{"start":{"line":540,"column":2},"end":{"line":540,"column":2}}]},"58":{"line":545,"type":"if","locations":[{"start":{"line":545,"column":2},"end":{"line":545,"column":2}},{"start":{"line":545,"column":2},"end":{"line":545,"column":2}}]},"59":{"line":549,"type":"if","locations":[{"start":{"line":549,"column":2},"end":{"line":549,"column":2}},{"start":{"line":549,"column":2},"end":{"line":549,"column":2}}]},"60":{"line":549,"type":"binary-expr","locations":[{"start":{"line":549,"column":6},"end":{"line":549,"column":38}},{"start":{"line":550,"column":6},"end":{"line":550,"column":42}}]},"61":{"line":551,"type":"if","locations":[{"start":{"line":551,"column":4},"end":{"line":551,"column":4}},{"start":{"line":551,"column":4},"end":{"line":551,"column":4}}]},"62":{"line":561,"type":"binary-expr","locations":[{"start":{"line":561,"column":24},"end":{"line":561,"column":33}},{"start":{"line":561,"column":37},"end":{"line":561,"column":52}}]},"63":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":4},"end":{"line":562,"column":4}},{"start":{"line":562,"column":4},"end":{"line":562,"column":4}}]},"64":{"line":565,"type":"if","locations":[{"start":{"line":565,"column":4},"end":{"line":565,"column":4}},{"start":{"line":565,"column":4},"end":{"line":565,"column":4}}]},"65":{"line":565,"type":"binary-expr","locations":[{"start":{"line":565,"column":8},"end":{"line":565,"column":16}},{"start":{"line":565,"column":20},"end":{"line":565,"column":52}}]},"66":{"line":568,"type":"if","locations":[{"start":{"line":568,"column":4},"end":{"line":568,"column":4}},{"start":{"line":568,"column":4},"end":{"line":568,"column":4}}]},"67":{"line":571,"type":"if","locations":[{"start":{"line":571,"column":4},"end":{"line":571,"column":4}},{"start":{"line":571,"column":4},"end":{"line":571,"column":4}}]},"68":{"line":573,"type":"if","locations":[{"start":{"line":573,"column":6},"end":{"line":573,"column":6}},{"start":{"line":573,"column":6},"end":{"line":573,"column":6}}]},"69":{"line":576,"type":"if","locations":[{"start":{"line":576,"column":13},"end":{"line":576,"column":13}},{"start":{"line":576,"column":13},"end":{"line":576,"column":13}}]},"70":{"line":582,"type":"if","locations":[{"start":{"line":582,"column":4},"end":{"line":582,"column":4}},{"start":{"line":582,"column":4},"end":{"line":582,"column":4}}]},"71":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":2},"end":{"line":586,"column":2}},{"start":{"line":586,"column":2},"end":{"line":586,"column":2}}]},"72":{"line":597,"type":"if","locations":[{"start":{"line":597,"column":2},"end":{"line":597,"column":2}},{"start":{"line":597,"column":2},"end":{"line":597,"column":2}}]},"73":{"line":599,"type":"if","locations":[{"start":{"line":599,"column":4},"end":{"line":599,"column":4}},{"start":{"line":599,"column":4},"end":{"line":599,"column":4}}]},"74":{"line":600,"type":"if","locations":[{"start":{"line":600,"column":9},"end":{"line":600,"column":9}},{"start":{"line":600,"column":9},"end":{"line":600,"column":9}}]},"75":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":4},"end":{"line":601,"column":4}},{"start":{"line":601,"column":4},"end":{"line":601,"column":4}}]},"76":{"line":603,"type":"if","locations":[{"start":{"line":603,"column":6},"end":{"line":603,"column":6}},{"start":{"line":603,"column":6},"end":{"line":603,"column":6}}]},"77":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":11},"end":{"line":604,"column":11}},{"start":{"line":604,"column":11},"end":{"line":604,"column":11}}]},"78":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":6},"end":{"line":606,"column":6}},{"start":{"line":606,"column":6},"end":{"line":606,"column":6}}]},"79":{"line":646,"type":"if","locations":[{"start":{"line":646,"column":2},"end":{"line":646,"column":2}},{"start":{"line":646,"column":2},"end":{"line":646,"column":2}}]},"80":{"line":647,"type":"if","locations":[{"start":{"line":647,"column":4},"end":{"line":647,"column":4}},{"start":{"line":647,"column":4},"end":{"line":647,"column":4}}]},"81":{"line":653,"type":"if","locations":[{"start":{"line":653,"column":4},"end":{"line":653,"column":4}},{"start":{"line":653,"column":4},"end":{"line":653,"column":4}}]},"82":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":6},"end":{"line":654,"column":6}},{"start":{"line":654,"column":6},"end":{"line":654,"column":6}}]},"83":{"line":671,"type":"if","locations":[{"start":{"line":671,"column":2},"end":{"line":671,"column":2}},{"start":{"line":671,"column":2},"end":{"line":671,"column":2}}]},"84":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":2},"end":{"line":672,"column":2}},{"start":{"line":672,"column":2},"end":{"line":672,"column":2}}]},"85":{"line":672,"type":"binary-expr","locations":[{"start":{"line":672,"column":6},"end":{"line":672,"column":24}},{"start":{"line":672,"column":28},"end":{"line":672,"column":42}}]},"86":{"line":673,"type":"if","locations":[{"start":{"line":673,"column":2},"end":{"line":673,"column":2}},{"start":{"line":673,"column":2},"end":{"line":673,"column":2}}]},"87":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":2},"end":{"line":674,"column":2}},{"start":{"line":674,"column":2},"end":{"line":674,"column":2}}]},"88":{"line":674,"type":"binary-expr","locations":[{"start":{"line":674,"column":6},"end":{"line":674,"column":27}},{"start":{"line":674,"column":31},"end":{"line":674,"column":39}}]},"89":{"line":675,"type":"if","locations":[{"start":{"line":675,"column":2},"end":{"line":675,"column":2}},{"start":{"line":675,"column":2},"end":{"line":675,"column":2}}]},"90":{"line":675,"type":"binary-expr","locations":[{"start":{"line":675,"column":6},"end":{"line":675,"column":26}},{"start":{"line":675,"column":30},"end":{"line":675,"column":38}}]},"91":{"line":680,"type":"if","locations":[{"start":{"line":680,"column":2},"end":{"line":680,"column":2}},{"start":{"line":680,"column":2},"end":{"line":680,"column":2}}]},"92":{"line":690,"type":"if","locations":[{"start":{"line":690,"column":2},"end":{"line":690,"column":2}},{"start":{"line":690,"column":2},"end":{"line":690,"column":2}}]},"93":{"line":695,"type":"if","locations":[{"start":{"line":695,"column":2},"end":{"line":695,"column":2}},{"start":{"line":695,"column":2},"end":{"line":695,"column":2}}]},"94":{"line":695,"type":"binary-expr","locations":[{"start":{"line":695,"column":6},"end":{"line":695,"column":29}},{"start":{"line":695,"column":33},"end":{"line":695,"column":76}}]},"95":{"line":700,"type":"if","locations":[{"start":{"line":700,"column":4},"end":{"line":700,"column":4}},{"start":{"line":700,"column":4},"end":{"line":700,"column":4}}]},"96":{"line":702,"type":"binary-expr","locations":[{"start":{"line":702,"column":27},"end":{"line":702,"column":31}},{"start":{"line":702,"column":35},"end":{"line":702,"column":37}}]},"97":{"line":703,"type":"binary-expr","locations":[{"start":{"line":703,"column":30},"end":{"line":703,"column":51}},{"start":{"line":703,"column":55},"end":{"line":703,"column":57}}]},"98":{"line":718,"type":"binary-expr","locations":[{"start":{"line":718,"column":9},"end":{"line":718,"column":13}},{"start":{"line":718,"column":17},"end":{"line":718,"column":26}}]},"99":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":2},"end":{"line":719,"column":2}},{"start":{"line":719,"column":2},"end":{"line":719,"column":2}}]},"100":{"line":785,"type":"if","locations":[{"start":{"line":785,"column":2},"end":{"line":785,"column":2}},{"start":{"line":785,"column":2},"end":{"line":785,"column":2}}]},"101":{"line":789,"type":"binary-expr","locations":[{"start":{"line":789,"column":16},"end":{"line":789,"column":19}},{"start":{"line":789,"column":23},"end":{"line":789,"column":38}},{"start":{"line":789,"column":42},"end":{"line":789,"column":67}}]},"102":{"line":792,"type":"cond-expr","locations":[{"start":{"line":792,"column":16},"end":{"line":792,"column":35}},{"start":{"line":792,"column":38},"end":{"line":792,"column":45}}]},"103":{"line":793,"type":"binary-expr","locations":[{"start":{"line":793,"column":6},"end":{"line":793,"column":44}},{"start":{"line":793,"column":48},"end":{"line":793,"column":59}}]},"104":{"line":800,"type":"binary-expr","locations":[{"start":{"line":800,"column":11},"end":{"line":800,"column":21}},{"start":{"line":800,"column":25},"end":{"line":800,"column":41}}]},"105":{"line":804,"type":"if","locations":[{"start":{"line":804,"column":2},"end":{"line":804,"column":2}},{"start":{"line":804,"column":2},"end":{"line":804,"column":2}}]},"106":{"line":807,"type":"if","locations":[{"start":{"line":807,"column":9},"end":{"line":807,"column":9}},{"start":{"line":807,"column":9},"end":{"line":807,"column":9}}]},"107":{"line":823,"type":"binary-expr","locations":[{"start":{"line":823,"column":11},"end":{"line":823,"column":17}},{"start":{"line":823,"column":21},"end":{"line":823,"column":23}}]},"108":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":2},"end":{"line":841,"column":2}},{"start":{"line":841,"column":2},"end":{"line":841,"column":2}}]},"109":{"line":843,"type":"if","locations":[{"start":{"line":843,"column":9},"end":{"line":843,"column":9}},{"start":{"line":843,"column":9},"end":{"line":843,"column":9}}]},"110":{"line":845,"type":"if","locations":[{"start":{"line":845,"column":9},"end":{"line":845,"column":9}},{"start":{"line":845,"column":9},"end":{"line":845,"column":9}}]},"111":{"line":851,"type":"cond-expr","locations":[{"start":{"line":851,"column":44},"end":{"line":851,"column":45}},{"start":{"line":851,"column":48},"end":{"line":851,"column":49}}]},"112":{"line":863,"type":"if","locations":[{"start":{"line":863,"column":2},"end":{"line":863,"column":2}},{"start":{"line":863,"column":2},"end":{"line":863,"column":2}}]},"113":{"line":869,"type":"if","locations":[{"start":{"line":869,"column":2},"end":{"line":869,"column":2}},{"start":{"line":869,"column":2},"end":{"line":869,"column":2}}]}},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","var g = require('strong-globalize')();","var util = require('util');","var extend = util._extend;","","/*!"," * Module exports"," */","exports.ValidationError = ValidationError;","exports.Validatable = Validatable;","","/**"," * This class provides methods that add validation cababilities to models."," * Each of the validations runs when the `obj.isValid()` method is called."," *"," * All of the methods have an options object parameter that has a"," * `message` property.  When there is only a single error message, this property is just a string;"," * for example: `Post.validatesPresenceOf('title', { message: 'can not be blank' });`"," *"," * In more complicated cases it can be a set of messages, for each possible error condition; for example:"," * `User.validatesLengthOf('password', { min: 6, max: 20, message: {min: 'too short', max: 'too long'}});`"," * @class Validatable"," */","function Validatable() {","}","","/**"," * Validate presence of one or more specified properties."," * Requires a model to include a property to be considered valid; fails when validated field is blank."," *"," * For example, validate presence of title"," * ```"," * Post.validatesPresenceOf('title');"," * ```"," * Validate that model has first, last, and age properties:"," * ```"," * User.validatesPresenceOf('first', 'last', 'age');"," * ```"," * Example with custom message"," * ```"," * Post.validatesPresenceOf('title', {message: 'Cannot be blank'});"," * ```"," *"," * @param {String} propertyName  One or more property names."," * @options {Object} errMsg Optional custom error message.  Default is \"can't be blank\""," * @property {String} message Error message to use instead of default."," */","Validatable.validatesPresenceOf = getConfigurator('presence');","","/**"," * Validate absence of one or more specified properties."," * A model should not include a property to be considered valid; fails when validated field not blank."," *"," * For example, validate absence of reserved"," * ```"," * Post.validatesAbsenceOf('reserved', { unless: 'special' });"," * ```"," * @param {String} propertyName  One or more property names."," * @options {Object} errMsg Optional custom error message.  Default is \"can't be set\""," * @property {String} message Error message to use instead of default."," */","Validatable.validatesAbsenceOf = getConfigurator('absence');","","/**"," * Validate length. Require a property length to be within a specified range."," * Three kinds of validations: min, max, is."," *"," * Default error messages:"," *"," * - min: too short"," * - max: too long"," * - is:  length is wrong"," *"," * Example: length validations"," * ```"," * User.validatesLengthOf('password', {min: 7});"," * User.validatesLengthOf('email', {max: 100});"," * User.validatesLengthOf('state', {is: 2});"," * User.validatesLengthOf('nick', {min: 3, max: 15});"," * ```"," * Example: length validations with custom error messages"," * ```"," * User.validatesLengthOf('password', {min: 7, message: {min: 'too weak'}});"," * User.validatesLengthOf('state', {is: 2, message: {is: 'is not valid state name'}});"," * ```"," * @param {String} propertyName  Property name to validate."," * @options {Object} Options See below."," * @property {Number} is Value that property must equal to validate."," * @property {Number} min Value that property must be less than to be valid."," * @property {Number} max Value that property must be less than to be valid."," * @property {Object} message Optional Object with string properties for custom error message for each validation: is, min, or max"," */","Validatable.validatesLengthOf = getConfigurator('length');","","/**"," * Validate numericality.  Requires a value for property to be either an integer or number."," *"," * Example"," * ```"," * User.validatesNumericalityOf('age', { message: { number: '...' }});"," * User.validatesNumericalityOf('age', {int: true, message: { int: '...' }});"," * ```"," *"," * @param {String} propertyName  Property name to validate."," * @options {Object} Options See below."," * @property {Boolean} int If true, then property must be an integer to be valid."," * @property {Object} message Optional object with string properties for 'int' for integer validation.  Default error messages:"," *"," * - number: is not a number"," * - int: is not an integer"," */","Validatable.validatesNumericalityOf = getConfigurator('numericality');","","/**"," * Validate inclusion in set.  Require a value for property to be in the specified array."," *"," * Example:"," * ```"," * User.validatesInclusionOf('gender', {in: ['male', 'female']});"," * User.validatesInclusionOf('role', {"," *     in: ['admin', 'moderator', 'user'], message: 'is not allowed'"," * });"," * ```"," *"," * @param {String} propertyName  Property name to validate."," * @options {Object} Options See below"," * @property {Array} inArray Property must match one of the values in the array to be valid."," * @property {String} message Optional error message if property is not valid."," * Default error message: \"is not included in the list\"."," * @property {Boolean} allowNull Whether null values are allowed."," */","Validatable.validatesInclusionOf = getConfigurator('inclusion');","","/**"," * Validate exclusion.  Require a property value not be in the specified array."," *"," * Example: `Company.validatesExclusionOf('domain', {in: ['www', 'admin']});`"," *"," * @param {String} propertyName  Property name to validate."," * @options {Object} Options"," * @property {Array} in Property must not match any of the values in the array to be valid."," * @property {String} message Optional error message if property is not valid.  Default error message: \"is reserved\"."," * @property {Boolean} allowNull Whether null values are allowed."," */","Validatable.validatesExclusionOf = getConfigurator('exclusion');","","/**"," * Validate format. Require a model to include a property that matches the given format."," *"," * Require a model to include a property that matches the given format.  Example:"," * `User.validatesFormatOf('name', {with: /\\w+/});`"," *"," * @param {String} propertyName  Property name to validate."," * @options {Object} Options"," * @property {RegExp} with Regular expression to validate format."," * @property {String} message Optional error message if property is not valid.  Default error message: \" is invalid\"."," * @property {Boolean} allowNull Whether null values are allowed."," */","Validatable.validatesFormatOf = getConfigurator('format');","","/**"," * Validate using custom validation function."," *"," * Example:"," *"," *     User.validate('name', customValidator, {message: 'Bad name'});"," *     function customValidator(err) {"," *         if (this.name === 'bad') err();"," *     });"," *     var user = new User({name: 'Peter'});"," *     user.isValid(); // true"," *     user.name = 'bad';"," *     user.isValid(); // false"," *"," * @param {String} propertyName  Property name to validate."," * @param {Function} validatorFn Custom validation function."," * @options {Object} Options See below."," * @property {String} message Optional error message if property is not valid.  Default error message: \" is invalid\"."," * @property {Boolean} allowNull Whether null values are allowed."," */","Validatable.validate = getConfigurator('custom');","","/**"," * Validate using custom asynchronous validation function."," *"," *"," * Example:"," *```js"," *     User.validateAsync('name', customValidator, {message: 'Bad name'});"," *     function customValidator(err, done) {"," *         process.nextTick(function () {"," *             if (this.name === 'bad') err();"," *             done();"," *         });"," *     });"," *     var user = new User({name: 'Peter'});"," *     user.isValid(); // false (because async validation setup)"," *     user.isValid(function (isValid) {"," *         isValid; // true"," *     })"," *     user.name = 'bad';"," *     user.isValid(); // false"," *     user.isValid(function (isValid) {"," *         isValid; // false"," *     })"," *```"," * @param {String} propertyName  Property name to validate."," * @param {Function} validatorFn Custom validation function."," * @options {Object} Options See below"," * @property {String} message Optional error message if property is not valid.  Default error message: \" is invalid\"."," * @property {Boolean} allowNull Whether null values are allowed."," */","Validatable.validateAsync = getConfigurator('custom', {async: true});","","/**"," * Validate uniqueness. Ensure the value for property is unique in the collection of models."," * Not available for all connectors. Currently supported with these connectors:"," *  - In Memory"," *  - Oracle"," *  - MongoDB"," *"," * ```"," * // The login must be unique across all User instances."," * User.validatesUniquenessOf('login');"," *"," * // Assuming SiteUser.belongsTo(Site)"," * // The login must be unique within each Site."," * SiteUser.validateUniquenessOf('login', { scopedTo: ['siteId'] });"," * ```",""," * @param {String} propertyName  Property name to validate."," * @options {Object} Options See below."," * @property {RegExp} with Regular expression to validate format."," * @property {Array.<String>} scopedTo List of properties defining the scope."," * @property {String} message Optional error message if property is not valid.  Default error message: \"is not unique\"."," * @property {Boolean} allowNull Whether null values are allowed."," */","Validatable.validatesUniquenessOf = getConfigurator('uniqueness', {async: true});","","// implementation of validators","","/*!"," * Presence validator"," */","function validatePresence(attr, conf, err, options) {","  if (blank(this[attr])) {","    err();","  }","}","","/*!"," * Absence validator"," */","function validateAbsence(attr, conf, err, options) {","  if (!blank(this[attr])) {","    err();","  }","}","","/*!"," * Length validator"," */","function validateLength(attr, conf, err, options) {","  if (nullCheck.call(this, attr, conf, err)) return;","","  var len = this[attr].length;","  if (conf.min && len < conf.min) {","    err('min');","  }","  if (conf.max && len > conf.max) {","    err('max');","  }","  if (conf.is && len !== conf.is) {","    err('is');","  }","}","","/*!"," * Numericality validator"," */","function validateNumericality(attr, conf, err, options) {","  if (nullCheck.call(this, attr, conf, err)) return;","","  if (typeof this[attr] !== 'number' || isNaN(this[attr])) {","    return err('number');","  }","  if (conf.int && this[attr] !== Math.round(this[attr])) {","    return err('int');","  }","}","","/*!"," * Inclusion validator"," */","function validateInclusion(attr, conf, err, options) {","  if (nullCheck.call(this, attr, conf, err)) return;","","  if (!~conf.in.indexOf(this[attr])) {","    err();","  }","}","","/*!"," * Exclusion validator"," */","function validateExclusion(attr, conf, err, options) {","  if (nullCheck.call(this, attr, conf, err)) return;","","  if (~conf.in.indexOf(this[attr])) {","    err();","  }","}","","/*!"," * Format validator"," */","function validateFormat(attr, conf, err, options) {","  if (nullCheck.call(this, attr, conf, err)) return;","","  if (typeof this[attr] === 'string') {","    if (!this[attr].match(conf['with'])) {","      err();","    }","  } else {","    err();","  }","}","","/*!"," * Custom validator"," */","function validateCustom(attr, conf, err, options, done) {","  if (typeof options === 'function') {","    done = options;","    options = {};","  }","  conf.customValidator.call(this, err, done);","}","","/*!"," * Uniqueness validator"," */","function validateUniqueness(attr, conf, err, options, done) {","  if (typeof options === 'function') {","    done = options;","    options = {};","  }","  if (blank(this[attr])) {","    return process.nextTick(done);","  }","  var cond = {where: {}};","  cond.where[attr] = this[attr];","","  if (conf && conf.scopedTo) {","    conf.scopedTo.forEach(function(k) {","      var val = this[k];","      if (val !== undefined)","        cond.where[k] = this[k];","    }, this);","  }","","  var idName = this.constructor.definition.idName();","  var isNewRecord = this.isNewRecord();","  this.constructor.find(cond, options, function(error, found) {","    if (error) {","      err(error);","    } else if (found.length > 1) {","      err();","    } else if (found.length === 1 && idName === attr && isNewRecord) {","      err();","    } else if (found.length === 1 && (","      !this.id || !found[0].id || found[0].id.toString() != this.id.toString()","    )) {","      err();","    }","    done();","  }.bind(this));","}","","var validators = {","  presence: validatePresence,","  absence: validateAbsence,","  length: validateLength,","  numericality: validateNumericality,","  inclusion: validateInclusion,","  exclusion: validateExclusion,","  format: validateFormat,","  custom: validateCustom,","  uniqueness: validateUniqueness,","};","","function getConfigurator(name, opts) {","  return function() {","    var args = Array.prototype.slice.call(arguments);","    args[1] = args[1] || {};","    configure(this, name, args, opts);","  };","}","","/**"," * This method performs validation and triggers validation hooks."," * Before validation the `obj.errors` collection is cleaned."," * Each validation can add errors to `obj.errors` collection."," * If collection is not blank, validation failed."," *"," * NOTE: This method can be called as synchronous only when no asynchronous validation is"," * configured. It's strongly recommended to run all validations as asyncronous."," *"," * Example: ExpressJS controller: render user if valid, show flash otherwise"," * ```"," * user.isValid(function (valid) {"," *     if (valid) res.render({user: user});"," *     else res.flash('error', 'User is not valid'), console.log(user.errors), res.redirect('/users');"," * });"," * ```"," * Another example:"," * ```"," * user.isValid(function (valid) {"," *     if (!valid) {"," *           console.log(user.errors);"," *         // => hash of errors"," *         // => {"," *         // => username: [errmessage, errmessage, ...],"," *         // => email: ..."," *         // => }"," *     }"," * });"," * ```"," * @param {Function} callback called with (valid)"," * @returns {Boolean} True if no asynchronous validation is configured and all properties pass validation."," */","Validatable.prototype.isValid = function(callback, data, options) {","  options = options || {};","  var valid = true, inst = this, wait = 0, async = false;","  var validations = this.constructor.validations;","","  var reportDiscardedProperties = this.__strict &&","    this.__unknownProperties && this.__unknownProperties.length;","","  // exit with success when no errors","  if (typeof validations !== 'object' && !reportDiscardedProperties) {","    cleanErrors(this);","    if (callback) {","      this.trigger('validate', function(validationsDone) {","        validationsDone.call(inst, function() {","          callback(valid);","        });","      }, data, callback);","    }","    return valid;","  }","","  Object.defineProperty(this, 'errors', {","    enumerable: false,","    configurable: true,","    value: new Errors,","  });","","  this.trigger('validate', function(validationsDone) {","    var inst = this,","      asyncFail = false;","","    var attrs = Object.keys(validations || {});","","    attrs.forEach(function(attr) {","      var attrValidations = validations[attr] || [];","      attrValidations.forEach(function(v) {","        if (v.options && v.options.async) {","          async = true;","          wait += 1;","          process.nextTick(function() {","            validationFailed(inst, attr, v, options, done);","          });","        } else {","          if (validationFailed(inst, attr, v)) {","            valid = false;","          }","        }","      });","    });","","    if (reportDiscardedProperties) {","      for (var ix in inst.__unknownProperties) {","        var key = inst.__unknownProperties[ix];","        var code = 'unknown-property';","        var msg = defaultMessages[code];","        inst.errors.add(key, msg, code);","        valid = false;","      }","    }","","    if (!async) {","      validationsDone.call(inst, function() {","        if (valid) cleanErrors(inst);","        if (callback) {","          callback(valid);","        }","      });","    }","","    function done(fail) {","      asyncFail = asyncFail || fail;","      if (--wait === 0) {","        validationsDone.call(inst, function() {","          if (valid && !asyncFail) cleanErrors(inst);","          if (callback) {","            callback(valid && !asyncFail);","          }","        });","      }","    }","  }, data, callback);","","  if (async) {","    // in case of async validation we should return undefined here,","    // because not all validations are finished yet","    return;","  } else {","    return valid;","  }","};","","function cleanErrors(inst) {","  Object.defineProperty(inst, 'errors', {","    enumerable: false,","    configurable: true,","    value: false,","  });","}","","function validationFailed(inst, attr, conf, options, cb) {","  var opts = conf.options || {};","","  if (typeof options === 'function') {","    cb = options;","    options = {};","  }","","  if (typeof attr !== 'string') return false;","","  // here we should check skip validation conditions (if, unless)","  // that can be specified in conf","  if (skipValidation(inst, conf, 'if') ||","      skipValidation(inst, conf, 'unless')) {","    if (cb) cb(false);","    return false;","  }","","  var fail = false;","  var validator = validators[conf.validation];","  var validatorArguments = [];","  validatorArguments.push(attr);","  validatorArguments.push(conf);","  validatorArguments.push(function onerror(kind) {","    var message, code = conf.code || conf.validation;","    if (conf.message) {","      message = conf.message;","    }","    if (!message && defaultMessages[conf.validation]) {","      message = defaultMessages[conf.validation];","    }","    if (!message) {","      message = 'is invalid';","    }","    if (kind) {","      code += '.' + kind;","      if (message[kind]) {","        // get deeper","        message = message[kind];","      } else if (defaultMessages.common[kind]) {","        message = defaultMessages.common[kind];","      } else {","        message = 'is invalid';","      }","    }","    if (kind !== false) inst.errors.add(attr, message, code);","    fail = true;","  });","  validatorArguments.push(options);","  if (cb) {","    validatorArguments.push(function() {","      cb(fail);","    });","  }","  validator.apply(inst, validatorArguments);","  return fail;","}","","function skipValidation(inst, conf, kind) {","  var doValidate = true;","  if (typeof conf[kind] === 'function') {","    doValidate = conf[kind].call(inst);","    if (kind === 'unless') doValidate = !doValidate;","  } else if (typeof conf[kind] === 'string') {","    if (typeof inst[conf[kind]] === 'function') {","      doValidate = inst[conf[kind]].call(inst);","      if (kind === 'unless') doValidate = !doValidate;","    } else if (inst.__data.hasOwnProperty(conf[kind])) {","      doValidate = inst[conf[kind]];","      if (kind === 'unless') doValidate = !doValidate;","    } else {","      doValidate = kind === 'if';","    }","  }","  return !doValidate;","}","","var defaultMessages = {","  presence: 'can\\'t be blank',","  absence: 'can\\'t be set',","  'unknown-property': 'is not defined in the model',","  length: {","    min: 'too short',","    max: 'too long',","    is: 'length is wrong',","  },","  common: {","    blank: 'is blank',","    'null': 'is null',","  },","  numericality: {","    'int': 'is not an integer',","    'number': 'is not a number',","  },","  inclusion: 'is not included in the list',","  exclusion: 'is reserved',","  uniqueness: 'is not unique',","};","","/**"," * Checks if attribute is undefined or null. Calls err function with 'blank' or 'null'."," * See defaultMessages. You can affect this behaviour with conf.allowBlank and conf.allowNull."," * @param {String} attr Property name of attribute"," * @param {Object} conf conf object for validator"," * @param {Function} err"," * @return {Boolean} returns true if attribute is null or blank"," */","function nullCheck(attr, conf, err) {","  // First determine if attribute is defined","  if (typeof this[attr] === 'undefined') {","    if (!conf.allowBlank) {","      err('blank');","    }","    return true;","  } else {","    // Now check if attribute is null","    if (this[attr] === null) {","      if (!conf.allowNull) {","        err('null');","      }","      return true;","    }","  }","  return false;","}","","/*!"," * Return true when v is undefined, blank array, null or empty string"," * otherwise returns false"," *"," * @param {Mix} v"," * Returns true if `v` is blank."," */","function blank(v) {","  if (typeof v === 'undefined') return true;","  if (v instanceof Array && v.length === 0) return true;","  if (v === null) return true;","  if (typeof v === 'number' && isNaN(v)) return true;","  if (typeof v == 'string' && v === '') return true;","  return false;","}","","function configure(cls, validation, args, opts) {","  if (!cls.validations) {","    Object.defineProperty(cls, 'validations', {","      writable: true,","      configurable: true,","      enumerable: false,","      value: {},","    });","  }","  args = [].slice.call(args);","  var conf;","  if (typeof args[args.length - 1] === 'object') {","    conf = args.pop();","  } else {","    conf = {};","  }","  if (validation === 'custom' && typeof args[args.length - 1] === 'function') {","    conf.customValidator = args.pop();","  }","  conf.validation = validation;","  args.forEach(function(attr) {","    if (typeof attr === 'string') {","      var validation = extend({}, conf);","      validation.options = opts || {};","      cls.validations[attr] = cls.validations[attr] || [];","      cls.validations[attr].push(validation);","    }","  });","}","","function Errors() {","  Object.defineProperty(this, 'codes', {","    enumerable: false,","    configurable: true,","    value: {},","  });","}","","Errors.prototype.add = function(field, message, code) {","  code = code || 'invalid';","  if (!this[field]) {","    this[field] = [];","    this.codes[field] = [];","  }","  this[field].push(message);","  this.codes[field].push(code);","};","","function ErrorCodes(messages) {","  var c = this;","  Object.keys(messages).forEach(function(field) {","    c[field] = messages[field].codes;","  });","}","","/**"," * ValidationError is raised when the application attempts to save an invalid model instance."," * Example:"," * ```"," * {"," *   \"name\": \"ValidationError\","," *   \"status\": 422,"," *   \"message\": \"The Model instance is not valid. \\"," *  See `details` property of the error object for more info.\","," *   \"statusCode\": 422,"," *   \"details\": {"," *     \"context\": \"user\",","  *    \"codes\": {","  *      \"password\": ["," *         \"presence\""," *       ],"," *       \"email\": ["," *         \"uniqueness\""," *       ]"," *    },"," *     \"messages\": {"," *       \"password\": ["," *        \"can't be blank\""," *      ],"," *       \"email\": ["," *         \"Email already exists\""," *       ]"," *     }"," *   },"," * }"," * ```"," * You might run into situations where you need to raise a validation error yourself, for example in a \"before\" hook or a"," * custom model method."," * ```"," * MyModel.prototype.preflight = function(changes, callback) {"," *   // Update properties, do not save to db"," *   for (var key in changes) {"," *     model[key] = changes[key];"," *   }"," *"," *   if (model.isValid()) {"," *     return callback(null, { success: true });"," *   }"," *"," *   // This line shows how to create a ValidationError"," *   var err = new MyModel.ValidationError(model);"," *   callback(err);"," * }"," * ```","*/","function ValidationError(obj) {","  if (!(this instanceof ValidationError)) return new ValidationError(obj);","","  this.name = 'ValidationError';","","  var context = obj && obj.constructor && obj.constructor.modelName;","  this.message = g.f(","    'The %s instance is not valid. Details: %s.',","      context ? '`' + context + '`' : 'model',","      formatErrors(obj.errors, obj.toJSON()) || '(unknown)'","  );","","  this.statusCode = 422;","","  this.details = {","    context: context,","    codes: obj.errors && obj.errors.codes,","    messages: obj.errors,","  };","","  if (Error.captureStackTrace) {","    // V8 (Chrome, Opera, Node)","    Error.captureStackTrace(this, this.constructor);","  } else if (errorHasStackProperty) {","    // Firefox","    this.stack = (new Error).stack;","  }","  // Safari and PhantomJS initializes `error.stack` on throw","  // Internet Explorer does not support `error.stack`","}","","util.inherits(ValidationError, Error);","","var errorHasStackProperty = !!(new Error).stack;","","ValidationError.maxPropertyStringLength = 32;","","function formatErrors(errors, propertyValues) {","  var DELIM = '; ';","  errors = errors || {};","  return Object.getOwnPropertyNames(errors)","    .filter(function(propertyName) {","      return Array.isArray(errors[propertyName]);","    })","    .map(function(propertyName) {","      var messages = errors[propertyName];","      var propertyValue = propertyValues[propertyName];","      return messages.map(function(msg) {","        return formatPropertyError(propertyName, propertyValue, msg);","      }).join(DELIM);","    })","    .join(DELIM);","}","","function formatPropertyError(propertyName, propertyValue, errorMessage) {","  var formattedValue;","  var valueType = typeof propertyValue;","  if (valueType === 'string') {","    formattedValue = JSON.stringify(truncatePropertyString(propertyValue));","  } else if (propertyValue instanceof Date) {","    formattedValue = propertyValue.toISOString();","  } else if (valueType === 'object') {","    // objects and arrays","    formattedValue = util.inspect(propertyValue, {","      showHidden: false,","      color: false,","      // show top-level object properties only","      depth: Array.isArray(propertyValue) ? 1 : 0,","    });","    formattedValue = truncatePropertyString(formattedValue);","  } else {","    formattedValue = truncatePropertyString('' + propertyValue);","  }","  return '`' + propertyName + '` ' + errorMessage +","    ' (value: ' + formattedValue + ')';","}","","function truncatePropertyString(value) {","  var len = ValidationError.maxPropertyStringLength;","  if (value.length <= len) return value;","","  // preserve few last characters like `}` or `]`, but no more than 3","  // this way the last `} ]` in the array of objects is included in the message","  var tail;","  var m = value.match(/([ \\t})\\]]+)$/);","  if (m) {","    tail = m[1].slice(-3);","    len -= tail.length;","  } else {","    tail = value.slice(-3);","    len -= 3;","  }","","  return value.slice(0, len - 4) + '...' + tail;","}",""],"l":{"8":1,"9":1,"10":1,"15":1,"16":1,"30":1,"54":1,"68":1,"99":1,"118":1,"138":1,"151":1,"165":1,"187":1,"219":1,"244":1,"251":1,"252":0,"253":0,"260":1,"261":0,"262":0,"269":1,"270":0,"272":0,"273":0,"274":0,"276":0,"277":0,"279":0,"280":0,"287":1,"288":0,"290":0,"291":0,"293":0,"294":0,"301":1,"302":0,"304":0,"305":0,"312":1,"313":0,"315":0,"316":0,"323":1,"324":0,"326":0,"327":0,"328":0,"331":0,"338":1,"339":0,"340":0,"341":0,"343":0,"349":1,"350":0,"351":0,"352":0,"354":0,"355":0,"357":0,"358":0,"360":0,"361":0,"362":0,"363":0,"364":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"380":0,"382":0,"386":1,"398":1,"399":10,"400":12,"401":12,"402":12,"438":1,"439":0,"440":0,"441":0,"443":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"456":0,"459":0,"465":0,"466":0,"469":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"481":0,"482":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"498":0,"499":0,"500":0,"501":0,"502":0,"507":1,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"520":0,"523":0,"525":0,"529":1,"530":0,"537":1,"538":0,"540":0,"541":0,"542":0,"545":0,"549":0,"551":0,"552":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"565":0,"566":0,"568":0,"569":0,"571":0,"572":0,"573":0,"575":0,"576":0,"577":0,"579":0,"582":0,"583":0,"585":0,"586":0,"587":0,"588":0,"591":0,"592":0,"595":1,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"608":0,"611":0,"614":1,"644":1,"646":0,"647":0,"648":0,"650":0,"653":0,"654":0,"655":0,"657":0,"660":0,"670":1,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"679":1,"680":12,"681":5,"688":12,"689":12,"690":12,"691":12,"693":0,"695":12,"696":1,"698":12,"699":12,"700":12,"701":12,"702":12,"703":12,"704":12,"709":1,"710":0,"717":1,"718":0,"719":0,"720":0,"721":0,"723":0,"724":0,"727":1,"728":0,"729":0,"730":0,"784":1,"785":0,"787":0,"789":0,"790":0,"796":0,"798":0,"804":0,"806":0,"807":0,"809":0,"815":1,"817":1,"819":1,"821":1,"822":0,"823":0,"824":0,"826":0,"829":0,"830":0,"831":0,"832":0,"838":1,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"847":0,"853":0,"855":0,"857":0,"861":1,"862":0,"863":0,"867":0,"868":0,"869":0,"870":0,"871":0,"873":0,"874":0,"877":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/utils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":1,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":1,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1,"178":1,"179":1,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":1,"197":19,"198":19,"199":19,"200":0,"201":0,"202":0,"203":0,"204":0,"205":19,"206":12,"207":30,"208":19,"209":19,"210":34,"211":34,"212":26,"213":8,"214":8,"215":0,"216":19,"217":1,"218":0,"219":0,"220":1,"221":0,"222":1,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":1,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":1,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":1,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":1,"288":0,"289":1,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":1,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":1,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":1,"314":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0,0,0],"61":[0,0],"62":[0,0,0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[19,0,19],"71":[0,19],"72":[0,0],"73":[0,0],"74":[12,7],"75":[19,12],"76":[19,0],"77":[19,19],"78":[26,8],"79":[34,34],"80":[8,0],"81":[8,8,8],"82":[0,0],"83":[0,0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0,0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":19,"13":0,"14":30,"15":34,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"fnMap":{"1":{"name":"safeRequire","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":29}}},"2":{"name":"setScopeValuesFromWhere","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":59}}},"3":{"name":"mergeIncludes","line":80,"loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":44}}},"4":{"name":"convertToArray","line":117,"loc":{"start":{"line":117,"column":0},"end":{"line":117,"column":33}}},"5":{"name":"mergeQuery","line":160,"loc":{"start":{"line":160,"column":0},"end":{"line":160,"column":40}}},"6":{"name":"fieldsToArray","line":236,"loc":{"start":{"line":236,"column":0},"end":{"line":236,"column":59}}},"7":{"name":"selectFields","line":286,"loc":{"start":{"line":286,"column":0},"end":{"line":286,"column":30}}},"8":{"name":"(anonymous_8)","line":288,"loc":{"start":{"line":288,"column":9},"end":{"line":288,"column":23}}},"9":{"name":"removeUndefined","line":307,"loc":{"start":{"line":307,"column":0},"end":{"line":307,"column":49}}},"10":{"name":"(anonymous_10)","line":313,"loc":{"start":{"line":313,"column":33},"end":{"line":313,"column":45}}},"11":{"name":"parseSettings","line":347,"loc":{"start":{"line":347,"column":0},"end":{"line":347,"column":31}}},"12":{"name":"mergeSettings","line":380,"loc":{"start":{"line":380,"column":0},"end":{"line":380,"column":36}}},"13":{"name":"(anonymous_13)","line":389,"loc":{"start":{"line":389,"column":16},"end":{"line":389,"column":28}}},"14":{"name":"(anonymous_14)","line":397,"loc":{"start":{"line":397,"column":34},"end":{"line":397,"column":48}}},"15":{"name":"(anonymous_15)","line":403,"loc":{"start":{"line":403,"column":31},"end":{"line":403,"column":45}}},"16":{"name":"defineCachedRelations","line":429,"loc":{"start":{"line":429,"column":0},"end":{"line":429,"column":36}}},"17":{"name":"isPlainObject","line":445,"loc":{"start":{"line":445,"column":0},"end":{"line":445,"column":28}}},"18":{"name":"sortObjectsByIds","line":450,"loc":{"start":{"line":450,"column":0},"end":{"line":450,"column":56}}},"19":{"name":"(anonymous_19)","line":451,"loc":{"start":{"line":451,"column":16},"end":{"line":451,"column":29}}},"20":{"name":"(anonymous_20)","line":455,"loc":{"start":{"line":455,"column":16},"end":{"line":455,"column":28}}},"21":{"name":"(anonymous_21)","line":464,"loc":{"start":{"line":464,"column":18},"end":{"line":464,"column":30}}},"22":{"name":"(anonymous_22)","line":472,"loc":{"start":{"line":472,"column":15},"end":{"line":472,"column":30}}},"23":{"name":"createPromiseCallback","line":484,"loc":{"start":{"line":484,"column":0},"end":{"line":484,"column":33}}},"24":{"name":"(anonymous_24)","line":486,"loc":{"start":{"line":486,"column":28},"end":{"line":486,"column":54}}},"25":{"name":"(anonymous_25)","line":487,"loc":{"start":{"line":487,"column":9},"end":{"line":487,"column":29}}},"26":{"name":"uniq","line":501,"loc":{"start":{"line":501,"column":0},"end":{"line":501,"column":17}}},"27":{"name":"toRegExp","line":520,"loc":{"start":{"line":520,"column":0},"end":{"line":520,"column":25}}},"28":{"name":"(anonymous_28)","line":538,"loc":{"start":{"line":538,"column":16},"end":{"line":538,"column":31}}},"29":{"name":"hasRegExpFlags","line":552,"loc":{"start":{"line":552,"column":0},"end":{"line":552,"column":31}}},"30":{"name":"idEquals","line":560,"loc":{"start":{"line":560,"column":0},"end":{"line":560,"column":28}}},"31":{"name":"findIndexOf","line":581,"loc":{"start":{"line":581,"column":0},"end":{"line":581,"column":43}}},"32":{"name":"collectTargetIds","line":599,"loc":{"start":{"line":599,"column":0},"end":{"line":599,"column":54}}},"33":{"name":"idName","line":616,"loc":{"start":{"line":616,"column":0},"end":{"line":616,"column":19}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":36}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":42}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":38}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":58}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":54}},"9":{"start":{"line":15,"column":0},"end":{"line":15,"column":44}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":58}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":32}},"12":{"start":{"line":18,"column":0},"end":{"line":18,"column":38}},"13":{"start":{"line":19,"column":0},"end":{"line":19,"column":54}},"14":{"start":{"line":20,"column":0},"end":{"line":20,"column":20}},"15":{"start":{"line":21,"column":0},"end":{"line":21,"column":28}},"16":{"start":{"line":22,"column":0},"end":{"line":22,"column":40}},"17":{"start":{"line":23,"column":0},"end":{"line":23,"column":28}},"18":{"start":{"line":24,"column":0},"end":{"line":24,"column":34}},"19":{"start":{"line":25,"column":0},"end":{"line":25,"column":44}},"20":{"start":{"line":26,"column":0},"end":{"line":26,"column":24}},"21":{"start":{"line":28,"column":0},"end":{"line":28,"column":38}},"22":{"start":{"line":29,"column":0},"end":{"line":29,"column":35}},"23":{"start":{"line":30,"column":0},"end":{"line":30,"column":31}},"24":{"start":{"line":31,"column":0},"end":{"line":31,"column":34}},"25":{"start":{"line":33,"column":0},"end":{"line":42,"column":1}},"26":{"start":{"line":34,"column":2},"end":{"line":41,"column":3}},"27":{"start":{"line":35,"column":4},"end":{"line":35,"column":27}},"28":{"start":{"line":37,"column":4},"end":{"line":39,"column":22}},"29":{"start":{"line":40,"column":4},"end":{"line":40,"column":20}},"30":{"start":{"line":51,"column":0},"end":{"line":70,"column":1}},"31":{"start":{"line":52,"column":2},"end":{"line":69,"column":3}},"32":{"start":{"line":53,"column":4},"end":{"line":59,"column":5}},"33":{"start":{"line":55,"column":6},"end":{"line":57,"column":7}},"34":{"start":{"line":56,"column":8},"end":{"line":56,"column":64}},"35":{"start":{"line":58,"column":6},"end":{"line":58,"column":15}},"36":{"start":{"line":60,"column":4},"end":{"line":60,"column":52}},"37":{"start":{"line":61,"column":4},"end":{"line":68,"column":5}},"38":{"start":{"line":62,"column":6},"end":{"line":62,"column":25}},"39":{"start":{"line":63,"column":6},"end":{"line":67,"column":7}},"40":{"start":{"line":66,"column":8},"end":{"line":66,"column":27}},"41":{"start":{"line":80,"column":0},"end":{"line":107,"column":1}},"42":{"start":{"line":81,"column":2},"end":{"line":81,"column":46}},"43":{"start":{"line":82,"column":2},"end":{"line":82,"column":43}},"44":{"start":{"line":83,"column":2},"end":{"line":85,"column":3}},"45":{"start":{"line":84,"column":4},"end":{"line":84,"column":23}},"46":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"47":{"start":{"line":87,"column":4},"end":{"line":87,"column":21}},"48":{"start":{"line":89,"column":2},"end":{"line":89,"column":25}},"49":{"start":{"line":90,"column":2},"end":{"line":90,"column":23}},"50":{"start":{"line":91,"column":2},"end":{"line":97,"column":3}},"51":{"start":{"line":92,"column":4},"end":{"line":92,"column":37}},"52":{"start":{"line":93,"column":4},"end":{"line":94,"column":57}},"53":{"start":{"line":95,"column":4},"end":{"line":95,"column":48}},"54":{"start":{"line":96,"column":4},"end":{"line":96,"column":34}},"55":{"start":{"line":98,"column":2},"end":{"line":105,"column":3}},"56":{"start":{"line":99,"column":4},"end":{"line":99,"column":33}},"57":{"start":{"line":100,"column":4},"end":{"line":101,"column":53}},"58":{"start":{"line":102,"column":4},"end":{"line":104,"column":5}},"59":{"start":{"line":103,"column":6},"end":{"line":103,"column":34}},"60":{"start":{"line":106,"column":2},"end":{"line":106,"column":21}},"61":{"start":{"line":117,"column":0},"end":{"line":150,"column":1}},"62":{"start":{"line":118,"column":2},"end":{"line":148,"column":3}},"63":{"start":{"line":119,"column":4},"end":{"line":119,"column":19}},"64":{"start":{"line":120,"column":4},"end":{"line":120,"column":24}},"65":{"start":{"line":121,"column":4},"end":{"line":121,"column":17}},"66":{"start":{"line":122,"column":9},"end":{"line":148,"column":3}},"67":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"68":{"start":{"line":125,"column":6},"end":{"line":125,"column":23}},"69":{"start":{"line":128,"column":4},"end":{"line":128,"column":24}},"70":{"start":{"line":129,"column":4},"end":{"line":133,"column":5}},"71":{"start":{"line":130,"column":6},"end":{"line":130,"column":21}},"72":{"start":{"line":131,"column":6},"end":{"line":131,"column":30}},"73":{"start":{"line":132,"column":6},"end":{"line":132,"column":27}},"74":{"start":{"line":134,"column":4},"end":{"line":134,"column":22}},"75":{"start":{"line":135,"column":9},"end":{"line":148,"column":3}},"76":{"start":{"line":136,"column":4},"end":{"line":136,"column":24}},"77":{"start":{"line":137,"column":4},"end":{"line":146,"column":5}},"78":{"start":{"line":138,"column":6},"end":{"line":138,"column":36}},"79":{"start":{"line":139,"column":6},"end":{"line":145,"column":7}},"80":{"start":{"line":140,"column":8},"end":{"line":140,"column":23}},"81":{"start":{"line":141,"column":8},"end":{"line":141,"column":33}},"82":{"start":{"line":142,"column":8},"end":{"line":142,"column":29}},"83":{"start":{"line":144,"column":8},"end":{"line":144,"column":38}},"84":{"start":{"line":147,"column":4},"end":{"line":147,"column":22}},"85":{"start":{"line":149,"column":2},"end":{"line":149,"column":12}},"86":{"start":{"line":160,"column":0},"end":{"line":227,"column":1}},"87":{"start":{"line":161,"column":2},"end":{"line":163,"column":3}},"88":{"start":{"line":162,"column":4},"end":{"line":162,"column":11}},"89":{"start":{"line":164,"column":2},"end":{"line":164,"column":20}},"90":{"start":{"line":165,"column":2},"end":{"line":165,"column":20}},"91":{"start":{"line":167,"column":2},"end":{"line":173,"column":3}},"92":{"start":{"line":168,"column":4},"end":{"line":172,"column":5}},"93":{"start":{"line":169,"column":6},"end":{"line":169,"column":53}},"94":{"start":{"line":171,"column":6},"end":{"line":171,"column":32}},"95":{"start":{"line":176,"column":2},"end":{"line":193,"column":3}},"96":{"start":{"line":177,"column":4},"end":{"line":192,"column":5}},"97":{"start":{"line":178,"column":6},"end":{"line":178,"column":36}},"98":{"start":{"line":180,"column":6},"end":{"line":191,"column":7}},"99":{"start":{"line":184,"column":8},"end":{"line":184,"column":33}},"100":{"start":{"line":185,"column":8},"end":{"line":185,"column":26}},"101":{"start":{"line":186,"column":8},"end":{"line":186,"column":45}},"102":{"start":{"line":190,"column":8},"end":{"line":190,"column":67}},"103":{"start":{"line":195,"column":2},"end":{"line":197,"column":3}},"104":{"start":{"line":196,"column":4},"end":{"line":196,"column":34}},"105":{"start":{"line":200,"column":2},"end":{"line":204,"column":3}},"106":{"start":{"line":201,"column":4},"end":{"line":201,"column":32}},"107":{"start":{"line":202,"column":9},"end":{"line":204,"column":3}},"108":{"start":{"line":203,"column":4},"end":{"line":203,"column":63}},"109":{"start":{"line":207,"column":2},"end":{"line":209,"column":3}},"110":{"start":{"line":208,"column":4},"end":{"line":208,"column":30}},"111":{"start":{"line":212,"column":2},"end":{"line":214,"column":3}},"112":{"start":{"line":213,"column":4},"end":{"line":213,"column":30}},"113":{"start":{"line":216,"column":2},"end":{"line":216,"column":58}},"114":{"start":{"line":218,"column":2},"end":{"line":220,"column":3}},"115":{"start":{"line":219,"column":4},"end":{"line":219,"column":28}},"116":{"start":{"line":222,"column":2},"end":{"line":224,"column":3}},"117":{"start":{"line":223,"column":4},"end":{"line":223,"column":32}},"118":{"start":{"line":226,"column":2},"end":{"line":226,"column":14}},"119":{"start":{"line":236,"column":0},"end":{"line":284,"column":1}},"120":{"start":{"line":237,"column":2},"end":{"line":237,"column":22}},"121":{"start":{"line":237,"column":15},"end":{"line":237,"column":22}},"122":{"start":{"line":240,"column":2},"end":{"line":240,"column":26}},"123":{"start":{"line":241,"column":2},"end":{"line":241,"column":11}},"124":{"start":{"line":243,"column":2},"end":{"line":271,"column":3}},"125":{"start":{"line":244,"column":4},"end":{"line":244,"column":22}},"126":{"start":{"line":245,"column":9},"end":{"line":271,"column":3}},"127":{"start":{"line":247,"column":4},"end":{"line":247,"column":20}},"128":{"start":{"line":248,"column":9},"end":{"line":271,"column":3}},"129":{"start":{"line":250,"column":4},"end":{"line":250,"column":22}},"130":{"start":{"line":251,"column":4},"end":{"line":251,"column":22}},"131":{"start":{"line":252,"column":4},"end":{"line":252,"column":35}},"132":{"start":{"line":253,"column":4},"end":{"line":253,"column":29}},"133":{"start":{"line":253,"column":22},"end":{"line":253,"column":29}},"134":{"start":{"line":255,"column":4},"end":{"line":262,"column":5}},"135":{"start":{"line":256,"column":6},"end":{"line":256,"column":22}},"136":{"start":{"line":257,"column":6},"end":{"line":261,"column":7}},"137":{"start":{"line":258,"column":8},"end":{"line":258,"column":25}},"138":{"start":{"line":259,"column":13},"end":{"line":261,"column":7}},"139":{"start":{"line":260,"column":8},"end":{"line":260,"column":25}},"140":{"start":{"line":263,"column":4},"end":{"line":270,"column":5}},"141":{"start":{"line":264,"column":6},"end":{"line":264,"column":24}},"142":{"start":{"line":265,"column":11},"end":{"line":270,"column":5}},"143":{"start":{"line":266,"column":6},"end":{"line":269,"column":7}},"144":{"start":{"line":267,"column":8},"end":{"line":267,"column":48}},"145":{"start":{"line":268,"column":8},"end":{"line":268,"column":50}},"146":{"start":{"line":268,"column":26},"end":{"line":268,"column":50}},"147":{"start":{"line":273,"column":2},"end":{"line":273,"column":22}},"148":{"start":{"line":274,"column":2},"end":{"line":282,"column":3}},"149":{"start":{"line":275,"column":4},"end":{"line":279,"column":5}},"150":{"start":{"line":276,"column":6},"end":{"line":278,"column":7}},"151":{"start":{"line":277,"column":8},"end":{"line":277,"column":35}},"152":{"start":{"line":281,"column":4},"end":{"line":281,"column":24}},"153":{"start":{"line":283,"column":2},"end":{"line":283,"column":20}},"154":{"start":{"line":286,"column":0},"end":{"line":299,"column":1}},"155":{"start":{"line":288,"column":2},"end":{"line":298,"column":4}},"156":{"start":{"line":289,"column":4},"end":{"line":289,"column":20}},"157":{"start":{"line":290,"column":4},"end":{"line":290,"column":12}},"158":{"start":{"line":292,"column":4},"end":{"line":296,"column":5}},"159":{"start":{"line":293,"column":6},"end":{"line":293,"column":22}},"160":{"start":{"line":295,"column":6},"end":{"line":295,"column":29}},"161":{"start":{"line":297,"column":4},"end":{"line":297,"column":18}},"162":{"start":{"line":307,"column":0},"end":{"line":337,"column":1}},"163":{"start":{"line":308,"column":2},"end":{"line":310,"column":3}},"164":{"start":{"line":309,"column":4},"end":{"line":309,"column":17}},"165":{"start":{"line":313,"column":2},"end":{"line":336,"column":5}},"166":{"start":{"line":314,"column":4},"end":{"line":326,"column":5}},"167":{"start":{"line":315,"column":6},"end":{"line":325,"column":7}},"168":{"start":{"line":317,"column":10},"end":{"line":317,"column":28}},"169":{"start":{"line":318,"column":10},"end":{"line":318,"column":16}},"170":{"start":{"line":320,"column":10},"end":{"line":320,"column":66}},"171":{"start":{"line":321,"column":10},"end":{"line":321,"column":16}},"172":{"start":{"line":324,"column":10},"end":{"line":324,"column":24}},"173":{"start":{"line":328,"column":4},"end":{"line":333,"column":5}},"174":{"start":{"line":331,"column":6},"end":{"line":331,"column":27}},"175":{"start":{"line":332,"column":6},"end":{"line":332,"column":15}},"176":{"start":{"line":335,"column":4},"end":{"line":335,"column":13}},"177":{"start":{"line":339,"column":0},"end":{"line":339,"column":25}},"178":{"start":{"line":340,"column":0},"end":{"line":340,"column":23}},"179":{"start":{"line":347,"column":0},"end":{"line":367,"column":1}},"180":{"start":{"line":348,"column":2},"end":{"line":350,"column":3}},"181":{"start":{"line":349,"column":4},"end":{"line":349,"column":14}},"182":{"start":{"line":351,"column":2},"end":{"line":351,"column":37}},"183":{"start":{"line":352,"column":2},"end":{"line":352,"column":20}},"184":{"start":{"line":353,"column":2},"end":{"line":353,"column":66}},"185":{"start":{"line":354,"column":2},"end":{"line":354,"column":51}},"186":{"start":{"line":355,"column":2},"end":{"line":355,"column":47}},"187":{"start":{"line":356,"column":2},"end":{"line":356,"column":73}},"188":{"start":{"line":357,"column":2},"end":{"line":357,"column":57}},"189":{"start":{"line":358,"column":2},"end":{"line":358,"column":65}},"190":{"start":{"line":359,"column":2},"end":{"line":359,"column":24}},"191":{"start":{"line":360,"column":2},"end":{"line":365,"column":3}},"192":{"start":{"line":361,"column":4},"end":{"line":361,"column":37}},"193":{"start":{"line":362,"column":4},"end":{"line":364,"column":5}},"194":{"start":{"line":363,"column":6},"end":{"line":363,"column":30}},"195":{"start":{"line":366,"column":2},"end":{"line":366,"column":18}},"196":{"start":{"line":380,"column":0},"end":{"line":423,"column":1}},"197":{"start":{"line":381,"column":2},"end":{"line":381,"column":33}},"198":{"start":{"line":382,"column":2},"end":{"line":382,"column":30}},"199":{"start":{"line":384,"column":2},"end":{"line":420,"column":3}},"200":{"start":{"line":385,"column":4},"end":{"line":385,"column":26}},"201":{"start":{"line":387,"column":4},"end":{"line":387,"column":29}},"202":{"start":{"line":389,"column":4},"end":{"line":393,"column":7}},"203":{"start":{"line":390,"column":6},"end":{"line":392,"column":7}},"204":{"start":{"line":391,"column":8},"end":{"line":391,"column":20}},"205":{"start":{"line":395,"column":4},"end":{"line":400,"column":5}},"206":{"start":{"line":397,"column":6},"end":{"line":399,"column":9}},"207":{"start":{"line":398,"column":8},"end":{"line":398,"column":31}},"208":{"start":{"line":401,"column":4},"end":{"line":419,"column":5}},"209":{"start":{"line":403,"column":6},"end":{"line":418,"column":9}},"210":{"start":{"line":404,"column":8},"end":{"line":404,"column":32}},"211":{"start":{"line":405,"column":8},"end":{"line":417,"column":9}},"212":{"start":{"line":407,"column":10},"end":{"line":407,"column":30}},"213":{"start":{"line":410,"column":10},"end":{"line":416,"column":11}},"214":{"start":{"line":413,"column":12},"end":{"line":413,"column":32}},"215":{"start":{"line":415,"column":12},"end":{"line":415,"column":60}},"216":{"start":{"line":422,"column":2},"end":{"line":422,"column":13}},"217":{"start":{"line":429,"column":0},"end":{"line":438,"column":1}},"218":{"start":{"line":430,"column":2},"end":{"line":437,"column":3}},"219":{"start":{"line":431,"column":4},"end":{"line":436,"column":7}},"220":{"start":{"line":445,"column":0},"end":{"line":448,"column":1}},"221":{"start":{"line":446,"column":2},"end":{"line":447,"column":33}},"222":{"start":{"line":450,"column":0},"end":{"line":482,"column":1}},"223":{"start":{"line":451,"column":2},"end":{"line":453,"column":5}},"224":{"start":{"line":452,"column":4},"end":{"line":452,"column":54}},"225":{"start":{"line":455,"column":2},"end":{"line":459,"column":4}},"226":{"start":{"line":456,"column":4},"end":{"line":456,"column":48}},"227":{"start":{"line":457,"column":4},"end":{"line":457,"column":51}},"228":{"start":{"line":458,"column":4},"end":{"line":458,"column":27}},"229":{"start":{"line":461,"column":2},"end":{"line":461,"column":19}},"230":{"start":{"line":462,"column":2},"end":{"line":462,"column":19}},"231":{"start":{"line":464,"column":2},"end":{"line":470,"column":5}},"232":{"start":{"line":465,"column":4},"end":{"line":469,"column":5}},"233":{"start":{"line":466,"column":6},"end":{"line":466,"column":27}},"234":{"start":{"line":467,"column":6},"end":{"line":467,"column":39}},"235":{"start":{"line":467,"column":32},"end":{"line":467,"column":39}},"236":{"start":{"line":468,"column":6},"end":{"line":468,"column":53}},"237":{"start":{"line":472,"column":2},"end":{"line":479,"column":5}},"238":{"start":{"line":473,"column":4},"end":{"line":473,"column":23}},"239":{"start":{"line":474,"column":4},"end":{"line":474,"column":23}},"240":{"start":{"line":475,"column":4},"end":{"line":475,"column":39}},"241":{"start":{"line":475,"column":30},"end":{"line":475,"column":39}},"242":{"start":{"line":476,"column":4},"end":{"line":476,"column":26}},"243":{"start":{"line":476,"column":17},"end":{"line":476,"column":26}},"244":{"start":{"line":477,"column":4},"end":{"line":477,"column":24}},"245":{"start":{"line":477,"column":15},"end":{"line":477,"column":24}},"246":{"start":{"line":478,"column":4},"end":{"line":478,"column":25}},"247":{"start":{"line":478,"column":15},"end":{"line":478,"column":25}},"248":{"start":{"line":481,"column":2},"end":{"line":481,"column":33}},"249":{"start":{"line":484,"column":0},"end":{"line":494,"column":1}},"250":{"start":{"line":485,"column":2},"end":{"line":485,"column":9}},"251":{"start":{"line":486,"column":2},"end":{"line":491,"column":5}},"252":{"start":{"line":487,"column":4},"end":{"line":490,"column":6}},"253":{"start":{"line":488,"column":6},"end":{"line":488,"column":34}},"254":{"start":{"line":488,"column":15},"end":{"line":488,"column":34}},"255":{"start":{"line":489,"column":6},"end":{"line":489,"column":27}},"256":{"start":{"line":492,"column":2},"end":{"line":492,"column":23}},"257":{"start":{"line":493,"column":2},"end":{"line":493,"column":12}},"258":{"start":{"line":501,"column":0},"end":{"line":513,"column":1}},"259":{"start":{"line":502,"column":2},"end":{"line":502,"column":21}},"260":{"start":{"line":503,"column":2},"end":{"line":505,"column":3}},"261":{"start":{"line":504,"column":4},"end":{"line":504,"column":21}},"262":{"start":{"line":506,"column":2},"end":{"line":506,"column":57}},"263":{"start":{"line":507,"column":2},"end":{"line":511,"column":3}},"264":{"start":{"line":508,"column":4},"end":{"line":510,"column":5}},"265":{"start":{"line":509,"column":6},"end":{"line":509,"column":27}},"266":{"start":{"line":512,"column":2},"end":{"line":512,"column":19}},"267":{"start":{"line":520,"column":0},"end":{"line":550,"column":1}},"268":{"start":{"line":521,"column":2},"end":{"line":521,"column":43}},"269":{"start":{"line":522,"column":2},"end":{"line":522,"column":41}},"270":{"start":{"line":524,"column":2},"end":{"line":526,"column":30}},"271":{"start":{"line":525,"column":4},"end":{"line":526,"column":30}},"272":{"start":{"line":528,"column":2},"end":{"line":529,"column":17}},"273":{"start":{"line":529,"column":4},"end":{"line":529,"column":17}},"274":{"start":{"line":531,"column":2},"end":{"line":532,"column":29}},"275":{"start":{"line":532,"column":4},"end":{"line":532,"column":29}},"276":{"start":{"line":535,"column":2},"end":{"line":535,"column":47}},"277":{"start":{"line":536,"column":2},"end":{"line":536,"column":35}},"278":{"start":{"line":537,"column":2},"end":{"line":537,"column":24}},"279":{"start":{"line":538,"column":2},"end":{"line":541,"column":5}},"280":{"start":{"line":539,"column":4},"end":{"line":540,"column":30}},"281":{"start":{"line":540,"column":6},"end":{"line":540,"column":30}},"282":{"start":{"line":543,"column":2},"end":{"line":543,"column":48}},"283":{"start":{"line":544,"column":2},"end":{"line":545,"column":71}},"284":{"start":{"line":545,"column":4},"end":{"line":545,"column":71}},"285":{"start":{"line":548,"column":2},"end":{"line":548,"column":63}},"286":{"start":{"line":549,"column":2},"end":{"line":549,"column":48}},"287":{"start":{"line":552,"column":0},"end":{"line":556,"column":1}},"288":{"start":{"line":553,"column":2},"end":{"line":555,"column":29}},"289":{"start":{"line":560,"column":0},"end":{"line":577,"column":1}},"290":{"start":{"line":561,"column":2},"end":{"line":563,"column":3}},"291":{"start":{"line":562,"column":4},"end":{"line":562,"column":16}},"292":{"start":{"line":565,"column":2},"end":{"line":568,"column":3}},"293":{"start":{"line":567,"column":4},"end":{"line":567,"column":22}},"294":{"start":{"line":570,"column":2},"end":{"line":570,"column":28}},"295":{"start":{"line":571,"column":2},"end":{"line":571,"column":28}},"296":{"start":{"line":572,"column":2},"end":{"line":574,"column":3}},"297":{"start":{"line":573,"column":4},"end":{"line":573,"column":16}},"298":{"start":{"line":576,"column":2},"end":{"line":576,"column":15}},"299":{"start":{"line":581,"column":0},"end":{"line":591,"column":1}},"300":{"start":{"line":582,"column":2},"end":{"line":584,"column":3}},"301":{"start":{"line":583,"column":4},"end":{"line":583,"column":31}},"302":{"start":{"line":586,"column":2},"end":{"line":588,"column":3}},"303":{"start":{"line":587,"column":4},"end":{"line":587,"column":46}},"304":{"start":{"line":587,"column":35},"end":{"line":587,"column":44}},"305":{"start":{"line":590,"column":2},"end":{"line":590,"column":12}},"306":{"start":{"line":599,"column":0},"end":{"line":609,"column":1}},"307":{"start":{"line":600,"column":2},"end":{"line":600,"column":21}},"308":{"start":{"line":601,"column":2},"end":{"line":604,"column":3}},"309":{"start":{"line":602,"column":4},"end":{"line":602,"column":49}},"310":{"start":{"line":603,"column":4},"end":{"line":603,"column":29}},"311":{"start":{"line":605,"column":2},"end":{"line":607,"column":4}},"312":{"start":{"line":608,"column":2},"end":{"line":608,"column":17}},"313":{"start":{"line":616,"column":0},"end":{"line":618,"column":1}},"314":{"start":{"line":617,"column":2},"end":{"line":617,"column":39}}},"branchMap":{"1":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"2":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"3":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":6},"end":{"line":63,"column":6}},{"start":{"line":63,"column":6},"end":{"line":63,"column":6}}]},"4":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":10},"end":{"line":63,"column":33}},{"start":{"line":63,"column":37},"end":{"line":63,"column":61}},{"start":{"line":64,"column":10},"end":{"line":64,"column":39}}]},"5":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"6":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"7":{"line":93,"type":"cond-expr","locations":[{"start":{"line":94,"column":6},"end":{"line":94,"column":26}},{"start":{"line":94,"column":29},"end":{"line":94,"column":56}}]},"8":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":43},"end":{"line":93,"column":58}},{"start":{"line":93,"column":62},"end":{"line":93,"column":82}}]},"9":{"line":100,"type":"cond-expr","locations":[{"start":{"line":101,"column":6},"end":{"line":101,"column":24}},{"start":{"line":101,"column":27},"end":{"line":101,"column":52}}]},"10":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":41},"end":{"line":100,"column":54}},{"start":{"line":100,"column":58},"end":{"line":100,"column":76}}]},"11":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"12":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"13":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":9},"end":{"line":122,"column":9}},{"start":{"line":122,"column":9},"end":{"line":122,"column":9}}]},"14":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]},"15":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":8},"end":{"line":124,"column":19}},{"start":{"line":124,"column":23},"end":{"line":124,"column":39}}]},"16":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":9},"end":{"line":135,"column":9}},{"start":{"line":135,"column":9},"end":{"line":135,"column":9}}]},"17":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":6},"end":{"line":139,"column":6}},{"start":{"line":139,"column":6},"end":{"line":139,"column":6}}]},"18":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":2},"end":{"line":161,"column":2}},{"start":{"line":161,"column":2},"end":{"line":161,"column":2}}]},"19":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":9},"end":{"line":164,"column":13}},{"start":{"line":164,"column":17},"end":{"line":164,"column":19}}]},"20":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":9},"end":{"line":165,"column":13}},{"start":{"line":165,"column":17},"end":{"line":165,"column":19}}]},"21":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"22":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":6},"end":{"line":167,"column":18}},{"start":{"line":167,"column":22},"end":{"line":167,"column":58}}]},"23":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":168,"column":4}},{"start":{"line":168,"column":4},"end":{"line":168,"column":4}}]},"24":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":8},"end":{"line":168,"column":18}},{"start":{"line":168,"column":22},"end":{"line":168,"column":56}}]},"25":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"26":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":6},"end":{"line":176,"column":28}},{"start":{"line":176,"column":32},"end":{"line":176,"column":46}}]},"27":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":4},"end":{"line":177,"column":4}},{"start":{"line":177,"column":4},"end":{"line":177,"column":4}}]},"28":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":6},"end":{"line":180,"column":6}},{"start":{"line":180,"column":6},"end":{"line":180,"column":6}}]},"29":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"30":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":6},"end":{"line":195,"column":28}},{"start":{"line":195,"column":32},"end":{"line":195,"column":46}}]},"31":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":200,"column":2}},{"start":{"line":200,"column":2},"end":{"line":200,"column":2}}]},"32":{"line":200,"type":"binary-expr","locations":[{"start":{"line":200,"column":6},"end":{"line":200,"column":27}},{"start":{"line":200,"column":31},"end":{"line":200,"column":58}}]},"33":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":9},"end":{"line":202,"column":9}},{"start":{"line":202,"column":9},"end":{"line":202,"column":9}}]},"34":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":2},"end":{"line":207,"column":2}},{"start":{"line":207,"column":2},"end":{"line":207,"column":2}}]},"35":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":7},"end":{"line":207,"column":18}},{"start":{"line":207,"column":22},"end":{"line":207,"column":42}},{"start":{"line":207,"column":47},"end":{"line":207,"column":59}}]},"36":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]},"37":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":6},"end":{"line":212,"column":26}},{"start":{"line":212,"column":30},"end":{"line":212,"column":56}}]},"38":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":13},"end":{"line":216,"column":32}},{"start":{"line":216,"column":36},"end":{"line":216,"column":57}}]},"39":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":2},"end":{"line":218,"column":2}},{"start":{"line":218,"column":2},"end":{"line":218,"column":2}}]},"40":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":6},"end":{"line":218,"column":10}},{"start":{"line":218,"column":14},"end":{"line":218,"column":39}}]},"41":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":2},"end":{"line":222,"column":2}},{"start":{"line":222,"column":2},"end":{"line":222,"column":2}}]},"42":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":6},"end":{"line":222,"column":10}},{"start":{"line":222,"column":14},"end":{"line":222,"column":41}}]},"43":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":2},"end":{"line":237,"column":2}},{"start":{"line":237,"column":2},"end":{"line":237,"column":2}}]},"44":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":2},"end":{"line":243,"column":2}},{"start":{"line":243,"column":2},"end":{"line":243,"column":2}}]},"45":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":9},"end":{"line":245,"column":9}},{"start":{"line":245,"column":9},"end":{"line":245,"column":9}}]},"46":{"line":245,"type":"binary-expr","locations":[{"start":{"line":245,"column":13},"end":{"line":245,"column":34}},{"start":{"line":245,"column":38},"end":{"line":245,"column":55}}]},"47":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":9},"end":{"line":248,"column":9}},{"start":{"line":248,"column":9},"end":{"line":248,"column":9}}]},"48":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":4},"end":{"line":253,"column":4}},{"start":{"line":253,"column":4},"end":{"line":253,"column":4}}]},"49":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":6},"end":{"line":257,"column":6}},{"start":{"line":257,"column":6},"end":{"line":257,"column":6}}]},"50":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":13},"end":{"line":259,"column":13}},{"start":{"line":259,"column":13},"end":{"line":259,"column":13}}]},"51":{"line":259,"type":"binary-expr","locations":[{"start":{"line":259,"column":18},"end":{"line":259,"column":29}},{"start":{"line":259,"column":34},"end":{"line":259,"column":44}}]},"52":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":4},"end":{"line":263,"column":4}},{"start":{"line":263,"column":4},"end":{"line":263,"column":4}}]},"53":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":11},"end":{"line":265,"column":11}},{"start":{"line":265,"column":11},"end":{"line":265,"column":11}}]},"54":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":8},"end":{"line":268,"column":8}},{"start":{"line":268,"column":8},"end":{"line":268,"column":8}}]},"55":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":2},"end":{"line":274,"column":2}},{"start":{"line":274,"column":2},"end":{"line":274,"column":2}}]},"56":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":6},"end":{"line":276,"column":6}},{"start":{"line":276,"column":6},"end":{"line":276,"column":6}}]},"57":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":2},"end":{"line":308,"column":2}},{"start":{"line":308,"column":2},"end":{"line":308,"column":2}}]},"58":{"line":308,"type":"binary-expr","locations":[{"start":{"line":308,"column":6},"end":{"line":308,"column":31}},{"start":{"line":308,"column":35},"end":{"line":308,"column":49}}]},"59":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":4},"end":{"line":314,"column":4}},{"start":{"line":314,"column":4},"end":{"line":314,"column":4}}]},"60":{"line":315,"type":"switch","locations":[{"start":{"line":316,"column":8},"end":{"line":318,"column":16}},{"start":{"line":319,"column":8},"end":{"line":321,"column":16}},{"start":{"line":322,"column":8},"end":{"line":322,"column":22}},{"start":{"line":323,"column":8},"end":{"line":324,"column":24}}]},"61":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":4},"end":{"line":328,"column":4}},{"start":{"line":328,"column":4},"end":{"line":328,"column":4}}]},"62":{"line":328,"type":"binary-expr","locations":[{"start":{"line":328,"column":8},"end":{"line":328,"column":25}},{"start":{"line":328,"column":30},"end":{"line":328,"column":51}},{"start":{"line":328,"column":55},"end":{"line":328,"column":65}},{"start":{"line":329,"column":8},"end":{"line":329,"column":32}}]},"63":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":2},"end":{"line":348,"column":2}},{"start":{"line":348,"column":2},"end":{"line":348,"column":2}}]},"64":{"line":353,"type":"binary-expr","locations":[{"start":{"line":353,"column":23},"end":{"line":353,"column":35}},{"start":{"line":353,"column":39},"end":{"line":353,"column":65}}]},"65":{"line":355,"type":"binary-expr","locations":[{"start":{"line":355,"column":18},"end":{"line":355,"column":26}},{"start":{"line":355,"column":30},"end":{"line":355,"column":46}}]},"66":{"line":356,"type":"binary-expr","locations":[{"start":{"line":356,"column":38},"end":{"line":356,"column":46}},{"start":{"line":356,"column":50},"end":{"line":356,"column":72}}]},"67":{"line":357,"type":"binary-expr","locations":[{"start":{"line":357,"column":22},"end":{"line":357,"column":30}},{"start":{"line":357,"column":34},"end":{"line":357,"column":56}}]},"68":{"line":358,"type":"binary-expr","locations":[{"start":{"line":358,"column":22},"end":{"line":358,"column":34}},{"start":{"line":358,"column":38},"end":{"line":358,"column":64}}]},"69":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":2},"end":{"line":360,"column":2}},{"start":{"line":360,"column":2},"end":{"line":360,"column":2}}]},"70":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":12},"end":{"line":382,"column":17}},{"start":{"line":382,"column":21},"end":{"line":382,"column":23}},{"start":{"line":382,"column":27},"end":{"line":382,"column":29}}]},"71":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":2},"end":{"line":384,"column":2}},{"start":{"line":384,"column":2},"end":{"line":384,"column":2}}]},"72":{"line":385,"type":"binary-expr","locations":[{"start":{"line":385,"column":13},"end":{"line":385,"column":19}},{"start":{"line":385,"column":23},"end":{"line":385,"column":25}}]},"73":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":6},"end":{"line":390,"column":6}},{"start":{"line":390,"column":6},"end":{"line":390,"column":6}}]},"74":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":4},"end":{"line":395,"column":4}},{"start":{"line":395,"column":4},"end":{"line":395,"column":4}}]},"75":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":8},"end":{"line":395,"column":22}},{"start":{"line":395,"column":26},"end":{"line":395,"column":52}}]},"76":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":4},"end":{"line":401,"column":4}},{"start":{"line":401,"column":4},"end":{"line":401,"column":4}}]},"77":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":8},"end":{"line":401,"column":19}},{"start":{"line":401,"column":23},"end":{"line":401,"column":46}}]},"78":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":8},"end":{"line":405,"column":8}},{"start":{"line":405,"column":8},"end":{"line":405,"column":8}}]},"79":{"line":405,"type":"binary-expr","locations":[{"start":{"line":405,"column":12},"end":{"line":405,"column":28}},{"start":{"line":405,"column":32},"end":{"line":405,"column":60}}]},"80":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":10},"end":{"line":410,"column":10}},{"start":{"line":410,"column":10},"end":{"line":410,"column":10}}]},"81":{"line":410,"type":"binary-expr","locations":[{"start":{"line":410,"column":14},"end":{"line":410,"column":28}},{"start":{"line":410,"column":32},"end":{"line":410,"column":58}},{"start":{"line":411,"column":12},"end":{"line":411,"column":31}}]},"82":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":2},"end":{"line":430,"column":2}},{"start":{"line":430,"column":2},"end":{"line":430,"column":2}}]},"83":{"line":446,"type":"binary-expr","locations":[{"start":{"line":446,"column":10},"end":{"line":446,"column":33}},{"start":{"line":446,"column":39},"end":{"line":446,"column":51}},{"start":{"line":447,"column":5},"end":{"line":447,"column":31}}]},"84":{"line":452,"type":"cond-expr","locations":[{"start":{"line":452,"column":38},"end":{"line":452,"column":48}},{"start":{"line":452,"column":51},"end":{"line":452,"column":53}}]},"85":{"line":457,"type":"cond-expr","locations":[{"start":{"line":457,"column":21},"end":{"line":457,"column":38}},{"start":{"line":457,"column":41},"end":{"line":457,"column":50}}]},"86":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":4},"end":{"line":465,"column":4}},{"start":{"line":465,"column":4},"end":{"line":465,"column":4}}]},"87":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":6},"end":{"line":467,"column":6}},{"start":{"line":467,"column":6},"end":{"line":467,"column":6}}]},"88":{"line":467,"type":"binary-expr","locations":[{"start":{"line":467,"column":10},"end":{"line":467,"column":16}},{"start":{"line":467,"column":20},"end":{"line":467,"column":30}}]},"89":{"line":468,"type":"cond-expr","locations":[{"start":{"line":468,"column":19},"end":{"line":468,"column":34}},{"start":{"line":468,"column":37},"end":{"line":468,"column":52}}]},"90":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":4},"end":{"line":475,"column":4}},{"start":{"line":475,"column":4},"end":{"line":475,"column":4}}]},"91":{"line":475,"type":"binary-expr","locations":[{"start":{"line":475,"column":8},"end":{"line":475,"column":16}},{"start":{"line":475,"column":20},"end":{"line":475,"column":28}}]},"92":{"line":476,"type":"if","locations":[{"start":{"line":476,"column":4},"end":{"line":476,"column":4}},{"start":{"line":476,"column":4},"end":{"line":476,"column":4}}]},"93":{"line":477,"type":"if","locations":[{"start":{"line":477,"column":4},"end":{"line":477,"column":4}},{"start":{"line":477,"column":4},"end":{"line":477,"column":4}}]},"94":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":4},"end":{"line":478,"column":4}},{"start":{"line":478,"column":4},"end":{"line":478,"column":4}}]},"95":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":6},"end":{"line":488,"column":6}},{"start":{"line":488,"column":6},"end":{"line":488,"column":6}}]},"96":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":2},"end":{"line":503,"column":2}},{"start":{"line":503,"column":2},"end":{"line":503,"column":2}}]},"97":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":4},"end":{"line":508,"column":4}},{"start":{"line":508,"column":4},"end":{"line":508,"column":4}}]},"98":{"line":524,"type":"if","locations":[{"start":{"line":524,"column":2},"end":{"line":524,"column":2}},{"start":{"line":524,"column":2},"end":{"line":524,"column":2}}]},"99":{"line":524,"type":"binary-expr","locations":[{"start":{"line":524,"column":8},"end":{"line":524,"column":16}},{"start":{"line":524,"column":20},"end":{"line":524,"column":28}}]},"100":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":2},"end":{"line":528,"column":2}},{"start":{"line":528,"column":2},"end":{"line":528,"column":2}}]},"101":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":2},"end":{"line":531,"column":2}},{"start":{"line":531,"column":2},"end":{"line":531,"column":2}}]},"102":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":4},"end":{"line":539,"column":4}},{"start":{"line":539,"column":4},"end":{"line":539,"column":4}}]},"103":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":2},"end":{"line":544,"column":2}},{"start":{"line":544,"column":2},"end":{"line":544,"column":2}}]},"104":{"line":553,"type":"cond-expr","locations":[{"start":{"line":554,"column":4},"end":{"line":554,"column":37}},{"start":{"line":555,"column":4},"end":{"line":555,"column":28}}]},"105":{"line":561,"type":"if","locations":[{"start":{"line":561,"column":2},"end":{"line":561,"column":2}},{"start":{"line":561,"column":2},"end":{"line":561,"column":2}}]},"106":{"line":565,"type":"if","locations":[{"start":{"line":565,"column":2},"end":{"line":565,"column":2}},{"start":{"line":565,"column":2},"end":{"line":565,"column":2}}]},"107":{"line":565,"type":"binary-expr","locations":[{"start":{"line":565,"column":7},"end":{"line":565,"column":30}},{"start":{"line":565,"column":34},"end":{"line":565,"column":57}},{"start":{"line":566,"column":5},"end":{"line":566,"column":28}},{"start":{"line":566,"column":32},"end":{"line":566,"column":55}}]},"108":{"line":572,"type":"if","locations":[{"start":{"line":572,"column":2},"end":{"line":572,"column":2}},{"start":{"line":572,"column":2},"end":{"line":572,"column":2}}]},"109":{"line":582,"type":"if","locations":[{"start":{"line":582,"column":2},"end":{"line":582,"column":2}},{"start":{"line":582,"column":2},"end":{"line":582,"column":2}}]},"110":{"line":587,"type":"if","locations":[{"start":{"line":587,"column":4},"end":{"line":587,"column":4}},{"start":{"line":587,"column":4},"end":{"line":587,"column":4}}]},"111":{"line":617,"type":"binary-expr","locations":[{"start":{"line":617,"column":9},"end":{"line":617,"column":30}},{"start":{"line":617,"column":34},"end":{"line":617,"column":38}}]}},"code":["// Copyright IBM Corp. 2012,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","'use strict';","","exports.safeRequire = safeRequire;","exports.fieldsToArray = fieldsToArray;","exports.selectFields = selectFields;","exports.removeUndefined = removeUndefined;","exports.parseSettings = parseSettings;","exports.mergeSettings = exports.deepMerge = mergeSettings;","exports.isPlainObject = isPlainObject;","exports.defineCachedRelations = defineCachedRelations;","exports.sortObjectsByIds = sortObjectsByIds;","exports.setScopeValuesFromWhere = setScopeValuesFromWhere;","exports.mergeQuery = mergeQuery;","exports.mergeIncludes = mergeIncludes;","exports.createPromiseCallback = createPromiseCallback;","exports.uniq = uniq;","exports.toRegExp = toRegExp;","exports.hasRegExpFlags = hasRegExpFlags;","exports.idEquals = idEquals;","exports.findIndexOf = findIndexOf;","exports.collectTargetIds = collectTargetIds;","exports.idName = idName;","","var g = require('strong-globalize')();","var traverse = require('traverse');","var assert = require('assert');","var Promise = require('bluebird');","","function safeRequire(module) {","  try {","    return require(module);","  } catch (e) {","    g.log('Run \"{{npm install loopback-datasource-juggler}} %s\" command ',","      'to use {{loopback-datasource-juggler}} using %s database engine',","      module, module);","    process.exit(1);","  }","}","","/*"," * Extracting fixed property values for the scope from the where clause into"," * the data object"," *"," * @param {Object} The data object"," * @param {Object} The where clause"," */","function setScopeValuesFromWhere(data, where, targetModel) {","  for (var i in where) {","    if (i === 'and') {","      // Find fixed property values from each subclauses","      for (var w = 0, n = where[i].length; w < n; w++) {","        setScopeValuesFromWhere(data, where[i][w], targetModel);","      }","      continue;","    }","    var prop = targetModel.definition.properties[i];","    if (prop) {","      var val = where[i];","      if (typeof val !== 'object' || val instanceof prop.type ||","          prop.type.name === 'ObjectID') { // MongoDB key","        // Only pick the {propertyName: propertyValue}","        data[i] = where[i];","      }","    }","  }","}","","/**"," * Merge include options of default scope with runtime include option."," * exhibits the _.extend behaviour. Property value of source overrides"," * property value of destination if property name collision occurs"," * @param {String|Array|Object} destination The default value of `include` option"," * @param {String|Array|Object} source The runtime value of `include` option"," * @returns {Object}"," */","function mergeIncludes(destination, source) {","  var destArray = convertToArray(destination);","  var sourceArray = convertToArray(source);","  if (destArray.length === 0) {","    return sourceArray;","  }","  if (sourceArray.length === 0) {","    return destArray;","  }","  var relationNames = [];","  var resultArray = [];","  for (var j in sourceArray) {","    var sourceEntry = sourceArray[j];","    var sourceEntryRelationName = (typeof (sourceEntry.rel || sourceEntry.relation) === 'string') ?","      sourceEntry.relation : Object.keys(sourceEntry)[0];","    relationNames.push(sourceEntryRelationName);","    resultArray.push(sourceEntry);","  }","  for (var i in destArray) {","    var destEntry = destArray[i];","    var destEntryRelationName = (typeof (destEntry.rel || destEntry.relation) === 'string') ?","      destEntry.relation : Object.keys(destEntry)[0];","    if (relationNames.indexOf(destEntryRelationName) === -1) {","      resultArray.push(destEntry);","    }","  }","  return resultArray;","}","","/**"," * Converts input parameter into array of objects which wraps the value."," * \"someValue\" is converted to [{\"someValue\":true}]"," * [\"someValue\"] is converted to [{\"someValue\":true}]"," * {\"someValue\":true} is converted to [{\"someValue\":true}]"," * @param {String|Array|Object} param - Input parameter to be converted"," * @returns {Array}"," */","function convertToArray(include) {","  if (typeof include === 'string') {","    const obj = {};","    obj[include] = true;","    return [obj];","  } else if (isPlainObject(include)) {","    // if include is of the form - {relation:'',scope:''}","    if (include.rel || include.relation) {","      return [include];","    }","    // Build an array of key/value pairs","    var newInclude = [];","    for (var key in include) {","      const obj = {};","      obj[key] = include[key];","      newInclude.push(obj);","    }","    return newInclude;","  } else if (Array.isArray(include)) {","    var normalized = [];","    for (var i in include) {","      var includeEntry = include[i];","      if (typeof includeEntry === 'string') {","        const obj = {};","        obj[includeEntry] = true;","        normalized.push(obj);","      } else {","        normalized.push(includeEntry);","      }","    }","    return normalized;","  }","  return [];","}","","/*!"," * Merge query parameters"," * @param {Object} base The base object to contain the merged results"," * @param {Object} update The object containing updates to be merged"," * @param {Object} spec Optionally specifies parameters to exclude (set to false)"," * @returns {*|Object} The base object"," * @private"," */","function mergeQuery(base, update, spec) {","  if (!update) {","    return;","  }","  spec = spec || {};","  base = base || {};","","  if (update.where && Object.keys(update.where).length > 0) {","    if (base.where && Object.keys(base.where).length > 0) {","      base.where = {and: [base.where, update.where]};","    } else {","      base.where = update.where;","    }","  }","","  // Merge inclusion","  if (spec.include !== false && update.include) {","    if (!base.include) {","      base.include = update.include;","    } else {","      if (spec.nestedInclude === true) {","        // specify nestedInclude=true to force nesting of inclusions on scoped","        // queries. e.g. In physician.patients.getAsync({include: 'address'}),","        // inclusion should be on patient model, not on physician model.","        var saved = base.include;","        base.include = {};","        base.include[update.include] = saved;","      } else {","        // default behaviour of inclusion merge - merge inclusions at the same","        // level. - https://github.com/strongloop/loopback-datasource-juggler/pull/569#issuecomment-95310874","        base.include = mergeIncludes(base.include, update.include);","      }","    }","  }","","  if (spec.collect !== false && update.collect) {","    base.collect = update.collect;","  }","","  // Overwrite fields","  if (spec.fields !== false && update.fields !== undefined) {","    base.fields = update.fields;","  } else if (update.fields !== undefined) {","    base.fields = [].concat(base.fields).concat(update.fields);","  }","","  // set order","  if ((!base.order || spec.order === false) && update.order) {","    base.order = update.order;","  }","","  // overwrite pagination","  if (spec.limit !== false && update.limit !== undefined) {","    base.limit = update.limit;","  }","","  var skip = spec.skip !== false && spec.offset !== false;","","  if (skip && update.skip !== undefined) {","    base.skip = update.skip;","  }","","  if (skip && update.offset !== undefined) {","    base.offset = update.offset;","  }","","  return base;","}","","/**"," * Normalize fields to an array of included properties"," * @param {String|String[]|Object} fields Fields filter"," * @param {String[]} properties Property names"," * @param {Boolean} excludeUnknown To exclude fields that are unknown properties"," * @returns {String[]} An array of included property names"," */","function fieldsToArray(fields, properties, excludeUnknown) {","  if (!fields) return;","","  // include all properties by default","  var result = properties;","  var i, n;","","  if (typeof fields === 'string') {","    result = [fields];","  } else if (Array.isArray(fields) && fields.length > 0) {","    // No empty array, including all the fields","    result = fields;","  } else if ('object' === typeof fields) {","    // { field1: boolean, field2: boolean ... }","    var included = [];","    var excluded = [];","    var keys = Object.keys(fields);","    if (!keys.length) return;","","    for (i = 0, n = keys.length; i < n; i++) {","      var k = keys[i];","      if (fields[k]) {","        included.push(k);","      } else if ((k in fields) && !fields[k]) {","        excluded.push(k);","      }","    }","    if (included.length > 0) {","      result = included;","    } else if (excluded.length > 0) {","      for (i = 0, n = excluded.length; i < n; i++) {","        var index = result.indexOf(excluded[i]);","        if (index !== -1) result.splice(index, 1); // only when existing field excluded","      }","    }","  }","","  var fieldArray = [];","  if (excludeUnknown) {","    for (i = 0, n = result.length; i < n; i++) {","      if (properties.indexOf(result[i]) !== -1) {","        fieldArray.push(result[i]);","      }","    }","  } else {","    fieldArray = result;","  }","  return fieldArray;","}","","function selectFields(fields) {","  // map function","  return function(obj) {","    var result = {};","    var key;","","    for (var i = 0; i < fields.length; i++) {","      key = fields[i];","","      result[key] = obj[key];","    }","    return result;","  };","}","","/**"," * Remove undefined values from the queury object"," * @param query"," * @param handleUndefined {String} either \"nullify\", \"throw\" or \"ignore\" (default: \"ignore\")"," * @returns {exports.map|*}"," */","function removeUndefined(query, handleUndefined) {","  if (typeof query !== 'object' || query === null) {","    return query;","  }","  // WARNING: [rfeng] Use map() will cause mongodb to produce invalid BSON","  // as traverse doesn't transform the ObjectId correctly","  return traverse(query).forEach(function(x) {","    if (x === undefined) {","      switch (handleUndefined) {","        case 'nullify':","          this.update(null);","          break;","        case 'throw':","          throw new Error(g.f('Unexpected `undefined` in query'));","          break;","        case 'ignore':","        default:","          this.remove();","      }","    }","","    if (!Array.isArray(x) && (typeof x === 'object' && x !== null &&","        x.constructor !== Object)) {","      // This object is not a plain object","      this.update(x, true); // Stop navigating into this object","      return x;","    }","","    return x;","  });","}","","var url = require('url');","var qs = require('qs');","","/**"," * Parse a URL into a settings object"," * @param {String} urlStr The URL for connector settings"," * @returns {Object} The settings object"," */","function parseSettings(urlStr) {","  if (!urlStr) {","    return {};","  }","  var uri = url.parse(urlStr, false);","  var settings = {};","  settings.connector = uri.protocol && uri.protocol.split(':')[0]; // Remove the trailing :","  settings.host = settings.hostname = uri.hostname;","  settings.port = uri.port && Number(uri.port); // port is a string","  settings.user = settings.username = uri.auth && uri.auth.split(':')[0]; // <username>:<password>","  settings.password = uri.auth && uri.auth.split(':')[1];","  settings.database = uri.pathname && uri.pathname.split('/')[1];  // remove the leading /","  settings.url = urlStr;","  if (uri.query) {","    var params = qs.parse(uri.query);","    for (var p in params) {","      settings[p] = params[p];","    }","  }","  return settings;","}","","/**"," * Merge model settings"," *"," * Folked from https://github.com/nrf110/deepmerge/blob/master/index.js"," *"," * The original function tries to merge array items if they are objects"," *"," * @param {Object} target The target settings object"," * @param {Object} src The source settings object"," * @returns {Object} The merged settings object"," */","function mergeSettings(target, src) {","  var array = Array.isArray(src);","  var dst = array && [] || {};","","  if (array) {","    target = target || [];","    // Add items from target into dst","    dst = dst.concat(target);","    // Add non-existent items from source into dst","    src.forEach(function(e) {","      if (dst.indexOf(e) === -1) {","        dst.push(e);","      }","    });","  } else {","    if (target != null && typeof target === 'object') {","      // Add properties from target to dst","      Object.keys(target).forEach(function(key) {","        dst[key] = target[key];","      });","    }","    if (src != null && typeof src === 'object') {","      // Source is an object","      Object.keys(src).forEach(function(key) {","        var srcValue = src[key];","        if (srcValue == null || typeof srcValue !== 'object') {","          // The source item value is null, undefined or not an object","          dst[key] = srcValue;","        } else {","          // The source item value is an object","          if (target == null || typeof target !== 'object' ||","            target[key] == null) {","            // If target is not an object or target item value","            dst[key] = srcValue;","          } else {","            dst[key] = mergeSettings(target[key], src[key]);","          }","        }","      });","    }","  }","","  return dst;","}","","/**"," * Define an non-enumerable __cachedRelations property"," * @param {Object} obj The obj to receive the __cachedRelations"," */","function defineCachedRelations(obj) {","  if (!obj.__cachedRelations) {","    Object.defineProperty(obj, '__cachedRelations', {","      writable: true,","      enumerable: false,","      configurable: true,","      value: {},","    });","  }","}","","/**"," * Check if the argument is plain object"," * @param {*) obj The obj value"," * @returns {boolean}"," */","function isPlainObject(obj) {","  return (typeof obj === 'object') && (obj !== null) &&","    (obj.constructor === Object);","}","","function sortObjectsByIds(idName, ids, objects, strict) {","  ids = ids.map(function(id) {","    return (typeof id === 'object') ? String(id) : id;","  });","","  var indexOf = function(x) {","    var isObj = (typeof x[idName] === 'object'); // ObjectID","    var id = isObj ? String(x[idName]) : x[idName];","    return ids.indexOf(id);","  };","","  var heading = [];","  var tailing = [];","","  objects.forEach(function(x) {","    if (typeof x === 'object') {","      var idx = indexOf(x);","      if (strict && idx === -1) return;","      idx === -1 ? tailing.push(x) : heading.push(x);","    }","  });","","  heading.sort(function(x, y) {","    var a = indexOf(x);","    var b = indexOf(y);","    if (a === -1 || b === -1) return 1; // last","    if (a === b) return 0;","    if (a > b) return 1;","    if (a < b) return -1;","  });","","  return heading.concat(tailing);","};","","function createPromiseCallback() {","  var cb;","  var promise = new Promise(function(resolve, reject) {","    cb = function(err, data) {","      if (err) return reject(err);","      return resolve(data);","    };","  });","  cb.promise = promise;","  return cb;","}","","/**"," * Dedupe an array"," * @param {Array} an array"," * @returns {Array} an array with unique items"," */","function uniq(a) {","  var uniqArray = [];","  if (!a) {","    return uniqArray;","  }","  assert(Array.isArray(a), 'array argument is required');","  for (var i = 0, n = a.length; i < n; i++) {","    if (a.indexOf(a[i]) === i) {","      uniqArray.push(a[i]);","    }","  }","  return uniqArray;","}","","/**"," * Converts a string, regex literal, or a RegExp object to a RegExp object."," * @param {String|Object} The string, regex literal, or RegExp object to convert"," * @returns {Object} A RegExp object"," */","function toRegExp(regex) {","  var isString = typeof regex === 'string';","  var isRegExp = regex instanceof RegExp;","","  if (!(isString || isRegExp))","    return new Error(g.f('Invalid argument, must be a string, {{regex}} literal, or ' +","        '{{RegExp}} object'));","","  if (isRegExp)","    return regex;","","  if (!hasRegExpFlags(regex))","    return new RegExp(regex);","","  // only accept i, g, or m as valid regex flags","  var flags = regex.split('/').pop().split('');","  var validFlags = ['i', 'g', 'm'];","  var invalidFlags = [];","  flags.forEach(function(flag) {","    if (validFlags.indexOf(flag) === -1)","      invalidFlags.push(flag);","  });","","  var hasInvalidFlags = invalidFlags.length > 0;","  if (hasInvalidFlags)","    return new Error(g.f('Invalid {{regex}} flags: %s', invalidFlags));","","  // strip regex delimiter forward slashes","  var expression = regex.substr(1, regex.lastIndexOf('/') - 1);","  return new RegExp(expression, flags.join(''));","}","","function hasRegExpFlags(regex) {","  return regex instanceof RegExp ?","    regex.toString().split('/').pop() :","    !!regex.match(/.*\\/.+$/);","}","","// Compare two id values to decide if updateAttributes is trying to change","// the id value for a given instance","function idEquals(id1, id2) {","  if (id1 === id2) {","    return true;","  }","  // Allows number/string conversions","  if ((typeof id1 === 'number' && typeof id2 === 'string') ||","    (typeof id1 === 'string' && typeof id2 === 'number')) {","    return id1 == id2;","  }","  // For complex id types such as MongoDB ObjectID","  id1 = JSON.stringify(id1);","  id2 = JSON.stringify(id2);","  if (id1 === id2) {","    return true;","  }","","  return false;","}","","// Defaults to native Array.prototype.indexOf when no idEqual is present","// Otherwise, returns the lowest index for which isEqual(arr[]index, target) is true","function findIndexOf(arr, target, isEqual) {","  if (!isEqual) {","    return arr.indexOf(target);","  }","","  for (var i = 0; i < arr.length; i++) {","    if (isEqual(arr[i], target)) { return i; }","  };","","  return -1;","}","","/**"," * Returns an object that queries targetIds."," * @param {Array} The array of targetData"," * @param {String} The Id property name of target model"," * @returns {Object} The object that queries targetIds"," */","function collectTargetIds(targetData, idPropertyName) {","  var targetIds = [];","  for (var i = 0; i < targetData.length; i++) {","    var targetId = targetData[i][idPropertyName];","    targetIds.push(targetId);","  };","  var IdQuery = {","    inq: uniq(targetIds),","  };","  return IdQuery;","}","","/**"," * Find the idKey of a Model."," * @param {ModelConstructor} m - Model Constructor"," * @returns {String}"," */","function idName(m) {","  return m.definition.idName() || 'id';","}",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"28":1,"29":1,"30":1,"31":1,"33":1,"34":0,"35":0,"37":0,"40":0,"51":1,"52":0,"53":0,"55":0,"56":0,"58":0,"60":0,"61":0,"62":0,"63":0,"66":0,"80":1,"81":0,"82":0,"83":0,"84":0,"86":0,"87":0,"89":0,"90":0,"91":0,"92":0,"93":0,"95":0,"96":0,"98":0,"99":0,"100":0,"102":0,"103":0,"106":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"124":0,"125":0,"128":0,"129":0,"130":0,"131":0,"132":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"144":0,"147":0,"149":0,"160":1,"161":0,"162":0,"164":0,"165":0,"167":0,"168":0,"169":0,"171":0,"176":0,"177":0,"178":0,"180":0,"184":0,"185":0,"186":0,"190":0,"195":0,"196":0,"200":0,"201":0,"202":0,"203":0,"207":0,"208":0,"212":0,"213":0,"216":0,"218":0,"219":0,"222":0,"223":0,"226":0,"236":1,"237":0,"240":0,"241":0,"243":0,"244":0,"245":0,"247":0,"248":0,"250":0,"251":0,"252":0,"253":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"273":0,"274":0,"275":0,"276":0,"277":0,"281":0,"283":0,"286":1,"288":0,"289":0,"290":0,"292":0,"293":0,"295":0,"297":0,"307":1,"308":0,"309":0,"313":0,"314":0,"315":0,"317":0,"318":0,"320":0,"321":0,"324":0,"328":0,"331":0,"332":0,"335":0,"339":1,"340":1,"347":1,"348":0,"349":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"366":0,"380":1,"381":19,"382":19,"384":19,"385":0,"387":0,"389":0,"390":0,"391":0,"395":19,"397":12,"398":30,"401":19,"403":19,"404":34,"405":34,"407":26,"410":8,"413":8,"415":0,"422":19,"429":1,"430":0,"431":0,"445":1,"446":0,"450":1,"451":0,"452":0,"455":0,"456":0,"457":0,"458":0,"461":0,"462":0,"464":0,"465":0,"466":0,"467":0,"468":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"481":0,"484":1,"485":0,"486":0,"487":0,"488":0,"489":0,"492":0,"493":0,"501":1,"502":0,"503":0,"504":0,"506":0,"507":0,"508":0,"509":0,"512":0,"520":1,"521":0,"522":0,"524":0,"525":0,"528":0,"529":0,"531":0,"532":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"543":0,"544":0,"545":0,"548":0,"549":0,"552":1,"553":0,"560":1,"561":0,"562":0,"565":0,"567":0,"570":0,"571":0,"572":0,"573":0,"576":0,"581":1,"582":0,"583":0,"586":0,"587":0,"590":0,"599":1,"600":0,"601":0,"602":0,"603":0,"605":0,"608":0,"616":1,"617":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/observer.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/observer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":6,"7":6,"8":6,"9":6,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0},"b":{"1":[6,0],"2":[6,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":6,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"ObserverMixin","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":25}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":24},"end":{"line":31,"column":54}}},"3":{"name":"(anonymous_3)","line":46,"loc":{"start":{"line":46,"column":31},"end":{"line":46,"column":61}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":31},"end":{"line":60,"column":51}}},"5":{"name":"(anonymous_5)","line":73,"loc":{"start":{"line":73,"column":34},"end":{"line":73,"column":73}}},"6":{"name":"createNotifier","line":77,"loc":{"start":{"line":77,"column":2},"end":{"line":77,"column":30}}},"7":{"name":"(anonymous_7)","line":78,"loc":{"start":{"line":78,"column":11},"end":{"line":78,"column":31}}},"8":{"name":"doNotify","line":97,"loc":{"start":{"line":97,"column":48},"end":{"line":97,"column":71}}},"9":{"name":"notifySingleObserver","line":103,"loc":{"start":{"line":103,"column":6},"end":{"line":103,"column":46}}},"10":{"name":"(anonymous_10)","line":107,"loc":{"start":{"line":107,"column":12},"end":{"line":107,"column":23}}},"11":{"name":"(anonymous_11)","line":112,"loc":{"start":{"line":112,"column":6},"end":{"line":112,"column":20}}},"12":{"name":"(anonymous_12)","line":118,"loc":{"start":{"line":118,"column":37},"end":{"line":118,"column":76}}},"13":{"name":"(anonymous_13)","line":141,"loc":{"start":{"line":141,"column":38},"end":{"line":141,"column":81}}},"14":{"name":"(anonymous_14)","line":151,"loc":{"start":{"line":151,"column":4},"end":{"line":151,"column":27}}},"15":{"name":"cbForWork","line":154,"loc":{"start":{"line":154,"column":6},"end":{"line":154,"column":30}}},"16":{"name":"(anonymous_16)","line":163,"loc":{"start":{"line":163,"column":10},"end":{"line":163,"column":33}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"4":{"start":{"line":18,"column":0},"end":{"line":19,"column":1}},"5":{"start":{"line":31,"column":0},"end":{"line":38,"column":2}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":42}},"7":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":36}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":44}},"10":{"start":{"line":46,"column":0},"end":{"line":53,"column":2}},"11":{"start":{"line":47,"column":2},"end":{"line":47,"column":63}},"12":{"start":{"line":47,"column":56},"end":{"line":47,"column":63}},"13":{"start":{"line":49,"column":2},"end":{"line":49,"column":59}},"14":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"15":{"start":{"line":51,"column":4},"end":{"line":51,"column":55}},"16":{"start":{"line":60,"column":0},"end":{"line":64,"column":2}},"17":{"start":{"line":61,"column":2},"end":{"line":61,"column":63}},"18":{"start":{"line":61,"column":56},"end":{"line":61,"column":63}},"19":{"start":{"line":63,"column":2},"end":{"line":63,"column":40}},"20":{"start":{"line":73,"column":0},"end":{"line":116,"column":2}},"21":{"start":{"line":74,"column":2},"end":{"line":74,"column":18}},"22":{"start":{"line":75,"column":2},"end":{"line":75,"column":58}},"23":{"start":{"line":75,"column":17},"end":{"line":75,"column":58}},"24":{"start":{"line":77,"column":2},"end":{"line":85,"column":3}},"25":{"start":{"line":78,"column":4},"end":{"line":84,"column":6}},"26":{"start":{"line":79,"column":6},"end":{"line":82,"column":7}},"27":{"start":{"line":80,"column":8},"end":{"line":80,"column":19}},"28":{"start":{"line":81,"column":8},"end":{"line":81,"column":22}},"29":{"start":{"line":83,"column":6},"end":{"line":83,"column":48}},"30":{"start":{"line":87,"column":2},"end":{"line":93,"column":3}},"31":{"start":{"line":88,"column":4},"end":{"line":88,"column":19}},"32":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"33":{"start":{"line":90,"column":6},"end":{"line":90,"column":47}},"34":{"start":{"line":92,"column":4},"end":{"line":92,"column":44}},"35":{"start":{"line":95,"column":2},"end":{"line":95,"column":64}},"36":{"start":{"line":97,"column":2},"end":{"line":114,"column":5}},"37":{"start":{"line":98,"column":4},"end":{"line":98,"column":43}},"38":{"start":{"line":98,"column":13},"end":{"line":98,"column":43}},"39":{"start":{"line":99,"column":4},"end":{"line":99,"column":72}},"40":{"start":{"line":99,"column":41},"end":{"line":99,"column":72}},"41":{"start":{"line":101,"column":4},"end":{"line":113,"column":6}},"42":{"start":{"line":104,"column":8},"end":{"line":104,"column":39}},"43":{"start":{"line":105,"column":8},"end":{"line":110,"column":9}},"44":{"start":{"line":106,"column":10},"end":{"line":109,"column":12}},"45":{"start":{"line":107,"column":25},"end":{"line":107,"column":32}},"46":{"start":{"line":107,"column":33},"end":{"line":107,"column":45}},"47":{"start":{"line":112,"column":22},"end":{"line":112,"column":45}},"48":{"start":{"line":115,"column":2},"end":{"line":115,"column":26}},"49":{"start":{"line":118,"column":0},"end":{"line":123,"column":2}},"50":{"start":{"line":119,"column":2},"end":{"line":122,"column":15}},"51":{"start":{"line":120,"column":4},"end":{"line":120,"column":62}},"52":{"start":{"line":122,"column":4},"end":{"line":122,"column":15}},"53":{"start":{"line":141,"column":0},"end":{"line":184,"column":2}},"54":{"start":{"line":142,"column":2},"end":{"line":142,"column":18}},"55":{"start":{"line":143,"column":2},"end":{"line":143,"column":26}},"56":{"start":{"line":146,"column":2},"end":{"line":148,"column":3}},"57":{"start":{"line":147,"column":4},"end":{"line":147,"column":27}},"58":{"start":{"line":150,"column":2},"end":{"line":183,"column":7}},"59":{"start":{"line":152,"column":6},"end":{"line":152,"column":36}},"60":{"start":{"line":152,"column":15},"end":{"line":152,"column":36}},"61":{"start":{"line":154,"column":6},"end":{"line":174,"column":7}},"62":{"start":{"line":155,"column":8},"end":{"line":155,"column":47}},"63":{"start":{"line":156,"column":8},"end":{"line":156,"column":51}},"64":{"start":{"line":156,"column":17},"end":{"line":156,"column":51}},"65":{"start":{"line":158,"column":8},"end":{"line":158,"column":41}},"66":{"start":{"line":160,"column":8},"end":{"line":160,"column":39}},"67":{"start":{"line":162,"column":8},"end":{"line":173,"column":13}},"68":{"start":{"line":164,"column":12},"end":{"line":164,"column":51}},"69":{"start":{"line":164,"column":21},"end":{"line":164,"column":51}},"70":{"start":{"line":165,"column":12},"end":{"line":165,"column":39}},"71":{"start":{"line":166,"column":12},"end":{"line":169,"column":13}},"72":{"start":{"line":168,"column":14},"end":{"line":168,"column":40}},"73":{"start":{"line":171,"column":12},"end":{"line":171,"column":45}},"74":{"start":{"line":172,"column":12},"end":{"line":172,"column":39}},"75":{"start":{"line":176,"column":6},"end":{"line":182,"column":7}},"76":{"start":{"line":178,"column":8},"end":{"line":178,"column":22}},"77":{"start":{"line":181,"column":8},"end":{"line":181,"column":31}}},"branchMap":{"1":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":20},"end":{"line":32,"column":35}},{"start":{"line":32,"column":39},"end":{"line":32,"column":41}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"4":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":23}},{"start":{"line":47,"column":27},"end":{"line":47,"column":53}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"7":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":23}},{"start":{"line":61,"column":27},"end":{"line":61,"column":53}}]},"8":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"9":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]},"10":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":10},"end":{"line":79,"column":35}},{"start":{"line":79,"column":39},"end":{"line":79,"column":57}}]},"11":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"12":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":18},"end":{"line":95,"column":33}},{"start":{"line":95,"column":37},"end":{"line":95,"column":63}}]},"13":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"14":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"15":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":18}},{"start":{"line":99,"column":22},"end":{"line":99,"column":39}}]},"16":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"17":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":18}},{"start":{"line":105,"column":22},"end":{"line":105,"column":55}}]},"18":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":2},"end":{"line":119,"column":2}},{"start":{"line":119,"column":2},"end":{"line":119,"column":2}}]},"19":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":6},"end":{"line":119,"column":15}},{"start":{"line":119,"column":19},"end":{"line":119,"column":46}}]},"20":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":12},"end":{"line":143,"column":19}},{"start":{"line":143,"column":23},"end":{"line":143,"column":25}}]},"21":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":146,"column":2}},{"start":{"line":146,"column":2},"end":{"line":146,"column":2}}]},"22":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":6},"end":{"line":152,"column":6}},{"start":{"line":152,"column":6},"end":{"line":152,"column":6}}]},"23":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":156,"column":8}},{"start":{"line":156,"column":8},"end":{"line":156,"column":8}}]},"24":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":12},"end":{"line":164,"column":12}},{"start":{"line":164,"column":12},"end":{"line":164,"column":12}}]},"25":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":12},"end":{"line":166,"column":12}},{"start":{"line":166,"column":12},"end":{"line":166,"column":12}}]},"26":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":16},"end":{"line":166,"column":23}},{"start":{"line":166,"column":27},"end":{"line":166,"column":57}}]},"27":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":6},"end":{"line":176,"column":6}},{"start":{"line":176,"column":6},"end":{"line":176,"column":6}}]}},"code":["// Copyright IBM Corp. 2015,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","'use strict';","","var async = require('async');","var utils = require('./utils');","","module.exports = ObserverMixin;","","/**"," * ObserverMixin class.  Use to add observe/notifyObserversOf APIs to other"," * classes."," *"," * @class ObserverMixin"," */","function ObserverMixin() {","}","","/**"," * Register an asynchronous observer for the given operation (event)."," * @param {String} operation The operation name."," * @callback {function} listener The listener function. It will be invoked with"," * `this` set to the model constructor, e.g. `User`."," * @param {Object} context Operation-specific context."," * @param {function(Error=)} next The callback to call when the observer"," *   has finished."," * @end"," */","ObserverMixin.observe = function(operation, listener) {","  this._observers = this._observers || {};","  if (!this._observers[operation]) {","    this._observers[operation] = [];","  }","","  this._observers[operation].push(listener);","};","","/**"," * Unregister an asynchronous observer for the given operation (event)."," * @param {String} operation The operation name."," * @callback {function} listener The listener function."," * @end"," */","ObserverMixin.removeObserver = function(operation, listener) {","  if (!(this._observers && this._observers[operation])) return;","","  var index = this._observers[operation].indexOf(listener);","  if (index !== -1) {","    return this._observers[operation].splice(index, 1);","  }","};","","/**"," * Unregister all asynchronous observers for the given operation (event)."," * @param {String} operation The operation name."," * @end"," */","ObserverMixin.clearObservers = function(operation) {","  if (!(this._observers && this._observers[operation])) return;","","  this._observers[operation].length = 0;","};","","/**"," * Invoke all async observers for the given operation(s)."," * @param {String|String[]} operation The operation name(s)."," * @param {Object} context Operation-specific context."," * @param {function(Error=)} callback The callback to call when all observers"," *   has finished."," */","ObserverMixin.notifyObserversOf = function(operation, context, callback) {","  var self = this;","  if (!callback) callback = utils.createPromiseCallback();","","  function createNotifier(op) {","    return function(ctx, done) {","      if (typeof ctx === 'function' && done === undefined) {","        done = ctx;","        ctx = context;","      }","      self.notifyObserversOf(op, context, done);","    };","  }","","  if (Array.isArray(operation)) {","    var tasks = [];","    for (var i = 0, n = operation.length; i < n; i++) {","      tasks.push(createNotifier(operation[i]));","    }","    return async.waterfall(tasks, callback);","  }","","  var observers = this._observers && this._observers[operation];","","  this._notifyBaseObservers(operation, context, function doNotify(err) {","    if (err) return callback(err, context);","    if (!observers || !observers.length) return callback(null, context);","","    async.eachSeries(","      observers,","      function notifySingleObserver(fn, next) {","        var retval = fn(context, next);","        if (retval && typeof retval.then === 'function') {","          retval.then(","            function() { next(); return null; },","            next // error handler","          );","        }","      },","      function(err) { callback(err, context); }","    );","  });","  return callback.promise;","};","","ObserverMixin._notifyBaseObservers = function(operation, context, callback) {","  if (this.base && this.base.notifyObserversOf)","    this.base.notifyObserversOf(operation, context, callback);","  else","    callback();","};","","/**"," * Run the given function with before/after observers. It's done in three serial"," * steps asynchronously:"," *"," * - Notify the registered observers under 'before ' + operation"," * - Execute the function"," * - Notify the registered observers under 'after ' + operation"," *"," * If an error happens, it fails fast and calls the callback with err."," *"," * @param {String} operation The operation name"," * @param {Context} context The context object"," * @param {Function} fn The task to be invoked as fn(done) or fn(context, done)"," * @param {Function} callback The callback function"," * @returns {*}"," */","ObserverMixin.notifyObserversAround = function(operation, context, fn, callback) {","  var self = this;","  context = context || {};","  // Add callback to the context object so that an observer can skip other","  // ones by calling the callback function directly and not calling next","  if (context.end === undefined) {","    context.end = callback;","  }","  // First notify before observers","  return self.notifyObserversOf('before ' + operation, context,","    function(err, context) {","      if (err) return callback(err);","","      function cbForWork(err) {","        var args = [].slice.call(arguments, 0);","        if (err) return callback.apply(null, args);","        // Find the list of params from the callback in addition to err","        var returnedArgs = args.slice(1);","        // Set up the array of results","        context.results = returnedArgs;","        // Notify after observers","        self.notifyObserversOf('after ' + operation, context,","          function(err, context) {","            if (err) return callback(err, context);","            var results = returnedArgs;","            if (context && Array.isArray(context.results)) {","              // Pickup the results from context","              results = context.results;","            }","            // Build the list of params for final callback","            var args = [err].concat(results);","            callback.apply(null, args);","          });","      }","","      if (fn.length === 1) {","        // fn(done)","        fn(cbForWork);","      } else {","        // fn(context, done)","        fn(context, cbForWork);","      }","    });","};",""],"l":{"7":1,"8":1,"10":1,"18":1,"31":1,"32":6,"33":6,"34":6,"37":6,"46":1,"47":0,"49":0,"50":0,"51":0,"60":1,"61":0,"63":0,"73":1,"74":0,"75":0,"77":1,"78":0,"79":0,"80":0,"81":0,"83":0,"87":0,"88":0,"89":0,"90":0,"92":0,"95":0,"97":0,"98":0,"99":0,"101":0,"104":0,"105":0,"106":0,"107":0,"112":0,"115":0,"118":1,"119":0,"120":0,"122":0,"141":1,"142":0,"143":0,"146":0,"147":0,"150":0,"152":0,"154":1,"155":0,"156":0,"158":0,"160":0,"162":0,"164":0,"165":0,"166":0,"168":0,"171":0,"172":0,"176":0,"178":0,"181":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/node_modules/async/dist/async.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/node_modules/async/dist/async.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":10,"13":10,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":10,"27":1,"28":0,"29":0,"30":0,"31":1,"32":2,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":0,"69":1,"70":1,"71":0,"72":0,"73":1,"74":1,"75":1,"76":1,"77":1,"78":0,"79":0,"80":0,"81":0,"82":1,"83":1,"84":0,"85":1,"86":0,"87":1,"88":1,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":1,"98":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":0,"115":1,"116":1,"117":0,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":0,"128":0,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":0,"158":1,"159":1,"160":0,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":0,"174":0,"175":0,"176":0,"177":0,"178":1,"179":1,"180":0,"181":0,"182":1,"183":1,"184":0,"185":1,"186":1,"187":1,"188":1,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":1,"197":0,"198":1,"199":0,"200":0,"201":0,"202":0,"203":1,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":1,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":1,"219":0,"220":0,"221":0,"222":0,"223":1,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":1,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":1,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":1,"259":0,"260":1,"261":13,"262":0,"263":1,"264":0,"265":0,"266":0,"267":0,"268":1,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":1,"276":1,"277":0,"278":0,"279":1,"280":7,"281":0,"282":1,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":1,"294":1,"295":1,"296":6,"297":0,"298":1,"299":1,"300":1,"301":1,"302":0,"303":0,"304":1,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":1,"316":0,"317":0,"318":0,"319":0,"320":0,"321":1,"322":1,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":1,"330":1,"331":0,"332":1,"333":0,"334":0,"335":0,"336":0,"337":0,"338":1,"339":0,"340":1,"341":0,"342":0,"343":0,"344":0,"345":0,"346":1,"347":0,"348":1,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":1,"388":0,"389":0,"390":1,"391":0,"392":0,"393":0,"394":0,"395":0,"396":1,"397":0,"398":0,"399":0,"400":0,"401":1,"402":0,"403":0,"404":0,"405":0,"406":1,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":1,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":1,"440":0,"441":0,"442":0,"443":0,"444":0,"445":1,"446":0,"447":0,"448":0,"449":0,"450":1,"451":1,"452":0,"453":1,"454":1,"455":1,"456":1,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":1,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":1,"479":0,"480":0,"481":0,"482":1,"483":0,"484":0,"485":0,"486":1,"487":0,"488":0,"489":0,"490":1,"491":0,"492":1,"493":1,"494":1,"495":1,"496":1,"497":1,"498":1,"499":1,"500":1,"501":0,"502":1,"503":1,"504":1,"505":1,"506":1,"507":1,"508":1,"509":1,"510":1,"511":1,"512":1,"513":1,"514":1,"515":1,"516":1,"517":1,"518":1,"519":1,"520":1,"521":1,"522":1,"523":0,"524":1,"525":0,"526":1,"527":0,"528":1,"529":1,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":1,"538":1,"539":1,"540":1,"541":1,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":1,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":1,"564":0,"565":0,"566":0,"567":0,"568":0,"569":1,"570":1,"571":1,"572":0,"573":1,"574":2,"575":0,"576":0,"577":1,"578":1,"579":1,"580":0,"581":0,"582":0,"583":1,"584":1,"585":0,"586":0,"587":1,"588":0,"589":0,"590":1,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":1,"601":1,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":1,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":1,"618":0,"619":0,"620":0,"621":1,"622":0,"623":0,"624":0,"625":1,"626":0,"627":1,"628":0,"629":1,"630":0,"631":0,"632":0,"633":0,"634":1,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":1,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":1,"705":0,"706":1,"707":1,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":1,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":1,"726":0,"727":1,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":1,"735":1,"736":1,"737":0,"738":1,"739":1,"740":0,"741":0,"742":0,"743":1,"744":6,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":1,"761":0,"762":1,"763":1,"764":1,"765":1,"766":2,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":1,"776":1,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":1,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":1,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":1,"800":0,"801":0,"802":1,"803":0,"804":1,"805":0,"806":0,"807":0,"808":1,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":1,"816":0,"817":0,"818":1,"819":0,"820":1,"821":0,"822":1,"823":1,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":1,"835":0,"836":1,"837":1,"838":1,"839":1,"840":0,"841":0,"842":1,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":1,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":1,"869":0,"870":0,"871":1,"872":1,"873":1,"874":1,"875":0,"876":0,"877":1,"878":0,"879":0,"880":0,"881":0,"882":1,"883":1,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":1,"894":1,"895":1,"896":0,"897":1,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":1,"919":1,"920":1,"921":0,"922":0,"923":0,"924":1,"925":1,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":1,"936":0,"937":1,"938":0,"939":1,"940":0,"941":0,"942":1,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":0,"964":0,"965":0,"966":0,"967":1,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":1,"976":1,"977":0,"978":0,"979":1,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":1,"992":0,"993":0,"994":0,"995":1,"996":1,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":1,"1005":1,"1006":1,"1007":0,"1008":0,"1009":1,"1010":0,"1011":0,"1012":0,"1013":1,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":1,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":1,"1036":0,"1037":0,"1038":0,"1039":0,"1040":1,"1041":0,"1042":0,"1043":0,"1044":0,"1045":1,"1046":0,"1047":1,"1048":1,"1049":1,"1050":1,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":1,"1060":0,"1061":0,"1062":1,"1063":0,"1064":0,"1065":1,"1066":0,"1067":0,"1068":0,"1069":1,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":1,"1082":1,"1083":1,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":1,"1090":0,"1091":1,"1092":1,"1093":1,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1101":0,"1102":1,"1103":0,"1104":0,"1105":1,"1106":0,"1107":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":1,"1117":0,"1118":0,"1119":1,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":1,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":1,"1138":1,"1139":1,"1140":1,"1141":1,"1142":1,"1143":1,"1144":1,"1145":1,"1146":1,"1147":1,"1148":1,"1149":1,"1150":1,"1151":1,"1152":1,"1153":1,"1154":1,"1155":1,"1156":1,"1157":1,"1158":1,"1159":1,"1160":1,"1161":1,"1162":1,"1163":1,"1164":1,"1165":1,"1166":1,"1167":1,"1168":1,"1169":1,"1170":1,"1171":1,"1172":1,"1173":1,"1174":1,"1175":1,"1176":1,"1177":1,"1178":1,"1179":1,"1180":1,"1181":1,"1182":1,"1183":1,"1184":1,"1185":1,"1186":1,"1187":1,"1188":1,"1189":1,"1190":1,"1191":1,"1192":1,"1193":1,"1194":1,"1195":1,"1196":1,"1197":1,"1198":1,"1199":1,"1200":1,"1201":1,"1202":1,"1203":1,"1204":1,"1205":1,"1206":1,"1207":1,"1208":1,"1209":1,"1210":1,"1211":1,"1212":1,"1213":1,"1214":1,"1215":1,"1216":1,"1217":1,"1218":1,"1219":1,"1220":1,"1221":1,"1222":1,"1223":1,"1224":1,"1225":1,"1226":1,"1227":1,"1228":1,"1229":1,"1230":1,"1231":1,"1232":1,"1233":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[10,0],"8":[0,0],"9":[1,1,1,1],"10":[1,0,0,0],"11":[1,0,0],"12":[1,0],"13":[0,0],"14":[0,0],"15":[1,0],"16":[0,1],"17":[0,0],"18":[0,1],"19":[1,1],"20":[0,0,0],"21":[0,0],"22":[0,0,0,0],"23":[0,0,0,0],"24":[0,0,0],"25":[0,0],"26":[1,1],"27":[0,0,0],"28":[1,1],"29":[1,1],"30":[1,0],"31":[0,0,0],"32":[1,1,1,1],"33":[1,1,1,1,1],"34":[1,1],"35":[1,0],"36":[1,0],"37":[1,0],"38":[0,0],"39":[0,0,0,0,0,0],"40":[0,0,0],"41":[1,1,1,1],"42":[1,1,1,1,1],"43":[1,1],"44":[1,1],"45":[1,1,1],"46":[1,1],"47":[1,0],"48":[0,0],"49":[0,0,0],"50":[0,0,0,0],"51":[0,0,0,0],"52":[0,0],"53":[0,0],"54":[0,0,0],"55":[0,0,0,0,0,0,0,0,0,0],"56":[0,0],"57":[0,0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0,0],"121":[1,0],"122":[1,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[1,1],"153":[1,1],"154":[1,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[1,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0,0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0]},"f":{"1":1,"2":1,"3":0,"4":10,"5":0,"6":0,"7":10,"8":0,"9":0,"10":2,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":1,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":13,"57":0,"58":0,"59":0,"60":0,"61":7,"62":0,"63":0,"64":0,"65":0,"66":0,"67":6,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":2,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":1,"163":0,"164":0,"165":0,"166":6,"167":0,"168":0,"169":0,"170":0,"171":0,"172":2,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":28}}},"2":{"name":"(anonymous_2)","line":5,"loc":{"start":{"line":5,"column":9},"end":{"line":5,"column":28}}},"3":{"name":"apply","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":36}}},"4":{"name":"overRest$1","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":44}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":9},"end":{"line":41,"column":20}}},"6":{"name":"identity","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":25}}},"7":{"name":"rest","line":82,"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":27}}},"8":{"name":"(anonymous_8)","line":86,"loc":{"start":{"line":86,"column":20},"end":{"line":86,"column":34}}},"9":{"name":"(anonymous_9)","line":87,"loc":{"start":{"line":87,"column":16},"end":{"line":87,"column":50}}},"10":{"name":"applyEach$1","line":93,"loc":{"start":{"line":93,"column":0},"end":{"line":93,"column":29}}},"11":{"name":"(anonymous_11)","line":94,"loc":{"start":{"line":94,"column":16},"end":{"line":94,"column":37}}},"12":{"name":"(anonymous_12)","line":95,"loc":{"start":{"line":95,"column":31},"end":{"line":95,"column":57}}},"13":{"name":"(anonymous_13)","line":97,"loc":{"start":{"line":97,"column":31},"end":{"line":97,"column":49}}},"14":{"name":"getRawTag","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":26}}},"15":{"name":"objectToString","line":181,"loc":{"start":{"line":181,"column":0},"end":{"line":181,"column":31}}},"16":{"name":"baseGetTag","line":199,"loc":{"start":{"line":199,"column":0},"end":{"line":199,"column":27}}},"17":{"name":"isObject","line":233,"loc":{"start":{"line":233,"column":0},"end":{"line":233,"column":25}}},"18":{"name":"isFunction","line":261,"loc":{"start":{"line":261,"column":0},"end":{"line":261,"column":27}}},"19":{"name":"isLength","line":300,"loc":{"start":{"line":300,"column":0},"end":{"line":300,"column":25}}},"20":{"name":"isArrayLike","line":330,"loc":{"start":{"line":330,"column":0},"end":{"line":330,"column":28}}},"21":{"name":"noop","line":350,"loc":{"start":{"line":350,"column":0},"end":{"line":350,"column":16}}},"22":{"name":"once","line":354,"loc":{"start":{"line":354,"column":0},"end":{"line":354,"column":18}}},"23":{"name":"(anonymous_23)","line":355,"loc":{"start":{"line":355,"column":11},"end":{"line":355,"column":23}}},"24":{"name":"(anonymous_24)","line":365,"loc":{"start":{"line":365,"column":18},"end":{"line":365,"column":34}}},"25":{"name":"baseTimes","line":378,"loc":{"start":{"line":378,"column":0},"end":{"line":378,"column":32}}},"26":{"name":"isObjectLike","line":412,"loc":{"start":{"line":412,"column":0},"end":{"line":412,"column":29}}},"27":{"name":"baseIsArguments","line":426,"loc":{"start":{"line":426,"column":0},"end":{"line":426,"column":32}}},"28":{"name":"(anonymous_28)","line":457,"loc":{"start":{"line":457,"column":34},"end":{"line":457,"column":45}}},"29":{"name":"(anonymous_29)","line":457,"loc":{"start":{"line":457,"column":90},"end":{"line":457,"column":106}}},"30":{"name":"stubFalse","line":500,"loc":{"start":{"line":500,"column":0},"end":{"line":500,"column":21}}},"31":{"name":"isIndex","line":552,"loc":{"start":{"line":552,"column":0},"end":{"line":552,"column":32}}},"32":{"name":"baseIsTypedArray","line":609,"loc":{"start":{"line":609,"column":0},"end":{"line":609,"column":33}}},"33":{"name":"baseUnary","line":621,"loc":{"start":{"line":621,"column":0},"end":{"line":621,"column":25}}},"34":{"name":"(anonymous_34)","line":622,"loc":{"start":{"line":622,"column":9},"end":{"line":622,"column":25}}},"35":{"name":"(anonymous_35)","line":640,"loc":{"start":{"line":640,"column":16},"end":{"line":640,"column":27}}},"36":{"name":"arrayLikeKeys","line":682,"loc":{"start":{"line":682,"column":0},"end":{"line":682,"column":41}}},"37":{"name":"isPrototype","line":719,"loc":{"start":{"line":719,"column":0},"end":{"line":719,"column":28}}},"38":{"name":"overArg","line":734,"loc":{"start":{"line":734,"column":0},"end":{"line":734,"column":34}}},"39":{"name":"(anonymous_39)","line":735,"loc":{"start":{"line":735,"column":9},"end":{"line":735,"column":23}}},"40":{"name":"baseKeys","line":756,"loc":{"start":{"line":756,"column":0},"end":{"line":756,"column":26}}},"41":{"name":"keys","line":797,"loc":{"start":{"line":797,"column":0},"end":{"line":797,"column":22}}},"42":{"name":"createArrayIterator","line":801,"loc":{"start":{"line":801,"column":0},"end":{"line":801,"column":35}}},"43":{"name":"next","line":804,"loc":{"start":{"line":804,"column":11},"end":{"line":804,"column":27}}},"44":{"name":"createES2015Iterator","line":809,"loc":{"start":{"line":809,"column":0},"end":{"line":809,"column":40}}},"45":{"name":"next","line":811,"loc":{"start":{"line":811,"column":11},"end":{"line":811,"column":27}}},"46":{"name":"createObjectIterator","line":819,"loc":{"start":{"line":819,"column":0},"end":{"line":819,"column":35}}},"47":{"name":"next","line":823,"loc":{"start":{"line":823,"column":11},"end":{"line":823,"column":27}}},"48":{"name":"iterator","line":829,"loc":{"start":{"line":829,"column":0},"end":{"line":829,"column":24}}},"49":{"name":"onlyOnce","line":838,"loc":{"start":{"line":838,"column":0},"end":{"line":838,"column":22}}},"50":{"name":"(anonymous_50)","line":839,"loc":{"start":{"line":839,"column":11},"end":{"line":839,"column":23}}},"51":{"name":"_eachOfLimit","line":847,"loc":{"start":{"line":847,"column":0},"end":{"line":847,"column":29}}},"52":{"name":"(anonymous_52)","line":848,"loc":{"start":{"line":848,"column":11},"end":{"line":848,"column":46}}},"53":{"name":"iterateeCallback","line":857,"loc":{"start":{"line":857,"column":8},"end":{"line":857,"column":46}}},"54":{"name":"replenish","line":870,"loc":{"start":{"line":870,"column":8},"end":{"line":870,"column":29}}},"55":{"name":"eachOfLimit","line":911,"loc":{"start":{"line":911,"column":0},"end":{"line":911,"column":54}}},"56":{"name":"doLimit","line":915,"loc":{"start":{"line":915,"column":0},"end":{"line":915,"column":28}}},"57":{"name":"(anonymous_57)","line":916,"loc":{"start":{"line":916,"column":11},"end":{"line":916,"column":51}}},"58":{"name":"eachOfArrayLike","line":922,"loc":{"start":{"line":922,"column":0},"end":{"line":922,"column":51}}},"59":{"name":"iteratorCallback","line":931,"loc":{"start":{"line":931,"column":4},"end":{"line":931,"column":42}}},"60":{"name":"(anonymous_60)","line":988,"loc":{"start":{"line":988,"column":13},"end":{"line":988,"column":49}}},"61":{"name":"doParallel","line":993,"loc":{"start":{"line":993,"column":0},"end":{"line":993,"column":24}}},"62":{"name":"(anonymous_62)","line":994,"loc":{"start":{"line":994,"column":11},"end":{"line":994,"column":46}}},"63":{"name":"_asyncMap","line":999,"loc":{"start":{"line":999,"column":0},"end":{"line":999,"column":52}}},"64":{"name":"(anonymous_64)","line":1005,"loc":{"start":{"line":1005,"column":16},"end":{"line":1005,"column":46}}},"65":{"name":"(anonymous_65)","line":1007,"loc":{"start":{"line":1007,"column":24},"end":{"line":1007,"column":42}}},"66":{"name":"(anonymous_66)","line":1011,"loc":{"start":{"line":1011,"column":7},"end":{"line":1011,"column":22}}},"67":{"name":"doParallelLimit","line":1089,"loc":{"start":{"line":1089,"column":0},"end":{"line":1089,"column":29}}},"68":{"name":"(anonymous_68)","line":1090,"loc":{"start":{"line":1090,"column":11},"end":{"line":1090,"column":53}}},"69":{"name":"(anonymous_69)","line":1201,"loc":{"start":{"line":1201,"column":19},"end":{"line":1201,"column":39}}},"70":{"name":"(anonymous_70)","line":1202,"loc":{"start":{"line":1202,"column":16},"end":{"line":1202,"column":36}}},"71":{"name":"asyncify","line":1262,"loc":{"start":{"line":1262,"column":0},"end":{"line":1262,"column":24}}},"72":{"name":"(anonymous_72)","line":1263,"loc":{"start":{"line":1263,"column":25},"end":{"line":1263,"column":51}}},"73":{"name":"(anonymous_73)","line":1272,"loc":{"start":{"line":1272,"column":24},"end":{"line":1272,"column":41}}},"74":{"name":"(anonymous_74)","line":1274,"loc":{"start":{"line":1274,"column":15},"end":{"line":1274,"column":30}}},"75":{"name":"arrayEach","line":1292,"loc":{"start":{"line":1292,"column":0},"end":{"line":1292,"column":36}}},"76":{"name":"createBaseFor","line":1311,"loc":{"start":{"line":1311,"column":0},"end":{"line":1311,"column":34}}},"77":{"name":"(anonymous_77)","line":1312,"loc":{"start":{"line":1312,"column":9},"end":{"line":1312,"column":46}}},"78":{"name":"baseForOwn","line":1349,"loc":{"start":{"line":1349,"column":0},"end":{"line":1349,"column":38}}},"79":{"name":"baseFindIndex","line":1364,"loc":{"start":{"line":1364,"column":0},"end":{"line":1364,"column":63}}},"80":{"name":"baseIsNaN","line":1383,"loc":{"start":{"line":1383,"column":0},"end":{"line":1383,"column":26}}},"81":{"name":"strictIndexOf","line":1397,"loc":{"start":{"line":1397,"column":0},"end":{"line":1397,"column":48}}},"82":{"name":"baseIndexOf","line":1418,"loc":{"start":{"line":1418,"column":0},"end":{"line":1418,"column":46}}},"83":{"name":"(anonymous_83)","line":1503,"loc":{"start":{"line":1503,"column":11},"end":{"line":1503,"column":51}}},"84":{"name":"(anonymous_84)","line":1532,"loc":{"start":{"line":1532,"column":22},"end":{"line":1532,"column":43}}},"85":{"name":"(anonymous_85)","line":1549,"loc":{"start":{"line":1549,"column":32},"end":{"line":1549,"column":58}}},"86":{"name":"(anonymous_86)","line":1553,"loc":{"start":{"line":1553,"column":40},"end":{"line":1553,"column":52}}},"87":{"name":"enqueueTask","line":1565,"loc":{"start":{"line":1565,"column":4},"end":{"line":1565,"column":36}}},"88":{"name":"(anonymous_88)","line":1566,"loc":{"start":{"line":1566,"column":24},"end":{"line":1566,"column":36}}},"89":{"name":"processQueue","line":1571,"loc":{"start":{"line":1571,"column":4},"end":{"line":1571,"column":28}}},"90":{"name":"addListener","line":1581,"loc":{"start":{"line":1581,"column":4},"end":{"line":1581,"column":39}}},"91":{"name":"taskComplete","line":1590,"loc":{"start":{"line":1590,"column":4},"end":{"line":1590,"column":36}}},"92":{"name":"(anonymous_92)","line":1592,"loc":{"start":{"line":1592,"column":33},"end":{"line":1592,"column":47}}},"93":{"name":"runTask","line":1598,"loc":{"start":{"line":1598,"column":4},"end":{"line":1598,"column":32}}},"94":{"name":"(anonymous_94)","line":1601,"loc":{"start":{"line":1601,"column":41},"end":{"line":1601,"column":62}}},"95":{"name":"(anonymous_95)","line":1608,"loc":{"start":{"line":1608,"column":36},"end":{"line":1608,"column":57}}},"96":{"name":"checkForDeadlocks","line":1631,"loc":{"start":{"line":1631,"column":4},"end":{"line":1631,"column":33}}},"97":{"name":"(anonymous_97)","line":1640,"loc":{"start":{"line":1640,"column":50},"end":{"line":1640,"column":71}}},"98":{"name":"getDependents","line":1652,"loc":{"start":{"line":1652,"column":4},"end":{"line":1652,"column":37}}},"99":{"name":"(anonymous_99)","line":1654,"loc":{"start":{"line":1654,"column":26},"end":{"line":1654,"column":47}}},"100":{"name":"arrayMap","line":1672,"loc":{"start":{"line":1672,"column":0},"end":{"line":1672,"column":35}}},"101":{"name":"isSymbol","line":1703,"loc":{"start":{"line":1703,"column":0},"end":{"line":1703,"column":25}}},"102":{"name":"baseToString","line":1723,"loc":{"start":{"line":1723,"column":0},"end":{"line":1723,"column":29}}},"103":{"name":"baseSlice","line":1748,"loc":{"start":{"line":1748,"column":0},"end":{"line":1748,"column":38}}},"104":{"name":"castSlice","line":1778,"loc":{"start":{"line":1778,"column":0},"end":{"line":1778,"column":38}}},"105":{"name":"charsEndIndex","line":1793,"loc":{"start":{"line":1793,"column":0},"end":{"line":1793,"column":47}}},"106":{"name":"charsStartIndex","line":1809,"loc":{"start":{"line":1809,"column":0},"end":{"line":1809,"column":49}}},"107":{"name":"asciiToArray","line":1824,"loc":{"start":{"line":1824,"column":0},"end":{"line":1824,"column":30}}},"108":{"name":"hasUnicode","line":1849,"loc":{"start":{"line":1849,"column":0},"end":{"line":1849,"column":28}}},"109":{"name":"unicodeToArray","line":1888,"loc":{"start":{"line":1888,"column":0},"end":{"line":1888,"column":32}}},"110":{"name":"stringToArray","line":1899,"loc":{"start":{"line":1899,"column":0},"end":{"line":1899,"column":31}}},"111":{"name":"toString","line":1926,"loc":{"start":{"line":1926,"column":0},"end":{"line":1926,"column":25}}},"112":{"name":"trim","line":1955,"loc":{"start":{"line":1955,"column":0},"end":{"line":1955,"column":36}}},"113":{"name":"parseParams","line":1976,"loc":{"start":{"line":1976,"column":0},"end":{"line":1976,"column":27}}},"114":{"name":"(anonymous_114)","line":1980,"loc":{"start":{"line":1980,"column":20},"end":{"line":1980,"column":35}}},"115":{"name":"autoInject","line":2068,"loc":{"start":{"line":2068,"column":0},"end":{"line":2068,"column":37}}},"116":{"name":"(anonymous_116)","line":2071,"loc":{"start":{"line":2071,"column":22},"end":{"line":2071,"column":45}}},"117":{"name":"newTask","line":2093,"loc":{"start":{"line":2093,"column":8},"end":{"line":2093,"column":42}}},"118":{"name":"(anonymous_118)","line":2094,"loc":{"start":{"line":2094,"column":43},"end":{"line":2094,"column":59}}},"119":{"name":"fallback","line":2108,"loc":{"start":{"line":2108,"column":0},"end":{"line":2108,"column":22}}},"120":{"name":"wrap","line":2112,"loc":{"start":{"line":2112,"column":0},"end":{"line":2112,"column":21}}},"121":{"name":"(anonymous_121)","line":2113,"loc":{"start":{"line":2113,"column":16},"end":{"line":2113,"column":36}}},"122":{"name":"(anonymous_122)","line":2114,"loc":{"start":{"line":2114,"column":14},"end":{"line":2114,"column":26}}},"123":{"name":"DLL","line":2136,"loc":{"start":{"line":2136,"column":0},"end":{"line":2136,"column":15}}},"124":{"name":"setInitial","line":2141,"loc":{"start":{"line":2141,"column":0},"end":{"line":2141,"column":31}}},"125":{"name":"(anonymous_125)","line":2146,"loc":{"start":{"line":2146,"column":27},"end":{"line":2146,"column":43}}},"126":{"name":"(anonymous_126)","line":2157,"loc":{"start":{"line":2157,"column":28},"end":{"line":2157,"column":53}}},"127":{"name":"(anonymous_127)","line":2165,"loc":{"start":{"line":2165,"column":29},"end":{"line":2165,"column":54}}},"128":{"name":"(anonymous_128)","line":2173,"loc":{"start":{"line":2173,"column":24},"end":{"line":2173,"column":40}}},"129":{"name":"(anonymous_129)","line":2177,"loc":{"start":{"line":2177,"column":21},"end":{"line":2177,"column":37}}},"130":{"name":"(anonymous_130)","line":2181,"loc":{"start":{"line":2181,"column":22},"end":{"line":2181,"column":34}}},"131":{"name":"(anonymous_131)","line":2185,"loc":{"start":{"line":2185,"column":20},"end":{"line":2185,"column":32}}},"132":{"name":"queue","line":2189,"loc":{"start":{"line":2189,"column":0},"end":{"line":2189,"column":45}}},"133":{"name":"_insert","line":2196,"loc":{"start":{"line":2196,"column":4},"end":{"line":2196,"column":52}}},"134":{"name":"(anonymous_134)","line":2206,"loc":{"start":{"line":2206,"column":34},"end":{"line":2206,"column":46}}},"135":{"name":"_next","line":2226,"loc":{"start":{"line":2226,"column":4},"end":{"line":2226,"column":26}}},"136":{"name":"(anonymous_136)","line":2227,"loc":{"start":{"line":2227,"column":20},"end":{"line":2227,"column":36}}},"137":{"name":"(anonymous_137)","line":2270,"loc":{"start":{"line":2270,"column":14},"end":{"line":2270,"column":40}}},"138":{"name":"(anonymous_138)","line":2273,"loc":{"start":{"line":2273,"column":14},"end":{"line":2273,"column":26}}},"139":{"name":"(anonymous_139)","line":2277,"loc":{"start":{"line":2277,"column":17},"end":{"line":2277,"column":43}}},"140":{"name":"(anonymous_140)","line":2280,"loc":{"start":{"line":2280,"column":17},"end":{"line":2280,"column":29}}},"141":{"name":"(anonymous_141)","line":2313,"loc":{"start":{"line":2313,"column":16},"end":{"line":2313,"column":28}}},"142":{"name":"(anonymous_142)","line":2316,"loc":{"start":{"line":2316,"column":17},"end":{"line":2316,"column":29}}},"143":{"name":"(anonymous_143)","line":2319,"loc":{"start":{"line":2319,"column":21},"end":{"line":2319,"column":33}}},"144":{"name":"(anonymous_144)","line":2322,"loc":{"start":{"line":2322,"column":14},"end":{"line":2322,"column":26}}},"145":{"name":"(anonymous_145)","line":2325,"loc":{"start":{"line":2325,"column":15},"end":{"line":2325,"column":27}}},"146":{"name":"(anonymous_146)","line":2328,"loc":{"start":{"line":2328,"column":16},"end":{"line":2328,"column":28}}},"147":{"name":"cargo","line":2417,"loc":{"start":{"line":2417,"column":0},"end":{"line":2417,"column":32}}},"148":{"name":"reduce","line":2482,"loc":{"start":{"line":2482,"column":0},"end":{"line":2482,"column":48}}},"149":{"name":"(anonymous_149)","line":2484,"loc":{"start":{"line":2484,"column":23},"end":{"line":2484,"column":49}}},"150":{"name":"(anonymous_150)","line":2485,"loc":{"start":{"line":2485,"column":26},"end":{"line":2485,"column":44}}},"151":{"name":"(anonymous_151)","line":2489,"loc":{"start":{"line":2489,"column":7},"end":{"line":2489,"column":22}}},"152":{"name":"seq","line":2532,"loc":{"start":{"line":2532,"column":17},"end":{"line":2532,"column":41}}},"153":{"name":"(anonymous_153)","line":2533,"loc":{"start":{"line":2533,"column":16},"end":{"line":2533,"column":32}}},"154":{"name":"(anonymous_154)","line":2543,"loc":{"start":{"line":2543,"column":32},"end":{"line":2543,"column":59}}},"155":{"name":"(anonymous_155)","line":2544,"loc":{"start":{"line":2544,"column":47},"end":{"line":2544,"column":72}}},"156":{"name":"(anonymous_156)","line":2547,"loc":{"start":{"line":2547,"column":11},"end":{"line":2547,"column":35}}},"157":{"name":"(anonymous_157)","line":2588,"loc":{"start":{"line":2588,"column":19},"end":{"line":2588,"column":35}}},"158":{"name":"concat$1","line":2592,"loc":{"start":{"line":2592,"column":0},"end":{"line":2592,"column":45}}},"159":{"name":"(anonymous_159)","line":2594,"loc":{"start":{"line":2594,"column":16},"end":{"line":2594,"column":40}}},"160":{"name":"(anonymous_160)","line":2595,"loc":{"start":{"line":2595,"column":14},"end":{"line":2595,"column":32}}},"161":{"name":"(anonymous_161)","line":2599,"loc":{"start":{"line":2599,"column":7},"end":{"line":2599,"column":22}}},"162":{"name":"doSeries","line":2633,"loc":{"start":{"line":2633,"column":0},"end":{"line":2633,"column":22}}},"163":{"name":"(anonymous_163)","line":2634,"loc":{"start":{"line":2634,"column":11},"end":{"line":2634,"column":46}}},"164":{"name":"(anonymous_164)","line":2702,"loc":{"start":{"line":2702,"column":20},"end":{"line":2702,"column":38}}},"165":{"name":"(anonymous_165)","line":2704,"loc":{"start":{"line":2704,"column":25},"end":{"line":2704,"column":58}}},"166":{"name":"_createTester","line":2709,"loc":{"start":{"line":2709,"column":0},"end":{"line":2709,"column":41}}},"167":{"name":"(anonymous_167)","line":2710,"loc":{"start":{"line":2710,"column":11},"end":{"line":2710,"column":48}}},"168":{"name":"(anonymous_168)","line":2714,"loc":{"start":{"line":2714,"column":20},"end":{"line":2714,"column":50}}},"169":{"name":"(anonymous_169)","line":2715,"loc":{"start":{"line":2715,"column":28},"end":{"line":2715,"column":51}}},"170":{"name":"(anonymous_170)","line":2726,"loc":{"start":{"line":2726,"column":11},"end":{"line":2726,"column":26}}},"171":{"name":"_findGetResult","line":2736,"loc":{"start":{"line":2736,"column":0},"end":{"line":2736,"column":30}}},"172":{"name":"consoleFunc","line":2823,"loc":{"start":{"line":2823,"column":0},"end":{"line":2823,"column":27}}},"173":{"name":"(anonymous_173)","line":2824,"loc":{"start":{"line":2824,"column":16},"end":{"line":2824,"column":36}}},"174":{"name":"(anonymous_174)","line":2825,"loc":{"start":{"line":2825,"column":40},"end":{"line":2825,"column":61}}},"175":{"name":"(anonymous_175)","line":2832,"loc":{"start":{"line":2832,"column":36},"end":{"line":2832,"column":49}}},"176":{"name":"doDuring","line":2892,"loc":{"start":{"line":2892,"column":0},"end":{"line":2892,"column":38}}},"177":{"name":"(anonymous_177)","line":2895,"loc":{"start":{"line":2895,"column":20},"end":{"line":2895,"column":41}}},"178":{"name":"check","line":2901,"loc":{"start":{"line":2901,"column":4},"end":{"line":2901,"column":31}}},"179":{"name":"doWhilst","line":2933,"loc":{"start":{"line":2933,"column":0},"end":{"line":2933,"column":44}}},"180":{"name":"(anonymous_180)","line":2935,"loc":{"start":{"line":2935,"column":20},"end":{"line":2935,"column":41}}},"181":{"name":"doUntil","line":2963,"loc":{"start":{"line":2963,"column":0},"end":{"line":2963,"column":37}}},"182":{"name":"(anonymous_182)","line":2964,"loc":{"start":{"line":2964,"column":17},"end":{"line":2964,"column":29}}},"183":{"name":"during","line":3006,"loc":{"start":{"line":3006,"column":0},"end":{"line":3006,"column":36}}},"184":{"name":"next","line":3009,"loc":{"start":{"line":3009,"column":4},"end":{"line":3009,"column":23}}},"185":{"name":"check","line":3014,"loc":{"start":{"line":3014,"column":4},"end":{"line":3014,"column":31}}},"186":{"name":"_withoutIndex","line":3023,"loc":{"start":{"line":3023,"column":0},"end":{"line":3023,"column":33}}},"187":{"name":"(anonymous_187)","line":3024,"loc":{"start":{"line":3024,"column":11},"end":{"line":3024,"column":45}}},"188":{"name":"eachLimit","line":3088,"loc":{"start":{"line":3088,"column":0},"end":{"line":3088,"column":45}}},"189":{"name":"eachLimit$1","line":3113,"loc":{"start":{"line":3113,"column":0},"end":{"line":3113,"column":54}}},"190":{"name":"ensureAsync","line":3173,"loc":{"start":{"line":3173,"column":0},"end":{"line":3173,"column":25}}},"191":{"name":"(anonymous_191)","line":3174,"loc":{"start":{"line":3174,"column":25},"end":{"line":3174,"column":51}}},"192":{"name":"(anonymous_192)","line":3176,"loc":{"start":{"line":3176,"column":18},"end":{"line":3176,"column":30}}},"193":{"name":"(anonymous_193)","line":3179,"loc":{"start":{"line":3179,"column":31},"end":{"line":3179,"column":43}}},"194":{"name":"notId","line":3191,"loc":{"start":{"line":3191,"column":0},"end":{"line":3191,"column":18}}},"195":{"name":"baseProperty","line":3275,"loc":{"start":{"line":3275,"column":0},"end":{"line":3275,"column":27}}},"196":{"name":"(anonymous_196)","line":3276,"loc":{"start":{"line":3276,"column":9},"end":{"line":3276,"column":26}}},"197":{"name":"filterArray","line":3281,"loc":{"start":{"line":3281,"column":0},"end":{"line":3281,"column":54}}},"198":{"name":"(anonymous_198)","line":3283,"loc":{"start":{"line":3283,"column":16},"end":{"line":3283,"column":46}}},"199":{"name":"(anonymous_199)","line":3284,"loc":{"start":{"line":3284,"column":20},"end":{"line":3284,"column":38}}},"200":{"name":"(anonymous_200)","line":3288,"loc":{"start":{"line":3288,"column":7},"end":{"line":3288,"column":22}}},"201":{"name":"filterGeneric","line":3298,"loc":{"start":{"line":3298,"column":0},"end":{"line":3298,"column":57}}},"202":{"name":"(anonymous_202)","line":3300,"loc":{"start":{"line":3300,"column":17},"end":{"line":3300,"column":47}}},"203":{"name":"(anonymous_203)","line":3301,"loc":{"start":{"line":3301,"column":20},"end":{"line":3301,"column":38}}},"204":{"name":"(anonymous_204)","line":3311,"loc":{"start":{"line":3311,"column":7},"end":{"line":3311,"column":22}}},"205":{"name":"(anonymous_205)","line":3315,"loc":{"start":{"line":3315,"column":49},"end":{"line":3315,"column":65}}},"206":{"name":"_filter","line":3322,"loc":{"start":{"line":3322,"column":0},"end":{"line":3322,"column":51}}},"207":{"name":"forever","line":3425,"loc":{"start":{"line":3425,"column":0},"end":{"line":3425,"column":30}}},"208":{"name":"next","line":3429,"loc":{"start":{"line":3429,"column":4},"end":{"line":3429,"column":23}}},"209":{"name":"mapValuesLimit","line":3486,"loc":{"start":{"line":3486,"column":0},"end":{"line":3486,"column":56}}},"210":{"name":"(anonymous_210)","line":3489,"loc":{"start":{"line":3489,"column":28},"end":{"line":3489,"column":54}}},"211":{"name":"(anonymous_211)","line":3490,"loc":{"start":{"line":3490,"column":27},"end":{"line":3490,"column":50}}},"212":{"name":"(anonymous_212)","line":3495,"loc":{"start":{"line":3495,"column":7},"end":{"line":3495,"column":22}}},"213":{"name":"has","line":3568,"loc":{"start":{"line":3568,"column":0},"end":{"line":3568,"column":23}}},"214":{"name":"memoize","line":3609,"loc":{"start":{"line":3609,"column":0},"end":{"line":3609,"column":29}}},"215":{"name":"memoized","line":3613,"loc":{"start":{"line":3613,"column":33},"end":{"line":3613,"column":67}}},"216":{"name":"(anonymous_216)","line":3616,"loc":{"start":{"line":3616,"column":27},"end":{"line":3616,"column":39}}},"217":{"name":"(anonymous_217)","line":3623,"loc":{"start":{"line":3623,"column":44},"end":{"line":3623,"column":60}}},"218":{"name":"_parallel","line":3681,"loc":{"start":{"line":3681,"column":0},"end":{"line":3681,"column":44}}},"219":{"name":"(anonymous_219)","line":3685,"loc":{"start":{"line":3685,"column":18},"end":{"line":3685,"column":49}}},"220":{"name":"(anonymous_220)","line":3686,"loc":{"start":{"line":3686,"column":18},"end":{"line":3686,"column":39}}},"221":{"name":"(anonymous_221)","line":3693,"loc":{"start":{"line":3693,"column":7},"end":{"line":3693,"column":22}}},"222":{"name":"parallelLimit","line":3764,"loc":{"start":{"line":3764,"column":0},"end":{"line":3764,"column":40}}},"223":{"name":"parallelLimit$1","line":3788,"loc":{"start":{"line":3788,"column":0},"end":{"line":3788,"column":49}}},"224":{"name":"(anonymous_224)","line":3892,"loc":{"start":{"line":3892,"column":14},"end":{"line":3892,"column":45}}},"225":{"name":"(anonymous_225)","line":3893,"loc":{"start":{"line":3893,"column":15},"end":{"line":3893,"column":36}}},"226":{"name":"(anonymous_226)","line":3922,"loc":{"start":{"line":3922,"column":20},"end":{"line":3922,"column":51}}},"227":{"name":"(anonymous_227)","line":3927,"loc":{"start":{"line":3927,"column":13},"end":{"line":3927,"column":49}}},"228":{"name":"(anonymous_228)","line":3938,"loc":{"start":{"line":3938,"column":34},"end":{"line":3938,"column":46}}},"229":{"name":"race","line":4008,"loc":{"start":{"line":4008,"column":0},"end":{"line":4008,"column":31}}},"230":{"name":"reduceRight","line":4041,"loc":{"start":{"line":4041,"column":0},"end":{"line":4041,"column":54}}},"231":{"name":"reflect","line":4085,"loc":{"start":{"line":4085,"column":0},"end":{"line":4085,"column":21}}},"232":{"name":"reflectOn","line":4086,"loc":{"start":{"line":4086,"column":25},"end":{"line":4086,"column":67}}},"233":{"name":"callback","line":4087,"loc":{"start":{"line":4087,"column":23},"end":{"line":4087,"column":54}}},"234":{"name":"reject$1","line":4109,"loc":{"start":{"line":4109,"column":0},"end":{"line":4109,"column":51}}},"235":{"name":"(anonymous_235)","line":4110,"loc":{"start":{"line":4110,"column":25},"end":{"line":4110,"column":46}}},"236":{"name":"(anonymous_236)","line":4111,"loc":{"start":{"line":4111,"column":24},"end":{"line":4111,"column":42}}},"237":{"name":"reflectAll","line":4211,"loc":{"start":{"line":4211,"column":0},"end":{"line":4211,"column":27}}},"238":{"name":"(anonymous_238)","line":4217,"loc":{"start":{"line":4217,"column":26},"end":{"line":4217,"column":47}}},"239":{"name":"constant$1","line":4281,"loc":{"start":{"line":4281,"column":0},"end":{"line":4281,"column":27}}},"240":{"name":"(anonymous_240)","line":4282,"loc":{"start":{"line":4282,"column":9},"end":{"line":4282,"column":20}}},"241":{"name":"retry","line":4373,"loc":{"start":{"line":4373,"column":0},"end":{"line":4373,"column":37}}},"242":{"name":"parseTimes","line":4382,"loc":{"start":{"line":4382,"column":4},"end":{"line":4382,"column":32}}},"243":{"name":"retryAttempt","line":4409,"loc":{"start":{"line":4409,"column":4},"end":{"line":4409,"column":28}}},"244":{"name":"(anonymous_244)","line":4410,"loc":{"start":{"line":4410,"column":13},"end":{"line":4410,"column":28}}},"245":{"name":"(anonymous_245)","line":4446,"loc":{"start":{"line":4446,"column":16},"end":{"line":4446,"column":38}}},"246":{"name":"(anonymous_246)","line":4451,"loc":{"start":{"line":4451,"column":25},"end":{"line":4451,"column":51}}},"247":{"name":"taskFn","line":4452,"loc":{"start":{"line":4452,"column":8},"end":{"line":4452,"column":28}}},"248":{"name":"series","line":4524,"loc":{"start":{"line":4524,"column":0},"end":{"line":4524,"column":33}}},"249":{"name":"sortBy","line":4651,"loc":{"start":{"line":4651,"column":0},"end":{"line":4651,"column":42}}},"250":{"name":"(anonymous_250)","line":4652,"loc":{"start":{"line":4652,"column":14},"end":{"line":4652,"column":37}}},"251":{"name":"(anonymous_251)","line":4653,"loc":{"start":{"line":4653,"column":20},"end":{"line":4653,"column":45}}},"252":{"name":"(anonymous_252)","line":4657,"loc":{"start":{"line":4657,"column":7},"end":{"line":4657,"column":31}}},"253":{"name":"comparator","line":4662,"loc":{"start":{"line":4662,"column":4},"end":{"line":4662,"column":37}}},"254":{"name":"timeout","line":4711,"loc":{"start":{"line":4711,"column":0},"end":{"line":4711,"column":46}}},"255":{"name":"injectedCallback","line":4715,"loc":{"start":{"line":4715,"column":4},"end":{"line":4715,"column":32}}},"256":{"name":"timeoutCallback","line":4722,"loc":{"start":{"line":4722,"column":4},"end":{"line":4722,"column":31}}},"257":{"name":"(anonymous_257)","line":4733,"loc":{"start":{"line":4733,"column":25},"end":{"line":4733,"column":55}}},"258":{"name":"baseRange","line":4756,"loc":{"start":{"line":4756,"column":0},"end":{"line":4756,"column":48}}},"259":{"name":"timeLimit","line":4784,"loc":{"start":{"line":4784,"column":0},"end":{"line":4784,"column":53}}},"260":{"name":"transform","line":4883,"loc":{"start":{"line":4883,"column":0},"end":{"line":4883,"column":58}}},"261":{"name":"(anonymous_261)","line":4891,"loc":{"start":{"line":4891,"column":17},"end":{"line":4891,"column":37}}},"262":{"name":"(anonymous_262)","line":4893,"loc":{"start":{"line":4893,"column":7},"end":{"line":4893,"column":22}}},"263":{"name":"unmemoize","line":4911,"loc":{"start":{"line":4911,"column":0},"end":{"line":4911,"column":23}}},"264":{"name":"(anonymous_264)","line":4912,"loc":{"start":{"line":4912,"column":11},"end":{"line":4912,"column":23}}},"265":{"name":"whilst","line":4952,"loc":{"start":{"line":4952,"column":0},"end":{"line":4952,"column":42}}},"266":{"name":"(anonymous_266)","line":4955,"loc":{"start":{"line":4955,"column":20},"end":{"line":4955,"column":41}}},"267":{"name":"until","line":4986,"loc":{"start":{"line":4986,"column":0},"end":{"line":4986,"column":35}}},"268":{"name":"(anonymous_268)","line":4987,"loc":{"start":{"line":4987,"column":11},"end":{"line":4987,"column":23}}},"269":{"name":"(anonymous_269)","line":5049,"loc":{"start":{"line":5049,"column":16},"end":{"line":5049,"column":43}}},"270":{"name":"nextTask","line":5055,"loc":{"start":{"line":5055,"column":4},"end":{"line":5055,"column":28}}},"271":{"name":"(anonymous_271)","line":5060,"loc":{"start":{"line":5060,"column":41},"end":{"line":5060,"column":62}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5289,"column":5}},"2":{"start":{"line":2,"column":4},"end":{"line":4,"column":51}},"3":{"start":{"line":17,"column":0},"end":{"line":25,"column":1}},"4":{"start":{"line":18,"column":2},"end":{"line":23,"column":3}},"5":{"start":{"line":19,"column":12},"end":{"line":19,"column":38}},"6":{"start":{"line":20,"column":12},"end":{"line":20,"column":47}},"7":{"start":{"line":21,"column":12},"end":{"line":21,"column":56}},"8":{"start":{"line":22,"column":12},"end":{"line":22,"column":65}},"9":{"start":{"line":24,"column":2},"end":{"line":24,"column":35}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":25}},"11":{"start":{"line":39,"column":0},"end":{"line":58,"column":1}},"12":{"start":{"line":40,"column":2},"end":{"line":40,"column":72}},"13":{"start":{"line":41,"column":2},"end":{"line":57,"column":4}},"14":{"start":{"line":42,"column":4},"end":{"line":45,"column":30}},"15":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"16":{"start":{"line":48,"column":6},"end":{"line":48,"column":41}},"17":{"start":{"line":50,"column":4},"end":{"line":50,"column":15}},"18":{"start":{"line":51,"column":4},"end":{"line":51,"column":37}},"19":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"20":{"start":{"line":53,"column":6},"end":{"line":53,"column":37}},"21":{"start":{"line":55,"column":4},"end":{"line":55,"column":40}},"22":{"start":{"line":56,"column":4},"end":{"line":56,"column":40}},"23":{"start":{"line":76,"column":0},"end":{"line":78,"column":1}},"24":{"start":{"line":77,"column":2},"end":{"line":77,"column":15}},"25":{"start":{"line":82,"column":0},"end":{"line":84,"column":1}},"26":{"start":{"line":83,"column":4},"end":{"line":83,"column":45}},"27":{"start":{"line":86,"column":0},"end":{"line":91,"column":2}},"28":{"start":{"line":87,"column":4},"end":{"line":90,"column":7}},"29":{"start":{"line":88,"column":8},"end":{"line":88,"column":34}},"30":{"start":{"line":89,"column":8},"end":{"line":89,"column":38}},"31":{"start":{"line":93,"column":0},"end":{"line":107,"column":1}},"32":{"start":{"line":94,"column":4},"end":{"line":106,"column":7}},"33":{"start":{"line":95,"column":8},"end":{"line":100,"column":11}},"34":{"start":{"line":96,"column":12},"end":{"line":96,"column":28}},"35":{"start":{"line":97,"column":12},"end":{"line":99,"column":25}},"36":{"start":{"line":98,"column":16},"end":{"line":98,"column":48}},"37":{"start":{"line":101,"column":8},"end":{"line":105,"column":9}},"38":{"start":{"line":102,"column":12},"end":{"line":102,"column":40}},"39":{"start":{"line":104,"column":12},"end":{"line":104,"column":22}},"40":{"start":{"line":110,"column":0},"end":{"line":110,"column":91}},"41":{"start":{"line":113,"column":0},"end":{"line":113,"column":81}},"42":{"start":{"line":116,"column":0},"end":{"line":116,"column":63}},"43":{"start":{"line":119,"column":0},"end":{"line":119,"column":27}},"44":{"start":{"line":122,"column":0},"end":{"line":122,"column":35}},"45":{"start":{"line":125,"column":0},"end":{"line":125,"column":48}},"46":{"start":{"line":132,"column":0},"end":{"line":132,"column":48}},"47":{"start":{"line":135,"column":0},"end":{"line":135,"column":67}},"48":{"start":{"line":144,"column":0},"end":{"line":162,"column":1}},"49":{"start":{"line":145,"column":2},"end":{"line":146,"column":36}},"50":{"start":{"line":148,"column":2},"end":{"line":151,"column":16}},"51":{"start":{"line":149,"column":4},"end":{"line":149,"column":40}},"52":{"start":{"line":150,"column":4},"end":{"line":150,"column":24}},"53":{"start":{"line":153,"column":2},"end":{"line":153,"column":48}},"54":{"start":{"line":154,"column":2},"end":{"line":160,"column":3}},"55":{"start":{"line":155,"column":4},"end":{"line":159,"column":5}},"56":{"start":{"line":156,"column":6},"end":{"line":156,"column":36}},"57":{"start":{"line":158,"column":6},"end":{"line":158,"column":37}},"58":{"start":{"line":161,"column":2},"end":{"line":161,"column":16}},"59":{"start":{"line":165,"column":0},"end":{"line":165,"column":37}},"60":{"start":{"line":172,"column":0},"end":{"line":172,"column":52}},"61":{"start":{"line":181,"column":0},"end":{"line":183,"column":1}},"62":{"start":{"line":182,"column":2},"end":{"line":182,"column":44}},"63":{"start":{"line":186,"column":0},"end":{"line":186,"column":30}},"64":{"start":{"line":187,"column":0},"end":{"line":187,"column":40}},"65":{"start":{"line":190,"column":0},"end":{"line":190,"column":65}},"66":{"start":{"line":199,"column":0},"end":{"line":206,"column":1}},"67":{"start":{"line":200,"column":2},"end":{"line":202,"column":3}},"68":{"start":{"line":201,"column":4},"end":{"line":201,"column":56}},"69":{"start":{"line":203,"column":2},"end":{"line":205,"column":28}},"70":{"start":{"line":233,"column":0},"end":{"line":236,"column":1}},"71":{"start":{"line":234,"column":2},"end":{"line":234,"column":26}},"72":{"start":{"line":235,"column":2},"end":{"line":235,"column":67}},"73":{"start":{"line":239,"column":0},"end":{"line":239,"column":40}},"74":{"start":{"line":240,"column":0},"end":{"line":240,"column":34}},"75":{"start":{"line":241,"column":0},"end":{"line":241,"column":42}},"76":{"start":{"line":242,"column":0},"end":{"line":242,"column":32}},"77":{"start":{"line":261,"column":0},"end":{"line":269,"column":1}},"78":{"start":{"line":262,"column":2},"end":{"line":264,"column":3}},"79":{"start":{"line":263,"column":4},"end":{"line":263,"column":17}},"80":{"start":{"line":267,"column":2},"end":{"line":267,"column":30}},"81":{"start":{"line":268,"column":2},"end":{"line":268,"column":79}},"82":{"start":{"line":272,"column":0},"end":{"line":272,"column":40}},"83":{"start":{"line":300,"column":0},"end":{"line":303,"column":1}},"84":{"start":{"line":301,"column":2},"end":{"line":302,"column":62}},"85":{"start":{"line":330,"column":0},"end":{"line":332,"column":1}},"86":{"start":{"line":331,"column":2},"end":{"line":331,"column":71}},"87":{"start":{"line":336,"column":0},"end":{"line":336,"column":19}},"88":{"start":{"line":350,"column":0},"end":{"line":352,"column":1}},"89":{"start":{"line":354,"column":0},"end":{"line":361,"column":1}},"90":{"start":{"line":355,"column":4},"end":{"line":360,"column":6}},"91":{"start":{"line":356,"column":8},"end":{"line":356,"column":32}},"92":{"start":{"line":356,"column":25},"end":{"line":356,"column":32}},"93":{"start":{"line":357,"column":8},"end":{"line":357,"column":24}},"94":{"start":{"line":358,"column":8},"end":{"line":358,"column":18}},"95":{"start":{"line":359,"column":8},"end":{"line":359,"column":38}},"96":{"start":{"line":363,"column":0},"end":{"line":363,"column":69}},"97":{"start":{"line":365,"column":0},"end":{"line":367,"column":2}},"98":{"start":{"line":366,"column":4},"end":{"line":366,"column":76}},"99":{"start":{"line":378,"column":0},"end":{"line":386,"column":1}},"100":{"start":{"line":379,"column":2},"end":{"line":380,"column":24}},"101":{"start":{"line":382,"column":2},"end":{"line":384,"column":3}},"102":{"start":{"line":383,"column":4},"end":{"line":383,"column":36}},"103":{"start":{"line":385,"column":2},"end":{"line":385,"column":16}},"104":{"start":{"line":412,"column":0},"end":{"line":414,"column":1}},"105":{"start":{"line":413,"column":2},"end":{"line":413,"column":51}},"106":{"start":{"line":417,"column":0},"end":{"line":417,"column":35}},"107":{"start":{"line":426,"column":0},"end":{"line":428,"column":1}},"108":{"start":{"line":427,"column":2},"end":{"line":427,"column":61}},"109":{"start":{"line":431,"column":0},"end":{"line":431,"column":37}},"110":{"start":{"line":434,"column":0},"end":{"line":434,"column":52}},"111":{"start":{"line":437,"column":0},"end":{"line":437,"column":62}},"112":{"start":{"line":457,"column":0},"end":{"line":460,"column":2}},"113":{"start":{"line":457,"column":47},"end":{"line":457,"column":64}},"114":{"start":{"line":458,"column":2},"end":{"line":459,"column":48}},"115":{"start":{"line":485,"column":0},"end":{"line":485,"column":28}},"116":{"start":{"line":500,"column":0},"end":{"line":502,"column":1}},"117":{"start":{"line":501,"column":2},"end":{"line":501,"column":15}},"118":{"start":{"line":505,"column":0},"end":{"line":505,"column":88}},"119":{"start":{"line":508,"column":0},"end":{"line":508,"column":98}},"120":{"start":{"line":511,"column":0},"end":{"line":511,"column":69}},"121":{"start":{"line":514,"column":0},"end":{"line":514,"column":53}},"122":{"start":{"line":517,"column":0},"end":{"line":517,"column":58}},"123":{"start":{"line":536,"column":0},"end":{"line":536,"column":43}},"124":{"start":{"line":539,"column":0},"end":{"line":539,"column":42}},"125":{"start":{"line":542,"column":0},"end":{"line":542,"column":34}},"126":{"start":{"line":552,"column":0},"end":{"line":557,"column":1}},"127":{"start":{"line":553,"column":2},"end":{"line":553,"column":56}},"128":{"start":{"line":554,"column":2},"end":{"line":556,"column":53}},"129":{"start":{"line":560,"column":0},"end":{"line":560,"column":37}},"130":{"start":{"line":561,"column":0},"end":{"line":561,"column":32}},"131":{"start":{"line":562,"column":0},"end":{"line":562,"column":33}},"132":{"start":{"line":563,"column":0},"end":{"line":563,"column":30}},"133":{"start":{"line":564,"column":0},"end":{"line":564,"column":32}},"134":{"start":{"line":565,"column":0},"end":{"line":565,"column":36}},"135":{"start":{"line":566,"column":0},"end":{"line":566,"column":28}},"136":{"start":{"line":567,"column":0},"end":{"line":567,"column":34}},"137":{"start":{"line":568,"column":0},"end":{"line":568,"column":34}},"138":{"start":{"line":569,"column":0},"end":{"line":569,"column":34}},"139":{"start":{"line":570,"column":0},"end":{"line":570,"column":28}},"140":{"start":{"line":571,"column":0},"end":{"line":571,"column":34}},"141":{"start":{"line":572,"column":0},"end":{"line":572,"column":36}},"142":{"start":{"line":574,"column":0},"end":{"line":574,"column":44}},"143":{"start":{"line":575,"column":0},"end":{"line":575,"column":38}},"144":{"start":{"line":576,"column":0},"end":{"line":576,"column":41}},"145":{"start":{"line":577,"column":0},"end":{"line":577,"column":41}},"146":{"start":{"line":578,"column":0},"end":{"line":578,"column":35}},"147":{"start":{"line":579,"column":0},"end":{"line":579,"column":37}},"148":{"start":{"line":580,"column":0},"end":{"line":580,"column":37}},"149":{"start":{"line":581,"column":0},"end":{"line":581,"column":37}},"150":{"start":{"line":582,"column":0},"end":{"line":582,"column":51}},"151":{"start":{"line":583,"column":0},"end":{"line":583,"column":39}},"152":{"start":{"line":584,"column":0},"end":{"line":584,"column":39}},"153":{"start":{"line":587,"column":0},"end":{"line":587,"column":24}},"154":{"start":{"line":588,"column":0},"end":{"line":592,"column":33}},"155":{"start":{"line":593,"column":0},"end":{"line":600,"column":35}},"156":{"start":{"line":609,"column":0},"end":{"line":612,"column":1}},"157":{"start":{"line":610,"column":2},"end":{"line":611,"column":66}},"158":{"start":{"line":621,"column":0},"end":{"line":625,"column":1}},"159":{"start":{"line":622,"column":2},"end":{"line":624,"column":4}},"160":{"start":{"line":623,"column":4},"end":{"line":623,"column":23}},"161":{"start":{"line":628,"column":0},"end":{"line":628,"column":90}},"162":{"start":{"line":631,"column":0},"end":{"line":631,"column":102}},"163":{"start":{"line":634,"column":0},"end":{"line":634,"column":77}},"164":{"start":{"line":637,"column":0},"end":{"line":637,"column":56}},"165":{"start":{"line":640,"column":0},"end":{"line":644,"column":5}},"166":{"start":{"line":641,"column":2},"end":{"line":643,"column":16}},"167":{"start":{"line":642,"column":4},"end":{"line":642,"column":77}},"168":{"start":{"line":647,"column":0},"end":{"line":647,"column":57}},"169":{"start":{"line":666,"column":0},"end":{"line":666,"column":85}},"170":{"start":{"line":669,"column":0},"end":{"line":669,"column":37}},"171":{"start":{"line":672,"column":0},"end":{"line":672,"column":52}},"172":{"start":{"line":682,"column":0},"end":{"line":707,"column":1}},"173":{"start":{"line":683,"column":2},"end":{"line":689,"column":29}},"174":{"start":{"line":691,"column":2},"end":{"line":705,"column":3}},"175":{"start":{"line":692,"column":4},"end":{"line":704,"column":5}},"176":{"start":{"line":703,"column":6},"end":{"line":703,"column":23}},"177":{"start":{"line":706,"column":2},"end":{"line":706,"column":16}},"178":{"start":{"line":710,"column":0},"end":{"line":710,"column":37}},"179":{"start":{"line":719,"column":0},"end":{"line":724,"column":1}},"180":{"start":{"line":720,"column":2},"end":{"line":721,"column":77}},"181":{"start":{"line":723,"column":2},"end":{"line":723,"column":25}},"182":{"start":{"line":734,"column":0},"end":{"line":738,"column":1}},"183":{"start":{"line":735,"column":2},"end":{"line":737,"column":4}},"184":{"start":{"line":736,"column":4},"end":{"line":736,"column":32}},"185":{"start":{"line":741,"column":0},"end":{"line":741,"column":46}},"186":{"start":{"line":744,"column":0},"end":{"line":744,"column":37}},"187":{"start":{"line":747,"column":0},"end":{"line":747,"column":52}},"188":{"start":{"line":756,"column":0},"end":{"line":767,"column":1}},"189":{"start":{"line":757,"column":2},"end":{"line":759,"column":3}},"190":{"start":{"line":758,"column":4},"end":{"line":758,"column":30}},"191":{"start":{"line":760,"column":2},"end":{"line":760,"column":18}},"192":{"start":{"line":761,"column":2},"end":{"line":765,"column":3}},"193":{"start":{"line":762,"column":4},"end":{"line":764,"column":5}},"194":{"start":{"line":763,"column":6},"end":{"line":763,"column":23}},"195":{"start":{"line":766,"column":2},"end":{"line":766,"column":16}},"196":{"start":{"line":797,"column":0},"end":{"line":799,"column":1}},"197":{"start":{"line":798,"column":2},"end":{"line":798,"column":72}},"198":{"start":{"line":801,"column":0},"end":{"line":807,"column":1}},"199":{"start":{"line":802,"column":4},"end":{"line":802,"column":15}},"200":{"start":{"line":803,"column":4},"end":{"line":803,"column":26}},"201":{"start":{"line":804,"column":4},"end":{"line":806,"column":6}},"202":{"start":{"line":805,"column":8},"end":{"line":805,"column":61}},"203":{"start":{"line":809,"column":0},"end":{"line":817,"column":1}},"204":{"start":{"line":810,"column":4},"end":{"line":810,"column":15}},"205":{"start":{"line":811,"column":4},"end":{"line":816,"column":6}},"206":{"start":{"line":812,"column":8},"end":{"line":812,"column":35}},"207":{"start":{"line":813,"column":8},"end":{"line":813,"column":35}},"208":{"start":{"line":813,"column":23},"end":{"line":813,"column":35}},"209":{"start":{"line":814,"column":8},"end":{"line":814,"column":12}},"210":{"start":{"line":815,"column":8},"end":{"line":815,"column":45}},"211":{"start":{"line":819,"column":0},"end":{"line":827,"column":1}},"212":{"start":{"line":820,"column":4},"end":{"line":820,"column":26}},"213":{"start":{"line":821,"column":4},"end":{"line":821,"column":15}},"214":{"start":{"line":822,"column":4},"end":{"line":822,"column":27}},"215":{"start":{"line":823,"column":4},"end":{"line":826,"column":6}},"216":{"start":{"line":824,"column":8},"end":{"line":824,"column":29}},"217":{"start":{"line":825,"column":8},"end":{"line":825,"column":62}},"218":{"start":{"line":829,"column":0},"end":{"line":836,"column":1}},"219":{"start":{"line":830,"column":4},"end":{"line":832,"column":5}},"220":{"start":{"line":831,"column":8},"end":{"line":831,"column":41}},"221":{"start":{"line":834,"column":4},"end":{"line":834,"column":37}},"222":{"start":{"line":835,"column":4},"end":{"line":835,"column":82}},"223":{"start":{"line":838,"column":0},"end":{"line":845,"column":1}},"224":{"start":{"line":839,"column":4},"end":{"line":844,"column":6}},"225":{"start":{"line":840,"column":8},"end":{"line":840,"column":73}},"226":{"start":{"line":840,"column":25},"end":{"line":840,"column":73}},"227":{"start":{"line":841,"column":8},"end":{"line":841,"column":24}},"228":{"start":{"line":842,"column":8},"end":{"line":842,"column":18}},"229":{"start":{"line":843,"column":8},"end":{"line":843,"column":38}},"230":{"start":{"line":847,"column":0},"end":{"line":887,"column":1}},"231":{"start":{"line":848,"column":4},"end":{"line":886,"column":6}},"232":{"start":{"line":849,"column":8},"end":{"line":849,"column":42}},"233":{"start":{"line":850,"column":8},"end":{"line":852,"column":9}},"234":{"start":{"line":851,"column":12},"end":{"line":851,"column":34}},"235":{"start":{"line":853,"column":8},"end":{"line":853,"column":37}},"236":{"start":{"line":854,"column":8},"end":{"line":854,"column":25}},"237":{"start":{"line":855,"column":8},"end":{"line":855,"column":24}},"238":{"start":{"line":857,"column":8},"end":{"line":868,"column":9}},"239":{"start":{"line":858,"column":12},"end":{"line":858,"column":25}},"240":{"start":{"line":859,"column":12},"end":{"line":867,"column":13}},"241":{"start":{"line":860,"column":16},"end":{"line":860,"column":28}},"242":{"start":{"line":861,"column":16},"end":{"line":861,"column":30}},"243":{"start":{"line":862,"column":19},"end":{"line":867,"column":13}},"244":{"start":{"line":863,"column":16},"end":{"line":863,"column":28}},"245":{"start":{"line":864,"column":16},"end":{"line":864,"column":38}},"246":{"start":{"line":866,"column":16},"end":{"line":866,"column":28}},"247":{"start":{"line":870,"column":8},"end":{"line":883,"column":9}},"248":{"start":{"line":871,"column":12},"end":{"line":882,"column":13}},"249":{"start":{"line":872,"column":16},"end":{"line":872,"column":38}},"250":{"start":{"line":873,"column":16},"end":{"line":879,"column":17}},"251":{"start":{"line":874,"column":20},"end":{"line":874,"column":32}},"252":{"start":{"line":875,"column":20},"end":{"line":877,"column":21}},"253":{"start":{"line":876,"column":24},"end":{"line":876,"column":39}},"254":{"start":{"line":878,"column":20},"end":{"line":878,"column":27}},"255":{"start":{"line":880,"column":16},"end":{"line":880,"column":29}},"256":{"start":{"line":881,"column":16},"end":{"line":881,"column":75}},"257":{"start":{"line":885,"column":8},"end":{"line":885,"column":20}},"258":{"start":{"line":911,"column":0},"end":{"line":913,"column":1}},"259":{"start":{"line":912,"column":2},"end":{"line":912,"column":48}},"260":{"start":{"line":915,"column":0},"end":{"line":919,"column":1}},"261":{"start":{"line":916,"column":4},"end":{"line":918,"column":6}},"262":{"start":{"line":917,"column":8},"end":{"line":917,"column":55}},"263":{"start":{"line":922,"column":0},"end":{"line":942,"column":1}},"264":{"start":{"line":923,"column":4},"end":{"line":923,"column":38}},"265":{"start":{"line":924,"column":4},"end":{"line":926,"column":29}},"266":{"start":{"line":927,"column":4},"end":{"line":929,"column":5}},"267":{"start":{"line":928,"column":8},"end":{"line":928,"column":23}},"268":{"start":{"line":931,"column":4},"end":{"line":937,"column":5}},"269":{"start":{"line":932,"column":8},"end":{"line":936,"column":9}},"270":{"start":{"line":933,"column":12},"end":{"line":933,"column":26}},"271":{"start":{"line":934,"column":15},"end":{"line":936,"column":9}},"272":{"start":{"line":935,"column":12},"end":{"line":935,"column":27}},"273":{"start":{"line":939,"column":4},"end":{"line":941,"column":5}},"274":{"start":{"line":940,"column":8},"end":{"line":940,"column":65}},"275":{"start":{"line":945,"column":0},"end":{"line":945,"column":51}},"276":{"start":{"line":988,"column":0},"end":{"line":991,"column":2}},"277":{"start":{"line":989,"column":4},"end":{"line":989,"column":83}},"278":{"start":{"line":990,"column":4},"end":{"line":990,"column":51}},"279":{"start":{"line":993,"column":0},"end":{"line":997,"column":1}},"280":{"start":{"line":994,"column":4},"end":{"line":996,"column":6}},"281":{"start":{"line":995,"column":8},"end":{"line":995,"column":51}},"282":{"start":{"line":999,"column":0},"end":{"line":1014,"column":1}},"283":{"start":{"line":1000,"column":4},"end":{"line":1000,"column":32}},"284":{"start":{"line":1001,"column":4},"end":{"line":1001,"column":20}},"285":{"start":{"line":1002,"column":4},"end":{"line":1002,"column":21}},"286":{"start":{"line":1003,"column":4},"end":{"line":1003,"column":20}},"287":{"start":{"line":1005,"column":4},"end":{"line":1013,"column":7}},"288":{"start":{"line":1006,"column":8},"end":{"line":1006,"column":30}},"289":{"start":{"line":1007,"column":8},"end":{"line":1010,"column":11}},"290":{"start":{"line":1008,"column":12},"end":{"line":1008,"column":31}},"291":{"start":{"line":1009,"column":12},"end":{"line":1009,"column":26}},"292":{"start":{"line":1012,"column":8},"end":{"line":1012,"column":31}},"293":{"start":{"line":1052,"column":0},"end":{"line":1052,"column":32}},"294":{"start":{"line":1087,"column":0},"end":{"line":1087,"column":33}},"295":{"start":{"line":1089,"column":0},"end":{"line":1093,"column":1}},"296":{"start":{"line":1090,"column":4},"end":{"line":1092,"column":6}},"297":{"start":{"line":1091,"column":8},"end":{"line":1091,"column":64}},"298":{"start":{"line":1114,"column":0},"end":{"line":1114,"column":42}},"299":{"start":{"line":1134,"column":0},"end":{"line":1134,"column":37}},"300":{"start":{"line":1155,"column":0},"end":{"line":1155,"column":45}},"301":{"start":{"line":1201,"column":0},"end":{"line":1205,"column":3}},"302":{"start":{"line":1202,"column":4},"end":{"line":1204,"column":7}},"303":{"start":{"line":1203,"column":8},"end":{"line":1203,"column":53}},"304":{"start":{"line":1262,"column":0},"end":{"line":1281,"column":1}},"305":{"start":{"line":1263,"column":4},"end":{"line":1280,"column":7}},"306":{"start":{"line":1264,"column":8},"end":{"line":1264,"column":19}},"307":{"start":{"line":1265,"column":8},"end":{"line":1269,"column":9}},"308":{"start":{"line":1266,"column":12},"end":{"line":1266,"column":44}},"309":{"start":{"line":1268,"column":12},"end":{"line":1268,"column":31}},"310":{"start":{"line":1271,"column":8},"end":{"line":1279,"column":9}},"311":{"start":{"line":1272,"column":12},"end":{"line":1276,"column":15}},"312":{"start":{"line":1273,"column":16},"end":{"line":1273,"column":38}},"313":{"start":{"line":1275,"column":16},"end":{"line":1275,"column":61}},"314":{"start":{"line":1278,"column":12},"end":{"line":1278,"column":35}},"315":{"start":{"line":1292,"column":0},"end":{"line":1302,"column":1}},"316":{"start":{"line":1293,"column":2},"end":{"line":1294,"column":48}},"317":{"start":{"line":1296,"column":2},"end":{"line":1300,"column":3}},"318":{"start":{"line":1297,"column":4},"end":{"line":1299,"column":5}},"319":{"start":{"line":1298,"column":6},"end":{"line":1298,"column":12}},"320":{"start":{"line":1301,"column":2},"end":{"line":1301,"column":15}},"321":{"start":{"line":1311,"column":0},"end":{"line":1326,"column":1}},"322":{"start":{"line":1312,"column":2},"end":{"line":1325,"column":4}},"323":{"start":{"line":1313,"column":4},"end":{"line":1316,"column":30}},"324":{"start":{"line":1318,"column":4},"end":{"line":1323,"column":5}},"325":{"start":{"line":1319,"column":6},"end":{"line":1319,"column":52}},"326":{"start":{"line":1320,"column":6},"end":{"line":1322,"column":7}},"327":{"start":{"line":1321,"column":8},"end":{"line":1321,"column":14}},"328":{"start":{"line":1324,"column":4},"end":{"line":1324,"column":18}},"329":{"start":{"line":1339,"column":0},"end":{"line":1339,"column":30}},"330":{"start":{"line":1349,"column":0},"end":{"line":1351,"column":1}},"331":{"start":{"line":1350,"column":2},"end":{"line":1350,"column":51}},"332":{"start":{"line":1364,"column":0},"end":{"line":1374,"column":1}},"333":{"start":{"line":1365,"column":2},"end":{"line":1366,"column":47}},"334":{"start":{"line":1368,"column":2},"end":{"line":1372,"column":3}},"335":{"start":{"line":1369,"column":4},"end":{"line":1371,"column":5}},"336":{"start":{"line":1370,"column":6},"end":{"line":1370,"column":19}},"337":{"start":{"line":1373,"column":2},"end":{"line":1373,"column":12}},"338":{"start":{"line":1383,"column":0},"end":{"line":1385,"column":1}},"339":{"start":{"line":1384,"column":2},"end":{"line":1384,"column":25}},"340":{"start":{"line":1397,"column":0},"end":{"line":1407,"column":1}},"341":{"start":{"line":1398,"column":2},"end":{"line":1399,"column":28}},"342":{"start":{"line":1401,"column":2},"end":{"line":1405,"column":3}},"343":{"start":{"line":1402,"column":4},"end":{"line":1404,"column":5}},"344":{"start":{"line":1403,"column":6},"end":{"line":1403,"column":19}},"345":{"start":{"line":1406,"column":2},"end":{"line":1406,"column":12}},"346":{"start":{"line":1418,"column":0},"end":{"line":1422,"column":1}},"347":{"start":{"line":1419,"column":2},"end":{"line":1421,"column":49}},"348":{"start":{"line":1503,"column":0},"end":{"line":1661,"column":2}},"349":{"start":{"line":1504,"column":4},"end":{"line":1508,"column":5}},"350":{"start":{"line":1506,"column":8},"end":{"line":1506,"column":31}},"351":{"start":{"line":1507,"column":8},"end":{"line":1507,"column":27}},"352":{"start":{"line":1509,"column":4},"end":{"line":1509,"column":38}},"353":{"start":{"line":1510,"column":4},"end":{"line":1510,"column":30}},"354":{"start":{"line":1511,"column":4},"end":{"line":1511,"column":34}},"355":{"start":{"line":1512,"column":4},"end":{"line":1514,"column":5}},"356":{"start":{"line":1513,"column":8},"end":{"line":1513,"column":30}},"357":{"start":{"line":1515,"column":4},"end":{"line":1517,"column":5}},"358":{"start":{"line":1516,"column":8},"end":{"line":1516,"column":31}},"359":{"start":{"line":1519,"column":4},"end":{"line":1519,"column":21}},"360":{"start":{"line":1520,"column":4},"end":{"line":1520,"column":25}},"361":{"start":{"line":1521,"column":4},"end":{"line":1521,"column":25}},"362":{"start":{"line":1523,"column":4},"end":{"line":1523,"column":40}},"363":{"start":{"line":1525,"column":4},"end":{"line":1525,"column":24}},"364":{"start":{"line":1528,"column":4},"end":{"line":1528,"column":26}},"365":{"start":{"line":1530,"column":4},"end":{"line":1530,"column":35}},"366":{"start":{"line":1532,"column":4},"end":{"line":1560,"column":7}},"367":{"start":{"line":1533,"column":8},"end":{"line":1538,"column":9}},"368":{"start":{"line":1535,"column":12},"end":{"line":1535,"column":37}},"369":{"start":{"line":1536,"column":12},"end":{"line":1536,"column":35}},"370":{"start":{"line":1537,"column":12},"end":{"line":1537,"column":19}},"371":{"start":{"line":1540,"column":8},"end":{"line":1540,"column":58}},"372":{"start":{"line":1541,"column":8},"end":{"line":1541,"column":56}},"373":{"start":{"line":1542,"column":8},"end":{"line":1546,"column":9}},"374":{"start":{"line":1543,"column":12},"end":{"line":1543,"column":35}},"375":{"start":{"line":1544,"column":12},"end":{"line":1544,"column":35}},"376":{"start":{"line":1545,"column":12},"end":{"line":1545,"column":19}},"377":{"start":{"line":1547,"column":8},"end":{"line":1547,"column":59}},"378":{"start":{"line":1549,"column":8},"end":{"line":1559,"column":11}},"379":{"start":{"line":1550,"column":12},"end":{"line":1552,"column":13}},"380":{"start":{"line":1551,"column":16},"end":{"line":1551,"column":150}},"381":{"start":{"line":1553,"column":12},"end":{"line":1558,"column":15}},"382":{"start":{"line":1554,"column":16},"end":{"line":1554,"column":40}},"383":{"start":{"line":1555,"column":16},"end":{"line":1557,"column":17}},"384":{"start":{"line":1556,"column":20},"end":{"line":1556,"column":43}},"385":{"start":{"line":1562,"column":4},"end":{"line":1562,"column":24}},"386":{"start":{"line":1563,"column":4},"end":{"line":1563,"column":19}},"387":{"start":{"line":1565,"column":4},"end":{"line":1569,"column":5}},"388":{"start":{"line":1566,"column":8},"end":{"line":1568,"column":11}},"389":{"start":{"line":1567,"column":12},"end":{"line":1567,"column":31}},"390":{"start":{"line":1571,"column":4},"end":{"line":1579,"column":5}},"391":{"start":{"line":1572,"column":8},"end":{"line":1574,"column":9}},"392":{"start":{"line":1573,"column":12},"end":{"line":1573,"column":43}},"393":{"start":{"line":1575,"column":8},"end":{"line":1578,"column":9}},"394":{"start":{"line":1576,"column":12},"end":{"line":1576,"column":41}},"395":{"start":{"line":1577,"column":12},"end":{"line":1577,"column":18}},"396":{"start":{"line":1581,"column":4},"end":{"line":1588,"column":5}},"397":{"start":{"line":1582,"column":8},"end":{"line":1582,"column":48}},"398":{"start":{"line":1583,"column":8},"end":{"line":1585,"column":9}},"399":{"start":{"line":1584,"column":12},"end":{"line":1584,"column":53}},"400":{"start":{"line":1587,"column":8},"end":{"line":1587,"column":31}},"401":{"start":{"line":1590,"column":4},"end":{"line":1596,"column":5}},"402":{"start":{"line":1591,"column":8},"end":{"line":1591,"column":54}},"403":{"start":{"line":1592,"column":8},"end":{"line":1594,"column":11}},"404":{"start":{"line":1593,"column":12},"end":{"line":1593,"column":17}},"405":{"start":{"line":1595,"column":8},"end":{"line":1595,"column":23}},"406":{"start":{"line":1598,"column":4},"end":{"line":1629,"column":5}},"407":{"start":{"line":1599,"column":8},"end":{"line":1599,"column":29}},"408":{"start":{"line":1599,"column":22},"end":{"line":1599,"column":29}},"409":{"start":{"line":1601,"column":8},"end":{"line":1620,"column":12}},"410":{"start":{"line":1602,"column":12},"end":{"line":1602,"column":27}},"411":{"start":{"line":1603,"column":12},"end":{"line":1605,"column":13}},"412":{"start":{"line":1604,"column":16},"end":{"line":1604,"column":31}},"413":{"start":{"line":1606,"column":12},"end":{"line":1619,"column":13}},"414":{"start":{"line":1607,"column":16},"end":{"line":1607,"column":37}},"415":{"start":{"line":1608,"column":16},"end":{"line":1610,"column":19}},"416":{"start":{"line":1609,"column":20},"end":{"line":1609,"column":44}},"417":{"start":{"line":1611,"column":16},"end":{"line":1611,"column":40}},"418":{"start":{"line":1612,"column":16},"end":{"line":1612,"column":32}},"419":{"start":{"line":1613,"column":16},"end":{"line":1613,"column":48}},"420":{"start":{"line":1615,"column":16},"end":{"line":1615,"column":43}},"421":{"start":{"line":1617,"column":16},"end":{"line":1617,"column":36}},"422":{"start":{"line":1618,"column":16},"end":{"line":1618,"column":34}},"423":{"start":{"line":1622,"column":8},"end":{"line":1622,"column":23}},"424":{"start":{"line":1623,"column":8},"end":{"line":1623,"column":43}},"425":{"start":{"line":1624,"column":8},"end":{"line":1628,"column":9}},"426":{"start":{"line":1625,"column":12},"end":{"line":1625,"column":42}},"427":{"start":{"line":1627,"column":12},"end":{"line":1627,"column":33}},"428":{"start":{"line":1631,"column":4},"end":{"line":1650,"column":5}},"429":{"start":{"line":1635,"column":8},"end":{"line":1635,"column":24}},"430":{"start":{"line":1636,"column":8},"end":{"line":1636,"column":24}},"431":{"start":{"line":1637,"column":8},"end":{"line":1645,"column":9}},"432":{"start":{"line":1638,"column":12},"end":{"line":1638,"column":45}},"433":{"start":{"line":1639,"column":12},"end":{"line":1639,"column":22}},"434":{"start":{"line":1640,"column":12},"end":{"line":1644,"column":15}},"435":{"start":{"line":1641,"column":16},"end":{"line":1643,"column":17}},"436":{"start":{"line":1642,"column":20},"end":{"line":1642,"column":49}},"437":{"start":{"line":1647,"column":8},"end":{"line":1649,"column":9}},"438":{"start":{"line":1648,"column":12},"end":{"line":1648,"column":93}},"439":{"start":{"line":1652,"column":4},"end":{"line":1660,"column":5}},"440":{"start":{"line":1653,"column":8},"end":{"line":1653,"column":24}},"441":{"start":{"line":1654,"column":8},"end":{"line":1658,"column":11}},"442":{"start":{"line":1655,"column":12},"end":{"line":1657,"column":13}},"443":{"start":{"line":1656,"column":16},"end":{"line":1656,"column":33}},"444":{"start":{"line":1659,"column":8},"end":{"line":1659,"column":22}},"445":{"start":{"line":1672,"column":0},"end":{"line":1681,"column":1}},"446":{"start":{"line":1673,"column":2},"end":{"line":1675,"column":29}},"447":{"start":{"line":1677,"column":2},"end":{"line":1679,"column":3}},"448":{"start":{"line":1678,"column":4},"end":{"line":1678,"column":57}},"449":{"start":{"line":1680,"column":2},"end":{"line":1680,"column":16}},"450":{"start":{"line":1684,"column":0},"end":{"line":1684,"column":34}},"451":{"start":{"line":1703,"column":0},"end":{"line":1706,"column":1}},"452":{"start":{"line":1704,"column":2},"end":{"line":1705,"column":60}},"453":{"start":{"line":1709,"column":0},"end":{"line":1709,"column":21}},"454":{"start":{"line":1712,"column":0},"end":{"line":1712,"column":60}},"455":{"start":{"line":1713,"column":0},"end":{"line":1713,"column":68}},"456":{"start":{"line":1723,"column":0},"end":{"line":1737,"column":1}},"457":{"start":{"line":1725,"column":2},"end":{"line":1727,"column":3}},"458":{"start":{"line":1726,"column":4},"end":{"line":1726,"column":17}},"459":{"start":{"line":1728,"column":2},"end":{"line":1731,"column":3}},"460":{"start":{"line":1730,"column":4},"end":{"line":1730,"column":46}},"461":{"start":{"line":1732,"column":2},"end":{"line":1734,"column":3}},"462":{"start":{"line":1733,"column":4},"end":{"line":1733,"column":60}},"463":{"start":{"line":1735,"column":2},"end":{"line":1735,"column":28}},"464":{"start":{"line":1736,"column":2},"end":{"line":1736,"column":69}},"465":{"start":{"line":1748,"column":0},"end":{"line":1767,"column":1}},"466":{"start":{"line":1749,"column":2},"end":{"line":1750,"column":28}},"467":{"start":{"line":1752,"column":2},"end":{"line":1754,"column":3}},"468":{"start":{"line":1753,"column":4},"end":{"line":1753,"column":51}},"469":{"start":{"line":1755,"column":2},"end":{"line":1755,"column":36}},"470":{"start":{"line":1756,"column":2},"end":{"line":1758,"column":3}},"471":{"start":{"line":1757,"column":4},"end":{"line":1757,"column":18}},"472":{"start":{"line":1759,"column":2},"end":{"line":1759,"column":51}},"473":{"start":{"line":1760,"column":2},"end":{"line":1760,"column":15}},"474":{"start":{"line":1762,"column":2},"end":{"line":1762,"column":29}},"475":{"start":{"line":1763,"column":2},"end":{"line":1765,"column":3}},"476":{"start":{"line":1764,"column":4},"end":{"line":1764,"column":41}},"477":{"start":{"line":1766,"column":2},"end":{"line":1766,"column":16}},"478":{"start":{"line":1778,"column":0},"end":{"line":1782,"column":1}},"479":{"start":{"line":1779,"column":2},"end":{"line":1779,"column":28}},"480":{"start":{"line":1780,"column":2},"end":{"line":1780,"column":41}},"481":{"start":{"line":1781,"column":2},"end":{"line":1781,"column":74}},"482":{"start":{"line":1793,"column":0},"end":{"line":1798,"column":1}},"483":{"start":{"line":1794,"column":2},"end":{"line":1794,"column":32}},"484":{"start":{"line":1796,"column":2},"end":{"line":1796,"column":74}},"485":{"start":{"line":1797,"column":2},"end":{"line":1797,"column":15}},"486":{"start":{"line":1809,"column":0},"end":{"line":1815,"column":1}},"487":{"start":{"line":1810,"column":2},"end":{"line":1811,"column":33}},"488":{"start":{"line":1813,"column":2},"end":{"line":1813,"column":83}},"489":{"start":{"line":1814,"column":2},"end":{"line":1814,"column":15}},"490":{"start":{"line":1824,"column":0},"end":{"line":1826,"column":1}},"491":{"start":{"line":1825,"column":2},"end":{"line":1825,"column":26}},"492":{"start":{"line":1829,"column":0},"end":{"line":1829,"column":38}},"493":{"start":{"line":1830,"column":0},"end":{"line":1830,"column":42}},"494":{"start":{"line":1831,"column":0},"end":{"line":1831,"column":46}},"495":{"start":{"line":1832,"column":0},"end":{"line":1832,"column":44}},"496":{"start":{"line":1833,"column":0},"end":{"line":1833,"column":83}},"497":{"start":{"line":1834,"column":0},"end":{"line":1834,"column":34}},"498":{"start":{"line":1837,"column":0},"end":{"line":1837,"column":22}},"499":{"start":{"line":1840,"column":0},"end":{"line":1840,"column":90}},"500":{"start":{"line":1849,"column":0},"end":{"line":1851,"column":1}},"501":{"start":{"line":1850,"column":2},"end":{"line":1850,"column":35}},"502":{"start":{"line":1854,"column":0},"end":{"line":1854,"column":40}},"503":{"start":{"line":1855,"column":0},"end":{"line":1855,"column":44}},"504":{"start":{"line":1856,"column":0},"end":{"line":1856,"column":48}},"505":{"start":{"line":1857,"column":0},"end":{"line":1857,"column":46}},"506":{"start":{"line":1858,"column":0},"end":{"line":1858,"column":91}},"507":{"start":{"line":1859,"column":0},"end":{"line":1859,"column":36}},"508":{"start":{"line":1862,"column":0},"end":{"line":1862,"column":43}},"509":{"start":{"line":1863,"column":0},"end":{"line":1863,"column":41}},"510":{"start":{"line":1864,"column":0},"end":{"line":1864,"column":40}},"511":{"start":{"line":1865,"column":0},"end":{"line":1865,"column":54}},"512":{"start":{"line":1866,"column":0},"end":{"line":1866,"column":47}},"513":{"start":{"line":1867,"column":0},"end":{"line":1867,"column":51}},"514":{"start":{"line":1868,"column":0},"end":{"line":1868,"column":54}},"515":{"start":{"line":1869,"column":0},"end":{"line":1869,"column":24}},"516":{"start":{"line":1872,"column":0},"end":{"line":1872,"column":32}},"517":{"start":{"line":1873,"column":0},"end":{"line":1873,"column":41}},"518":{"start":{"line":1874,"column":0},"end":{"line":1874,"column":125}},"519":{"start":{"line":1875,"column":0},"end":{"line":1875,"column":44}},"520":{"start":{"line":1876,"column":0},"end":{"line":1876,"column":112}},"521":{"start":{"line":1879,"column":0},"end":{"line":1879,"column":79}},"522":{"start":{"line":1888,"column":0},"end":{"line":1890,"column":1}},"523":{"start":{"line":1889,"column":2},"end":{"line":1889,"column":39}},"524":{"start":{"line":1899,"column":0},"end":{"line":1903,"column":1}},"525":{"start":{"line":1900,"column":2},"end":{"line":1902,"column":27}},"526":{"start":{"line":1926,"column":0},"end":{"line":1928,"column":1}},"527":{"start":{"line":1927,"column":2},"end":{"line":1927,"column":50}},"528":{"start":{"line":1931,"column":0},"end":{"line":1931,"column":26}},"529":{"start":{"line":1955,"column":0},"end":{"line":1969,"column":1}},"530":{"start":{"line":1956,"column":2},"end":{"line":1956,"column":28}},"531":{"start":{"line":1957,"column":2},"end":{"line":1959,"column":3}},"532":{"start":{"line":1958,"column":4},"end":{"line":1958,"column":38}},"533":{"start":{"line":1960,"column":2},"end":{"line":1962,"column":3}},"534":{"start":{"line":1961,"column":4},"end":{"line":1961,"column":18}},"535":{"start":{"line":1963,"column":2},"end":{"line":1966,"column":54}},"536":{"start":{"line":1968,"column":2},"end":{"line":1968,"column":52}},"537":{"start":{"line":1971,"column":0},"end":{"line":1971,"column":54}},"538":{"start":{"line":1972,"column":0},"end":{"line":1972,"column":23}},"539":{"start":{"line":1973,"column":0},"end":{"line":1973,"column":28}},"540":{"start":{"line":1974,"column":0},"end":{"line":1974,"column":56}},"541":{"start":{"line":1976,"column":0},"end":{"line":1984,"column":1}},"542":{"start":{"line":1977,"column":4},"end":{"line":1977,"column":55}},"543":{"start":{"line":1978,"column":4},"end":{"line":1978,"column":51}},"544":{"start":{"line":1979,"column":4},"end":{"line":1979,"column":48}},"545":{"start":{"line":1980,"column":4},"end":{"line":1982,"column":7}},"546":{"start":{"line":1981,"column":8},"end":{"line":1981,"column":45}},"547":{"start":{"line":1983,"column":4},"end":{"line":1983,"column":16}},"548":{"start":{"line":2068,"column":0},"end":{"line":2103,"column":1}},"549":{"start":{"line":2069,"column":4},"end":{"line":2069,"column":22}},"550":{"start":{"line":2071,"column":4},"end":{"line":2100,"column":7}},"551":{"start":{"line":2072,"column":8},"end":{"line":2072,"column":19}},"552":{"start":{"line":2074,"column":8},"end":{"line":2091,"column":9}},"553":{"start":{"line":2075,"column":12},"end":{"line":2075,"column":41}},"554":{"start":{"line":2076,"column":12},"end":{"line":2076,"column":47}},"555":{"start":{"line":2078,"column":12},"end":{"line":2078,"column":80}},"556":{"start":{"line":2079,"column":15},"end":{"line":2091,"column":9}},"557":{"start":{"line":2081,"column":12},"end":{"line":2081,"column":35}},"558":{"start":{"line":2083,"column":12},"end":{"line":2083,"column":41}},"559":{"start":{"line":2084,"column":12},"end":{"line":2086,"column":13}},"560":{"start":{"line":2085,"column":16},"end":{"line":2085,"column":90}},"561":{"start":{"line":2088,"column":12},"end":{"line":2088,"column":25}},"562":{"start":{"line":2090,"column":12},"end":{"line":2090,"column":51}},"563":{"start":{"line":2093,"column":8},"end":{"line":2099,"column":9}},"564":{"start":{"line":2094,"column":12},"end":{"line":2096,"column":15}},"565":{"start":{"line":2095,"column":16},"end":{"line":2095,"column":37}},"566":{"start":{"line":2097,"column":12},"end":{"line":2097,"column":33}},"567":{"start":{"line":2098,"column":12},"end":{"line":2098,"column":40}},"568":{"start":{"line":2102,"column":4},"end":{"line":2102,"column":29}},"569":{"start":{"line":2105,"column":0},"end":{"line":2105,"column":73}},"570":{"start":{"line":2106,"column":0},"end":{"line":2106,"column":88}},"571":{"start":{"line":2108,"column":0},"end":{"line":2110,"column":1}},"572":{"start":{"line":2109,"column":4},"end":{"line":2109,"column":22}},"573":{"start":{"line":2112,"column":0},"end":{"line":2118,"column":1}},"574":{"start":{"line":2113,"column":4},"end":{"line":2117,"column":7}},"575":{"start":{"line":2114,"column":8},"end":{"line":2116,"column":11}},"576":{"start":{"line":2115,"column":12},"end":{"line":2115,"column":33}},"577":{"start":{"line":2120,"column":0},"end":{"line":2120,"column":11}},"578":{"start":{"line":2122,"column":0},"end":{"line":2128,"column":1}},"579":{"start":{"line":2123,"column":4},"end":{"line":2123,"column":26}},"580":{"start":{"line":2124,"column":7},"end":{"line":2128,"column":1}},"581":{"start":{"line":2125,"column":4},"end":{"line":2125,"column":30}},"582":{"start":{"line":2127,"column":4},"end":{"line":2127,"column":22}},"583":{"start":{"line":2130,"column":0},"end":{"line":2130,"column":34}},"584":{"start":{"line":2136,"column":0},"end":{"line":2139,"column":1}},"585":{"start":{"line":2137,"column":4},"end":{"line":2137,"column":33}},"586":{"start":{"line":2138,"column":4},"end":{"line":2138,"column":20}},"587":{"start":{"line":2141,"column":0},"end":{"line":2144,"column":1}},"588":{"start":{"line":2142,"column":4},"end":{"line":2142,"column":19}},"589":{"start":{"line":2143,"column":4},"end":{"line":2143,"column":31}},"590":{"start":{"line":2146,"column":0},"end":{"line":2153,"column":2}},"591":{"start":{"line":2147,"column":4},"end":{"line":2147,"column":73}},"592":{"start":{"line":2147,"column":19},"end":{"line":2147,"column":46}},"593":{"start":{"line":2147,"column":51},"end":{"line":2147,"column":73}},"594":{"start":{"line":2148,"column":4},"end":{"line":2148,"column":73}},"595":{"start":{"line":2148,"column":19},"end":{"line":2148,"column":46}},"596":{"start":{"line":2148,"column":51},"end":{"line":2148,"column":73}},"597":{"start":{"line":2150,"column":4},"end":{"line":2150,"column":33}},"598":{"start":{"line":2151,"column":4},"end":{"line":2151,"column":21}},"599":{"start":{"line":2152,"column":4},"end":{"line":2152,"column":16}},"600":{"start":{"line":2155,"column":0},"end":{"line":2155,"column":26}},"601":{"start":{"line":2157,"column":0},"end":{"line":2163,"column":2}},"602":{"start":{"line":2158,"column":4},"end":{"line":2158,"column":24}},"603":{"start":{"line":2159,"column":4},"end":{"line":2159,"column":29}},"604":{"start":{"line":2160,"column":4},"end":{"line":2160,"column":69}},"605":{"start":{"line":2160,"column":19},"end":{"line":2160,"column":44}},"606":{"start":{"line":2160,"column":49},"end":{"line":2160,"column":69}},"607":{"start":{"line":2161,"column":4},"end":{"line":2161,"column":24}},"608":{"start":{"line":2162,"column":4},"end":{"line":2162,"column":21}},"609":{"start":{"line":2165,"column":0},"end":{"line":2171,"column":2}},"610":{"start":{"line":2166,"column":4},"end":{"line":2166,"column":29}},"611":{"start":{"line":2167,"column":4},"end":{"line":2167,"column":24}},"612":{"start":{"line":2168,"column":4},"end":{"line":2168,"column":69}},"613":{"start":{"line":2168,"column":19},"end":{"line":2168,"column":44}},"614":{"start":{"line":2168,"column":49},"end":{"line":2168,"column":69}},"615":{"start":{"line":2169,"column":4},"end":{"line":2169,"column":24}},"616":{"start":{"line":2170,"column":4},"end":{"line":2170,"column":21}},"617":{"start":{"line":2173,"column":0},"end":{"line":2175,"column":2}},"618":{"start":{"line":2174,"column":4},"end":{"line":2174,"column":82}},"619":{"start":{"line":2174,"column":19},"end":{"line":2174,"column":54}},"620":{"start":{"line":2174,"column":59},"end":{"line":2174,"column":82}},"621":{"start":{"line":2177,"column":0},"end":{"line":2179,"column":2}},"622":{"start":{"line":2178,"column":4},"end":{"line":2178,"column":81}},"623":{"start":{"line":2178,"column":19},"end":{"line":2178,"column":53}},"624":{"start":{"line":2178,"column":58},"end":{"line":2178,"column":81}},"625":{"start":{"line":2181,"column":0},"end":{"line":2183,"column":2}},"626":{"start":{"line":2182,"column":4},"end":{"line":2182,"column":51}},"627":{"start":{"line":2185,"column":0},"end":{"line":2187,"column":2}},"628":{"start":{"line":2186,"column":4},"end":{"line":2186,"column":51}},"629":{"start":{"line":2189,"column":0},"end":{"line":2337,"column":1}},"630":{"start":{"line":2190,"column":4},"end":{"line":2194,"column":5}},"631":{"start":{"line":2191,"column":8},"end":{"line":2191,"column":24}},"632":{"start":{"line":2192,"column":11},"end":{"line":2194,"column":5}},"633":{"start":{"line":2193,"column":8},"end":{"line":2193,"column":56}},"634":{"start":{"line":2196,"column":4},"end":{"line":2224,"column":5}},"635":{"start":{"line":2197,"column":8},"end":{"line":2199,"column":9}},"636":{"start":{"line":2198,"column":12},"end":{"line":2198,"column":64}},"637":{"start":{"line":2200,"column":8},"end":{"line":2200,"column":25}},"638":{"start":{"line":2201,"column":8},"end":{"line":2203,"column":9}},"639":{"start":{"line":2202,"column":12},"end":{"line":2202,"column":26}},"640":{"start":{"line":2204,"column":8},"end":{"line":2209,"column":9}},"641":{"start":{"line":2206,"column":12},"end":{"line":2208,"column":15}},"642":{"start":{"line":2207,"column":16},"end":{"line":2207,"column":26}},"643":{"start":{"line":2211,"column":8},"end":{"line":2222,"column":9}},"644":{"start":{"line":2212,"column":12},"end":{"line":2215,"column":14}},"645":{"start":{"line":2217,"column":12},"end":{"line":2221,"column":13}},"646":{"start":{"line":2218,"column":16},"end":{"line":2218,"column":39}},"647":{"start":{"line":2220,"column":16},"end":{"line":2220,"column":36}},"648":{"start":{"line":2223,"column":8},"end":{"line":2223,"column":34}},"649":{"start":{"line":2226,"column":4},"end":{"line":2253,"column":5}},"650":{"start":{"line":2227,"column":8},"end":{"line":2252,"column":11}},"651":{"start":{"line":2228,"column":12},"end":{"line":2228,"column":25}},"652":{"start":{"line":2230,"column":12},"end":{"line":2242,"column":13}},"653":{"start":{"line":2231,"column":16},"end":{"line":2231,"column":36}},"654":{"start":{"line":2232,"column":16},"end":{"line":2232,"column":62}},"655":{"start":{"line":2233,"column":16},"end":{"line":2235,"column":17}},"656":{"start":{"line":2234,"column":20},"end":{"line":2234,"column":46}},"657":{"start":{"line":2237,"column":16},"end":{"line":2237,"column":48}},"658":{"start":{"line":2239,"column":16},"end":{"line":2241,"column":17}},"659":{"start":{"line":2240,"column":20},"end":{"line":2240,"column":48}},"660":{"start":{"line":2244,"column":12},"end":{"line":2246,"column":13}},"661":{"start":{"line":2245,"column":16},"end":{"line":2245,"column":32}},"662":{"start":{"line":2248,"column":12},"end":{"line":2250,"column":13}},"663":{"start":{"line":2249,"column":16},"end":{"line":2249,"column":26}},"664":{"start":{"line":2251,"column":12},"end":{"line":2251,"column":24}},"665":{"start":{"line":2255,"column":4},"end":{"line":2255,"column":20}},"666":{"start":{"line":2256,"column":4},"end":{"line":2256,"column":25}},"667":{"start":{"line":2257,"column":4},"end":{"line":2257,"column":29}},"668":{"start":{"line":2258,"column":4},"end":{"line":2335,"column":6}},"669":{"start":{"line":2271,"column":12},"end":{"line":2271,"column":43}},"670":{"start":{"line":2274,"column":12},"end":{"line":2274,"column":27}},"671":{"start":{"line":2275,"column":12},"end":{"line":2275,"column":29}},"672":{"start":{"line":2278,"column":12},"end":{"line":2278,"column":42}},"673":{"start":{"line":2283,"column":12},"end":{"line":2285,"column":13}},"674":{"start":{"line":2284,"column":16},"end":{"line":2284,"column":23}},"675":{"start":{"line":2286,"column":12},"end":{"line":2286,"column":32}},"676":{"start":{"line":2287,"column":12},"end":{"line":2310,"column":13}},"677":{"start":{"line":2288,"column":16},"end":{"line":2289,"column":30}},"678":{"start":{"line":2290,"column":16},"end":{"line":2290,"column":40}},"679":{"start":{"line":2291,"column":16},"end":{"line":2291,"column":58}},"680":{"start":{"line":2291,"column":31},"end":{"line":2291,"column":58}},"681":{"start":{"line":2292,"column":16},"end":{"line":2296,"column":17}},"682":{"start":{"line":2293,"column":20},"end":{"line":2293,"column":48}},"683":{"start":{"line":2294,"column":20},"end":{"line":2294,"column":37}},"684":{"start":{"line":2295,"column":20},"end":{"line":2295,"column":41}},"685":{"start":{"line":2298,"column":16},"end":{"line":2300,"column":17}},"686":{"start":{"line":2299,"column":20},"end":{"line":2299,"column":30}},"687":{"start":{"line":2301,"column":16},"end":{"line":2301,"column":29}},"688":{"start":{"line":2302,"column":16},"end":{"line":2302,"column":43}},"689":{"start":{"line":2304,"column":16},"end":{"line":2306,"column":17}},"690":{"start":{"line":2305,"column":20},"end":{"line":2305,"column":34}},"691":{"start":{"line":2308,"column":16},"end":{"line":2308,"column":48}},"692":{"start":{"line":2309,"column":16},"end":{"line":2309,"column":33}},"693":{"start":{"line":2311,"column":12},"end":{"line":2311,"column":33}},"694":{"start":{"line":2314,"column":12},"end":{"line":2314,"column":35}},"695":{"start":{"line":2317,"column":12},"end":{"line":2317,"column":27}},"696":{"start":{"line":2320,"column":12},"end":{"line":2320,"column":31}},"697":{"start":{"line":2323,"column":12},"end":{"line":2323,"column":51}},"698":{"start":{"line":2326,"column":12},"end":{"line":2326,"column":28}},"699":{"start":{"line":2329,"column":12},"end":{"line":2331,"column":13}},"700":{"start":{"line":2330,"column":16},"end":{"line":2330,"column":23}},"701":{"start":{"line":2332,"column":12},"end":{"line":2332,"column":29}},"702":{"start":{"line":2333,"column":12},"end":{"line":2333,"column":38}},"703":{"start":{"line":2336,"column":4},"end":{"line":2336,"column":13}},"704":{"start":{"line":2417,"column":0},"end":{"line":2419,"column":1}},"705":{"start":{"line":2418,"column":2},"end":{"line":2418,"column":35}},"706":{"start":{"line":2440,"column":0},"end":{"line":2440,"column":43}},"707":{"start":{"line":2482,"column":0},"end":{"line":2492,"column":1}},"708":{"start":{"line":2483,"column":4},"end":{"line":2483,"column":38}},"709":{"start":{"line":2484,"column":4},"end":{"line":2491,"column":7}},"710":{"start":{"line":2485,"column":8},"end":{"line":2488,"column":11}},"711":{"start":{"line":2486,"column":12},"end":{"line":2486,"column":21}},"712":{"start":{"line":2487,"column":12},"end":{"line":2487,"column":26}},"713":{"start":{"line":2490,"column":8},"end":{"line":2490,"column":28}},"714":{"start":{"line":2532,"column":0},"end":{"line":2551,"column":3}},"715":{"start":{"line":2533,"column":4},"end":{"line":2550,"column":7}},"716":{"start":{"line":2534,"column":8},"end":{"line":2534,"column":24}},"717":{"start":{"line":2536,"column":8},"end":{"line":2536,"column":39}},"718":{"start":{"line":2537,"column":8},"end":{"line":2541,"column":9}},"719":{"start":{"line":2538,"column":12},"end":{"line":2538,"column":23}},"720":{"start":{"line":2540,"column":12},"end":{"line":2540,"column":22}},"721":{"start":{"line":2543,"column":8},"end":{"line":2549,"column":11}},"722":{"start":{"line":2544,"column":12},"end":{"line":2546,"column":17}},"723":{"start":{"line":2545,"column":16},"end":{"line":2545,"column":34}},"724":{"start":{"line":2548,"column":12},"end":{"line":2548,"column":50}},"725":{"start":{"line":2588,"column":0},"end":{"line":2590,"column":3}},"726":{"start":{"line":2589,"column":2},"end":{"line":2589,"column":43}},"727":{"start":{"line":2592,"column":0},"end":{"line":2602,"column":1}},"728":{"start":{"line":2593,"column":4},"end":{"line":2593,"column":20}},"729":{"start":{"line":2594,"column":4},"end":{"line":2601,"column":7}},"730":{"start":{"line":2595,"column":8},"end":{"line":2598,"column":11}},"731":{"start":{"line":2596,"column":12},"end":{"line":2596,"column":44}},"732":{"start":{"line":2597,"column":12},"end":{"line":2597,"column":20}},"733":{"start":{"line":2600,"column":8},"end":{"line":2600,"column":30}},"734":{"start":{"line":2631,"column":0},"end":{"line":2631,"column":34}},"735":{"start":{"line":2633,"column":0},"end":{"line":2637,"column":1}},"736":{"start":{"line":2634,"column":4},"end":{"line":2636,"column":6}},"737":{"start":{"line":2635,"column":8},"end":{"line":2635,"column":57}},"738":{"start":{"line":2658,"column":0},"end":{"line":2658,"column":38}},"739":{"start":{"line":2702,"column":0},"end":{"line":2707,"column":3}},"740":{"start":{"line":2703,"column":4},"end":{"line":2703,"column":37}},"741":{"start":{"line":2704,"column":4},"end":{"line":2706,"column":7}},"742":{"start":{"line":2705,"column":8},"end":{"line":2705,"column":42}},"743":{"start":{"line":2709,"column":0},"end":{"line":2734,"column":1}},"744":{"start":{"line":2710,"column":4},"end":{"line":2733,"column":6}},"745":{"start":{"line":2711,"column":8},"end":{"line":2711,"column":24}},"746":{"start":{"line":2712,"column":8},"end":{"line":2712,"column":31}},"747":{"start":{"line":2713,"column":8},"end":{"line":2713,"column":23}},"748":{"start":{"line":2714,"column":8},"end":{"line":2732,"column":11}},"749":{"start":{"line":2715,"column":12},"end":{"line":2725,"column":15}},"750":{"start":{"line":2716,"column":16},"end":{"line":2724,"column":17}},"751":{"start":{"line":2717,"column":20},"end":{"line":2717,"column":34}},"752":{"start":{"line":2718,"column":23},"end":{"line":2724,"column":17}},"753":{"start":{"line":2719,"column":20},"end":{"line":2719,"column":38}},"754":{"start":{"line":2720,"column":20},"end":{"line":2720,"column":56}},"755":{"start":{"line":2721,"column":20},"end":{"line":2721,"column":46}},"756":{"start":{"line":2723,"column":20},"end":{"line":2723,"column":31}},"757":{"start":{"line":2727,"column":12},"end":{"line":2731,"column":13}},"758":{"start":{"line":2728,"column":16},"end":{"line":2728,"column":24}},"759":{"start":{"line":2730,"column":16},"end":{"line":2730,"column":69}},"760":{"start":{"line":2736,"column":0},"end":{"line":2738,"column":1}},"761":{"start":{"line":2737,"column":4},"end":{"line":2737,"column":13}},"762":{"start":{"line":2775,"column":0},"end":{"line":2775,"column":65}},"763":{"start":{"line":2799,"column":0},"end":{"line":2799,"column":75}},"764":{"start":{"line":2821,"column":0},"end":{"line":2821,"column":43}},"765":{"start":{"line":2823,"column":0},"end":{"line":2839,"column":1}},"766":{"start":{"line":2824,"column":4},"end":{"line":2838,"column":7}},"767":{"start":{"line":2825,"column":8},"end":{"line":2837,"column":13}},"768":{"start":{"line":2826,"column":12},"end":{"line":2836,"column":13}},"769":{"start":{"line":2827,"column":16},"end":{"line":2835,"column":17}},"770":{"start":{"line":2828,"column":20},"end":{"line":2830,"column":21}},"771":{"start":{"line":2829,"column":24},"end":{"line":2829,"column":43}},"772":{"start":{"line":2831,"column":23},"end":{"line":2835,"column":17}},"773":{"start":{"line":2832,"column":20},"end":{"line":2834,"column":23}},"774":{"start":{"line":2833,"column":24},"end":{"line":2833,"column":41}},"775":{"start":{"line":2869,"column":0},"end":{"line":2869,"column":29}},"776":{"start":{"line":2892,"column":0},"end":{"line":2908,"column":1}},"777":{"start":{"line":2893,"column":4},"end":{"line":2893,"column":42}},"778":{"start":{"line":2895,"column":4},"end":{"line":2899,"column":7}},"779":{"start":{"line":2896,"column":8},"end":{"line":2896,"column":38}},"780":{"start":{"line":2896,"column":17},"end":{"line":2896,"column":38}},"781":{"start":{"line":2897,"column":8},"end":{"line":2897,"column":25}},"782":{"start":{"line":2898,"column":8},"end":{"line":2898,"column":31}},"783":{"start":{"line":2901,"column":4},"end":{"line":2905,"column":5}},"784":{"start":{"line":2902,"column":8},"end":{"line":2902,"column":38}},"785":{"start":{"line":2902,"column":17},"end":{"line":2902,"column":38}},"786":{"start":{"line":2903,"column":8},"end":{"line":2903,"column":42}},"787":{"start":{"line":2903,"column":20},"end":{"line":2903,"column":42}},"788":{"start":{"line":2904,"column":8},"end":{"line":2904,"column":17}},"789":{"start":{"line":2907,"column":4},"end":{"line":2907,"column":22}},"790":{"start":{"line":2933,"column":0},"end":{"line":2941,"column":1}},"791":{"start":{"line":2934,"column":4},"end":{"line":2934,"column":42}},"792":{"start":{"line":2935,"column":4},"end":{"line":2939,"column":7}},"793":{"start":{"line":2936,"column":8},"end":{"line":2936,"column":38}},"794":{"start":{"line":2936,"column":17},"end":{"line":2936,"column":38}},"795":{"start":{"line":2937,"column":8},"end":{"line":2937,"column":58}},"796":{"start":{"line":2937,"column":36},"end":{"line":2937,"column":58}},"797":{"start":{"line":2938,"column":8},"end":{"line":2938,"column":50}},"798":{"start":{"line":2940,"column":4},"end":{"line":2940,"column":19}},"799":{"start":{"line":2963,"column":0},"end":{"line":2967,"column":1}},"800":{"start":{"line":2964,"column":4},"end":{"line":2966,"column":17}},"801":{"start":{"line":2965,"column":8},"end":{"line":2965,"column":44}},"802":{"start":{"line":3006,"column":0},"end":{"line":3021,"column":1}},"803":{"start":{"line":3007,"column":4},"end":{"line":3007,"column":42}},"804":{"start":{"line":3009,"column":4},"end":{"line":3012,"column":5}},"805":{"start":{"line":3010,"column":8},"end":{"line":3010,"column":38}},"806":{"start":{"line":3010,"column":17},"end":{"line":3010,"column":38}},"807":{"start":{"line":3011,"column":8},"end":{"line":3011,"column":20}},"808":{"start":{"line":3014,"column":4},"end":{"line":3018,"column":5}},"809":{"start":{"line":3015,"column":8},"end":{"line":3015,"column":38}},"810":{"start":{"line":3015,"column":17},"end":{"line":3015,"column":38}},"811":{"start":{"line":3016,"column":8},"end":{"line":3016,"column":42}},"812":{"start":{"line":3016,"column":20},"end":{"line":3016,"column":42}},"813":{"start":{"line":3017,"column":8},"end":{"line":3017,"column":17}},"814":{"start":{"line":3020,"column":4},"end":{"line":3020,"column":16}},"815":{"start":{"line":3023,"column":0},"end":{"line":3027,"column":1}},"816":{"start":{"line":3024,"column":4},"end":{"line":3026,"column":6}},"817":{"start":{"line":3025,"column":8},"end":{"line":3025,"column":41}},"818":{"start":{"line":3088,"column":0},"end":{"line":3090,"column":1}},"819":{"start":{"line":3089,"column":2},"end":{"line":3089,"column":50}},"820":{"start":{"line":3113,"column":0},"end":{"line":3115,"column":1}},"821":{"start":{"line":3114,"column":2},"end":{"line":3114,"column":63}},"822":{"start":{"line":3137,"column":0},"end":{"line":3137,"column":41}},"823":{"start":{"line":3173,"column":0},"end":{"line":3189,"column":1}},"824":{"start":{"line":3174,"column":4},"end":{"line":3188,"column":7}},"825":{"start":{"line":3175,"column":8},"end":{"line":3175,"column":24}},"826":{"start":{"line":3176,"column":8},"end":{"line":3185,"column":11}},"827":{"start":{"line":3177,"column":12},"end":{"line":3177,"column":38}},"828":{"start":{"line":3178,"column":12},"end":{"line":3184,"column":13}},"829":{"start":{"line":3179,"column":16},"end":{"line":3181,"column":19}},"830":{"start":{"line":3180,"column":20},"end":{"line":3180,"column":52}},"831":{"start":{"line":3183,"column":16},"end":{"line":3183,"column":48}},"832":{"start":{"line":3186,"column":8},"end":{"line":3186,"column":29}},"833":{"start":{"line":3187,"column":8},"end":{"line":3187,"column":21}},"834":{"start":{"line":3191,"column":0},"end":{"line":3193,"column":1}},"835":{"start":{"line":3192,"column":4},"end":{"line":3192,"column":14}},"836":{"start":{"line":3223,"column":0},"end":{"line":3223,"column":52}},"837":{"start":{"line":3245,"column":0},"end":{"line":3245,"column":62}},"838":{"start":{"line":3266,"column":0},"end":{"line":3266,"column":41}},"839":{"start":{"line":3275,"column":0},"end":{"line":3279,"column":1}},"840":{"start":{"line":3276,"column":2},"end":{"line":3278,"column":4}},"841":{"start":{"line":3277,"column":4},"end":{"line":3277,"column":52}},"842":{"start":{"line":3281,"column":0},"end":{"line":3296,"column":1}},"843":{"start":{"line":3282,"column":4},"end":{"line":3282,"column":44}},"844":{"start":{"line":3283,"column":4},"end":{"line":3295,"column":7}},"845":{"start":{"line":3284,"column":8},"end":{"line":3287,"column":11}},"846":{"start":{"line":3285,"column":12},"end":{"line":3285,"column":37}},"847":{"start":{"line":3286,"column":12},"end":{"line":3286,"column":26}},"848":{"start":{"line":3289,"column":8},"end":{"line":3289,"column":38}},"849":{"start":{"line":3289,"column":17},"end":{"line":3289,"column":38}},"850":{"start":{"line":3290,"column":8},"end":{"line":3290,"column":25}},"851":{"start":{"line":3291,"column":8},"end":{"line":3293,"column":9}},"852":{"start":{"line":3292,"column":12},"end":{"line":3292,"column":53}},"853":{"start":{"line":3292,"column":32},"end":{"line":3292,"column":53}},"854":{"start":{"line":3294,"column":8},"end":{"line":3294,"column":32}},"855":{"start":{"line":3298,"column":0},"end":{"line":3320,"column":1}},"856":{"start":{"line":3299,"column":4},"end":{"line":3299,"column":21}},"857":{"start":{"line":3300,"column":4},"end":{"line":3319,"column":7}},"858":{"start":{"line":3301,"column":8},"end":{"line":3310,"column":11}},"859":{"start":{"line":3302,"column":12},"end":{"line":3309,"column":13}},"860":{"start":{"line":3303,"column":16},"end":{"line":3303,"column":30}},"861":{"start":{"line":3305,"column":16},"end":{"line":3307,"column":17}},"862":{"start":{"line":3306,"column":20},"end":{"line":3306,"column":61}},"863":{"start":{"line":3308,"column":16},"end":{"line":3308,"column":27}},"864":{"start":{"line":3312,"column":8},"end":{"line":3318,"column":9}},"865":{"start":{"line":3313,"column":12},"end":{"line":3313,"column":26}},"866":{"start":{"line":3315,"column":12},"end":{"line":3317,"column":40}},"867":{"start":{"line":3316,"column":16},"end":{"line":3316,"column":41}},"868":{"start":{"line":3322,"column":0},"end":{"line":3325,"column":1}},"869":{"start":{"line":3323,"column":4},"end":{"line":3323,"column":65}},"870":{"start":{"line":3324,"column":4},"end":{"line":3324,"column":53}},"871":{"start":{"line":3354,"column":0},"end":{"line":3354,"column":33}},"872":{"start":{"line":3375,"column":0},"end":{"line":3375,"column":43}},"873":{"start":{"line":3394,"column":0},"end":{"line":3394,"column":43}},"874":{"start":{"line":3425,"column":0},"end":{"line":3434,"column":1}},"875":{"start":{"line":3426,"column":4},"end":{"line":3426,"column":41}},"876":{"start":{"line":3427,"column":4},"end":{"line":3427,"column":31}},"877":{"start":{"line":3429,"column":4},"end":{"line":3432,"column":5}},"878":{"start":{"line":3430,"column":8},"end":{"line":3430,"column":34}},"879":{"start":{"line":3430,"column":17},"end":{"line":3430,"column":34}},"880":{"start":{"line":3431,"column":8},"end":{"line":3431,"column":19}},"881":{"start":{"line":3433,"column":4},"end":{"line":3433,"column":11}},"882":{"start":{"line":3463,"column":0},"end":{"line":3463,"column":29}},"883":{"start":{"line":3486,"column":0},"end":{"line":3498,"column":1}},"884":{"start":{"line":3487,"column":4},"end":{"line":3487,"column":38}},"885":{"start":{"line":3488,"column":4},"end":{"line":3488,"column":20}},"886":{"start":{"line":3489,"column":4},"end":{"line":3497,"column":7}},"887":{"start":{"line":3490,"column":8},"end":{"line":3494,"column":11}},"888":{"start":{"line":3491,"column":12},"end":{"line":3491,"column":38}},"889":{"start":{"line":3491,"column":21},"end":{"line":3491,"column":38}},"890":{"start":{"line":3492,"column":12},"end":{"line":3492,"column":33}},"891":{"start":{"line":3493,"column":12},"end":{"line":3493,"column":19}},"892":{"start":{"line":3496,"column":8},"end":{"line":3496,"column":30}},"893":{"start":{"line":3545,"column":0},"end":{"line":3545,"column":50}},"894":{"start":{"line":3566,"column":0},"end":{"line":3566,"column":49}},"895":{"start":{"line":3568,"column":0},"end":{"line":3570,"column":1}},"896":{"start":{"line":3569,"column":4},"end":{"line":3569,"column":22}},"897":{"start":{"line":3609,"column":0},"end":{"line":3636,"column":1}},"898":{"start":{"line":3610,"column":4},"end":{"line":3610,"column":35}},"899":{"start":{"line":3611,"column":4},"end":{"line":3611,"column":37}},"900":{"start":{"line":3612,"column":4},"end":{"line":3612,"column":32}},"901":{"start":{"line":3613,"column":4},"end":{"line":3632,"column":7}},"902":{"start":{"line":3614,"column":8},"end":{"line":3614,"column":43}},"903":{"start":{"line":3615,"column":8},"end":{"line":3631,"column":9}},"904":{"start":{"line":3616,"column":12},"end":{"line":3618,"column":15}},"905":{"start":{"line":3617,"column":16},"end":{"line":3617,"column":48}},"906":{"start":{"line":3619,"column":15},"end":{"line":3631,"column":9}},"907":{"start":{"line":3620,"column":12},"end":{"line":3620,"column":39}},"908":{"start":{"line":3622,"column":12},"end":{"line":3622,"column":37}},"909":{"start":{"line":3623,"column":12},"end":{"line":3630,"column":17}},"910":{"start":{"line":3624,"column":16},"end":{"line":3624,"column":33}},"911":{"start":{"line":3625,"column":16},"end":{"line":3625,"column":36}},"912":{"start":{"line":3626,"column":16},"end":{"line":3626,"column":35}},"913":{"start":{"line":3627,"column":16},"end":{"line":3629,"column":17}},"914":{"start":{"line":3628,"column":20},"end":{"line":3628,"column":43}},"915":{"start":{"line":3633,"column":4},"end":{"line":3633,"column":25}},"916":{"start":{"line":3634,"column":4},"end":{"line":3634,"column":29}},"917":{"start":{"line":3635,"column":4},"end":{"line":3635,"column":20}},"918":{"start":{"line":3669,"column":0},"end":{"line":3669,"column":13}},"919":{"start":{"line":3671,"column":0},"end":{"line":3677,"column":1}},"920":{"start":{"line":3672,"column":4},"end":{"line":3672,"column":32}},"921":{"start":{"line":3673,"column":7},"end":{"line":3677,"column":1}},"922":{"start":{"line":3674,"column":4},"end":{"line":3674,"column":28}},"923":{"start":{"line":3676,"column":4},"end":{"line":3676,"column":24}},"924":{"start":{"line":3679,"column":0},"end":{"line":3679,"column":30}},"925":{"start":{"line":3681,"column":0},"end":{"line":3696,"column":1}},"926":{"start":{"line":3682,"column":4},"end":{"line":3682,"column":32}},"927":{"start":{"line":3683,"column":4},"end":{"line":3683,"column":47}},"928":{"start":{"line":3685,"column":4},"end":{"line":3695,"column":7}},"929":{"start":{"line":3686,"column":8},"end":{"line":3692,"column":12}},"930":{"start":{"line":3687,"column":12},"end":{"line":3689,"column":13}},"931":{"start":{"line":3688,"column":16},"end":{"line":3688,"column":31}},"932":{"start":{"line":3690,"column":12},"end":{"line":3690,"column":32}},"933":{"start":{"line":3691,"column":12},"end":{"line":3691,"column":26}},"934":{"start":{"line":3694,"column":8},"end":{"line":3694,"column":31}},"935":{"start":{"line":3764,"column":0},"end":{"line":3766,"column":1}},"936":{"start":{"line":3765,"column":2},"end":{"line":3765,"column":37}},"937":{"start":{"line":3788,"column":0},"end":{"line":3790,"column":1}},"938":{"start":{"line":3789,"column":2},"end":{"line":3789,"column":50}},"939":{"start":{"line":3892,"column":0},"end":{"line":3896,"column":2}},"940":{"start":{"line":3893,"column":2},"end":{"line":3895,"column":21}},"941":{"start":{"line":3894,"column":4},"end":{"line":3894,"column":25}},"942":{"start":{"line":3922,"column":0},"end":{"line":3969,"column":2}},"943":{"start":{"line":3924,"column":4},"end":{"line":3924,"column":41}},"944":{"start":{"line":3927,"column":4},"end":{"line":3963,"column":6}},"945":{"start":{"line":3928,"column":8},"end":{"line":3928,"column":46}},"946":{"start":{"line":3928,"column":30},"end":{"line":3928,"column":46}},"947":{"start":{"line":3929,"column":8},"end":{"line":3931,"column":9}},"948":{"start":{"line":3930,"column":12},"end":{"line":3930,"column":64}},"949":{"start":{"line":3932,"column":8},"end":{"line":3932,"column":25}},"950":{"start":{"line":3933,"column":8},"end":{"line":3935,"column":9}},"951":{"start":{"line":3934,"column":12},"end":{"line":3934,"column":26}},"952":{"start":{"line":3936,"column":8},"end":{"line":3941,"column":9}},"953":{"start":{"line":3938,"column":12},"end":{"line":3940,"column":15}},"954":{"start":{"line":3939,"column":16},"end":{"line":3939,"column":26}},"955":{"start":{"line":3943,"column":8},"end":{"line":3943,"column":33}},"956":{"start":{"line":3944,"column":8},"end":{"line":3944,"column":37}},"957":{"start":{"line":3945,"column":8},"end":{"line":3947,"column":9}},"958":{"start":{"line":3946,"column":12},"end":{"line":3946,"column":37}},"959":{"start":{"line":3949,"column":8},"end":{"line":3961,"column":9}},"960":{"start":{"line":3950,"column":12},"end":{"line":3954,"column":14}},"961":{"start":{"line":3956,"column":12},"end":{"line":3960,"column":13}},"962":{"start":{"line":3957,"column":16},"end":{"line":3957,"column":54}},"963":{"start":{"line":3959,"column":16},"end":{"line":3959,"column":36}},"964":{"start":{"line":3962,"column":8},"end":{"line":3962,"column":34}},"965":{"start":{"line":3966,"column":4},"end":{"line":3966,"column":21}},"966":{"start":{"line":3968,"column":4},"end":{"line":3968,"column":13}},"967":{"start":{"line":4008,"column":0},"end":{"line":4015,"column":1}},"968":{"start":{"line":4009,"column":4},"end":{"line":4009,"column":38}},"969":{"start":{"line":4010,"column":4},"end":{"line":4010,"column":112}},"970":{"start":{"line":4010,"column":25},"end":{"line":4010,"column":112}},"971":{"start":{"line":4011,"column":4},"end":{"line":4011,"column":41}},"972":{"start":{"line":4011,"column":23},"end":{"line":4011,"column":41}},"973":{"start":{"line":4012,"column":4},"end":{"line":4014,"column":5}},"974":{"start":{"line":4013,"column":8},"end":{"line":4013,"column":27}},"975":{"start":{"line":4017,"column":0},"end":{"line":4017,"column":34}},"976":{"start":{"line":4041,"column":0},"end":{"line":4044,"column":1}},"977":{"start":{"line":4042,"column":2},"end":{"line":4042,"column":45}},"978":{"start":{"line":4043,"column":2},"end":{"line":4043,"column":45}},"979":{"start":{"line":4085,"column":0},"end":{"line":4107,"column":1}},"980":{"start":{"line":4086,"column":4},"end":{"line":4106,"column":7}},"981":{"start":{"line":4087,"column":8},"end":{"line":4103,"column":12}},"982":{"start":{"line":4088,"column":12},"end":{"line":4102,"column":13}},"983":{"start":{"line":4089,"column":16},"end":{"line":4091,"column":19}},"984":{"start":{"line":4093,"column":16},"end":{"line":4093,"column":33}},"985":{"start":{"line":4094,"column":16},"end":{"line":4098,"column":17}},"986":{"start":{"line":4095,"column":20},"end":{"line":4095,"column":38}},"987":{"start":{"line":4096,"column":23},"end":{"line":4098,"column":17}},"988":{"start":{"line":4097,"column":20},"end":{"line":4097,"column":35}},"989":{"start":{"line":4099,"column":16},"end":{"line":4101,"column":19}},"990":{"start":{"line":4105,"column":8},"end":{"line":4105,"column":36}},"991":{"start":{"line":4109,"column":0},"end":{"line":4115,"column":1}},"992":{"start":{"line":4110,"column":4},"end":{"line":4114,"column":17}},"993":{"start":{"line":4111,"column":8},"end":{"line":4113,"column":11}},"994":{"start":{"line":4112,"column":12},"end":{"line":4112,"column":24}},"995":{"start":{"line":4143,"column":0},"end":{"line":4143,"column":34}},"996":{"start":{"line":4211,"column":0},"end":{"line":4222,"column":1}},"997":{"start":{"line":4212,"column":4},"end":{"line":4212,"column":16}},"998":{"start":{"line":4213,"column":4},"end":{"line":4220,"column":5}},"999":{"start":{"line":4214,"column":8},"end":{"line":4214,"column":43}},"1000":{"start":{"line":4216,"column":8},"end":{"line":4216,"column":21}},"1001":{"start":{"line":4217,"column":8},"end":{"line":4219,"column":11}},"1002":{"start":{"line":4218,"column":12},"end":{"line":4218,"column":52}},"1003":{"start":{"line":4221,"column":4},"end":{"line":4221,"column":19}},"1004":{"start":{"line":4242,"column":0},"end":{"line":4242,"column":44}},"1005":{"start":{"line":4260,"column":0},"end":{"line":4260,"column":43}},"1006":{"start":{"line":4281,"column":0},"end":{"line":4285,"column":1}},"1007":{"start":{"line":4282,"column":2},"end":{"line":4284,"column":4}},"1008":{"start":{"line":4283,"column":4},"end":{"line":4283,"column":17}},"1009":{"start":{"line":4373,"column":0},"end":{"line":4420,"column":1}},"1010":{"start":{"line":4374,"column":4},"end":{"line":4374,"column":26}},"1011":{"start":{"line":4375,"column":4},"end":{"line":4375,"column":29}},"1012":{"start":{"line":4377,"column":4},"end":{"line":4380,"column":6}},"1013":{"start":{"line":4382,"column":4},"end":{"line":4394,"column":5}},"1014":{"start":{"line":4383,"column":8},"end":{"line":4393,"column":9}},"1015":{"start":{"line":4384,"column":12},"end":{"line":4384,"column":50}},"1016":{"start":{"line":4386,"column":12},"end":{"line":4386,"column":123}},"1017":{"start":{"line":4388,"column":12},"end":{"line":4388,"column":44}},"1018":{"start":{"line":4389,"column":15},"end":{"line":4393,"column":9}},"1019":{"start":{"line":4390,"column":12},"end":{"line":4390,"column":44}},"1020":{"start":{"line":4392,"column":12},"end":{"line":4392,"column":65}},"1021":{"start":{"line":4396,"column":4},"end":{"line":4402,"column":5}},"1022":{"start":{"line":4397,"column":8},"end":{"line":4397,"column":32}},"1023":{"start":{"line":4398,"column":8},"end":{"line":4398,"column":20}},"1024":{"start":{"line":4400,"column":8},"end":{"line":4400,"column":34}},"1025":{"start":{"line":4401,"column":8},"end":{"line":4401,"column":36}},"1026":{"start":{"line":4404,"column":4},"end":{"line":4406,"column":5}},"1027":{"start":{"line":4405,"column":8},"end":{"line":4405,"column":61}},"1028":{"start":{"line":4408,"column":4},"end":{"line":4408,"column":20}},"1029":{"start":{"line":4409,"column":4},"end":{"line":4417,"column":5}},"1030":{"start":{"line":4410,"column":8},"end":{"line":4416,"column":11}},"1031":{"start":{"line":4411,"column":12},"end":{"line":4415,"column":13}},"1032":{"start":{"line":4412,"column":16},"end":{"line":4412,"column":72}},"1033":{"start":{"line":4414,"column":16},"end":{"line":4414,"column":48}},"1034":{"start":{"line":4419,"column":4},"end":{"line":4419,"column":19}},"1035":{"start":{"line":4446,"column":0},"end":{"line":4458,"column":2}},"1036":{"start":{"line":4447,"column":4},"end":{"line":4450,"column":5}},"1037":{"start":{"line":4448,"column":8},"end":{"line":4448,"column":20}},"1038":{"start":{"line":4449,"column":8},"end":{"line":4449,"column":20}},"1039":{"start":{"line":4451,"column":4},"end":{"line":4457,"column":7}},"1040":{"start":{"line":4452,"column":8},"end":{"line":4454,"column":9}},"1041":{"start":{"line":4453,"column":12},"end":{"line":4453,"column":46}},"1042":{"start":{"line":4456,"column":8},"end":{"line":4456,"column":77}},"1043":{"start":{"line":4456,"column":18},"end":{"line":4456,"column":48}},"1044":{"start":{"line":4456,"column":53},"end":{"line":4456,"column":77}},"1045":{"start":{"line":4524,"column":0},"end":{"line":4526,"column":1}},"1046":{"start":{"line":4525,"column":2},"end":{"line":4525,"column":43}},"1047":{"start":{"line":4558,"column":0},"end":{"line":4558,"column":56}},"1048":{"start":{"line":4581,"column":0},"end":{"line":4581,"column":66}},"1049":{"start":{"line":4603,"column":0},"end":{"line":4603,"column":39}},"1050":{"start":{"line":4651,"column":0},"end":{"line":4667,"column":1}},"1051":{"start":{"line":4652,"column":4},"end":{"line":4660,"column":7}},"1052":{"start":{"line":4653,"column":8},"end":{"line":4656,"column":11}},"1053":{"start":{"line":4654,"column":12},"end":{"line":4654,"column":42}},"1054":{"start":{"line":4654,"column":21},"end":{"line":4654,"column":42}},"1055":{"start":{"line":4655,"column":12},"end":{"line":4655,"column":61}},"1056":{"start":{"line":4658,"column":8},"end":{"line":4658,"column":38}},"1057":{"start":{"line":4658,"column":17},"end":{"line":4658,"column":38}},"1058":{"start":{"line":4659,"column":8},"end":{"line":4659,"column":82}},"1059":{"start":{"line":4662,"column":4},"end":{"line":4666,"column":5}},"1060":{"start":{"line":4663,"column":8},"end":{"line":4664,"column":31}},"1061":{"start":{"line":4665,"column":8},"end":{"line":4665,"column":42}},"1062":{"start":{"line":4711,"column":0},"end":{"line":4739,"column":1}},"1063":{"start":{"line":4712,"column":4},"end":{"line":4712,"column":32}},"1064":{"start":{"line":4713,"column":4},"end":{"line":4713,"column":25}},"1065":{"start":{"line":4715,"column":4},"end":{"line":4720,"column":5}},"1066":{"start":{"line":4716,"column":8},"end":{"line":4719,"column":9}},"1067":{"start":{"line":4717,"column":12},"end":{"line":4717,"column":52}},"1068":{"start":{"line":4718,"column":12},"end":{"line":4718,"column":32}},"1069":{"start":{"line":4722,"column":4},"end":{"line":4731,"column":5}},"1070":{"start":{"line":4723,"column":8},"end":{"line":4723,"column":47}},"1071":{"start":{"line":4724,"column":8},"end":{"line":4724,"column":77}},"1072":{"start":{"line":4725,"column":8},"end":{"line":4725,"column":33}},"1073":{"start":{"line":4726,"column":8},"end":{"line":4728,"column":9}},"1074":{"start":{"line":4727,"column":12},"end":{"line":4727,"column":30}},"1075":{"start":{"line":4729,"column":8},"end":{"line":4729,"column":24}},"1076":{"start":{"line":4730,"column":8},"end":{"line":4730,"column":32}},"1077":{"start":{"line":4733,"column":4},"end":{"line":4738,"column":7}},"1078":{"start":{"line":4734,"column":8},"end":{"line":4734,"column":40}},"1079":{"start":{"line":4736,"column":8},"end":{"line":4736,"column":58}},"1080":{"start":{"line":4737,"column":8},"end":{"line":4737,"column":59}},"1081":{"start":{"line":4742,"column":0},"end":{"line":4742,"column":27}},"1082":{"start":{"line":4743,"column":0},"end":{"line":4743,"column":27}},"1083":{"start":{"line":4756,"column":0},"end":{"line":4766,"column":1}},"1084":{"start":{"line":4757,"column":2},"end":{"line":4759,"column":29}},"1085":{"start":{"line":4761,"column":2},"end":{"line":4764,"column":3}},"1086":{"start":{"line":4762,"column":4},"end":{"line":4762,"column":49}},"1087":{"start":{"line":4763,"column":4},"end":{"line":4763,"column":18}},"1088":{"start":{"line":4765,"column":2},"end":{"line":4765,"column":16}},"1089":{"start":{"line":4784,"column":0},"end":{"line":4786,"column":1}},"1090":{"start":{"line":4785,"column":2},"end":{"line":4785,"column":62}},"1091":{"start":{"line":4820,"column":0},"end":{"line":4820,"column":41}},"1092":{"start":{"line":4836,"column":0},"end":{"line":4836,"column":40}},"1093":{"start":{"line":4883,"column":0},"end":{"line":4896,"column":1}},"1094":{"start":{"line":4884,"column":4},"end":{"line":4888,"column":5}},"1095":{"start":{"line":4885,"column":8},"end":{"line":4885,"column":28}},"1096":{"start":{"line":4886,"column":8},"end":{"line":4886,"column":31}},"1097":{"start":{"line":4887,"column":8},"end":{"line":4887,"column":46}},"1098":{"start":{"line":4889,"column":4},"end":{"line":4889,"column":38}},"1099":{"start":{"line":4891,"column":4},"end":{"line":4895,"column":7}},"1100":{"start":{"line":4892,"column":8},"end":{"line":4892,"column":40}},"1101":{"start":{"line":4894,"column":8},"end":{"line":4894,"column":35}},"1102":{"start":{"line":4911,"column":0},"end":{"line":4915,"column":1}},"1103":{"start":{"line":4912,"column":4},"end":{"line":4914,"column":6}},"1104":{"start":{"line":4913,"column":8},"end":{"line":4913,"column":60}},"1105":{"start":{"line":4952,"column":0},"end":{"line":4961,"column":1}},"1106":{"start":{"line":4953,"column":4},"end":{"line":4953,"column":42}},"1107":{"start":{"line":4954,"column":4},"end":{"line":4954,"column":39}},"1108":{"start":{"line":4954,"column":17},"end":{"line":4954,"column":39}},"1109":{"start":{"line":4955,"column":4},"end":{"line":4959,"column":7}},"1110":{"start":{"line":4956,"column":8},"end":{"line":4956,"column":38}},"1111":{"start":{"line":4956,"column":17},"end":{"line":4956,"column":38}},"1112":{"start":{"line":4957,"column":8},"end":{"line":4957,"column":42}},"1113":{"start":{"line":4957,"column":20},"end":{"line":4957,"column":42}},"1114":{"start":{"line":4958,"column":8},"end":{"line":4958,"column":50}},"1115":{"start":{"line":4960,"column":4},"end":{"line":4960,"column":19}},"1116":{"start":{"line":4986,"column":0},"end":{"line":4990,"column":1}},"1117":{"start":{"line":4987,"column":4},"end":{"line":4989,"column":21}},"1118":{"start":{"line":4988,"column":8},"end":{"line":4988,"column":44}},"1119":{"start":{"line":5049,"column":0},"end":{"line":5074,"column":2}},"1120":{"start":{"line":5050,"column":4},"end":{"line":5050,"column":38}},"1121":{"start":{"line":5051,"column":4},"end":{"line":5051,"column":113}},"1122":{"start":{"line":5051,"column":25},"end":{"line":5051,"column":113}},"1123":{"start":{"line":5052,"column":4},"end":{"line":5052,"column":41}},"1124":{"start":{"line":5052,"column":23},"end":{"line":5052,"column":41}},"1125":{"start":{"line":5053,"column":4},"end":{"line":5053,"column":22}},"1126":{"start":{"line":5055,"column":4},"end":{"line":5071,"column":5}},"1127":{"start":{"line":5056,"column":8},"end":{"line":5058,"column":9}},"1128":{"start":{"line":5057,"column":12},"end":{"line":5057,"column":61}},"1129":{"start":{"line":5060,"column":8},"end":{"line":5065,"column":12}},"1130":{"start":{"line":5061,"column":12},"end":{"line":5063,"column":13}},"1131":{"start":{"line":5062,"column":16},"end":{"line":5062,"column":64}},"1132":{"start":{"line":5064,"column":12},"end":{"line":5064,"column":27}},"1133":{"start":{"line":5067,"column":8},"end":{"line":5067,"column":32}},"1134":{"start":{"line":5069,"column":8},"end":{"line":5069,"column":38}},"1135":{"start":{"line":5070,"column":8},"end":{"line":5070,"column":31}},"1136":{"start":{"line":5073,"column":4},"end":{"line":5073,"column":17}},"1137":{"start":{"line":5099,"column":0},"end":{"line":5189,"column":2}},"1138":{"start":{"line":5191,"column":0},"end":{"line":5191,"column":27}},"1139":{"start":{"line":5192,"column":0},"end":{"line":5192,"column":30}},"1140":{"start":{"line":5193,"column":0},"end":{"line":5193,"column":42}},"1141":{"start":{"line":5194,"column":0},"end":{"line":5194,"column":24}},"1142":{"start":{"line":5195,"column":0},"end":{"line":5195,"column":28}},"1143":{"start":{"line":5196,"column":0},"end":{"line":5196,"column":20}},"1144":{"start":{"line":5197,"column":0},"end":{"line":5197,"column":32}},"1145":{"start":{"line":5198,"column":0},"end":{"line":5198,"column":22}},"1146":{"start":{"line":5199,"column":0},"end":{"line":5199,"column":26}},"1147":{"start":{"line":5200,"column":0},"end":{"line":5200,"column":24}},"1148":{"start":{"line":5201,"column":0},"end":{"line":5201,"column":36}},"1149":{"start":{"line":5202,"column":0},"end":{"line":5202,"column":28}},"1150":{"start":{"line":5203,"column":0},"end":{"line":5203,"column":24}},"1151":{"start":{"line":5204,"column":0},"end":{"line":5204,"column":34}},"1152":{"start":{"line":5205,"column":0},"end":{"line":5205,"column":36}},"1153":{"start":{"line":5206,"column":0},"end":{"line":5206,"column":18}},"1154":{"start":{"line":5207,"column":0},"end":{"line":5207,"column":28}},"1155":{"start":{"line":5208,"column":0},"end":{"line":5208,"column":26}},"1156":{"start":{"line":5209,"column":0},"end":{"line":5209,"column":28}},"1157":{"start":{"line":5210,"column":0},"end":{"line":5210,"column":24}},"1158":{"start":{"line":5211,"column":0},"end":{"line":5211,"column":25}},"1159":{"start":{"line":5212,"column":0},"end":{"line":5212,"column":32}},"1160":{"start":{"line":5213,"column":0},"end":{"line":5213,"column":24}},"1161":{"start":{"line":5214,"column":0},"end":{"line":5214,"column":34}},"1162":{"start":{"line":5215,"column":0},"end":{"line":5215,"column":36}},"1163":{"start":{"line":5216,"column":0},"end":{"line":5216,"column":32}},"1164":{"start":{"line":5217,"column":0},"end":{"line":5217,"column":34}},"1165":{"start":{"line":5218,"column":0},"end":{"line":5218,"column":22}},"1166":{"start":{"line":5219,"column":0},"end":{"line":5219,"column":32}},"1167":{"start":{"line":5220,"column":0},"end":{"line":5220,"column":34}},"1168":{"start":{"line":5221,"column":0},"end":{"line":5221,"column":24}},"1169":{"start":{"line":5222,"column":0},"end":{"line":5222,"column":34}},"1170":{"start":{"line":5223,"column":0},"end":{"line":5223,"column":36}},"1171":{"start":{"line":5224,"column":0},"end":{"line":5224,"column":26}},"1172":{"start":{"line":5225,"column":0},"end":{"line":5225,"column":18}},"1173":{"start":{"line":5226,"column":0},"end":{"line":5226,"column":18}},"1174":{"start":{"line":5227,"column":0},"end":{"line":5227,"column":28}},"1175":{"start":{"line":5228,"column":0},"end":{"line":5228,"column":30}},"1176":{"start":{"line":5229,"column":0},"end":{"line":5229,"column":30}},"1177":{"start":{"line":5230,"column":0},"end":{"line":5230,"column":40}},"1178":{"start":{"line":5231,"column":0},"end":{"line":5231,"column":42}},"1179":{"start":{"line":5232,"column":0},"end":{"line":5232,"column":26}},"1180":{"start":{"line":5233,"column":0},"end":{"line":5233,"column":28}},"1181":{"start":{"line":5234,"column":0},"end":{"line":5234,"column":33}},"1182":{"start":{"line":5235,"column":0},"end":{"line":5235,"column":40}},"1183":{"start":{"line":5236,"column":0},"end":{"line":5236,"column":38}},"1184":{"start":{"line":5237,"column":0},"end":{"line":5237,"column":24}},"1185":{"start":{"line":5238,"column":0},"end":{"line":5238,"column":20}},"1186":{"start":{"line":5239,"column":0},"end":{"line":5239,"column":24}},"1187":{"start":{"line":5240,"column":0},"end":{"line":5240,"column":34}},"1188":{"start":{"line":5241,"column":0},"end":{"line":5241,"column":26}},"1189":{"start":{"line":5242,"column":0},"end":{"line":5242,"column":32}},"1190":{"start":{"line":5243,"column":0},"end":{"line":5243,"column":24}},"1191":{"start":{"line":5244,"column":0},"end":{"line":5244,"column":34}},"1192":{"start":{"line":5245,"column":0},"end":{"line":5245,"column":36}},"1193":{"start":{"line":5246,"column":0},"end":{"line":5246,"column":22}},"1194":{"start":{"line":5247,"column":0},"end":{"line":5247,"column":30}},"1195":{"start":{"line":5248,"column":0},"end":{"line":5248,"column":20}},"1196":{"start":{"line":5249,"column":0},"end":{"line":5249,"column":24}},"1197":{"start":{"line":5250,"column":0},"end":{"line":5250,"column":38}},"1198":{"start":{"line":5251,"column":0},"end":{"line":5251,"column":20}},"1199":{"start":{"line":5252,"column":0},"end":{"line":5252,"column":30}},"1200":{"start":{"line":5253,"column":0},"end":{"line":5253,"column":32}},"1201":{"start":{"line":5254,"column":0},"end":{"line":5254,"column":24}},"1202":{"start":{"line":5255,"column":0},"end":{"line":5255,"column":26}},"1203":{"start":{"line":5256,"column":0},"end":{"line":5256,"column":22}},"1204":{"start":{"line":5257,"column":0},"end":{"line":5257,"column":31}},"1205":{"start":{"line":5258,"column":0},"end":{"line":5258,"column":34}},"1206":{"start":{"line":5259,"column":0},"end":{"line":5259,"column":30}},"1207":{"start":{"line":5260,"column":0},"end":{"line":5260,"column":30}},"1208":{"start":{"line":5261,"column":0},"end":{"line":5261,"column":22}},"1209":{"start":{"line":5262,"column":0},"end":{"line":5262,"column":30}},"1210":{"start":{"line":5263,"column":0},"end":{"line":5263,"column":24}},"1211":{"start":{"line":5264,"column":0},"end":{"line":5264,"column":20}},"1212":{"start":{"line":5265,"column":0},"end":{"line":5265,"column":30}},"1213":{"start":{"line":5266,"column":0},"end":{"line":5266,"column":32}},"1214":{"start":{"line":5267,"column":0},"end":{"line":5267,"column":19}},"1215":{"start":{"line":5268,"column":0},"end":{"line":5268,"column":29}},"1216":{"start":{"line":5269,"column":0},"end":{"line":5269,"column":31}},"1217":{"start":{"line":5270,"column":0},"end":{"line":5270,"column":22}},"1218":{"start":{"line":5271,"column":0},"end":{"line":5271,"column":32}},"1219":{"start":{"line":5272,"column":0},"end":{"line":5272,"column":34}},"1220":{"start":{"line":5273,"column":0},"end":{"line":5273,"column":28}},"1221":{"start":{"line":5274,"column":0},"end":{"line":5274,"column":35}},"1222":{"start":{"line":5275,"column":0},"end":{"line":5275,"column":35}},"1223":{"start":{"line":5276,"column":0},"end":{"line":5276,"column":27}},"1224":{"start":{"line":5277,"column":0},"end":{"line":5277,"column":39}},"1225":{"start":{"line":5278,"column":0},"end":{"line":5278,"column":37}},"1226":{"start":{"line":5279,"column":0},"end":{"line":5279,"column":24}},"1227":{"start":{"line":5280,"column":0},"end":{"line":5280,"column":23}},"1228":{"start":{"line":5281,"column":0},"end":{"line":5281,"column":28}},"1229":{"start":{"line":5282,"column":0},"end":{"line":5282,"column":24}},"1230":{"start":{"line":5283,"column":0},"end":{"line":5283,"column":34}},"1231":{"start":{"line":5284,"column":0},"end":{"line":5284,"column":36}},"1232":{"start":{"line":5285,"column":0},"end":{"line":5285,"column":28}},"1233":{"start":{"line":5287,"column":0},"end":{"line":5287,"column":62}}},"branchMap":{"1":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":67},"end":{"line":2,"column":83}},{"start":{"line":3,"column":4},"end":{"line":4,"column":50}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":31}},{"start":{"line":2,"column":35},"end":{"line":2,"column":64}}]},"3":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":49},"end":{"line":3,"column":77}},{"start":{"line":4,"column":5},"end":{"line":4,"column":49}}]},"4":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":32}},{"start":{"line":3,"column":36},"end":{"line":3,"column":46}}]},"5":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":29},"end":{"line":4,"column":41}},{"start":{"line":4,"column":45},"end":{"line":4,"column":47}}]},"6":{"line":18,"type":"switch","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":38}},{"start":{"line":20,"column":4},"end":{"line":20,"column":47}},{"start":{"line":21,"column":4},"end":{"line":21,"column":56}},{"start":{"line":22,"column":4},"end":{"line":22,"column":65}}]},"7":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":43},"end":{"line":40,"column":58}},{"start":{"line":40,"column":62},"end":{"line":40,"column":67}}]},"8":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":8}},{"start":{"line":101,"column":8},"end":{"line":101,"column":8}}]},"9":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":17},"end":{"line":110,"column":42}},{"start":{"line":110,"column":46},"end":{"line":110,"column":52}},{"start":{"line":110,"column":56},"end":{"line":110,"column":80}},{"start":{"line":110,"column":84},"end":{"line":110,"column":90}}]},"10":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":15},"end":{"line":113,"column":38}},{"start":{"line":113,"column":42},"end":{"line":113,"column":46}},{"start":{"line":113,"column":50},"end":{"line":113,"column":72}},{"start":{"line":113,"column":76},"end":{"line":113,"column":80}}]},"11":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":11},"end":{"line":116,"column":21}},{"start":{"line":116,"column":25},"end":{"line":116,"column":33}},{"start":{"line":116,"column":37},"end":{"line":116,"column":62}}]},"12":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":34},"end":{"line":135,"column":54}},{"start":{"line":135,"column":57},"end":{"line":135,"column":66}}]},"13":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":2},"end":{"line":154,"column":2}},{"start":{"line":154,"column":2},"end":{"line":154,"column":2}}]},"14":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":4}},{"start":{"line":155,"column":4},"end":{"line":155,"column":4}}]},"15":{"line":190,"type":"cond-expr","locations":[{"start":{"line":190,"column":32},"end":{"line":190,"column":52}},{"start":{"line":190,"column":55},"end":{"line":190,"column":64}}]},"16":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":200,"column":2}},{"start":{"line":200,"column":2},"end":{"line":200,"column":2}}]},"17":{"line":201,"type":"cond-expr","locations":[{"start":{"line":201,"column":33},"end":{"line":201,"column":45}},{"start":{"line":201,"column":48},"end":{"line":201,"column":55}}]},"18":{"line":203,"type":"cond-expr","locations":[{"start":{"line":204,"column":6},"end":{"line":204,"column":22}},{"start":{"line":205,"column":6},"end":{"line":205,"column":27}}]},"19":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":10},"end":{"line":203,"column":24}},{"start":{"line":203,"column":28},"end":{"line":203,"column":59}}]},"20":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":9},"end":{"line":235,"column":22}},{"start":{"line":235,"column":27},"end":{"line":235,"column":43}},{"start":{"line":235,"column":47},"end":{"line":235,"column":65}}]},"21":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":2},"end":{"line":262,"column":2}},{"start":{"line":262,"column":2},"end":{"line":262,"column":2}}]},"22":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":9},"end":{"line":268,"column":23}},{"start":{"line":268,"column":27},"end":{"line":268,"column":40}},{"start":{"line":268,"column":44},"end":{"line":268,"column":59}},{"start":{"line":268,"column":63},"end":{"line":268,"column":78}}]},"23":{"line":301,"type":"binary-expr","locations":[{"start":{"line":301,"column":9},"end":{"line":301,"column":33}},{"start":{"line":302,"column":4},"end":{"line":302,"column":14}},{"start":{"line":302,"column":18},"end":{"line":302,"column":32}},{"start":{"line":302,"column":36},"end":{"line":302,"column":61}}]},"24":{"line":331,"type":"binary-expr","locations":[{"start":{"line":331,"column":9},"end":{"line":331,"column":22}},{"start":{"line":331,"column":26},"end":{"line":331,"column":48}},{"start":{"line":331,"column":52},"end":{"line":331,"column":70}}]},"25":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":8},"end":{"line":356,"column":8}},{"start":{"line":356,"column":8},"end":{"line":356,"column":8}}]},"26":{"line":363,"type":"binary-expr","locations":[{"start":{"line":363,"column":21},"end":{"line":363,"column":49}},{"start":{"line":363,"column":53},"end":{"line":363,"column":68}}]},"27":{"line":366,"type":"binary-expr","locations":[{"start":{"line":366,"column":11},"end":{"line":366,"column":25}},{"start":{"line":366,"column":29},"end":{"line":366,"column":49}},{"start":{"line":366,"column":53},"end":{"line":366,"column":75}}]},"28":{"line":413,"type":"binary-expr","locations":[{"start":{"line":413,"column":9},"end":{"line":413,"column":22}},{"start":{"line":413,"column":26},"end":{"line":413,"column":50}}]},"29":{"line":427,"type":"binary-expr","locations":[{"start":{"line":427,"column":9},"end":{"line":427,"column":28}},{"start":{"line":427,"column":32},"end":{"line":427,"column":60}}]},"30":{"line":457,"type":"cond-expr","locations":[{"start":{"line":457,"column":72},"end":{"line":457,"column":87}},{"start":{"line":457,"column":90},"end":{"line":460,"column":1}}]},"31":{"line":458,"type":"binary-expr","locations":[{"start":{"line":458,"column":9},"end":{"line":458,"column":28}},{"start":{"line":458,"column":32},"end":{"line":458,"column":70}},{"start":{"line":459,"column":4},"end":{"line":459,"column":47}}]},"32":{"line":505,"type":"binary-expr","locations":[{"start":{"line":505,"column":18},"end":{"line":505,"column":44}},{"start":{"line":505,"column":48},"end":{"line":505,"column":55}},{"start":{"line":505,"column":59},"end":{"line":505,"column":76}},{"start":{"line":505,"column":80},"end":{"line":505,"column":87}}]},"33":{"line":508,"type":"binary-expr","locations":[{"start":{"line":508,"column":17},"end":{"line":508,"column":28}},{"start":{"line":508,"column":32},"end":{"line":508,"column":57}},{"start":{"line":508,"column":61},"end":{"line":508,"column":67}},{"start":{"line":508,"column":71},"end":{"line":508,"column":87}},{"start":{"line":508,"column":91},"end":{"line":508,"column":97}}]},"34":{"line":511,"type":"binary-expr","locations":[{"start":{"line":511,"column":20},"end":{"line":511,"column":30}},{"start":{"line":511,"column":34},"end":{"line":511,"column":68}}]},"35":{"line":514,"type":"cond-expr","locations":[{"start":{"line":514,"column":29},"end":{"line":514,"column":40}},{"start":{"line":514,"column":43},"end":{"line":514,"column":52}}]},"36":{"line":517,"type":"cond-expr","locations":[{"start":{"line":517,"column":30},"end":{"line":517,"column":45}},{"start":{"line":517,"column":48},"end":{"line":517,"column":57}}]},"37":{"line":536,"type":"binary-expr","locations":[{"start":{"line":536,"column":15},"end":{"line":536,"column":29}},{"start":{"line":536,"column":33},"end":{"line":536,"column":42}}]},"38":{"line":553,"type":"cond-expr","locations":[{"start":{"line":553,"column":28},"end":{"line":553,"column":46}},{"start":{"line":553,"column":49},"end":{"line":553,"column":55}}]},"39":{"line":554,"type":"binary-expr","locations":[{"start":{"line":554,"column":9},"end":{"line":554,"column":17}},{"start":{"line":555,"column":5},"end":{"line":555,"column":29}},{"start":{"line":555,"column":33},"end":{"line":555,"column":53}},{"start":{"line":556,"column":5},"end":{"line":556,"column":15}},{"start":{"line":556,"column":19},"end":{"line":556,"column":33}},{"start":{"line":556,"column":37},"end":{"line":556,"column":51}}]},"40":{"line":610,"type":"binary-expr","locations":[{"start":{"line":610,"column":9},"end":{"line":610,"column":28}},{"start":{"line":611,"column":4},"end":{"line":611,"column":26}},{"start":{"line":611,"column":30},"end":{"line":611,"column":65}}]},"41":{"line":628,"type":"binary-expr","locations":[{"start":{"line":628,"column":20},"end":{"line":628,"column":46}},{"start":{"line":628,"column":50},"end":{"line":628,"column":57}},{"start":{"line":628,"column":61},"end":{"line":628,"column":78}},{"start":{"line":628,"column":82},"end":{"line":628,"column":89}}]},"42":{"line":631,"type":"binary-expr","locations":[{"start":{"line":631,"column":19},"end":{"line":631,"column":32}},{"start":{"line":631,"column":36},"end":{"line":631,"column":61}},{"start":{"line":631,"column":65},"end":{"line":631,"column":71}},{"start":{"line":631,"column":75},"end":{"line":631,"column":91}},{"start":{"line":631,"column":95},"end":{"line":631,"column":101}}]},"43":{"line":634,"type":"binary-expr","locations":[{"start":{"line":634,"column":22},"end":{"line":634,"column":34}},{"start":{"line":634,"column":38},"end":{"line":634,"column":76}}]},"44":{"line":637,"type":"binary-expr","locations":[{"start":{"line":637,"column":18},"end":{"line":637,"column":33}},{"start":{"line":637,"column":37},"end":{"line":637,"column":55}}]},"45":{"line":642,"type":"binary-expr","locations":[{"start":{"line":642,"column":11},"end":{"line":642,"column":22}},{"start":{"line":642,"column":26},"end":{"line":642,"column":45}},{"start":{"line":642,"column":49},"end":{"line":642,"column":76}}]},"46":{"line":647,"type":"binary-expr","locations":[{"start":{"line":647,"column":23},"end":{"line":647,"column":31}},{"start":{"line":647,"column":35},"end":{"line":647,"column":56}}]},"47":{"line":666,"type":"cond-expr","locations":[{"start":{"line":666,"column":38},"end":{"line":666,"column":65}},{"start":{"line":666,"column":68},"end":{"line":666,"column":84}}]},"48":{"line":684,"type":"binary-expr","locations":[{"start":{"line":684,"column":14},"end":{"line":684,"column":20}},{"start":{"line":684,"column":24},"end":{"line":684,"column":42}}]},"49":{"line":685,"type":"binary-expr","locations":[{"start":{"line":685,"column":15},"end":{"line":685,"column":21}},{"start":{"line":685,"column":25},"end":{"line":685,"column":31}},{"start":{"line":685,"column":35},"end":{"line":685,"column":50}}]},"50":{"line":686,"type":"binary-expr","locations":[{"start":{"line":686,"column":15},"end":{"line":686,"column":21}},{"start":{"line":686,"column":25},"end":{"line":686,"column":31}},{"start":{"line":686,"column":35},"end":{"line":686,"column":42}},{"start":{"line":686,"column":46},"end":{"line":686,"column":65}}]},"51":{"line":687,"type":"binary-expr","locations":[{"start":{"line":687,"column":20},"end":{"line":687,"column":25}},{"start":{"line":687,"column":29},"end":{"line":687,"column":34}},{"start":{"line":687,"column":38},"end":{"line":687,"column":44}},{"start":{"line":687,"column":48},"end":{"line":687,"column":54}}]},"52":{"line":688,"type":"cond-expr","locations":[{"start":{"line":688,"column":29},"end":{"line":688,"column":60}},{"start":{"line":688,"column":63},"end":{"line":688,"column":65}}]},"53":{"line":692,"type":"if","locations":[{"start":{"line":692,"column":4},"end":{"line":692,"column":4}},{"start":{"line":692,"column":4},"end":{"line":692,"column":4}}]},"54":{"line":692,"type":"binary-expr","locations":[{"start":{"line":692,"column":9},"end":{"line":692,"column":18}},{"start":{"line":692,"column":22},"end":{"line":692,"column":55}},{"start":{"line":693,"column":8},"end":{"line":702,"column":10}}]},"55":{"line":693,"type":"binary-expr","locations":[{"start":{"line":693,"column":10},"end":{"line":693,"column":21}},{"start":{"line":695,"column":11},"end":{"line":695,"column":26}},{"start":{"line":697,"column":12},"end":{"line":697,"column":18}},{"start":{"line":697,"column":23},"end":{"line":697,"column":38}},{"start":{"line":697,"column":42},"end":{"line":697,"column":57}},{"start":{"line":699,"column":12},"end":{"line":699,"column":18}},{"start":{"line":699,"column":23},"end":{"line":699,"column":38}},{"start":{"line":699,"column":42},"end":{"line":699,"column":61}},{"start":{"line":699,"column":65},"end":{"line":699,"column":84}},{"start":{"line":701,"column":11},"end":{"line":701,"column":31}}]},"56":{"line":720,"type":"binary-expr","locations":[{"start":{"line":720,"column":13},"end":{"line":720,"column":18}},{"start":{"line":720,"column":22},"end":{"line":720,"column":39}}]},"57":{"line":721,"type":"binary-expr","locations":[{"start":{"line":721,"column":15},"end":{"line":721,"column":40}},{"start":{"line":721,"column":44},"end":{"line":721,"column":58}},{"start":{"line":721,"column":63},"end":{"line":721,"column":76}}]},"58":{"line":757,"type":"if","locations":[{"start":{"line":757,"column":2},"end":{"line":757,"column":2}},{"start":{"line":757,"column":2},"end":{"line":757,"column":2}}]},"59":{"line":762,"type":"if","locations":[{"start":{"line":762,"column":4},"end":{"line":762,"column":4}},{"start":{"line":762,"column":4},"end":{"line":762,"column":4}}]},"60":{"line":762,"type":"binary-expr","locations":[{"start":{"line":762,"column":8},"end":{"line":762,"column":42}},{"start":{"line":762,"column":46},"end":{"line":762,"column":66}}]},"61":{"line":798,"type":"cond-expr","locations":[{"start":{"line":798,"column":31},"end":{"line":798,"column":52}},{"start":{"line":798,"column":55},"end":{"line":798,"column":71}}]},"62":{"line":805,"type":"cond-expr","locations":[{"start":{"line":805,"column":27},"end":{"line":805,"column":53}},{"start":{"line":805,"column":56},"end":{"line":805,"column":60}}]},"63":{"line":813,"type":"if","locations":[{"start":{"line":813,"column":8},"end":{"line":813,"column":8}},{"start":{"line":813,"column":8},"end":{"line":813,"column":8}}]},"64":{"line":825,"type":"cond-expr","locations":[{"start":{"line":825,"column":25},"end":{"line":825,"column":54}},{"start":{"line":825,"column":57},"end":{"line":825,"column":61}}]},"65":{"line":830,"type":"if","locations":[{"start":{"line":830,"column":4},"end":{"line":830,"column":4}},{"start":{"line":830,"column":4},"end":{"line":830,"column":4}}]},"66":{"line":835,"type":"cond-expr","locations":[{"start":{"line":835,"column":22},"end":{"line":835,"column":52}},{"start":{"line":835,"column":55},"end":{"line":835,"column":81}}]},"67":{"line":840,"type":"if","locations":[{"start":{"line":840,"column":8},"end":{"line":840,"column":8}},{"start":{"line":840,"column":8},"end":{"line":840,"column":8}}]},"68":{"line":849,"type":"binary-expr","locations":[{"start":{"line":849,"column":24},"end":{"line":849,"column":32}},{"start":{"line":849,"column":36},"end":{"line":849,"column":40}}]},"69":{"line":850,"type":"if","locations":[{"start":{"line":850,"column":8},"end":{"line":850,"column":8}},{"start":{"line":850,"column":8},"end":{"line":850,"column":8}}]},"70":{"line":850,"type":"binary-expr","locations":[{"start":{"line":850,"column":12},"end":{"line":850,"column":22}},{"start":{"line":850,"column":26},"end":{"line":850,"column":30}}]},"71":{"line":859,"type":"if","locations":[{"start":{"line":859,"column":12},"end":{"line":859,"column":12}},{"start":{"line":859,"column":12},"end":{"line":859,"column":12}}]},"72":{"line":862,"type":"if","locations":[{"start":{"line":862,"column":19},"end":{"line":862,"column":19}},{"start":{"line":862,"column":19},"end":{"line":862,"column":19}}]},"73":{"line":862,"type":"binary-expr","locations":[{"start":{"line":862,"column":23},"end":{"line":862,"column":42}},{"start":{"line":862,"column":46},"end":{"line":862,"column":50}},{"start":{"line":862,"column":54},"end":{"line":862,"column":66}}]},"74":{"line":871,"type":"binary-expr","locations":[{"start":{"line":871,"column":19},"end":{"line":871,"column":34}},{"start":{"line":871,"column":38},"end":{"line":871,"column":43}}]},"75":{"line":873,"type":"if","locations":[{"start":{"line":873,"column":16},"end":{"line":873,"column":16}},{"start":{"line":873,"column":16},"end":{"line":873,"column":16}}]},"76":{"line":875,"type":"if","locations":[{"start":{"line":875,"column":20},"end":{"line":875,"column":20}},{"start":{"line":875,"column":20},"end":{"line":875,"column":20}}]},"77":{"line":923,"type":"binary-expr","locations":[{"start":{"line":923,"column":20},"end":{"line":923,"column":28}},{"start":{"line":923,"column":32},"end":{"line":923,"column":36}}]},"78":{"line":927,"type":"if","locations":[{"start":{"line":927,"column":4},"end":{"line":927,"column":4}},{"start":{"line":927,"column":4},"end":{"line":927,"column":4}}]},"79":{"line":932,"type":"if","locations":[{"start":{"line":932,"column":8},"end":{"line":932,"column":8}},{"start":{"line":932,"column":8},"end":{"line":932,"column":8}}]},"80":{"line":934,"type":"if","locations":[{"start":{"line":934,"column":15},"end":{"line":934,"column":15}},{"start":{"line":934,"column":15},"end":{"line":934,"column":15}}]},"81":{"line":934,"type":"binary-expr","locations":[{"start":{"line":934,"column":19},"end":{"line":934,"column":41}},{"start":{"line":934,"column":45},"end":{"line":934,"column":64}}]},"82":{"line":989,"type":"cond-expr","locations":[{"start":{"line":989,"column":51},"end":{"line":989,"column":66}},{"start":{"line":989,"column":69},"end":{"line":989,"column":82}}]},"83":{"line":1000,"type":"binary-expr","locations":[{"start":{"line":1000,"column":15},"end":{"line":1000,"column":23}},{"start":{"line":1000,"column":27},"end":{"line":1000,"column":31}}]},"84":{"line":1001,"type":"binary-expr","locations":[{"start":{"line":1001,"column":10},"end":{"line":1001,"column":13}},{"start":{"line":1001,"column":17},"end":{"line":1001,"column":19}}]},"85":{"line":1271,"type":"if","locations":[{"start":{"line":1271,"column":8},"end":{"line":1271,"column":8}},{"start":{"line":1271,"column":8},"end":{"line":1271,"column":8}}]},"86":{"line":1271,"type":"binary-expr","locations":[{"start":{"line":1271,"column":12},"end":{"line":1271,"column":28}},{"start":{"line":1271,"column":32},"end":{"line":1271,"column":65}}]},"87":{"line":1275,"type":"cond-expr","locations":[{"start":{"line":1275,"column":39},"end":{"line":1275,"column":42}},{"start":{"line":1275,"column":45},"end":{"line":1275,"column":59}}]},"88":{"line":1294,"type":"cond-expr","locations":[{"start":{"line":1294,"column":31},"end":{"line":1294,"column":32}},{"start":{"line":1294,"column":35},"end":{"line":1294,"column":47}}]},"89":{"line":1297,"type":"if","locations":[{"start":{"line":1297,"column":4},"end":{"line":1297,"column":4}},{"start":{"line":1297,"column":4},"end":{"line":1297,"column":4}}]},"90":{"line":1319,"type":"cond-expr","locations":[{"start":{"line":1319,"column":34},"end":{"line":1319,"column":40}},{"start":{"line":1319,"column":43},"end":{"line":1319,"column":50}}]},"91":{"line":1320,"type":"if","locations":[{"start":{"line":1320,"column":6},"end":{"line":1320,"column":6}},{"start":{"line":1320,"column":6},"end":{"line":1320,"column":6}}]},"92":{"line":1350,"type":"binary-expr","locations":[{"start":{"line":1350,"column":9},"end":{"line":1350,"column":15}},{"start":{"line":1350,"column":19},"end":{"line":1350,"column":50}}]},"93":{"line":1366,"type":"cond-expr","locations":[{"start":{"line":1366,"column":39},"end":{"line":1366,"column":40}},{"start":{"line":1366,"column":43},"end":{"line":1366,"column":45}}]},"94":{"line":1368,"type":"cond-expr","locations":[{"start":{"line":1368,"column":22},"end":{"line":1368,"column":29}},{"start":{"line":1368,"column":32},"end":{"line":1368,"column":48}}]},"95":{"line":1369,"type":"if","locations":[{"start":{"line":1369,"column":4},"end":{"line":1369,"column":4}},{"start":{"line":1369,"column":4},"end":{"line":1369,"column":4}}]},"96":{"line":1402,"type":"if","locations":[{"start":{"line":1402,"column":4},"end":{"line":1402,"column":4}},{"start":{"line":1402,"column":4},"end":{"line":1402,"column":4}}]},"97":{"line":1419,"type":"cond-expr","locations":[{"start":{"line":1420,"column":6},"end":{"line":1420,"column":44}},{"start":{"line":1421,"column":6},"end":{"line":1421,"column":48}}]},"98":{"line":1504,"type":"if","locations":[{"start":{"line":1504,"column":4},"end":{"line":1504,"column":4}},{"start":{"line":1504,"column":4},"end":{"line":1504,"column":4}}]},"99":{"line":1509,"type":"binary-expr","locations":[{"start":{"line":1509,"column":20},"end":{"line":1509,"column":28}},{"start":{"line":1509,"column":32},"end":{"line":1509,"column":36}}]},"100":{"line":1512,"type":"if","locations":[{"start":{"line":1512,"column":4},"end":{"line":1512,"column":4}},{"start":{"line":1512,"column":4},"end":{"line":1512,"column":4}}]},"101":{"line":1515,"type":"if","locations":[{"start":{"line":1515,"column":4},"end":{"line":1515,"column":4}},{"start":{"line":1515,"column":4},"end":{"line":1515,"column":4}}]},"102":{"line":1533,"type":"if","locations":[{"start":{"line":1533,"column":8},"end":{"line":1533,"column":8}},{"start":{"line":1533,"column":8},"end":{"line":1533,"column":8}}]},"103":{"line":1542,"type":"if","locations":[{"start":{"line":1542,"column":8},"end":{"line":1542,"column":8}},{"start":{"line":1542,"column":8},"end":{"line":1542,"column":8}}]},"104":{"line":1550,"type":"if","locations":[{"start":{"line":1550,"column":12},"end":{"line":1550,"column":12}},{"start":{"line":1550,"column":12},"end":{"line":1550,"column":12}}]},"105":{"line":1555,"type":"if","locations":[{"start":{"line":1555,"column":16},"end":{"line":1555,"column":16}},{"start":{"line":1555,"column":16},"end":{"line":1555,"column":16}}]},"106":{"line":1572,"type":"if","locations":[{"start":{"line":1572,"column":8},"end":{"line":1572,"column":8}},{"start":{"line":1572,"column":8},"end":{"line":1572,"column":8}}]},"107":{"line":1572,"type":"binary-expr","locations":[{"start":{"line":1572,"column":12},"end":{"line":1572,"column":35}},{"start":{"line":1572,"column":39},"end":{"line":1572,"column":57}}]},"108":{"line":1575,"type":"binary-expr","locations":[{"start":{"line":1575,"column":15},"end":{"line":1575,"column":32}},{"start":{"line":1575,"column":36},"end":{"line":1575,"column":62}}]},"109":{"line":1583,"type":"if","locations":[{"start":{"line":1583,"column":8},"end":{"line":1583,"column":8}},{"start":{"line":1583,"column":8},"end":{"line":1583,"column":8}}]},"110":{"line":1591,"type":"binary-expr","locations":[{"start":{"line":1591,"column":28},"end":{"line":1591,"column":47}},{"start":{"line":1591,"column":51},"end":{"line":1591,"column":53}}]},"111":{"line":1599,"type":"if","locations":[{"start":{"line":1599,"column":8},"end":{"line":1599,"column":8}},{"start":{"line":1599,"column":8},"end":{"line":1599,"column":8}}]},"112":{"line":1603,"type":"if","locations":[{"start":{"line":1603,"column":12},"end":{"line":1603,"column":12}},{"start":{"line":1603,"column":12},"end":{"line":1603,"column":12}}]},"113":{"line":1606,"type":"if","locations":[{"start":{"line":1606,"column":12},"end":{"line":1606,"column":12}},{"start":{"line":1606,"column":12},"end":{"line":1606,"column":12}}]},"114":{"line":1624,"type":"if","locations":[{"start":{"line":1624,"column":8},"end":{"line":1624,"column":8}},{"start":{"line":1624,"column":8},"end":{"line":1624,"column":8}}]},"115":{"line":1641,"type":"if","locations":[{"start":{"line":1641,"column":16},"end":{"line":1641,"column":16}},{"start":{"line":1641,"column":16},"end":{"line":1641,"column":16}}]},"116":{"line":1647,"type":"if","locations":[{"start":{"line":1647,"column":8},"end":{"line":1647,"column":8}},{"start":{"line":1647,"column":8},"end":{"line":1647,"column":8}}]},"117":{"line":1655,"type":"if","locations":[{"start":{"line":1655,"column":12},"end":{"line":1655,"column":12}},{"start":{"line":1655,"column":12},"end":{"line":1655,"column":12}}]},"118":{"line":1655,"type":"binary-expr","locations":[{"start":{"line":1655,"column":16},"end":{"line":1655,"column":29}},{"start":{"line":1655,"column":33},"end":{"line":1655,"column":68}}]},"119":{"line":1674,"type":"cond-expr","locations":[{"start":{"line":1674,"column":31},"end":{"line":1674,"column":32}},{"start":{"line":1674,"column":35},"end":{"line":1674,"column":47}}]},"120":{"line":1704,"type":"binary-expr","locations":[{"start":{"line":1704,"column":9},"end":{"line":1704,"column":33}},{"start":{"line":1705,"column":5},"end":{"line":1705,"column":24}},{"start":{"line":1705,"column":28},"end":{"line":1705,"column":58}}]},"121":{"line":1712,"type":"cond-expr","locations":[{"start":{"line":1712,"column":29},"end":{"line":1712,"column":47}},{"start":{"line":1712,"column":50},"end":{"line":1712,"column":59}}]},"122":{"line":1713,"type":"cond-expr","locations":[{"start":{"line":1713,"column":35},"end":{"line":1713,"column":55}},{"start":{"line":1713,"column":58},"end":{"line":1713,"column":67}}]},"123":{"line":1725,"type":"if","locations":[{"start":{"line":1725,"column":2},"end":{"line":1725,"column":2}},{"start":{"line":1725,"column":2},"end":{"line":1725,"column":2}}]},"124":{"line":1728,"type":"if","locations":[{"start":{"line":1728,"column":2},"end":{"line":1728,"column":2}},{"start":{"line":1728,"column":2},"end":{"line":1728,"column":2}}]},"125":{"line":1732,"type":"if","locations":[{"start":{"line":1732,"column":2},"end":{"line":1732,"column":2}},{"start":{"line":1732,"column":2},"end":{"line":1732,"column":2}}]},"126":{"line":1733,"type":"cond-expr","locations":[{"start":{"line":1733,"column":28},"end":{"line":1733,"column":54}},{"start":{"line":1733,"column":57},"end":{"line":1733,"column":59}}]},"127":{"line":1736,"type":"cond-expr","locations":[{"start":{"line":1736,"column":55},"end":{"line":1736,"column":59}},{"start":{"line":1736,"column":62},"end":{"line":1736,"column":68}}]},"128":{"line":1736,"type":"binary-expr","locations":[{"start":{"line":1736,"column":10},"end":{"line":1736,"column":23}},{"start":{"line":1736,"column":27},"end":{"line":1736,"column":51}}]},"129":{"line":1752,"type":"if","locations":[{"start":{"line":1752,"column":2},"end":{"line":1752,"column":2}},{"start":{"line":1752,"column":2},"end":{"line":1752,"column":2}}]},"130":{"line":1753,"type":"cond-expr","locations":[{"start":{"line":1753,"column":30},"end":{"line":1753,"column":31}},{"start":{"line":1753,"column":35},"end":{"line":1753,"column":49}}]},"131":{"line":1755,"type":"cond-expr","locations":[{"start":{"line":1755,"column":23},"end":{"line":1755,"column":29}},{"start":{"line":1755,"column":32},"end":{"line":1755,"column":35}}]},"132":{"line":1756,"type":"if","locations":[{"start":{"line":1756,"column":2},"end":{"line":1756,"column":2}},{"start":{"line":1756,"column":2},"end":{"line":1756,"column":2}}]},"133":{"line":1759,"type":"cond-expr","locations":[{"start":{"line":1759,"column":25},"end":{"line":1759,"column":26}},{"start":{"line":1759,"column":30},"end":{"line":1759,"column":49}}]},"134":{"line":1780,"type":"cond-expr","locations":[{"start":{"line":1780,"column":28},"end":{"line":1780,"column":34}},{"start":{"line":1780,"column":37},"end":{"line":1780,"column":40}}]},"135":{"line":1781,"type":"cond-expr","locations":[{"start":{"line":1781,"column":37},"end":{"line":1781,"column":42}},{"start":{"line":1781,"column":45},"end":{"line":1781,"column":73}}]},"136":{"line":1781,"type":"binary-expr","locations":[{"start":{"line":1781,"column":10},"end":{"line":1781,"column":16}},{"start":{"line":1781,"column":20},"end":{"line":1781,"column":33}}]},"137":{"line":1796,"type":"binary-expr","locations":[{"start":{"line":1796,"column":9},"end":{"line":1796,"column":16}},{"start":{"line":1796,"column":20},"end":{"line":1796,"column":70}}]},"138":{"line":1813,"type":"binary-expr","locations":[{"start":{"line":1813,"column":9},"end":{"line":1813,"column":25}},{"start":{"line":1813,"column":29},"end":{"line":1813,"column":79}}]},"139":{"line":1889,"type":"binary-expr","locations":[{"start":{"line":1889,"column":9},"end":{"line":1889,"column":32}},{"start":{"line":1889,"column":36},"end":{"line":1889,"column":38}}]},"140":{"line":1900,"type":"cond-expr","locations":[{"start":{"line":1901,"column":6},"end":{"line":1901,"column":28}},{"start":{"line":1902,"column":6},"end":{"line":1902,"column":26}}]},"141":{"line":1927,"type":"cond-expr","locations":[{"start":{"line":1927,"column":25},"end":{"line":1927,"column":27}},{"start":{"line":1927,"column":30},"end":{"line":1927,"column":49}}]},"142":{"line":1957,"type":"if","locations":[{"start":{"line":1957,"column":2},"end":{"line":1957,"column":2}},{"start":{"line":1957,"column":2},"end":{"line":1957,"column":2}}]},"143":{"line":1957,"type":"binary-expr","locations":[{"start":{"line":1957,"column":6},"end":{"line":1957,"column":12}},{"start":{"line":1957,"column":17},"end":{"line":1957,"column":22}},{"start":{"line":1957,"column":26},"end":{"line":1957,"column":45}}]},"144":{"line":1960,"type":"if","locations":[{"start":{"line":1960,"column":2},"end":{"line":1960,"column":2}},{"start":{"line":1960,"column":2},"end":{"line":1960,"column":2}}]},"145":{"line":1960,"type":"binary-expr","locations":[{"start":{"line":1960,"column":6},"end":{"line":1960,"column":13}},{"start":{"line":1960,"column":17},"end":{"line":1960,"column":47}}]},"146":{"line":1979,"type":"cond-expr","locations":[{"start":{"line":1979,"column":18},"end":{"line":1979,"column":42}},{"start":{"line":1979,"column":45},"end":{"line":1979,"column":47}}]},"147":{"line":2074,"type":"if","locations":[{"start":{"line":2074,"column":8},"end":{"line":2074,"column":8}},{"start":{"line":2074,"column":8},"end":{"line":2074,"column":8}}]},"148":{"line":2078,"type":"cond-expr","locations":[{"start":{"line":2078,"column":62},"end":{"line":2078,"column":69}},{"start":{"line":2078,"column":72},"end":{"line":2078,"column":78}}]},"149":{"line":2079,"type":"if","locations":[{"start":{"line":2079,"column":15},"end":{"line":2079,"column":15}},{"start":{"line":2079,"column":15},"end":{"line":2079,"column":15}}]},"150":{"line":2084,"type":"if","locations":[{"start":{"line":2084,"column":12},"end":{"line":2084,"column":12}},{"start":{"line":2084,"column":12},"end":{"line":2084,"column":12}}]},"151":{"line":2084,"type":"binary-expr","locations":[{"start":{"line":2084,"column":16},"end":{"line":2084,"column":35}},{"start":{"line":2084,"column":39},"end":{"line":2084,"column":58}}]},"152":{"line":2105,"type":"binary-expr","locations":[{"start":{"line":2105,"column":22},"end":{"line":2105,"column":56}},{"start":{"line":2105,"column":60},"end":{"line":2105,"column":72}}]},"153":{"line":2106,"type":"binary-expr","locations":[{"start":{"line":2106,"column":18},"end":{"line":2106,"column":45}},{"start":{"line":2106,"column":49},"end":{"line":2106,"column":87}}]},"154":{"line":2122,"type":"if","locations":[{"start":{"line":2122,"column":0},"end":{"line":2122,"column":0}},{"start":{"line":2122,"column":0},"end":{"line":2122,"column":0}}]},"155":{"line":2124,"type":"if","locations":[{"start":{"line":2124,"column":7},"end":{"line":2124,"column":7}},{"start":{"line":2124,"column":7},"end":{"line":2124,"column":7}}]},"156":{"line":2147,"type":"if","locations":[{"start":{"line":2147,"column":4},"end":{"line":2147,"column":4}},{"start":{"line":2147,"column":4},"end":{"line":2147,"column":4}}]},"157":{"line":2148,"type":"if","locations":[{"start":{"line":2148,"column":4},"end":{"line":2148,"column":4}},{"start":{"line":2148,"column":4},"end":{"line":2148,"column":4}}]},"158":{"line":2160,"type":"if","locations":[{"start":{"line":2160,"column":4},"end":{"line":2160,"column":4}},{"start":{"line":2160,"column":4},"end":{"line":2160,"column":4}}]},"159":{"line":2168,"type":"if","locations":[{"start":{"line":2168,"column":4},"end":{"line":2168,"column":4}},{"start":{"line":2168,"column":4},"end":{"line":2168,"column":4}}]},"160":{"line":2174,"type":"if","locations":[{"start":{"line":2174,"column":4},"end":{"line":2174,"column":4}},{"start":{"line":2174,"column":4},"end":{"line":2174,"column":4}}]},"161":{"line":2178,"type":"if","locations":[{"start":{"line":2178,"column":4},"end":{"line":2178,"column":4}},{"start":{"line":2178,"column":4},"end":{"line":2178,"column":4}}]},"162":{"line":2182,"type":"binary-expr","locations":[{"start":{"line":2182,"column":11},"end":{"line":2182,"column":20}},{"start":{"line":2182,"column":24},"end":{"line":2182,"column":50}}]},"163":{"line":2186,"type":"binary-expr","locations":[{"start":{"line":2186,"column":11},"end":{"line":2186,"column":20}},{"start":{"line":2186,"column":24},"end":{"line":2186,"column":50}}]},"164":{"line":2190,"type":"if","locations":[{"start":{"line":2190,"column":4},"end":{"line":2190,"column":4}},{"start":{"line":2190,"column":4},"end":{"line":2190,"column":4}}]},"165":{"line":2192,"type":"if","locations":[{"start":{"line":2192,"column":11},"end":{"line":2192,"column":11}},{"start":{"line":2192,"column":11},"end":{"line":2192,"column":11}}]},"166":{"line":2197,"type":"if","locations":[{"start":{"line":2197,"column":8},"end":{"line":2197,"column":8}},{"start":{"line":2197,"column":8},"end":{"line":2197,"column":8}}]},"167":{"line":2197,"type":"binary-expr","locations":[{"start":{"line":2197,"column":12},"end":{"line":2197,"column":28}},{"start":{"line":2197,"column":32},"end":{"line":2197,"column":62}}]},"168":{"line":2201,"type":"if","locations":[{"start":{"line":2201,"column":8},"end":{"line":2201,"column":8}},{"start":{"line":2201,"column":8},"end":{"line":2201,"column":8}}]},"169":{"line":2204,"type":"if","locations":[{"start":{"line":2204,"column":8},"end":{"line":2204,"column":8}},{"start":{"line":2204,"column":8},"end":{"line":2204,"column":8}}]},"170":{"line":2204,"type":"binary-expr","locations":[{"start":{"line":2204,"column":12},"end":{"line":2204,"column":29}},{"start":{"line":2204,"column":33},"end":{"line":2204,"column":41}}]},"171":{"line":2214,"type":"binary-expr","locations":[{"start":{"line":2214,"column":26},"end":{"line":2214,"column":34}},{"start":{"line":2214,"column":38},"end":{"line":2214,"column":42}}]},"172":{"line":2217,"type":"if","locations":[{"start":{"line":2217,"column":12},"end":{"line":2217,"column":12}},{"start":{"line":2217,"column":12},"end":{"line":2217,"column":12}}]},"173":{"line":2233,"type":"if","locations":[{"start":{"line":2233,"column":16},"end":{"line":2233,"column":16}},{"start":{"line":2233,"column":16},"end":{"line":2233,"column":16}}]},"174":{"line":2239,"type":"if","locations":[{"start":{"line":2239,"column":16},"end":{"line":2239,"column":16}},{"start":{"line":2239,"column":16},"end":{"line":2239,"column":16}}]},"175":{"line":2244,"type":"if","locations":[{"start":{"line":2244,"column":12},"end":{"line":2244,"column":12}},{"start":{"line":2244,"column":12},"end":{"line":2244,"column":12}}]},"176":{"line":2248,"type":"if","locations":[{"start":{"line":2248,"column":12},"end":{"line":2248,"column":12}},{"start":{"line":2248,"column":12},"end":{"line":2248,"column":12}}]},"177":{"line":2283,"type":"if","locations":[{"start":{"line":2283,"column":12},"end":{"line":2283,"column":12}},{"start":{"line":2283,"column":12},"end":{"line":2283,"column":12}}]},"178":{"line":2287,"type":"binary-expr","locations":[{"start":{"line":2287,"column":19},"end":{"line":2287,"column":28}},{"start":{"line":2287,"column":32},"end":{"line":2287,"column":55}},{"start":{"line":2287,"column":59},"end":{"line":2287,"column":74}}]},"179":{"line":2291,"type":"if","locations":[{"start":{"line":2291,"column":16},"end":{"line":2291,"column":16}},{"start":{"line":2291,"column":16},"end":{"line":2291,"column":16}}]},"180":{"line":2298,"type":"if","locations":[{"start":{"line":2298,"column":16},"end":{"line":2298,"column":16}},{"start":{"line":2298,"column":16},"end":{"line":2298,"column":16}}]},"181":{"line":2304,"type":"if","locations":[{"start":{"line":2304,"column":16},"end":{"line":2304,"column":16}},{"start":{"line":2304,"column":16},"end":{"line":2304,"column":16}}]},"182":{"line":2329,"type":"if","locations":[{"start":{"line":2329,"column":12},"end":{"line":2329,"column":12}},{"start":{"line":2329,"column":12},"end":{"line":2329,"column":12}}]},"183":{"line":2483,"type":"binary-expr","locations":[{"start":{"line":2483,"column":20},"end":{"line":2483,"column":28}},{"start":{"line":2483,"column":32},"end":{"line":2483,"column":36}}]},"184":{"line":2537,"type":"if","locations":[{"start":{"line":2537,"column":8},"end":{"line":2537,"column":8}},{"start":{"line":2537,"column":8},"end":{"line":2537,"column":8}}]},"185":{"line":2596,"type":"binary-expr","locations":[{"start":{"line":2596,"column":35},"end":{"line":2596,"column":36}},{"start":{"line":2596,"column":40},"end":{"line":2596,"column":42}}]},"186":{"line":2711,"type":"binary-expr","locations":[{"start":{"line":2711,"column":13},"end":{"line":2711,"column":15}},{"start":{"line":2711,"column":19},"end":{"line":2711,"column":23}}]},"187":{"line":2716,"type":"if","locations":[{"start":{"line":2716,"column":16},"end":{"line":2716,"column":16}},{"start":{"line":2716,"column":16},"end":{"line":2716,"column":16}}]},"188":{"line":2718,"type":"if","locations":[{"start":{"line":2718,"column":23},"end":{"line":2718,"column":23}},{"start":{"line":2718,"column":23},"end":{"line":2718,"column":23}}]},"189":{"line":2718,"type":"binary-expr","locations":[{"start":{"line":2718,"column":27},"end":{"line":2718,"column":40}},{"start":{"line":2718,"column":44},"end":{"line":2718,"column":55}}]},"190":{"line":2727,"type":"if","locations":[{"start":{"line":2727,"column":12},"end":{"line":2727,"column":12}},{"start":{"line":2727,"column":12},"end":{"line":2727,"column":12}}]},"191":{"line":2730,"type":"cond-expr","locations":[{"start":{"line":2730,"column":38},"end":{"line":2730,"column":48}},{"start":{"line":2730,"column":51},"end":{"line":2730,"column":67}}]},"192":{"line":2826,"type":"if","locations":[{"start":{"line":2826,"column":12},"end":{"line":2826,"column":12}},{"start":{"line":2826,"column":12},"end":{"line":2826,"column":12}}]},"193":{"line":2827,"type":"if","locations":[{"start":{"line":2827,"column":16},"end":{"line":2827,"column":16}},{"start":{"line":2827,"column":16},"end":{"line":2827,"column":16}}]},"194":{"line":2828,"type":"if","locations":[{"start":{"line":2828,"column":20},"end":{"line":2828,"column":20}},{"start":{"line":2828,"column":20},"end":{"line":2828,"column":20}}]},"195":{"line":2831,"type":"if","locations":[{"start":{"line":2831,"column":23},"end":{"line":2831,"column":23}},{"start":{"line":2831,"column":23},"end":{"line":2831,"column":23}}]},"196":{"line":2893,"type":"binary-expr","locations":[{"start":{"line":2893,"column":24},"end":{"line":2893,"column":32}},{"start":{"line":2893,"column":36},"end":{"line":2893,"column":40}}]},"197":{"line":2896,"type":"if","locations":[{"start":{"line":2896,"column":8},"end":{"line":2896,"column":8}},{"start":{"line":2896,"column":8},"end":{"line":2896,"column":8}}]},"198":{"line":2902,"type":"if","locations":[{"start":{"line":2902,"column":8},"end":{"line":2902,"column":8}},{"start":{"line":2902,"column":8},"end":{"line":2902,"column":8}}]},"199":{"line":2903,"type":"if","locations":[{"start":{"line":2903,"column":8},"end":{"line":2903,"column":8}},{"start":{"line":2903,"column":8},"end":{"line":2903,"column":8}}]},"200":{"line":2934,"type":"binary-expr","locations":[{"start":{"line":2934,"column":24},"end":{"line":2934,"column":32}},{"start":{"line":2934,"column":36},"end":{"line":2934,"column":40}}]},"201":{"line":2936,"type":"if","locations":[{"start":{"line":2936,"column":8},"end":{"line":2936,"column":8}},{"start":{"line":2936,"column":8},"end":{"line":2936,"column":8}}]},"202":{"line":2937,"type":"if","locations":[{"start":{"line":2937,"column":8},"end":{"line":2937,"column":8}},{"start":{"line":2937,"column":8},"end":{"line":2937,"column":8}}]},"203":{"line":3007,"type":"binary-expr","locations":[{"start":{"line":3007,"column":24},"end":{"line":3007,"column":32}},{"start":{"line":3007,"column":36},"end":{"line":3007,"column":40}}]},"204":{"line":3010,"type":"if","locations":[{"start":{"line":3010,"column":8},"end":{"line":3010,"column":8}},{"start":{"line":3010,"column":8},"end":{"line":3010,"column":8}}]},"205":{"line":3015,"type":"if","locations":[{"start":{"line":3015,"column":8},"end":{"line":3015,"column":8}},{"start":{"line":3015,"column":8},"end":{"line":3015,"column":8}}]},"206":{"line":3016,"type":"if","locations":[{"start":{"line":3016,"column":8},"end":{"line":3016,"column":8}},{"start":{"line":3016,"column":8},"end":{"line":3016,"column":8}}]},"207":{"line":3178,"type":"if","locations":[{"start":{"line":3178,"column":12},"end":{"line":3178,"column":12}},{"start":{"line":3178,"column":12},"end":{"line":3178,"column":12}}]},"208":{"line":3277,"type":"cond-expr","locations":[{"start":{"line":3277,"column":28},"end":{"line":3277,"column":37}},{"start":{"line":3277,"column":40},"end":{"line":3277,"column":51}}]},"209":{"line":3289,"type":"if","locations":[{"start":{"line":3289,"column":8},"end":{"line":3289,"column":8}},{"start":{"line":3289,"column":8},"end":{"line":3289,"column":8}}]},"210":{"line":3292,"type":"if","locations":[{"start":{"line":3292,"column":12},"end":{"line":3292,"column":12}},{"start":{"line":3292,"column":12},"end":{"line":3292,"column":12}}]},"211":{"line":3302,"type":"if","locations":[{"start":{"line":3302,"column":12},"end":{"line":3302,"column":12}},{"start":{"line":3302,"column":12},"end":{"line":3302,"column":12}}]},"212":{"line":3305,"type":"if","locations":[{"start":{"line":3305,"column":16},"end":{"line":3305,"column":16}},{"start":{"line":3305,"column":16},"end":{"line":3305,"column":16}}]},"213":{"line":3312,"type":"if","locations":[{"start":{"line":3312,"column":8},"end":{"line":3312,"column":8}},{"start":{"line":3312,"column":8},"end":{"line":3312,"column":8}}]},"214":{"line":3323,"type":"cond-expr","locations":[{"start":{"line":3323,"column":37},"end":{"line":3323,"column":48}},{"start":{"line":3323,"column":51},"end":{"line":3323,"column":64}}]},"215":{"line":3324,"type":"binary-expr","locations":[{"start":{"line":3324,"column":35},"end":{"line":3324,"column":43}},{"start":{"line":3324,"column":47},"end":{"line":3324,"column":51}}]},"216":{"line":3426,"type":"binary-expr","locations":[{"start":{"line":3426,"column":24},"end":{"line":3426,"column":31}},{"start":{"line":3426,"column":35},"end":{"line":3426,"column":39}}]},"217":{"line":3430,"type":"if","locations":[{"start":{"line":3430,"column":8},"end":{"line":3430,"column":8}},{"start":{"line":3430,"column":8},"end":{"line":3430,"column":8}}]},"218":{"line":3487,"type":"binary-expr","locations":[{"start":{"line":3487,"column":20},"end":{"line":3487,"column":28}},{"start":{"line":3487,"column":32},"end":{"line":3487,"column":36}}]},"219":{"line":3491,"type":"if","locations":[{"start":{"line":3491,"column":12},"end":{"line":3491,"column":12}},{"start":{"line":3491,"column":12},"end":{"line":3491,"column":12}}]},"220":{"line":3612,"type":"binary-expr","locations":[{"start":{"line":3612,"column":13},"end":{"line":3612,"column":19}},{"start":{"line":3612,"column":23},"end":{"line":3612,"column":31}}]},"221":{"line":3615,"type":"if","locations":[{"start":{"line":3615,"column":8},"end":{"line":3615,"column":8}},{"start":{"line":3615,"column":8},"end":{"line":3615,"column":8}}]},"222":{"line":3619,"type":"if","locations":[{"start":{"line":3619,"column":15},"end":{"line":3619,"column":15}},{"start":{"line":3619,"column":15},"end":{"line":3619,"column":15}}]},"223":{"line":3671,"type":"if","locations":[{"start":{"line":3671,"column":0},"end":{"line":3671,"column":0}},{"start":{"line":3671,"column":0},"end":{"line":3671,"column":0}}]},"224":{"line":3673,"type":"if","locations":[{"start":{"line":3673,"column":7},"end":{"line":3673,"column":7}},{"start":{"line":3673,"column":7},"end":{"line":3673,"column":7}}]},"225":{"line":3682,"type":"binary-expr","locations":[{"start":{"line":3682,"column":15},"end":{"line":3682,"column":23}},{"start":{"line":3682,"column":27},"end":{"line":3682,"column":31}}]},"226":{"line":3683,"type":"cond-expr","locations":[{"start":{"line":3683,"column":39},"end":{"line":3683,"column":41}},{"start":{"line":3683,"column":44},"end":{"line":3683,"column":46}}]},"227":{"line":3687,"type":"if","locations":[{"start":{"line":3687,"column":12},"end":{"line":3687,"column":12}},{"start":{"line":3687,"column":12},"end":{"line":3687,"column":12}}]},"228":{"line":3928,"type":"if","locations":[{"start":{"line":3928,"column":8},"end":{"line":3928,"column":8}},{"start":{"line":3928,"column":8},"end":{"line":3928,"column":8}}]},"229":{"line":3929,"type":"if","locations":[{"start":{"line":3929,"column":8},"end":{"line":3929,"column":8}},{"start":{"line":3929,"column":8},"end":{"line":3929,"column":8}}]},"230":{"line":3933,"type":"if","locations":[{"start":{"line":3933,"column":8},"end":{"line":3933,"column":8}},{"start":{"line":3933,"column":8},"end":{"line":3933,"column":8}}]},"231":{"line":3936,"type":"if","locations":[{"start":{"line":3936,"column":8},"end":{"line":3936,"column":8}},{"start":{"line":3936,"column":8},"end":{"line":3936,"column":8}}]},"232":{"line":3943,"type":"binary-expr","locations":[{"start":{"line":3943,"column":19},"end":{"line":3943,"column":27}},{"start":{"line":3943,"column":31},"end":{"line":3943,"column":32}}]},"233":{"line":3945,"type":"binary-expr","locations":[{"start":{"line":3945,"column":15},"end":{"line":3945,"column":23}},{"start":{"line":3945,"column":27},"end":{"line":3945,"column":56}}]},"234":{"line":3956,"type":"if","locations":[{"start":{"line":3956,"column":12},"end":{"line":3956,"column":12}},{"start":{"line":3956,"column":12},"end":{"line":3956,"column":12}}]},"235":{"line":4009,"type":"binary-expr","locations":[{"start":{"line":4009,"column":20},"end":{"line":4009,"column":28}},{"start":{"line":4009,"column":32},"end":{"line":4009,"column":36}}]},"236":{"line":4010,"type":"if","locations":[{"start":{"line":4010,"column":4},"end":{"line":4010,"column":4}},{"start":{"line":4010,"column":4},"end":{"line":4010,"column":4}}]},"237":{"line":4011,"type":"if","locations":[{"start":{"line":4011,"column":4},"end":{"line":4011,"column":4}},{"start":{"line":4011,"column":4},"end":{"line":4011,"column":4}}]},"238":{"line":4088,"type":"if","locations":[{"start":{"line":4088,"column":12},"end":{"line":4088,"column":12}},{"start":{"line":4088,"column":12},"end":{"line":4088,"column":12}}]},"239":{"line":4094,"type":"if","locations":[{"start":{"line":4094,"column":16},"end":{"line":4094,"column":16}},{"start":{"line":4094,"column":16},"end":{"line":4094,"column":16}}]},"240":{"line":4096,"type":"if","locations":[{"start":{"line":4096,"column":23},"end":{"line":4096,"column":23}},{"start":{"line":4096,"column":23},"end":{"line":4096,"column":23}}]},"241":{"line":4213,"type":"if","locations":[{"start":{"line":4213,"column":4},"end":{"line":4213,"column":4}},{"start":{"line":4213,"column":4},"end":{"line":4213,"column":4}}]},"242":{"line":4383,"type":"if","locations":[{"start":{"line":4383,"column":8},"end":{"line":4383,"column":8}},{"start":{"line":4383,"column":8},"end":{"line":4383,"column":8}}]},"243":{"line":4384,"type":"binary-expr","locations":[{"start":{"line":4384,"column":24},"end":{"line":4384,"column":32}},{"start":{"line":4384,"column":36},"end":{"line":4384,"column":49}}]},"244":{"line":4386,"type":"cond-expr","locations":[{"start":{"line":4386,"column":66},"end":{"line":4386,"column":76}},{"start":{"line":4386,"column":79},"end":{"line":4386,"column":122}}]},"245":{"line":4386,"type":"binary-expr","locations":[{"start":{"line":4386,"column":90},"end":{"line":4386,"column":101}},{"start":{"line":4386,"column":105},"end":{"line":4386,"column":121}}]},"246":{"line":4389,"type":"if","locations":[{"start":{"line":4389,"column":15},"end":{"line":4389,"column":15}},{"start":{"line":4389,"column":15},"end":{"line":4389,"column":15}}]},"247":{"line":4389,"type":"binary-expr","locations":[{"start":{"line":4389,"column":19},"end":{"line":4389,"column":40}},{"start":{"line":4389,"column":44},"end":{"line":4389,"column":65}}]},"248":{"line":4390,"type":"binary-expr","locations":[{"start":{"line":4390,"column":24},"end":{"line":4390,"column":26}},{"start":{"line":4390,"column":30},"end":{"line":4390,"column":43}}]},"249":{"line":4396,"type":"if","locations":[{"start":{"line":4396,"column":4},"end":{"line":4396,"column":4}},{"start":{"line":4396,"column":4},"end":{"line":4396,"column":4}}]},"250":{"line":4396,"type":"binary-expr","locations":[{"start":{"line":4396,"column":8},"end":{"line":4396,"column":28}},{"start":{"line":4396,"column":32},"end":{"line":4396,"column":58}}]},"251":{"line":4397,"type":"binary-expr","locations":[{"start":{"line":4397,"column":19},"end":{"line":4397,"column":23}},{"start":{"line":4397,"column":27},"end":{"line":4397,"column":31}}]},"252":{"line":4401,"type":"binary-expr","locations":[{"start":{"line":4401,"column":19},"end":{"line":4401,"column":27}},{"start":{"line":4401,"column":31},"end":{"line":4401,"column":35}}]},"253":{"line":4404,"type":"if","locations":[{"start":{"line":4404,"column":4},"end":{"line":4404,"column":4}},{"start":{"line":4404,"column":4},"end":{"line":4404,"column":4}}]},"254":{"line":4411,"type":"if","locations":[{"start":{"line":4411,"column":12},"end":{"line":4411,"column":12}},{"start":{"line":4411,"column":12},"end":{"line":4411,"column":12}}]},"255":{"line":4411,"type":"binary-expr","locations":[{"start":{"line":4411,"column":16},"end":{"line":4411,"column":19}},{"start":{"line":4411,"column":23},"end":{"line":4411,"column":48}},{"start":{"line":4411,"column":53},"end":{"line":4411,"column":93}},{"start":{"line":4411,"column":97},"end":{"line":4411,"column":121}}]},"256":{"line":4447,"type":"if","locations":[{"start":{"line":4447,"column":4},"end":{"line":4447,"column":4}},{"start":{"line":4447,"column":4},"end":{"line":4447,"column":4}}]},"257":{"line":4456,"type":"if","locations":[{"start":{"line":4456,"column":8},"end":{"line":4456,"column":8}},{"start":{"line":4456,"column":8},"end":{"line":4456,"column":8}}]},"258":{"line":4654,"type":"if","locations":[{"start":{"line":4654,"column":12},"end":{"line":4654,"column":12}},{"start":{"line":4654,"column":12},"end":{"line":4654,"column":12}}]},"259":{"line":4658,"type":"if","locations":[{"start":{"line":4658,"column":8},"end":{"line":4658,"column":8}},{"start":{"line":4658,"column":8},"end":{"line":4658,"column":8}}]},"260":{"line":4665,"type":"cond-expr","locations":[{"start":{"line":4665,"column":23},"end":{"line":4665,"column":25}},{"start":{"line":4665,"column":28},"end":{"line":4665,"column":41}}]},"261":{"line":4665,"type":"cond-expr","locations":[{"start":{"line":4665,"column":36},"end":{"line":4665,"column":37}},{"start":{"line":4665,"column":40},"end":{"line":4665,"column":41}}]},"262":{"line":4716,"type":"if","locations":[{"start":{"line":4716,"column":8},"end":{"line":4716,"column":8}},{"start":{"line":4716,"column":8},"end":{"line":4716,"column":8}}]},"263":{"line":4723,"type":"binary-expr","locations":[{"start":{"line":4723,"column":19},"end":{"line":4723,"column":31}},{"start":{"line":4723,"column":35},"end":{"line":4723,"column":46}}]},"264":{"line":4726,"type":"if","locations":[{"start":{"line":4726,"column":8},"end":{"line":4726,"column":8}},{"start":{"line":4726,"column":8},"end":{"line":4726,"column":8}}]},"265":{"line":4758,"type":"binary-expr","locations":[{"start":{"line":4758,"column":55},"end":{"line":4758,"column":59}},{"start":{"line":4758,"column":63},"end":{"line":4758,"column":64}}]},"266":{"line":4762,"type":"cond-expr","locations":[{"start":{"line":4762,"column":23},"end":{"line":4762,"column":29}},{"start":{"line":4762,"column":32},"end":{"line":4762,"column":39}}]},"267":{"line":4884,"type":"if","locations":[{"start":{"line":4884,"column":4},"end":{"line":4884,"column":4}},{"start":{"line":4884,"column":4},"end":{"line":4884,"column":4}}]},"268":{"line":4887,"type":"cond-expr","locations":[{"start":{"line":4887,"column":38},"end":{"line":4887,"column":40}},{"start":{"line":4887,"column":43},"end":{"line":4887,"column":45}}]},"269":{"line":4889,"type":"binary-expr","locations":[{"start":{"line":4889,"column":20},"end":{"line":4889,"column":28}},{"start":{"line":4889,"column":32},"end":{"line":4889,"column":36}}]},"270":{"line":4913,"type":"binary-expr","locations":[{"start":{"line":4913,"column":16},"end":{"line":4913,"column":29}},{"start":{"line":4913,"column":33},"end":{"line":4913,"column":35}}]},"271":{"line":4953,"type":"binary-expr","locations":[{"start":{"line":4953,"column":24},"end":{"line":4953,"column":32}},{"start":{"line":4953,"column":36},"end":{"line":4953,"column":40}}]},"272":{"line":4954,"type":"if","locations":[{"start":{"line":4954,"column":4},"end":{"line":4954,"column":4}},{"start":{"line":4954,"column":4},"end":{"line":4954,"column":4}}]},"273":{"line":4956,"type":"if","locations":[{"start":{"line":4956,"column":8},"end":{"line":4956,"column":8}},{"start":{"line":4956,"column":8},"end":{"line":4956,"column":8}}]},"274":{"line":4957,"type":"if","locations":[{"start":{"line":4957,"column":8},"end":{"line":4957,"column":8}},{"start":{"line":4957,"column":8},"end":{"line":4957,"column":8}}]},"275":{"line":5050,"type":"binary-expr","locations":[{"start":{"line":5050,"column":20},"end":{"line":5050,"column":28}},{"start":{"line":5050,"column":32},"end":{"line":5050,"column":36}}]},"276":{"line":5051,"type":"if","locations":[{"start":{"line":5051,"column":4},"end":{"line":5051,"column":4}},{"start":{"line":5051,"column":4},"end":{"line":5051,"column":4}}]},"277":{"line":5052,"type":"if","locations":[{"start":{"line":5052,"column":4},"end":{"line":5052,"column":4}},{"start":{"line":5052,"column":4},"end":{"line":5052,"column":4}}]},"278":{"line":5056,"type":"if","locations":[{"start":{"line":5056,"column":8},"end":{"line":5056,"column":8}},{"start":{"line":5056,"column":8},"end":{"line":5056,"column":8}}]},"279":{"line":5061,"type":"if","locations":[{"start":{"line":5061,"column":12},"end":{"line":5061,"column":12}},{"start":{"line":5061,"column":12},"end":{"line":5061,"column":12}}]}},"code":["(function (global, factory) {","    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :","    typeof define === 'function' && define.amd ? define(['exports'], factory) :","    (factory((global.async = global.async || {})));","}(this, (function (exports) { 'use strict';","","/**"," * A faster alternative to `Function#apply`, this function invokes `func`"," * with the `this` binding of `thisArg` and the arguments of `args`."," *"," * @private"," * @param {Function} func The function to invoke."," * @param {*} thisArg The `this` binding of `func`."," * @param {Array} args The arguments to invoke `func` with."," * @returns {*} Returns the result of `func`."," */","function apply(func, thisArg, args) {","  switch (args.length) {","    case 0: return func.call(thisArg);","    case 1: return func.call(thisArg, args[0]);","    case 2: return func.call(thisArg, args[0], args[1]);","    case 3: return func.call(thisArg, args[0], args[1], args[2]);","  }","  return func.apply(thisArg, args);","}","","/* Built-in method references for those with the same name as other `lodash` methods. */","var nativeMax = Math.max;","","/**"," * A specialized version of `baseRest` which transforms the rest array."," *"," * @private"," * @param {Function} func The function to apply a rest parameter to."," * @param {number} [start=func.length-1] The start position of the rest parameter."," * @param {Function} transform The rest array transform."," * @returns {Function} Returns the new function."," */","function overRest$1(func, start, transform) {","  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);","  return function() {","    var args = arguments,","        index = -1,","        length = nativeMax(args.length - start, 0),","        array = Array(length);","","    while (++index < length) {","      array[index] = args[start + index];","    }","    index = -1;","    var otherArgs = Array(start + 1);","    while (++index < start) {","      otherArgs[index] = args[index];","    }","    otherArgs[start] = transform(array);","    return apply(func, this, otherArgs);","  };","}","","/**"," * This method returns the first argument it receives."," *"," * @static"," * @since 0.1.0"," * @memberOf _"," * @category Util"," * @param {*} value Any value."," * @returns {*} Returns `value`."," * @example"," *"," * var object = { 'a': 1 };"," *"," * console.log(_.identity(object) === object);"," * // => true"," */","function identity(value) {","  return value;","}","","// Lodash rest function without function.toString()","// remappings","function rest(func, start) {","    return overRest$1(func, start, identity);","}","","var initialParams = function (fn) {","    return rest(function (args /*..., callback*/) {","        var callback = args.pop();","        fn.call(this, args, callback);","    });","};","","function applyEach$1(eachfn) {","    return rest(function (fns, args) {","        var go = initialParams(function (args, callback) {","            var that = this;","            return eachfn(fns, function (fn, cb) {","                fn.apply(that, args.concat(cb));","            }, callback);","        });","        if (args.length) {","            return go.apply(this, args);","        } else {","            return go;","        }","    });","}","","/** Detect free variable `global` from Node.js. */","var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;","","/** Detect free variable `self`. */","var freeSelf = typeof self == 'object' && self && self.Object === Object && self;","","/** Used as a reference to the global object. */","var root = freeGlobal || freeSelf || Function('return this')();","","/** Built-in value references. */","var Symbol$1 = root.Symbol;","","/** Used for built-in method references. */","var objectProto = Object.prototype;","","/** Used to check objects for own properties. */","var hasOwnProperty = objectProto.hasOwnProperty;","","/**"," * Used to resolve the"," * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)"," * of values."," */","var nativeObjectToString = objectProto.toString;","","/** Built-in value references. */","var symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;","","/**"," * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values."," *"," * @private"," * @param {*} value The value to query."," * @returns {string} Returns the raw `toStringTag`."," */","function getRawTag(value) {","  var isOwn = hasOwnProperty.call(value, symToStringTag$1),","      tag = value[symToStringTag$1];","","  try {","    value[symToStringTag$1] = undefined;","    var unmasked = true;","  } catch (e) {}","","  var result = nativeObjectToString.call(value);","  if (unmasked) {","    if (isOwn) {","      value[symToStringTag$1] = tag;","    } else {","      delete value[symToStringTag$1];","    }","  }","  return result;","}","","/** Used for built-in method references. */","var objectProto$1 = Object.prototype;","","/**"," * Used to resolve the"," * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)"," * of values."," */","var nativeObjectToString$1 = objectProto$1.toString;","","/**"," * Converts `value` to a string using `Object.prototype.toString`."," *"," * @private"," * @param {*} value The value to convert."," * @returns {string} Returns the converted string."," */","function objectToString(value) {","  return nativeObjectToString$1.call(value);","}","","/** `Object#toString` result references. */","var nullTag = '[object Null]';","var undefinedTag = '[object Undefined]';","","/** Built-in value references. */","var symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;","","/**"," * The base implementation of `getTag` without fallbacks for buggy environments."," *"," * @private"," * @param {*} value The value to query."," * @returns {string} Returns the `toStringTag`."," */","function baseGetTag(value) {","  if (value == null) {","    return value === undefined ? undefinedTag : nullTag;","  }","  return (symToStringTag && symToStringTag in Object(value))","    ? getRawTag(value)","    : objectToString(value);","}","","/**"," * Checks if `value` is the"," * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)"," * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)"," *"," * @static"," * @memberOf _"," * @since 0.1.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is an object, else `false`."," * @example"," *"," * _.isObject({});"," * // => true"," *"," * _.isObject([1, 2, 3]);"," * // => true"," *"," * _.isObject(_.noop);"," * // => true"," *"," * _.isObject(null);"," * // => false"," */","function isObject(value) {","  var type = typeof value;","  return value != null && (type == 'object' || type == 'function');","}","","/** `Object#toString` result references. */","var asyncTag = '[object AsyncFunction]';","var funcTag = '[object Function]';","var genTag = '[object GeneratorFunction]';","var proxyTag = '[object Proxy]';","","/**"," * Checks if `value` is classified as a `Function` object."," *"," * @static"," * @memberOf _"," * @since 0.1.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a function, else `false`."," * @example"," *"," * _.isFunction(_);"," * // => true"," *"," * _.isFunction(/abc/);"," * // => false"," */","function isFunction(value) {","  if (!isObject(value)) {","    return false;","  }","  // The use of `Object#toString` avoids issues with the `typeof` operator","  // in Safari 9 which returns 'object' for typed arrays and other constructors.","  var tag = baseGetTag(value);","  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;","}","","/** Used as references for various `Number` constants. */","var MAX_SAFE_INTEGER = 9007199254740991;","","/**"," * Checks if `value` is a valid array-like length."," *"," * **Note:** This method is loosely based on"," * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength)."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a valid length, else `false`."," * @example"," *"," * _.isLength(3);"," * // => true"," *"," * _.isLength(Number.MIN_VALUE);"," * // => false"," *"," * _.isLength(Infinity);"," * // => false"," *"," * _.isLength('3');"," * // => false"," */","function isLength(value) {","  return typeof value == 'number' &&","    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;","}","","/**"," * Checks if `value` is array-like. A value is considered array-like if it's"," * not a function and has a `value.length` that's an integer greater than or"," * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is array-like, else `false`."," * @example"," *"," * _.isArrayLike([1, 2, 3]);"," * // => true"," *"," * _.isArrayLike(document.body.children);"," * // => true"," *"," * _.isArrayLike('abc');"," * // => true"," *"," * _.isArrayLike(_.noop);"," * // => false"," */","function isArrayLike(value) {","  return value != null && isLength(value.length) && !isFunction(value);","}","","// A temporary value used to identify if the loop should be broken.","// See #1064, #1293","var breakLoop = {};","","/**"," * This method returns `undefined`."," *"," * @static"," * @memberOf _"," * @since 2.3.0"," * @category Util"," * @example"," *"," * _.times(2, _.noop);"," * // => [undefined, undefined]"," */","function noop() {","  // No operation performed.","}","","function once(fn) {","    return function () {","        if (fn === null) return;","        var callFn = fn;","        fn = null;","        callFn.apply(this, arguments);","    };","}","","var iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;","","var getIterator = function (coll) {","    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();","};","","/**"," * The base implementation of `_.times` without support for iteratee shorthands"," * or max array length checks."," *"," * @private"," * @param {number} n The number of times to invoke `iteratee`."," * @param {Function} iteratee The function invoked per iteration."," * @returns {Array} Returns the array of results."," */","function baseTimes(n, iteratee) {","  var index = -1,","      result = Array(n);","","  while (++index < n) {","    result[index] = iteratee(index);","  }","  return result;","}","","/**"," * Checks if `value` is object-like. A value is object-like if it's not `null`"," * and has a `typeof` result of \"object\"."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is object-like, else `false`."," * @example"," *"," * _.isObjectLike({});"," * // => true"," *"," * _.isObjectLike([1, 2, 3]);"," * // => true"," *"," * _.isObjectLike(_.noop);"," * // => false"," *"," * _.isObjectLike(null);"," * // => false"," */","function isObjectLike(value) {","  return value != null && typeof value == 'object';","}","","/** `Object#toString` result references. */","var argsTag = '[object Arguments]';","","/**"," * The base implementation of `_.isArguments`."," *"," * @private"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is an `arguments` object,"," */","function baseIsArguments(value) {","  return isObjectLike(value) && baseGetTag(value) == argsTag;","}","","/** Used for built-in method references. */","var objectProto$3 = Object.prototype;","","/** Used to check objects for own properties. */","var hasOwnProperty$2 = objectProto$3.hasOwnProperty;","","/** Built-in value references. */","var propertyIsEnumerable = objectProto$3.propertyIsEnumerable;","","/**"," * Checks if `value` is likely an `arguments` object."," *"," * @static"," * @memberOf _"," * @since 0.1.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is an `arguments` object,"," *  else `false`."," * @example"," *"," * _.isArguments(function() { return arguments; }());"," * // => true"," *"," * _.isArguments([1, 2, 3]);"," * // => false"," */","var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {","  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&","    !propertyIsEnumerable.call(value, 'callee');","};","","/**"," * Checks if `value` is classified as an `Array` object."," *"," * @static"," * @memberOf _"," * @since 0.1.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is an array, else `false`."," * @example"," *"," * _.isArray([1, 2, 3]);"," * // => true"," *"," * _.isArray(document.body.children);"," * // => false"," *"," * _.isArray('abc');"," * // => false"," *"," * _.isArray(_.noop);"," * // => false"," */","var isArray = Array.isArray;","","/**"," * This method returns `false`."," *"," * @static"," * @memberOf _"," * @since 4.13.0"," * @category Util"," * @returns {boolean} Returns `false`."," * @example"," *"," * _.times(2, _.stubFalse);"," * // => [false, false]"," */","function stubFalse() {","  return false;","}","","/** Detect free variable `exports`. */","var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;","","/** Detect free variable `module`. */","var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;","","/** Detect the popular CommonJS extension `module.exports`. */","var moduleExports = freeModule && freeModule.exports === freeExports;","","/** Built-in value references. */","var Buffer = moduleExports ? root.Buffer : undefined;","","/* Built-in method references for those with the same name as other `lodash` methods. */","var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;","","/**"," * Checks if `value` is a buffer."," *"," * @static"," * @memberOf _"," * @since 4.3.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a buffer, else `false`."," * @example"," *"," * _.isBuffer(new Buffer(2));"," * // => true"," *"," * _.isBuffer(new Uint8Array(2));"," * // => false"," */","var isBuffer = nativeIsBuffer || stubFalse;","","/** Used as references for various `Number` constants. */","var MAX_SAFE_INTEGER$1 = 9007199254740991;","","/** Used to detect unsigned integer values. */","var reIsUint = /^(?:0|[1-9]\\d*)$/;","","/**"," * Checks if `value` is a valid array-like index."," *"," * @private"," * @param {*} value The value to check."," * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index."," * @returns {boolean} Returns `true` if `value` is a valid index, else `false`."," */","function isIndex(value, length) {","  length = length == null ? MAX_SAFE_INTEGER$1 : length;","  return !!length &&","    (typeof value == 'number' || reIsUint.test(value)) &&","    (value > -1 && value % 1 == 0 && value < length);","}","","/** `Object#toString` result references. */","var argsTag$1 = '[object Arguments]';","var arrayTag = '[object Array]';","var boolTag = '[object Boolean]';","var dateTag = '[object Date]';","var errorTag = '[object Error]';","var funcTag$1 = '[object Function]';","var mapTag = '[object Map]';","var numberTag = '[object Number]';","var objectTag = '[object Object]';","var regexpTag = '[object RegExp]';","var setTag = '[object Set]';","var stringTag = '[object String]';","var weakMapTag = '[object WeakMap]';","","var arrayBufferTag = '[object ArrayBuffer]';","var dataViewTag = '[object DataView]';","var float32Tag = '[object Float32Array]';","var float64Tag = '[object Float64Array]';","var int8Tag = '[object Int8Array]';","var int16Tag = '[object Int16Array]';","var int32Tag = '[object Int32Array]';","var uint8Tag = '[object Uint8Array]';","var uint8ClampedTag = '[object Uint8ClampedArray]';","var uint16Tag = '[object Uint16Array]';","var uint32Tag = '[object Uint32Array]';","","/** Used to identify `toStringTag` values of typed arrays. */","var typedArrayTags = {};","typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =","typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =","typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =","typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =","typedArrayTags[uint32Tag] = true;","typedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =","typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =","typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =","typedArrayTags[errorTag] = typedArrayTags[funcTag$1] =","typedArrayTags[mapTag] = typedArrayTags[numberTag] =","typedArrayTags[objectTag] = typedArrayTags[regexpTag] =","typedArrayTags[setTag] = typedArrayTags[stringTag] =","typedArrayTags[weakMapTag] = false;","","/**"," * The base implementation of `_.isTypedArray` without Node.js optimizations."," *"," * @private"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a typed array, else `false`."," */","function baseIsTypedArray(value) {","  return isObjectLike(value) &&","    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];","}","","/**"," * The base implementation of `_.unary` without support for storing metadata."," *"," * @private"," * @param {Function} func The function to cap arguments for."," * @returns {Function} Returns the new capped function."," */","function baseUnary(func) {","  return function(value) {","    return func(value);","  };","}","","/** Detect free variable `exports`. */","var freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;","","/** Detect free variable `module`. */","var freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;","","/** Detect the popular CommonJS extension `module.exports`. */","var moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;","","/** Detect free variable `process` from Node.js. */","var freeProcess = moduleExports$1 && freeGlobal.process;","","/** Used to access faster Node.js helpers. */","var nodeUtil = (function() {","  try {","    return freeProcess && freeProcess.binding && freeProcess.binding('util');","  } catch (e) {}","}());","","/* Node.js helper references. */","var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;","","/**"," * Checks if `value` is classified as a typed array."," *"," * @static"," * @memberOf _"," * @since 3.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a typed array, else `false`."," * @example"," *"," * _.isTypedArray(new Uint8Array);"," * // => true"," *"," * _.isTypedArray([]);"," * // => false"," */","var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;","","/** Used for built-in method references. */","var objectProto$2 = Object.prototype;","","/** Used to check objects for own properties. */","var hasOwnProperty$1 = objectProto$2.hasOwnProperty;","","/**"," * Creates an array of the enumerable property names of the array-like `value`."," *"," * @private"," * @param {*} value The value to query."," * @param {boolean} inherited Specify returning inherited property names."," * @returns {Array} Returns the array of property names."," */","function arrayLikeKeys(value, inherited) {","  var isArr = isArray(value),","      isArg = !isArr && isArguments(value),","      isBuff = !isArr && !isArg && isBuffer(value),","      isType = !isArr && !isArg && !isBuff && isTypedArray(value),","      skipIndexes = isArr || isArg || isBuff || isType,","      result = skipIndexes ? baseTimes(value.length, String) : [],","      length = result.length;","","  for (var key in value) {","    if ((inherited || hasOwnProperty$1.call(value, key)) &&","        !(skipIndexes && (","           // Safari 9 has enumerable `arguments.length` in strict mode.","           key == 'length' ||","           // Node.js 0.10 has enumerable non-index properties on buffers.","           (isBuff && (key == 'offset' || key == 'parent')) ||","           // PhantomJS 2 has enumerable non-index properties on typed arrays.","           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||","           // Skip index properties.","           isIndex(key, length)","        ))) {","      result.push(key);","    }","  }","  return result;","}","","/** Used for built-in method references. */","var objectProto$5 = Object.prototype;","","/**"," * Checks if `value` is likely a prototype object."," *"," * @private"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a prototype, else `false`."," */","function isPrototype(value) {","  var Ctor = value && value.constructor,","      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;","","  return value === proto;","}","","/**"," * Creates a unary function that invokes `func` with its argument transformed."," *"," * @private"," * @param {Function} func The function to wrap."," * @param {Function} transform The argument transform."," * @returns {Function} Returns the new function."," */","function overArg(func, transform) {","  return function(arg) {","    return func(transform(arg));","  };","}","","/* Built-in method references for those with the same name as other `lodash` methods. */","var nativeKeys = overArg(Object.keys, Object);","","/** Used for built-in method references. */","var objectProto$4 = Object.prototype;","","/** Used to check objects for own properties. */","var hasOwnProperty$3 = objectProto$4.hasOwnProperty;","","/**"," * The base implementation of `_.keys` which doesn't treat sparse arrays as dense."," *"," * @private"," * @param {Object} object The object to query."," * @returns {Array} Returns the array of property names."," */","function baseKeys(object) {","  if (!isPrototype(object)) {","    return nativeKeys(object);","  }","  var result = [];","  for (var key in Object(object)) {","    if (hasOwnProperty$3.call(object, key) && key != 'constructor') {","      result.push(key);","    }","  }","  return result;","}","","/**"," * Creates an array of the own enumerable property names of `object`."," *"," * **Note:** Non-object values are coerced to objects. See the"," * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)"," * for more details."," *"," * @static"," * @since 0.1.0"," * @memberOf _"," * @category Object"," * @param {Object} object The object to query."," * @returns {Array} Returns the array of property names."," * @example"," *"," * function Foo() {"," *   this.a = 1;"," *   this.b = 2;"," * }"," *"," * Foo.prototype.c = 3;"," *"," * _.keys(new Foo);"," * // => ['a', 'b'] (iteration order is not guaranteed)"," *"," * _.keys('hi');"," * // => ['0', '1']"," */","function keys(object) {","  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);","}","","function createArrayIterator(coll) {","    var i = -1;","    var len = coll.length;","    return function next() {","        return ++i < len ? { value: coll[i], key: i } : null;","    };","}","","function createES2015Iterator(iterator) {","    var i = -1;","    return function next() {","        var item = iterator.next();","        if (item.done) return null;","        i++;","        return { value: item.value, key: i };","    };","}","","function createObjectIterator(obj) {","    var okeys = keys(obj);","    var i = -1;","    var len = okeys.length;","    return function next() {","        var key = okeys[++i];","        return i < len ? { value: obj[key], key: key } : null;","    };","}","","function iterator(coll) {","    if (isArrayLike(coll)) {","        return createArrayIterator(coll);","    }","","    var iterator = getIterator(coll);","    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);","}","","function onlyOnce(fn) {","    return function () {","        if (fn === null) throw new Error(\"Callback was already called.\");","        var callFn = fn;","        fn = null;","        callFn.apply(this, arguments);","    };","}","","function _eachOfLimit(limit) {","    return function (obj, iteratee, callback) {","        callback = once(callback || noop);","        if (limit <= 0 || !obj) {","            return callback(null);","        }","        var nextElem = iterator(obj);","        var done = false;","        var running = 0;","","        function iterateeCallback(err, value) {","            running -= 1;","            if (err) {","                done = true;","                callback(err);","            } else if (value === breakLoop || done && running <= 0) {","                done = true;","                return callback(null);","            } else {","                replenish();","            }","        }","","        function replenish() {","            while (running < limit && !done) {","                var elem = nextElem();","                if (elem === null) {","                    done = true;","                    if (running <= 0) {","                        callback(null);","                    }","                    return;","                }","                running += 1;","                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));","            }","        }","","        replenish();","    };","}","","/**"," * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name eachOfLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.eachOf]{@link module:Collections.eachOf}"," * @alias forEachOfLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - A function to apply to each"," * item in `coll`. The `key` is the item's key, or index in the case of an"," * array. The iteratee is passed a `callback(err)` which must be called once it"," * has completed. If no error has occurred, the callback should be run without"," * arguments or with an explicit `null` argument. Invoked with"," * (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","function eachOfLimit(coll, limit, iteratee, callback) {","  _eachOfLimit(limit)(coll, iteratee, callback);","}","","function doLimit(fn, limit) {","    return function (iterable, iteratee, callback) {","        return fn(iterable, limit, iteratee, callback);","    };","}","","// eachOf implementation optimized for array-likes","function eachOfArrayLike(coll, iteratee, callback) {","    callback = once(callback || noop);","    var index = 0,","        completed = 0,","        length = coll.length;","    if (length === 0) {","        callback(null);","    }","","    function iteratorCallback(err, value) {","        if (err) {","            callback(err);","        } else if (++completed === length || value === breakLoop) {","            callback(null);","        }","    }","","    for (; index < length; index++) {","        iteratee(coll[index], index, onlyOnce(iteratorCallback));","    }","}","","// a generic version of eachOf which can handle array, object, and iterator cases.","var eachOfGeneric = doLimit(eachOfLimit, Infinity);","","/**"," * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument"," * to the iteratee."," *"," * @name eachOf"," * @static"," * @memberOf module:Collections"," * @method"," * @alias forEachOf"," * @category Collection"," * @see [async.each]{@link module:Collections.each}"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A function to apply to each"," * item in `coll`. The `key` is the item's key, or index in the case of an"," * array. The iteratee is passed a `callback(err)` which must be called once it"," * has completed. If no error has occurred, the callback should be run without"," * arguments or with an explicit `null` argument. Invoked with"," * (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," * @example"," *"," * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};"," * var configs = {};"," *"," * async.forEachOf(obj, function (value, key, callback) {"," *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {"," *         if (err) return callback(err);"," *         try {"," *             configs[key] = JSON.parse(data);"," *         } catch (e) {"," *             return callback(e);"," *         }"," *         callback();"," *     });"," * }, function (err) {"," *     if (err) console.error(err.message);"," *     // configs is now a map of JSON data"," *     doSomethingWith(configs);"," * });"," */","var eachOf = function (coll, iteratee, callback) {","    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;","    eachOfImplementation(coll, iteratee, callback);","};","","function doParallel(fn) {","    return function (obj, iteratee, callback) {","        return fn(eachOf, obj, iteratee, callback);","    };","}","","function _asyncMap(eachfn, arr, iteratee, callback) {","    callback = callback || noop;","    arr = arr || [];","    var results = [];","    var counter = 0;","","    eachfn(arr, function (value, _, callback) {","        var index = counter++;","        iteratee(value, function (err, v) {","            results[index] = v;","            callback(err);","        });","    }, function (err) {","        callback(err, results);","    });","}","","/**"," * Produces a new collection of values by mapping each value in `coll` through"," * the `iteratee` function. The `iteratee` is called with an item from `coll`"," * and a callback for when it has finished processing. Each of these callback"," * takes 2 arguments: an `error`, and the transformed item from `coll`. If"," * `iteratee` passes an error to its callback, the main `callback` (for the"," * `map` function) is immediately called with the error."," *"," * Note, that since this function applies the `iteratee` to each item in"," * parallel, there is no guarantee that the `iteratee` functions will complete"," * in order. However, the results array will be in the same order as the"," * original `coll`."," *"," * If `map` is passed an Object, the results will be an Array.  The results"," * will roughly be in the order of the original Objects' keys (but this can"," * vary across JavaScript engines)"," *"," * @name map"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A function to apply to each item in `coll`."," * The iteratee is passed a `callback(err, transformed)` which must be called"," * once it has completed with an error (which can be `null`) and a"," * transformed item. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Results is an Array of the"," * transformed items from the `coll`. Invoked with (err, results)."," * @example"," *"," * async.map(['file1','file2','file3'], fs.stat, function(err, results) {"," *     // results is now an array of stats for each file"," * });"," */","var map = doParallel(_asyncMap);","","/**"," * Applies the provided arguments to each function in the array, calling"," * `callback` after all functions have completed. If you only provide the first"," * argument, `fns`, then it will return a function which lets you pass in the"," * arguments as if it were a single function call. If more arguments are"," * provided, `callback` is required while `args` is still optional."," *"," * @name applyEach"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} fns - A collection of asynchronous functions"," * to all call with the same arguments"," * @param {...*} [args] - any number of separate arguments to pass to the"," * function."," * @param {Function} [callback] - the final argument should be the callback,"," * called when all functions have completed processing."," * @returns {Function} - If only the first argument, `fns`, is provided, it will"," * return a function which lets you pass in the arguments as if it were a single"," * function call. The signature is `(..args, callback)`. If invoked with any"," * arguments, `callback` is required."," * @example"," *"," * async.applyEach([enableSearch, updateSchema], 'bucket', callback);"," *"," * // partial application example:"," * async.each("," *     buckets,"," *     async.applyEach([enableSearch, updateSchema]),"," *     callback"," * );"," */","var applyEach = applyEach$1(map);","","function doParallelLimit(fn) {","    return function (obj, limit, iteratee, callback) {","        return fn(_eachOfLimit(limit), obj, iteratee, callback);","    };","}","","/**"," * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time."," *"," * @name mapLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.map]{@link module:Collections.map}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - A function to apply to each item in `coll`."," * The iteratee is passed a `callback(err, transformed)` which must be called"," * once it has completed with an error (which can be `null`) and a transformed"," * item. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Results is an array of the"," * transformed items from the `coll`. Invoked with (err, results)."," */","var mapLimit = doParallelLimit(_asyncMap);","","/**"," * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time."," *"," * @name mapSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.map]{@link module:Collections.map}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A function to apply to each item in `coll`."," * The iteratee is passed a `callback(err, transformed)` which must be called"," * once it has completed with an error (which can be `null`) and a"," * transformed item. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Results is an array of the"," * transformed items from the `coll`. Invoked with (err, results)."," */","var mapSeries = doLimit(mapLimit, 1);","","/**"," * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time."," *"," * @name applyEachSeries"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.applyEach]{@link module:ControlFlow.applyEach}"," * @category Control Flow"," * @param {Array|Iterable|Object} fns - A collection of asynchronous functions to all"," * call with the same arguments"," * @param {...*} [args] - any number of separate arguments to pass to the"," * function."," * @param {Function} [callback] - the final argument should be the callback,"," * called when all functions have completed processing."," * @returns {Function} - If only the first argument is provided, it will return"," * a function which lets you pass in the arguments as if it were a single"," * function call."," */","var applyEachSeries = applyEach$1(mapSeries);","","/**"," * Creates a continuation function with some arguments already applied."," *"," * Useful as a shorthand when combined with other control flow functions. Any"," * arguments passed to the returned function are added to the arguments"," * originally passed to apply."," *"," * @name apply"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {Function} function - The function you want to eventually apply all"," * arguments to. Invokes with (arguments...)."," * @param {...*} arguments... - Any number of arguments to automatically apply"," * when the continuation is called."," * @example"," *"," * // using apply"," * async.parallel(["," *     async.apply(fs.writeFile, 'testfile1', 'test1'),"," *     async.apply(fs.writeFile, 'testfile2', 'test2')"," * ]);"," *"," *"," * // the same process without using apply"," * async.parallel(["," *     function(callback) {"," *         fs.writeFile('testfile1', 'test1', callback);"," *     },"," *     function(callback) {"," *         fs.writeFile('testfile2', 'test2', callback);"," *     }"," * ]);"," *"," * // It's possible to pass any number of additional arguments when calling the"," * // continuation:"," *"," * node> var fn = async.apply(sys.puts, 'one');"," * node> fn('two', 'three');"," * one"," * two"," * three"," */","var apply$2 = rest(function (fn, args) {","    return rest(function (callArgs) {","        return fn.apply(null, args.concat(callArgs));","    });","});","","/**"," * Take a sync function and make it async, passing its return value to a"," * callback. This is useful for plugging sync functions into a waterfall,"," * series, or other async functions. Any arguments passed to the generated"," * function will be passed to the wrapped function (except for the final"," * callback argument). Errors thrown will be passed to the callback."," *"," * If the function passed to `asyncify` returns a Promise, that promises's"," * resolved/rejected state will be used to call the callback, rather than simply"," * the synchronous return value."," *"," * This also means you can asyncify ES2016 `async` functions."," *"," * @name asyncify"," * @static"," * @memberOf module:Utils"," * @method"," * @alias wrapSync"," * @category Util"," * @param {Function} func - The synchronous function to convert to an"," * asynchronous function."," * @returns {Function} An asynchronous wrapper of the `func`. To be invoked with"," * (callback)."," * @example"," *"," * // passing a regular synchronous function"," * async.waterfall(["," *     async.apply(fs.readFile, filename, \"utf8\"),"," *     async.asyncify(JSON.parse),"," *     function (data, next) {"," *         // data is the result of parsing the text."," *         // If there was a parsing error, it would have been caught."," *     }"," * ], callback);"," *"," * // passing a function returning a promise"," * async.waterfall(["," *     async.apply(fs.readFile, filename, \"utf8\"),"," *     async.asyncify(function (contents) {"," *         return db.model.create(contents);"," *     }),"," *     function (model, next) {"," *         // `model` is the instantiated model object."," *         // If there was an error, this function would be skipped."," *     }"," * ], callback);"," *"," * // es6 example"," * var q = async.queue(async.asyncify(async function(file) {"," *     var intermediateStep = await processFile(file);"," *     return await somePromise(intermediateStep)"," * }));"," *"," * q.push(files);"," */","function asyncify(func) {","    return initialParams(function (args, callback) {","        var result;","        try {","            result = func.apply(this, args);","        } catch (e) {","            return callback(e);","        }","        // if result is Promise object","        if (isObject(result) && typeof result.then === 'function') {","            result.then(function (value) {","                callback(null, value);","            }, function (err) {","                callback(err.message ? err : new Error(err));","            });","        } else {","            callback(null, result);","        }","    });","}","","/**"," * A specialized version of `_.forEach` for arrays without support for"," * iteratee shorthands."," *"," * @private"," * @param {Array} [array] The array to iterate over."," * @param {Function} iteratee The function invoked per iteration."," * @returns {Array} Returns `array`."," */","function arrayEach(array, iteratee) {","  var index = -1,","      length = array == null ? 0 : array.length;","","  while (++index < length) {","    if (iteratee(array[index], index, array) === false) {","      break;","    }","  }","  return array;","}","","/**"," * Creates a base function for methods like `_.forIn` and `_.forOwn`."," *"," * @private"," * @param {boolean} [fromRight] Specify iterating from right to left."," * @returns {Function} Returns the new base function."," */","function createBaseFor(fromRight) {","  return function(object, iteratee, keysFunc) {","    var index = -1,","        iterable = Object(object),","        props = keysFunc(object),","        length = props.length;","","    while (length--) {","      var key = props[fromRight ? length : ++index];","      if (iteratee(iterable[key], key, iterable) === false) {","        break;","      }","    }","    return object;","  };","}","","/**"," * The base implementation of `baseForOwn` which iterates over `object`"," * properties returned by `keysFunc` and invokes `iteratee` for each property."," * Iteratee functions may exit iteration early by explicitly returning `false`."," *"," * @private"," * @param {Object} object The object to iterate over."," * @param {Function} iteratee The function invoked per iteration."," * @param {Function} keysFunc The function to get the keys of `object`."," * @returns {Object} Returns `object`."," */","var baseFor = createBaseFor();","","/**"," * The base implementation of `_.forOwn` without support for iteratee shorthands."," *"," * @private"," * @param {Object} object The object to iterate over."," * @param {Function} iteratee The function invoked per iteration."," * @returns {Object} Returns `object`."," */","function baseForOwn(object, iteratee) {","  return object && baseFor(object, iteratee, keys);","}","","/**"," * The base implementation of `_.findIndex` and `_.findLastIndex` without"," * support for iteratee shorthands."," *"," * @private"," * @param {Array} array The array to inspect."," * @param {Function} predicate The function invoked per iteration."," * @param {number} fromIndex The index to search from."," * @param {boolean} [fromRight] Specify iterating from right to left."," * @returns {number} Returns the index of the matched value, else `-1`."," */","function baseFindIndex(array, predicate, fromIndex, fromRight) {","  var length = array.length,","      index = fromIndex + (fromRight ? 1 : -1);","","  while ((fromRight ? index-- : ++index < length)) {","    if (predicate(array[index], index, array)) {","      return index;","    }","  }","  return -1;","}","","/**"," * The base implementation of `_.isNaN` without support for number objects."," *"," * @private"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`."," */","function baseIsNaN(value) {","  return value !== value;","}","","/**"," * A specialized version of `_.indexOf` which performs strict equality"," * comparisons of values, i.e. `===`."," *"," * @private"," * @param {Array} array The array to inspect."," * @param {*} value The value to search for."," * @param {number} fromIndex The index to search from."," * @returns {number} Returns the index of the matched value, else `-1`."," */","function strictIndexOf(array, value, fromIndex) {","  var index = fromIndex - 1,","      length = array.length;","","  while (++index < length) {","    if (array[index] === value) {","      return index;","    }","  }","  return -1;","}","","/**"," * The base implementation of `_.indexOf` without `fromIndex` bounds checks."," *"," * @private"," * @param {Array} array The array to inspect."," * @param {*} value The value to search for."," * @param {number} fromIndex The index to search from."," * @returns {number} Returns the index of the matched value, else `-1`."," */","function baseIndexOf(array, value, fromIndex) {","  return value === value","    ? strictIndexOf(array, value, fromIndex)","    : baseFindIndex(array, baseIsNaN, fromIndex);","}","","/**"," * Determines the best order for running the functions in `tasks`, based on"," * their requirements. Each function can optionally depend on other functions"," * being completed first, and each function is run as soon as its requirements"," * are satisfied."," *"," * If any of the functions pass an error to their callback, the `auto` sequence"," * will stop. Further tasks will not execute (so any other functions depending"," * on it will not run), and the main `callback` is immediately called with the"," * error."," *"," * Functions also receive an object containing the results of functions which"," * have completed so far as the first argument, if they have dependencies. If a"," * task function has no dependencies, it will only be passed a callback."," *"," * @name auto"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Object} tasks - An object. Each of its properties is either a"," * function or an array of requirements, with the function itself the last item"," * in the array. The object's key of a property serves as the name of the task"," * defined by that property, i.e. can be used when specifying requirements for"," * other tasks. The function receives one or two arguments:"," * * a `results` object, containing the results of the previously executed"," *   functions, only passed if the task has any dependencies,"," * * a `callback(err, result)` function, which must be called when finished,"," *   passing an `error` (which can be `null`) and the result of the function's"," *   execution."," * @param {number} [concurrency=Infinity] - An optional `integer` for"," * determining the maximum number of tasks that can be run in parallel. By"," * default, as many as possible."," * @param {Function} [callback] - An optional callback which is called when all"," * the tasks have been completed. It receives the `err` argument if any `tasks`"," * pass an error to their callback. Results are always returned; however, if an"," * error occurs, no further `tasks` will be performed, and the results object"," * will only contain partial results. Invoked with (err, results)."," * @returns undefined"," * @example"," *"," * async.auto({"," *     // this function will just be passed a callback"," *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),"," *     showData: ['readData', function(results, cb) {"," *         // results.readData is the file's contents"," *         // ..."," *     }]"," * }, callback);"," *"," * async.auto({"," *     get_data: function(callback) {"," *         console.log('in get_data');"," *         // async code to get some data"," *         callback(null, 'data', 'converted to array');"," *     },"," *     make_folder: function(callback) {"," *         console.log('in make_folder');"," *         // async code to create a directory to store a file in"," *         // this is run at the same time as getting the data"," *         callback(null, 'folder');"," *     },"," *     write_file: ['get_data', 'make_folder', function(results, callback) {"," *         console.log('in write_file', JSON.stringify(results));"," *         // once there is some data and the directory exists,"," *         // write the data to a file in the directory"," *         callback(null, 'filename');"," *     }],"," *     email_link: ['write_file', function(results, callback) {"," *         console.log('in email_link', JSON.stringify(results));"," *         // once the file is written let's email a link to it..."," *         // results.write_file contains the filename returned by write_file."," *         callback(null, {'file':results.write_file, 'email':'user@example.com'});"," *     }]"," * }, function(err, results) {"," *     console.log('err = ', err);"," *     console.log('results = ', results);"," * });"," */","var auto = function (tasks, concurrency, callback) {","    if (typeof concurrency === 'function') {","        // concurrency is optional, shift the args.","        callback = concurrency;","        concurrency = null;","    }","    callback = once(callback || noop);","    var keys$$1 = keys(tasks);","    var numTasks = keys$$1.length;","    if (!numTasks) {","        return callback(null);","    }","    if (!concurrency) {","        concurrency = numTasks;","    }","","    var results = {};","    var runningTasks = 0;","    var hasError = false;","","    var listeners = Object.create(null);","","    var readyTasks = [];","","    // for cycle detection:","    var readyToCheck = []; // tasks that have been identified as reachable","    // without the possibility of returning to an ancestor task","    var uncheckedDependencies = {};","","    baseForOwn(tasks, function (task, key) {","        if (!isArray(task)) {","            // no dependencies","            enqueueTask(key, [task]);","            readyToCheck.push(key);","            return;","        }","","        var dependencies = task.slice(0, task.length - 1);","        var remainingDependencies = dependencies.length;","        if (remainingDependencies === 0) {","            enqueueTask(key, task);","            readyToCheck.push(key);","            return;","        }","        uncheckedDependencies[key] = remainingDependencies;","","        arrayEach(dependencies, function (dependencyName) {","            if (!tasks[dependencyName]) {","                throw new Error('async.auto task `' + key + '` has a non-existent dependency `' + dependencyName + '` in ' + dependencies.join(', '));","            }","            addListener(dependencyName, function () {","                remainingDependencies--;","                if (remainingDependencies === 0) {","                    enqueueTask(key, task);","                }","            });","        });","    });","","    checkForDeadlocks();","    processQueue();","","    function enqueueTask(key, task) {","        readyTasks.push(function () {","            runTask(key, task);","        });","    }","","    function processQueue() {","        if (readyTasks.length === 0 && runningTasks === 0) {","            return callback(null, results);","        }","        while (readyTasks.length && runningTasks < concurrency) {","            var run = readyTasks.shift();","            run();","        }","    }","","    function addListener(taskName, fn) {","        var taskListeners = listeners[taskName];","        if (!taskListeners) {","            taskListeners = listeners[taskName] = [];","        }","","        taskListeners.push(fn);","    }","","    function taskComplete(taskName) {","        var taskListeners = listeners[taskName] || [];","        arrayEach(taskListeners, function (fn) {","            fn();","        });","        processQueue();","    }","","    function runTask(key, task) {","        if (hasError) return;","","        var taskCallback = onlyOnce(rest(function (err, args) {","            runningTasks--;","            if (args.length <= 1) {","                args = args[0];","            }","            if (err) {","                var safeResults = {};","                baseForOwn(results, function (val, rkey) {","                    safeResults[rkey] = val;","                });","                safeResults[key] = args;","                hasError = true;","                listeners = Object.create(null);","","                callback(err, safeResults);","            } else {","                results[key] = args;","                taskComplete(key);","            }","        }));","","        runningTasks++;","        var taskFn = task[task.length - 1];","        if (task.length > 1) {","            taskFn(results, taskCallback);","        } else {","            taskFn(taskCallback);","        }","    }","","    function checkForDeadlocks() {","        // Kahn's algorithm","        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm","        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html","        var currentTask;","        var counter = 0;","        while (readyToCheck.length) {","            currentTask = readyToCheck.pop();","            counter++;","            arrayEach(getDependents(currentTask), function (dependent) {","                if (--uncheckedDependencies[dependent] === 0) {","                    readyToCheck.push(dependent);","                }","            });","        }","","        if (counter !== numTasks) {","            throw new Error('async.auto cannot execute tasks due to a recursive dependency');","        }","    }","","    function getDependents(taskName) {","        var result = [];","        baseForOwn(tasks, function (task, key) {","            if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {","                result.push(key);","            }","        });","        return result;","    }","};","","/**"," * A specialized version of `_.map` for arrays without support for iteratee"," * shorthands."," *"," * @private"," * @param {Array} [array] The array to iterate over."," * @param {Function} iteratee The function invoked per iteration."," * @returns {Array} Returns the new mapped array."," */","function arrayMap(array, iteratee) {","  var index = -1,","      length = array == null ? 0 : array.length,","      result = Array(length);","","  while (++index < length) {","    result[index] = iteratee(array[index], index, array);","  }","  return result;","}","","/** `Object#toString` result references. */","var symbolTag = '[object Symbol]';","","/**"," * Checks if `value` is classified as a `Symbol` primitive or object."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a symbol, else `false`."," * @example"," *"," * _.isSymbol(Symbol.iterator);"," * // => true"," *"," * _.isSymbol('abc');"," * // => false"," */","function isSymbol(value) {","  return typeof value == 'symbol' ||","    (isObjectLike(value) && baseGetTag(value) == symbolTag);","}","","/** Used as references for various `Number` constants. */","var INFINITY = 1 / 0;","","/** Used to convert symbols to primitives and strings. */","var symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;","var symbolToString = symbolProto ? symbolProto.toString : undefined;","","/**"," * The base implementation of `_.toString` which doesn't convert nullish"," * values to empty strings."," *"," * @private"," * @param {*} value The value to process."," * @returns {string} Returns the string."," */","function baseToString(value) {","  // Exit early for strings to avoid a performance hit in some environments.","  if (typeof value == 'string') {","    return value;","  }","  if (isArray(value)) {","    // Recursively convert values (susceptible to call stack limits).","    return arrayMap(value, baseToString) + '';","  }","  if (isSymbol(value)) {","    return symbolToString ? symbolToString.call(value) : '';","  }","  var result = (value + '');","  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;","}","","/**"," * The base implementation of `_.slice` without an iteratee call guard."," *"," * @private"," * @param {Array} array The array to slice."," * @param {number} [start=0] The start position."," * @param {number} [end=array.length] The end position."," * @returns {Array} Returns the slice of `array`."," */","function baseSlice(array, start, end) {","  var index = -1,","      length = array.length;","","  if (start < 0) {","    start = -start > length ? 0 : (length + start);","  }","  end = end > length ? length : end;","  if (end < 0) {","    end += length;","  }","  length = start > end ? 0 : ((end - start) >>> 0);","  start >>>= 0;","","  var result = Array(length);","  while (++index < length) {","    result[index] = array[index + start];","  }","  return result;","}","","/**"," * Casts `array` to a slice if it's needed."," *"," * @private"," * @param {Array} array The array to inspect."," * @param {number} start The start position."," * @param {number} [end=array.length] The end position."," * @returns {Array} Returns the cast slice."," */","function castSlice(array, start, end) {","  var length = array.length;","  end = end === undefined ? length : end;","  return (!start && end >= length) ? array : baseSlice(array, start, end);","}","","/**"," * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol"," * that is not found in the character symbols."," *"," * @private"," * @param {Array} strSymbols The string symbols to inspect."," * @param {Array} chrSymbols The character symbols to find."," * @returns {number} Returns the index of the last unmatched string symbol."," */","function charsEndIndex(strSymbols, chrSymbols) {","  var index = strSymbols.length;","","  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}","  return index;","}","","/**"," * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol"," * that is not found in the character symbols."," *"," * @private"," * @param {Array} strSymbols The string symbols to inspect."," * @param {Array} chrSymbols The character symbols to find."," * @returns {number} Returns the index of the first unmatched string symbol."," */","function charsStartIndex(strSymbols, chrSymbols) {","  var index = -1,","      length = strSymbols.length;","","  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}","  return index;","}","","/**"," * Converts an ASCII `string` to an array."," *"," * @private"," * @param {string} string The string to convert."," * @returns {Array} Returns the converted array."," */","function asciiToArray(string) {","  return string.split('');","}","","/** Used to compose unicode character classes. */","var rsAstralRange = '\\\\ud800-\\\\udfff';","var rsComboMarksRange = '\\\\u0300-\\\\u036f';","var reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f';","var rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff';","var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;","var rsVarRange = '\\\\ufe0e\\\\ufe0f';","","/** Used to compose unicode capture groups. */","var rsZWJ = '\\\\u200d';","","/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */","var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');","","/**"," * Checks if `string` contains Unicode symbols."," *"," * @private"," * @param {string} string The string to inspect."," * @returns {boolean} Returns `true` if a symbol is found, else `false`."," */","function hasUnicode(string) {","  return reHasUnicode.test(string);","}","","/** Used to compose unicode character classes. */","var rsAstralRange$1 = '\\\\ud800-\\\\udfff';","var rsComboMarksRange$1 = '\\\\u0300-\\\\u036f';","var reComboHalfMarksRange$1 = '\\\\ufe20-\\\\ufe2f';","var rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20ff';","var rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1;","var rsVarRange$1 = '\\\\ufe0e\\\\ufe0f';","","/** Used to compose unicode capture groups. */","var rsAstral = '[' + rsAstralRange$1 + ']';","var rsCombo = '[' + rsComboRange$1 + ']';","var rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';","var rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';","var rsNonAstral = '[^' + rsAstralRange$1 + ']';","var rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';","var rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';","var rsZWJ$1 = '\\\\u200d';","","/** Used to compose unicode regexes. */","var reOptMod = rsModifier + '?';","var rsOptVar = '[' + rsVarRange$1 + ']?';","var rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';","var rsSeq = rsOptVar + reOptMod + rsOptJoin;","var rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';","","/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */","var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');","","/**"," * Converts a Unicode `string` to an array."," *"," * @private"," * @param {string} string The string to convert."," * @returns {Array} Returns the converted array."," */","function unicodeToArray(string) {","  return string.match(reUnicode) || [];","}","","/**"," * Converts `string` to an array."," *"," * @private"," * @param {string} string The string to convert."," * @returns {Array} Returns the converted array."," */","function stringToArray(string) {","  return hasUnicode(string)","    ? unicodeToArray(string)","    : asciiToArray(string);","}","","/**"," * Converts `value` to a string. An empty string is returned for `null`"," * and `undefined` values. The sign of `-0` is preserved."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to convert."," * @returns {string} Returns the converted string."," * @example"," *"," * _.toString(null);"," * // => ''"," *"," * _.toString(-0);"," * // => '-0'"," *"," * _.toString([1, 2, 3]);"," * // => '1,2,3'"," */","function toString(value) {","  return value == null ? '' : baseToString(value);","}","","/** Used to match leading and trailing whitespace. */","var reTrim = /^\\s+|\\s+$/g;","","/**"," * Removes leading and trailing whitespace or specified characters from `string`."," *"," * @static"," * @memberOf _"," * @since 3.0.0"," * @category String"," * @param {string} [string=''] The string to trim."," * @param {string} [chars=whitespace] The characters to trim."," * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`."," * @returns {string} Returns the trimmed string."," * @example"," *"," * _.trim('  abc  ');"," * // => 'abc'"," *"," * _.trim('-_-abc-_-', '_-');"," * // => 'abc'"," *"," * _.map(['  foo  ', '  bar  '], _.trim);"," * // => ['foo', 'bar']"," */","function trim(string, chars, guard) {","  string = toString(string);","  if (string && (guard || chars === undefined)) {","    return string.replace(reTrim, '');","  }","  if (!string || !(chars = baseToString(chars))) {","    return string;","  }","  var strSymbols = stringToArray(string),","      chrSymbols = stringToArray(chars),","      start = charsStartIndex(strSymbols, chrSymbols),","      end = charsEndIndex(strSymbols, chrSymbols) + 1;","","  return castSlice(strSymbols, start, end).join('');","}","","var FN_ARGS = /^(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;","var FN_ARG_SPLIT = /,/;","var FN_ARG = /(=.+)?(\\s*)$/;","var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;","","function parseParams(func) {","    func = func.toString().replace(STRIP_COMMENTS, '');","    func = func.match(FN_ARGS)[2].replace(' ', '');","    func = func ? func.split(FN_ARG_SPLIT) : [];","    func = func.map(function (arg) {","        return trim(arg.replace(FN_ARG, ''));","    });","    return func;","}","","/**"," * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent"," * tasks are specified as parameters to the function, after the usual callback"," * parameter, with the parameter names matching the names of the tasks it"," * depends on. This can provide even more readable task graphs which can be"," * easier to maintain."," *"," * If a final callback is specified, the task results are similarly injected,"," * specified as named parameters after the initial error parameter."," *"," * The autoInject function is purely syntactic sugar and its semantics are"," * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}."," *"," * @name autoInject"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.auto]{@link module:ControlFlow.auto}"," * @category Control Flow"," * @param {Object} tasks - An object, each of whose properties is a function of"," * the form 'func([dependencies...], callback). The object's key of a property"," * serves as the name of the task defined by that property, i.e. can be used"," * when specifying requirements for other tasks."," * * The `callback` parameter is a `callback(err, result)` which must be called"," *   when finished, passing an `error` (which can be `null`) and the result of"," *   the function's execution. The remaining parameters name other tasks on"," *   which the task is dependent, and the results from those tasks are the"," *   arguments of those parameters."," * @param {Function} [callback] - An optional callback which is called when all"," * the tasks have been completed. It receives the `err` argument if any `tasks`"," * pass an error to their callback, and a `results` object with any completed"," * task results, similar to `auto`."," * @example"," *"," * //  The example from `auto` can be rewritten as follows:"," * async.autoInject({"," *     get_data: function(callback) {"," *         // async code to get some data"," *         callback(null, 'data', 'converted to array');"," *     },"," *     make_folder: function(callback) {"," *         // async code to create a directory to store a file in"," *         // this is run at the same time as getting the data"," *         callback(null, 'folder');"," *     },"," *     write_file: function(get_data, make_folder, callback) {"," *         // once there is some data and the directory exists,"," *         // write the data to a file in the directory"," *         callback(null, 'filename');"," *     },"," *     email_link: function(write_file, callback) {"," *         // once the file is written let's email a link to it..."," *         // write_file contains the filename returned by write_file."," *         callback(null, {'file':write_file, 'email':'user@example.com'});"," *     }"," * }, function(err, results) {"," *     console.log('err = ', err);"," *     console.log('email_link = ', results.email_link);"," * });"," *"," * // If you are using a JS minifier that mangles parameter names, `autoInject`"," * // will not work with plain functions, since the parameter names will be"," * // collapsed to a single letter identifier.  To work around this, you can"," * // explicitly specify the names of the parameters your task function needs"," * // in an array, similar to Angular.js dependency injection."," *"," * // This still has an advantage over plain `auto`, since the results a task"," * // depends on are still spread into arguments."," * async.autoInject({"," *     //..."," *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {"," *         callback(null, 'filename');"," *     }],"," *     email_link: ['write_file', function(write_file, callback) {"," *         callback(null, {'file':write_file, 'email':'user@example.com'});"," *     }]"," *     //..."," * }, function(err, results) {"," *     console.log('err = ', err);"," *     console.log('email_link = ', results.email_link);"," * });"," */","function autoInject(tasks, callback) {","    var newTasks = {};","","    baseForOwn(tasks, function (taskFn, key) {","        var params;","","        if (isArray(taskFn)) {","            params = taskFn.slice(0, -1);","            taskFn = taskFn[taskFn.length - 1];","","            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);","        } else if (taskFn.length === 1) {","            // no dependencies, use the function as-is","            newTasks[key] = taskFn;","        } else {","            params = parseParams(taskFn);","            if (taskFn.length === 0 && params.length === 0) {","                throw new Error(\"autoInject task functions require explicit parameters.\");","            }","","            params.pop();","","            newTasks[key] = params.concat(newTask);","        }","","        function newTask(results, taskCb) {","            var newArgs = arrayMap(params, function (name) {","                return results[name];","            });","            newArgs.push(taskCb);","            taskFn.apply(null, newArgs);","        }","    });","","    auto(newTasks, callback);","}","","var hasSetImmediate = typeof setImmediate === 'function' && setImmediate;","var hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';","","function fallback(fn) {","    setTimeout(fn, 0);","}","","function wrap(defer) {","    return rest(function (fn, args) {","        defer(function () {","            fn.apply(null, args);","        });","    });","}","","var _defer;","","if (hasSetImmediate) {","    _defer = setImmediate;","} else if (hasNextTick) {","    _defer = process.nextTick;","} else {","    _defer = fallback;","}","","var setImmediate$1 = wrap(_defer);","","// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation","// used for queues. This implementation assumes that the node provided by the user can be modified","// to adjust the next and last properties. We implement only the minimal functionality","// for queue support.","function DLL() {","    this.head = this.tail = null;","    this.length = 0;","}","","function setInitial(dll, node) {","    dll.length = 1;","    dll.head = dll.tail = node;","}","","DLL.prototype.removeLink = function (node) {","    if (node.prev) node.prev.next = node.next;else this.head = node.next;","    if (node.next) node.next.prev = node.prev;else this.tail = node.prev;","","    node.prev = node.next = null;","    this.length -= 1;","    return node;","};","","DLL.prototype.empty = DLL;","","DLL.prototype.insertAfter = function (node, newNode) {","    newNode.prev = node;","    newNode.next = node.next;","    if (node.next) node.next.prev = newNode;else this.tail = newNode;","    node.next = newNode;","    this.length += 1;","};","","DLL.prototype.insertBefore = function (node, newNode) {","    newNode.prev = node.prev;","    newNode.next = node;","    if (node.prev) node.prev.next = newNode;else this.head = newNode;","    node.prev = newNode;","    this.length += 1;","};","","DLL.prototype.unshift = function (node) {","    if (this.head) this.insertBefore(this.head, node);else setInitial(this, node);","};","","DLL.prototype.push = function (node) {","    if (this.tail) this.insertAfter(this.tail, node);else setInitial(this, node);","};","","DLL.prototype.shift = function () {","    return this.head && this.removeLink(this.head);","};","","DLL.prototype.pop = function () {","    return this.tail && this.removeLink(this.tail);","};","","function queue(worker, concurrency, payload) {","    if (concurrency == null) {","        concurrency = 1;","    } else if (concurrency === 0) {","        throw new Error('Concurrency must not be zero');","    }","","    function _insert(data, insertAtFront, callback) {","        if (callback != null && typeof callback !== 'function') {","            throw new Error('task callback must be a function');","        }","        q.started = true;","        if (!isArray(data)) {","            data = [data];","        }","        if (data.length === 0 && q.idle()) {","            // call drain immediately if there are no tasks","            return setImmediate$1(function () {","                q.drain();","            });","        }","","        for (var i = 0, l = data.length; i < l; i++) {","            var item = {","                data: data[i],","                callback: callback || noop","            };","","            if (insertAtFront) {","                q._tasks.unshift(item);","            } else {","                q._tasks.push(item);","            }","        }","        setImmediate$1(q.process);","    }","","    function _next(tasks) {","        return rest(function (args) {","            workers -= 1;","","            for (var i = 0, l = tasks.length; i < l; i++) {","                var task = tasks[i];","                var index = baseIndexOf(workersList, task, 0);","                if (index >= 0) {","                    workersList.splice(index);","                }","","                task.callback.apply(task, args);","","                if (args[0] != null) {","                    q.error(args[0], task.data);","                }","            }","","            if (workers <= q.concurrency - q.buffer) {","                q.unsaturated();","            }","","            if (q.idle()) {","                q.drain();","            }","            q.process();","        });","    }","","    var workers = 0;","    var workersList = [];","    var isProcessing = false;","    var q = {","        _tasks: new DLL(),","        concurrency: concurrency,","        payload: payload,","        saturated: noop,","        unsaturated: noop,","        buffer: concurrency / 4,","        empty: noop,","        drain: noop,","        error: noop,","        started: false,","        paused: false,","        push: function (data, callback) {","            _insert(data, false, callback);","        },","        kill: function () {","            q.drain = noop;","            q._tasks.empty();","        },","        unshift: function (data, callback) {","            _insert(data, true, callback);","        },","        process: function () {","            // Avoid trying to start too many processing operations. This can occur","            // when callbacks resolve synchronously (#1267).","            if (isProcessing) {","                return;","            }","            isProcessing = true;","            while (!q.paused && workers < q.concurrency && q._tasks.length) {","                var tasks = [],","                    data = [];","                var l = q._tasks.length;","                if (q.payload) l = Math.min(l, q.payload);","                for (var i = 0; i < l; i++) {","                    var node = q._tasks.shift();","                    tasks.push(node);","                    data.push(node.data);","                }","","                if (q._tasks.length === 0) {","                    q.empty();","                }","                workers += 1;","                workersList.push(tasks[0]);","","                if (workers === q.concurrency) {","                    q.saturated();","                }","","                var cb = onlyOnce(_next(tasks));","                worker(data, cb);","            }","            isProcessing = false;","        },","        length: function () {","            return q._tasks.length;","        },","        running: function () {","            return workers;","        },","        workersList: function () {","            return workersList;","        },","        idle: function () {","            return q._tasks.length + workers === 0;","        },","        pause: function () {","            q.paused = true;","        },","        resume: function () {","            if (q.paused === false) {","                return;","            }","            q.paused = false;","            setImmediate$1(q.process);","        }","    };","    return q;","}","","/**"," * A cargo of tasks for the worker function to complete. Cargo inherits all of"," * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}."," * @typedef {Object} CargoObject"," * @memberOf module:ControlFlow"," * @property {Function} length - A function returning the number of items"," * waiting to be processed. Invoke like `cargo.length()`."," * @property {number} payload - An `integer` for determining how many tasks"," * should be process per round. This property can be changed after a `cargo` is"," * created to alter the payload on-the-fly."," * @property {Function} push - Adds `task` to the `queue`. The callback is"," * called once the `worker` has finished processing the task. Instead of a"," * single task, an array of `tasks` can be submitted. The respective callback is"," * used for every task in the list. Invoke like `cargo.push(task, [callback])`."," * @property {Function} saturated - A callback that is called when the"," * `queue.length()` hits the concurrency and further tasks will be queued."," * @property {Function} empty - A callback that is called when the last item"," * from the `queue` is given to a `worker`."," * @property {Function} drain - A callback that is called when the last item"," * from the `queue` has returned from the `worker`."," * @property {Function} idle - a function returning false if there are items"," * waiting or being processed, or true if not. Invoke like `cargo.idle()`."," * @property {Function} pause - a function that pauses the processing of tasks"," * until `resume()` is called. Invoke like `cargo.pause()`."," * @property {Function} resume - a function that resumes the processing of"," * queued tasks when the queue is paused. Invoke like `cargo.resume()`."," * @property {Function} kill - a function that removes the `drain` callback and"," * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`."," */","","/**"," * Creates a `cargo` object with the specified payload. Tasks added to the"," * cargo will be processed altogether (up to the `payload` limit). If the"," * `worker` is in progress, the task is queued until it becomes available. Once"," * the `worker` has completed some tasks, each callback of those tasks is"," * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)"," * for how `cargo` and `queue` work."," *"," * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers"," * at a time, cargo passes an array of tasks to a single worker, repeating"," * when the worker is finished."," *"," * @name cargo"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.queue]{@link module:ControlFlow.queue}"," * @category Control Flow"," * @param {Function} worker - An asynchronous function for processing an array"," * of queued tasks, which must call its `callback(err)` argument when finished,"," * with an optional `err` argument. Invoked with `(tasks, callback)`."," * @param {number} [payload=Infinity] - An optional `integer` for determining"," * how many tasks should be processed per round; if omitted, the default is"," * unlimited."," * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can"," * attached as certain properties to listen for specific events during the"," * lifecycle of the cargo and inner queue."," * @example"," *"," * // create a cargo object with payload 2"," * var cargo = async.cargo(function(tasks, callback) {"," *     for (var i=0; i<tasks.length; i++) {"," *         console.log('hello ' + tasks[i].name);"," *     }"," *     callback();"," * }, 2);"," *"," * // add some items"," * cargo.push({name: 'foo'}, function(err) {"," *     console.log('finished processing foo');"," * });"," * cargo.push({name: 'bar'}, function(err) {"," *     console.log('finished processing bar');"," * });"," * cargo.push({name: 'baz'}, function(err) {"," *     console.log('finished processing baz');"," * });"," */","function cargo(worker, payload) {","  return queue(worker, 1, payload);","}","","/**"," * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time."," *"," * @name eachOfSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.eachOf]{@link module:Collections.eachOf}"," * @alias forEachOfSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A function to apply to each item in `coll`. The"," * `key` is the item's key, or index in the case of an array. The iteratee is"," * passed a `callback(err)` which must be called once it has completed. If no"," * error has occurred, the callback should be run without arguments or with an"," * explicit `null` argument. Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Invoked with (err)."," */","var eachOfSeries = doLimit(eachOfLimit, 1);","","/**"," * Reduces `coll` into a single value using an async `iteratee` to return each"," * successive step. `memo` is the initial state of the reduction. This function"," * only operates in series."," *"," * For performance reasons, it may make sense to split a call to this function"," * into a parallel map, and then use the normal `Array.prototype.reduce` on the"," * results. This function is for situations where each step in the reduction"," * needs to be async; if you can get the data before reducing it, then it's"," * probably a good idea to do so."," *"," * @name reduce"," * @static"," * @memberOf module:Collections"," * @method"," * @alias inject"," * @alias foldl"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {*} memo - The initial state of the reduction."," * @param {Function} iteratee - A function applied to each item in the"," * array to produce the next step in the reduction. The `iteratee` is passed a"," * `callback(err, reduction)` which accepts an optional error as its first"," * argument, and the state of the reduction as the second. If an error is"," * passed to the callback, the reduction is stopped and the main `callback` is"," * immediately called with the error. Invoked with (memo, item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the reduced value. Invoked with"," * (err, result)."," * @example"," *"," * async.reduce([1,2,3], 0, function(memo, item, callback) {"," *     // pointless async:"," *     process.nextTick(function() {"," *         callback(null, memo + item)"," *     });"," * }, function(err, result) {"," *     // result is now equal to the last value of memo, which is 6"," * });"," */","function reduce(coll, memo, iteratee, callback) {","    callback = once(callback || noop);","    eachOfSeries(coll, function (x, i, callback) {","        iteratee(memo, x, function (err, v) {","            memo = v;","            callback(err);","        });","    }, function (err) {","        callback(err, memo);","    });","}","","/**"," * Version of the compose function that is more natural to read. Each function"," * consumes the return value of the previous function. It is the equivalent of"," * [compose]{@link module:ControlFlow.compose} with the arguments reversed."," *"," * Each function is executed with the `this` binding of the composed function."," *"," * @name seq"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.compose]{@link module:ControlFlow.compose}"," * @category Control Flow"," * @param {...Function} functions - the asynchronous functions to compose"," * @returns {Function} a function that composes the `functions` in order"," * @example"," *"," * // Requires lodash (or underscore), express3 and dresende's orm2."," * // Part of an app, that fetches cats of the logged user."," * // This example uses `seq` function to avoid overnesting and error"," * // handling clutter."," * app.get('/cats', function(request, response) {"," *     var User = request.models.User;"," *     async.seq("," *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))"," *         function(user, fn) {"," *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))"," *         }"," *     )(req.session.user_id, function (err, cats) {"," *         if (err) {"," *             console.error(err);"," *             response.json({ status: 'error', message: err.message });"," *         } else {"," *             response.json({ status: 'ok', message: 'Cats found', data: cats });"," *         }"," *     });"," * });"," */","var seq$1 = rest(function seq(functions) {","    return rest(function (args) {","        var that = this;","","        var cb = args[args.length - 1];","        if (typeof cb == 'function') {","            args.pop();","        } else {","            cb = noop;","        }","","        reduce(functions, args, function (newargs, fn, cb) {","            fn.apply(that, newargs.concat(rest(function (err, nextargs) {","                cb(err, nextargs);","            })));","        }, function (err, results) {","            cb.apply(that, [err].concat(results));","        });","    });","});","","/**"," * Creates a function which is a composition of the passed asynchronous"," * functions. Each function consumes the return value of the function that"," * follows. Composing functions `f()`, `g()`, and `h()` would produce the result"," * of `f(g(h()))`, only this version uses callbacks to obtain the return values."," *"," * Each function is executed with the `this` binding of the composed function."," *"," * @name compose"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {...Function} functions - the asynchronous functions to compose"," * @returns {Function} an asynchronous function that is the composed"," * asynchronous `functions`"," * @example"," *"," * function add1(n, callback) {"," *     setTimeout(function () {"," *         callback(null, n + 1);"," *     }, 10);"," * }"," *"," * function mul3(n, callback) {"," *     setTimeout(function () {"," *         callback(null, n * 3);"," *     }, 10);"," * }"," *"," * var add1mul3 = async.compose(mul3, add1);"," * add1mul3(4, function (err, result) {"," *     // result now equals 15"," * });"," */","var compose = rest(function (args) {","  return seq$1.apply(null, args.reverse());","});","","function concat$1(eachfn, arr, fn, callback) {","    var result = [];","    eachfn(arr, function (x, index, cb) {","        fn(x, function (err, y) {","            result = result.concat(y || []);","            cb(err);","        });","    }, function (err) {","        callback(err, result);","    });","}","","/**"," * Applies `iteratee` to each item in `coll`, concatenating the results. Returns"," * the concatenated list. The `iteratee`s are called in parallel, and the"," * results are concatenated as they return. There is no guarantee that the"," * results array will be returned in the original order of `coll` passed to the"," * `iteratee` function."," *"," * @name concat"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A function to apply to each item in `coll`."," * The iteratee is passed a `callback(err, results)` which must be called once"," * it has completed with an error (which can be `null`) and an array of results."," * Invoked with (item, callback)."," * @param {Function} [callback(err)] - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is an array"," * containing the concatenated results of the `iteratee` function. Invoked with"," * (err, results)."," * @example"," *"," * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {"," *     // files is now a list of filenames that exist in the 3 directories"," * });"," */","var concat = doParallel(concat$1);","","function doSeries(fn) {","    return function (obj, iteratee, callback) {","        return fn(eachOfSeries, obj, iteratee, callback);","    };","}","","/**"," * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time."," *"," * @name concatSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.concat]{@link module:Collections.concat}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A function to apply to each item in `coll`."," * The iteratee is passed a `callback(err, results)` which must be called once"," * it has completed with an error (which can be `null`) and an array of results."," * Invoked with (item, callback)."," * @param {Function} [callback(err)] - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is an array"," * containing the concatenated results of the `iteratee` function. Invoked with"," * (err, results)."," */","var concatSeries = doSeries(concat$1);","","/**"," * Returns a function that when called, calls-back with the values provided."," * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to"," * [`auto`]{@link module:ControlFlow.auto}."," *"," * @name constant"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {...*} arguments... - Any number of arguments to automatically invoke"," * callback with."," * @returns {Function} Returns a function that when invoked, automatically"," * invokes the callback with the previous given arguments."," * @example"," *"," * async.waterfall(["," *     async.constant(42),"," *     function (value, next) {"," *         // value === 42"," *     },"," *     //..."," * ], callback);"," *"," * async.waterfall(["," *     async.constant(filename, \"utf8\"),"," *     fs.readFile,"," *     function (fileData, next) {"," *         //..."," *     }"," *     //..."," * ], callback);"," *"," * async.auto({"," *     hostname: async.constant(\"https://server.net/\"),"," *     port: findFreePort,"," *     launchServer: [\"hostname\", \"port\", function (options, cb) {"," *         startServer(options, cb);"," *     }],"," *     //..."," * }, callback);"," */","var constant = rest(function (values) {","    var args = [null].concat(values);","    return initialParams(function (ignoredArgs, callback) {","        return callback.apply(this, args);","    });","});","","function _createTester(check, getResult) {","    return function (eachfn, arr, iteratee, cb) {","        cb = cb || noop;","        var testPassed = false;","        var testResult;","        eachfn(arr, function (value, _, callback) {","            iteratee(value, function (err, result) {","                if (err) {","                    callback(err);","                } else if (check(result) && !testResult) {","                    testPassed = true;","                    testResult = getResult(true, value);","                    callback(null, breakLoop);","                } else {","                    callback();","                }","            });","        }, function (err) {","            if (err) {","                cb(err);","            } else {","                cb(null, testPassed ? testResult : getResult(false));","            }","        });","    };","}","","function _findGetResult(v, x) {","    return x;","}","","/**"," * Returns the first value in `coll` that passes an async truth test. The"," * `iteratee` is applied in parallel, meaning the first iteratee to return"," * `true` will fire the detect `callback` with that result. That means the"," * result might not be the first item in the original `coll` (in terms of order)"," * that passes the test.",""," * If order within the original `coll` is important, then look at"," * [`detectSeries`]{@link module:Collections.detectSeries}."," *"," * @name detect"," * @static"," * @memberOf module:Collections"," * @method"," * @alias find"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The iteratee is passed a `callback(err, truthValue)` which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," * @example"," *"," * async.detect(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // result now equals the first file in the list that exists"," * });"," */","var detect = doParallel(_createTester(identity, _findGetResult));","","/**"," * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name detectLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.detect]{@link module:Collections.detect}"," * @alias findLimit"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The iteratee is passed a `callback(err, truthValue)` which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," */","var detectLimit = doParallelLimit(_createTester(identity, _findGetResult));","","/**"," * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time."," *"," * @name detectSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.detect]{@link module:Collections.detect}"," * @alias findSeries"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The iteratee is passed a `callback(err, truthValue)` which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," */","var detectSeries = doLimit(detectLimit, 1);","","function consoleFunc(name) {","    return rest(function (fn, args) {","        fn.apply(null, args.concat(rest(function (err, args) {","            if (typeof console === 'object') {","                if (err) {","                    if (console.error) {","                        console.error(err);","                    }","                } else if (console[name]) {","                    arrayEach(args, function (x) {","                        console[name](x);","                    });","                }","            }","        })));","    });","}","","/**"," * Logs the result of an `async` function to the `console` using `console.dir`"," * to display the properties of the resulting object. Only works in Node.js or"," * in browsers that support `console.dir` and `console.error` (such as FF and"," * Chrome). If multiple arguments are returned from the async function,"," * `console.dir` is called on each argument in order."," *"," * @name dir"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {Function} function - The function you want to eventually apply all"," * arguments to."," * @param {...*} arguments... - Any number of arguments to apply to the function."," * @example"," *"," * // in a module"," * var hello = function(name, callback) {"," *     setTimeout(function() {"," *         callback(null, {hello: name});"," *     }, 1000);"," * };"," *"," * // in the node repl"," * node> async.dir(hello, 'world');"," * {hello: 'world'}"," */","var dir = consoleFunc('dir');","","/**"," * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in"," * the order of operations, the arguments `test` and `fn` are switched."," *"," * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function."," * @name doDuring"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.during]{@link module:ControlFlow.during}"," * @category Control Flow"," * @param {Function} fn - A function which is called each time `test` passes."," * The function is passed a `callback(err)`, which must be called once it has"," * completed with an optional `err` argument. Invoked with (callback)."," * @param {Function} test - asynchronous truth test to perform before each"," * execution of `fn`. Invoked with (...args, callback), where `...args` are the"," * non-error args from the previous callback of `fn`."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `fn` has stopped. `callback`"," * will be passed an error if one occured, otherwise `null`."," */","function doDuring(fn, test, callback) {","    callback = onlyOnce(callback || noop);","","    var next = rest(function (err, args) {","        if (err) return callback(err);","        args.push(check);","        test.apply(this, args);","    });","","    function check(err, truth) {","        if (err) return callback(err);","        if (!truth) return callback(null);","        fn(next);","    }","","    check(null, true);","}","","/**"," * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in"," * the order of operations, the arguments `test` and `iteratee` are switched."," *"," * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript."," *"," * @name doWhilst"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.whilst]{@link module:ControlFlow.whilst}"," * @category Control Flow"," * @param {Function} iteratee - A function which is called each time `test`"," * passes. The function is passed a `callback(err)`, which must be called once"," * it has completed with an optional `err` argument. Invoked with (callback)."," * @param {Function} test - synchronous truth test to perform after each"," * execution of `iteratee`. Invoked with the non-error callback results of "," * `iteratee`."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `iteratee` has stopped."," * `callback` will be passed an error and any arguments passed to the final"," * `iteratee`'s callback. Invoked with (err, [results]);"," */","function doWhilst(iteratee, test, callback) {","    callback = onlyOnce(callback || noop);","    var next = rest(function (err, args) {","        if (err) return callback(err);","        if (test.apply(this, args)) return iteratee(next);","        callback.apply(null, [null].concat(args));","    });","    iteratee(next);","}","","/**"," * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the"," * argument ordering differs from `until`."," *"," * @name doUntil"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}"," * @category Control Flow"," * @param {Function} fn - A function which is called each time `test` fails."," * The function is passed a `callback(err)`, which must be called once it has"," * completed with an optional `err` argument. Invoked with (callback)."," * @param {Function} test - synchronous truth test to perform after each"," * execution of `fn`. Invoked with the non-error callback results of `fn`."," * @param {Function} [callback] - A callback which is called after the test"," * function has passed and repeated execution of `fn` has stopped. `callback`"," * will be passed an error and any arguments passed to the final `fn`'s"," * callback. Invoked with (err, [results]);"," */","function doUntil(fn, test, callback) {","    doWhilst(fn, function () {","        return !test.apply(this, arguments);","    }, callback);","}","","/**"," * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that"," * is passed a callback in the form of `function (err, truth)`. If error is"," * passed to `test` or `fn`, the main callback is immediately called with the"," * value of the error."," *"," * @name during"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.whilst]{@link module:ControlFlow.whilst}"," * @category Control Flow"," * @param {Function} test - asynchronous truth test to perform before each"," * execution of `fn`. Invoked with (callback)."," * @param {Function} fn - A function which is called each time `test` passes."," * The function is passed a `callback(err)`, which must be called once it has"," * completed with an optional `err` argument. Invoked with (callback)."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `fn` has stopped. `callback`"," * will be passed an error, if one occured, otherwise `null`."," * @example"," *"," * var count = 0;"," *"," * async.during("," *     function (callback) {"," *         return callback(null, count < 5);"," *     },"," *     function (callback) {"," *         count++;"," *         setTimeout(callback, 1000);"," *     },"," *     function (err) {"," *         // 5 seconds have passed"," *     }"," * );"," */","function during(test, fn, callback) {","    callback = onlyOnce(callback || noop);","","    function next(err) {","        if (err) return callback(err);","        test(check);","    }","","    function check(err, truth) {","        if (err) return callback(err);","        if (!truth) return callback(null);","        fn(next);","    }","","    test(check);","}","","function _withoutIndex(iteratee) {","    return function (value, index, callback) {","        return iteratee(value, callback);","    };","}","","/**"," * Applies the function `iteratee` to each item in `coll`, in parallel."," * The `iteratee` is called with an item from the list, and a callback for when"," * it has finished. If the `iteratee` passes an error to its `callback`, the"," * main `callback` (for the `each` function) is immediately called with the"," * error."," *"," * Note, that since this function applies `iteratee` to each item in parallel,"," * there is no guarantee that the iteratee functions will complete in order."," *"," * @name each"," * @static"," * @memberOf module:Collections"," * @method"," * @alias forEach"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A function to apply to each item"," * in `coll`. The iteratee is passed a `callback(err)` which must be called once"," * it has completed. If no error has occurred, the `callback` should be run"," * without arguments or with an explicit `null` argument. The array index is not"," * passed to the iteratee. Invoked with (item, callback). If you need the index,"," * use `eachOf`."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," * @example"," *"," * // assuming openFiles is an array of file names and saveFile is a function"," * // to save the modified contents of that file:"," *"," * async.each(openFiles, saveFile, function(err){"," *   // if any of the saves produced an error, err would equal that error"," * });"," *"," * // assuming openFiles is an array of file names"," * async.each(openFiles, function(file, callback) {"," *"," *     // Perform operation on file here."," *     console.log('Processing file ' + file);"," *"," *     if( file.length > 32 ) {"," *       console.log('This file name is too long');"," *       callback('File name too long');"," *     } else {"," *       // Do work to process file here"," *       console.log('File processed');"," *       callback();"," *     }"," * }, function(err) {"," *     // if any of the file processing produced an error, err would equal that error"," *     if( err ) {"," *       // One of the iterations produced an error."," *       // All processing will now stop."," *       console.log('A file failed to process');"," *     } else {"," *       console.log('All files have been processed successfully');"," *     }"," * });"," */","function eachLimit(coll, iteratee, callback) {","  eachOf(coll, _withoutIndex(iteratee), callback);","}","","/**"," * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time."," *"," * @name eachLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.each]{@link module:Collections.each}"," * @alias forEachLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - A function to apply to each item in `coll`. The"," * iteratee is passed a `callback(err)` which must be called once it has"," * completed. If no error has occurred, the `callback` should be run without"," * arguments or with an explicit `null` argument. The array index is not passed"," * to the iteratee. Invoked with (item, callback). If you need the index, use"," * `eachOfLimit`."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","function eachLimit$1(coll, limit, iteratee, callback) {","  _eachOfLimit(limit)(coll, _withoutIndex(iteratee), callback);","}","","/**"," * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time."," *"," * @name eachSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.each]{@link module:Collections.each}"," * @alias forEachSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A function to apply to each"," * item in `coll`. The iteratee is passed a `callback(err)` which must be called"," * once it has completed. If no error has occurred, the `callback` should be run"," * without arguments or with an explicit `null` argument. The array index is"," * not passed to the iteratee. Invoked with (item, callback). If you need the"," * index, use `eachOfSeries`."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","var eachSeries = doLimit(eachLimit$1, 1);","","/**"," * Wrap an async function and ensure it calls its callback on a later tick of"," * the event loop.  If the function already calls its callback on a next tick,"," * no extra deferral is added. This is useful for preventing stack overflows"," * (`RangeError: Maximum call stack size exceeded`) and generally keeping"," * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)"," * contained."," *"," * @name ensureAsync"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {Function} fn - an async function, one that expects a node-style"," * callback as its last argument."," * @returns {Function} Returns a wrapped function with the exact same call"," * signature as the function passed in."," * @example"," *"," * function sometimesAsync(arg, callback) {"," *     if (cache[arg]) {"," *         return callback(null, cache[arg]); // this would be synchronous!!"," *     } else {"," *         doSomeIO(arg, callback); // this IO would be asynchronous"," *     }"," * }"," *"," * // this has a risk of stack overflows if many results are cached in a row"," * async.mapSeries(args, sometimesAsync, done);"," *"," * // this will defer sometimesAsync's callback if necessary,"," * // preventing stack overflows"," * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);"," */","function ensureAsync(fn) {","    return initialParams(function (args, callback) {","        var sync = true;","        args.push(function () {","            var innerArgs = arguments;","            if (sync) {","                setImmediate$1(function () {","                    callback.apply(null, innerArgs);","                });","            } else {","                callback.apply(null, innerArgs);","            }","        });","        fn.apply(this, args);","        sync = false;","    });","}","","function notId(v) {","    return !v;","}","","/**"," * Returns `true` if every element in `coll` satisfies an async test. If any"," * iteratee call returns `false`, the main `callback` is immediately called."," *"," * @name every"," * @static"," * @memberOf module:Collections"," * @method"," * @alias all"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in the"," * collection in parallel. The iteratee is passed a `callback(err, truthValue)`"," * which must be called with a  boolean argument once it has completed. Invoked"," * with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," * @example"," *"," * async.every(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // if result is true then every file exists"," * });"," */","var every = doParallel(_createTester(notId, notId));","","/**"," * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time."," *"," * @name everyLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.every]{@link module:Collections.every}"," * @alias allLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - A truth test to apply to each item in the"," * collection in parallel. The iteratee is passed a `callback(err, truthValue)`"," * which must be called with a  boolean argument once it has completed. Invoked"," * with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," */","var everyLimit = doParallelLimit(_createTester(notId, notId));","","/**"," * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time."," *"," * @name everySeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.every]{@link module:Collections.every}"," * @alias allSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in the"," * collection in parallel. The iteratee is passed a `callback(err, truthValue)`"," * which must be called with a  boolean argument once it has completed. Invoked"," * with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," */","var everySeries = doLimit(everyLimit, 1);","","/**"," * The base implementation of `_.property` without support for deep paths."," *"," * @private"," * @param {string} key The key of the property to get."," * @returns {Function} Returns the new accessor function."," */","function baseProperty(key) {","  return function(object) {","    return object == null ? undefined : object[key];","  };","}","","function filterArray(eachfn, arr, iteratee, callback) {","    var truthValues = new Array(arr.length);","    eachfn(arr, function (x, index, callback) {","        iteratee(x, function (err, v) {","            truthValues[index] = !!v;","            callback(err);","        });","    }, function (err) {","        if (err) return callback(err);","        var results = [];","        for (var i = 0; i < arr.length; i++) {","            if (truthValues[i]) results.push(arr[i]);","        }","        callback(null, results);","    });","}","","function filterGeneric(eachfn, coll, iteratee, callback) {","    var results = [];","    eachfn(coll, function (x, index, callback) {","        iteratee(x, function (err, v) {","            if (err) {","                callback(err);","            } else {","                if (v) {","                    results.push({ index: index, value: x });","                }","                callback();","            }","        });","    }, function (err) {","        if (err) {","            callback(err);","        } else {","            callback(null, arrayMap(results.sort(function (a, b) {","                return a.index - b.index;","            }), baseProperty('value')));","        }","    });","}","","function _filter(eachfn, coll, iteratee, callback) {","    var filter = isArrayLike(coll) ? filterArray : filterGeneric;","    filter(eachfn, coll, iteratee, callback || noop);","}","","/**"," * Returns a new array of all the values in `coll` which pass an async truth"," * test. This operation is performed in parallel, but the results array will be"," * in the same order as the original."," *"," * @name filter"," * @static"," * @memberOf module:Collections"," * @method"," * @alias select"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," * @example"," *"," * async.filter(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, results) {"," *     // results now equals an array of the existing files"," * });"," */","var filter = doParallel(_filter);","","/**"," * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name filterLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @alias selectLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","var filterLimit = doParallelLimit(_filter);","","/**"," * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time."," *"," * @name filterSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @alias selectSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)"," */","var filterSeries = doLimit(filterLimit, 1);","","/**"," * Calls the asynchronous function `fn` with a callback parameter that allows it"," * to call itself again, in series, indefinitely.",""," * If an error is passed to the"," * callback then `errback` is called with the error, and execution stops,"," * otherwise it will never be called."," *"," * @name forever"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Function} fn - a function to call repeatedly. Invoked with (next)."," * @param {Function} [errback] - when `fn` passes an error to it's callback,"," * this function will be called, and execution stops. Invoked with (err)."," * @example"," *"," * async.forever("," *     function(next) {"," *         // next is suitable for passing to things that need a callback(err [, whatever]);"," *         // it will result in this function being called again."," *     },"," *     function(err) {"," *         // if next is called with a value in its first parameter, it will appear"," *         // in here as 'err', and execution will stop."," *     }"," * );"," */","function forever(fn, errback) {","    var done = onlyOnce(errback || noop);","    var task = ensureAsync(fn);","","    function next(err) {","        if (err) return done(err);","        task(next);","    }","    next();","}","","/**"," * Logs the result of an `async` function to the `console`. Only works in"," * Node.js or in browsers that support `console.log` and `console.error` (such"," * as FF and Chrome). If multiple arguments are returned from the async"," * function, `console.log` is called on each argument in order."," *"," * @name log"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {Function} function - The function you want to eventually apply all"," * arguments to."," * @param {...*} arguments... - Any number of arguments to apply to the function."," * @example"," *"," * // in a module"," * var hello = function(name, callback) {"," *     setTimeout(function() {"," *         callback(null, 'hello ' + name);"," *     }, 1000);"," * };"," *"," * // in the node repl"," * node> async.log(hello, 'world');"," * 'hello world'"," */","var log = consoleFunc('log');","","/**"," * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name mapValuesLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.mapValues]{@link module:Collections.mapValues}"," * @category Collection"," * @param {Object} obj - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - A function to apply to each value in `obj`."," * The iteratee is passed a `callback(err, transformed)` which must be called"," * once it has completed with an error (which can be `null`) and a"," * transformed value. Invoked with (value, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. `result` is a new object consisting"," * of each key from `obj`, with each transformed value on the right-hand side."," * Invoked with (err, result)."," */","function mapValuesLimit(obj, limit, iteratee, callback) {","    callback = once(callback || noop);","    var newObj = {};","    eachOfLimit(obj, limit, function (val, key, next) {","        iteratee(val, key, function (err, result) {","            if (err) return next(err);","            newObj[key] = result;","            next();","        });","    }, function (err) {","        callback(err, newObj);","    });","}","","/**"," * A relative of [`map`]{@link module:Collections.map}, designed for use with objects."," *"," * Produces a new Object by mapping each value of `obj` through the `iteratee`"," * function. The `iteratee` is called each `value` and `key` from `obj` and a"," * callback for when it has finished processing. Each of these callbacks takes"," * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`"," * passes an error to its callback, the main `callback` (for the `mapValues`"," * function) is immediately called with the error."," *"," * Note, the order of the keys in the result is not guaranteed.  The keys will"," * be roughly in the order they complete, (but this is very engine-specific)"," *"," * @name mapValues"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Object} obj - A collection to iterate over."," * @param {Function} iteratee - A function to apply to each value and key in"," * `coll`. The iteratee is passed a `callback(err, transformed)` which must be"," * called once it has completed with an error (which can be `null`) and a"," * transformed value. Invoked with (value, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. `result` is a new object consisting"," * of each key from `obj`, with each transformed value on the right-hand side."," * Invoked with (err, result)."," * @example"," *"," * async.mapValues({"," *     f1: 'file1',"," *     f2: 'file2',"," *     f3: 'file3'"," * }, function (file, key, callback) {"," *   fs.stat(file, callback);"," * }, function(err, result) {"," *     // result is now a map of stats for each file, e.g."," *     // {"," *     //     f1: [stats for file1],"," *     //     f2: [stats for file2],"," *     //     f3: [stats for file3]"," *     // }"," * });"," */","","var mapValues = doLimit(mapValuesLimit, Infinity);","","/**"," * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time."," *"," * @name mapValuesSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.mapValues]{@link module:Collections.mapValues}"," * @category Collection"," * @param {Object} obj - A collection to iterate over."," * @param {Function} iteratee - A function to apply to each value in `obj`."," * The iteratee is passed a `callback(err, transformed)` which must be called"," * once it has completed with an error (which can be `null`) and a"," * transformed value. Invoked with (value, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. `result` is a new object consisting"," * of each key from `obj`, with each transformed value on the right-hand side."," * Invoked with (err, result)."," */","var mapValuesSeries = doLimit(mapValuesLimit, 1);","","function has(obj, key) {","    return key in obj;","}","","/**"," * Caches the results of an `async` function. When creating a hash to store"," * function results against, the callback is omitted from the hash and an"," * optional hash function can be used."," *"," * If no hash function is specified, the first argument is used as a hash key,"," * which may work reasonably if it is a string or a data type that converts to a"," * distinct string. Note that objects and arrays will not behave reasonably."," * Neither will cases where the other arguments are significant. In such cases,"," * specify your own hash function."," *"," * The cache of results is exposed as the `memo` property of the function"," * returned by `memoize`."," *"," * @name memoize"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {Function} fn - The function to proxy and cache results from."," * @param {Function} hasher - An optional function for generating a custom hash"," * for storing results. It has all the arguments applied to it apart from the"," * callback, and must be synchronous."," * @returns {Function} a memoized version of `fn`"," * @example"," *"," * var slow_fn = function(name, callback) {"," *     // do something"," *     callback(null, result);"," * };"," * var fn = async.memoize(slow_fn);"," *"," * // fn can now be used as if it were slow_fn"," * fn('some name', function() {"," *     // callback"," * });"," */","function memoize(fn, hasher) {","    var memo = Object.create(null);","    var queues = Object.create(null);","    hasher = hasher || identity;","    var memoized = initialParams(function memoized(args, callback) {","        var key = hasher.apply(null, args);","        if (has(memo, key)) {","            setImmediate$1(function () {","                callback.apply(null, memo[key]);","            });","        } else if (has(queues, key)) {","            queues[key].push(callback);","        } else {","            queues[key] = [callback];","            fn.apply(null, args.concat(rest(function (args) {","                memo[key] = args;","                var q = queues[key];","                delete queues[key];","                for (var i = 0, l = q.length; i < l; i++) {","                    q[i].apply(null, args);","                }","            })));","        }","    });","    memoized.memo = memo;","    memoized.unmemoized = fn;","    return memoized;","}","","/**"," * Calls `callback` on a later loop around the event loop. In Node.js this just"," * calls `setImmediate`.  In the browser it will use `setImmediate` if"," * available, otherwise `setTimeout(callback, 0)`, which means other higher"," * priority events may precede the execution of `callback`."," *"," * This is used internally for browser-compatibility purposes."," *"," * @name nextTick"," * @static"," * @memberOf module:Utils"," * @method"," * @alias setImmediate"," * @category Util"," * @param {Function} callback - The function to call on a later loop around"," * the event loop. Invoked with (args...)."," * @param {...*} args... - any number of additional arguments to pass to the"," * callback on the next tick."," * @example"," *"," * var call_order = [];"," * async.nextTick(function() {"," *     call_order.push('two');"," *     // call_order now equals ['one','two']"," * });"," * call_order.push('one');"," *"," * async.setImmediate(function (a, b, c) {"," *     // a, b, and c equal 1, 2, and 3"," * }, 1, 2, 3);"," */","var _defer$1;","","if (hasNextTick) {","    _defer$1 = process.nextTick;","} else if (hasSetImmediate) {","    _defer$1 = setImmediate;","} else {","    _defer$1 = fallback;","}","","var nextTick = wrap(_defer$1);","","function _parallel(eachfn, tasks, callback) {","    callback = callback || noop;","    var results = isArrayLike(tasks) ? [] : {};","","    eachfn(tasks, function (task, key, callback) {","        task(rest(function (err, args) {","            if (args.length <= 1) {","                args = args[0];","            }","            results[key] = args;","            callback(err);","        }));","    }, function (err) {","        callback(err, results);","    });","}","","/**"," * Run the `tasks` collection of functions in parallel, without waiting until"," * the previous function has completed. If any of the functions pass an error to"," * its callback, the main `callback` is immediately called with the value of the"," * error. Once the `tasks` have completed, the results are passed to the final"," * `callback` as an array."," *"," * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about"," * parallel execution of code.  If your tasks do not use any timers or perform"," * any I/O, they will actually be executed in series.  Any synchronous setup"," * sections for each task will happen one after the other.  JavaScript remains"," * single-threaded."," *"," * It is also possible to use an object instead of an array. Each property will"," * be run as a function and the results will be passed to the final `callback`"," * as an object instead of an array. This can be a more readable way of handling"," * results from {@link async.parallel}."," *"," * @name parallel"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} tasks - A collection containing functions to run."," * Each function is passed a `callback(err, result)` which it must call on"," * completion with an error `err` (which can be `null`) and an optional `result`"," * value."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed successfully. This function gets a results array"," * (or object) containing all the result arguments passed to the task callbacks."," * Invoked with (err, results)."," * @example"," * async.parallel(["," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'two');"," *         }, 100);"," *     }"," * ],"," * // optional callback"," * function(err, results) {"," *     // the results array will equal ['one','two'] even though"," *     // the second function had a shorter timeout."," * });"," *"," * // an example using an object instead of an array"," * async.parallel({"," *     one: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 1);"," *         }, 200);"," *     },"," *     two: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 2);"," *         }, 100);"," *     }"," * }, function(err, results) {"," *     // results is now equals to: {one: 1, two: 2}"," * });"," */","function parallelLimit(tasks, callback) {","  _parallel(eachOf, tasks, callback);","}","","/**"," * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name parallelLimit"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.parallel]{@link module:ControlFlow.parallel}"," * @category Control Flow"," * @param {Array|Collection} tasks - A collection containing functions to run."," * Each function is passed a `callback(err, result)` which it must call on"," * completion with an error `err` (which can be `null`) and an optional `result`"," * value."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed successfully. This function gets a results array"," * (or object) containing all the result arguments passed to the task callbacks."," * Invoked with (err, results)."," */","function parallelLimit$1(tasks, limit, callback) {","  _parallel(_eachOfLimit(limit), tasks, callback);","}","","/**"," * A queue of tasks for the worker function to complete."," * @typedef {Object} QueueObject"," * @memberOf module:ControlFlow"," * @property {Function} length - a function returning the number of items"," * waiting to be processed. Invoke with `queue.length()`."," * @property {boolean} started - a boolean indicating whether or not any"," * items have been pushed and processed by the queue."," * @property {Function} running - a function returning the number of items"," * currently being processed. Invoke with `queue.running()`."," * @property {Function} workersList - a function returning the array of items"," * currently being processed. Invoke with `queue.workersList()`."," * @property {Function} idle - a function returning false if there are items"," * waiting or being processed, or true if not. Invoke with `queue.idle()`."," * @property {number} concurrency - an integer for determining how many `worker`"," * functions should be run in parallel. This property can be changed after a"," * `queue` is created to alter the concurrency on-the-fly."," * @property {Function} push - add a new task to the `queue`. Calls `callback`"," * once the `worker` has finished processing the task. Instead of a single task,"," * a `tasks` array can be submitted. The respective callback is used for every"," * task in the list. Invoke with `queue.push(task, [callback])`,"," * @property {Function} unshift - add a new task to the front of the `queue`."," * Invoke with `queue.unshift(task, [callback])`."," * @property {Function} saturated - a callback that is called when the number of"," * running workers hits the `concurrency` limit, and further tasks will be"," * queued."," * @property {Function} unsaturated - a callback that is called when the number"," * of running workers is less than the `concurrency` & `buffer` limits, and"," * further tasks will not be queued."," * @property {number} buffer - A minimum threshold buffer in order to say that"," * the `queue` is `unsaturated`."," * @property {Function} empty - a callback that is called when the last item"," * from the `queue` is given to a `worker`."," * @property {Function} drain - a callback that is called when the last item"," * from the `queue` has returned from the `worker`."," * @property {Function} error - a callback that is called when a task errors."," * Has the signature `function(error, task)`."," * @property {boolean} paused - a boolean for determining whether the queue is"," * in a paused state."," * @property {Function} pause - a function that pauses the processing of tasks"," * until `resume()` is called. Invoke with `queue.pause()`."," * @property {Function} resume - a function that resumes the processing of"," * queued tasks when the queue is paused. Invoke with `queue.resume()`."," * @property {Function} kill - a function that removes the `drain` callback and"," * empties remaining tasks from the queue forcing it to go idle. Invoke with `queue.kill()`."," */","","/**"," * Creates a `queue` object with the specified `concurrency`. Tasks added to the"," * `queue` are processed in parallel (up to the `concurrency` limit). If all"," * `worker`s are in progress, the task is queued until one becomes available."," * Once a `worker` completes a `task`, that `task`'s callback is called."," *"," * @name queue"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Function} worker - An asynchronous function for processing a queued"," * task, which must call its `callback(err)` argument when finished, with an"," * optional `error` as an argument.  If you want to handle errors from an"," * individual task, pass a callback to `q.push()`. Invoked with"," * (task, callback)."," * @param {number} [concurrency=1] - An `integer` for determining how many"," * `worker` functions should be run in parallel.  If omitted, the concurrency"," * defaults to `1`.  If the concurrency is `0`, an error is thrown."," * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can"," * attached as certain properties to listen for specific events during the"," * lifecycle of the queue."," * @example"," *"," * // create a queue object with concurrency 2"," * var q = async.queue(function(task, callback) {"," *     console.log('hello ' + task.name);"," *     callback();"," * }, 2);"," *"," * // assign a callback"," * q.drain = function() {"," *     console.log('all items have been processed');"," * };"," *"," * // add some items to the queue"," * q.push({name: 'foo'}, function(err) {"," *     console.log('finished processing foo');"," * });"," * q.push({name: 'bar'}, function (err) {"," *     console.log('finished processing bar');"," * });"," *"," * // add some items to the queue (batch-wise)"," * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {"," *     console.log('finished processing item');"," * });"," *"," * // add some items to the front of the queue"," * q.unshift({name: 'bar'}, function (err) {"," *     console.log('finished processing bar');"," * });"," */","var queue$1 = function (worker, concurrency) {","  return queue(function (items, cb) {","    worker(items[0], cb);","  }, concurrency, 1);","};","","/**"," * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and"," * completed in ascending priority order."," *"," * @name priorityQueue"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.queue]{@link module:ControlFlow.queue}"," * @category Control Flow"," * @param {Function} worker - An asynchronous function for processing a queued"," * task, which must call its `callback(err)` argument when finished, with an"," * optional `error` as an argument.  If you want to handle errors from an"," * individual task, pass a callback to `q.push()`. Invoked with"," * (task, callback)."," * @param {number} concurrency - An `integer` for determining how many `worker`"," * functions should be run in parallel.  If omitted, the concurrency defaults to"," * `1`.  If the concurrency is `0`, an error is thrown."," * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two"," * differences between `queue` and `priorityQueue` objects:"," * * `push(task, priority, [callback])` - `priority` should be a number. If an"," *   array of `tasks` is given, all tasks will be assigned the same priority."," * * The `unshift` method was removed."," */","var priorityQueue = function (worker, concurrency) {","    // Start with a normal queue","    var q = queue$1(worker, concurrency);","","    // Override push to accept second parameter representing priority","    q.push = function (data, priority, callback) {","        if (callback == null) callback = noop;","        if (typeof callback !== 'function') {","            throw new Error('task callback must be a function');","        }","        q.started = true;","        if (!isArray(data)) {","            data = [data];","        }","        if (data.length === 0) {","            // call drain immediately if there are no tasks","            return setImmediate$1(function () {","                q.drain();","            });","        }","","        priority = priority || 0;","        var nextNode = q._tasks.head;","        while (nextNode && priority >= nextNode.priority) {","            nextNode = nextNode.next;","        }","","        for (var i = 0, l = data.length; i < l; i++) {","            var item = {","                data: data[i],","                priority: priority,","                callback: callback","            };","","            if (nextNode) {","                q._tasks.insertBefore(nextNode, item);","            } else {","                q._tasks.push(item);","            }","        }","        setImmediate$1(q.process);","    };","","    // Remove unshift function","    delete q.unshift;","","    return q;","};","","/**"," * Runs the `tasks` array of functions in parallel, without waiting until the"," * previous function has completed. Once any of the `tasks` complete or pass an"," * error to its callback, the main `callback` is immediately called. It's"," * equivalent to `Promise.race()`."," *"," * @name race"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array} tasks - An array containing functions to run. Each function"," * is passed a `callback(err, result)` which it must call on completion with an"," * error `err` (which can be `null`) and an optional `result` value."," * @param {Function} callback - A callback to run once any of the functions have"," * completed. This function gets an error or result from the first function that"," * completed. Invoked with (err, result)."," * @returns undefined"," * @example"," *"," * async.race(["," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'two');"," *         }, 100);"," *     }"," * ],"," * // main callback"," * function(err, result) {"," *     // the result will be equal to 'two' as it finishes earlier"," * });"," */","function race(tasks, callback) {","    callback = once(callback || noop);","    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));","    if (!tasks.length) return callback();","    for (var i = 0, l = tasks.length; i < l; i++) {","        tasks[i](callback);","    }","}","","var slice = Array.prototype.slice;","","/**"," * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order."," *"," * @name reduceRight"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reduce]{@link module:Collections.reduce}"," * @alias foldr"," * @category Collection"," * @param {Array} array - A collection to iterate over."," * @param {*} memo - The initial state of the reduction."," * @param {Function} iteratee - A function applied to each item in the"," * array to produce the next step in the reduction. The `iteratee` is passed a"," * `callback(err, reduction)` which accepts an optional error as its first"," * argument, and the state of the reduction as the second. If an error is"," * passed to the callback, the reduction is stopped and the main `callback` is"," * immediately called with the error. Invoked with (memo, item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the reduced value. Invoked with"," * (err, result)."," */","function reduceRight(array, memo, iteratee, callback) {","  var reversed = slice.call(array).reverse();","  reduce(reversed, memo, iteratee, callback);","}","","/**"," * Wraps the function in another function that always returns data even when it"," * errors."," *"," * The object returned has either the property `error` or `value`."," *"," * @name reflect"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {Function} fn - The function you want to wrap"," * @returns {Function} - A function that always passes null to it's callback as"," * the error. The second argument to the callback will be an `object` with"," * either an `error` or a `value` property."," * @example"," *"," * async.parallel(["," *     async.reflect(function(callback) {"," *         // do some stuff ..."," *         callback(null, 'one');"," *     }),"," *     async.reflect(function(callback) {"," *         // do some more stuff but error ..."," *         callback('bad stuff happened');"," *     }),"," *     async.reflect(function(callback) {"," *         // do some more stuff ..."," *         callback(null, 'two');"," *     })"," * ],"," * // optional callback"," * function(err, results) {"," *     // values"," *     // results[0].value = 'one'"," *     // results[1].error = 'bad stuff happened'"," *     // results[2].value = 'two'"," * });"," */","function reflect(fn) {","    return initialParams(function reflectOn(args, reflectCallback) {","        args.push(rest(function callback(err, cbArgs) {","            if (err) {","                reflectCallback(null, {","                    error: err","                });","            } else {","                var value = null;","                if (cbArgs.length === 1) {","                    value = cbArgs[0];","                } else if (cbArgs.length > 1) {","                    value = cbArgs;","                }","                reflectCallback(null, {","                    value: value","                });","            }","        }));","","        return fn.apply(this, args);","    });","}","","function reject$1(eachfn, arr, iteratee, callback) {","    _filter(eachfn, arr, function (value, cb) {","        iteratee(value, function (err, v) {","            cb(err, !v);","        });","    }, callback);","}","","/**"," * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test."," *"," * @name reject"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," * @example"," *"," * async.reject(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, results) {"," *     // results now equals an array of missing files"," *     createFiles(results);"," * });"," */","var reject = doParallel(reject$1);","","/**"," * A helper function that wraps an array or an object of functions with reflect."," *"," * @name reflectAll"," * @static"," * @memberOf module:Utils"," * @method"," * @see [async.reflect]{@link module:Utils.reflect}"," * @category Util"," * @param {Array} tasks - The array of functions to wrap in `async.reflect`."," * @returns {Array} Returns an array of functions, each function wrapped in"," * `async.reflect`"," * @example"," *"," * let tasks = ["," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     function(callback) {"," *         // do some more stuff but error ..."," *         callback(new Error('bad stuff happened'));"," *     },"," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'two');"," *         }, 100);"," *     }"," * ];"," *"," * async.parallel(async.reflectAll(tasks),"," * // optional callback"," * function(err, results) {"," *     // values"," *     // results[0].value = 'one'"," *     // results[1].error = Error('bad stuff happened')"," *     // results[2].value = 'two'"," * });"," *"," * // an example using an object instead of an array"," * let tasks = {"," *     one: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     two: function(callback) {"," *         callback('two');"," *     },"," *     three: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'three');"," *         }, 100);"," *     }"," * };"," *"," * async.parallel(async.reflectAll(tasks),"," * // optional callback"," * function(err, results) {"," *     // values"," *     // results.one.value = 'one'"," *     // results.two.error = 'two'"," *     // results.three.value = 'three'"," * });"," */","function reflectAll(tasks) {","    var results;","    if (isArray(tasks)) {","        results = arrayMap(tasks, reflect);","    } else {","        results = {};","        baseForOwn(tasks, function (task, key) {","            results[key] = reflect.call(this, task);","        });","    }","    return results;","}","","/**"," * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name rejectLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reject]{@link module:Collections.reject}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","var rejectLimit = doParallelLimit(reject$1);","","/**"," * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time."," *"," * @name rejectSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reject]{@link module:Collections.reject}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","var rejectSeries = doLimit(rejectLimit, 1);","","/**"," * Creates a function that returns `value`."," *"," * @static"," * @memberOf _"," * @since 2.4.0"," * @category Util"," * @param {*} value The value to return from the new function."," * @returns {Function} Returns the new constant function."," * @example"," *"," * var objects = _.times(2, _.constant({ 'a': 1 }));"," *"," * console.log(objects);"," * // => [{ 'a': 1 }, { 'a': 1 }]"," *"," * console.log(objects[0] === objects[1]);"," * // => true"," */","function constant$1(value) {","  return function() {","    return value;","  };","}","","/**"," * Attempts to get a successful response from `task` no more than `times` times"," * before returning an error. If the task is successful, the `callback` will be"," * passed the result of the successful task. If all attempts fail, the callback"," * will be passed the error and result (if any) of the final attempt."," *"," * @name retry"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an"," * object with `times` and `interval` or a number."," * * `times` - The number of attempts to make before giving up.  The default"," *   is `5`."," * * `interval` - The time to wait between retries, in milliseconds.  The"," *   default is `0`. The interval may also be specified as a function of the"," *   retry count (see example)."," * * `errorFilter` - An optional synchronous function that is invoked on"," *   erroneous result. If it returns `true` the retry attempts will continue;"," *   if the function returns `false` the retry flow is aborted with the current"," *   attempt's error and result being returned to the final callback."," *   Invoked with (err)."," * * If `opts` is a number, the number specifies the number of times to retry,"," *   with the default interval of `0`."," * @param {Function} task - A function which receives two arguments: (1) a"," * `callback(err, result)` which must be called when finished, passing `err`"," * (which can be `null`) and the `result` of the function's execution, and (2)"," * a `results` object, containing the results of the previously executed"," * functions (if nested inside another control flow). Invoked with"," * (callback, results)."," * @param {Function} [callback] - An optional callback which is called when the"," * task has succeeded, or after the final failed attempt. It receives the `err`"," * and `result` arguments of the last attempt at completing the `task`. Invoked"," * with (err, results)."," * @example"," *"," * // The `retry` function can be used as a stand-alone control flow by passing"," * // a callback, as shown below:"," *"," * // try calling apiMethod 3 times"," * async.retry(3, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod 3 times, waiting 200 ms between each retry"," * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod 10 times with exponential backoff"," * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)"," * async.retry({"," *   times: 10,"," *   interval: function(retryCount) {"," *     return 50 * Math.pow(2, retryCount);"," *   }"," * }, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod the default 5 times no delay between each retry"," * async.retry(apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod only when error condition satisfies, all other"," * // errors will abort the retry control flow and return to final callback"," * async.retry({"," *   errorFilter: function(err) {"," *     return err.message === 'Temporary error'; // only retry on a specific error"," *   }"," * }, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // It can also be embedded within other control flow functions to retry"," * // individual methods that are not as reliable, like this:"," * async.auto({"," *     users: api.getUsers.bind(api),"," *     payments: async.retry(3, api.getPayments.bind(api))"," * }, function(err, results) {"," *     // do something with the results"," * });"," *"," */","function retry(opts, task, callback) {","    var DEFAULT_TIMES = 5;","    var DEFAULT_INTERVAL = 0;","","    var options = {","        times: DEFAULT_TIMES,","        intervalFunc: constant$1(DEFAULT_INTERVAL)","    };","","    function parseTimes(acc, t) {","        if (typeof t === 'object') {","            acc.times = +t.times || DEFAULT_TIMES;","","            acc.intervalFunc = typeof t.interval === 'function' ? t.interval : constant$1(+t.interval || DEFAULT_INTERVAL);","","            acc.errorFilter = t.errorFilter;","        } else if (typeof t === 'number' || typeof t === 'string') {","            acc.times = +t || DEFAULT_TIMES;","        } else {","            throw new Error(\"Invalid arguments for async.retry\");","        }","    }","","    if (arguments.length < 3 && typeof opts === 'function') {","        callback = task || noop;","        task = opts;","    } else {","        parseTimes(options, opts);","        callback = callback || noop;","    }","","    if (typeof task !== 'function') {","        throw new Error(\"Invalid arguments for async.retry\");","    }","","    var attempt = 1;","    function retryAttempt() {","        task(function (err) {","            if (err && attempt++ < options.times && (typeof options.errorFilter != 'function' || options.errorFilter(err))) {","                setTimeout(retryAttempt, options.intervalFunc(attempt));","            } else {","                callback.apply(null, arguments);","            }","        });","    }","","    retryAttempt();","}","","/**"," * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method wraps a task and makes it"," * retryable, rather than immediately calling it with retries."," *"," * @name retryable"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.retry]{@link module:ControlFlow.retry}"," * @category Control Flow"," * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional"," * options, exactly the same as from `retry`"," * @param {Function} task - the asynchronous function to wrap"," * @returns {Functions} The wrapped function, which when invoked, will retry on"," * an error, based on the parameters specified in `opts`."," * @example"," *"," * async.auto({"," *     dep1: async.retryable(3, getFromFlakyService),"," *     process: [\"dep1\", async.retryable(3, function (results, cb) {"," *         maybeProcessData(results.dep1, cb);"," *     })]"," * }, callback);"," */","var retryable = function (opts, task) {","    if (!task) {","        task = opts;","        opts = null;","    }","    return initialParams(function (args, callback) {","        function taskFn(cb) {","            task.apply(null, args.concat(cb));","        }","","        if (opts) retry(opts, taskFn, callback);else retry(taskFn, callback);","    });","};","","/**"," * Run the functions in the `tasks` collection in series, each one running once"," * the previous function has completed. If any functions in the series pass an"," * error to its callback, no more functions are run, and `callback` is"," * immediately called with the value of the error. Otherwise, `callback`"," * receives an array of results when `tasks` have completed."," *"," * It is also possible to use an object instead of an array. Each property will"," * be run as a function, and the results will be passed to the final `callback`"," * as an object instead of an array. This can be a more readable way of handling"," *  results from {@link async.series}."," *"," * **Note** that while many implementations preserve the order of object"," * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)"," * explicitly states that"," *"," * > The mechanics and order of enumerating the properties is not specified."," *"," * So if you rely on the order in which your series of functions are executed,"," * and want this to work on all platforms, consider using an array."," *"," * @name series"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} tasks - A collection containing functions to run, each"," * function is passed a `callback(err, result)` it must call on completion with"," * an error `err` (which can be `null`) and an optional `result` value."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed. This function gets a results array (or object)"," * containing all the result arguments passed to the `task` callbacks. Invoked"," * with (err, result)."," * @example"," * async.series(["," *     function(callback) {"," *         // do some stuff ..."," *         callback(null, 'one');"," *     },"," *     function(callback) {"," *         // do some more stuff ..."," *         callback(null, 'two');"," *     }"," * ],"," * // optional callback"," * function(err, results) {"," *     // results is now equal to ['one', 'two']"," * });"," *"," * async.series({"," *     one: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 1);"," *         }, 200);"," *     },"," *     two: function(callback){"," *         setTimeout(function() {"," *             callback(null, 2);"," *         }, 100);"," *     }"," * }, function(err, results) {"," *     // results is now equal to: {one: 1, two: 2}"," * });"," */","function series(tasks, callback) {","  _parallel(eachOfSeries, tasks, callback);","}","","/**"," * Returns `true` if at least one element in the `coll` satisfies an async test."," * If any iteratee call returns `true`, the main `callback` is immediately"," * called."," *"," * @name some"," * @static"," * @memberOf module:Collections"," * @method"," * @alias any"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in the array"," * in parallel. The iteratee is passed a `callback(err, truthValue)` which must"," * be called with a boolean argument once it has completed. Invoked with"," * (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," * @example"," *"," * async.some(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // if result is true then at least one of the files exists"," * });"," */","var some = doParallel(_createTester(Boolean, identity));","","/**"," * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time."," *"," * @name someLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.some]{@link module:Collections.some}"," * @alias anyLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - A truth test to apply to each item in the array"," * in parallel. The iteratee is passed a `callback(err, truthValue)` which must"," * be called with a boolean argument once it has completed. Invoked with"," * (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," */","var someLimit = doParallelLimit(_createTester(Boolean, identity));","","/**"," * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time."," *"," * @name someSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.some]{@link module:Collections.some}"," * @alias anySeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in the array"," * in parallel. The iteratee is passed a `callback(err, truthValue)` which must"," * be called with a boolean argument once it has completed. Invoked with"," * (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," */","var someSeries = doLimit(someLimit, 1);","","/**"," * Sorts a list by the results of running each `coll` value through an async"," * `iteratee`."," *"," * @name sortBy"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A function to apply to each item in `coll`."," * The iteratee is passed a `callback(err, sortValue)` which must be called once"," * it has completed with an error (which can be `null`) and a value to use as"," * the sort criteria. Invoked with (item, callback)."," * @param {Function} callback - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is the items"," * from the original `coll` sorted by the values returned by the `iteratee`"," * calls. Invoked with (err, results)."," * @example"," *"," * async.sortBy(['file1','file2','file3'], function(file, callback) {"," *     fs.stat(file, function(err, stats) {"," *         callback(err, stats.mtime);"," *     });"," * }, function(err, results) {"," *     // results is now the original array of files sorted by"," *     // modified date"," * });"," *"," * // By modifying the callback parameter the"," * // sorting order can be influenced:"," *"," * // ascending order"," * async.sortBy([1,9,3,5], function(x, callback) {"," *     callback(null, x);"," * }, function(err,result) {"," *     // result callback"," * });"," *"," * // descending order"," * async.sortBy([1,9,3,5], function(x, callback) {"," *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around"," * }, function(err,result) {"," *     // result callback"," * });"," */","function sortBy(coll, iteratee, callback) {","    map(coll, function (x, callback) {","        iteratee(x, function (err, criteria) {","            if (err) return callback(err);","            callback(null, { value: x, criteria: criteria });","        });","    }, function (err, results) {","        if (err) return callback(err);","        callback(null, arrayMap(results.sort(comparator), baseProperty('value')));","    });","","    function comparator(left, right) {","        var a = left.criteria,","            b = right.criteria;","        return a < b ? -1 : a > b ? 1 : 0;","    }","}","","/**"," * Sets a time limit on an asynchronous function. If the function does not call"," * its callback within the specified milliseconds, it will be called with a"," * timeout error. The code property for the error object will be `'ETIMEDOUT'`."," *"," * @name timeout"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {Function} asyncFn - The asynchronous function you want to set the"," * time limit."," * @param {number} milliseconds - The specified time limit."," * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)"," * to timeout Error for more information.."," * @returns {Function} Returns a wrapped function that can be used with any of"," * the control flow functions. Invoke this function with the same"," * parameters as you would `asyncFunc`."," * @example"," *"," * function myFunction(foo, callback) {"," *     doAsyncTask(foo, function(err, data) {"," *         // handle errors"," *         if (err) return callback(err);"," *"," *         // do some stuff ..."," *"," *         // return processed data"," *         return callback(null, data);"," *     });"," * }"," *"," * var wrapped = async.timeout(myFunction, 1000);"," *"," * // call `wrapped` as you would `myFunction`"," * wrapped({ bar: 'bar' }, function(err, data) {"," *     // if `myFunction` takes < 1000 ms to execute, `err`"," *     // and `data` will have their expected values"," *"," *     // else `err` will be an Error with the code 'ETIMEDOUT'"," * });"," */","function timeout(asyncFn, milliseconds, info) {","    var originalCallback, timer;","    var timedOut = false;","","    function injectedCallback() {","        if (!timedOut) {","            originalCallback.apply(null, arguments);","            clearTimeout(timer);","        }","    }","","    function timeoutCallback() {","        var name = asyncFn.name || 'anonymous';","        var error = new Error('Callback function \"' + name + '\" timed out.');","        error.code = 'ETIMEDOUT';","        if (info) {","            error.info = info;","        }","        timedOut = true;","        originalCallback(error);","    }","","    return initialParams(function (args, origCallback) {","        originalCallback = origCallback;","        // setup timer and call original function","        timer = setTimeout(timeoutCallback, milliseconds);","        asyncFn.apply(null, args.concat(injectedCallback));","    });","}","","/* Built-in method references for those with the same name as other `lodash` methods. */","var nativeCeil = Math.ceil;","var nativeMax$1 = Math.max;","","/**"," * The base implementation of `_.range` and `_.rangeRight` which doesn't"," * coerce arguments."," *"," * @private"," * @param {number} start The start of the range."," * @param {number} end The end of the range."," * @param {number} step The value to increment or decrement by."," * @param {boolean} [fromRight] Specify iterating from right to left."," * @returns {Array} Returns the range of numbers."," */","function baseRange(start, end, step, fromRight) {","  var index = -1,","      length = nativeMax$1(nativeCeil((end - start) / (step || 1)), 0),","      result = Array(length);","","  while (length--) {","    result[fromRight ? length : ++index] = start;","    start += step;","  }","  return result;","}","","/**"," * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name timesLimit"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.times]{@link module:ControlFlow.times}"," * @category Control Flow"," * @param {number} count - The number of times to run the function."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - The function to call `n` times. Invoked with the"," * iteration index and a callback (n, next)."," * @param {Function} callback - see [async.map]{@link module:Collections.map}."," */","function timeLimit(count, limit, iteratee, callback) {","  mapLimit(baseRange(0, count, 1), limit, iteratee, callback);","}","","/**"," * Calls the `iteratee` function `n` times, and accumulates results in the same"," * manner you would use with [map]{@link module:Collections.map}."," *"," * @name times"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.map]{@link module:Collections.map}"," * @category Control Flow"," * @param {number} n - The number of times to run the function."," * @param {Function} iteratee - The function to call `n` times. Invoked with the"," * iteration index and a callback (n, next)."," * @param {Function} callback - see {@link module:Collections.map}."," * @example"," *"," * // Pretend this is some complicated async factory"," * var createUser = function(id, callback) {"," *     callback(null, {"," *         id: 'user' + id"," *     });"," * };"," *"," * // generate 5 users"," * async.times(5, function(n, next) {"," *     createUser(n, function(err, user) {"," *         next(err, user);"," *     });"," * }, function(err, users) {"," *     // we should now have 5 users"," * });"," */","var times = doLimit(timeLimit, Infinity);","","/**"," * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time."," *"," * @name timesSeries"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.times]{@link module:ControlFlow.times}"," * @category Control Flow"," * @param {number} n - The number of times to run the function."," * @param {Function} iteratee - The function to call `n` times. Invoked with the"," * iteration index and a callback (n, next)."," * @param {Function} callback - see {@link module:Collections.map}."," */","var timesSeries = doLimit(timeLimit, 1);","","/**"," * A relative of `reduce`.  Takes an Object or Array, and iterates over each"," * element in series, each step potentially mutating an `accumulator` value."," * The type of the accumulator defaults to the type of collection passed in."," *"," * @name transform"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {*} [accumulator] - The initial state of the transform.  If omitted,"," * it will default to an empty Object or Array, depending on the type of `coll`"," * @param {Function} iteratee - A function applied to each item in the"," * collection that potentially modifies the accumulator. The `iteratee` is"," * passed a `callback(err)` which accepts an optional error as its first"," * argument. If an error is passed to the callback, the transform is stopped"," * and the main `callback` is immediately called with the error."," * Invoked with (accumulator, item, key, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the transformed accumulator."," * Invoked with (err, result)."," * @example"," *"," * async.transform([1,2,3], function(acc, item, index, callback) {"," *     // pointless async:"," *     process.nextTick(function() {"," *         acc.push(item * 2)"," *         callback(null)"," *     });"," * }, function(err, result) {"," *     // result is now equal to [2, 4, 6]"," * });"," *"," * @example"," *"," * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {"," *     setImmediate(function () {"," *         obj[key] = val * 2;"," *         callback();"," *     })"," * }, function (err, result) {"," *     // result is equal to {a: 2, b: 4, c: 6}"," * })"," */","function transform(coll, accumulator, iteratee, callback) {","    if (arguments.length === 3) {","        callback = iteratee;","        iteratee = accumulator;","        accumulator = isArray(coll) ? [] : {};","    }","    callback = once(callback || noop);","","    eachOf(coll, function (v, k, cb) {","        iteratee(accumulator, v, k, cb);","    }, function (err) {","        callback(err, accumulator);","    });","}","","/**"," * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,"," * unmemoized form. Handy for testing."," *"," * @name unmemoize"," * @static"," * @memberOf module:Utils"," * @method"," * @see [async.memoize]{@link module:Utils.memoize}"," * @category Util"," * @param {Function} fn - the memoized function"," * @returns {Function} a function that calls the original unmemoized function"," */","function unmemoize(fn) {","    return function () {","        return (fn.unmemoized || fn).apply(null, arguments);","    };","}","","/**"," * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when"," * stopped, or an error occurs."," *"," * @name whilst"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Function} test - synchronous truth test to perform before each"," * execution of `iteratee`. Invoked with ()."," * @param {Function} iteratee - A function which is called each time `test` passes."," * The function is passed a `callback(err)`, which must be called once it has"," * completed with an optional `err` argument. Invoked with (callback)."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `iteratee` has stopped. `callback`"," * will be passed an error and any arguments passed to the final `iteratee`'s"," * callback. Invoked with (err, [results]);"," * @returns undefined"," * @example"," *"," * var count = 0;"," * async.whilst("," *     function() { return count < 5; },"," *     function(callback) {"," *         count++;"," *         setTimeout(function() {"," *             callback(null, count);"," *         }, 1000);"," *     },"," *     function (err, n) {"," *         // 5 seconds have passed, n = 5"," *     }"," * );"," */","function whilst(test, iteratee, callback) {","    callback = onlyOnce(callback || noop);","    if (!test()) return callback(null);","    var next = rest(function (err, args) {","        if (err) return callback(err);","        if (test()) return iteratee(next);","        callback.apply(null, [null].concat(args));","    });","    iteratee(next);","}","","/**"," * Repeatedly call `fn` until `test` returns `true`. Calls `callback` when"," * stopped, or an error occurs. `callback` will be passed an error and any"," * arguments passed to the final `fn`'s callback."," *"," * The inverse of [whilst]{@link module:ControlFlow.whilst}."," *"," * @name until"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.whilst]{@link module:ControlFlow.whilst}"," * @category Control Flow"," * @param {Function} test - synchronous truth test to perform before each"," * execution of `fn`. Invoked with ()."," * @param {Function} fn - A function which is called each time `test` fails."," * The function is passed a `callback(err)`, which must be called once it has"," * completed with an optional `err` argument. Invoked with (callback)."," * @param {Function} [callback] - A callback which is called after the test"," * function has passed and repeated execution of `fn` has stopped. `callback`"," * will be passed an error and any arguments passed to the final `fn`'s"," * callback. Invoked with (err, [results]);"," */","function until(test, fn, callback) {","    whilst(function () {","        return !test.apply(this, arguments);","    }, fn, callback);","}","","/**"," * Runs the `tasks` array of functions in series, each passing their results to"," * the next in the array. However, if any of the `tasks` pass an error to their"," * own callback, the next function is not executed, and the main `callback` is"," * immediately called with the error."," *"," * @name waterfall"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array} tasks - An array of functions to run, each function is passed"," * a `callback(err, result1, result2, ...)` it must call on completion. The"," * first argument is an error (which can be `null`) and any further arguments"," * will be passed as arguments in order to the next task."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed. This will be passed the results of the last task's"," * callback. Invoked with (err, [results])."," * @returns undefined"," * @example"," *"," * async.waterfall(["," *     function(callback) {"," *         callback(null, 'one', 'two');"," *     },"," *     function(arg1, arg2, callback) {"," *         // arg1 now equals 'one' and arg2 now equals 'two'"," *         callback(null, 'three');"," *     },"," *     function(arg1, callback) {"," *         // arg1 now equals 'three'"," *         callback(null, 'done');"," *     }"," * ], function (err, result) {"," *     // result now equals 'done'"," * });"," *"," * // Or, with named functions:"," * async.waterfall(["," *     myFirstFunction,"," *     mySecondFunction,"," *     myLastFunction,"," * ], function (err, result) {"," *     // result now equals 'done'"," * });"," * function myFirstFunction(callback) {"," *     callback(null, 'one', 'two');"," * }"," * function mySecondFunction(arg1, arg2, callback) {"," *     // arg1 now equals 'one' and arg2 now equals 'two'"," *     callback(null, 'three');"," * }"," * function myLastFunction(arg1, callback) {"," *     // arg1 now equals 'three'"," *     callback(null, 'done');"," * }"," */","var waterfall = function (tasks, callback) {","    callback = once(callback || noop);","    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));","    if (!tasks.length) return callback();","    var taskIndex = 0;","","    function nextTask(args) {","        if (taskIndex === tasks.length) {","            return callback.apply(null, [null].concat(args));","        }","","        var taskCallback = onlyOnce(rest(function (err, args) {","            if (err) {","                return callback.apply(null, [err].concat(args));","            }","            nextTask(args);","        }));","","        args.push(taskCallback);","","        var task = tasks[taskIndex++];","        task.apply(null, args);","    }","","    nextTask([]);","};","","/**"," * Async is a utility module which provides straight-forward, powerful functions"," * for working with asynchronous JavaScript. Although originally designed for"," * use with [Node.js](http://nodejs.org) and installable via"," * `npm install --save async`, it can also be used directly in the browser."," * @module async"," */","","/**"," * A collection of `async` functions for manipulating collections, such as"," * arrays and objects."," * @module Collections"," */","","/**"," * A collection of `async` functions for controlling the flow through a script."," * @module ControlFlow"," */","","/**"," * A collection of `async` utility functions."," * @module Utils"," */","var index = {","  applyEach: applyEach,","  applyEachSeries: applyEachSeries,","  apply: apply$2,","  asyncify: asyncify,","  auto: auto,","  autoInject: autoInject,","  cargo: cargo,","  compose: compose,","  concat: concat,","  concatSeries: concatSeries,","  constant: constant,","  detect: detect,","  detectLimit: detectLimit,","  detectSeries: detectSeries,","  dir: dir,","  doDuring: doDuring,","  doUntil: doUntil,","  doWhilst: doWhilst,","  during: during,","  each: eachLimit,","  eachLimit: eachLimit$1,","  eachOf: eachOf,","  eachOfLimit: eachOfLimit,","  eachOfSeries: eachOfSeries,","  eachSeries: eachSeries,","  ensureAsync: ensureAsync,","  every: every,","  everyLimit: everyLimit,","  everySeries: everySeries,","  filter: filter,","  filterLimit: filterLimit,","  filterSeries: filterSeries,","  forever: forever,","  log: log,","  map: map,","  mapLimit: mapLimit,","  mapSeries: mapSeries,","  mapValues: mapValues,","  mapValuesLimit: mapValuesLimit,","  mapValuesSeries: mapValuesSeries,","  memoize: memoize,","  nextTick: nextTick,","  parallel: parallelLimit,","  parallelLimit: parallelLimit$1,","  priorityQueue: priorityQueue,","  queue: queue$1,","  race: race,","  reduce: reduce,","  reduceRight: reduceRight,","  reflect: reflect,","  reflectAll: reflectAll,","  reject: reject,","  rejectLimit: rejectLimit,","  rejectSeries: rejectSeries,","  retry: retry,","  retryable: retryable,","  seq: seq$1,","  series: series,","  setImmediate: setImmediate$1,","  some: some,","  someLimit: someLimit,","  someSeries: someSeries,","  sortBy: sortBy,","  timeout: timeout,","  times: times,","  timesLimit: timeLimit,","  timesSeries: timesSeries,","  transform: transform,","  unmemoize: unmemoize,","  until: until,","  waterfall: waterfall,","  whilst: whilst,","","  // aliases","  all: every,","  any: some,","  forEach: eachLimit,","  forEachSeries: eachSeries,","  forEachLimit: eachLimit$1,","  forEachOf: eachOf,","  forEachOfSeries: eachOfSeries,","  forEachOfLimit: eachOfLimit,","  inject: reduce,","  foldl: reduce,","  foldr: reduceRight,","  select: filter,","  selectLimit: filterLimit,","  selectSeries: filterSeries,","  wrapSync: asyncify","};","","exports['default'] = index;","exports.applyEach = applyEach;","exports.applyEachSeries = applyEachSeries;","exports.apply = apply$2;","exports.asyncify = asyncify;","exports.auto = auto;","exports.autoInject = autoInject;","exports.cargo = cargo;","exports.compose = compose;","exports.concat = concat;","exports.concatSeries = concatSeries;","exports.constant = constant;","exports.detect = detect;","exports.detectLimit = detectLimit;","exports.detectSeries = detectSeries;","exports.dir = dir;","exports.doDuring = doDuring;","exports.doUntil = doUntil;","exports.doWhilst = doWhilst;","exports.during = during;","exports.each = eachLimit;","exports.eachLimit = eachLimit$1;","exports.eachOf = eachOf;","exports.eachOfLimit = eachOfLimit;","exports.eachOfSeries = eachOfSeries;","exports.eachSeries = eachSeries;","exports.ensureAsync = ensureAsync;","exports.every = every;","exports.everyLimit = everyLimit;","exports.everySeries = everySeries;","exports.filter = filter;","exports.filterLimit = filterLimit;","exports.filterSeries = filterSeries;","exports.forever = forever;","exports.log = log;","exports.map = map;","exports.mapLimit = mapLimit;","exports.mapSeries = mapSeries;","exports.mapValues = mapValues;","exports.mapValuesLimit = mapValuesLimit;","exports.mapValuesSeries = mapValuesSeries;","exports.memoize = memoize;","exports.nextTick = nextTick;","exports.parallel = parallelLimit;","exports.parallelLimit = parallelLimit$1;","exports.priorityQueue = priorityQueue;","exports.queue = queue$1;","exports.race = race;","exports.reduce = reduce;","exports.reduceRight = reduceRight;","exports.reflect = reflect;","exports.reflectAll = reflectAll;","exports.reject = reject;","exports.rejectLimit = rejectLimit;","exports.rejectSeries = rejectSeries;","exports.retry = retry;","exports.retryable = retryable;","exports.seq = seq$1;","exports.series = series;","exports.setImmediate = setImmediate$1;","exports.some = some;","exports.someLimit = someLimit;","exports.someSeries = someSeries;","exports.sortBy = sortBy;","exports.timeout = timeout;","exports.times = times;","exports.timesLimit = timeLimit;","exports.timesSeries = timesSeries;","exports.transform = transform;","exports.unmemoize = unmemoize;","exports.until = until;","exports.waterfall = waterfall;","exports.whilst = whilst;","exports.all = every;","exports.allLimit = everyLimit;","exports.allSeries = everySeries;","exports.any = some;","exports.anyLimit = someLimit;","exports.anySeries = someSeries;","exports.find = detect;","exports.findLimit = detectLimit;","exports.findSeries = detectSeries;","exports.forEach = eachLimit;","exports.forEachSeries = eachSeries;","exports.forEachLimit = eachLimit$1;","exports.forEachOf = eachOf;","exports.forEachOfSeries = eachOfSeries;","exports.forEachOfLimit = eachOfLimit;","exports.inject = reduce;","exports.foldl = reduce;","exports.foldr = reduceRight;","exports.select = filter;","exports.selectLimit = filterLimit;","exports.selectSeries = filterSeries;","exports.wrapSync = asyncify;","","Object.defineProperty(exports, '__esModule', { value: true });","","})));",""],"l":{"1":1,"2":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"24":0,"28":1,"39":1,"40":10,"41":10,"42":0,"47":0,"48":0,"50":0,"51":0,"52":0,"53":0,"55":0,"56":0,"76":1,"77":0,"82":1,"83":10,"86":1,"87":0,"88":0,"89":0,"93":1,"94":2,"95":0,"96":0,"97":0,"98":0,"101":0,"102":0,"104":0,"110":1,"113":1,"116":1,"119":1,"122":1,"125":1,"132":1,"135":1,"144":1,"145":0,"148":0,"149":0,"150":0,"153":0,"154":0,"155":0,"156":0,"158":0,"161":0,"165":1,"172":1,"181":1,"182":1,"186":1,"187":1,"190":1,"199":1,"200":1,"201":0,"203":1,"233":1,"234":0,"235":0,"239":1,"240":1,"241":1,"242":1,"261":1,"262":0,"263":0,"267":0,"268":0,"272":1,"300":1,"301":0,"330":1,"331":0,"336":1,"350":1,"354":1,"355":0,"356":0,"357":0,"358":0,"359":0,"363":1,"365":1,"366":0,"378":1,"379":0,"382":0,"383":0,"385":0,"412":1,"413":1,"417":1,"426":1,"427":1,"431":1,"434":1,"437":1,"457":1,"458":0,"485":1,"500":1,"501":0,"505":1,"508":1,"511":1,"514":1,"517":1,"536":1,"539":1,"542":1,"552":1,"553":0,"554":0,"560":1,"561":1,"562":1,"563":1,"564":1,"565":1,"566":1,"567":1,"568":1,"569":1,"570":1,"571":1,"572":1,"574":1,"575":1,"576":1,"577":1,"578":1,"579":1,"580":1,"581":1,"582":1,"583":1,"584":1,"587":1,"588":1,"593":1,"609":1,"610":0,"621":1,"622":1,"623":0,"628":1,"631":1,"634":1,"637":1,"640":1,"641":1,"642":1,"647":1,"666":1,"669":1,"672":1,"682":1,"683":0,"691":0,"692":0,"703":0,"706":0,"710":1,"719":1,"720":0,"723":0,"734":1,"735":1,"736":0,"741":1,"744":1,"747":1,"756":1,"757":0,"758":0,"760":0,"761":0,"762":0,"763":0,"766":0,"797":1,"798":0,"801":1,"802":0,"803":0,"804":0,"805":0,"809":1,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"819":1,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"829":1,"830":0,"831":0,"834":0,"835":0,"838":1,"839":0,"840":0,"841":0,"842":0,"843":0,"847":1,"848":0,"849":0,"850":0,"851":0,"853":0,"854":0,"855":0,"857":1,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"866":0,"870":1,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"878":0,"880":0,"881":0,"885":0,"911":1,"912":0,"915":1,"916":13,"917":0,"922":1,"923":0,"924":0,"927":0,"928":0,"931":1,"932":0,"933":0,"934":0,"935":0,"939":0,"940":0,"945":1,"988":1,"989":0,"990":0,"993":1,"994":7,"995":0,"999":1,"1000":0,"1001":0,"1002":0,"1003":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1012":0,"1052":1,"1087":1,"1089":1,"1090":6,"1091":0,"1114":1,"1134":1,"1155":1,"1201":1,"1202":0,"1203":0,"1262":1,"1263":0,"1264":0,"1265":0,"1266":0,"1268":0,"1271":0,"1272":0,"1273":0,"1275":0,"1278":0,"1292":1,"1293":0,"1296":0,"1297":0,"1298":0,"1301":0,"1311":1,"1312":1,"1313":0,"1318":0,"1319":0,"1320":0,"1321":0,"1324":0,"1339":1,"1349":1,"1350":0,"1364":1,"1365":0,"1368":0,"1369":0,"1370":0,"1373":0,"1383":1,"1384":0,"1397":1,"1398":0,"1401":0,"1402":0,"1403":0,"1406":0,"1418":1,"1419":0,"1503":1,"1504":0,"1506":0,"1507":0,"1509":0,"1510":0,"1511":0,"1512":0,"1513":0,"1515":0,"1516":0,"1519":0,"1520":0,"1521":0,"1523":0,"1525":0,"1528":0,"1530":0,"1532":0,"1533":0,"1535":0,"1536":0,"1537":0,"1540":0,"1541":0,"1542":0,"1543":0,"1544":0,"1545":0,"1547":0,"1549":0,"1550":0,"1551":0,"1553":0,"1554":0,"1555":0,"1556":0,"1562":0,"1563":0,"1565":1,"1566":0,"1567":0,"1571":1,"1572":0,"1573":0,"1575":0,"1576":0,"1577":0,"1581":1,"1582":0,"1583":0,"1584":0,"1587":0,"1590":1,"1591":0,"1592":0,"1593":0,"1595":0,"1598":1,"1599":0,"1601":0,"1602":0,"1603":0,"1604":0,"1606":0,"1607":0,"1608":0,"1609":0,"1611":0,"1612":0,"1613":0,"1615":0,"1617":0,"1618":0,"1622":0,"1623":0,"1624":0,"1625":0,"1627":0,"1631":1,"1635":0,"1636":0,"1637":0,"1638":0,"1639":0,"1640":0,"1641":0,"1642":0,"1647":0,"1648":0,"1652":1,"1653":0,"1654":0,"1655":0,"1656":0,"1659":0,"1672":1,"1673":0,"1677":0,"1678":0,"1680":0,"1684":1,"1703":1,"1704":0,"1709":1,"1712":1,"1713":1,"1723":1,"1725":0,"1726":0,"1728":0,"1730":0,"1732":0,"1733":0,"1735":0,"1736":0,"1748":1,"1749":0,"1752":0,"1753":0,"1755":0,"1756":0,"1757":0,"1759":0,"1760":0,"1762":0,"1763":0,"1764":0,"1766":0,"1778":1,"1779":0,"1780":0,"1781":0,"1793":1,"1794":0,"1796":0,"1797":0,"1809":1,"1810":0,"1813":0,"1814":0,"1824":1,"1825":0,"1829":1,"1830":1,"1831":1,"1832":1,"1833":1,"1834":1,"1837":1,"1840":1,"1849":1,"1850":0,"1854":1,"1855":1,"1856":1,"1857":1,"1858":1,"1859":1,"1862":1,"1863":1,"1864":1,"1865":1,"1866":1,"1867":1,"1868":1,"1869":1,"1872":1,"1873":1,"1874":1,"1875":1,"1876":1,"1879":1,"1888":1,"1889":0,"1899":1,"1900":0,"1926":1,"1927":0,"1931":1,"1955":1,"1956":0,"1957":0,"1958":0,"1960":0,"1961":0,"1963":0,"1968":0,"1971":1,"1972":1,"1973":1,"1974":1,"1976":1,"1977":0,"1978":0,"1979":0,"1980":0,"1981":0,"1983":0,"2068":1,"2069":0,"2071":0,"2072":0,"2074":0,"2075":0,"2076":0,"2078":0,"2079":0,"2081":0,"2083":0,"2084":0,"2085":0,"2088":0,"2090":0,"2093":1,"2094":0,"2095":0,"2097":0,"2098":0,"2102":0,"2105":1,"2106":1,"2108":1,"2109":0,"2112":1,"2113":2,"2114":0,"2115":0,"2120":1,"2122":1,"2123":1,"2124":0,"2125":0,"2127":0,"2130":1,"2136":1,"2137":0,"2138":0,"2141":1,"2142":0,"2143":0,"2146":1,"2147":0,"2148":0,"2150":0,"2151":0,"2152":0,"2155":1,"2157":1,"2158":0,"2159":0,"2160":0,"2161":0,"2162":0,"2165":1,"2166":0,"2167":0,"2168":0,"2169":0,"2170":0,"2173":1,"2174":0,"2177":1,"2178":0,"2181":1,"2182":0,"2185":1,"2186":0,"2189":1,"2190":0,"2191":0,"2192":0,"2193":0,"2196":1,"2197":0,"2198":0,"2200":0,"2201":0,"2202":0,"2204":0,"2206":0,"2207":0,"2211":0,"2212":0,"2217":0,"2218":0,"2220":0,"2223":0,"2226":1,"2227":0,"2228":0,"2230":0,"2231":0,"2232":0,"2233":0,"2234":0,"2237":0,"2239":0,"2240":0,"2244":0,"2245":0,"2248":0,"2249":0,"2251":0,"2255":0,"2256":0,"2257":0,"2258":0,"2271":0,"2274":0,"2275":0,"2278":0,"2283":0,"2284":0,"2286":0,"2287":0,"2288":0,"2290":0,"2291":0,"2292":0,"2293":0,"2294":0,"2295":0,"2298":0,"2299":0,"2301":0,"2302":0,"2304":0,"2305":0,"2308":0,"2309":0,"2311":0,"2314":0,"2317":0,"2320":0,"2323":0,"2326":0,"2329":0,"2330":0,"2332":0,"2333":0,"2336":0,"2417":1,"2418":0,"2440":1,"2482":1,"2483":0,"2484":0,"2485":0,"2486":0,"2487":0,"2490":0,"2532":1,"2533":0,"2534":0,"2536":0,"2537":0,"2538":0,"2540":0,"2543":0,"2544":0,"2545":0,"2548":0,"2588":1,"2589":0,"2592":1,"2593":0,"2594":0,"2595":0,"2596":0,"2597":0,"2600":0,"2631":1,"2633":1,"2634":1,"2635":0,"2658":1,"2702":1,"2703":0,"2704":0,"2705":0,"2709":1,"2710":6,"2711":0,"2712":0,"2713":0,"2714":0,"2715":0,"2716":0,"2717":0,"2718":0,"2719":0,"2720":0,"2721":0,"2723":0,"2727":0,"2728":0,"2730":0,"2736":1,"2737":0,"2775":1,"2799":1,"2821":1,"2823":1,"2824":2,"2825":0,"2826":0,"2827":0,"2828":0,"2829":0,"2831":0,"2832":0,"2833":0,"2869":1,"2892":1,"2893":0,"2895":0,"2896":0,"2897":0,"2898":0,"2901":1,"2902":0,"2903":0,"2904":0,"2907":0,"2933":1,"2934":0,"2935":0,"2936":0,"2937":0,"2938":0,"2940":0,"2963":1,"2964":0,"2965":0,"3006":1,"3007":0,"3009":1,"3010":0,"3011":0,"3014":1,"3015":0,"3016":0,"3017":0,"3020":0,"3023":1,"3024":0,"3025":0,"3088":1,"3089":0,"3113":1,"3114":0,"3137":1,"3173":1,"3174":0,"3175":0,"3176":0,"3177":0,"3178":0,"3179":0,"3180":0,"3183":0,"3186":0,"3187":0,"3191":1,"3192":0,"3223":1,"3245":1,"3266":1,"3275":1,"3276":0,"3277":0,"3281":1,"3282":0,"3283":0,"3284":0,"3285":0,"3286":0,"3289":0,"3290":0,"3291":0,"3292":0,"3294":0,"3298":1,"3299":0,"3300":0,"3301":0,"3302":0,"3303":0,"3305":0,"3306":0,"3308":0,"3312":0,"3313":0,"3315":0,"3316":0,"3322":1,"3323":0,"3324":0,"3354":1,"3375":1,"3394":1,"3425":1,"3426":0,"3427":0,"3429":1,"3430":0,"3431":0,"3433":0,"3463":1,"3486":1,"3487":0,"3488":0,"3489":0,"3490":0,"3491":0,"3492":0,"3493":0,"3496":0,"3545":1,"3566":1,"3568":1,"3569":0,"3609":1,"3610":0,"3611":0,"3612":0,"3613":0,"3614":0,"3615":0,"3616":0,"3617":0,"3619":0,"3620":0,"3622":0,"3623":0,"3624":0,"3625":0,"3626":0,"3627":0,"3628":0,"3633":0,"3634":0,"3635":0,"3669":1,"3671":1,"3672":1,"3673":0,"3674":0,"3676":0,"3679":1,"3681":1,"3682":0,"3683":0,"3685":0,"3686":0,"3687":0,"3688":0,"3690":0,"3691":0,"3694":0,"3764":1,"3765":0,"3788":1,"3789":0,"3892":1,"3893":0,"3894":0,"3922":1,"3924":0,"3927":0,"3928":0,"3929":0,"3930":0,"3932":0,"3933":0,"3934":0,"3936":0,"3938":0,"3939":0,"3943":0,"3944":0,"3945":0,"3946":0,"3949":0,"3950":0,"3956":0,"3957":0,"3959":0,"3962":0,"3966":0,"3968":0,"4008":1,"4009":0,"4010":0,"4011":0,"4012":0,"4013":0,"4017":1,"4041":1,"4042":0,"4043":0,"4085":1,"4086":0,"4087":0,"4088":0,"4089":0,"4093":0,"4094":0,"4095":0,"4096":0,"4097":0,"4099":0,"4105":0,"4109":1,"4110":0,"4111":0,"4112":0,"4143":1,"4211":1,"4212":0,"4213":0,"4214":0,"4216":0,"4217":0,"4218":0,"4221":0,"4242":1,"4260":1,"4281":1,"4282":0,"4283":0,"4373":1,"4374":0,"4375":0,"4377":0,"4382":1,"4383":0,"4384":0,"4386":0,"4388":0,"4389":0,"4390":0,"4392":0,"4396":0,"4397":0,"4398":0,"4400":0,"4401":0,"4404":0,"4405":0,"4408":0,"4409":1,"4410":0,"4411":0,"4412":0,"4414":0,"4419":0,"4446":1,"4447":0,"4448":0,"4449":0,"4451":0,"4452":1,"4453":0,"4456":0,"4524":1,"4525":0,"4558":1,"4581":1,"4603":1,"4651":1,"4652":0,"4653":0,"4654":0,"4655":0,"4658":0,"4659":0,"4662":1,"4663":0,"4665":0,"4711":1,"4712":0,"4713":0,"4715":1,"4716":0,"4717":0,"4718":0,"4722":1,"4723":0,"4724":0,"4725":0,"4726":0,"4727":0,"4729":0,"4730":0,"4733":0,"4734":0,"4736":0,"4737":0,"4742":1,"4743":1,"4756":1,"4757":0,"4761":0,"4762":0,"4763":0,"4765":0,"4784":1,"4785":0,"4820":1,"4836":1,"4883":1,"4884":0,"4885":0,"4886":0,"4887":0,"4889":0,"4891":0,"4892":0,"4894":0,"4911":1,"4912":0,"4913":0,"4952":1,"4953":0,"4954":0,"4955":0,"4956":0,"4957":0,"4958":0,"4960":0,"4986":1,"4987":0,"4988":0,"5049":1,"5050":0,"5051":0,"5052":0,"5053":0,"5055":1,"5056":0,"5057":0,"5060":0,"5061":0,"5062":0,"5064":0,"5067":0,"5069":0,"5070":0,"5073":0,"5099":1,"5191":1,"5192":1,"5193":1,"5194":1,"5195":1,"5196":1,"5197":1,"5198":1,"5199":1,"5200":1,"5201":1,"5202":1,"5203":1,"5204":1,"5205":1,"5206":1,"5207":1,"5208":1,"5209":1,"5210":1,"5211":1,"5212":1,"5213":1,"5214":1,"5215":1,"5216":1,"5217":1,"5218":1,"5219":1,"5220":1,"5221":1,"5222":1,"5223":1,"5224":1,"5225":1,"5226":1,"5227":1,"5228":1,"5229":1,"5230":1,"5231":1,"5232":1,"5233":1,"5234":1,"5235":1,"5236":1,"5237":1,"5238":1,"5239":1,"5240":1,"5241":1,"5242":1,"5243":1,"5244":1,"5245":1,"5246":1,"5247":1,"5248":1,"5249":1,"5250":1,"5251":1,"5252":1,"5253":1,"5254":1,"5255":1,"5256":1,"5257":1,"5258":1,"5259":1,"5260":1,"5261":1,"5262":1,"5263":1,"5264":1,"5265":1,"5266":1,"5267":1,"5268":1,"5269":1,"5270":1,"5271":1,"5272":1,"5273":1,"5274":1,"5275":1,"5276":1,"5277":1,"5278":1,"5279":1,"5280":1,"5281":1,"5282":1,"5283":1,"5284":1,"5285":1,"5287":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/model-definition.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/model-definition.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":19,"10":0,"11":19,"12":19,"13":19,"14":0,"15":0,"16":0,"17":0,"18":19,"19":19,"20":19,"21":19,"22":19,"23":19,"24":19,"25":1,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":38,"59":18,"60":20,"61":20,"62":20,"63":20,"64":87,"65":87,"66":74,"67":13,"68":5,"69":13,"70":20,"71":0,"72":20,"73":20,"74":1,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":1,"82":38,"83":38,"84":25,"85":38,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":127,"98":1,"99":1,"100":1,"101":1,"102":127,"103":107,"104":20,"105":20,"106":87,"107":87,"108":87,"109":0,"110":87,"111":87,"112":64,"113":127,"114":67,"115":87,"116":20,"117":1,"118":1,"119":1,"120":1,"121":0,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":1,"148":0},"b":{"1":[0,19],"2":[19,0],"3":[0,19],"4":[19,0],"5":[0,0],"6":[0,0],"7":[19,0],"8":[19,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[18,20],"21":[74,13],"22":[5,8],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[1,126],"29":[107,20],"30":[0,87],"31":[0,0],"32":[64,23],"33":[87,64],"34":[67,60],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0]},"f":{"1":19,"2":0,"3":0,"4":0,"5":0,"6":38,"7":0,"8":0,"9":0,"10":38,"11":25,"12":0,"13":127,"14":1,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"ModelDefinition","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":67}}},"2":{"name":"(anonymous_2)","line":62,"loc":{"start":{"line":62,"column":38},"end":{"line":62,"column":62}}},"3":{"name":"(anonymous_3)","line":77,"loc":{"start":{"line":77,"column":39},"end":{"line":77,"column":77}}},"4":{"name":"(anonymous_4)","line":96,"loc":{"start":{"line":96,"column":43},"end":{"line":96,"column":81}}},"5":{"name":"(anonymous_5)","line":114,"loc":{"start":{"line":114,"column":40},"end":{"line":114,"column":64}}},"6":{"name":"(anonymous_6)","line":132,"loc":{"start":{"line":132,"column":32},"end":{"line":132,"column":43}}},"7":{"name":"(anonymous_7)","line":149,"loc":{"start":{"line":149,"column":11},"end":{"line":149,"column":26}}},"8":{"name":"(anonymous_8)","line":161,"loc":{"start":{"line":161,"column":41},"end":{"line":161,"column":65}}},"9":{"name":"(anonymous_9)","line":169,"loc":{"start":{"line":169,"column":35},"end":{"line":169,"column":46}}},"10":{"name":"(anonymous_10)","line":182,"loc":{"start":{"line":182,"column":36},"end":{"line":182,"column":47}}},"11":{"name":"(anonymous_11)","line":184,"loc":{"start":{"line":184,"column":22},"end":{"line":184,"column":35}}},"12":{"name":"(anonymous_12)","line":194,"loc":{"start":{"line":194,"column":36},"end":{"line":194,"column":47}}},"13":{"name":"(anonymous_13)","line":214,"loc":{"start":{"line":214,"column":34},"end":{"line":214,"column":57}}},"14":{"name":"(anonymous_14)","line":258,"loc":{"start":{"line":258,"column":43},"end":{"line":258,"column":86}}},"15":{"name":"isModelClass","line":263,"loc":{"start":{"line":263,"column":0},"end":{"line":263,"column":27}}},"16":{"name":"(anonymous_16)","line":270,"loc":{"start":{"line":270,"column":35},"end":{"line":270,"column":58}}},"17":{"name":"(anonymous_17)","line":284,"loc":{"start":{"line":284,"column":15},"end":{"line":284,"column":29}}},"18":{"name":"(anonymous_18)","line":312,"loc":{"start":{"line":312,"column":34},"end":{"line":312,"column":45}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":35}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":33}},"8":{"start":{"line":29,"column":0},"end":{"line":51,"column":1}},"9":{"start":{"line":30,"column":2},"end":{"line":33,"column":3}},"10":{"start":{"line":32,"column":4},"end":{"line":32,"column":73}},"11":{"start":{"line":34,"column":2},"end":{"line":34,"column":67}},"12":{"start":{"line":35,"column":2},"end":{"line":35,"column":34}},"13":{"start":{"line":37,"column":2},"end":{"line":47,"column":3}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":22}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":28}},"16":{"start":{"line":40,"column":4},"end":{"line":40,"column":49}},"17":{"start":{"line":41,"column":4},"end":{"line":41,"column":42}},"18":{"start":{"line":43,"column":4},"end":{"line":43,"column":62}},"19":{"start":{"line":44,"column":4},"end":{"line":44,"column":21}},"20":{"start":{"line":45,"column":4},"end":{"line":45,"column":42}},"21":{"start":{"line":46,"column":4},"end":{"line":46,"column":35}},"22":{"start":{"line":48,"column":2},"end":{"line":48,"column":22}},"23":{"start":{"line":49,"column":2},"end":{"line":49,"column":25}},"24":{"start":{"line":50,"column":2},"end":{"line":50,"column":15}},"25":{"start":{"line":53,"column":0},"end":{"line":53,"column":45}},"26":{"start":{"line":56,"column":0},"end":{"line":56,"column":36}},"27":{"start":{"line":62,"column":0},"end":{"line":69,"column":2}},"28":{"start":{"line":63,"column":2},"end":{"line":63,"column":31}},"29":{"start":{"line":64,"column":2},"end":{"line":68,"column":3}},"30":{"start":{"line":65,"column":4},"end":{"line":65,"column":91}},"31":{"start":{"line":67,"column":4},"end":{"line":67,"column":21}},"32":{"start":{"line":77,"column":0},"end":{"line":88,"column":2}},"33":{"start":{"line":78,"column":2},"end":{"line":80,"column":3}},"34":{"start":{"line":79,"column":4},"end":{"line":79,"column":24}},"35":{"start":{"line":81,"column":2},"end":{"line":81,"column":15}},"36":{"start":{"line":82,"column":2},"end":{"line":82,"column":47}},"37":{"start":{"line":83,"column":2},"end":{"line":87,"column":3}},"38":{"start":{"line":84,"column":4},"end":{"line":84,"column":96}},"39":{"start":{"line":86,"column":4},"end":{"line":86,"column":24}},"40":{"start":{"line":96,"column":0},"end":{"line":107,"column":2}},"41":{"start":{"line":97,"column":2},"end":{"line":99,"column":3}},"42":{"start":{"line":98,"column":4},"end":{"line":98,"column":24}},"43":{"start":{"line":100,"column":2},"end":{"line":100,"column":15}},"44":{"start":{"line":101,"column":2},"end":{"line":101,"column":47}},"45":{"start":{"line":102,"column":2},"end":{"line":106,"column":3}},"46":{"start":{"line":103,"column":4},"end":{"line":103,"column":35}},"47":{"start":{"line":105,"column":4},"end":{"line":105,"column":16}},"48":{"start":{"line":114,"column":0},"end":{"line":126,"column":2}},"49":{"start":{"line":115,"column":2},"end":{"line":115,"column":15}},"50":{"start":{"line":116,"column":2},"end":{"line":116,"column":30}},"51":{"start":{"line":117,"column":2},"end":{"line":117,"column":16}},"52":{"start":{"line":118,"column":2},"end":{"line":124,"column":3}},"53":{"start":{"line":119,"column":4},"end":{"line":123,"column":5}},"54":{"start":{"line":120,"column":6},"end":{"line":120,"column":91}},"55":{"start":{"line":122,"column":6},"end":{"line":122,"column":19}},"56":{"start":{"line":125,"column":2},"end":{"line":125,"column":14}},"57":{"start":{"line":132,"column":0},"end":{"line":154,"column":2}},"58":{"start":{"line":133,"column":2},"end":{"line":135,"column":3}},"59":{"start":{"line":134,"column":4},"end":{"line":134,"column":21}},"60":{"start":{"line":136,"column":2},"end":{"line":136,"column":15}},"61":{"start":{"line":137,"column":2},"end":{"line":137,"column":15}},"62":{"start":{"line":138,"column":2},"end":{"line":138,"column":30}},"63":{"start":{"line":139,"column":2},"end":{"line":148,"column":3}},"64":{"start":{"line":140,"column":4},"end":{"line":140,"column":27}},"65":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"66":{"start":{"line":142,"column":6},"end":{"line":142,"column":15}},"67":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"68":{"start":{"line":145,"column":6},"end":{"line":145,"column":13}},"69":{"start":{"line":147,"column":4},"end":{"line":147,"column":56}},"70":{"start":{"line":149,"column":2},"end":{"line":151,"column":5}},"71":{"start":{"line":150,"column":4},"end":{"line":150,"column":23}},"72":{"start":{"line":152,"column":2},"end":{"line":152,"column":18}},"73":{"start":{"line":153,"column":2},"end":{"line":153,"column":13}},"74":{"start":{"line":161,"column":0},"end":{"line":163,"column":2}},"75":{"start":{"line":162,"column":2},"end":{"line":162,"column":55}},"76":{"start":{"line":169,"column":0},"end":{"line":176,"column":2}},"77":{"start":{"line":170,"column":2},"end":{"line":170,"column":25}},"78":{"start":{"line":171,"column":2},"end":{"line":175,"column":3}},"79":{"start":{"line":172,"column":4},"end":{"line":172,"column":16}},"80":{"start":{"line":174,"column":4},"end":{"line":174,"column":25}},"81":{"start":{"line":182,"column":0},"end":{"line":188,"column":2}},"82":{"start":{"line":183,"column":2},"end":{"line":183,"column":23}},"83":{"start":{"line":184,"column":2},"end":{"line":186,"column":5}},"84":{"start":{"line":185,"column":4},"end":{"line":185,"column":19}},"85":{"start":{"line":187,"column":2},"end":{"line":187,"column":15}},"86":{"start":{"line":194,"column":0},"end":{"line":208,"column":2}},"87":{"start":{"line":195,"column":2},"end":{"line":195,"column":15}},"88":{"start":{"line":196,"column":2},"end":{"line":196,"column":19}},"89":{"start":{"line":197,"column":2},"end":{"line":201,"column":3}},"90":{"start":{"line":198,"column":4},"end":{"line":200,"column":5}},"91":{"start":{"line":199,"column":6},"end":{"line":199,"column":44}},"92":{"start":{"line":202,"column":2},"end":{"line":206,"column":3}},"93":{"start":{"line":203,"column":4},"end":{"line":205,"column":5}},"94":{"start":{"line":204,"column":6},"end":{"line":204,"column":55}},"95":{"start":{"line":207,"column":2},"end":{"line":207,"column":17}},"96":{"start":{"line":214,"column":0},"end":{"line":251,"column":2}},"97":{"start":{"line":215,"column":2},"end":{"line":220,"column":3}},"98":{"start":{"line":216,"column":4},"end":{"line":216,"column":27}},"99":{"start":{"line":217,"column":4},"end":{"line":217,"column":24}},"100":{"start":{"line":218,"column":4},"end":{"line":218,"column":21}},"101":{"start":{"line":219,"column":4},"end":{"line":219,"column":21}},"102":{"start":{"line":221,"column":2},"end":{"line":223,"column":3}},"103":{"start":{"line":222,"column":4},"end":{"line":222,"column":27}},"104":{"start":{"line":224,"column":2},"end":{"line":224,"column":23}},"105":{"start":{"line":225,"column":2},"end":{"line":249,"column":3}},"106":{"start":{"line":226,"column":4},"end":{"line":226,"column":37}},"107":{"start":{"line":227,"column":4},"end":{"line":227,"column":51}},"108":{"start":{"line":228,"column":4},"end":{"line":248,"column":5}},"109":{"start":{"line":229,"column":6},"end":{"line":234,"column":9}},"110":{"start":{"line":236,"column":6},"end":{"line":238,"column":8}},"111":{"start":{"line":239,"column":6},"end":{"line":246,"column":7}},"112":{"start":{"line":240,"column":8},"end":{"line":245,"column":9}},"113":{"start":{"line":242,"column":10},"end":{"line":244,"column":11}},"114":{"start":{"line":243,"column":12},"end":{"line":243,"column":33}},"115":{"start":{"line":247,"column":6},"end":{"line":247,"column":35}},"116":{"start":{"line":250,"column":2},"end":{"line":250,"column":25}},"117":{"start":{"line":258,"column":0},"end":{"line":261,"column":2}},"118":{"start":{"line":259,"column":2},"end":{"line":259,"column":56}},"119":{"start":{"line":260,"column":2},"end":{"line":260,"column":19}},"120":{"start":{"line":263,"column":0},"end":{"line":268,"column":1}},"121":{"start":{"line":264,"column":2},"end":{"line":266,"column":3}},"122":{"start":{"line":265,"column":4},"end":{"line":265,"column":17}},"123":{"start":{"line":267,"column":2},"end":{"line":267,"column":49}},"124":{"start":{"line":270,"column":0},"end":{"line":310,"column":2}},"125":{"start":{"line":271,"column":2},"end":{"line":273,"column":3}},"126":{"start":{"line":272,"column":4},"end":{"line":272,"column":21}},"127":{"start":{"line":274,"column":2},"end":{"line":276,"column":3}},"128":{"start":{"line":275,"column":4},"end":{"line":275,"column":21}},"129":{"start":{"line":277,"column":2},"end":{"line":281,"column":4}},"130":{"start":{"line":282,"column":2},"end":{"line":282,"column":27}},"131":{"start":{"line":284,"column":2},"end":{"line":304,"column":4}},"132":{"start":{"line":285,"column":4},"end":{"line":287,"column":5}},"133":{"start":{"line":286,"column":6},"end":{"line":286,"column":17}},"134":{"start":{"line":288,"column":4},"end":{"line":291,"column":5}},"135":{"start":{"line":290,"column":6},"end":{"line":290,"column":26}},"136":{"start":{"line":292,"column":4},"end":{"line":303,"column":5}},"137":{"start":{"line":293,"column":6},"end":{"line":299,"column":7}},"138":{"start":{"line":294,"column":8},"end":{"line":298,"column":9}},"139":{"start":{"line":295,"column":10},"end":{"line":295,"column":70}},"140":{"start":{"line":297,"column":10},"end":{"line":297,"column":31}},"141":{"start":{"line":300,"column":6},"end":{"line":300,"column":22}},"142":{"start":{"line":302,"column":6},"end":{"line":302,"column":17}},"143":{"start":{"line":305,"column":2},"end":{"line":307,"column":3}},"144":{"start":{"line":306,"column":4},"end":{"line":306,"column":66}},"145":{"start":{"line":308,"column":2},"end":{"line":308,"column":19}},"146":{"start":{"line":309,"column":2},"end":{"line":309,"column":14}},"147":{"start":{"line":312,"column":0},"end":{"line":314,"column":2}},"148":{"start":{"line":313,"column":2},"end":{"line":313,"column":31}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":22},"end":{"line":34,"column":34}},{"start":{"line":34,"column":38},"end":{"line":34,"column":66}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"4":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":28}},{"start":{"line":37,"column":32},"end":{"line":37,"column":56}}]},"5":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":25},"end":{"line":40,"column":42}},{"start":{"line":40,"column":46},"end":{"line":40,"column":48}}]},"6":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":20},"end":{"line":41,"column":35}},{"start":{"line":41,"column":39},"end":{"line":41,"column":41}}]},"7":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":25},"end":{"line":45,"column":35}},{"start":{"line":45,"column":39},"end":{"line":45,"column":41}}]},"8":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":20},"end":{"line":46,"column":28}},{"start":{"line":46,"column":32},"end":{"line":46,"column":34}}]},"9":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"10":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":11},"end":{"line":65,"column":40}},{"start":{"line":65,"column":44},"end":{"line":65,"column":77}},{"start":{"line":65,"column":81},"end":{"line":65,"column":90}}]},"11":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"12":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"13":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":14}},{"start":{"line":83,"column":18},"end":{"line":83,"column":41}}]},"14":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":11},"end":{"line":84,"column":41}},{"start":{"line":84,"column":45},"end":{"line":84,"column":79}},{"start":{"line":84,"column":83},"end":{"line":84,"column":95}}]},"15":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"16":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"17":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":6},"end":{"line":102,"column":14}},{"start":{"line":102,"column":18},"end":{"line":102,"column":41}}]},"18":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"19":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":16},"end":{"line":120,"column":46}},{"start":{"line":120,"column":50},"end":{"line":120,"column":84}},{"start":{"line":120,"column":88},"end":{"line":120,"column":89}}]},"20":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":2},"end":{"line":133,"column":2}},{"start":{"line":133,"column":2},"end":{"line":133,"column":2}}]},"21":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"22":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"23":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":2},"end":{"line":171,"column":2}},{"start":{"line":171,"column":2},"end":{"line":171,"column":2}}]},"24":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":6},"end":{"line":171,"column":24}},{"start":{"line":171,"column":28},"end":{"line":171,"column":49}}]},"25":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":11},"end":{"line":174,"column":13}},{"start":{"line":174,"column":17},"end":{"line":174,"column":24}}]},"26":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":2},"end":{"line":197,"column":2}},{"start":{"line":197,"column":2},"end":{"line":197,"column":2}}]},"27":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":203,"column":4}},{"start":{"line":203,"column":4},"end":{"line":203,"column":4}}]},"28":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"29":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":2},"end":{"line":221,"column":2}},{"start":{"line":221,"column":2},"end":{"line":221,"column":2}}]},"30":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":228,"column":4}},{"start":{"line":228,"column":4},"end":{"line":228,"column":4}}]},"31":{"line":232,"type":"cond-expr","locations":[{"start":{"line":232,"column":36},"end":{"line":232,"column":45}},{"start":{"line":232,"column":48},"end":{"line":232,"column":59}}]},"32":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":6},"end":{"line":239,"column":6}},{"start":{"line":239,"column":6},"end":{"line":239,"column":6}}]},"33":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":10},"end":{"line":239,"column":34}},{"start":{"line":239,"column":38},"end":{"line":239,"column":51}}]},"34":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":10},"end":{"line":242,"column":10}},{"start":{"line":242,"column":10},"end":{"line":242,"column":10}}]},"35":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":2},"end":{"line":264,"column":2}},{"start":{"line":264,"column":2},"end":{"line":264,"column":2}}]},"36":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":2},"end":{"line":271,"column":2}},{"start":{"line":271,"column":2},"end":{"line":271,"column":2}}]},"37":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":2},"end":{"line":274,"column":2}},{"start":{"line":274,"column":2},"end":{"line":274,"column":2}}]},"38":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":4},"end":{"line":285,"column":4}},{"start":{"line":285,"column":4},"end":{"line":285,"column":4}}]},"39":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":8},"end":{"line":285,"column":25}},{"start":{"line":285,"column":29},"end":{"line":285,"column":41}}]},"40":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":4},"end":{"line":288,"column":4}},{"start":{"line":288,"column":4},"end":{"line":288,"column":4}}]},"41":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":4},"end":{"line":292,"column":4}},{"start":{"line":292,"column":4},"end":{"line":292,"column":4}}]},"42":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":6},"end":{"line":293,"column":6}},{"start":{"line":293,"column":6},"end":{"line":293,"column":6}}]},"43":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":8},"end":{"line":294,"column":8}},{"start":{"line":294,"column":8},"end":{"line":294,"column":8}}]},"44":{"line":294,"type":"binary-expr","locations":[{"start":{"line":294,"column":12},"end":{"line":294,"column":24}},{"start":{"line":294,"column":28},"end":{"line":294,"column":50}}]},"45":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":17},"end":{"line":295,"column":31}},{"start":{"line":295,"column":35},"end":{"line":295,"column":69}}]}},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","'use strict';","","var assert = require('assert');","var util = require('util');","var EventEmitter = require('events').EventEmitter;","var traverse = require('traverse');","var ModelBaseClass = require('./model');","var ModelBuilder = require('./model-builder');","","/**"," * Model definition"," */","module.exports = ModelDefinition;","","/**"," * Constructor for ModelDefinition"," * @param {ModelBuilder} modelBuilder A model builder instance"," * @param {String|Object} name The model name or the schema object"," * @param {Object} properties The model properties, optional"," * @param {Object} settings The model settings, optional"," * @returns {ModelDefinition}"," * @constructor"," *"," */","function ModelDefinition(modelBuilder, name, properties, settings) {","  if (!(this instanceof ModelDefinition)) {","    // Allow to call ModelDefinition without new","    return new ModelDefinition(modelBuilder, name, properties, settings);","  }","  this.modelBuilder = modelBuilder || ModelBuilder.defaultInstance;","  assert(name, 'name is missing');","","  if (arguments.length === 2 && typeof name === 'object') {","    var schema = name;","    this.name = schema.name;","    this.rawProperties = schema.properties || {}; // Keep the raw property definitions","    this.settings = schema.settings || {};","  } else {","    assert(typeof name === 'string', 'name must be a string');","    this.name = name;","    this.rawProperties = properties || {}; // Keep the raw property definitions","    this.settings = settings || {};","  }","  this.relations = [];","  this.properties = null;","  this.build();","}","","util.inherits(ModelDefinition, EventEmitter);","","// Set up types","require('./types')(ModelDefinition);","","/**"," * Return table name for specified `modelName`"," * @param {String} connectorType The connector type, such as 'oracle' or 'mongodb'"," */","ModelDefinition.prototype.tableName = function(connectorType) {","  var settings = this.settings;","  if (settings[connectorType]) {","    return settings[connectorType].table || settings[connectorType].tableName || this.name;","  } else {","    return this.name;","  }","};","","/**"," * Return column name for specified modelName and propertyName"," * @param {String} connectorType The connector type, such as 'oracle' or 'mongodb'"," * @param propertyName The property name"," * @returns {String} columnName"," */","ModelDefinition.prototype.columnName = function(connectorType, propertyName) {","  if (!propertyName) {","    return propertyName;","  }","  this.build();","  var property = this.properties[propertyName];","  if (property && property[connectorType]) {","    return property[connectorType].column || property[connectorType].columnName || propertyName;","  } else {","    return propertyName;","  }","};","","/**"," * Return column metadata for specified modelName and propertyName"," * @param {String} connectorType The connector type, such as 'oracle' or 'mongodb'"," * @param propertyName The property name"," * @returns {Object} column metadata"," */","ModelDefinition.prototype.columnMetadata = function(connectorType, propertyName) {","  if (!propertyName) {","    return propertyName;","  }","  this.build();","  var property = this.properties[propertyName];","  if (property && property[connectorType]) {","    return property[connectorType];","  } else {","    return null;","  }","};","","/**"," * Return column names for specified modelName"," * @param {String} connectorType The connector type, such as 'oracle' or 'mongodb'"," * @returns {String[]} column names"," */","ModelDefinition.prototype.columnNames = function(connectorType) {","  this.build();","  var props = this.properties;","  var cols = [];","  for (var p in props) {","    if (props[p][connectorType]) {","      cols.push(props[p][connectorType].column || props[p][connectorType].columnName || p);","    } else {","      cols.push(p);","    }","  }","  return cols;","};","","/**"," * Find the ID properties sorted by the index"," * @returns {Object[]} property name/index for IDs"," */","ModelDefinition.prototype.ids = function() {","  if (this._ids) {","    return this._ids;","  }","  var ids = [];","  this.build();","  var props = this.properties;","  for (var key in props) {","    var id = props[key].id;","    if (!id) {","      continue;","    }","    if (typeof id !== 'number') {","      id = 1;","    }","    ids.push({name: key, id: id, property: props[key]});","  }","  ids.sort(function(a, b) {","    return a.id - b.id;","  });","  this._ids = ids;","  return ids;","};","","/**"," * Find the ID column name"," * @param {String} modelName The model name"," * @returns {String} columnName for ID"," */","ModelDefinition.prototype.idColumnName = function(connectorType) {","  return this.columnName(connectorType, this.idName());","};","","/**"," * Find the ID property name"," * @returns {String} property name for ID"," */","ModelDefinition.prototype.idName = function() {","  var id = this.ids()[0];","  if (this.properties.id && this.properties.id.id) {","    return 'id';","  } else {","    return id && id.name;","  }","};","","/**"," * Find the ID property names sorted by the index"," * @returns {String[]} property names for IDs"," */","ModelDefinition.prototype.idNames = function() {","  var ids = this.ids();","  var names = ids.map(function(id) {","    return id.name;","  });","  return names;","};","","/**"," *"," * @returns {{}}"," */","ModelDefinition.prototype.indexes = function() {","  this.build();","  var indexes = {};","  if (this.settings.indexes) {","    for (var i in this.settings.indexes) {","      indexes[i] = this.settings.indexes[i];","    }","  }","  for (var p in this.properties) {","    if (this.properties[p].index) {","      indexes[p + '_index'] = this.properties[p].index;","    }","  }","  return indexes;","};","","/**"," * Build a model definition"," * @param {Boolean} force Forcing rebuild"," */","ModelDefinition.prototype.build = function(forceRebuild) {","  if (forceRebuild) {","    this.properties = null;","    this.relations = [];","    this._ids = null;","    this.json = null;","  }","  if (this.properties) {","    return this.properties;","  }","  this.properties = {};","  for (var p in this.rawProperties) {","    var prop = this.rawProperties[p];","    var type = this.modelBuilder.resolveType(prop);","    if (typeof type === 'string') {","      this.relations.push({","        source: this.name,","        target: type,","        type: Array.isArray(prop) ? 'hasMany' : 'belongsTo',","        as: p,","      });","    } else {","      var typeDef = {","        type: type,","      };","      if (typeof prop === 'object' && prop !== null) {","        for (var a in prop) {","          // Skip the type property but don't delete it Model.extend() shares same instances of the properties from the base class","          if (a !== 'type') {","            typeDef[a] = prop[a];","          }","        }","      }","      this.properties[p] = typeDef;","    }","  }","  return this.properties;","};","","/**"," * Define a property"," * @param {String} propertyName The property name"," * @param {Object} propertyDefinition The property definition"," */","ModelDefinition.prototype.defineProperty = function(propertyName, propertyDefinition) {","  this.rawProperties[propertyName] = propertyDefinition;","  this.build(true);","};","","function isModelClass(cls) {","  if (!cls) {","    return false;","  }","  return cls.prototype instanceof ModelBaseClass;","}","","ModelDefinition.prototype.toJSON = function(forceRebuild) {","  if (forceRebuild) {","    this.json = null;","  }","  if (this.json) {","    return this.json;","  }","  var json = {","    name: this.name,","    properties: {},","    settings: this.settings,","  };","  this.build(forceRebuild);","","  var mapper = function(val) {","    if (val === undefined || val === null) {","      return val;","    }","    if ('function' === typeof val.toJSON) {","      // The value has its own toJSON() object","      return val.toJSON();","    }","    if ('function' === typeof val) {","      if (isModelClass(val)) {","        if (val.settings && val.settings.anonymous) {","          return val.definition && val.definition.toJSON().properties;","        } else {","          return val.modelName;","        }","      }","      return val.name;","    } else {","      return val;","    }","  };","  for (var p in this.properties) {","    json.properties[p] = traverse(this.properties[p]).map(mapper);","  }","  this.json = json;","  return json;","};","","ModelDefinition.prototype.hasPK = function() {","  return this.ids().length > 0;","};",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"17":1,"29":1,"30":19,"32":0,"34":19,"35":19,"37":19,"38":0,"39":0,"40":0,"41":0,"43":19,"44":19,"45":19,"46":19,"48":19,"49":19,"50":19,"53":1,"56":1,"62":1,"63":0,"64":0,"65":0,"67":0,"77":1,"78":0,"79":0,"81":0,"82":0,"83":0,"84":0,"86":0,"96":1,"97":0,"98":0,"100":0,"101":0,"102":0,"103":0,"105":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"122":0,"125":0,"132":1,"133":38,"134":18,"136":20,"137":20,"138":20,"139":20,"140":87,"141":87,"142":74,"144":13,"145":5,"147":13,"149":20,"150":0,"152":20,"153":20,"161":1,"162":0,"169":1,"170":0,"171":0,"172":0,"174":0,"182":1,"183":38,"184":38,"185":25,"187":38,"194":1,"195":0,"196":0,"197":0,"198":0,"199":0,"202":0,"203":0,"204":0,"207":0,"214":1,"215":127,"216":1,"217":1,"218":1,"219":1,"221":127,"222":107,"224":20,"225":20,"226":87,"227":87,"228":87,"229":0,"236":87,"239":87,"240":64,"242":127,"243":67,"247":87,"250":20,"258":1,"259":1,"260":1,"263":1,"264":0,"265":0,"267":0,"270":1,"271":0,"272":0,"274":0,"275":0,"277":0,"282":0,"284":0,"285":0,"286":0,"288":0,"290":0,"292":0,"293":0,"294":0,"295":0,"297":0,"300":0,"302":0,"305":0,"306":0,"308":0,"309":0,"312":1,"313":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/geo.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/geo.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":1,"92":0,"93":1,"94":1,"95":1,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"nearFilter","line":14,"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":48}}},"2":{"name":"nearSearch","line":15,"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":42}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":32},"end":{"line":21,"column":52}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":34},"end":{"line":23,"column":54}}},"5":{"name":"(anonymous_5)","line":69,"loc":{"start":{"line":69,"column":17},"end":{"line":69,"column":47}}},"6":{"name":"(anonymous_6)","line":73,"loc":{"start":{"line":73,"column":18},"end":{"line":73,"column":35}}},"7":{"name":"(anonymous_7)","line":81,"loc":{"start":{"line":81,"column":23},"end":{"line":81,"column":40}}},"8":{"name":"(anonymous_8)","line":101,"loc":{"start":{"line":101,"column":17},"end":{"line":101,"column":38}}},"9":{"name":"GeoPoint","line":163,"loc":{"start":{"line":163,"column":0},"end":{"line":163,"column":24}}},"10":{"name":"distanceBetween","line":225,"loc":{"start":{"line":225,"column":27},"end":{"line":225,"column":67}}},"11":{"name":"(anonymous_11)","line":266,"loc":{"start":{"line":266,"column":32},"end":{"line":266,"column":57}}},"12":{"name":"(anonymous_12)","line":274,"loc":{"start":{"line":274,"column":30},"end":{"line":274,"column":41}}},"13":{"name":"geoDistance","line":300,"loc":{"start":{"line":300,"column":0},"end":{"line":300,"column":46}}},"14":{"name":"(anonymous_14)","line":311,"loc":{"start":{"line":311,"column":18},"end":{"line":311,"column":30}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"2":{"start":{"line":14,"column":0},"end":{"line":47,"column":2}},"3":{"start":{"line":15,"column":2},"end":{"line":42,"column":3}},"4":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"5":{"start":{"line":17,"column":6},"end":{"line":17,"column":19}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":34}},"7":{"start":{"line":21,"column":4},"end":{"line":41,"column":7}},"8":{"start":{"line":22,"column":6},"end":{"line":40,"column":7}},"9":{"start":{"line":23,"column":8},"end":{"line":26,"column":11}},"10":{"start":{"line":24,"column":10},"end":{"line":24,"column":79}},"11":{"start":{"line":25,"column":10},"end":{"line":25,"column":30}},"12":{"start":{"line":25,"column":19},"end":{"line":25,"column":30}},"13":{"start":{"line":28,"column":8},"end":{"line":39,"column":9}},"14":{"start":{"line":29,"column":10},"end":{"line":29,"column":41}},"15":{"start":{"line":30,"column":10},"end":{"line":38,"column":13}},"16":{"start":{"line":43,"column":2},"end":{"line":43,"column":23}},"17":{"start":{"line":44,"column":2},"end":{"line":44,"column":20}},"18":{"start":{"line":46,"column":2},"end":{"line":46,"column":53}},"19":{"start":{"line":69,"column":0},"end":{"line":118,"column":2}},"20":{"start":{"line":70,"column":2},"end":{"line":70,"column":21}},"21":{"start":{"line":71,"column":2},"end":{"line":71,"column":19}},"22":{"start":{"line":73,"column":2},"end":{"line":115,"column":5}},"23":{"start":{"line":74,"column":4},"end":{"line":74,"column":29}},"24":{"start":{"line":75,"column":4},"end":{"line":75,"column":66}},"25":{"start":{"line":76,"column":4},"end":{"line":76,"column":66}},"26":{"start":{"line":77,"column":4},"end":{"line":77,"column":27}},"27":{"start":{"line":78,"column":4},"end":{"line":78,"column":25}},"28":{"start":{"line":81,"column":4},"end":{"line":99,"column":7}},"29":{"start":{"line":82,"column":6},"end":{"line":82,"column":28}},"30":{"start":{"line":85,"column":6},"end":{"line":85,"column":23}},"31":{"start":{"line":85,"column":16},"end":{"line":85,"column":23}},"32":{"start":{"line":87,"column":6},"end":{"line":87,"column":58}},"33":{"start":{"line":87,"column":38},"end":{"line":87,"column":58}},"34":{"start":{"line":89,"column":6},"end":{"line":89,"column":46}},"35":{"start":{"line":89,"column":39},"end":{"line":89,"column":46}},"36":{"start":{"line":90,"column":6},"end":{"line":90,"column":46}},"37":{"start":{"line":90,"column":39},"end":{"line":90,"column":46}},"38":{"start":{"line":92,"column":6},"end":{"line":92,"column":66}},"39":{"start":{"line":95,"column":6},"end":{"line":95,"column":55}},"40":{"start":{"line":95,"column":48},"end":{"line":95,"column":55}},"41":{"start":{"line":97,"column":6},"end":{"line":97,"column":31}},"42":{"start":{"line":98,"column":6},"end":{"line":98,"column":27}},"43":{"start":{"line":101,"column":4},"end":{"line":114,"column":7}},"44":{"start":{"line":102,"column":6},"end":{"line":102,"column":24}},"45":{"start":{"line":103,"column":6},"end":{"line":103,"column":24}},"46":{"start":{"line":105,"column":6},"end":{"line":113,"column":7}},"47":{"start":{"line":106,"column":8},"end":{"line":106,"column":36}},"48":{"start":{"line":107,"column":8},"end":{"line":107,"column":36}},"49":{"start":{"line":109,"column":8},"end":{"line":109,"column":32}},"50":{"start":{"line":109,"column":23},"end":{"line":109,"column":32}},"51":{"start":{"line":110,"column":8},"end":{"line":110,"column":32}},"52":{"start":{"line":112,"column":8},"end":{"line":112,"column":17}},"53":{"start":{"line":117,"column":2},"end":{"line":117,"column":17}},"54":{"start":{"line":120,"column":0},"end":{"line":120,"column":28}},"55":{"start":{"line":163,"column":0},"end":{"line":206,"column":1}},"56":{"start":{"line":164,"column":2},"end":{"line":166,"column":3}},"57":{"start":{"line":165,"column":4},"end":{"line":165,"column":30}},"58":{"start":{"line":168,"column":2},"end":{"line":173,"column":3}},"59":{"start":{"line":169,"column":4},"end":{"line":172,"column":6}},"60":{"start":{"line":175,"column":2},"end":{"line":176,"column":92}},"61":{"start":{"line":178,"column":2},"end":{"line":185,"column":3}},"62":{"start":{"line":179,"column":4},"end":{"line":184,"column":5}},"63":{"start":{"line":180,"column":6},"end":{"line":180,"column":30}},"64":{"start":{"line":182,"column":6},"end":{"line":182,"column":32}},"65":{"start":{"line":183,"column":6},"end":{"line":183,"column":101}},"66":{"start":{"line":186,"column":2},"end":{"line":194,"column":3}},"67":{"start":{"line":187,"column":4},"end":{"line":190,"column":6}},"68":{"start":{"line":192,"column":4},"end":{"line":192,"column":32}},"69":{"start":{"line":193,"column":4},"end":{"line":193,"column":32}},"70":{"start":{"line":196,"column":2},"end":{"line":196,"column":97}},"71":{"start":{"line":197,"column":2},"end":{"line":197,"column":108}},"72":{"start":{"line":198,"column":2},"end":{"line":198,"column":108}},"73":{"start":{"line":199,"column":2},"end":{"line":199,"column":48}},"74":{"start":{"line":200,"column":2},"end":{"line":200,"column":50}},"75":{"start":{"line":201,"column":2},"end":{"line":201,"column":46}},"76":{"start":{"line":202,"column":2},"end":{"line":202,"column":48}},"77":{"start":{"line":204,"column":2},"end":{"line":204,"column":22}},"78":{"start":{"line":205,"column":2},"end":{"line":205,"column":22}},"79":{"start":{"line":225,"column":0},"end":{"line":240,"column":2}},"80":{"start":{"line":226,"column":2},"end":{"line":228,"column":3}},"81":{"start":{"line":227,"column":4},"end":{"line":227,"column":20}},"82":{"start":{"line":229,"column":2},"end":{"line":231,"column":3}},"83":{"start":{"line":230,"column":4},"end":{"line":230,"column":20}},"84":{"start":{"line":233,"column":2},"end":{"line":233,"column":17}},"85":{"start":{"line":234,"column":2},"end":{"line":234,"column":17}},"86":{"start":{"line":236,"column":2},"end":{"line":236,"column":17}},"87":{"start":{"line":237,"column":2},"end":{"line":237,"column":17}},"88":{"start":{"line":239,"column":2},"end":{"line":239,"column":46}},"89":{"start":{"line":266,"column":0},"end":{"line":268,"column":2}},"90":{"start":{"line":267,"column":2},"end":{"line":267,"column":56}},"91":{"start":{"line":274,"column":0},"end":{"line":276,"column":2}},"92":{"start":{"line":275,"column":2},"end":{"line":275,"column":35}},"93":{"start":{"line":285,"column":0},"end":{"line":285,"column":28}},"94":{"start":{"line":288,"column":0},"end":{"line":288,"column":29}},"95":{"start":{"line":291,"column":0},"end":{"line":298,"column":2}},"96":{"start":{"line":300,"column":0},"end":{"line":318,"column":1}},"97":{"start":{"line":301,"column":2},"end":{"line":301,"column":50}},"98":{"start":{"line":304,"column":2},"end":{"line":304,"column":20}},"99":{"start":{"line":305,"column":2},"end":{"line":305,"column":20}},"100":{"start":{"line":306,"column":2},"end":{"line":306,"column":20}},"101":{"start":{"line":307,"column":2},"end":{"line":307,"column":20}},"102":{"start":{"line":311,"column":2},"end":{"line":313,"column":4}},"103":{"start":{"line":312,"column":4},"end":{"line":312,"column":42}},"104":{"start":{"line":315,"column":2},"end":{"line":315,"column":91}},"105":{"start":{"line":317,"column":2},"end":{"line":317,"column":47}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":17},"end":{"line":19,"column":27}},{"start":{"line":19,"column":31},"end":{"line":19,"column":33}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":6}},{"start":{"line":22,"column":6},"end":{"line":22,"column":6}}]},"4":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":10},"end":{"line":25,"column":10}},{"start":{"line":25,"column":10},"end":{"line":25,"column":10}}]},"5":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":8}},{"start":{"line":28,"column":8},"end":{"line":28,"column":8}}]},"6":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":42},"end":{"line":36,"column":70}},{"start":{"line":36,"column":73},"end":{"line":36,"column":82}}]},"7":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":32},"end":{"line":46,"column":37}},{"start":{"line":46,"column":40},"end":{"line":46,"column":51}}]},"8":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":39},"end":{"line":75,"column":57}},{"start":{"line":75,"column":60},"end":{"line":75,"column":65}}]},"9":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":39},"end":{"line":76,"column":57}},{"start":{"line":76,"column":60},"end":{"line":76,"column":65}}]},"10":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":6},"end":{"line":85,"column":6}},{"start":{"line":85,"column":6},"end":{"line":85,"column":6}}]},"11":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":6},"end":{"line":87,"column":6}},{"start":{"line":87,"column":6},"end":{"line":87,"column":6}}]},"12":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":6}},{"start":{"line":89,"column":6},"end":{"line":89,"column":6}}]},"13":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":6},"end":{"line":90,"column":6}},{"start":{"line":90,"column":6},"end":{"line":90,"column":6}}]},"14":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":6},"end":{"line":95,"column":6}},{"start":{"line":95,"column":6},"end":{"line":95,"column":6}}]},"15":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":11},"end":{"line":95,"column":14}},{"start":{"line":95,"column":18},"end":{"line":95,"column":25}},{"start":{"line":95,"column":31},"end":{"line":95,"column":34}},{"start":{"line":95,"column":38},"end":{"line":95,"column":45}}]},"16":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":6},"end":{"line":105,"column":6}},{"start":{"line":105,"column":6},"end":{"line":105,"column":6}}]},"17":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":10},"end":{"line":105,"column":11}},{"start":{"line":105,"column":15},"end":{"line":105,"column":16}}]},"18":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":8},"end":{"line":109,"column":8}},{"start":{"line":109,"column":8},"end":{"line":109,"column":8}}]},"19":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":25},"end":{"line":110,"column":26}},{"start":{"line":110,"column":29},"end":{"line":110,"column":31}}]},"20":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":2},"end":{"line":164,"column":2}},{"start":{"line":164,"column":2},"end":{"line":164,"column":2}}]},"21":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":2},"end":{"line":168,"column":2}},{"start":{"line":168,"column":2},"end":{"line":168,"column":2}}]},"22":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":9},"end":{"line":175,"column":28}},{"start":{"line":175,"column":32},"end":{"line":175,"column":56}},{"start":{"line":175,"column":60},"end":{"line":175,"column":84}}]},"23":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"24":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":2},"end":{"line":186,"column":2}},{"start":{"line":186,"column":2},"end":{"line":186,"column":2}}]},"25":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":9},"end":{"line":197,"column":37}},{"start":{"line":197,"column":41},"end":{"line":197,"column":57}}]},"26":{"line":198,"type":"binary-expr","locations":[{"start":{"line":198,"column":9},"end":{"line":198,"column":37}},{"start":{"line":198,"column":41},"end":{"line":198,"column":57}}]},"27":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":2},"end":{"line":226,"column":2}},{"start":{"line":226,"column":2},"end":{"line":226,"column":2}}]},"28":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":2},"end":{"line":229,"column":2}},{"start":{"line":229,"column":2},"end":{"line":229,"column":2}}]},"29":{"line":301,"type":"binary-expr","locations":[{"start":{"line":301,"column":14},"end":{"line":301,"column":21}},{"start":{"line":301,"column":25},"end":{"line":301,"column":37}},{"start":{"line":301,"column":42},"end":{"line":301,"column":49}}]}},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","var assert = require('assert');","","/*!"," * Get a near filter from a given where object. For connector use only."," */","","exports.nearFilter = function nearFilter(where) {","  function nearSearch(clause, parentKeys) {","    if (typeof clause !== 'object') {","      return false;","    }","    parentKeys = parentKeys || [];","","    Object.keys(clause).forEach(function(clauseKey) {","      if (Array.isArray(clause[clauseKey])) {","        clause[clauseKey].forEach(function(el, index) {","          var ret = nearSearch(el, parentKeys.concat(clauseKey).concat(index));","          if (ret) return ret;","        });","      } else {","        if (clause[clauseKey].hasOwnProperty('near')) {","          var result = clause[clauseKey];","          nearResults.push({","            near: result.near,","            maxDistance: result.maxDistance,","            minDistance: result.minDistance,","            unit: result.unit,","            // If key is at root, define a single string, otherwise append it to the full path array","            mongoKey: parentKeys.length ? parentKeys.concat(clauseKey) : clauseKey,","            key: clauseKey,","          });","        }","      }","    });","  }","  var nearResults = [];","  nearSearch(where);","","  return (!nearResults.length ? false : nearResults);","};","","/*!"," * Filter a set of results using the given filters returned by `nearFilter()`."," * Can support multiple locations, but will include results from all of them."," *"," * WARNING: \"or\" operator with GeoPoint does not work as expected, eg:"," * {where: {or: [{location: {near: (29,-90)}},{name:'Sean'}]}}"," * Will actually work as if you had used \"and\".  This is because geo filtering"," * takes place outside of the SQL query, so the result set of \"name = Sean\" is"," * returned by the database, and then the location filtering happens in the app"," * logic.  So the \"near\" operator is always an \"and\" of the SQL filters, and \"or\""," * of other GeoPoint filters."," *"," * Additionally, since this step occurs after the SQL result set is returned,"," * if using GeoPoints with pagination the result set may be smaller than the"," * page size.  The page size is enforced at the DB level, and then we may"," * remove results at the Geo-app level.  If we \"limit: 25\", but 4 of those results"," * do not have a matching geopoint field, the request will only return 21 results."," * This may make it erroneously look like a given page is the end of the result set."," */","","exports.filter = function(rawResults, filters) {","  var distances = {};","  var results = [];","","  filters.forEach(function(filter) {","    var origin = filter.near;","    var max = filter.maxDistance > 0 ? filter.maxDistance : false;","    var min = filter.minDistance > 0 ? filter.minDistance : false;","    var unit = filter.unit;","    var key = filter.key;","","    // create distance index","    rawResults.forEach(function(result) {","      var loc = result[key];","","      // filter out results without locations","      if (!loc) return;","","      if (!(loc instanceof GeoPoint)) loc = GeoPoint(loc);","","      if (typeof loc.lat !== 'number') return;","      if (typeof loc.lng !== 'number') return;","","      var d = GeoPoint.distanceBetween(origin, loc, {type: unit});","","      // filter result if distance is either < minDistance or > maxDistance","      if ((min && d < min) || (max && d > max)) return;","","      distances[result.id] = d;","      results.push(result);","    });","","    results.sort(function(resA, resB) {","      var a = resA[key];","      var b = resB[key];","","      if (a && b) {","        var da = distances[resA.id];","        var db = distances[resB.id];","","        if (db === da) return 0;","        return da > db ? 1 : -1;","      } else {","        return 0;","      }","    });","  });","","  return results;","};","","exports.GeoPoint = GeoPoint;","","/**"," * The GeoPoint object represents a physical location."," *"," * For example:"," *"," * ```js"," * var loopback = require(‘loopback’);"," * var here = new loopback.GeoPoint({lat: 10.32424, lng: 5.84978});"," * ```"," *"," * Embed a latitude / longitude point in a model."," *"," * ```js"," * var CoffeeShop = loopback.createModel('coffee-shop', {"," *   location: 'GeoPoint'"," * });"," * ```"," *"," * You can query LoopBack models with a GeoPoint property and an attached data source using geo-spatial filters and"," * sorting. For example, the following code finds the three nearest coffee shops."," *"," * ```js"," * CoffeeShop.attachTo(oracle);"," * var here = new GeoPoint({lat: 10.32424, lng: 5.84978});"," * CoffeeShop.find( {where: {location: {near: here}}, limit:3}, function(err, nearbyShops) {"," *   console.info(nearbyShops); // [CoffeeShop, ...]"," * });"," * ```"," * @class GeoPoint"," * @property {Number} lat The latitude in degrees."," * @property {Number} lng The longitude in degrees."," *"," * @options {Object} Options Object with two Number properties: lat and long."," * @property {Number} lat The latitude point in degrees. Range: -90 to 90."," * @property {Number} lng The longitude point in degrees. Range: -180 to 180."," *"," * @options {Array} Options Array with two Number entries: [lat,long]."," * @property {Number} lat The latitude point in degrees. Range: -90 to 90."," * @property {Number} lng The longitude point in degrees. Range: -180 to 180."," */","","function GeoPoint(data) {","  if (!(this instanceof GeoPoint)) {","    return new GeoPoint(data);","  }","","  if (arguments.length === 2) {","    data = {","      lat: arguments[0],","      lng: arguments[1],","    };","  }","","  assert(Array.isArray(data) || typeof data === 'object' || typeof data === 'string',","    'must provide valid geo-coordinates array [lat, lng] or object or a \"lat, lng\" string');","","  if (typeof data === 'string') {","    try {","      data = JSON.parse(data);","    } catch (err) {","      data = data.split(/,\\s*/);","      assert(data.length === 2, 'must provide a string \"lat,lng\" creating a GeoPoint with a string');","    }","  }","  if (Array.isArray(data)) {","    data = {","      lat: Number(data[0]),","      lng: Number(data[1]),","    };","  } else {","    data.lng = Number(data.lng);","    data.lat = Number(data.lat);","  }","","  assert(typeof data === 'object', 'must provide a lat and lng object when creating a GeoPoint');","  assert(typeof data.lat === 'number' && !isNaN(data.lat), 'lat must be a number when creating a GeoPoint');","  assert(typeof data.lng === 'number' && !isNaN(data.lng), 'lng must be a number when creating a GeoPoint');","  assert(data.lng <= 180, 'lng must be <= 180');","  assert(data.lng >= -180, 'lng must be >= -180');","  assert(data.lat <= 90, 'lat must be <= 90');","  assert(data.lat >= -90, 'lat must be >= -90');","","  this.lat = data.lat;","  this.lng = data.lng;","}","","/**"," * Determine the spherical distance between two GeoPoints."," *"," * @param  {GeoPoint} pointA Point A"," * @param  {GeoPoint} pointB Point B"," * @options  {Object} options Options object with one key, 'type'.  See below."," * @property {String} type Unit of measurement, one of:"," *"," * - `miles` (default)"," * - `radians`"," * - `kilometers`"," * - `meters`"," * - `miles`"," * - `feet`"," * - `degrees`"," */","","GeoPoint.distanceBetween = function distanceBetween(a, b, options) {","  if (!(a instanceof GeoPoint)) {","    a = GeoPoint(a);","  }","  if (!(b instanceof GeoPoint)) {","    b = GeoPoint(b);","  }","","  var x1 = a.lat;","  var y1 = a.lng;","","  var x2 = b.lat;","  var y2 = b.lng;","","  return geoDistance(x1, y1, x2, y2, options);","};","","/**"," * Determine the spherical distance to the given point."," * Example:"," * ```js"," * var loopback = require(‘loopback’);"," *"," * var here = new loopback.GeoPoint({lat: 10, lng: 10});"," * var there = new loopback.GeoPoint({lat: 5, lng: 5});"," *"," * loopback.GeoPoint.distanceBetween(here, there, {type: 'miles'}) // 438"," * ```"," * @param {Object} point GeoPoint object to which to measure distance."," * @options  {Object} options Options object with one key, 'type'.  See below."," * @property {String} type Unit of measurement, one of:"," *"," * - `miles` (default)"," * - `radians`"," * - `kilometers`"," * - `meters`"," * - `miles`"," * - `feet`"," * - `degrees`"," */","","GeoPoint.prototype.distanceTo = function(point, options) {","  return GeoPoint.distanceBetween(this, point, options);","};","","/**"," * Simple serialization."," */","","GeoPoint.prototype.toString = function() {","  return this.lat + ',' + this.lng;","};","","/**"," * @property {Number} DEG2RAD - Factor to convert degrees to radians."," * @property {Number} RAD2DEG - Factor to convert radians to degrees."," * @property {Object} EARTH_RADIUS - Radius of the earth.","*/","","// factor to convert degrees to radians","var DEG2RAD = 0.01745329252;","","// factor to convert radians degrees to degrees","var RAD2DEG = 57.29577951308;","","// radius of the earth","var EARTH_RADIUS = {","  kilometers: 6370.99056,","  meters: 6370990.56,","  miles: 3958.75,","  feet: 20902200,","  radians: 1,","  degrees: RAD2DEG,","};","","function geoDistance(x1, y1, x2, y2, options) {","  var type = (options && options.type) || 'miles';","","  // Convert to radians","  x1 = x1 * DEG2RAD;","  y1 = y1 * DEG2RAD;","  x2 = x2 * DEG2RAD;","  y2 = y2 * DEG2RAD;","","  // use the haversine formula to calculate distance for any 2 points on a sphere.","  // ref http://en.wikipedia.org/wiki/Haversine_formula","  var haversine = function(a) {","    return Math.pow(Math.sin(a / 2.0), 2);","  };","","  var f = Math.sqrt(haversine(x2 - x1) + Math.cos(x2) * Math.cos(x1) * haversine(y2 - y1));","","  return 2 * Math.asin(f) * EARTH_RADIUS[type];","}",""],"l":{"8":1,"14":1,"15":1,"16":0,"17":0,"19":0,"21":0,"22":0,"23":0,"24":0,"25":0,"28":0,"29":0,"30":0,"43":0,"44":0,"46":0,"69":1,"70":0,"71":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"81":0,"82":0,"85":0,"87":0,"89":0,"90":0,"92":0,"95":0,"97":0,"98":0,"101":0,"102":0,"103":0,"105":0,"106":0,"107":0,"109":0,"110":0,"112":0,"117":0,"120":1,"163":1,"164":0,"165":0,"168":0,"169":0,"175":0,"178":0,"179":0,"180":0,"182":0,"183":0,"186":0,"187":0,"192":0,"193":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"204":0,"205":0,"225":1,"226":0,"227":0,"229":0,"230":0,"233":0,"234":0,"236":0,"237":0,"239":0,"266":1,"267":0,"274":1,"275":0,"285":1,"288":1,"291":1,"300":1,"301":0,"304":0,"305":0,"306":0,"307":0,"311":0,"312":0,"315":0,"317":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/mixins.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/mixins.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1,"10":2,"11":2,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":2,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"isModelClass","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":27}}},"2":{"name":"MixinProvider","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"3":{"name":"applyMixin","line":31,"loc":{"start":{"line":31,"column":37},"end":{"line":31,"column":84}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":44},"end":{"line":37,"column":55}}},"5":{"name":"defineMixin","line":60,"loc":{"start":{"line":60,"column":33},"end":{"line":60,"column":67}}},"6":{"name":"(anonymous_6)","line":68,"loc":{"start":{"line":68,"column":24},"end":{"line":68,"column":49}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":47}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"4":{"start":{"line":11,"column":0},"end":{"line":16,"column":1}},"5":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":17}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":56}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":31}},"9":{"start":{"line":20,"column":0},"end":{"line":23,"column":1}},"10":{"start":{"line":21,"column":2},"end":{"line":21,"column":35}},"11":{"start":{"line":22,"column":2},"end":{"line":22,"column":19}},"12":{"start":{"line":31,"column":0},"end":{"line":53,"column":2}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":29}},"14":{"start":{"line":33,"column":2},"end":{"line":52,"column":3}},"15":{"start":{"line":34,"column":4},"end":{"line":40,"column":5}},"16":{"start":{"line":35,"column":6},"end":{"line":35,"column":36}},"17":{"start":{"line":37,"column":6},"end":{"line":39,"column":9}},"18":{"start":{"line":38,"column":8},"end":{"line":38,"column":38}},"19":{"start":{"line":43,"column":4},"end":{"line":43,"column":49}},"20":{"start":{"line":44,"column":4},"end":{"line":51,"column":5}},"21":{"start":{"line":45,"column":6},"end":{"line":45,"column":54}},"22":{"start":{"line":46,"column":6},"end":{"line":46,"column":39}},"23":{"start":{"line":48,"column":6},"end":{"line":48,"column":86}},"24":{"start":{"line":49,"column":6},"end":{"line":49,"column":20}},"25":{"start":{"line":50,"column":6},"end":{"line":50,"column":30}},"26":{"start":{"line":60,"column":0},"end":{"line":74,"column":2}},"27":{"start":{"line":61,"column":2},"end":{"line":61,"column":85}},"28":{"start":{"line":62,"column":2},"end":{"line":66,"column":3}},"29":{"start":{"line":63,"column":4},"end":{"line":63,"column":39}},"30":{"start":{"line":65,"column":4},"end":{"line":65,"column":38}},"31":{"start":{"line":67,"column":2},"end":{"line":73,"column":3}},"32":{"start":{"line":68,"column":4},"end":{"line":70,"column":6}},"33":{"start":{"line":69,"column":6},"end":{"line":69,"column":34}},"34":{"start":{"line":71,"column":9},"end":{"line":73,"column":3}},"35":{"start":{"line":72,"column":4},"end":{"line":72,"column":30}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"4":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":21},"end":{"line":35,"column":28}},{"start":{"line":35,"column":32},"end":{"line":35,"column":34}}]},"5":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":23},"end":{"line":38,"column":30}},{"start":{"line":38,"column":34},"end":{"line":38,"column":36}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"8":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"9":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":9},"end":{"line":71,"column":9}},{"start":{"line":71,"column":9},"end":{"line":71,"column":9}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","'use strict';","","var debug = require('debug')('loopback:mixin');","var assert = require('assert');","var DefaultModelBaseClass = require('./model.js');","","function isModelClass(cls) {","  if (!cls) {","    return false;","  }","  return cls.prototype instanceof DefaultModelBaseClass;","}","","module.exports = MixinProvider;","","function MixinProvider(modelBuilder) {","  this.modelBuilder = modelBuilder;","  this.mixins = {};","}","","/**"," * Apply named mixin to the model class"," * @param {Model} modelClass"," * @param {String} name"," * @param {Object} options"," */","MixinProvider.prototype.applyMixin = function applyMixin(modelClass, name, options) {","  var fn = this.mixins[name];","  if (typeof fn === 'function') {","    if (modelClass.dataSource) {","      fn(modelClass, options || {});","    } else {","      modelClass.once('dataSourceAttached', function() {","        fn(modelClass, options || {});","      });","    }","  } else {","    // Try model name","    var model = this.modelBuilder.getModel(name);","    if (model) {","      debug('Mixin is resolved to a model: %s', name);","      modelClass.mixin(model, options);","    } else {","      var errMsg = 'Model \"' + modelClass.modelName + '\" uses unknown mixin: ' + name;","      debug(errMsg);","      throw new Error(errMsg);","    }","  }","};","","/**"," * Define a mixin with name"," * @param {String} name Name of the mixin"," * @param {*) mixin The mixin function or a model"," */","MixinProvider.prototype.define = function defineMixin(name, mixin) {","  assert(typeof mixin === 'function', 'The mixin must be a function or model class');","  if (this.mixins[name]) {","    debug('Duplicate mixin: %s', name);","  } else {","    debug('Defining mixin: %s', name);","  }","  if (isModelClass(mixin)) {","    this.mixins[name] = function(Model, options) {","      Model.mixin(mixin, options);","    };","  } else if (typeof mixin === 'function') {","    this.mixins[name] = mixin;","  }","};",""],"l":{"7":1,"8":1,"9":1,"11":1,"12":0,"13":0,"15":0,"18":1,"20":1,"21":2,"22":2,"31":1,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"43":0,"44":0,"45":0,"46":0,"48":0,"49":0,"50":0,"60":1,"61":0,"62":0,"63":0,"65":0,"67":0,"68":0,"69":0,"71":0,"72":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/introspection.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/introspection.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"getIntrospector","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":56}}},"2":{"name":"introspectType","line":9,"loc":{"start":{"line":9,"column":2},"end":{"line":9,"column":33}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":65,"column":2}},"2":{"start":{"line":9,"column":2},"end":{"line":61,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"4":{"start":{"line":12,"column":6},"end":{"line":12,"column":30}},"5":{"start":{"line":16,"column":4},"end":{"line":21,"column":5}},"6":{"start":{"line":17,"column":6},"end":{"line":17,"column":43}},"7":{"start":{"line":18,"column":6},"end":{"line":20,"column":7}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":17}},"9":{"start":{"line":23,"column":4},"end":{"line":23,"column":28}},"10":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"11":{"start":{"line":25,"column":6},"end":{"line":25,"column":18}},"12":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"13":{"start":{"line":29,"column":6},"end":{"line":29,"column":20}},"14":{"start":{"line":32,"column":4},"end":{"line":32,"column":17}},"15":{"start":{"line":33,"column":4},"end":{"line":44,"column":5}},"16":{"start":{"line":34,"column":6},"end":{"line":42,"column":7}},"17":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"18":{"start":{"line":36,"column":10},"end":{"line":36,"column":19}},"19":{"start":{"line":38,"column":8},"end":{"line":38,"column":44}},"20":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"21":{"start":{"line":40,"column":10},"end":{"line":40,"column":28}},"22":{"start":{"line":43,"column":6},"end":{"line":43,"column":21}},"23":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"24":{"start":{"line":47,"column":6},"end":{"line":47,"column":36}},"25":{"start":{"line":50,"column":4},"end":{"line":50,"column":24}},"26":{"start":{"line":51,"column":4},"end":{"line":56,"column":5}},"27":{"start":{"line":52,"column":6},"end":{"line":52,"column":42}},"28":{"start":{"line":53,"column":6},"end":{"line":55,"column":7}},"29":{"start":{"line":54,"column":8},"end":{"line":54,"column":33}},"30":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"31":{"start":{"line":58,"column":6},"end":{"line":58,"column":22}},"32":{"start":{"line":60,"column":4},"end":{"line":60,"column":22}},"33":{"start":{"line":63,"column":2},"end":{"line":63,"column":43}},"34":{"start":{"line":64,"column":2},"end":{"line":64,"column":24}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":4}},{"start":{"line":11,"column":4},"end":{"line":11,"column":4}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":22}},{"start":{"line":11,"column":26},"end":{"line":11,"column":45}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":6}},{"start":{"line":18,"column":6},"end":{"line":18,"column":6}}]},"4":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":10},"end":{"line":18,"column":23}},{"start":{"line":18,"column":27},"end":{"line":18,"column":39}},{"start":{"line":18,"column":44},"end":{"line":18,"column":63}}]},"5":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"6":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":25}},{"start":{"line":24,"column":29},"end":{"line":24,"column":46}},{"start":{"line":24,"column":50},"end":{"line":24,"column":68}}]},"7":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"8":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"9":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":35,"column":8}},{"start":{"line":35,"column":8},"end":{"line":35,"column":8}}]},"10":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":12},"end":{"line":35,"column":29}},{"start":{"line":35,"column":33},"end":{"line":35,"column":55}}]},"11":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":8}},{"start":{"line":39,"column":8},"end":{"line":39,"column":8}}]},"12":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"13":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"14":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]}},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","module.exports = function getIntrospector(ModelBuilder) {","  function introspectType(value) {","    // Unknown type, using Any","    if (value === null || value === undefined) {","      return ModelBuilder.Any;","    }","","    // Check registered schemaTypes","    for (var t in ModelBuilder.schemaTypes) {","      var st = ModelBuilder.schemaTypes[t];","      if (st !== Object && st !== Array && (value instanceof st)) {","        return t;","      }","    }","","    var type = typeof value;","    if (type === 'string' || type === 'number' || type === 'boolean') {","      return type;","    }","","    if (value instanceof Date) {","      return 'date';","    }","","    var itemType;","    if (Array.isArray(value)) {","      for (var i = 0; i < value.length; i++) {","        if (value[i] === null || value[i] === undefined) {","          continue;","        }","        itemType = introspectType(value[i]);","        if (itemType) {","          return [itemType];","        }","      }","      return 'array';","    }","","    if (type === 'function') {","      return value.constructor.name;","    }","","    var properties = {};","    for (var p in value) {","      itemType = introspectType(value[p]);","      if (itemType) {","        properties[p] = itemType;","      }","    }","    if (Object.keys(properties).length === 0) {","      return 'object';","    }","    return properties;","  }","","  ModelBuilder.introspect = introspectType;","  return introspectType;","};",""],"l":{"8":1,"9":1,"11":0,"12":0,"16":0,"17":0,"18":0,"19":0,"23":0,"24":0,"25":0,"28":0,"29":0,"32":0,"33":0,"34":0,"35":0,"36":0,"38":0,"39":0,"40":0,"43":0,"46":0,"47":0,"50":0,"51":0,"52":0,"53":0,"54":0,"57":0,"58":0,"60":0,"63":1,"64":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/datasource.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/datasource.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":1,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":1,"190":0,"191":0,"192":0,"193":1,"194":1,"195":0,"196":1,"197":0,"198":0,"199":0,"200":1,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":1,"248":0,"249":0,"250":1,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":1,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":1,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":1,"310":0,"311":1,"312":0,"313":1,"314":0,"315":0,"316":0,"317":0,"318":0,"319":1,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":1,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":1,"339":0,"340":0,"341":0,"342":0,"343":1,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":1,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":1,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":1,"406":0,"407":0,"408":0,"409":0,"410":1,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":1,"423":0,"424":0,"425":0,"426":0,"427":1,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":1,"440":0,"441":0,"442":0,"443":0,"444":1,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":1,"457":0,"458":0,"459":0,"460":0,"461":1,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":1,"474":0,"475":0,"476":0,"477":0,"478":1,"479":0,"480":0,"481":0,"482":1,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":1,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":1,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":1,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":1,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":1,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":1,"688":0,"689":0,"690":1,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":1,"701":0,"702":0,"703":1,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":1,"711":0,"712":1,"713":0,"714":1,"715":0,"716":1,"717":0,"718":1,"719":0,"720":1,"721":0,"722":0,"723":0,"724":1,"725":0,"726":1,"727":0,"728":0,"729":0,"730":1,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":1,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":1,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":1,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":1,"808":0,"809":0,"810":0,"811":0,"812":1,"813":0,"814":0,"815":0,"816":0,"817":1,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":1,"825":0,"826":1,"827":0,"828":0,"829":0,"830":1,"831":0,"832":1,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":1,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":1,"882":0,"883":1,"884":0,"885":1,"886":1,"887":1},"b":{"1":[0,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0,0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0,0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0,0],"256":[0,0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0},"fnMap":{"1":{"name":"DataSource","line":91,"loc":{"start":{"line":91,"column":0},"end":{"line":91,"column":50}}},"2":{"name":"(anonymous_2)","line":130,"loc":{"start":{"line":130,"column":26},"end":{"line":130,"column":37}}},"3":{"name":"(anonymous_3)","line":134,"loc":{"start":{"line":134,"column":27},"end":{"line":134,"column":42}}},"4":{"name":"(anonymous_4)","line":151,"loc":{"start":{"line":151,"column":37},"end":{"line":151,"column":52}}},"5":{"name":"(anonymous_5)","line":177,"loc":{"start":{"line":177,"column":39},"end":{"line":177,"column":50}}},"6":{"name":"(anonymous_6)","line":186,"loc":{"start":{"line":186,"column":25},"end":{"line":186,"column":48}}},"7":{"name":"(anonymous_7)","line":190,"loc":{"start":{"line":190,"column":28},"end":{"line":190,"column":44}}},"8":{"name":"(anonymous_8)","line":193,"loc":{"start":{"line":193,"column":13},"end":{"line":193,"column":25}}},"9":{"name":"connectorModuleNames","line":203,"loc":{"start":{"line":203,"column":0},"end":{"line":203,"column":36}}},"10":{"name":"tryModules","line":220,"loc":{"start":{"line":220,"column":0},"end":{"line":220,"column":35}}},"11":{"name":"(anonymous_11)","line":251,"loc":{"start":{"line":251,"column":31},"end":{"line":251,"column":54}}},"12":{"name":"(anonymous_12)","line":270,"loc":{"start":{"line":270,"column":31},"end":{"line":270,"column":50}}},"13":{"name":"(anonymous_13)","line":283,"loc":{"start":{"line":283,"column":21},"end":{"line":283,"column":32}}},"14":{"name":"(anonymous_14)","line":298,"loc":{"start":{"line":298,"column":25},"end":{"line":298,"column":47}}},"15":{"name":"(anonymous_15)","line":309,"loc":{"start":{"line":309,"column":20},"end":{"line":309,"column":39}}},"16":{"name":"(anonymous_16)","line":318,"loc":{"start":{"line":318,"column":7},"end":{"line":318,"column":21}}},"17":{"name":"(anonymous_17)","line":332,"loc":{"start":{"line":332,"column":29},"end":{"line":332,"column":54}}},"18":{"name":"postInit","line":390,"loc":{"start":{"line":390,"column":19},"end":{"line":390,"column":50}}},"19":{"name":"isModelClass","line":428,"loc":{"start":{"line":428,"column":0},"end":{"line":428,"column":27}}},"20":{"name":"isModelDataSourceAttached","line":437,"loc":{"start":{"line":437,"column":0},"end":{"line":437,"column":42}}},"21":{"name":"(anonymous_21)","line":446,"loc":{"start":{"line":446,"column":36},"end":{"line":446,"column":65}}},"22":{"name":"(anonymous_22)","line":459,"loc":{"start":{"line":459,"column":39},"end":{"line":459,"column":71}}},"23":{"name":"(anonymous_23)","line":463,"loc":{"start":{"line":463,"column":23},"end":{"line":463,"column":75}}},"24":{"name":"(anonymous_24)","line":465,"loc":{"start":{"line":465,"column":47},"end":{"line":465,"column":63}}},"25":{"name":"(anonymous_25)","line":482,"loc":{"start":{"line":482,"column":48},"end":{"line":482,"column":64}}},"26":{"name":"(anonymous_26)","line":497,"loc":{"start":{"line":497,"column":35},"end":{"line":497,"column":48}}},"27":{"name":"isValidRelationName","line":544,"loc":{"start":{"line":544,"column":0},"end":{"line":544,"column":43}}},"28":{"name":"(anonymous_28)","line":555,"loc":{"start":{"line":555,"column":39},"end":{"line":555,"column":70}}},"29":{"name":"defineClass","line":650,"loc":{"start":{"line":650,"column":30},"end":{"line":650,"column":84}}},"30":{"name":"(anonymous_30)","line":698,"loc":{"start":{"line":698,"column":29},"end":{"line":698,"column":49}}},"31":{"name":"(anonymous_31)","line":706,"loc":{"start":{"line":706,"column":27},"end":{"line":706,"column":42}}},"32":{"name":"(anonymous_32)","line":716,"loc":{"start":{"line":716,"column":16},"end":{"line":716,"column":30}}},"33":{"name":"(anonymous_33)","line":724,"loc":{"start":{"line":724,"column":17},"end":{"line":724,"column":31}}},"34":{"name":"(anonymous_34)","line":736,"loc":{"start":{"line":736,"column":32},"end":{"line":736,"column":60}}},"35":{"name":"(anonymous_35)","line":743,"loc":{"start":{"line":743,"column":42},"end":{"line":743,"column":57}}},"36":{"name":"(anonymous_36)","line":752,"loc":{"start":{"line":752,"column":32},"end":{"line":752,"column":43}}},"37":{"name":"(anonymous_37)","line":766,"loc":{"start":{"line":766,"column":36},"end":{"line":766,"column":52}}},"38":{"name":"(anonymous_38)","line":789,"loc":{"start":{"line":789,"column":30},"end":{"line":789,"column":51}}},"39":{"name":"(anonymous_39)","line":817,"loc":{"start":{"line":817,"column":38},"end":{"line":817,"column":68}}},"40":{"name":"(anonymous_40)","line":837,"loc":{"start":{"line":837,"column":35},"end":{"line":837,"column":56}}},"41":{"name":"(anonymous_41)","line":868,"loc":{"start":{"line":868,"column":38},"end":{"line":868,"column":50}}},"42":{"name":"(anonymous_42)","line":873,"loc":{"start":{"line":873,"column":23},"end":{"line":873,"column":34}}},"43":{"name":"(anonymous_43)","line":892,"loc":{"start":{"line":892,"column":34},"end":{"line":892,"column":55}}},"44":{"name":"(anonymous_44)","line":923,"loc":{"start":{"line":923,"column":38},"end":{"line":923,"column":50}}},"45":{"name":"(anonymous_45)","line":928,"loc":{"start":{"line":928,"column":23},"end":{"line":928,"column":34}}},"46":{"name":"(anonymous_46)","line":954,"loc":{"start":{"line":954,"column":48},"end":{"line":954,"column":70}}},"47":{"name":"(anonymous_47)","line":981,"loc":{"start":{"line":981,"column":52},"end":{"line":981,"column":70}}},"48":{"name":"(anonymous_48)","line":1011,"loc":{"start":{"line":1011,"column":47},"end":{"line":1011,"column":80}}},"49":{"name":"(anonymous_49)","line":1035,"loc":{"start":{"line":1035,"column":51},"end":{"line":1035,"column":80}}},"50":{"name":"(anonymous_50)","line":1060,"loc":{"start":{"line":1060,"column":43},"end":{"line":1060,"column":76}}},"51":{"name":"(anonymous_51)","line":1085,"loc":{"start":{"line":1085,"column":47},"end":{"line":1085,"column":76}}},"52":{"name":"(anonymous_52)","line":1116,"loc":{"start":{"line":1116,"column":43},"end":{"line":1116,"column":76}}},"53":{"name":"(anonymous_53)","line":1141,"loc":{"start":{"line":1141,"column":47},"end":{"line":1141,"column":76}}},"54":{"name":"(anonymous_54)","line":1172,"loc":{"start":{"line":1172,"column":51},"end":{"line":1172,"column":84}}},"55":{"name":"(anonymous_55)","line":1196,"loc":{"start":{"line":1196,"column":55},"end":{"line":1196,"column":84}}},"56":{"name":"capitalize","line":1204,"loc":{"start":{"line":1204,"column":0},"end":{"line":1204,"column":25}}},"57":{"name":"fromDBName","line":1211,"loc":{"start":{"line":1211,"column":0},"end":{"line":1211,"column":39}}},"58":{"name":"(anonymous_58)","line":1282,"loc":{"start":{"line":1282,"column":38},"end":{"line":1282,"column":71}}},"59":{"name":"(anonymous_59)","line":1294,"loc":{"start":{"line":1294,"column":43},"end":{"line":1294,"column":66}}},"60":{"name":"(anonymous_60)","line":1318,"loc":{"start":{"line":1318,"column":39},"end":{"line":1318,"column":72}}},"61":{"name":"(anonymous_61)","line":1334,"loc":{"start":{"line":1334,"column":17},"end":{"line":1334,"column":38}}},"62":{"name":"mapName","line":1342,"loc":{"start":{"line":1342,"column":17},"end":{"line":1342,"column":46}}},"63":{"name":"(anonymous_63)","line":1368,"loc":{"start":{"line":1368,"column":24},"end":{"line":1368,"column":47}}},"64":{"name":"(anonymous_64)","line":1383,"loc":{"start":{"line":1383,"column":24},"end":{"line":1383,"column":37}}},"65":{"name":"(anonymous_65)","line":1404,"loc":{"start":{"line":1404,"column":20},"end":{"line":1404,"column":35}}},"66":{"name":"(anonymous_66)","line":1449,"loc":{"start":{"line":1449,"column":26},"end":{"line":1449,"column":39}}},"67":{"name":"(anonymous_67)","line":1468,"loc":{"start":{"line":1468,"column":26},"end":{"line":1468,"column":39}}},"68":{"name":"(anonymous_68)","line":1499,"loc":{"start":{"line":1499,"column":32},"end":{"line":1499,"column":55}}},"69":{"name":"(anonymous_69)","line":1518,"loc":{"start":{"line":1518,"column":43},"end":{"line":1518,"column":72}}},"70":{"name":"mapName","line":1527,"loc":{"start":{"line":1527,"column":41},"end":{"line":1527,"column":70}}},"71":{"name":"(anonymous_71)","line":1538,"loc":{"start":{"line":1538,"column":22},"end":{"line":1538,"column":35}}},"72":{"name":"(anonymous_72)","line":1559,"loc":{"start":{"line":1559,"column":18},"end":{"line":1559,"column":33}}},"73":{"name":"(anonymous_73)","line":1600,"loc":{"start":{"line":1600,"column":24},"end":{"line":1600,"column":37}}},"74":{"name":"(anonymous_74)","line":1619,"loc":{"start":{"line":1619,"column":24},"end":{"line":1619,"column":37}}},"75":{"name":"(anonymous_75)","line":1664,"loc":{"start":{"line":1664,"column":46},"end":{"line":1664,"column":79}}},"76":{"name":"(anonymous_76)","line":1667,"loc":{"start":{"line":1667,"column":43},"end":{"line":1667,"column":66}}},"77":{"name":"(anonymous_77)","line":1703,"loc":{"start":{"line":1703,"column":50},"end":{"line":1703,"column":79}}},"78":{"name":"(anonymous_78)","line":1730,"loc":{"start":{"line":1730,"column":46},"end":{"line":1730,"column":76}}},"79":{"name":"(anonymous_79)","line":1743,"loc":{"start":{"line":1743,"column":32},"end":{"line":1743,"column":53}}},"80":{"name":"(anonymous_80)","line":1753,"loc":{"start":{"line":1753,"column":23},"end":{"line":1753,"column":34}}},"81":{"name":"(anonymous_81)","line":1766,"loc":{"start":{"line":1766,"column":27},"end":{"line":1766,"column":44}}},"82":{"name":"freeze","line":1774,"loc":{"start":{"line":1774,"column":30},"end":{"line":1774,"column":48}}},"83":{"name":"(anonymous_83)","line":1790,"loc":{"start":{"line":1790,"column":33},"end":{"line":1790,"column":53}}},"84":{"name":"(anonymous_84)","line":1800,"loc":{"start":{"line":1800,"column":34},"end":{"line":1800,"column":68}}},"85":{"name":"(anonymous_85)","line":1810,"loc":{"start":{"line":1810,"column":38},"end":{"line":1810,"column":72}}},"86":{"name":"(anonymous_86)","line":1819,"loc":{"start":{"line":1819,"column":35},"end":{"line":1819,"column":55}}},"87":{"name":"(anonymous_87)","line":1828,"loc":{"start":{"line":1828,"column":36},"end":{"line":1828,"column":56}}},"88":{"name":"(anonymous_88)","line":1837,"loc":{"start":{"line":1837,"column":30},"end":{"line":1837,"column":50}}},"89":{"name":"(anonymous_89)","line":1849,"loc":{"start":{"line":1849,"column":31},"end":{"line":1849,"column":51}}},"90":{"name":"(anonymous_90)","line":1858,"loc":{"start":{"line":1858,"column":34},"end":{"line":1858,"column":54}}},"91":{"name":"defineForeignKey","line":1871,"loc":{"start":{"line":1871,"column":40},"end":{"line":1871,"column":108}}},"92":{"name":"(anonymous_92)","line":1899,"loc":{"start":{"line":1899,"column":13},"end":{"line":1899,"column":36}}},"93":{"name":"disconnect","line":1924,"loc":{"start":{"line":1924,"column":34},"end":{"line":1924,"column":58}}},"94":{"name":"(anonymous_94)","line":1927,"loc":{"start":{"line":1927,"column":30},"end":{"line":1927,"column":52}}},"95":{"name":"(anonymous_95)","line":1932,"loc":{"start":{"line":1932,"column":21},"end":{"line":1932,"column":32}}},"96":{"name":"copyModel","line":1946,"loc":{"start":{"line":1946,"column":33},"end":{"line":1946,"column":60}}},"97":{"name":"SlaveModel","line":1950,"loc":{"start":{"line":1950,"column":14},"end":{"line":1950,"column":36}}},"98":{"name":"(anonymous_98)","line":1986,"loc":{"start":{"line":1986,"column":35},"end":{"line":1986,"column":46}}},"99":{"name":"(anonymous_99)","line":2011,"loc":{"start":{"line":2011,"column":21},"end":{"line":2011,"column":34}}},"100":{"name":"(anonymous_100)","line":2024,"loc":{"start":{"line":2024,"column":36},"end":{"line":2024,"column":56}}},"101":{"name":"(anonymous_101)","line":2053,"loc":{"start":{"line":2053,"column":37},"end":{"line":2053,"column":57}}},"102":{"name":"(anonymous_102)","line":2067,"loc":{"start":{"line":2067,"column":36},"end":{"line":2067,"column":56}}},"103":{"name":"(anonymous_103)","line":2103,"loc":{"start":{"line":2103,"column":34},"end":{"line":2103,"column":45}}},"104":{"name":"(anonymous_104)","line":2113,"loc":{"start":{"line":2113,"column":39},"end":{"line":2113,"column":67}}},"105":{"name":"(anonymous_105)","line":2123,"loc":{"start":{"line":2123,"column":36},"end":{"line":2123,"column":47}}},"106":{"name":"(anonymous_106)","line":2133,"loc":{"start":{"line":2133,"column":29},"end":{"line":2133,"column":49}}},"107":{"name":"(anonymous_107)","line":2144,"loc":{"start":{"line":2144,"column":16},"end":{"line":2144,"column":27}}},"108":{"name":"(anonymous_108)","line":2157,"loc":{"start":{"line":2157,"column":25},"end":{"line":2157,"column":36}}},"109":{"name":"(anonymous_109)","line":2165,"loc":{"start":{"line":2165,"column":12},"end":{"line":2165,"column":26}}},"110":{"name":"(anonymous_110)","line":2174,"loc":{"start":{"line":2174,"column":23},"end":{"line":2174,"column":34}}},"111":{"name":"(anonymous_111)","line":2184,"loc":{"start":{"line":2184,"column":29},"end":{"line":2184,"column":40}}},"112":{"name":"(anonymous_112)","line":2204,"loc":{"start":{"line":2204,"column":28},"end":{"line":2204,"column":41}}},"113":{"name":"(anonymous_113)","line":2211,"loc":{"start":{"line":2211,"column":21},"end":{"line":2211,"column":32}}},"114":{"name":"hiddenProperty","line":2224,"loc":{"start":{"line":2224,"column":0},"end":{"line":2224,"column":41}}},"115":{"name":"defineReadonlyProp","line":2240,"loc":{"start":{"line":2240,"column":0},"end":{"line":2240,"column":45}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":62}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":55}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":61}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":31}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":31}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":43}},"8":{"start":{"line":20,"column":0},"end":{"line":20,"column":43}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":52}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":50}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":27}},"12":{"start":{"line":24,"column":0},"end":{"line":24,"column":31}},"13":{"start":{"line":25,"column":0},"end":{"line":25,"column":29}},"14":{"start":{"line":26,"column":0},"end":{"line":26,"column":35}},"15":{"start":{"line":27,"column":0},"end":{"line":27,"column":38}},"16":{"start":{"line":28,"column":0},"end":{"line":28,"column":28}},"17":{"start":{"line":30,"column":0},"end":{"line":33,"column":1}},"18":{"start":{"line":32,"column":2},"end":{"line":32,"column":35}},"19":{"start":{"line":34,"column":0},"end":{"line":34,"column":52}},"20":{"start":{"line":39,"column":0},"end":{"line":39,"column":32}},"21":{"start":{"line":44,"column":0},"end":{"line":44,"column":34}},"22":{"start":{"line":91,"column":0},"end":{"line":166,"column":1}},"23":{"start":{"line":92,"column":2},"end":{"line":94,"column":3}},"24":{"start":{"line":93,"column":4},"end":{"line":93,"column":42}},"25":{"start":{"line":97,"column":2},"end":{"line":100,"column":3}},"26":{"start":{"line":98,"column":4},"end":{"line":98,"column":20}},"27":{"start":{"line":99,"column":4},"end":{"line":99,"column":21}},"28":{"start":{"line":103,"column":2},"end":{"line":105,"column":3}},"29":{"start":{"line":104,"column":4},"end":{"line":104,"column":37}},"30":{"start":{"line":108,"column":2},"end":{"line":110,"column":3}},"31":{"start":{"line":109,"column":4},"end":{"line":109,"column":45}},"32":{"start":{"line":112,"column":2},"end":{"line":112,"column":57}},"33":{"start":{"line":113,"column":2},"end":{"line":113,"column":41}},"34":{"start":{"line":114,"column":2},"end":{"line":114,"column":51}},"35":{"start":{"line":115,"column":2},"end":{"line":115,"column":25}},"36":{"start":{"line":119,"column":2},"end":{"line":119,"column":24}},"37":{"start":{"line":121,"column":2},"end":{"line":121,"column":29}},"38":{"start":{"line":123,"column":2},"end":{"line":123,"column":25}},"39":{"start":{"line":126,"column":2},"end":{"line":126,"column":33}},"40":{"start":{"line":129,"column":2},"end":{"line":129,"column":91}},"41":{"start":{"line":130,"column":2},"end":{"line":131,"column":4}},"42":{"start":{"line":134,"column":2},"end":{"line":148,"column":16}},"43":{"start":{"line":135,"column":4},"end":{"line":135,"column":23}},"44":{"start":{"line":136,"column":4},"end":{"line":136,"column":37}},"45":{"start":{"line":138,"column":4},"end":{"line":147,"column":5}},"46":{"start":{"line":139,"column":6},"end":{"line":146,"column":9}},"47":{"start":{"line":151,"column":2},"end":{"line":165,"column":16}},"48":{"start":{"line":152,"column":4},"end":{"line":152,"column":33}},"49":{"start":{"line":153,"column":4},"end":{"line":153,"column":47}},"50":{"start":{"line":154,"column":4},"end":{"line":164,"column":5}},"51":{"start":{"line":155,"column":6},"end":{"line":163,"column":9}},"52":{"start":{"line":168,"column":0},"end":{"line":168,"column":40}},"53":{"start":{"line":171,"column":0},"end":{"line":171,"column":47}},"54":{"start":{"line":177,"column":0},"end":{"line":200,"column":2}},"55":{"start":{"line":178,"column":2},"end":{"line":178,"column":50}},"56":{"start":{"line":179,"column":2},"end":{"line":179,"column":32}},"57":{"start":{"line":180,"column":2},"end":{"line":199,"column":3}},"58":{"start":{"line":181,"column":4},"end":{"line":184,"column":5}},"59":{"start":{"line":183,"column":6},"end":{"line":183,"column":39}},"60":{"start":{"line":185,"column":4},"end":{"line":185,"column":26}},"61":{"start":{"line":186,"column":4},"end":{"line":188,"column":6}},"62":{"start":{"line":187,"column":6},"end":{"line":187,"column":35}},"63":{"start":{"line":190,"column":4},"end":{"line":196,"column":6}},"64":{"start":{"line":191,"column":6},"end":{"line":191,"column":26}},"65":{"start":{"line":192,"column":6},"end":{"line":192,"column":25}},"66":{"start":{"line":193,"column":6},"end":{"line":195,"column":8}},"67":{"start":{"line":194,"column":8},"end":{"line":194,"column":28}},"68":{"start":{"line":198,"column":4},"end":{"line":198,"column":49}},"69":{"start":{"line":203,"column":0},"end":{"line":217,"column":1}},"70":{"start":{"line":204,"column":2},"end":{"line":204,"column":17}},"71":{"start":{"line":205,"column":2},"end":{"line":210,"column":3}},"72":{"start":{"line":206,"column":4},"end":{"line":206,"column":39}},"73":{"start":{"line":207,"column":4},"end":{"line":209,"column":5}},"74":{"start":{"line":208,"column":6},"end":{"line":208,"column":47}},"75":{"start":{"line":212,"column":2},"end":{"line":215,"column":3}},"76":{"start":{"line":214,"column":4},"end":{"line":214,"column":21}},"77":{"start":{"line":216,"column":2},"end":{"line":216,"column":15}},"78":{"start":{"line":220,"column":0},"end":{"line":243,"column":1}},"79":{"start":{"line":221,"column":2},"end":{"line":221,"column":10}},"80":{"start":{"line":222,"column":2},"end":{"line":222,"column":29}},"81":{"start":{"line":223,"column":2},"end":{"line":241,"column":3}},"82":{"start":{"line":224,"column":4},"end":{"line":237,"column":5}},"83":{"start":{"line":225,"column":6},"end":{"line":225,"column":29}},"84":{"start":{"line":227,"column":6},"end":{"line":228,"column":53}},"85":{"start":{"line":230,"column":6},"end":{"line":233,"column":7}},"86":{"start":{"line":231,"column":8},"end":{"line":231,"column":76}},"87":{"start":{"line":232,"column":8},"end":{"line":232,"column":17}},"88":{"start":{"line":235,"column":6},"end":{"line":235,"column":68}},"89":{"start":{"line":236,"column":6},"end":{"line":236,"column":14}},"90":{"start":{"line":238,"column":4},"end":{"line":240,"column":5}},"91":{"start":{"line":239,"column":6},"end":{"line":239,"column":12}},"92":{"start":{"line":242,"column":2},"end":{"line":242,"column":13}},"93":{"start":{"line":251,"column":0},"end":{"line":264,"column":2}},"94":{"start":{"line":252,"column":2},"end":{"line":252,"column":41}},"95":{"start":{"line":253,"column":2},"end":{"line":253,"column":44}},"96":{"start":{"line":254,"column":2},"end":{"line":254,"column":19}},"97":{"start":{"line":255,"column":2},"end":{"line":259,"column":3}},"98":{"start":{"line":256,"column":4},"end":{"line":258,"column":55}},"99":{"start":{"line":260,"column":2},"end":{"line":263,"column":4}},"100":{"start":{"line":270,"column":0},"end":{"line":323,"column":2}},"101":{"start":{"line":271,"column":2},"end":{"line":271,"column":55}},"102":{"start":{"line":272,"column":2},"end":{"line":272,"column":18}},"103":{"start":{"line":273,"column":2},"end":{"line":277,"column":3}},"104":{"start":{"line":275,"column":4},"end":{"line":275,"column":31}},"105":{"start":{"line":276,"column":4},"end":{"line":276,"column":28}},"106":{"start":{"line":278,"column":2},"end":{"line":288,"column":3}},"107":{"start":{"line":281,"column":4},"end":{"line":281,"column":26}},"108":{"start":{"line":282,"column":4},"end":{"line":282,"column":28}},"109":{"start":{"line":283,"column":4},"end":{"line":286,"column":7}},"110":{"start":{"line":284,"column":6},"end":{"line":284,"column":29}},"111":{"start":{"line":285,"column":6},"end":{"line":285,"column":17}},"112":{"start":{"line":287,"column":4},"end":{"line":287,"column":28}},"113":{"start":{"line":291,"column":2},"end":{"line":291,"column":68}},"114":{"start":{"line":292,"column":2},"end":{"line":292,"column":46}},"115":{"start":{"line":295,"column":2},"end":{"line":295,"column":47}},"116":{"start":{"line":295,"column":23},"end":{"line":295,"column":47}},"117":{"start":{"line":297,"column":2},"end":{"line":297,"column":25}},"118":{"start":{"line":298,"column":2},"end":{"line":321,"column":5}},"119":{"start":{"line":299,"column":4},"end":{"line":299,"column":28}},"120":{"start":{"line":300,"column":4},"end":{"line":300,"column":36}},"121":{"start":{"line":300,"column":14},"end":{"line":300,"column":36}},"122":{"start":{"line":301,"column":4},"end":{"line":301,"column":43}},"123":{"start":{"line":302,"column":4},"end":{"line":302,"column":38}},"124":{"start":{"line":303,"column":4},"end":{"line":307,"column":5}},"125":{"start":{"line":304,"column":6},"end":{"line":304,"column":29}},"126":{"start":{"line":306,"column":6},"end":{"line":306,"column":30}},"127":{"start":{"line":309,"column":4},"end":{"line":320,"column":7}},"128":{"start":{"line":310,"column":6},"end":{"line":317,"column":7}},"129":{"start":{"line":311,"column":8},"end":{"line":311,"column":16}},"130":{"start":{"line":314,"column":8},"end":{"line":314,"column":73}},"131":{"start":{"line":316,"column":8},"end":{"line":316,"column":15}},"132":{"start":{"line":319,"column":6},"end":{"line":319,"column":25}},"133":{"start":{"line":319,"column":15},"end":{"line":319,"column":25}},"134":{"start":{"line":322,"column":2},"end":{"line":322,"column":26}},"135":{"start":{"line":332,"column":0},"end":{"line":426,"column":2}},"136":{"start":{"line":333,"column":2},"end":{"line":333,"column":24}},"137":{"start":{"line":334,"column":2},"end":{"line":334,"column":16}},"138":{"start":{"line":337,"column":2},"end":{"line":340,"column":3}},"139":{"start":{"line":338,"column":4},"end":{"line":338,"column":20}},"140":{"start":{"line":339,"column":4},"end":{"line":339,"column":21}},"141":{"start":{"line":342,"column":2},"end":{"line":350,"column":3}},"142":{"start":{"line":343,"column":4},"end":{"line":349,"column":5}},"143":{"start":{"line":344,"column":6},"end":{"line":344,"column":27}},"144":{"start":{"line":345,"column":11},"end":{"line":349,"column":5}},"145":{"start":{"line":346,"column":6},"end":{"line":346,"column":37}},"146":{"start":{"line":347,"column":11},"end":{"line":349,"column":5}},"147":{"start":{"line":348,"column":6},"end":{"line":348,"column":35}},"148":{"start":{"line":353,"column":2},"end":{"line":353,"column":33}},"149":{"start":{"line":355,"column":2},"end":{"line":355,"column":61}},"150":{"start":{"line":357,"column":2},"end":{"line":359,"column":3}},"151":{"start":{"line":358,"column":4},"end":{"line":358,"column":41}},"152":{"start":{"line":362,"column":2},"end":{"line":362,"column":25}},"153":{"start":{"line":363,"column":2},"end":{"line":363,"column":26}},"154":{"start":{"line":365,"column":2},"end":{"line":368,"column":3}},"155":{"start":{"line":366,"column":4},"end":{"line":366,"column":21}},"156":{"start":{"line":367,"column":4},"end":{"line":367,"column":26}},"157":{"start":{"line":369,"column":2},"end":{"line":369,"column":47}},"158":{"start":{"line":370,"column":2},"end":{"line":370,"column":19}},"159":{"start":{"line":372,"column":2},"end":{"line":387,"column":3}},"160":{"start":{"line":373,"column":4},"end":{"line":386,"column":5}},"161":{"start":{"line":375,"column":6},"end":{"line":375,"column":23}},"162":{"start":{"line":376,"column":6},"end":{"line":376,"column":33}},"163":{"start":{"line":379,"column":6},"end":{"line":379,"column":54}},"164":{"start":{"line":380,"column":6},"end":{"line":380,"column":35}},"165":{"start":{"line":381,"column":6},"end":{"line":385,"column":7}},"166":{"start":{"line":382,"column":8},"end":{"line":382,"column":36}},"167":{"start":{"line":383,"column":8},"end":{"line":383,"column":52}},"168":{"start":{"line":384,"column":8},"end":{"line":384,"column":15}},"169":{"start":{"line":389,"column":2},"end":{"line":425,"column":3}},"170":{"start":{"line":390,"column":4},"end":{"line":406,"column":17}},"171":{"start":{"line":391,"column":6},"end":{"line":391,"column":29}},"172":{"start":{"line":393,"column":6},"end":{"line":396,"column":7}},"173":{"start":{"line":394,"column":8},"end":{"line":395,"column":68}},"174":{"start":{"line":397,"column":6},"end":{"line":397,"column":28}},"175":{"start":{"line":398,"column":6},"end":{"line":405,"column":7}},"176":{"start":{"line":399,"column":8},"end":{"line":399,"column":31}},"177":{"start":{"line":402,"column":8},"end":{"line":402,"column":87}},"178":{"start":{"line":403,"column":8},"end":{"line":403,"column":32}},"179":{"start":{"line":404,"column":8},"end":{"line":404,"column":32}},"180":{"start":{"line":408,"column":4},"end":{"line":424,"column":5}},"181":{"start":{"line":409,"column":6},"end":{"line":416,"column":7}},"182":{"start":{"line":411,"column":8},"end":{"line":411,"column":45}},"183":{"start":{"line":412,"column":13},"end":{"line":416,"column":7}},"184":{"start":{"line":414,"column":8},"end":{"line":414,"column":54}},"185":{"start":{"line":415,"column":8},"end":{"line":415,"column":19}},"186":{"start":{"line":418,"column":6},"end":{"line":422,"column":7}},"187":{"start":{"line":419,"column":8},"end":{"line":421,"column":22}},"188":{"start":{"line":423,"column":6},"end":{"line":423,"column":16}},"189":{"start":{"line":428,"column":0},"end":{"line":433,"column":1}},"190":{"start":{"line":429,"column":2},"end":{"line":431,"column":3}},"191":{"start":{"line":430,"column":4},"end":{"line":430,"column":17}},"192":{"start":{"line":432,"column":2},"end":{"line":432,"column":49}},"193":{"start":{"line":435,"column":0},"end":{"line":435,"column":73}},"194":{"start":{"line":437,"column":0},"end":{"line":439,"column":1}},"195":{"start":{"line":438,"column":2},"end":{"line":438,"column":91}},"196":{"start":{"line":446,"column":0},"end":{"line":452,"column":2}},"197":{"start":{"line":447,"column":2},"end":{"line":451,"column":3}},"198":{"start":{"line":448,"column":4},"end":{"line":450,"column":5}},"199":{"start":{"line":449,"column":6},"end":{"line":449,"column":79}},"200":{"start":{"line":459,"column":0},"end":{"line":542,"column":2}},"201":{"start":{"line":460,"column":2},"end":{"line":460,"column":18}},"202":{"start":{"line":463,"column":2},"end":{"line":493,"column":4}},"203":{"start":{"line":464,"column":4},"end":{"line":478,"column":5}},"204":{"start":{"line":465,"column":6},"end":{"line":477,"column":9}},"205":{"start":{"line":467,"column":8},"end":{"line":476,"column":9}},"206":{"start":{"line":469,"column":10},"end":{"line":469,"column":50}},"207":{"start":{"line":470,"column":10},"end":{"line":470,"column":27}},"208":{"start":{"line":471,"column":10},"end":{"line":471,"column":31}},"209":{"start":{"line":472,"column":10},"end":{"line":474,"column":11}},"210":{"start":{"line":473,"column":12},"end":{"line":473,"column":42}},"211":{"start":{"line":475,"column":10},"end":{"line":475,"column":67}},"212":{"start":{"line":480,"column":4},"end":{"line":492,"column":5}},"213":{"start":{"line":482,"column":6},"end":{"line":491,"column":9}},"214":{"start":{"line":483,"column":8},"end":{"line":490,"column":9}},"215":{"start":{"line":485,"column":10},"end":{"line":485,"column":50}},"216":{"start":{"line":486,"column":10},"end":{"line":486,"column":27}},"217":{"start":{"line":487,"column":10},"end":{"line":487,"column":37}},"218":{"start":{"line":488,"column":10},"end":{"line":488,"column":33}},"219":{"start":{"line":489,"column":10},"end":{"line":489,"column":67}},"220":{"start":{"line":496,"column":2},"end":{"line":541,"column":3}},"221":{"start":{"line":497,"column":4},"end":{"line":540,"column":7}},"222":{"start":{"line":498,"column":6},"end":{"line":498,"column":28}},"223":{"start":{"line":499,"column":6},"end":{"line":499,"column":98}},"224":{"start":{"line":500,"column":6},"end":{"line":500,"column":70}},"225":{"start":{"line":502,"column":6},"end":{"line":502,"column":39}},"226":{"start":{"line":504,"column":6},"end":{"line":506,"column":7}},"227":{"start":{"line":505,"column":8},"end":{"line":505,"column":90}},"228":{"start":{"line":508,"column":6},"end":{"line":515,"column":7}},"229":{"start":{"line":509,"column":8},"end":{"line":509,"column":69}},"230":{"start":{"line":510,"column":8},"end":{"line":514,"column":9}},"231":{"start":{"line":511,"column":10},"end":{"line":511,"column":42}},"232":{"start":{"line":512,"column":15},"end":{"line":514,"column":9}},"233":{"start":{"line":513,"column":10},"end":{"line":513,"column":45}},"234":{"start":{"line":517,"column":6},"end":{"line":519,"column":7}},"235":{"start":{"line":518,"column":8},"end":{"line":518,"column":85}},"236":{"start":{"line":521,"column":6},"end":{"line":521,"column":30}},"237":{"start":{"line":522,"column":6},"end":{"line":524,"column":7}},"238":{"start":{"line":523,"column":8},"end":{"line":523,"column":92}},"239":{"start":{"line":526,"column":6},"end":{"line":539,"column":7}},"240":{"start":{"line":529,"column":8},"end":{"line":529,"column":57}},"241":{"start":{"line":532,"column":8},"end":{"line":532,"column":41}},"242":{"start":{"line":533,"column":8},"end":{"line":533,"column":23}},"243":{"start":{"line":534,"column":8},"end":{"line":534,"column":54}},"244":{"start":{"line":535,"column":8},"end":{"line":537,"column":9}},"245":{"start":{"line":536,"column":10},"end":{"line":536,"column":40}},"246":{"start":{"line":538,"column":8},"end":{"line":538,"column":56}},"247":{"start":{"line":544,"column":0},"end":{"line":548,"column":1}},"248":{"start":{"line":545,"column":2},"end":{"line":545,"column":41}},"249":{"start":{"line":547,"column":2},"end":{"line":547,"column":59}},"250":{"start":{"line":555,"column":0},"end":{"line":598,"column":2}},"251":{"start":{"line":556,"column":2},"end":{"line":582,"column":3}},"252":{"start":{"line":558,"column":4},"end":{"line":558,"column":48}},"253":{"start":{"line":559,"column":4},"end":{"line":559,"column":61}},"254":{"start":{"line":560,"column":4},"end":{"line":573,"column":5}},"255":{"start":{"line":562,"column":6},"end":{"line":562,"column":63}},"256":{"start":{"line":563,"column":6},"end":{"line":563,"column":27}},"257":{"start":{"line":564,"column":6},"end":{"line":564,"column":64}},"258":{"start":{"line":565,"column":6},"end":{"line":565,"column":61}},"259":{"start":{"line":566,"column":6},"end":{"line":566,"column":37}},"260":{"start":{"line":567,"column":6},"end":{"line":569,"column":7}},"261":{"start":{"line":568,"column":8},"end":{"line":568,"column":23}},"262":{"start":{"line":570,"column":6},"end":{"line":572,"column":7}},"263":{"start":{"line":571,"column":8},"end":{"line":571,"column":67}},"264":{"start":{"line":574,"column":4},"end":{"line":581,"column":5}},"265":{"start":{"line":576,"column":6},"end":{"line":580,"column":9}},"266":{"start":{"line":585,"column":2},"end":{"line":585,"column":25}},"267":{"start":{"line":588,"column":2},"end":{"line":588,"column":63}},"268":{"start":{"line":589,"column":2},"end":{"line":589,"column":46}},"269":{"start":{"line":593,"column":2},"end":{"line":593,"column":54}},"270":{"start":{"line":596,"column":2},"end":{"line":596,"column":37}},"271":{"start":{"line":597,"column":2},"end":{"line":597,"column":40}},"272":{"start":{"line":649,"column":0},"end":{"line":689,"column":2}},"273":{"start":{"line":651,"column":2},"end":{"line":651,"column":35}},"274":{"start":{"line":653,"column":2},"end":{"line":655,"column":3}},"275":{"start":{"line":654,"column":4},"end":{"line":654,"column":48}},"276":{"start":{"line":656,"column":2},"end":{"line":659,"column":3}},"277":{"start":{"line":657,"column":4},"end":{"line":657,"column":20}},"278":{"start":{"line":658,"column":4},"end":{"line":658,"column":26}},"279":{"start":{"line":660,"column":2},"end":{"line":663,"column":3}},"280":{"start":{"line":661,"column":4},"end":{"line":661,"column":18}},"281":{"start":{"line":662,"column":4},"end":{"line":662,"column":24}},"282":{"start":{"line":665,"column":2},"end":{"line":665,"column":32}},"283":{"start":{"line":666,"column":2},"end":{"line":666,"column":28}},"284":{"start":{"line":668,"column":2},"end":{"line":676,"column":3}},"285":{"start":{"line":670,"column":4},"end":{"line":672,"column":5}},"286":{"start":{"line":671,"column":6},"end":{"line":671,"column":29}},"287":{"start":{"line":673,"column":4},"end":{"line":675,"column":5}},"288":{"start":{"line":674,"column":6},"end":{"line":674,"column":32}},"289":{"start":{"line":678,"column":2},"end":{"line":678,"column":77}},"290":{"start":{"line":679,"column":2},"end":{"line":679,"column":31}},"291":{"start":{"line":681,"column":2},"end":{"line":683,"column":3}},"292":{"start":{"line":682,"column":4},"end":{"line":682,"column":22}},"293":{"start":{"line":685,"column":2},"end":{"line":685,"column":45}},"294":{"start":{"line":686,"column":2},"end":{"line":686,"column":52}},"295":{"start":{"line":688,"column":2},"end":{"line":688,"column":20}},"296":{"start":{"line":698,"column":0},"end":{"line":731,"column":2}},"297":{"start":{"line":699,"column":2},"end":{"line":699,"column":30}},"298":{"start":{"line":700,"column":2},"end":{"line":700,"column":34}},"299":{"start":{"line":703,"column":2},"end":{"line":703,"column":70}},"300":{"start":{"line":706,"column":2},"end":{"line":730,"column":5}},"301":{"start":{"line":707,"column":4},"end":{"line":707,"column":23}},"302":{"start":{"line":708,"column":4},"end":{"line":708,"column":14}},"303":{"start":{"line":710,"column":4},"end":{"line":729,"column":5}},"304":{"start":{"line":711,"column":6},"end":{"line":711,"column":61}},"305":{"start":{"line":715,"column":6},"end":{"line":728,"column":11}},"306":{"start":{"line":718,"column":10},"end":{"line":722,"column":25}},"307":{"start":{"line":725,"column":10},"end":{"line":727,"column":11}},"308":{"start":{"line":726,"column":12},"end":{"line":726,"column":47}},"309":{"start":{"line":736,"column":0},"end":{"line":738,"column":2}},"310":{"start":{"line":737,"column":2},"end":{"line":737,"column":55}},"311":{"start":{"line":743,"column":0},"end":{"line":745,"column":2}},"312":{"start":{"line":744,"column":2},"end":{"line":744,"column":52}},"313":{"start":{"line":752,"column":0},"end":{"line":759,"column":2}},"314":{"start":{"line":753,"column":2},"end":{"line":753,"column":59}},"315":{"start":{"line":754,"column":2},"end":{"line":754,"column":43}},"316":{"start":{"line":755,"column":2},"end":{"line":757,"column":3}},"317":{"start":{"line":756,"column":4},"end":{"line":756,"column":36}},"318":{"start":{"line":758,"column":2},"end":{"line":758,"column":15}},"319":{"start":{"line":766,"column":0},"end":{"line":781,"column":2}},"320":{"start":{"line":767,"column":2},"end":{"line":767,"column":39}},"321":{"start":{"line":768,"column":2},"end":{"line":780,"column":3}},"322":{"start":{"line":770,"column":4},"end":{"line":775,"column":5}},"323":{"start":{"line":771,"column":6},"end":{"line":774,"column":7}},"324":{"start":{"line":773,"column":8},"end":{"line":773,"column":21}},"325":{"start":{"line":776,"column":4},"end":{"line":776,"column":16}},"326":{"start":{"line":779,"column":4},"end":{"line":779,"column":48}},"327":{"start":{"line":789,"column":0},"end":{"line":808,"column":2}},"328":{"start":{"line":790,"column":2},"end":{"line":793,"column":3}},"329":{"start":{"line":792,"column":4},"end":{"line":792,"column":22}},"330":{"start":{"line":795,"column":2},"end":{"line":800,"column":3}},"331":{"start":{"line":796,"column":4},"end":{"line":796,"column":80}},"332":{"start":{"line":797,"column":4},"end":{"line":797,"column":64}},"333":{"start":{"line":799,"column":4},"end":{"line":799,"column":48}},"334":{"start":{"line":803,"column":2},"end":{"line":803,"column":31}},"335":{"start":{"line":805,"column":2},"end":{"line":805,"column":56}},"336":{"start":{"line":806,"column":2},"end":{"line":806,"column":52}},"337":{"start":{"line":807,"column":2},"end":{"line":807,"column":20}},"338":{"start":{"line":817,"column":0},"end":{"line":824,"column":2}},"339":{"start":{"line":818,"column":2},"end":{"line":818,"column":56}},"340":{"start":{"line":820,"column":2},"end":{"line":820,"column":69}},"341":{"start":{"line":821,"column":2},"end":{"line":823,"column":3}},"342":{"start":{"line":822,"column":4},"end":{"line":822,"column":61}},"343":{"start":{"line":837,"column":0},"end":{"line":883,"column":2}},"344":{"start":{"line":838,"column":2},"end":{"line":838,"column":16}},"345":{"start":{"line":840,"column":2},"end":{"line":843,"column":3}},"346":{"start":{"line":841,"column":4},"end":{"line":841,"column":16}},"347":{"start":{"line":842,"column":4},"end":{"line":842,"column":23}},"348":{"start":{"line":845,"column":2},"end":{"line":845,"column":43}},"349":{"start":{"line":847,"column":2},"end":{"line":851,"column":3}},"350":{"start":{"line":849,"column":4},"end":{"line":849,"column":25}},"351":{"start":{"line":850,"column":4},"end":{"line":850,"column":22}},"352":{"start":{"line":854,"column":2},"end":{"line":856,"column":3}},"353":{"start":{"line":855,"column":4},"end":{"line":855,"column":22}},"354":{"start":{"line":858,"column":2},"end":{"line":858,"column":46}},"355":{"start":{"line":860,"column":2},"end":{"line":879,"column":3}},"356":{"start":{"line":861,"column":4},"end":{"line":861,"column":51}},"357":{"start":{"line":863,"column":4},"end":{"line":866,"column":5}},"358":{"start":{"line":864,"column":6},"end":{"line":864,"column":27}},"359":{"start":{"line":865,"column":6},"end":{"line":865,"column":24}},"360":{"start":{"line":868,"column":4},"end":{"line":870,"column":7}},"361":{"start":{"line":869,"column":6},"end":{"line":869,"column":36}},"362":{"start":{"line":872,"column":4},"end":{"line":878,"column":5}},"363":{"start":{"line":873,"column":6},"end":{"line":876,"column":9}},"364":{"start":{"line":874,"column":8},"end":{"line":875,"column":37}},"365":{"start":{"line":877,"column":6},"end":{"line":877,"column":24}},"366":{"start":{"line":881,"column":2},"end":{"line":881,"column":41}},"367":{"start":{"line":882,"column":2},"end":{"line":882,"column":20}},"368":{"start":{"line":892,"column":0},"end":{"line":938,"column":2}},"369":{"start":{"line":893,"column":2},"end":{"line":893,"column":16}},"370":{"start":{"line":895,"column":2},"end":{"line":898,"column":3}},"371":{"start":{"line":896,"column":4},"end":{"line":896,"column":16}},"372":{"start":{"line":897,"column":4},"end":{"line":897,"column":23}},"373":{"start":{"line":900,"column":2},"end":{"line":900,"column":43}},"374":{"start":{"line":902,"column":2},"end":{"line":906,"column":3}},"375":{"start":{"line":904,"column":4},"end":{"line":904,"column":25}},"376":{"start":{"line":905,"column":4},"end":{"line":905,"column":22}},"377":{"start":{"line":909,"column":2},"end":{"line":911,"column":3}},"378":{"start":{"line":910,"column":4},"end":{"line":910,"column":22}},"379":{"start":{"line":913,"column":2},"end":{"line":913,"column":46}},"380":{"start":{"line":915,"column":2},"end":{"line":934,"column":3}},"381":{"start":{"line":916,"column":4},"end":{"line":916,"column":51}},"382":{"start":{"line":918,"column":4},"end":{"line":921,"column":5}},"383":{"start":{"line":919,"column":6},"end":{"line":919,"column":27}},"384":{"start":{"line":920,"column":6},"end":{"line":920,"column":24}},"385":{"start":{"line":923,"column":4},"end":{"line":925,"column":7}},"386":{"start":{"line":924,"column":6},"end":{"line":924,"column":36}},"387":{"start":{"line":927,"column":4},"end":{"line":933,"column":5}},"388":{"start":{"line":928,"column":6},"end":{"line":931,"column":9}},"389":{"start":{"line":929,"column":8},"end":{"line":930,"column":35}},"390":{"start":{"line":932,"column":6},"end":{"line":932,"column":24}},"391":{"start":{"line":936,"column":2},"end":{"line":936,"column":40}},"392":{"start":{"line":937,"column":2},"end":{"line":937,"column":20}},"393":{"start":{"line":954,"column":0},"end":{"line":970,"column":2}},"394":{"start":{"line":955,"column":2},"end":{"line":955,"column":16}},"395":{"start":{"line":957,"column":2},"end":{"line":960,"column":3}},"396":{"start":{"line":958,"column":4},"end":{"line":958,"column":17}},"397":{"start":{"line":959,"column":4},"end":{"line":959,"column":17}},"398":{"start":{"line":961,"column":2},"end":{"line":961,"column":26}},"399":{"start":{"line":962,"column":2},"end":{"line":962,"column":43}},"400":{"start":{"line":964,"column":2},"end":{"line":968,"column":3}},"401":{"start":{"line":965,"column":4},"end":{"line":965,"column":57}},"402":{"start":{"line":966,"column":9},"end":{"line":968,"column":3}},"403":{"start":{"line":967,"column":4},"end":{"line":967,"column":25}},"404":{"start":{"line":969,"column":2},"end":{"line":969,"column":20}},"405":{"start":{"line":981,"column":0},"end":{"line":987,"column":2}},"406":{"start":{"line":982,"column":2},"end":{"line":982,"column":16}},"407":{"start":{"line":983,"column":2},"end":{"line":985,"column":3}},"408":{"start":{"line":984,"column":4},"end":{"line":984,"column":64}},"409":{"start":{"line":986,"column":2},"end":{"line":986,"column":14}},"410":{"start":{"line":1011,"column":0},"end":{"line":1027,"column":2}},"411":{"start":{"line":1012,"column":2},"end":{"line":1012,"column":16}},"412":{"start":{"line":1014,"column":2},"end":{"line":1017,"column":3}},"413":{"start":{"line":1015,"column":4},"end":{"line":1015,"column":17}},"414":{"start":{"line":1016,"column":4},"end":{"line":1016,"column":17}},"415":{"start":{"line":1018,"column":2},"end":{"line":1018,"column":26}},"416":{"start":{"line":1019,"column":2},"end":{"line":1019,"column":43}},"417":{"start":{"line":1021,"column":2},"end":{"line":1025,"column":3}},"418":{"start":{"line":1022,"column":4},"end":{"line":1022,"column":67}},"419":{"start":{"line":1023,"column":9},"end":{"line":1025,"column":3}},"420":{"start":{"line":1024,"column":4},"end":{"line":1024,"column":25}},"421":{"start":{"line":1026,"column":2},"end":{"line":1026,"column":20}},"422":{"start":{"line":1035,"column":0},"end":{"line":1041,"column":2}},"423":{"start":{"line":1036,"column":2},"end":{"line":1036,"column":16}},"424":{"start":{"line":1037,"column":2},"end":{"line":1039,"column":3}},"425":{"start":{"line":1038,"column":4},"end":{"line":1038,"column":74}},"426":{"start":{"line":1040,"column":2},"end":{"line":1040,"column":14}},"427":{"start":{"line":1060,"column":0},"end":{"line":1076,"column":2}},"428":{"start":{"line":1061,"column":2},"end":{"line":1061,"column":16}},"429":{"start":{"line":1063,"column":2},"end":{"line":1066,"column":3}},"430":{"start":{"line":1064,"column":4},"end":{"line":1064,"column":17}},"431":{"start":{"line":1065,"column":4},"end":{"line":1065,"column":17}},"432":{"start":{"line":1067,"column":2},"end":{"line":1067,"column":26}},"433":{"start":{"line":1068,"column":2},"end":{"line":1068,"column":43}},"434":{"start":{"line":1070,"column":2},"end":{"line":1074,"column":3}},"435":{"start":{"line":1071,"column":4},"end":{"line":1071,"column":63}},"436":{"start":{"line":1072,"column":9},"end":{"line":1074,"column":3}},"437":{"start":{"line":1073,"column":4},"end":{"line":1073,"column":25}},"438":{"start":{"line":1075,"column":2},"end":{"line":1075,"column":20}},"439":{"start":{"line":1085,"column":0},"end":{"line":1091,"column":2}},"440":{"start":{"line":1086,"column":2},"end":{"line":1086,"column":16}},"441":{"start":{"line":1087,"column":2},"end":{"line":1089,"column":3}},"442":{"start":{"line":1088,"column":4},"end":{"line":1088,"column":70}},"443":{"start":{"line":1090,"column":2},"end":{"line":1090,"column":14}},"444":{"start":{"line":1116,"column":0},"end":{"line":1132,"column":2}},"445":{"start":{"line":1117,"column":2},"end":{"line":1117,"column":16}},"446":{"start":{"line":1119,"column":2},"end":{"line":1122,"column":3}},"447":{"start":{"line":1120,"column":4},"end":{"line":1120,"column":17}},"448":{"start":{"line":1121,"column":4},"end":{"line":1121,"column":17}},"449":{"start":{"line":1123,"column":2},"end":{"line":1123,"column":26}},"450":{"start":{"line":1124,"column":2},"end":{"line":1124,"column":43}},"451":{"start":{"line":1126,"column":2},"end":{"line":1130,"column":3}},"452":{"start":{"line":1127,"column":4},"end":{"line":1127,"column":63}},"453":{"start":{"line":1128,"column":9},"end":{"line":1130,"column":3}},"454":{"start":{"line":1129,"column":4},"end":{"line":1129,"column":25}},"455":{"start":{"line":1131,"column":2},"end":{"line":1131,"column":20}},"456":{"start":{"line":1141,"column":0},"end":{"line":1147,"column":2}},"457":{"start":{"line":1142,"column":2},"end":{"line":1142,"column":16}},"458":{"start":{"line":1143,"column":2},"end":{"line":1145,"column":3}},"459":{"start":{"line":1144,"column":4},"end":{"line":1144,"column":70}},"460":{"start":{"line":1146,"column":2},"end":{"line":1146,"column":14}},"461":{"start":{"line":1172,"column":0},"end":{"line":1188,"column":2}},"462":{"start":{"line":1173,"column":2},"end":{"line":1173,"column":16}},"463":{"start":{"line":1175,"column":2},"end":{"line":1178,"column":3}},"464":{"start":{"line":1176,"column":4},"end":{"line":1176,"column":17}},"465":{"start":{"line":1177,"column":4},"end":{"line":1177,"column":17}},"466":{"start":{"line":1179,"column":2},"end":{"line":1179,"column":26}},"467":{"start":{"line":1180,"column":2},"end":{"line":1180,"column":43}},"468":{"start":{"line":1182,"column":2},"end":{"line":1186,"column":3}},"469":{"start":{"line":1183,"column":4},"end":{"line":1183,"column":71}},"470":{"start":{"line":1184,"column":9},"end":{"line":1186,"column":3}},"471":{"start":{"line":1185,"column":4},"end":{"line":1185,"column":25}},"472":{"start":{"line":1187,"column":2},"end":{"line":1187,"column":20}},"473":{"start":{"line":1196,"column":0},"end":{"line":1202,"column":2}},"474":{"start":{"line":1197,"column":2},"end":{"line":1197,"column":16}},"475":{"start":{"line":1198,"column":2},"end":{"line":1200,"column":3}},"476":{"start":{"line":1199,"column":4},"end":{"line":1199,"column":78}},"477":{"start":{"line":1201,"column":2},"end":{"line":1201,"column":14}},"478":{"start":{"line":1204,"column":0},"end":{"line":1209,"column":1}},"479":{"start":{"line":1205,"column":2},"end":{"line":1207,"column":3}},"480":{"start":{"line":1206,"column":4},"end":{"line":1206,"column":15}},"481":{"start":{"line":1208,"column":2},"end":{"line":1208,"column":92}},"482":{"start":{"line":1211,"column":0},"end":{"line":1222,"column":1}},"483":{"start":{"line":1212,"column":2},"end":{"line":1214,"column":3}},"484":{"start":{"line":1213,"column":4},"end":{"line":1213,"column":18}},"485":{"start":{"line":1215,"column":2},"end":{"line":1215,"column":34}},"486":{"start":{"line":1216,"column":2},"end":{"line":1216,"column":71}},"487":{"start":{"line":1218,"column":2},"end":{"line":1220,"column":3}},"488":{"start":{"line":1219,"column":4},"end":{"line":1219,"column":36}},"489":{"start":{"line":1221,"column":2},"end":{"line":1221,"column":24}},"490":{"start":{"line":1282,"column":0},"end":{"line":1305,"column":2}},"491":{"start":{"line":1283,"column":2},"end":{"line":1283,"column":26}},"492":{"start":{"line":1285,"column":2},"end":{"line":1288,"column":3}},"493":{"start":{"line":1286,"column":4},"end":{"line":1286,"column":17}},"494":{"start":{"line":1287,"column":4},"end":{"line":1287,"column":17}},"495":{"start":{"line":1289,"column":2},"end":{"line":1289,"column":23}},"496":{"start":{"line":1290,"column":2},"end":{"line":1290,"column":28}},"497":{"start":{"line":1292,"column":2},"end":{"line":1292,"column":43}},"498":{"start":{"line":1294,"column":2},"end":{"line":1303,"column":5}},"499":{"start":{"line":1295,"column":4},"end":{"line":1298,"column":5}},"500":{"start":{"line":1296,"column":6},"end":{"line":1296,"column":29}},"501":{"start":{"line":1297,"column":6},"end":{"line":1297,"column":13}},"502":{"start":{"line":1299,"column":4},"end":{"line":1302,"column":5}},"503":{"start":{"line":1300,"column":6},"end":{"line":1300,"column":33}},"504":{"start":{"line":1301,"column":6},"end":{"line":1301,"column":13}},"505":{"start":{"line":1304,"column":2},"end":{"line":1304,"column":20}},"506":{"start":{"line":1318,"column":0},"end":{"line":1506,"column":2}},"507":{"start":{"line":1319,"column":2},"end":{"line":1319,"column":26}},"508":{"start":{"line":1321,"column":2},"end":{"line":1324,"column":3}},"509":{"start":{"line":1322,"column":4},"end":{"line":1322,"column":17}},"510":{"start":{"line":1323,"column":4},"end":{"line":1323,"column":17}},"511":{"start":{"line":1326,"column":2},"end":{"line":1326,"column":43}},"512":{"start":{"line":1328,"column":2},"end":{"line":1328,"column":18}},"513":{"start":{"line":1329,"column":2},"end":{"line":1329,"column":48}},"514":{"start":{"line":1331,"column":2},"end":{"line":1331,"column":17}},"515":{"start":{"line":1332,"column":2},"end":{"line":1351,"column":3}},"516":{"start":{"line":1334,"column":4},"end":{"line":1336,"column":6}},"517":{"start":{"line":1335,"column":6},"end":{"line":1335,"column":18}},"518":{"start":{"line":1337,"column":9},"end":{"line":1351,"column":3}},"519":{"start":{"line":1339,"column":4},"end":{"line":1339,"column":36}},"520":{"start":{"line":1342,"column":4},"end":{"line":1350,"column":6}},"521":{"start":{"line":1343,"column":6},"end":{"line":1349,"column":7}},"522":{"start":{"line":1344,"column":8},"end":{"line":1344,"column":39}},"523":{"start":{"line":1345,"column":13},"end":{"line":1349,"column":7}},"524":{"start":{"line":1346,"column":8},"end":{"line":1346,"column":46}},"525":{"start":{"line":1348,"column":8},"end":{"line":1348,"column":38}},"526":{"start":{"line":1353,"column":2},"end":{"line":1357,"column":3}},"527":{"start":{"line":1355,"column":4},"end":{"line":1355,"column":59}},"528":{"start":{"line":1356,"column":4},"end":{"line":1356,"column":22}},"529":{"start":{"line":1359,"column":2},"end":{"line":1361,"column":61}},"530":{"start":{"line":1363,"column":2},"end":{"line":1363,"column":69}},"531":{"start":{"line":1364,"column":2},"end":{"line":1366,"column":3}},"532":{"start":{"line":1365,"column":4},"end":{"line":1365,"column":72}},"533":{"start":{"line":1368,"column":2},"end":{"line":1504,"column":5}},"534":{"start":{"line":1369,"column":4},"end":{"line":1372,"column":5}},"535":{"start":{"line":1370,"column":6},"end":{"line":1370,"column":14}},"536":{"start":{"line":1371,"column":6},"end":{"line":1371,"column":24}},"537":{"start":{"line":1374,"column":4},"end":{"line":1374,"column":29}},"538":{"start":{"line":1375,"column":4},"end":{"line":1378,"column":5}},"539":{"start":{"line":1376,"column":6},"end":{"line":1376,"column":68}},"540":{"start":{"line":1377,"column":6},"end":{"line":1377,"column":24}},"541":{"start":{"line":1381,"column":4},"end":{"line":1381,"column":39}},"542":{"start":{"line":1382,"column":4},"end":{"line":1382,"column":17}},"543":{"start":{"line":1383,"column":4},"end":{"line":1385,"column":7}},"544":{"start":{"line":1384,"column":6},"end":{"line":1384,"column":37}},"545":{"start":{"line":1387,"column":4},"end":{"line":1389,"column":5}},"546":{"start":{"line":1388,"column":6},"end":{"line":1388,"column":35}},"547":{"start":{"line":1391,"column":4},"end":{"line":1397,"column":6}},"548":{"start":{"line":1399,"column":4},"end":{"line":1402,"column":6}},"549":{"start":{"line":1404,"column":4},"end":{"line":1432,"column":7}},"550":{"start":{"line":1405,"column":6},"end":{"line":1405,"column":59}},"551":{"start":{"line":1406,"column":6},"end":{"line":1413,"column":8}},"552":{"start":{"line":1415,"column":6},"end":{"line":1417,"column":7}},"553":{"start":{"line":1416,"column":8},"end":{"line":1416,"column":62}},"554":{"start":{"line":1418,"column":6},"end":{"line":1425,"column":8}},"555":{"start":{"line":1427,"column":6},"end":{"line":1431,"column":7}},"556":{"start":{"line":1428,"column":8},"end":{"line":1430,"column":9}},"557":{"start":{"line":1429,"column":10},"end":{"line":1429,"column":42}},"558":{"start":{"line":1435,"column":4},"end":{"line":1435,"column":44}},"559":{"start":{"line":1436,"column":4},"end":{"line":1436,"column":55}},"560":{"start":{"line":1437,"column":4},"end":{"line":1442,"column":5}},"561":{"start":{"line":1438,"column":6},"end":{"line":1440,"column":7}},"562":{"start":{"line":1439,"column":8},"end":{"line":1439,"column":48}},"563":{"start":{"line":1441,"column":6},"end":{"line":1441,"column":42}},"564":{"start":{"line":1444,"column":4},"end":{"line":1444,"column":25}},"565":{"start":{"line":1445,"column":4},"end":{"line":1481,"column":5}},"566":{"start":{"line":1447,"column":6},"end":{"line":1447,"column":19}},"567":{"start":{"line":1448,"column":6},"end":{"line":1448,"column":41}},"568":{"start":{"line":1449,"column":6},"end":{"line":1461,"column":9}},"569":{"start":{"line":1450,"column":8},"end":{"line":1455,"column":10}},"570":{"start":{"line":1456,"column":8},"end":{"line":1460,"column":9}},"571":{"start":{"line":1457,"column":10},"end":{"line":1457,"column":38}},"572":{"start":{"line":1459,"column":10},"end":{"line":1459,"column":36}},"573":{"start":{"line":1463,"column":6},"end":{"line":1465,"column":7}},"574":{"start":{"line":1464,"column":8},"end":{"line":1464,"column":37}},"575":{"start":{"line":1467,"column":6},"end":{"line":1467,"column":36}},"576":{"start":{"line":1468,"column":6},"end":{"line":1480,"column":9}},"577":{"start":{"line":1469,"column":8},"end":{"line":1469,"column":71}},"578":{"start":{"line":1470,"column":8},"end":{"line":1474,"column":10}},"579":{"start":{"line":1476,"column":8},"end":{"line":1476,"column":52}},"580":{"start":{"line":1477,"column":8},"end":{"line":1479,"column":9}},"581":{"start":{"line":1478,"column":10},"end":{"line":1478,"column":76}},"582":{"start":{"line":1483,"column":4},"end":{"line":1503,"column":5}},"583":{"start":{"line":1484,"column":6},"end":{"line":1484,"column":32}},"584":{"start":{"line":1486,"column":6},"end":{"line":1486,"column":25}},"585":{"start":{"line":1487,"column":6},"end":{"line":1498,"column":7}},"586":{"start":{"line":1488,"column":8},"end":{"line":1490,"column":9}},"587":{"start":{"line":1489,"column":10},"end":{"line":1489,"column":63}},"588":{"start":{"line":1491,"column":8},"end":{"line":1491,"column":28}},"589":{"start":{"line":1492,"column":8},"end":{"line":1494,"column":9}},"590":{"start":{"line":1493,"column":10},"end":{"line":1493,"column":41}},"591":{"start":{"line":1495,"column":8},"end":{"line":1495,"column":48}},"592":{"start":{"line":1497,"column":8},"end":{"line":1497,"column":110}},"593":{"start":{"line":1499,"column":6},"end":{"line":1502,"column":9}},"594":{"start":{"line":1500,"column":8},"end":{"line":1500,"column":43}},"595":{"start":{"line":1501,"column":8},"end":{"line":1501,"column":24}},"596":{"start":{"line":1505,"column":2},"end":{"line":1505,"column":20}},"597":{"start":{"line":1518,"column":0},"end":{"line":1651,"column":2}},"598":{"start":{"line":1519,"column":2},"end":{"line":1519,"column":18}},"599":{"start":{"line":1520,"column":2},"end":{"line":1520,"column":48}},"600":{"start":{"line":1522,"column":2},"end":{"line":1522,"column":69}},"601":{"start":{"line":1523,"column":2},"end":{"line":1525,"column":3}},"602":{"start":{"line":1524,"column":4},"end":{"line":1524,"column":14}},"603":{"start":{"line":1527,"column":2},"end":{"line":1533,"column":4}},"604":{"start":{"line":1528,"column":4},"end":{"line":1532,"column":5}},"605":{"start":{"line":1529,"column":6},"end":{"line":1529,"column":37}},"606":{"start":{"line":1531,"column":6},"end":{"line":1531,"column":36}},"607":{"start":{"line":1536,"column":2},"end":{"line":1536,"column":69}},"608":{"start":{"line":1537,"column":2},"end":{"line":1537,"column":15}},"609":{"start":{"line":1538,"column":2},"end":{"line":1540,"column":5}},"610":{"start":{"line":1539,"column":4},"end":{"line":1539,"column":35}},"611":{"start":{"line":1542,"column":2},"end":{"line":1544,"column":3}},"612":{"start":{"line":1543,"column":4},"end":{"line":1543,"column":33}},"613":{"start":{"line":1546,"column":2},"end":{"line":1552,"column":4}},"614":{"start":{"line":1554,"column":2},"end":{"line":1557,"column":4}},"615":{"start":{"line":1559,"column":2},"end":{"line":1582,"column":5}},"616":{"start":{"line":1560,"column":4},"end":{"line":1560,"column":17}},"617":{"start":{"line":1562,"column":4},"end":{"line":1562,"column":57}},"618":{"start":{"line":1563,"column":4},"end":{"line":1569,"column":6}},"619":{"start":{"line":1571,"column":4},"end":{"line":1573,"column":5}},"620":{"start":{"line":1572,"column":6},"end":{"line":1572,"column":60}},"621":{"start":{"line":1574,"column":4},"end":{"line":1581,"column":6}},"622":{"start":{"line":1585,"column":2},"end":{"line":1585,"column":42}},"623":{"start":{"line":1586,"column":2},"end":{"line":1586,"column":53}},"624":{"start":{"line":1587,"column":2},"end":{"line":1592,"column":3}},"625":{"start":{"line":1588,"column":4},"end":{"line":1590,"column":5}},"626":{"start":{"line":1589,"column":6},"end":{"line":1589,"column":46}},"627":{"start":{"line":1591,"column":4},"end":{"line":1591,"column":40}},"628":{"start":{"line":1594,"column":2},"end":{"line":1594,"column":23}},"629":{"start":{"line":1595,"column":2},"end":{"line":1595,"column":69}},"630":{"start":{"line":1596,"column":2},"end":{"line":1632,"column":3}},"631":{"start":{"line":1598,"column":4},"end":{"line":1598,"column":17}},"632":{"start":{"line":1599,"column":4},"end":{"line":1599,"column":71}},"633":{"start":{"line":1600,"column":4},"end":{"line":1612,"column":7}},"634":{"start":{"line":1601,"column":6},"end":{"line":1606,"column":8}},"635":{"start":{"line":1607,"column":6},"end":{"line":1611,"column":7}},"636":{"start":{"line":1608,"column":8},"end":{"line":1608,"column":36}},"637":{"start":{"line":1610,"column":8},"end":{"line":1610,"column":34}},"638":{"start":{"line":1614,"column":4},"end":{"line":1616,"column":5}},"639":{"start":{"line":1615,"column":6},"end":{"line":1615,"column":35}},"640":{"start":{"line":1618,"column":4},"end":{"line":1618,"column":34}},"641":{"start":{"line":1619,"column":4},"end":{"line":1631,"column":7}},"642":{"start":{"line":1620,"column":6},"end":{"line":1620,"column":58}},"643":{"start":{"line":1621,"column":6},"end":{"line":1625,"column":8}},"644":{"start":{"line":1627,"column":6},"end":{"line":1627,"column":50}},"645":{"start":{"line":1628,"column":6},"end":{"line":1630,"column":7}},"646":{"start":{"line":1629,"column":8},"end":{"line":1629,"column":74}},"647":{"start":{"line":1634,"column":2},"end":{"line":1650,"column":3}},"648":{"start":{"line":1635,"column":4},"end":{"line":1635,"column":27}},"649":{"start":{"line":1637,"column":4},"end":{"line":1637,"column":23}},"650":{"start":{"line":1638,"column":4},"end":{"line":1648,"column":5}},"651":{"start":{"line":1639,"column":6},"end":{"line":1641,"column":7}},"652":{"start":{"line":1640,"column":8},"end":{"line":1640,"column":61}},"653":{"start":{"line":1642,"column":6},"end":{"line":1642,"column":26}},"654":{"start":{"line":1643,"column":6},"end":{"line":1645,"column":7}},"655":{"start":{"line":1644,"column":8},"end":{"line":1644,"column":39}},"656":{"start":{"line":1646,"column":6},"end":{"line":1646,"column":46}},"657":{"start":{"line":1647,"column":6},"end":{"line":1647,"column":69}},"658":{"start":{"line":1649,"column":4},"end":{"line":1649,"column":27}},"659":{"start":{"line":1664,"column":0},"end":{"line":1688,"column":2}},"660":{"start":{"line":1665,"column":2},"end":{"line":1665,"column":18}},"661":{"start":{"line":1666,"column":2},"end":{"line":1666,"column":26}},"662":{"start":{"line":1667,"column":2},"end":{"line":1687,"column":5}},"663":{"start":{"line":1668,"column":4},"end":{"line":1671,"column":5}},"664":{"start":{"line":1669,"column":6},"end":{"line":1669,"column":29}},"665":{"start":{"line":1670,"column":6},"end":{"line":1670,"column":13}},"666":{"start":{"line":1673,"column":4},"end":{"line":1673,"column":24}},"667":{"start":{"line":1674,"column":4},"end":{"line":1681,"column":5}},"668":{"start":{"line":1675,"column":6},"end":{"line":1675,"column":30}},"669":{"start":{"line":1676,"column":6},"end":{"line":1679,"column":7}},"670":{"start":{"line":1677,"column":8},"end":{"line":1677,"column":46}},"671":{"start":{"line":1678,"column":8},"end":{"line":1678,"column":43}},"672":{"start":{"line":1680,"column":6},"end":{"line":1680,"column":30}},"673":{"start":{"line":1683,"column":4},"end":{"line":1684,"column":35}},"674":{"start":{"line":1686,"column":4},"end":{"line":1686,"column":26}},"675":{"start":{"line":1703,"column":0},"end":{"line":1721,"column":2}},"676":{"start":{"line":1704,"column":2},"end":{"line":1704,"column":26}},"677":{"start":{"line":1705,"column":2},"end":{"line":1705,"column":61}},"678":{"start":{"line":1707,"column":2},"end":{"line":1707,"column":22}},"679":{"start":{"line":1708,"column":2},"end":{"line":1715,"column":3}},"680":{"start":{"line":1709,"column":4},"end":{"line":1709,"column":28}},"681":{"start":{"line":1710,"column":4},"end":{"line":1713,"column":5}},"682":{"start":{"line":1711,"column":6},"end":{"line":1711,"column":44}},"683":{"start":{"line":1712,"column":6},"end":{"line":1712,"column":41}},"684":{"start":{"line":1714,"column":4},"end":{"line":1714,"column":28}},"685":{"start":{"line":1717,"column":2},"end":{"line":1718,"column":33}},"686":{"start":{"line":1720,"column":2},"end":{"line":1720,"column":16}},"687":{"start":{"line":1730,"column":0},"end":{"line":1736,"column":2}},"688":{"start":{"line":1732,"column":2},"end":{"line":1732,"column":45}},"689":{"start":{"line":1735,"column":2},"end":{"line":1735,"column":49}},"690":{"start":{"line":1743,"column":0},"end":{"line":1758,"column":2}},"691":{"start":{"line":1744,"column":2},"end":{"line":1744,"column":16}},"692":{"start":{"line":1745,"column":2},"end":{"line":1757,"column":3}},"693":{"start":{"line":1746,"column":4},"end":{"line":1746,"column":40}},"694":{"start":{"line":1748,"column":4},"end":{"line":1751,"column":5}},"695":{"start":{"line":1749,"column":6},"end":{"line":1749,"column":18}},"696":{"start":{"line":1750,"column":6},"end":{"line":1750,"column":25}},"697":{"start":{"line":1752,"column":4},"end":{"line":1756,"column":5}},"698":{"start":{"line":1753,"column":6},"end":{"line":1755,"column":9}},"699":{"start":{"line":1754,"column":8},"end":{"line":1754,"column":23}},"700":{"start":{"line":1766,"column":0},"end":{"line":1769,"column":2}},"701":{"start":{"line":1767,"column":2},"end":{"line":1767,"column":16}},"702":{"start":{"line":1768,"column":2},"end":{"line":1768,"column":27}},"703":{"start":{"line":1774,"column":0},"end":{"line":1784,"column":2}},"704":{"start":{"line":1775,"column":2},"end":{"line":1777,"column":3}},"705":{"start":{"line":1776,"column":4},"end":{"line":1776,"column":68}},"706":{"start":{"line":1778,"column":2},"end":{"line":1780,"column":3}},"707":{"start":{"line":1779,"column":4},"end":{"line":1779,"column":38}},"708":{"start":{"line":1781,"column":2},"end":{"line":1783,"column":3}},"709":{"start":{"line":1782,"column":4},"end":{"line":1782,"column":34}},"710":{"start":{"line":1790,"column":0},"end":{"line":1792,"column":2}},"711":{"start":{"line":1791,"column":2},"end":{"line":1791,"column":75}},"712":{"start":{"line":1800,"column":0},"end":{"line":1802,"column":2}},"713":{"start":{"line":1801,"column":2},"end":{"line":1801,"column":90}},"714":{"start":{"line":1810,"column":0},"end":{"line":1812,"column":2}},"715":{"start":{"line":1811,"column":2},"end":{"line":1811,"column":94}},"716":{"start":{"line":1819,"column":0},"end":{"line":1821,"column":2}},"717":{"start":{"line":1820,"column":2},"end":{"line":1820,"column":77}},"718":{"start":{"line":1828,"column":0},"end":{"line":1830,"column":2}},"719":{"start":{"line":1829,"column":2},"end":{"line":1829,"column":78}},"720":{"start":{"line":1837,"column":0},"end":{"line":1842,"column":2}},"721":{"start":{"line":1838,"column":2},"end":{"line":1840,"column":3}},"722":{"start":{"line":1839,"column":4},"end":{"line":1839,"column":69}},"723":{"start":{"line":1841,"column":2},"end":{"line":1841,"column":53}},"724":{"start":{"line":1849,"column":0},"end":{"line":1851,"column":2}},"725":{"start":{"line":1850,"column":2},"end":{"line":1850,"column":54}},"726":{"start":{"line":1858,"column":0},"end":{"line":1862,"column":2}},"727":{"start":{"line":1859,"column":2},"end":{"line":1859,"column":47}},"728":{"start":{"line":1860,"column":2},"end":{"line":1860,"column":33}},"729":{"start":{"line":1861,"column":2},"end":{"line":1861,"column":54}},"730":{"start":{"line":1871,"column":0},"end":{"line":1918,"column":2}},"731":{"start":{"line":1872,"column":2},"end":{"line":1872,"column":20}},"732":{"start":{"line":1873,"column":2},"end":{"line":1873,"column":63}},"733":{"start":{"line":1874,"column":2},"end":{"line":1874,"column":59}},"734":{"start":{"line":1875,"column":2},"end":{"line":1877,"column":3}},"735":{"start":{"line":1876,"column":4},"end":{"line":1876,"column":50}},"736":{"start":{"line":1878,"column":2},"end":{"line":1878,"column":49}},"737":{"start":{"line":1879,"column":2},"end":{"line":1885,"column":3}},"738":{"start":{"line":1880,"column":4},"end":{"line":1883,"column":5}},"739":{"start":{"line":1882,"column":6},"end":{"line":1882,"column":74}},"740":{"start":{"line":1884,"column":4},"end":{"line":1884,"column":11}},"741":{"start":{"line":1887,"column":2},"end":{"line":1887,"column":29}},"742":{"start":{"line":1888,"column":2},"end":{"line":1888,"column":66}},"743":{"start":{"line":1889,"column":2},"end":{"line":1897,"column":3}},"744":{"start":{"line":1890,"column":4},"end":{"line":1890,"column":36}},"745":{"start":{"line":1891,"column":4},"end":{"line":1893,"column":5}},"746":{"start":{"line":1892,"column":6},"end":{"line":1892,"column":65}},"747":{"start":{"line":1894,"column":4},"end":{"line":1896,"column":5}},"748":{"start":{"line":1895,"column":6},"end":{"line":1895,"column":69}},"749":{"start":{"line":1898,"column":2},"end":{"line":1917,"column":3}},"750":{"start":{"line":1899,"column":4},"end":{"line":1904,"column":17}},"751":{"start":{"line":1900,"column":6},"end":{"line":1900,"column":25}},"752":{"start":{"line":1900,"column":15},"end":{"line":1900,"column":25}},"753":{"start":{"line":1901,"column":6},"end":{"line":1901,"column":37}},"754":{"start":{"line":1903,"column":6},"end":{"line":1903,"column":49}},"755":{"start":{"line":1905,"column":4},"end":{"line":1913,"column":5}},"756":{"start":{"line":1907,"column":8},"end":{"line":1907,"column":78}},"757":{"start":{"line":1908,"column":8},"end":{"line":1908,"column":14}},"758":{"start":{"line":1911,"column":8},"end":{"line":1911,"column":60}},"759":{"start":{"line":1912,"column":8},"end":{"line":1912,"column":14}},"760":{"start":{"line":1916,"column":4},"end":{"line":1916,"column":47}},"761":{"start":{"line":1924,"column":0},"end":{"line":1937,"column":2}},"762":{"start":{"line":1925,"column":2},"end":{"line":1925,"column":18}},"763":{"start":{"line":1926,"column":2},"end":{"line":1936,"column":3}},"764":{"start":{"line":1927,"column":4},"end":{"line":1930,"column":7}},"765":{"start":{"line":1928,"column":6},"end":{"line":1928,"column":29}},"766":{"start":{"line":1929,"column":6},"end":{"line":1929,"column":28}},"767":{"start":{"line":1932,"column":4},"end":{"line":1935,"column":7}},"768":{"start":{"line":1933,"column":6},"end":{"line":1933,"column":29}},"769":{"start":{"line":1934,"column":6},"end":{"line":1934,"column":17}},"770":{"start":{"line":1946,"column":0},"end":{"line":1979,"column":2}},"771":{"start":{"line":1947,"column":2},"end":{"line":1947,"column":24}},"772":{"start":{"line":1948,"column":2},"end":{"line":1948,"column":35}},"773":{"start":{"line":1949,"column":2},"end":{"line":1949,"column":61}},"774":{"start":{"line":1950,"column":2},"end":{"line":1952,"column":4}},"775":{"start":{"line":1951,"column":4},"end":{"line":1951,"column":49}},"776":{"start":{"line":1954,"column":2},"end":{"line":1954,"column":31}},"777":{"start":{"line":1957,"column":2},"end":{"line":1957,"column":27}},"778":{"start":{"line":1959,"column":2},"end":{"line":1959,"column":50}},"779":{"start":{"line":1960,"column":2},"end":{"line":1960,"column":48}},"780":{"start":{"line":1961,"column":2},"end":{"line":1961,"column":55}},"781":{"start":{"line":1963,"column":2},"end":{"line":1976,"column":3}},"782":{"start":{"line":1965,"column":4},"end":{"line":1965,"column":54}},"783":{"start":{"line":1966,"column":4},"end":{"line":1967,"column":88}},"784":{"start":{"line":1969,"column":4},"end":{"line":1975,"column":5}},"785":{"start":{"line":1970,"column":6},"end":{"line":1974,"column":9}},"786":{"start":{"line":1978,"column":2},"end":{"line":1978,"column":15}},"787":{"start":{"line":1986,"column":0},"end":{"line":2016,"column":2}},"788":{"start":{"line":1987,"column":2},"end":{"line":1987,"column":24}},"789":{"start":{"line":1988,"column":2},"end":{"line":1988,"column":39}},"790":{"start":{"line":1990,"column":2},"end":{"line":1992,"column":3}},"791":{"start":{"line":1991,"column":4},"end":{"line":1991,"column":35}},"792":{"start":{"line":1994,"column":2},"end":{"line":1994,"column":35}},"793":{"start":{"line":1995,"column":2},"end":{"line":1995,"column":34}},"794":{"start":{"line":1996,"column":2},"end":{"line":1996,"column":37}},"795":{"start":{"line":1997,"column":2},"end":{"line":1997,"column":45}},"796":{"start":{"line":1998,"column":2},"end":{"line":1998,"column":32}},"797":{"start":{"line":1999,"column":2},"end":{"line":1999,"column":33}},"798":{"start":{"line":2000,"column":2},"end":{"line":2000,"column":61}},"799":{"start":{"line":2003,"column":2},"end":{"line":2003,"column":48}},"800":{"start":{"line":2004,"column":2},"end":{"line":2004,"column":55}},"801":{"start":{"line":2005,"column":2},"end":{"line":2005,"column":65}},"802":{"start":{"line":2007,"column":2},"end":{"line":2009,"column":3}},"803":{"start":{"line":2008,"column":4},"end":{"line":2008,"column":78}},"804":{"start":{"line":2011,"column":2},"end":{"line":2013,"column":4}},"805":{"start":{"line":2012,"column":4},"end":{"line":2012,"column":35}},"806":{"start":{"line":2015,"column":2},"end":{"line":2015,"column":21}},"807":{"start":{"line":2024,"column":0},"end":{"line":2031,"column":2}},"808":{"start":{"line":2025,"column":2},"end":{"line":2025,"column":40}},"809":{"start":{"line":2026,"column":2},"end":{"line":2030,"column":3}},"810":{"start":{"line":2027,"column":4},"end":{"line":2027,"column":28}},"811":{"start":{"line":2029,"column":4},"end":{"line":2029,"column":84}},"812":{"start":{"line":2053,"column":0},"end":{"line":2060,"column":2}},"813":{"start":{"line":2054,"column":2},"end":{"line":2054,"column":40}},"814":{"start":{"line":2055,"column":2},"end":{"line":2059,"column":3}},"815":{"start":{"line":2056,"column":4},"end":{"line":2056,"column":29}},"816":{"start":{"line":2058,"column":4},"end":{"line":2058,"column":84}},"817":{"start":{"line":2067,"column":0},"end":{"line":2078,"column":2}},"818":{"start":{"line":2068,"column":2},"end":{"line":2068,"column":30}},"819":{"start":{"line":2069,"column":2},"end":{"line":2069,"column":32}},"820":{"start":{"line":2071,"column":2},"end":{"line":2077,"column":3}},"821":{"start":{"line":2072,"column":4},"end":{"line":2072,"column":28}},"822":{"start":{"line":2074,"column":4},"end":{"line":2076,"column":5}},"823":{"start":{"line":2075,"column":6},"end":{"line":2075,"column":16}},"824":{"start":{"line":2103,"column":0},"end":{"line":2105,"column":2}},"825":{"start":{"line":2104,"column":2},"end":{"line":2104,"column":26}},"826":{"start":{"line":2113,"column":0},"end":{"line":2117,"column":2}},"827":{"start":{"line":2114,"column":2},"end":{"line":2114,"column":18}},"828":{"start":{"line":2115,"column":2},"end":{"line":2115,"column":22}},"829":{"start":{"line":2116,"column":2},"end":{"line":2116,"column":35}},"830":{"start":{"line":2123,"column":0},"end":{"line":2125,"column":2}},"831":{"start":{"line":2124,"column":2},"end":{"line":2124,"column":53}},"832":{"start":{"line":2133,"column":0},"end":{"line":2198,"column":2}},"833":{"start":{"line":2134,"column":2},"end":{"line":2134,"column":18}},"834":{"start":{"line":2135,"column":2},"end":{"line":2138,"column":3}},"835":{"start":{"line":2137,"column":4},"end":{"line":2137,"column":17}},"836":{"start":{"line":2140,"column":2},"end":{"line":2140,"column":27}},"837":{"start":{"line":2143,"column":2},"end":{"line":2143,"column":63}},"838":{"start":{"line":2144,"column":2},"end":{"line":2164,"column":4}},"839":{"start":{"line":2146,"column":4},"end":{"line":2146,"column":42}},"840":{"start":{"line":2147,"column":4},"end":{"line":2149,"column":5}},"841":{"start":{"line":2148,"column":6},"end":{"line":2148,"column":34}},"842":{"start":{"line":2150,"column":4},"end":{"line":2150,"column":37}},"843":{"start":{"line":2151,"column":4},"end":{"line":2163,"column":5}},"844":{"start":{"line":2152,"column":6},"end":{"line":2152,"column":32}},"845":{"start":{"line":2155,"column":6},"end":{"line":2155,"column":28}},"846":{"start":{"line":2156,"column":6},"end":{"line":2162,"column":7}},"847":{"start":{"line":2157,"column":8},"end":{"line":2159,"column":11}},"848":{"start":{"line":2158,"column":10},"end":{"line":2158,"column":18}},"849":{"start":{"line":2161,"column":8},"end":{"line":2161,"column":18}},"850":{"start":{"line":2165,"column":2},"end":{"line":2178,"column":4}},"851":{"start":{"line":2167,"column":4},"end":{"line":2167,"column":50}},"852":{"start":{"line":2168,"column":4},"end":{"line":2170,"column":5}},"853":{"start":{"line":2169,"column":6},"end":{"line":2169,"column":34}},"854":{"start":{"line":2171,"column":4},"end":{"line":2171,"column":37}},"855":{"start":{"line":2172,"column":4},"end":{"line":2172,"column":26}},"856":{"start":{"line":2173,"column":4},"end":{"line":2177,"column":5}},"857":{"start":{"line":2174,"column":6},"end":{"line":2176,"column":9}},"858":{"start":{"line":2175,"column":8},"end":{"line":2175,"column":16}},"859":{"start":{"line":2179,"column":2},"end":{"line":2179,"column":38}},"860":{"start":{"line":2180,"column":2},"end":{"line":2180,"column":30}},"861":{"start":{"line":2183,"column":2},"end":{"line":2183,"column":56}},"862":{"start":{"line":2184,"column":2},"end":{"line":2192,"column":14}},"863":{"start":{"line":2185,"column":4},"end":{"line":2185,"column":42}},"864":{"start":{"line":2186,"column":4},"end":{"line":2186,"column":50}},"865":{"start":{"line":2187,"column":4},"end":{"line":2187,"column":37}},"866":{"start":{"line":2188,"column":4},"end":{"line":2188,"column":26}},"867":{"start":{"line":2189,"column":4},"end":{"line":2191,"column":5}},"868":{"start":{"line":2190,"column":6},"end":{"line":2190,"column":71}},"869":{"start":{"line":2194,"column":2},"end":{"line":2196,"column":3}},"870":{"start":{"line":2195,"column":4},"end":{"line":2195,"column":19}},"871":{"start":{"line":2197,"column":2},"end":{"line":2197,"column":14}},"872":{"start":{"line":2204,"column":0},"end":{"line":2216,"column":2}},"873":{"start":{"line":2205,"column":2},"end":{"line":2205,"column":18}},"874":{"start":{"line":2206,"column":2},"end":{"line":2215,"column":3}},"875":{"start":{"line":2207,"column":4},"end":{"line":2207,"column":28}},"876":{"start":{"line":2208,"column":9},"end":{"line":2215,"column":3}},"877":{"start":{"line":2209,"column":4},"end":{"line":2209,"column":50}},"878":{"start":{"line":2211,"column":4},"end":{"line":2214,"column":7}},"879":{"start":{"line":2212,"column":6},"end":{"line":2212,"column":72}},"880":{"start":{"line":2213,"column":6},"end":{"line":2213,"column":14}},"881":{"start":{"line":2224,"column":0},"end":{"line":2231,"column":1}},"882":{"start":{"line":2225,"column":2},"end":{"line":2230,"column":5}},"883":{"start":{"line":2240,"column":0},"end":{"line":2247,"column":1}},"884":{"start":{"line":2241,"column":2},"end":{"line":2246,"column":5}},"885":{"start":{"line":2250,"column":0},"end":{"line":2250,"column":36}},"886":{"start":{"line":2251,"column":0},"end":{"line":2251,"column":36}},"887":{"start":{"line":2252,"column":0},"end":{"line":2252,"column":34}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":0},"end":{"line":30,"column":0}},{"start":{"line":30,"column":0},"end":{"line":30,"column":0}}]},"2":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":2},"end":{"line":92,"column":2}},{"start":{"line":92,"column":2},"end":{"line":92,"column":2}}]},"3":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"4":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":6},"end":{"line":97,"column":30}},{"start":{"line":97,"column":34},"end":{"line":97,"column":56}}]},"5":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"6":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":30}},{"start":{"line":103,"column":34},"end":{"line":103,"column":60}}]},"7":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"8":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":34}},{"start":{"line":108,"column":38},"end":{"line":108,"column":68}}]},"9":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":22},"end":{"line":112,"column":34}},{"start":{"line":112,"column":38},"end":{"line":112,"column":56}}]},"10":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":13},"end":{"line":129,"column":22}},{"start":{"line":129,"column":26},"end":{"line":129,"column":52}},{"start":{"line":129,"column":57},"end":{"line":129,"column":90}}]},"11":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"12":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":35},"end":{"line":143,"column":39}},{"start":{"line":143,"column":42},"end":{"line":143,"column":47}}]},"13":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"14":{"line":160,"type":"cond-expr","locations":[{"start":{"line":160,"column":35},"end":{"line":160,"column":39}},{"start":{"line":160,"column":42},"end":{"line":160,"column":47}}]},"15":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":19},"end":{"line":178,"column":33}},{"start":{"line":178,"column":37},"end":{"line":178,"column":49}}]},"16":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"17":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"18":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":12},"end":{"line":194,"column":13}},{"start":{"line":194,"column":17},"end":{"line":194,"column":22}}]},"19":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"20":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"21":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]},"22":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":11},"end":{"line":222,"column":17}},{"start":{"line":222,"column":21},"end":{"line":222,"column":28}}]},"23":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":21},"end":{"line":227,"column":50}},{"start":{"line":228,"column":8},"end":{"line":228,"column":17}},{"start":{"line":228,"column":21},"end":{"line":228,"column":52}}]},"24":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":6},"end":{"line":230,"column":6}},{"start":{"line":230,"column":6},"end":{"line":230,"column":6}}]},"25":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":54},"end":{"line":235,"column":61}},{"start":{"line":235,"column":65},"end":{"line":235,"column":66}}]},"26":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":4},"end":{"line":238,"column":4}},{"start":{"line":238,"column":4},"end":{"line":238,"column":4}}]},"27":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":2},"end":{"line":255,"column":2}},{"start":{"line":255,"column":2},"end":{"line":255,"column":2}}]},"28":{"line":271,"type":"binary-expr","locations":[{"start":{"line":271,"column":13},"end":{"line":271,"column":21}},{"start":{"line":271,"column":25},"end":{"line":271,"column":54}}]},"29":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":2},"end":{"line":273,"column":2}},{"start":{"line":273,"column":2},"end":{"line":273,"column":2}}]},"30":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":2},"end":{"line":278,"column":2}},{"start":{"line":278,"column":2},"end":{"line":278,"column":2}}]},"31":{"line":291,"type":"binary-expr","locations":[{"start":{"line":291,"column":33},"end":{"line":291,"column":61}},{"start":{"line":291,"column":65},"end":{"line":291,"column":67}}]},"32":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":2},"end":{"line":295,"column":2}},{"start":{"line":295,"column":2},"end":{"line":295,"column":2}}]},"33":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":4},"end":{"line":300,"column":4}},{"start":{"line":300,"column":4},"end":{"line":300,"column":4}}]},"34":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":4},"end":{"line":303,"column":4}},{"start":{"line":303,"column":4},"end":{"line":303,"column":4}}]},"35":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":6},"end":{"line":319,"column":6}},{"start":{"line":319,"column":6},"end":{"line":319,"column":6}}]},"36":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":2},"end":{"line":337,"column":2}},{"start":{"line":337,"column":2},"end":{"line":337,"column":2}}]},"37":{"line":337,"type":"binary-expr","locations":[{"start":{"line":337,"column":6},"end":{"line":337,"column":10}},{"start":{"line":337,"column":14},"end":{"line":337,"column":38}},{"start":{"line":337,"column":42},"end":{"line":337,"column":51}}]},"38":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":2},"end":{"line":342,"column":2}},{"start":{"line":342,"column":2},"end":{"line":342,"column":2}}]},"39":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":4},"end":{"line":343,"column":4}},{"start":{"line":343,"column":4},"end":{"line":343,"column":4}}]},"40":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":11},"end":{"line":345,"column":11}},{"start":{"line":345,"column":11},"end":{"line":345,"column":11}}]},"41":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":11},"end":{"line":347,"column":11}},{"start":{"line":347,"column":11},"end":{"line":347,"column":11}}]},"42":{"line":353,"type":"binary-expr","locations":[{"start":{"line":353,"column":18},"end":{"line":353,"column":26}},{"start":{"line":353,"column":30},"end":{"line":353,"column":32}}]},"43":{"line":355,"type":"binary-expr","locations":[{"start":{"line":355,"column":24},"end":{"line":355,"column":43}},{"start":{"line":355,"column":47},"end":{"line":355,"column":60}}]},"44":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":2},"end":{"line":357,"column":2}},{"start":{"line":357,"column":2},"end":{"line":357,"column":2}}]},"45":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":2},"end":{"line":365,"column":2}},{"start":{"line":365,"column":2},"end":{"line":365,"column":2}}]},"46":{"line":369,"type":"binary-expr","locations":[{"start":{"line":369,"column":9},"end":{"line":369,"column":13}},{"start":{"line":369,"column":18},"end":{"line":369,"column":27}},{"start":{"line":369,"column":31},"end":{"line":369,"column":45}}]},"47":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":2},"end":{"line":372,"column":2}},{"start":{"line":372,"column":2},"end":{"line":372,"column":2}}]},"48":{"line":372,"type":"binary-expr","locations":[{"start":{"line":372,"column":6},"end":{"line":372,"column":10}},{"start":{"line":372,"column":14},"end":{"line":372,"column":24}}]},"49":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":4},"end":{"line":373,"column":4}},{"start":{"line":373,"column":4},"end":{"line":373,"column":4}}]},"50":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":6},"end":{"line":381,"column":6}},{"start":{"line":381,"column":6},"end":{"line":381,"column":6}}]},"51":{"line":389,"type":"if","locations":[{"start":{"line":389,"column":2},"end":{"line":389,"column":2}},{"start":{"line":389,"column":2},"end":{"line":389,"column":2}}]},"52":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":6},"end":{"line":393,"column":6}},{"start":{"line":393,"column":6},"end":{"line":393,"column":6}}]},"53":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":6},"end":{"line":398,"column":6}},{"start":{"line":398,"column":6},"end":{"line":398,"column":6}}]},"54":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":6},"end":{"line":409,"column":6}},{"start":{"line":409,"column":6},"end":{"line":409,"column":6}}]},"55":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":13},"end":{"line":412,"column":13}},{"start":{"line":412,"column":13},"end":{"line":412,"column":13}}]},"56":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":6},"end":{"line":418,"column":6}},{"start":{"line":418,"column":6},"end":{"line":418,"column":6}}]},"57":{"line":420,"type":"binary-expr","locations":[{"start":{"line":420,"column":25},"end":{"line":420,"column":39}},{"start":{"line":420,"column":43},"end":{"line":420,"column":47}}]},"58":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":2},"end":{"line":429,"column":2}},{"start":{"line":429,"column":2},"end":{"line":429,"column":2}}]},"59":{"line":438,"type":"binary-expr","locations":[{"start":{"line":438,"column":9},"end":{"line":438,"column":14}},{"start":{"line":438,"column":19},"end":{"line":438,"column":45}},{"start":{"line":438,"column":51},"end":{"line":438,"column":89}}]},"60":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":2},"end":{"line":447,"column":2}},{"start":{"line":447,"column":2},"end":{"line":447,"column":2}}]},"61":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":4},"end":{"line":464,"column":4}},{"start":{"line":464,"column":4},"end":{"line":464,"column":4}}]},"62":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":8},"end":{"line":467,"column":8}},{"start":{"line":467,"column":8},"end":{"line":467,"column":8}}]},"63":{"line":467,"type":"binary-expr","locations":[{"start":{"line":467,"column":12},"end":{"line":467,"column":25}},{"start":{"line":467,"column":29},"end":{"line":467,"column":68}}]},"64":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":10},"end":{"line":472,"column":10}},{"start":{"line":472,"column":10},"end":{"line":472,"column":10}}]},"65":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":4},"end":{"line":480,"column":4}},{"start":{"line":480,"column":4},"end":{"line":480,"column":4}}]},"66":{"line":480,"type":"binary-expr","locations":[{"start":{"line":480,"column":8},"end":{"line":480,"column":20}},{"start":{"line":480,"column":24},"end":{"line":480,"column":64}}]},"67":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":8},"end":{"line":483,"column":8}},{"start":{"line":483,"column":8},"end":{"line":483,"column":8}}]},"68":{"line":496,"type":"if","locations":[{"start":{"line":496,"column":2},"end":{"line":496,"column":2}},{"start":{"line":496,"column":2},"end":{"line":496,"column":2}}]},"69":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":6},"end":{"line":504,"column":6}},{"start":{"line":504,"column":6},"end":{"line":504,"column":6}}]},"70":{"line":504,"type":"binary-expr","locations":[{"start":{"line":504,"column":10},"end":{"line":504,"column":23}},{"start":{"line":504,"column":27},"end":{"line":504,"column":49}},{"start":{"line":504,"column":53},"end":{"line":504,"column":61}}]},"71":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":6},"end":{"line":508,"column":6}},{"start":{"line":508,"column":6},"end":{"line":508,"column":6}}]},"72":{"line":509,"type":"cond-expr","locations":[{"start":{"line":509,"column":56},"end":{"line":509,"column":63}},{"start":{"line":509,"column":66},"end":{"line":509,"column":68}}]},"73":{"line":510,"type":"if","locations":[{"start":{"line":510,"column":8},"end":{"line":510,"column":8}},{"start":{"line":510,"column":8},"end":{"line":510,"column":8}}]},"74":{"line":512,"type":"if","locations":[{"start":{"line":512,"column":15},"end":{"line":512,"column":15}},{"start":{"line":512,"column":15},"end":{"line":512,"column":15}}]},"75":{"line":512,"type":"binary-expr","locations":[{"start":{"line":512,"column":19},"end":{"line":512,"column":52}},{"start":{"line":512,"column":56},"end":{"line":512,"column":92}}]},"76":{"line":517,"type":"if","locations":[{"start":{"line":517,"column":6},"end":{"line":517,"column":6}},{"start":{"line":517,"column":6},"end":{"line":517,"column":6}}]},"77":{"line":518,"type":"cond-expr","locations":[{"start":{"line":518,"column":46},"end":{"line":518,"column":53}},{"start":{"line":518,"column":56},"end":{"line":518,"column":84}}]},"78":{"line":522,"type":"if","locations":[{"start":{"line":522,"column":6},"end":{"line":522,"column":6}},{"start":{"line":522,"column":6},"end":{"line":522,"column":6}}]},"79":{"line":523,"type":"cond-expr","locations":[{"start":{"line":523,"column":49},"end":{"line":523,"column":58}},{"start":{"line":523,"column":61},"end":{"line":523,"column":91}}]},"80":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":6},"end":{"line":526,"column":6}},{"start":{"line":526,"column":6},"end":{"line":526,"column":6}}]},"81":{"line":526,"type":"binary-expr","locations":[{"start":{"line":526,"column":11},"end":{"line":526,"column":22}},{"start":{"line":526,"column":26},"end":{"line":526,"column":65}},{"start":{"line":527,"column":11},"end":{"line":527,"column":23}},{"start":{"line":527,"column":27},"end":{"line":527,"column":67}}]},"82":{"line":534,"type":"binary-expr","locations":[{"start":{"line":534,"column":23},"end":{"line":534,"column":38}},{"start":{"line":534,"column":42},"end":{"line":534,"column":53}}]},"83":{"line":535,"type":"if","locations":[{"start":{"line":535,"column":8},"end":{"line":535,"column":8}},{"start":{"line":535,"column":8},"end":{"line":535,"column":8}}]},"84":{"line":556,"type":"if","locations":[{"start":{"line":556,"column":2},"end":{"line":556,"column":2}},{"start":{"line":556,"column":2},"end":{"line":556,"column":2}}]},"85":{"line":560,"type":"if","locations":[{"start":{"line":560,"column":4},"end":{"line":560,"column":4}},{"start":{"line":560,"column":4},"end":{"line":560,"column":4}}]},"86":{"line":560,"type":"binary-expr","locations":[{"start":{"line":560,"column":8},"end":{"line":560,"column":14}},{"start":{"line":560,"column":18},"end":{"line":560,"column":34}},{"start":{"line":560,"column":38},"end":{"line":560,"column":69}}]},"87":{"line":562,"type":"binary-expr","locations":[{"start":{"line":562,"column":19},"end":{"line":562,"column":52}},{"start":{"line":562,"column":56},"end":{"line":562,"column":62}}]},"88":{"line":567,"type":"if","locations":[{"start":{"line":567,"column":6},"end":{"line":567,"column":6}},{"start":{"line":567,"column":6},"end":{"line":567,"column":6}}]},"89":{"line":567,"type":"binary-expr","locations":[{"start":{"line":567,"column":10},"end":{"line":567,"column":26}},{"start":{"line":567,"column":30},"end":{"line":567,"column":47}}]},"90":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":6},"end":{"line":570,"column":6}},{"start":{"line":570,"column":6},"end":{"line":570,"column":6}}]},"91":{"line":574,"type":"if","locations":[{"start":{"line":574,"column":4},"end":{"line":574,"column":4}},{"start":{"line":574,"column":4},"end":{"line":574,"column":4}}]},"92":{"line":588,"type":"binary-expr","locations":[{"start":{"line":588,"column":18},"end":{"line":588,"column":40}},{"start":{"line":588,"column":44},"end":{"line":588,"column":62}}]},"93":{"line":596,"type":"binary-expr","locations":[{"start":{"line":596,"column":15},"end":{"line":596,"column":30}},{"start":{"line":596,"column":34},"end":{"line":596,"column":36}}]},"94":{"line":653,"type":"if","locations":[{"start":{"line":653,"column":2},"end":{"line":653,"column":2}},{"start":{"line":653,"column":2},"end":{"line":653,"column":2}}]},"95":{"line":656,"type":"if","locations":[{"start":{"line":656,"column":2},"end":{"line":656,"column":2}},{"start":{"line":656,"column":2},"end":{"line":656,"column":2}}]},"96":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":2},"end":{"line":660,"column":2}},{"start":{"line":660,"column":2},"end":{"line":660,"column":2}}]},"97":{"line":665,"type":"binary-expr","locations":[{"start":{"line":665,"column":15},"end":{"line":665,"column":25}},{"start":{"line":665,"column":29},"end":{"line":665,"column":31}}]},"98":{"line":666,"type":"binary-expr","locations":[{"start":{"line":666,"column":13},"end":{"line":666,"column":21}},{"start":{"line":666,"column":25},"end":{"line":666,"column":27}}]},"99":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":2},"end":{"line":668,"column":2}},{"start":{"line":668,"column":2},"end":{"line":668,"column":2}}]},"100":{"line":670,"type":"if","locations":[{"start":{"line":670,"column":4},"end":{"line":670,"column":4}},{"start":{"line":670,"column":4},"end":{"line":670,"column":4}}]},"101":{"line":670,"type":"binary-expr","locations":[{"start":{"line":670,"column":8},"end":{"line":670,"column":37}},{"start":{"line":670,"column":41},"end":{"line":670,"column":65}}]},"102":{"line":673,"type":"if","locations":[{"start":{"line":673,"column":4},"end":{"line":673,"column":4}},{"start":{"line":673,"column":4},"end":{"line":673,"column":4}}]},"103":{"line":681,"type":"if","locations":[{"start":{"line":681,"column":2},"end":{"line":681,"column":2}},{"start":{"line":681,"column":2},"end":{"line":681,"column":2}}]},"104":{"line":710,"type":"if","locations":[{"start":{"line":710,"column":4},"end":{"line":710,"column":4}},{"start":{"line":710,"column":4},"end":{"line":710,"column":4}}]},"105":{"line":711,"type":"cond-expr","locations":[{"start":{"line":711,"column":29},"end":{"line":711,"column":48}},{"start":{"line":711,"column":51},"end":{"line":711,"column":60}}]},"106":{"line":725,"type":"if","locations":[{"start":{"line":725,"column":10},"end":{"line":725,"column":10}},{"start":{"line":725,"column":10},"end":{"line":725,"column":10}}]},"107":{"line":753,"type":"binary-expr","locations":[{"start":{"line":753,"column":17},"end":{"line":753,"column":31}},{"start":{"line":753,"column":35},"end":{"line":753,"column":58}}]},"108":{"line":754,"type":"binary-expr","locations":[{"start":{"line":754,"column":14},"end":{"line":754,"column":22}},{"start":{"line":754,"column":26},"end":{"line":754,"column":36}},{"start":{"line":754,"column":40},"end":{"line":754,"column":42}}]},"109":{"line":755,"type":"if","locations":[{"start":{"line":755,"column":2},"end":{"line":755,"column":2}},{"start":{"line":755,"column":2},"end":{"line":755,"column":2}}]},"110":{"line":768,"type":"if","locations":[{"start":{"line":768,"column":2},"end":{"line":768,"column":2}},{"start":{"line":768,"column":2},"end":{"line":768,"column":2}}]},"111":{"line":771,"type":"if","locations":[{"start":{"line":771,"column":6},"end":{"line":771,"column":6}},{"start":{"line":771,"column":6},"end":{"line":771,"column":6}}]},"112":{"line":790,"type":"if","locations":[{"start":{"line":790,"column":2},"end":{"line":790,"column":2}},{"start":{"line":790,"column":2},"end":{"line":790,"column":2}}]},"113":{"line":795,"type":"if","locations":[{"start":{"line":795,"column":2},"end":{"line":795,"column":2}},{"start":{"line":795,"column":2},"end":{"line":795,"column":2}}]},"114":{"line":821,"type":"if","locations":[{"start":{"line":821,"column":2},"end":{"line":821,"column":2}},{"start":{"line":821,"column":2},"end":{"line":821,"column":2}}]},"115":{"line":821,"type":"binary-expr","locations":[{"start":{"line":821,"column":6},"end":{"line":821,"column":20}},{"start":{"line":821,"column":24},"end":{"line":821,"column":53}}]},"116":{"line":840,"type":"if","locations":[{"start":{"line":840,"column":2},"end":{"line":840,"column":2}},{"start":{"line":840,"column":2},"end":{"line":840,"column":2}}]},"117":{"line":840,"type":"binary-expr","locations":[{"start":{"line":840,"column":7},"end":{"line":840,"column":10}},{"start":{"line":840,"column":16},"end":{"line":840,"column":44}}]},"118":{"line":845,"type":"binary-expr","locations":[{"start":{"line":845,"column":7},"end":{"line":845,"column":9}},{"start":{"line":845,"column":13},"end":{"line":845,"column":42}}]},"119":{"line":847,"type":"if","locations":[{"start":{"line":847,"column":2},"end":{"line":847,"column":2}},{"start":{"line":847,"column":2},"end":{"line":847,"column":2}}]},"120":{"line":854,"type":"if","locations":[{"start":{"line":854,"column":2},"end":{"line":854,"column":2}},{"start":{"line":854,"column":2},"end":{"line":854,"column":2}}]},"121":{"line":860,"type":"if","locations":[{"start":{"line":860,"column":2},"end":{"line":860,"column":2}},{"start":{"line":860,"column":2},"end":{"line":860,"column":2}}]},"122":{"line":860,"type":"binary-expr","locations":[{"start":{"line":860,"column":6},"end":{"line":860,"column":20}},{"start":{"line":860,"column":24},"end":{"line":860,"column":58}}]},"123":{"line":861,"type":"binary-expr","locations":[{"start":{"line":861,"column":13},"end":{"line":861,"column":19}},{"start":{"line":861,"column":23},"end":{"line":861,"column":50}}]},"124":{"line":863,"type":"if","locations":[{"start":{"line":863,"column":4},"end":{"line":863,"column":4}},{"start":{"line":863,"column":4},"end":{"line":863,"column":4}}]},"125":{"line":872,"type":"if","locations":[{"start":{"line":872,"column":4},"end":{"line":872,"column":4}},{"start":{"line":872,"column":4},"end":{"line":872,"column":4}}]},"126":{"line":895,"type":"if","locations":[{"start":{"line":895,"column":2},"end":{"line":895,"column":2}},{"start":{"line":895,"column":2},"end":{"line":895,"column":2}}]},"127":{"line":895,"type":"binary-expr","locations":[{"start":{"line":895,"column":7},"end":{"line":895,"column":10}},{"start":{"line":895,"column":16},"end":{"line":895,"column":44}}]},"128":{"line":900,"type":"binary-expr","locations":[{"start":{"line":900,"column":7},"end":{"line":900,"column":9}},{"start":{"line":900,"column":13},"end":{"line":900,"column":42}}]},"129":{"line":902,"type":"if","locations":[{"start":{"line":902,"column":2},"end":{"line":902,"column":2}},{"start":{"line":902,"column":2},"end":{"line":902,"column":2}}]},"130":{"line":909,"type":"if","locations":[{"start":{"line":909,"column":2},"end":{"line":909,"column":2}},{"start":{"line":909,"column":2},"end":{"line":909,"column":2}}]},"131":{"line":915,"type":"if","locations":[{"start":{"line":915,"column":2},"end":{"line":915,"column":2}},{"start":{"line":915,"column":2},"end":{"line":915,"column":2}}]},"132":{"line":915,"type":"binary-expr","locations":[{"start":{"line":915,"column":6},"end":{"line":915,"column":20}},{"start":{"line":915,"column":24},"end":{"line":915,"column":58}}]},"133":{"line":916,"type":"binary-expr","locations":[{"start":{"line":916,"column":13},"end":{"line":916,"column":19}},{"start":{"line":916,"column":23},"end":{"line":916,"column":50}}]},"134":{"line":918,"type":"if","locations":[{"start":{"line":918,"column":4},"end":{"line":918,"column":4}},{"start":{"line":918,"column":4},"end":{"line":918,"column":4}}]},"135":{"line":927,"type":"if","locations":[{"start":{"line":927,"column":4},"end":{"line":927,"column":4}},{"start":{"line":927,"column":4},"end":{"line":927,"column":4}}]},"136":{"line":957,"type":"if","locations":[{"start":{"line":957,"column":2},"end":{"line":957,"column":2}},{"start":{"line":957,"column":2},"end":{"line":957,"column":2}}]},"137":{"line":957,"type":"binary-expr","locations":[{"start":{"line":957,"column":6},"end":{"line":957,"column":22}},{"start":{"line":957,"column":26},"end":{"line":957,"column":55}}]},"138":{"line":961,"type":"binary-expr","locations":[{"start":{"line":961,"column":12},"end":{"line":961,"column":19}},{"start":{"line":961,"column":23},"end":{"line":961,"column":25}}]},"139":{"line":962,"type":"binary-expr","locations":[{"start":{"line":962,"column":7},"end":{"line":962,"column":9}},{"start":{"line":962,"column":13},"end":{"line":962,"column":42}}]},"140":{"line":964,"type":"if","locations":[{"start":{"line":964,"column":2},"end":{"line":964,"column":2}},{"start":{"line":964,"column":2},"end":{"line":964,"column":2}}]},"141":{"line":966,"type":"if","locations":[{"start":{"line":966,"column":9},"end":{"line":966,"column":9}},{"start":{"line":966,"column":9},"end":{"line":966,"column":9}}]},"142":{"line":983,"type":"if","locations":[{"start":{"line":983,"column":2},"end":{"line":983,"column":2}},{"start":{"line":983,"column":2},"end":{"line":983,"column":2}}]},"143":{"line":1014,"type":"if","locations":[{"start":{"line":1014,"column":2},"end":{"line":1014,"column":2}},{"start":{"line":1014,"column":2},"end":{"line":1014,"column":2}}]},"144":{"line":1014,"type":"binary-expr","locations":[{"start":{"line":1014,"column":6},"end":{"line":1014,"column":22}},{"start":{"line":1014,"column":26},"end":{"line":1014,"column":55}}]},"145":{"line":1018,"type":"binary-expr","locations":[{"start":{"line":1018,"column":12},"end":{"line":1018,"column":19}},{"start":{"line":1018,"column":23},"end":{"line":1018,"column":25}}]},"146":{"line":1019,"type":"binary-expr","locations":[{"start":{"line":1019,"column":7},"end":{"line":1019,"column":9}},{"start":{"line":1019,"column":13},"end":{"line":1019,"column":42}}]},"147":{"line":1021,"type":"if","locations":[{"start":{"line":1021,"column":2},"end":{"line":1021,"column":2}},{"start":{"line":1021,"column":2},"end":{"line":1021,"column":2}}]},"148":{"line":1023,"type":"if","locations":[{"start":{"line":1023,"column":9},"end":{"line":1023,"column":9}},{"start":{"line":1023,"column":9},"end":{"line":1023,"column":9}}]},"149":{"line":1037,"type":"if","locations":[{"start":{"line":1037,"column":2},"end":{"line":1037,"column":2}},{"start":{"line":1037,"column":2},"end":{"line":1037,"column":2}}]},"150":{"line":1063,"type":"if","locations":[{"start":{"line":1063,"column":2},"end":{"line":1063,"column":2}},{"start":{"line":1063,"column":2},"end":{"line":1063,"column":2}}]},"151":{"line":1063,"type":"binary-expr","locations":[{"start":{"line":1063,"column":6},"end":{"line":1063,"column":22}},{"start":{"line":1063,"column":26},"end":{"line":1063,"column":55}}]},"152":{"line":1067,"type":"binary-expr","locations":[{"start":{"line":1067,"column":12},"end":{"line":1067,"column":19}},{"start":{"line":1067,"column":23},"end":{"line":1067,"column":25}}]},"153":{"line":1068,"type":"binary-expr","locations":[{"start":{"line":1068,"column":7},"end":{"line":1068,"column":9}},{"start":{"line":1068,"column":13},"end":{"line":1068,"column":42}}]},"154":{"line":1070,"type":"if","locations":[{"start":{"line":1070,"column":2},"end":{"line":1070,"column":2}},{"start":{"line":1070,"column":2},"end":{"line":1070,"column":2}}]},"155":{"line":1072,"type":"if","locations":[{"start":{"line":1072,"column":9},"end":{"line":1072,"column":9}},{"start":{"line":1072,"column":9},"end":{"line":1072,"column":9}}]},"156":{"line":1087,"type":"if","locations":[{"start":{"line":1087,"column":2},"end":{"line":1087,"column":2}},{"start":{"line":1087,"column":2},"end":{"line":1087,"column":2}}]},"157":{"line":1119,"type":"if","locations":[{"start":{"line":1119,"column":2},"end":{"line":1119,"column":2}},{"start":{"line":1119,"column":2},"end":{"line":1119,"column":2}}]},"158":{"line":1119,"type":"binary-expr","locations":[{"start":{"line":1119,"column":6},"end":{"line":1119,"column":22}},{"start":{"line":1119,"column":26},"end":{"line":1119,"column":55}}]},"159":{"line":1123,"type":"binary-expr","locations":[{"start":{"line":1123,"column":12},"end":{"line":1123,"column":19}},{"start":{"line":1123,"column":23},"end":{"line":1123,"column":25}}]},"160":{"line":1124,"type":"binary-expr","locations":[{"start":{"line":1124,"column":7},"end":{"line":1124,"column":9}},{"start":{"line":1124,"column":13},"end":{"line":1124,"column":42}}]},"161":{"line":1126,"type":"if","locations":[{"start":{"line":1126,"column":2},"end":{"line":1126,"column":2}},{"start":{"line":1126,"column":2},"end":{"line":1126,"column":2}}]},"162":{"line":1128,"type":"if","locations":[{"start":{"line":1128,"column":9},"end":{"line":1128,"column":9}},{"start":{"line":1128,"column":9},"end":{"line":1128,"column":9}}]},"163":{"line":1143,"type":"if","locations":[{"start":{"line":1143,"column":2},"end":{"line":1143,"column":2}},{"start":{"line":1143,"column":2},"end":{"line":1143,"column":2}}]},"164":{"line":1175,"type":"if","locations":[{"start":{"line":1175,"column":2},"end":{"line":1175,"column":2}},{"start":{"line":1175,"column":2},"end":{"line":1175,"column":2}}]},"165":{"line":1175,"type":"binary-expr","locations":[{"start":{"line":1175,"column":6},"end":{"line":1175,"column":22}},{"start":{"line":1175,"column":26},"end":{"line":1175,"column":55}}]},"166":{"line":1179,"type":"binary-expr","locations":[{"start":{"line":1179,"column":12},"end":{"line":1179,"column":19}},{"start":{"line":1179,"column":23},"end":{"line":1179,"column":25}}]},"167":{"line":1180,"type":"binary-expr","locations":[{"start":{"line":1180,"column":7},"end":{"line":1180,"column":9}},{"start":{"line":1180,"column":13},"end":{"line":1180,"column":42}}]},"168":{"line":1182,"type":"if","locations":[{"start":{"line":1182,"column":2},"end":{"line":1182,"column":2}},{"start":{"line":1182,"column":2},"end":{"line":1182,"column":2}}]},"169":{"line":1184,"type":"if","locations":[{"start":{"line":1184,"column":9},"end":{"line":1184,"column":9}},{"start":{"line":1184,"column":9},"end":{"line":1184,"column":9}}]},"170":{"line":1198,"type":"if","locations":[{"start":{"line":1198,"column":2},"end":{"line":1198,"column":2}},{"start":{"line":1198,"column":2},"end":{"line":1198,"column":2}}]},"171":{"line":1205,"type":"if","locations":[{"start":{"line":1205,"column":2},"end":{"line":1205,"column":2}},{"start":{"line":1205,"column":2},"end":{"line":1205,"column":2}}]},"172":{"line":1208,"type":"cond-expr","locations":[{"start":{"line":1208,"column":59},"end":{"line":1208,"column":85}},{"start":{"line":1208,"column":88},"end":{"line":1208,"column":90}}]},"173":{"line":1212,"type":"if","locations":[{"start":{"line":1212,"column":2},"end":{"line":1212,"column":2}},{"start":{"line":1212,"column":2},"end":{"line":1212,"column":2}}]},"174":{"line":1216,"type":"cond-expr","locations":[{"start":{"line":1216,"column":25},"end":{"line":1216,"column":47}},{"start":{"line":1216,"column":50},"end":{"line":1216,"column":70}}]},"175":{"line":1283,"type":"binary-expr","locations":[{"start":{"line":1283,"column":12},"end":{"line":1283,"column":19}},{"start":{"line":1283,"column":23},"end":{"line":1283,"column":25}}]},"176":{"line":1285,"type":"if","locations":[{"start":{"line":1285,"column":2},"end":{"line":1285,"column":2}},{"start":{"line":1285,"column":2},"end":{"line":1285,"column":2}}]},"177":{"line":1285,"type":"binary-expr","locations":[{"start":{"line":1285,"column":6},"end":{"line":1285,"column":9}},{"start":{"line":1285,"column":13},"end":{"line":1285,"column":42}}]},"178":{"line":1292,"type":"binary-expr","locations":[{"start":{"line":1292,"column":7},"end":{"line":1292,"column":9}},{"start":{"line":1292,"column":13},"end":{"line":1292,"column":42}}]},"179":{"line":1295,"type":"if","locations":[{"start":{"line":1295,"column":4},"end":{"line":1295,"column":4}},{"start":{"line":1295,"column":4},"end":{"line":1295,"column":4}}]},"180":{"line":1295,"type":"binary-expr","locations":[{"start":{"line":1295,"column":8},"end":{"line":1295,"column":11}},{"start":{"line":1295,"column":15},"end":{"line":1295,"column":23}}]},"181":{"line":1296,"type":"binary-expr","locations":[{"start":{"line":1296,"column":6},"end":{"line":1296,"column":8}},{"start":{"line":1296,"column":12},"end":{"line":1296,"column":28}}]},"182":{"line":1300,"type":"binary-expr","locations":[{"start":{"line":1300,"column":6},"end":{"line":1300,"column":8}},{"start":{"line":1300,"column":12},"end":{"line":1300,"column":32}}]},"183":{"line":1319,"type":"binary-expr","locations":[{"start":{"line":1319,"column":12},"end":{"line":1319,"column":19}},{"start":{"line":1319,"column":23},"end":{"line":1319,"column":25}}]},"184":{"line":1321,"type":"if","locations":[{"start":{"line":1321,"column":2},"end":{"line":1321,"column":2}},{"start":{"line":1321,"column":2},"end":{"line":1321,"column":2}}]},"185":{"line":1321,"type":"binary-expr","locations":[{"start":{"line":1321,"column":6},"end":{"line":1321,"column":9}},{"start":{"line":1321,"column":13},"end":{"line":1321,"column":42}}]},"186":{"line":1326,"type":"binary-expr","locations":[{"start":{"line":1326,"column":7},"end":{"line":1326,"column":9}},{"start":{"line":1326,"column":13},"end":{"line":1326,"column":42}}]},"187":{"line":1329,"type":"binary-expr","locations":[{"start":{"line":1329,"column":15},"end":{"line":1329,"column":34}},{"start":{"line":1329,"column":38},"end":{"line":1329,"column":47}}]},"188":{"line":1332,"type":"if","locations":[{"start":{"line":1332,"column":2},"end":{"line":1332,"column":2}},{"start":{"line":1332,"column":2},"end":{"line":1332,"column":2}}]},"189":{"line":1337,"type":"if","locations":[{"start":{"line":1337,"column":9},"end":{"line":1337,"column":9}},{"start":{"line":1337,"column":9},"end":{"line":1337,"column":9}}]},"190":{"line":1343,"type":"if","locations":[{"start":{"line":1343,"column":6},"end":{"line":1343,"column":6}},{"start":{"line":1343,"column":6},"end":{"line":1343,"column":6}}]},"191":{"line":1343,"type":"binary-expr","locations":[{"start":{"line":1343,"column":10},"end":{"line":1343,"column":26}},{"start":{"line":1343,"column":30},"end":{"line":1343,"column":46}}]},"192":{"line":1345,"type":"if","locations":[{"start":{"line":1345,"column":13},"end":{"line":1345,"column":13}},{"start":{"line":1345,"column":13},"end":{"line":1345,"column":13}}]},"193":{"line":1353,"type":"if","locations":[{"start":{"line":1353,"column":2},"end":{"line":1353,"column":2}},{"start":{"line":1353,"column":2},"end":{"line":1353,"column":2}}]},"194":{"line":1363,"type":"binary-expr","locations":[{"start":{"line":1363,"column":27},"end":{"line":1363,"column":47}},{"start":{"line":1363,"column":51},"end":{"line":1363,"column":68}}]},"195":{"line":1364,"type":"if","locations":[{"start":{"line":1364,"column":2},"end":{"line":1364,"column":2}},{"start":{"line":1364,"column":2},"end":{"line":1364,"column":2}}]},"196":{"line":1369,"type":"if","locations":[{"start":{"line":1369,"column":4},"end":{"line":1369,"column":4}},{"start":{"line":1369,"column":4},"end":{"line":1369,"column":4}}]},"197":{"line":1375,"type":"if","locations":[{"start":{"line":1375,"column":4},"end":{"line":1375,"column":4}},{"start":{"line":1375,"column":4},"end":{"line":1375,"column":4}}]},"198":{"line":1375,"type":"binary-expr","locations":[{"start":{"line":1375,"column":8},"end":{"line":1375,"column":16}},{"start":{"line":1375,"column":20},"end":{"line":1375,"column":40}}]},"199":{"line":1381,"type":"binary-expr","locations":[{"start":{"line":1381,"column":22},"end":{"line":1381,"column":32}},{"start":{"line":1381,"column":36},"end":{"line":1381,"column":38}}]},"200":{"line":1387,"type":"if","locations":[{"start":{"line":1387,"column":4},"end":{"line":1387,"column":4}},{"start":{"line":1387,"column":4},"end":{"line":1387,"column":4}}]},"201":{"line":1408,"type":"binary-expr","locations":[{"start":{"line":1408,"column":19},"end":{"line":1408,"column":40}},{"start":{"line":1408,"column":44},"end":{"line":1408,"column":66}},{"start":{"line":1409,"column":10},"end":{"line":1409,"column":29}},{"start":{"line":1409,"column":33},"end":{"line":1409,"column":56}}]},"202":{"line":1415,"type":"if","locations":[{"start":{"line":1415,"column":6},"end":{"line":1415,"column":6}},{"start":{"line":1415,"column":6},"end":{"line":1415,"column":6}}]},"203":{"line":1427,"type":"if","locations":[{"start":{"line":1427,"column":6},"end":{"line":1427,"column":6}},{"start":{"line":1427,"column":6},"end":{"line":1427,"column":6}}]},"204":{"line":1435,"type":"binary-expr","locations":[{"start":{"line":1435,"column":22},"end":{"line":1435,"column":37}},{"start":{"line":1435,"column":41},"end":{"line":1435,"column":43}}]},"205":{"line":1437,"type":"if","locations":[{"start":{"line":1437,"column":4},"end":{"line":1437,"column":4}},{"start":{"line":1437,"column":4},"end":{"line":1437,"column":4}}]},"206":{"line":1438,"type":"if","locations":[{"start":{"line":1438,"column":6},"end":{"line":1438,"column":6}},{"start":{"line":1438,"column":6},"end":{"line":1438,"column":6}}]},"207":{"line":1445,"type":"if","locations":[{"start":{"line":1445,"column":4},"end":{"line":1445,"column":4}},{"start":{"line":1445,"column":4},"end":{"line":1445,"column":4}}]},"208":{"line":1448,"type":"binary-expr","locations":[{"start":{"line":1448,"column":24},"end":{"line":1448,"column":34}},{"start":{"line":1448,"column":38},"end":{"line":1448,"column":40}}]},"209":{"line":1456,"type":"if","locations":[{"start":{"line":1456,"column":8},"end":{"line":1456,"column":8}},{"start":{"line":1456,"column":8},"end":{"line":1456,"column":8}}]},"210":{"line":1463,"type":"if","locations":[{"start":{"line":1463,"column":6},"end":{"line":1463,"column":6}},{"start":{"line":1463,"column":6},"end":{"line":1463,"column":6}}]},"211":{"line":1469,"type":"binary-expr","locations":[{"start":{"line":1469,"column":41},"end":{"line":1469,"column":50}},{"start":{"line":1469,"column":54},"end":{"line":1469,"column":68}}]},"212":{"line":1477,"type":"if","locations":[{"start":{"line":1477,"column":8},"end":{"line":1477,"column":8}},{"start":{"line":1477,"column":8},"end":{"line":1477,"column":8}}]},"213":{"line":1477,"type":"binary-expr","locations":[{"start":{"line":1477,"column":12},"end":{"line":1477,"column":48}},{"start":{"line":1477,"column":52},"end":{"line":1477,"column":84}}]},"214":{"line":1483,"type":"if","locations":[{"start":{"line":1483,"column":4},"end":{"line":1483,"column":4}},{"start":{"line":1483,"column":4},"end":{"line":1483,"column":4}}]},"215":{"line":1488,"type":"if","locations":[{"start":{"line":1488,"column":8},"end":{"line":1488,"column":8}},{"start":{"line":1488,"column":8},"end":{"line":1488,"column":8}}]},"216":{"line":1500,"type":"binary-expr","locations":[{"start":{"line":1500,"column":21},"end":{"line":1500,"column":28}},{"start":{"line":1500,"column":32},"end":{"line":1500,"column":42}}]},"217":{"line":1520,"type":"binary-expr","locations":[{"start":{"line":1520,"column":15},"end":{"line":1520,"column":24}},{"start":{"line":1520,"column":28},"end":{"line":1520,"column":47}}]},"218":{"line":1523,"type":"if","locations":[{"start":{"line":1523,"column":2},"end":{"line":1523,"column":2}},{"start":{"line":1523,"column":2},"end":{"line":1523,"column":2}}]},"219":{"line":1523,"type":"binary-expr","locations":[{"start":{"line":1523,"column":6},"end":{"line":1523,"column":14}},{"start":{"line":1523,"column":18},"end":{"line":1523,"column":38}}]},"220":{"line":1527,"type":"binary-expr","locations":[{"start":{"line":1527,"column":19},"end":{"line":1527,"column":37}},{"start":{"line":1527,"column":41},"end":{"line":1533,"column":3}}]},"221":{"line":1528,"type":"if","locations":[{"start":{"line":1528,"column":4},"end":{"line":1528,"column":4}},{"start":{"line":1528,"column":4},"end":{"line":1528,"column":4}}]},"222":{"line":1528,"type":"binary-expr","locations":[{"start":{"line":1528,"column":8},"end":{"line":1528,"column":24}},{"start":{"line":1528,"column":28},"end":{"line":1528,"column":44}}]},"223":{"line":1542,"type":"if","locations":[{"start":{"line":1542,"column":2},"end":{"line":1542,"column":2}},{"start":{"line":1542,"column":2},"end":{"line":1542,"column":2}}]},"224":{"line":1555,"type":"binary-expr","locations":[{"start":{"line":1555,"column":12},"end":{"line":1555,"column":30}},{"start":{"line":1555,"column":34},"end":{"line":1555,"column":50}}]},"225":{"line":1571,"type":"if","locations":[{"start":{"line":1571,"column":4},"end":{"line":1571,"column":4}},{"start":{"line":1571,"column":4},"end":{"line":1571,"column":4}}]},"226":{"line":1585,"type":"binary-expr","locations":[{"start":{"line":1585,"column":20},"end":{"line":1585,"column":35}},{"start":{"line":1585,"column":39},"end":{"line":1585,"column":41}}]},"227":{"line":1587,"type":"if","locations":[{"start":{"line":1587,"column":2},"end":{"line":1587,"column":2}},{"start":{"line":1587,"column":2},"end":{"line":1587,"column":2}}]},"228":{"line":1588,"type":"if","locations":[{"start":{"line":1588,"column":4},"end":{"line":1588,"column":4}},{"start":{"line":1588,"column":4},"end":{"line":1588,"column":4}}]},"229":{"line":1595,"type":"binary-expr","locations":[{"start":{"line":1595,"column":27},"end":{"line":1595,"column":47}},{"start":{"line":1595,"column":51},"end":{"line":1595,"column":68}}]},"230":{"line":1596,"type":"if","locations":[{"start":{"line":1596,"column":2},"end":{"line":1596,"column":2}},{"start":{"line":1596,"column":2},"end":{"line":1596,"column":2}}]},"231":{"line":1607,"type":"if","locations":[{"start":{"line":1607,"column":6},"end":{"line":1607,"column":6}},{"start":{"line":1607,"column":6},"end":{"line":1607,"column":6}}]},"232":{"line":1614,"type":"if","locations":[{"start":{"line":1614,"column":4},"end":{"line":1614,"column":4}},{"start":{"line":1614,"column":4},"end":{"line":1614,"column":4}}]},"233":{"line":1628,"type":"if","locations":[{"start":{"line":1628,"column":6},"end":{"line":1628,"column":6}},{"start":{"line":1628,"column":6},"end":{"line":1628,"column":6}}]},"234":{"line":1628,"type":"binary-expr","locations":[{"start":{"line":1628,"column":10},"end":{"line":1628,"column":46}},{"start":{"line":1628,"column":50},"end":{"line":1628,"column":82}}]},"235":{"line":1634,"type":"if","locations":[{"start":{"line":1634,"column":2},"end":{"line":1634,"column":2}},{"start":{"line":1634,"column":2},"end":{"line":1634,"column":2}}]},"236":{"line":1639,"type":"if","locations":[{"start":{"line":1639,"column":6},"end":{"line":1639,"column":6}},{"start":{"line":1639,"column":6},"end":{"line":1639,"column":6}}]},"237":{"line":1666,"type":"binary-expr","locations":[{"start":{"line":1666,"column":12},"end":{"line":1666,"column":19}},{"start":{"line":1666,"column":23},"end":{"line":1666,"column":25}}]},"238":{"line":1668,"type":"if","locations":[{"start":{"line":1668,"column":4},"end":{"line":1668,"column":4}},{"start":{"line":1668,"column":4},"end":{"line":1668,"column":4}}]},"239":{"line":1669,"type":"binary-expr","locations":[{"start":{"line":1669,"column":6},"end":{"line":1669,"column":8}},{"start":{"line":1669,"column":12},"end":{"line":1669,"column":28}}]},"240":{"line":1676,"type":"if","locations":[{"start":{"line":1676,"column":6},"end":{"line":1676,"column":6}},{"start":{"line":1676,"column":6},"end":{"line":1676,"column":6}}]},"241":{"line":1677,"type":"binary-expr","locations":[{"start":{"line":1677,"column":25},"end":{"line":1677,"column":39}},{"start":{"line":1677,"column":43},"end":{"line":1677,"column":45}}]},"242":{"line":1686,"type":"binary-expr","locations":[{"start":{"line":1686,"column":4},"end":{"line":1686,"column":6}},{"start":{"line":1686,"column":10},"end":{"line":1686,"column":25}}]},"243":{"line":1704,"type":"binary-expr","locations":[{"start":{"line":1704,"column":12},"end":{"line":1704,"column":19}},{"start":{"line":1704,"column":23},"end":{"line":1704,"column":25}}]},"244":{"line":1710,"type":"if","locations":[{"start":{"line":1710,"column":4},"end":{"line":1710,"column":4}},{"start":{"line":1710,"column":4},"end":{"line":1710,"column":4}}]},"245":{"line":1711,"type":"binary-expr","locations":[{"start":{"line":1711,"column":23},"end":{"line":1711,"column":37}},{"start":{"line":1711,"column":41},"end":{"line":1711,"column":43}}]},"246":{"line":1745,"type":"if","locations":[{"start":{"line":1745,"column":2},"end":{"line":1745,"column":2}},{"start":{"line":1745,"column":2},"end":{"line":1745,"column":2}}]},"247":{"line":1748,"type":"if","locations":[{"start":{"line":1748,"column":4},"end":{"line":1748,"column":4}},{"start":{"line":1748,"column":4},"end":{"line":1748,"column":4}}]},"248":{"line":1748,"type":"binary-expr","locations":[{"start":{"line":1748,"column":9},"end":{"line":1748,"column":12}},{"start":{"line":1748,"column":18},"end":{"line":1748,"column":46}}]},"249":{"line":1752,"type":"if","locations":[{"start":{"line":1752,"column":4},"end":{"line":1752,"column":4}},{"start":{"line":1752,"column":4},"end":{"line":1752,"column":4}}]},"250":{"line":1775,"type":"if","locations":[{"start":{"line":1775,"column":2},"end":{"line":1775,"column":2}},{"start":{"line":1775,"column":2},"end":{"line":1775,"column":2}}]},"251":{"line":1778,"type":"if","locations":[{"start":{"line":1778,"column":2},"end":{"line":1778,"column":2}},{"start":{"line":1778,"column":2},"end":{"line":1778,"column":2}}]},"252":{"line":1781,"type":"if","locations":[{"start":{"line":1781,"column":2},"end":{"line":1781,"column":2}},{"start":{"line":1781,"column":2},"end":{"line":1781,"column":2}}]},"253":{"line":1838,"type":"if","locations":[{"start":{"line":1838,"column":2},"end":{"line":1838,"column":2}},{"start":{"line":1838,"column":2},"end":{"line":1838,"column":2}}]},"254":{"line":1860,"type":"binary-expr","locations":[{"start":{"line":1860,"column":16},"end":{"line":1860,"column":19}},{"start":{"line":1860,"column":23},"end":{"line":1860,"column":32}}]},"255":{"line":1861,"type":"binary-expr","locations":[{"start":{"line":1861,"column":9},"end":{"line":1861,"column":16}},{"start":{"line":1861,"column":20},"end":{"line":1861,"column":30}},{"start":{"line":1861,"column":34},"end":{"line":1861,"column":53}}]},"256":{"line":1874,"type":"binary-expr","locations":[{"start":{"line":1874,"column":11},"end":{"line":1874,"column":17}},{"start":{"line":1874,"column":21},"end":{"line":1874,"column":33}},{"start":{"line":1874,"column":37},"end":{"line":1874,"column":58}}]},"257":{"line":1875,"type":"if","locations":[{"start":{"line":1875,"column":2},"end":{"line":1875,"column":2}},{"start":{"line":1875,"column":2},"end":{"line":1875,"column":2}}]},"258":{"line":1879,"type":"if","locations":[{"start":{"line":1879,"column":2},"end":{"line":1879,"column":2}},{"start":{"line":1879,"column":2},"end":{"line":1879,"column":2}}]},"259":{"line":1880,"type":"if","locations":[{"start":{"line":1880,"column":4},"end":{"line":1880,"column":4}},{"start":{"line":1880,"column":4},"end":{"line":1880,"column":4}}]},"260":{"line":1889,"type":"if","locations":[{"start":{"line":1889,"column":2},"end":{"line":1889,"column":2}},{"start":{"line":1889,"column":2},"end":{"line":1889,"column":2}}]},"261":{"line":1889,"type":"binary-expr","locations":[{"start":{"line":1889,"column":6},"end":{"line":1889,"column":17}},{"start":{"line":1889,"column":22},"end":{"line":1889,"column":42}},{"start":{"line":1889,"column":46},"end":{"line":1889,"column":68}}]},"262":{"line":1891,"type":"if","locations":[{"start":{"line":1891,"column":4},"end":{"line":1891,"column":4}},{"start":{"line":1891,"column":4},"end":{"line":1891,"column":4}}]},"263":{"line":1894,"type":"if","locations":[{"start":{"line":1894,"column":4},"end":{"line":1894,"column":4}},{"start":{"line":1894,"column":4},"end":{"line":1894,"column":4}}]},"264":{"line":1898,"type":"if","locations":[{"start":{"line":1898,"column":2},"end":{"line":1898,"column":2}},{"start":{"line":1898,"column":2},"end":{"line":1898,"column":2}}]},"265":{"line":1900,"type":"if","locations":[{"start":{"line":1900,"column":6},"end":{"line":1900,"column":6}},{"start":{"line":1900,"column":6},"end":{"line":1900,"column":6}}]},"266":{"line":1901,"type":"binary-expr","locations":[{"start":{"line":1901,"column":19},"end":{"line":1901,"column":26}},{"start":{"line":1901,"column":30},"end":{"line":1901,"column":36}}]},"267":{"line":1905,"type":"switch","locations":[{"start":{"line":1906,"column":6},"end":{"line":1908,"column":14}},{"start":{"line":1909,"column":6},"end":{"line":1909,"column":14}},{"start":{"line":1910,"column":6},"end":{"line":1912,"column":14}}]},"268":{"line":1926,"type":"if","locations":[{"start":{"line":1926,"column":2},"end":{"line":1926,"column":2}},{"start":{"line":1926,"column":2},"end":{"line":1926,"column":2}}]},"269":{"line":1926,"type":"binary-expr","locations":[{"start":{"line":1926,"column":6},"end":{"line":1926,"column":20}},{"start":{"line":1926,"column":25},"end":{"line":1926,"column":72}}]},"270":{"line":1929,"type":"binary-expr","locations":[{"start":{"line":1929,"column":6},"end":{"line":1929,"column":8}},{"start":{"line":1929,"column":12},"end":{"line":1929,"column":27}}]},"271":{"line":1934,"type":"binary-expr","locations":[{"start":{"line":1934,"column":6},"end":{"line":1934,"column":8}},{"start":{"line":1934,"column":12},"end":{"line":1934,"column":16}}]},"272":{"line":1963,"type":"if","locations":[{"start":{"line":1963,"column":2},"end":{"line":1963,"column":2}},{"start":{"line":1963,"column":2},"end":{"line":1963,"column":2}}]},"273":{"line":1969,"type":"if","locations":[{"start":{"line":1969,"column":4},"end":{"line":1969,"column":4}},{"start":{"line":1969,"column":4},"end":{"line":1969,"column":4}}]},"274":{"line":1969,"type":"binary-expr","locations":[{"start":{"line":1969,"column":9},"end":{"line":1969,"column":34}},{"start":{"line":1969,"column":39},"end":{"line":1969,"column":59}},{"start":{"line":1969,"column":63},"end":{"line":1969,"column":90}}]},"275":{"line":2026,"type":"if","locations":[{"start":{"line":2026,"column":2},"end":{"line":2026,"column":2}},{"start":{"line":2026,"column":2},"end":{"line":2026,"column":2}}]},"276":{"line":2055,"type":"if","locations":[{"start":{"line":2055,"column":2},"end":{"line":2055,"column":2}},{"start":{"line":2055,"column":2},"end":{"line":2055,"column":2}}]},"277":{"line":2074,"type":"if","locations":[{"start":{"line":2074,"column":4},"end":{"line":2074,"column":4}},{"start":{"line":2074,"column":4},"end":{"line":2074,"column":4}}]},"278":{"line":2124,"type":"binary-expr","locations":[{"start":{"line":2124,"column":9},"end":{"line":2124,"column":23}},{"start":{"line":2124,"column":27},"end":{"line":2124,"column":52}}]},"279":{"line":2135,"type":"if","locations":[{"start":{"line":2135,"column":2},"end":{"line":2135,"column":2}},{"start":{"line":2135,"column":2},"end":{"line":2135,"column":2}}]},"280":{"line":2147,"type":"if","locations":[{"start":{"line":2147,"column":4},"end":{"line":2147,"column":4}},{"start":{"line":2147,"column":4},"end":{"line":2147,"column":4}}]},"281":{"line":2156,"type":"if","locations":[{"start":{"line":2156,"column":6},"end":{"line":2156,"column":6}},{"start":{"line":2156,"column":6},"end":{"line":2156,"column":6}}]},"282":{"line":2168,"type":"if","locations":[{"start":{"line":2168,"column":4},"end":{"line":2168,"column":4}},{"start":{"line":2168,"column":4},"end":{"line":2168,"column":4}}]},"283":{"line":2173,"type":"if","locations":[{"start":{"line":2173,"column":4},"end":{"line":2173,"column":4}},{"start":{"line":2173,"column":4},"end":{"line":2173,"column":4}}]},"284":{"line":2183,"type":"binary-expr","locations":[{"start":{"line":2183,"column":16},"end":{"line":2183,"column":47}},{"start":{"line":2183,"column":51},"end":{"line":2183,"column":55}}]},"285":{"line":2189,"type":"if","locations":[{"start":{"line":2189,"column":4},"end":{"line":2189,"column":4}},{"start":{"line":2189,"column":4},"end":{"line":2189,"column":4}}]},"286":{"line":2194,"type":"if","locations":[{"start":{"line":2194,"column":2},"end":{"line":2194,"column":2}},{"start":{"line":2194,"column":2},"end":{"line":2194,"column":2}}]},"287":{"line":2206,"type":"if","locations":[{"start":{"line":2206,"column":2},"end":{"line":2206,"column":2}},{"start":{"line":2206,"column":2},"end":{"line":2206,"column":2}}]},"288":{"line":2208,"type":"if","locations":[{"start":{"line":2208,"column":9},"end":{"line":2208,"column":9}},{"start":{"line":2208,"column":9},"end":{"line":2208,"column":9}}]},"289":{"line":2212,"type":"cond-expr","locations":[{"start":{"line":2212,"column":33},"end":{"line":2212,"column":37}},{"start":{"line":2212,"column":40},"end":{"line":2212,"column":71}}]}},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","// Turning on strict for this file breaks lots of test cases;","// disabling strict for this file","/* eslint-disable strict */","","/*!"," * Module dependencies"," */","var ModelBuilder = require('./model-builder.js').ModelBuilder;","var ModelDefinition = require('./model-definition.js');","var RelationDefinition = require('./relation-definition.js');","var OberserverMixin = require('./observer');","var jutil = require('./jutil');","var utils = require('./utils');","var ModelBaseClass = require('./model.js');","var DataAccessObject = require('./dao.js');","var defineScope = require('./scope.js').defineScope;","var EventEmitter = require('events').EventEmitter;","var util = require('util');","var assert = require('assert');","var async = require('async');","var traverse = require('traverse');","var g = require('strong-globalize')();","var juggler = require('..');","","if (process.env.DEBUG === 'loopback') {","  // For back-compatibility","  process.env.DEBUG = 'loopback:*';","}","var debug = require('debug')('loopback:datasource');","","/*!"," * Export public API"," */","exports.DataSource = DataSource;","","/*!"," * Helpers"," */","var slice = Array.prototype.slice;","","/**"," * LoopBack models can manipulate data via the DataSource object."," * Attaching a `DataSource` to a `Model` adds instance methods and static methods to the `Model`."," *"," * Define a data source to persist model data."," * To create a DataSource programmatically, call `createDataSource()` on the LoopBack object; for example:"," * ```js"," * var oracle = loopback.createDataSource({"," *   connector: 'oracle',"," *   host: '111.22.333.44',"," *   database: 'MYDB',"," *   username: 'username',"," *   password: 'password'"," * });"," * ```"," *"," * All classes in single dataSource share same the connector type and"," * one database connection."," *"," * For example, the following creates a DataSource, and waits for a connection callback."," *"," * ```"," * var dataSource = new DataSource('mysql', { database: 'myapp_test' });"," * dataSource.define(...);"," * dataSource.on('connected', function () {"," *     // work with database"," * });"," * ```"," * @class DataSource"," * @param {String} [name] Optional name for datasource."," * @options {Object} settings Database-specific settings to establish connection (settings depend on specific connector)."," * The table below lists a typical set for a relational database."," * @property {String} connector Database connector to use.  For any supported connector, can be any of:"," *"," * - The connector module from `require(connectorName)`."," * - The full name of the connector module, such as 'loopback-connector-oracle'."," * - The short name of the connector module, such as 'oracle'."," * - A local module under `./connectors/` folder."," * @property {String} host Database server host name."," * @property {String} port Database server port number."," * @property {String} username Database user name."," * @property {String} password Database password."," * @property {String} database Name of the database to use."," * @property {Boolean} debug Display debugging information. Default is false."," */","function DataSource(name, settings, modelBuilder) {","  if (!(this instanceof DataSource)) {","    return new DataSource(name, settings);","  }","","  // Check if the settings object is passed as the first argument","  if (typeof name === 'object' && settings === undefined) {","    settings = name;","    name = undefined;","  }","","  // Check if the first argument is a URL","  if (typeof name === 'string' && name.indexOf('://') !== -1) {","    name = utils.parseSettings(name);","  }","","  // Check if the settings is in the form of URL string","  if (typeof settings === 'string' && settings.indexOf('://') !== -1) {","    settings = utils.parseSettings(settings);","  }","","  this.modelBuilder = modelBuilder || new ModelBuilder();","  this.models = this.modelBuilder.models;","  this.definitions = this.modelBuilder.definitions;","  this.juggler = juggler;","","  // operation metadata","  // Initialize it before calling setup as the connector might register operations","  this._operations = {};","","  this.setup(name, settings);","","  this._setupConnector();","","  // connector","  var connector = this.connector;","","  // DataAccessObject - connector defined or supply the default","  var dao = (connector && connector.DataAccessObject) || this.constructor.DataAccessObject;","  this.DataAccessObject = function() {","  };","","  // define DataAccessObject methods","  Object.keys(dao).forEach(function(name) {","    var fn = dao[name];","    this.DataAccessObject[name] = fn;","","    if (typeof fn === 'function') {","      this.defineOperation(name, {","        accepts: fn.accepts,","        'returns': fn.returns,","        http: fn.http,","        remoteEnabled: fn.shared ? true : false,","        scope: this.DataAccessObject,","        fnName: name,","      });","    }","  }.bind(this));","","  // define DataAccessObject.prototype methods","  Object.keys(dao.prototype).forEach(function(name) {","    var fn = dao.prototype[name];","    this.DataAccessObject.prototype[name] = fn;","    if (typeof fn === 'function') {","      this.defineOperation(name, {","        prototype: true,","        accepts: fn.accepts,","        'returns': fn.returns,","        http: fn.http,","        remoteEnabled: fn.shared ? true : false,","        scope: this.DataAccessObject.prototype,","        fnName: name,","      });","    }","  }.bind(this));","}","","util.inherits(DataSource, EventEmitter);","","// allow child classes to supply a data access object","DataSource.DataAccessObject = DataAccessObject;","","/**"," * Set up the connector instance for backward compatibility with JugglingDB schema/adapter"," * @private"," */","DataSource.prototype._setupConnector = function() {","  this.connector = this.connector || this.adapter; // The legacy JugglingDB adapter will set up `adapter` property","  this.adapter = this.connector; // Keep the adapter as an alias to connector","  if (this.connector) {","    if (!this.connector.dataSource) {","      // Set up the dataSource if the connector doesn't do so","      this.connector.dataSource = this;","    }","    var dataSource = this;","    this.connector.log = function(query, start) {","      dataSource.log(query, start);","    };","","    this.connector.logger = function(query) {","      var t1 = Date.now();","      var log = this.log;","      return function(q) {","        log(q || query, t1);","      };","    };","    // Configure the connector instance to mix in observer functions","    jutil.mixin(this.connector, OberserverMixin);","  }","};","","// List possible connector module names","function connectorModuleNames(name) {","  var names = []; // Check the name as is","  if (!name.match(/^\\//)) {","    names.push('./connectors/' + name); // Check built-in connectors","    if (name.indexOf('loopback-connector-') !== 0) {","      names.push('loopback-connector-' + name); // Try loopback-connector-<name>","    }","  }","  // Only try the short name if the connector is not from StrongLoop","  if (['mongodb', 'oracle', 'mysql', 'postgresql', 'mssql', 'rest', 'soap', 'db2', 'cloudant']","      .indexOf(name) === -1) {","    names.push(name);","  }","  return names;","}","","// testable with DI","function tryModules(names, loader) {","  var mod;","  loader = loader || require;","  for (var m = 0; m < names.length; m++) {","    try {","      mod = loader(names[m]);","    } catch (e) {","      var notFound = e.code === 'MODULE_NOT_FOUND' &&","        e.message && e.message.indexOf(names[m]) > 0;","","      if (notFound) {","        debug('Module %s not found, will try another candidate.', names[m]);","        continue;","      }","","      debug('Cannot load connector %s: %s', names[m], e.stack || e);","      throw e;","    }","    if (mod) {","      break;","    }","  }","  return mod;","}","","/*!"," * Resolve a connector by name"," * @param name The connector name"," * @returns {*}"," * @private"," */","DataSource._resolveConnector = function(name, loader) {","  var names = connectorModuleNames(name);","  var connector = tryModules(names, loader);","  var error = null;","  if (!connector) {","    error = g.f('\\nWARNING: {{LoopBack}} connector \"%s\" is not installed ' +","      'as any of the following modules:\\n\\n %s\\n\\nTo fix, run:\\n\\n    {{npm install %s --save}}\\n',","      name, names.join('\\n'), names[names.length - 1]);","  }","  return {","    connector: connector,","    error: error,","  };","};","","/**"," * Connect to the data source"," * @param callback"," */","DataSource.prototype.connect = function(callback) {","  callback = callback || utils.createPromiseCallback();","  var self = this;","  if (this.connected) {","    // The data source is already connected, return immediately","    process.nextTick(callback);","    return callback.promise;","  }","  if (typeof this.connector.connect !== 'function') {","    // Connector doesn't have the connect function","    // Assume no connect is needed","    self.connected = true;","    self.connecting = false;","    process.nextTick(function() {","      self.emit('connected');","      callback();","    });","    return callback.promise;","  }","","  // Queue the callback","  this.pendingConnectCallbacks = this.pendingConnectCallbacks || [];","  this.pendingConnectCallbacks.push(callback);","","  // The connect is already in progress","  if (this.connecting) return callback.promise;","  // Set connecting flag to be true","  this.connecting = true;","  this.connector.connect(function(err, result) {","    self.connecting = false;","    if (!err) self.connected = true;","    var cbs = self.pendingConnectCallbacks;","    self.pendingConnectCallbacks = [];","    if (!err) {","      self.emit('connected');","    } else {","      self.emit('error', err);","    }","    // Invoke all pending callbacks","    async.each(cbs, function(cb, done) {","      try {","        cb(err);","      } catch (e) {","        // Ignore error to make sure all callbacks are invoked","        debug('Uncaught error raised by connect callback function: ', e);","      } finally {","        done();","      }","    }, function(err) {","      if (err) throw err; // It should not happen","    });","  });","  return callback.promise;","};","","/**"," * Set up the data source"," * @param {String} name The name"," * @param {Object} settings The settings"," * @returns {*}"," * @private"," */","DataSource.prototype.setup = function(name, settings) {","  var dataSource = this;","  var connector;","","  // support single settings object","  if (name && typeof name === 'object' && !settings) {","    settings = name;","    name = undefined;","  }","","  if (typeof settings === 'object') {","    if (settings.initialize) {","      connector = settings;","    } else if (settings.connector) {","      connector = settings.connector;","    } else if (settings.adapter) {","      connector = settings.adapter;","    }","  }","","  // just save everything we get","  this.settings = settings || {};","","  this.settings.debug = this.settings.debug || debug.enabled;","","  if (this.settings.debug) {","    debug('Settings: %j', this.settings);","  }","","  // Disconnected by default","  this.connected = false;","  this.connecting = false;","","  if (typeof connector === 'string') {","    name = connector;","    connector = undefined;","  }","  name = name || (connector && connector.name);","  this.name = name;","","  if (name && !connector) {","    if (typeof name === 'object') {","      // The first argument might be the connector itself","      connector = name;","      this.name = connector.name;","    } else {","      // The connector has not been resolved","      var result = DataSource._resolveConnector(name);","      connector = result.connector;","      if (!connector) {","        console.error(result.error);","        this.emit('error', new Error(result.error));","        return;","      }","    }","  }","","  if (connector) {","    var postInit = function postInit(err, result) {","      this._setupConnector();","      // we have an connector now?","      if (!this.connector) {","        throw new Error(g.f('Connector is not defined correctly: ' +","          'it should create `{{connector}}` member of dataSource'));","      }","      this.connected = !err; // Connected now","      if (this.connected) {","        this.emit('connected');","      } else {","        // The connection fails, let's report it and hope it will be recovered in the next call","        g.error('Connection fails: %s\\nIt will be retried for the next request.', err);","        this.emit('error', err);","        this.connecting = false;","      }","    }.bind(this);","","    try {","      if ('function' === typeof connector.initialize) {","        // Call the async initialize method","        connector.initialize(this, postInit);","      } else if ('function' === typeof connector) {","        // Use the connector constructor directly","        this.connector = new connector(this.settings);","        postInit();","      }","    } catch (err) {","      if (err.message) {","        err.message = 'Cannot initialize connector ' +","          JSON.stringify(connector.name || name)  + ': ' +","          err.message;","      }","      throw err;","    }","  }","};","","function isModelClass(cls) {","  if (!cls) {","    return false;","  }","  return cls.prototype instanceof ModelBaseClass;","}","","DataSource.relationTypes = Object.keys(RelationDefinition.RelationTypes);","","function isModelDataSourceAttached(model) {","  return model && (!model.settings.unresolved) && (model.dataSource instanceof DataSource);","}","","/*!"," * Define scopes for the model class from the scopes object"," * @param modelClass"," * @param scopes"," */","DataSource.prototype.defineScopes = function(modelClass, scopes) {","  if (scopes) {","    for (var s in scopes) {","      defineScope(modelClass, modelClass, s, scopes[s], {}, scopes[s].options);","    }","  }","};","","/*!"," * Define relations for the model class from the relations object"," * @param modelClass"," * @param relations"," */","DataSource.prototype.defineRelations = function(modelClass, relations) {","  var self = this;","","  // Create a function for the closure in the loop","  var createListener = function(name, relation, targetModel, throughModel) {","    if (!isModelDataSourceAttached(targetModel)) {","      targetModel.once('dataAccessConfigured', function(model) {","        // Check if the through model doesn't exist or resolved","        if (!throughModel || isModelDataSourceAttached(throughModel)) {","          // The target model is resolved","          var params = traverse(relation).clone();","          params.as = name;","          params.model = model;","          if (throughModel) {","            params.through = throughModel;","          }","          modelClass[relation.type].call(modelClass, name, params);","        }","      });","    }","","    if (throughModel && !isModelDataSourceAttached(throughModel)) {","      // Set up a listener to the through model","      throughModel.once('dataAccessConfigured', function(model) {","        if (isModelDataSourceAttached(targetModel)) {","          // The target model is resolved","          var params = traverse(relation).clone();","          params.as = name;","          params.model = targetModel;","          params.through = model;","          modelClass[relation.type].call(modelClass, name, params);","        }","      });","    }","  };","","  // Set up the relations","  if (relations) {","    Object.keys(relations).forEach(function(rn) {","      var r = relations[rn];","      assert(DataSource.relationTypes.indexOf(r.type) !== -1, 'Invalid relation type: ' + r.type);","      assert(isValidRelationName(rn), 'Invalid relation name: ' + rn);","","      var targetModel, polymorphicName;","","      if (r.polymorphic && r.type !== 'belongsTo' && !r.model) {","        throw new Error(g.f('No model specified for {{polymorphic}} %s: %s', r.type, rn));","      }","","      if (r.polymorphic) {","        polymorphicName = typeof r.model === 'string' ? r.model : rn;","        if (typeof r.polymorphic === 'string') {","          polymorphicName = r.polymorphic;","        } else if (typeof r.polymorphic === 'object' && typeof r.polymorphic.as === 'string') {","          polymorphicName = r.polymorphic.as;","        }","      }","","      if (r.model) {","        targetModel = isModelClass(r.model) ? r.model : self.getModel(r.model, true);","      }","","      var throughModel = null;","      if (r.through) {","        throughModel = isModelClass(r.through) ? r.through : self.getModel(r.through, true);","      }","","      if ((targetModel && !isModelDataSourceAttached(targetModel)) ||","          (throughModel && !isModelDataSourceAttached(throughModel))) {","        // Create a listener to defer the relation set up","        createListener(rn, r, targetModel, throughModel);","      } else {","        // The target model is resolved","        var params = traverse(r).clone();","        params.as = rn;","        params.model = polymorphicName || targetModel;","        if (throughModel) {","          params.through = throughModel;","        }","        modelClass[r.type].call(modelClass, rn, params);","      }","    });","  }","};","","function isValidRelationName(relationName) {","  var invalidRelationNames = ['trigger'];","","  return invalidRelationNames.indexOf(relationName) === -1;","}","","/*!"," * Set up the data access functions from the data source"," * @param {Model} modelClass The model class"," * @param {Object} settings The settings object"," */","DataSource.prototype.setupDataAccess = function(modelClass, settings) {","  if (this.connector) {","    // Check if the id property should be generated","    var idName = modelClass.definition.idName();","    var idProp = modelClass.definition.rawProperties[idName];","    if (idProp && idProp.generated && this.connector.getDefaultIdType) {","      // Set the default id type from connector's ability","      var idType = this.connector.getDefaultIdType() || String;","      idProp.type = idType;","      modelClass.definition.rawProperties[idName].type = idType;","      modelClass.definition.properties[idName].type = idType;","      var forceId = settings.forceId;","      if (idProp.generated && forceId !== false) {","        forceId = true;","      }","      if (forceId) {","        modelClass.validatesAbsenceOf(idName, {if: 'isNewRecord'});","      }","    }","    if (this.connector.define) {","      // pass control to connector","      this.connector.define({","        model: modelClass,","        properties: modelClass.definition.properties,","        settings: settings,","      });","    }","  }","","  // add data access objects","  this.mixin(modelClass);","","  // define relations from LDL (options.relations)","  var relations = settings.relationships || settings.relations;","  this.defineRelations(modelClass, relations);","","  // Emit the dataAccessConfigured event to indicate all the methods for data","  // access have been mixed into the model class","  modelClass.emit('dataAccessConfigured', modelClass);","","  // define scopes from LDL (options.relations)","  var scopes = settings.scopes || {};","  this.defineScopes(modelClass, scopes);","};","","/**"," * Define a model class.  Returns newly created model object."," * The first (String) argument specifying the model name is required."," * You can provide one or two JSON object arguments, to provide configuration options."," * See [Model definition reference](http://docs.strongloop.com/display/DOC/Model+definition+reference) for details."," *"," * Simple example:"," * ```"," * var User = dataSource.createModel('User', {"," *     email: String,"," *     password: String,"," *     birthDate: Date,"," *     activated: Boolean"," * });"," * ```"," * More advanced example"," * ```"," * var User = dataSource.createModel('User', {"," *     email: { type: String, limit: 150, index: true },"," *     password: { type: String, limit: 50 },"," *     birthDate: Date,"," *     registrationDate: {type: Date, default: function () { return new Date }},"," *     activated: { type: Boolean, default: false }"," * });"," * ```"," * You can also define an ACL when you create a new data source with the `DataSource.create()` method. For example:"," *"," * ```js"," * var Customer = ds.createModel('Customer', {"," *       name: {"," *         type: String,"," *         acls: ["," *           {principalType: ACL.USER, principalId: 'u001', accessType: ACL.WRITE, permission: ACL.DENY},"," *           {principalType: ACL.USER, principalId: 'u001', accessType: ACL.ALL, permission: ACL.ALLOW}"," *         ]"," *       }"," *     }, {"," *       acls: ["," *         {principalType: ACL.USER, principalId: 'u001', accessType: ACL.ALL, permission: ACL.ALLOW}"," *       ]"," *     });"," * ```"," *"," * @param {String} className Name of the model to create."," * @param {Object} properties Hash of model properties in format `{property: Type, property2: Type2, ...}` or `{property: {type: Type}, property2: {type: Type2}, ...}`"," * @options {Object} properties Other configuration options.  This corresponds to the options key in the config object."," *"," */","","DataSource.prototype.createModel =","DataSource.prototype.define = function defineClass(className, properties, settings) {","  var args = slice.call(arguments);","","  if (!className) {","    throw new Error(g.f('Class name required'));","  }","  if (args.length === 1) {","    properties = {};","    args.push(properties);","  }","  if (args.length === 2) {","    settings = {};","    args.push(settings);","  }","","  properties = properties || {};","  settings = settings || {};","","  if (this.isRelational()) {","    // Set the strict mode to be true for relational DBs by default","    if (settings.strict === undefined || settings.strict === null) {","      settings.strict = true;","    }","    if (settings.strict === false) {","      settings.strict = 'throw';","    }","  }","","  var modelClass = this.modelBuilder.define(className, properties, settings);","  modelClass.dataSource = this;","","  if (settings.unresolved) {","    return modelClass;","  }","","  this.setupDataAccess(modelClass, settings);","  modelClass.emit('dataSourceAttached', modelClass);","","  return modelClass;","};","","/**"," * Mixin DataAccessObject methods."," *"," * @param {Function} ModelCtor The model constructor"," * @private"," */","","DataSource.prototype.mixin = function(ModelCtor) {","  var ops = this.operations();","  var DAO = this.DataAccessObject;","","  // mixin DAO","  jutil.mixin(ModelCtor, DAO, {proxyFunctions: true, override: true});","","  // decorate operations as alias functions","  Object.keys(ops).forEach(function(name) {","    var op = ops[name];","    var scope;","","    if (op.enabled) {","      scope = op.prototype ? ModelCtor.prototype : ModelCtor;","      // var sfn = scope[name] = function () {","      //   op.scope[op.fnName].apply(self, arguments);","      // }","      Object.keys(op)","        .filter(function(key) {","          // filter out the following keys","          return ~[","            'scope',","            'fnName',","            'prototype',","          ].indexOf(key);","        })","        .forEach(function(key) {","          if (typeof op[key] !== 'undefined') {","            op.scope[op.fnName][key] = op[key];","          }","        });","    }","  });","};","","/**"," * See ModelBuilder.getModel"," */","DataSource.prototype.getModel = function(name, forceCreate) {","  return this.modelBuilder.getModel(name, forceCreate);","};","","/**"," * See ModelBuilder.getModelDefinition"," */","DataSource.prototype.getModelDefinition = function(name) {","  return this.modelBuilder.getModelDefinition(name);","};","","/**"," * Get the data source types"," * @returns {String[]} The data source type, such as ['db', 'nosql', 'mongodb'],"," * ['rest'], or ['db', 'rdbms', 'mysql']"," */","DataSource.prototype.getTypes = function() {","  var getTypes = this.connector && this.connector.getTypes;","  var types = getTypes && getTypes() || [];","  if (typeof types === 'string') {","    types = types.split(/[\\s,\\/]+/);","  }","  return types;","};","","/**"," * Check the data source supports the specified types."," * @param {String} types Type name or an array of type names.  Can also be array of Strings."," * @returns {Boolean} true if all types are supported by the data source"," */","DataSource.prototype.supportTypes = function(types) {","  var supportedTypes = this.getTypes();","  if (Array.isArray(types)) {","    // Check each of the types","    for (var i = 0; i < types.length; i++) {","      if (supportedTypes.indexOf(types[i]) === -1) {","        // Not supported","        return false;","      }","    }","    return true;","  } else {","    // The types is a string","    return supportedTypes.indexOf(types) !== -1;","  }","};","","/**"," * Attach an existing model to a data source."," *"," * @param {Function} modelClass The model constructor"," */","","DataSource.prototype.attach = function(modelClass) {","  if (modelClass.dataSource === this) {","    // Already attached to the data source","    return modelClass;","  }","","  if (modelClass.modelBuilder !== this.modelBuilder) {","    this.modelBuilder.definitions[modelClass.modelName] = modelClass.definition;","    this.modelBuilder.models[modelClass.modelName] = modelClass;","    // reset the modelBuilder","    modelClass.modelBuilder = this.modelBuilder;","  }","","  // redefine the dataSource","  modelClass.dataSource = this;","","  this.setupDataAccess(modelClass, modelClass.settings);","  modelClass.emit('dataSourceAttached', modelClass);","  return modelClass;","};","","/**"," * Define single property named `prop` on `model`"," *"," * @param {String} model Name of model"," * @param {String} prop Name of property"," * @param {Object} params Property settings"," */","DataSource.prototype.defineProperty = function(model, prop, params) {","  this.modelBuilder.defineProperty(model, prop, params);","","  var resolvedProp = this.getModelDefinition(model).properties[prop];","  if (this.connector && this.connector.defineProperty) {","    this.connector.defineProperty(model, prop, resolvedProp);","  }","};","","/**"," * Drop each model table and re-create."," * This method applies only to database connectors.  For MongoDB, it drops and creates indexes."," *"," * **WARNING**: Calling this function deletes all data! Use `autoupdate()` to preserve data."," *"," * @param {String} model Model to migrate.  If not present, apply to all models.  Can also be an array of Strings."," * @param {Function} [callback] Callback function. Optional."," *",""," */","DataSource.prototype.automigrate = function(models, cb) {","  this.freeze();","","  if ((!cb) && ('function' === typeof models)) {","    cb = models;","    models = undefined;","  }","","  cb = cb || utils.createPromiseCallback();","","  if (!this.connector.automigrate) {","    // NOOP","    process.nextTick(cb);","    return cb.promise;","  }","","  // First argument is a model name","  if ('string' === typeof models) {","    models = [models];","  }","","  var attachedModels = this.connector._models;","","  if (attachedModels && typeof attachedModels === 'object') {","    models = models || Object.keys(attachedModels);","","    if (models.length === 0) {","      process.nextTick(cb);","      return cb.promise;","    }","","    var invalidModels = models.filter(function(m) {","      return !(m in attachedModels);","    });","","    if (invalidModels.length) {","      process.nextTick(function() {","        cb(new Error(g.f('Cannot migrate models not attached to this datasource: %s',","          invalidModels.join(' '))));","      });","      return cb.promise;","    }","  }","","  this.connector.automigrate(models, cb);","  return cb.promise;","};","","/**"," * Update existing database tables."," * This method applies only to database connectors."," *"," * @param {String} model Model to migrate.  If not present, apply to all models.  Can also be an array of Strings."," * @param {Function} [cb] The callback function"," */","DataSource.prototype.autoupdate = function(models, cb) {","  this.freeze();","","  if ((!cb) && ('function' === typeof models)) {","    cb = models;","    models = undefined;","  }","","  cb = cb || utils.createPromiseCallback();","","  if (!this.connector.autoupdate) {","    // NOOP","    process.nextTick(cb);","    return cb.promise;","  }","","  // First argument is a model name","  if ('string' === typeof models) {","    models = [models];","  }","","  var attachedModels = this.connector._models;","","  if (attachedModels && typeof attachedModels === 'object') {","    models = models || Object.keys(attachedModels);","","    if (models.length === 0) {","      process.nextTick(cb);","      return cb.promise;","    }","","    var invalidModels = models.filter(function(m) {","      return !(m in attachedModels);","    });","","    if (invalidModels.length) {","      process.nextTick(function() {","        cb(new Error(g.f('Cannot migrate models not attached to this datasource: %s',","        invalidModels.join(' '))));","      });","      return cb.promise;","    }","  }","","  this.connector.autoupdate(models, cb);","  return cb.promise;","};","","/**"," * Discover existing database tables."," * This method returns an array of model objects, including {type, name, onwer}"," *"," * @param {Object} options The options"," * @param {Function} Callback function.  Optional."," * @options {Object} options Discovery options.  See below."," * @property {String} owner/schema The owner or schema to discover from."," * @property {Boolean} all If true, discover all models; if false, discover only models owned by the current user."," * @property {Boolean} views If true, include views; if false, only tables."," * @property {Number} limit Page size"," * @property {Number} offset Starting index"," *"," */","DataSource.prototype.discoverModelDefinitions = function(options, cb) {","  this.freeze();","","  if (cb === undefined && typeof options === 'function') {","    cb = options;","    options = {};","  }","  options = options || {};","  cb = cb || utils.createPromiseCallback();","","  if (this.connector.discoverModelDefinitions) {","    this.connector.discoverModelDefinitions(options, cb);","  } else if (cb) {","    process.nextTick(cb);","  }","  return cb.promise;","};","","/**"," * The synchronous version of discoverModelDefinitions."," * @options {Object} options The options"," * @property {Boolean} all If true, discover all models; if false, discover only models owned by the current user."," * @property {Boolean} views If true, nclude views; if false, only tables."," * @property {Number} limit Page size"," * @property {Number} offset Starting index"," * @returns {*}"," */","DataSource.prototype.discoverModelDefinitionsSync = function(options) {","  this.freeze();","  if (this.connector.discoverModelDefinitionsSync) {","    return this.connector.discoverModelDefinitionsSync(options);","  }","  return null;","};","","/**"," * Discover properties for a given model."," *"," * Callback function return value is an object that can have the following properties:"," *"," *| Key | Type | Description |"," *|-----|------|-------------|"," *|owner | String | Database owner or schema|"," *|tableName | String | Table/view name|"," *|columnName | String | Column name|"," *|dataType | String | Data type|"," *|dataLength | Number | Data length|"," *|dataPrecision | Number | Numeric data precision|"," *|dataScale |Number | Numeric data scale|"," *|nullable |Boolean | If true, then the data can be null|"," *"," * @param {String} modelName The table/view name"," * @options {Object} options The options"," * @property {String} owner|schema The database owner or schema"," * @param {Function} cb Callback function. Optional"," *"," */","DataSource.prototype.discoverModelProperties = function(modelName, options, cb) {","  this.freeze();","","  if (cb === undefined && typeof options === 'function') {","    cb = options;","    options = {};","  }","  options = options || {};","  cb = cb || utils.createPromiseCallback();","","  if (this.connector.discoverModelProperties) {","    this.connector.discoverModelProperties(modelName, options, cb);","  } else if (cb) {","    process.nextTick(cb);","  }","  return cb.promise;","};","","/**"," * The synchronous version of discoverModelProperties"," * @param {String} modelName The table/view name"," * @param {Object} options The options"," * @returns {*}"," */","DataSource.prototype.discoverModelPropertiesSync = function(modelName, options) {","  this.freeze();","  if (this.connector.discoverModelPropertiesSync) {","    return this.connector.discoverModelPropertiesSync(modelName, options);","  }","  return null;","};","","/**"," * Discover primary keys for a given owner/modelName."," * Callback function return value is an object that can have the following properties:"," *"," *| Key | Type | Description |"," *|-----|------|-------------|"," *| owner |String | Table schema or owner (may be null). Owner defaults to current user."," *| tableName |String| Table name"," *| columnName |String| Column name"," *| keySeq |Number| Sequence number within primary key (1 indicates the first column in the primary key; 2 indicates the second column in the primary key)."," *| pkName |String| Primary key name (may be null)"," *"," * @param {String} modelName The model name"," * @options {Object} options The options"," * @property {String} owner|schema The database owner or schema"," * @param {Function} [cb] The callback function"," */","DataSource.prototype.discoverPrimaryKeys = function(modelName, options, cb) {","  this.freeze();","","  if (cb === undefined && typeof options === 'function') {","    cb = options;","    options = {};","  }","  options = options || {};","  cb = cb || utils.createPromiseCallback();","","  if (this.connector.discoverPrimaryKeys) {","    this.connector.discoverPrimaryKeys(modelName, options, cb);","  } else if (cb) {","    process.nextTick(cb);","  }","  return cb.promise;","};","","/**"," * The synchronous version of discoverPrimaryKeys"," * @param {String} modelName The model name"," * @options {Object} options The options"," * @property {String} owner|schema The database owner orschema"," * @returns {*}"," */","DataSource.prototype.discoverPrimaryKeysSync = function(modelName, options) {","  this.freeze();","  if (this.connector.discoverPrimaryKeysSync) {","    return this.connector.discoverPrimaryKeysSync(modelName, options);","  }","  return null;","};","","/**"," * Discover foreign keys for a given owner/modelName"," *"," * Callback function return value is an object that can have the following properties:"," *"," *| Key | Type | Description |"," *|-----|------|-------------|"," *|fkOwner |String | Foreign key table schema (may be null)"," *|fkName |String | Foreign key name (may be null)"," *|fkTableName |String | Foreign key table name"," *|fkColumnName |String | Foreign key column name"," *|keySeq |Number | Sequence number within a foreign key( a value of 1 represents the first column of the foreign key, a value of 2 would represent the second column within the foreign key)."," *|pkOwner |String | Primary key table schema being imported (may be null)"," *|pkName |String | Primary key name (may be null)"," *|pkTableName |String | Primary key table name being imported"," *|pkColumnName |String | Primary key column name being imported"," *"," * @param {String} modelName The model name"," * @options {Object} options The options"," * @property {String} owner|schema The database owner or schema"," * @param {Function} [cb] The callback function"," *"," */","DataSource.prototype.discoverForeignKeys = function(modelName, options, cb) {","  this.freeze();","","  if (cb === undefined && typeof options === 'function') {","    cb = options;","    options = {};","  }","  options = options || {};","  cb = cb || utils.createPromiseCallback();","","  if (this.connector.discoverForeignKeys) {","    this.connector.discoverForeignKeys(modelName, options, cb);","  } else if (cb) {","    process.nextTick(cb);","  }","  return cb.promise;","};","","/**"," * The synchronous version of discoverForeignKeys"," *"," * @param {String} modelName The model name"," * @param {Object} options The options"," * @returns {*}"," */","DataSource.prototype.discoverForeignKeysSync = function(modelName, options) {","  this.freeze();","  if (this.connector.discoverForeignKeysSync) {","    return this.connector.discoverForeignKeysSync(modelName, options);","  }","  return null;","};","","/**"," * Retrieves a description of the foreign key columns that reference the given table's primary key columns"," * (the foreign keys exported by a table), ordered by fkTableOwner, fkTableName, and keySeq."," *"," * Callback function return value is an object that can have the following properties:"," *"," *| Key | Type | Description |"," *|-----|------|-------------|"," *|fkOwner |String | Foreign key table schema (may be null)"," *|fkName |String | Foreign key name (may be null)"," *|fkTableName |String | Foreign key table name"," *|fkColumnName |String | Foreign key column name"," *|keySeq |Number | Sequence number within a foreign key( a value of 1 represents the first column of the foreign key, a value of 2 would represent the second column within the foreign key)."," *|pkOwner |String | Primary key table schema being imported (may be null)"," *|pkName |String | Primary key name (may be null)"," *|pkTableName |String | Primary key table name being imported"," *|pkColumnName |String | Primary key column name being imported"," *"," * @param {String} modelName The model name"," * @options {Object} options The options"," * @property {String} owner|schema The database owner or schema"," * @param {Function} [cb] The callback function"," */","DataSource.prototype.discoverExportedForeignKeys = function(modelName, options, cb) {","  this.freeze();","","  if (cb === undefined && typeof options === 'function') {","    cb = options;","    options = {};","  }","  options = options || {};","  cb = cb || utils.createPromiseCallback();","","  if (this.connector.discoverExportedForeignKeys) {","    this.connector.discoverExportedForeignKeys(modelName, options, cb);","  } else if (cb) {","    process.nextTick(cb);","  }","  return cb.promise;","};","","/**"," * The synchronous version of discoverExportedForeignKeys"," * @param {String} modelName The model name"," * @param {Object} options The options"," * @returns {*}"," */","DataSource.prototype.discoverExportedForeignKeysSync = function(modelName, options) {","  this.freeze();","  if (this.connector.discoverExportedForeignKeysSync) {","    return this.connector.discoverExportedForeignKeysSync(modelName, options);","  }","  return null;","};","","function capitalize(str) {","  if (!str) {","    return str;","  }","  return str.charAt(0).toUpperCase() + ((str.length > 1) ? str.slice(1).toLowerCase() : '');","}","","function fromDBName(dbName, camelCase) {","  if (!dbName) {","    return dbName;","  }","  var parts = dbName.split(/-|_/);","  parts[0] = camelCase ? parts[0].toLowerCase() : capitalize(parts[0]);","","  for (var i = 1; i < parts.length; i++) {","    parts[i] = capitalize(parts[i]);","  }","  return parts.join('');","}","","/**"," * Discover one schema from the given model without following the relations."," **Example schema from oracle connector:**"," *"," * ```js"," *     {"," *       \"name\": \"Product\","," *       \"options\": {"," *         \"idInjection\": false,"," *         \"oracle\": {"," *           \"schema\": \"BLACKPOOL\","," *           \"table\": \"PRODUCT\""," *         }"," *       },"," *       \"properties\": {"," *         \"id\": {"," *           \"type\": \"String\","," *           \"required\": true,"," *           \"length\": 20,"," *           \"id\": 1,"," *           \"oracle\": {"," *             \"columnName\": \"ID\","," *             \"dataType\": \"VARCHAR2\","," *             \"dataLength\": 20,"," *             \"nullable\": \"N\""," *           }"," *         },"," *         \"name\": {"," *           \"type\": \"String\","," *           \"required\": false,"," *           \"length\": 64,"," *           \"oracle\": {"," *             \"columnName\": \"NAME\","," *             \"dataType\": \"VARCHAR2\","," *             \"dataLength\": 64,"," *             \"nullable\": \"Y\""," *           }"," *         },"," * ..."," *         \"fireModes\": {"," *           \"type\": \"String\","," *           \"required\": false,"," *           \"length\": 64,"," *           \"oracle\": {"," *             \"columnName\": \"FIRE_MODES\","," *             \"dataType\": \"VARCHAR2\","," *             \"dataLength\": 64,"," *             \"nullable\": \"Y\""," *           }"," *         }"," *       }"," *     }"," * ```"," *"," * @param {String} modelName The model name"," * @param {Object} [options] The options"," * @param {Function} [cb] The callback function"," */","DataSource.prototype.discoverSchema = function(modelName, options, cb) {","  options = options || {};","","  if (!cb && 'function' === typeof options) {","    cb = options;","    options = {};","  }","  options.visited = {};","  options.relations = false;","","  cb = cb || utils.createPromiseCallback();","","  this.discoverSchemas(modelName, options, function(err, schemas) {","    if (err || !schemas) {","      cb && cb(err, schemas);","      return;","    }","    for (var s in schemas) {","      cb && cb(null, schemas[s]);","      return;","    }","  });","  return cb.promise;","};","","/**"," * Discover schema from a given modelName/view."," *"," * @param {String} modelName The model name."," * @options {Object} [options] Options; see below."," * @property {String} owner|schema Database owner or schema name."," * @property {Boolean} relations True if relations (primary key/foreign key) are navigated; false otherwise."," * @property {Boolean} all True if all owners are included; false otherwise."," * @property {Boolean} views True if views are included; false otherwise."," * @param {Function} [cb] The callback function"," */","DataSource.prototype.discoverSchemas = function(modelName, options, cb) {","  options = options || {};","","  if (!cb && 'function' === typeof options) {","    cb = options;","    options = {};","  }","","  cb = cb || utils.createPromiseCallback();","","  var self = this;","  var dbType = this.connector.name || this.name;","","  var nameMapper;","  if (options.nameMapper === null) {","    // No mapping","    nameMapper = function(type, name) {","      return name;","    };","  } else if (typeof options.nameMapper === 'function') {","    // Custom name mapper","    nameMapper = options.nameMapper;","  } else {","    // Default name mapper","    nameMapper = function mapName(type, name) {","      if (type === 'table' || type === 'model') {","        return fromDBName(name, false);","      } else if (type == 'fk') {","        return fromDBName(name + 'Rel', true);","      } else {","        return fromDBName(name, true);","      }","    };","  }","","  if (this.connector.discoverSchemas) {","    // Delegate to the connector implementation","    this.connector.discoverSchemas(modelName, options, cb);","    return cb.promise;","  }","","  var tasks = [","    this.discoverModelProperties.bind(this, modelName, options),","    this.discoverPrimaryKeys.bind(this, modelName, options)];","","  var followingRelations = options.associations || options.relations;","  if (followingRelations) {","    tasks.push(this.discoverForeignKeys.bind(this, modelName, options));","  }","","  async.parallel(tasks, function(err, results) {","    if (err) {","      cb(err);","      return cb.promise;","    }","","    var columns = results[0];","    if (!columns || columns.length === 0) {","      cb(new Error(g.f('Table \\'%s\\' does not exist.', modelName)));","      return cb.promise;","    }","","    // Handle primary keys","    var primaryKeys = results[1] || [];","    var pks = {};","    primaryKeys.forEach(function(pk) {","      pks[pk.columnName] = pk.keySeq;","    });","","    if (self.settings.debug) {","      debug('Primary keys: ', pks);","    }","","    var schema = {","      name: nameMapper('table', modelName),","      options: {","        idInjection: false, // DO NOT add id property","      },","      properties: {},","    };","","    schema.options[dbType] = {","      schema: columns[0].owner,","      table: modelName,","    };","","    columns.forEach(function(item) {","      var propName = nameMapper('column', item.columnName);","      schema.properties[propName] = {","        type: item.type,","        required: (item.nullable === 'N' || item.nullable === 'NO' ||","          item.nullable === 0 || item.nullable === false),","        length: item.dataLength,","        precision: item.dataPrecision,","        scale: item.dataScale,","      };","","      if (pks[item.columnName]) {","        schema.properties[propName].id = pks[item.columnName];","      }","      var dbSpecific = schema.properties[propName][dbType] = {","        columnName: item.columnName,","        dataType: item.dataType,","        dataLength: item.dataLength,","        dataPrecision: item.dataPrecision,","        dataScale: item.dataScale,","        nullable: item.nullable,","      };","      // merge connector-specific properties","      if (item[dbType]) {","        for (var k in item[dbType]) {","          dbSpecific[k] = item[dbType][k];","        }","      }","    });","","    // Add current modelName to the visited tables","    options.visited = options.visited || {};","    var schemaKey = columns[0].owner + '.' + modelName;","    if (!options.visited.hasOwnProperty(schemaKey)) {","      if (self.settings.debug) {","        debug('Adding schema for ' + schemaKey);","      }","      options.visited[schemaKey] = schema;","    }","","    var otherTables = {};","    if (followingRelations) {","      // Handle foreign keys","      var fks = {};","      var foreignKeys = results[2] || [];","      foreignKeys.forEach(function(fk) {","        var fkInfo = {","          keySeq: fk.keySeq,","          owner: fk.pkOwner,","          tableName: fk.pkTableName,","          columnName: fk.pkColumnName,","        };","        if (fks[fk.fkName]) {","          fks[fk.fkName].push(fkInfo);","        } else {","          fks[fk.fkName] = [fkInfo];","        }","      });","","      if (self.settings.debug) {","        debug('Foreign keys: ', fks);","      }","","      schema.options.relations = {};","      foreignKeys.forEach(function(fk) {","        var propName = nameMapper('fk', (fk.fkName || fk.pkTableName));","        schema.options.relations[propName] = {","          model: nameMapper('table', fk.pkTableName),","          type: 'belongsTo',","          foreignKey: nameMapper('column', fk.fkColumnName),","        };","","        var key = fk.pkOwner + '.' + fk.pkTableName;","        if (!options.visited.hasOwnProperty(key) && !otherTables.hasOwnProperty(key)) {","          otherTables[key] = {owner: fk.pkOwner, tableName: fk.pkTableName};","        }","      });","    }","","    if (Object.keys(otherTables).length === 0) {","      cb(null, options.visited);","    } else {","      var moreTasks = [];","      for (var t in otherTables) {","        if (self.settings.debug) {","          debug('Discovering related schema for ' + schemaKey);","        }","        var newOptions = {};","        for (var key in options) {","          newOptions[key] = options[key];","        }","        newOptions.owner = otherTables[t].owner;","","        moreTasks.push(DataSource.prototype.discoverSchemas.bind(self, otherTables[t].tableName, newOptions));","      }","      async.parallel(moreTasks, function(err, results) {","        var result = results && results[0];","        cb(err, result);","      });","    }","  });","  return cb.promise;","};","","/**"," * Discover schema from a given table/view synchronously"," *"," * @param {String} modelName The model name"," * @options {Object} [options] Options; see below."," * @property {String} owner|schema Database owner or schema name."," * @property {Boolean} relations True if relations (primary key/foreign key) are navigated; false otherwise."," * @property {Boolean} all True if all owners are included; false otherwise."," * @property {Boolean} views True if views are included; false otherwise."," */","DataSource.prototype.discoverSchemasSync = function(modelName, options) {","  var self = this;","  var dbType = this.name || this.connector.name;","","  var columns = this.discoverModelPropertiesSync(modelName, options);","  if (!columns || columns.length === 0) {","    return [];","  }","","  var nameMapper = options.nameMapper || function mapName(type, name) {","    if (type === 'table' || type === 'model') {","      return fromDBName(name, false);","    } else {","      return fromDBName(name, true);","    }","  };","","  // Handle primary keys","  var primaryKeys = this.discoverPrimaryKeysSync(modelName, options);","  var pks = {};","  primaryKeys.forEach(function(pk) {","    pks[pk.columnName] = pk.keySeq;","  });","","  if (self.settings.debug) {","    debug('Primary keys: ', pks);","  }","","  var schema = {","    name: nameMapper('table', modelName),","    options: {","      idInjection: false, // DO NOT add id property","    },","    properties: {},","  };","","  schema.options[dbType] = {","    schema: columns.length > 0 && columns[0].owner,","    table: modelName,","  };","","  columns.forEach(function(item) {","    var i = item;","","    var propName = nameMapper('column', item.columnName);","    schema.properties[propName] = {","      type: item.type,","      required: (item.nullable === 'N'),","      length: item.dataLength,","      precision: item.dataPrecision,","      scale: item.dataScale,","    };","","    if (pks[item.columnName]) {","      schema.properties[propName].id = pks[item.columnName];","    }","    schema.properties[propName][dbType] = {","      columnName: i.columnName,","      dataType: i.dataType,","      dataLength: i.dataLength,","      dataPrecision: item.dataPrecision,","      dataScale: item.dataScale,","      nullable: i.nullable,","    };","  });","","  // Add current modelName to the visited tables","  options.visited = options.visited || {};","  var schemaKey = columns[0].owner + '.' + modelName;","  if (!options.visited.hasOwnProperty(schemaKey)) {","    if (self.settings.debug) {","      debug('Adding schema for ' + schemaKey);","    }","    options.visited[schemaKey] = schema;","  }","","  var otherTables = {};","  var followingRelations = options.associations || options.relations;","  if (followingRelations) {","    // Handle foreign keys","    var fks = {};","    var foreignKeys = this.discoverForeignKeysSync(modelName, options);","    foreignKeys.forEach(function(fk) {","      var fkInfo = {","        keySeq: fk.keySeq,","        owner: fk.pkOwner,","        tableName: fk.pkTableName,","        columnName: fk.pkColumnName,","      };","      if (fks[fk.fkName]) {","        fks[fk.fkName].push(fkInfo);","      } else {","        fks[fk.fkName] = [fkInfo];","      }","    });","","    if (self.settings.debug) {","      debug('Foreign keys: ', fks);","    }","","    schema.options.relations = {};","    foreignKeys.forEach(function(fk) {","      var propName = nameMapper('column', fk.pkTableName);","      schema.options.relations[propName] = {","        model: nameMapper('table', fk.pkTableName),","        type: 'belongsTo',","        foreignKey: nameMapper('column', fk.fkColumnName),","      };","","      var key = fk.pkOwner + '.' + fk.pkTableName;","      if (!options.visited.hasOwnProperty(key) && !otherTables.hasOwnProperty(key)) {","        otherTables[key] = {owner: fk.pkOwner, tableName: fk.pkTableName};","      }","    });","  }","","  if (Object.keys(otherTables).length === 0) {","    return options.visited;","  } else {","    var moreTasks = [];","    for (var t in otherTables) {","      if (self.settings.debug) {","        debug('Discovering related schema for ' + schemaKey);","      }","      var newOptions = {};","      for (var key in options) {","        newOptions[key] = options[key];","      }","      newOptions.owner = otherTables[t].owner;","      self.discoverSchemasSync(otherTables[t].tableName, newOptions);","    }","    return options.visited;","  }","};","","/**"," * Discover and build models from the specified owner/modelName."," *"," * @param {String} modelName The model name."," * @options {Object} [options] Options; see below."," * @property {String} owner|schema Database owner or schema name."," * @property {Boolean} relations True if relations (primary key/foreign key) are navigated; false otherwise."," * @property {Boolean} all True if all owners are included; false otherwise."," * @property {Boolean} views True if views are included; false otherwise."," * @param {Function} [cb] The callback function"," */","DataSource.prototype.discoverAndBuildModels = function(modelName, options, cb) {","  var self = this;","  options = options || {};","  this.discoverSchemas(modelName, options, function(err, schemas) {","    if (err) {","      cb && cb(err, schemas);","      return;","    }","","    var schemaList = [];","    for (var s in schemas) {","      var schema = schemas[s];","      if (options.base) {","        schema.options = schema.options || {};","        schema.options.base = options.base;","      }","      schemaList.push(schema);","    }","","    var models = self.modelBuilder.buildModels(schemaList,","      self.createModel.bind(self));","","    cb && cb(err, models);","  });","};","","/**"," * Discover and build models from the given owner/modelName synchronously."," *"," * @param {String} modelName The model name."," * @options {Object} [options] Options; see below."," * @property {String} owner|schema Database owner or schema name."," * @property {Boolean} relations True if relations (primary key/foreign key) are navigated; false otherwise."," * @property {Boolean} all True if all owners are included; false otherwise."," * @property {Boolean} views True if views are included; false otherwise.",""," * @param {String} modelName The model name"," * @param {Object} [options] The options"," */","DataSource.prototype.discoverAndBuildModelsSync = function(modelName, options) {","  options = options || {};","  var schemas = this.discoverSchemasSync(modelName, options);","","  var schemaList = [];","  for (var s in schemas) {","    var schema = schemas[s];","    if (options.base) {","      schema.options = schema.options || {};","      schema.options.base = options.base;","    }","    schemaList.push(schema);","  }","","  var models = this.modelBuilder.buildModels(schemaList,","    this.createModel.bind(this));","","  return models;","};","","/**"," * Introspect a JSON object and build a model class"," * @param {String} name Name of the model"," * @param {Object} json The json object representing a model instance"," * @param {Object} options Options"," * @returns {*}"," */","DataSource.prototype.buildModelFromInstance = function(name, json, options) {","  // Introspect the JSON document to generate a schema","  var schema = ModelBuilder.introspect(json);","","  // Create a model for the generated schema","  return this.createModel(name, schema, options);","};","","/**"," * Check whether migrations needed"," * This method applies only to SQL connectors."," * @param {String|String[]} [models] A model name or an array of model names. If not present, apply to all models."," */","DataSource.prototype.isActual = function(models, cb) {","  this.freeze();","  if (this.connector.isActual) {","    this.connector.isActual(models, cb);","  } else {","    if ((!cb) && ('function' === typeof models)) {","      cb = models;","      models = undefined;","    }","    if (cb) {","      process.nextTick(function() {","        cb(null, true);","      });","    }","  }","};","","/**"," * Log benchmarked message. Do not redefine this method, if you need to grab"," * chema logs, use `dataSource.on('log', ...)` emitter event"," *"," * @private used by connectors"," */","DataSource.prototype.log = function(sql, t) {","  debug(sql, t);","  this.emit('log', sql, t);","};","","/**"," * Freeze dataSource. Behavior depends on connector"," */","DataSource.prototype.freeze = function freeze() {","  if (!this.connector) {","    throw new Error(g.f('The connector has not been initialized.'));","  }","  if (this.connector.freezeDataSource) {","    this.connector.freezeDataSource();","  }","  if (this.connector.freezeSchema) {","    this.connector.freezeSchema();","  }","};","","/**"," * Return table name for specified `modelName`"," * @param {String} modelName The model name"," */","DataSource.prototype.tableName = function(modelName) {","  return this.getModelDefinition(modelName).tableName(this.connector.name);","};","","/**"," * Return column name for specified modelName and propertyName"," * @param {String} modelName The model name"," * @param {String} propertyName The property name"," * @returns {String} columnName The column name."," */","DataSource.prototype.columnName = function(modelName, propertyName) {","  return this.getModelDefinition(modelName).columnName(this.connector.name, propertyName);","};","","/**"," * Return column metadata for specified modelName and propertyName"," * @param {String} modelName The model name"," * @param {String} propertyName The property name"," * @returns {Object} column metadata"," */","DataSource.prototype.columnMetadata = function(modelName, propertyName) {","  return this.getModelDefinition(modelName).columnMetadata(this.connector.name, propertyName);","};","","/**"," * Return column names for specified modelName"," * @param {String} modelName The model name"," * @returns {String[]} column names"," */","DataSource.prototype.columnNames = function(modelName) {","  return this.getModelDefinition(modelName).columnNames(this.connector.name);","};","","/**"," * Find the ID column name"," * @param {String} modelName The model name"," * @returns {String} columnName for ID"," */","DataSource.prototype.idColumnName = function(modelName) {","  return this.getModelDefinition(modelName).idColumnName(this.connector.name);","};","","/**"," * Find the ID property name"," * @param {String} modelName The model name"," * @returns {String} property name for ID"," */","DataSource.prototype.idName = function(modelName) {","  if (!this.getModelDefinition(modelName).idName) {","    g.error('No {{id}} name %s', this.getModelDefinition(modelName));","  }","  return this.getModelDefinition(modelName).idName();","};","","/**"," * Find the ID property names sorted by the index"," * @param {String} modelName The model name"," * @returns {String[]} property names for IDs"," */","DataSource.prototype.idNames = function(modelName) {","  return this.getModelDefinition(modelName).idNames();","};","","/**"," * Find the id property definition"," * @param {String} modelName The model name"," * @returns {Object} The id property definition"," */","DataSource.prototype.idProperty = function(modelName) {","  var def = this.getModelDefinition(modelName);","  var idProps = def && def.ids();","  return idProps && idProps[0] && idProps[0].property;","};","","/**"," * Define foreign key to another model"," * @param {String} className The model name that owns the key"," * @param {String} key Name of key field"," * @param {String} foreignClassName The foreign model name"," * @param {String} pkName (optional) primary key used for foreignKey"," */","DataSource.prototype.defineForeignKey = function defineForeignKey(className, key, foreignClassName, pkName) {","  var pkType = null;","  var foreignModel = this.getModelDefinition(foreignClassName);","  pkName = pkName || foreignModel && foreignModel.idName();","  if (pkName) {","    pkType = foreignModel.properties[pkName].type;","  }","  var model = this.getModelDefinition(className);","  if (model.properties[key]) {","    if (pkType) {","      // Reset the type of the foreign key","      model.rawProperties[key].type = model.properties[key].type = pkType;","    }","    return;","  }","","  var fkDef = {type: pkType};","  var foreignMeta = this.columnMetadata(foreignClassName, pkName);","  if (foreignMeta && (foreignMeta.dataType || foreignMeta.dataLength)) {","    fkDef[this.connector.name] = {};","    if (foreignMeta.dataType) {","      fkDef[this.connector.name].dataType = foreignMeta.dataType;","    }","    if (foreignMeta.dataLength) {","      fkDef[this.connector.name].dataLength = foreignMeta.dataLength;","    }","  }","  if (this.connector.defineForeignKey) {","    var cb = function(err, keyType) {","      if (err) throw err;","      fkDef.type = keyType || pkType;","      // Add the foreign key property to the data source _models","      this.defineProperty(className, key, fkDef);","    }.bind(this);","    switch (this.connector.defineForeignKey.length) {","      case 4:","        this.connector.defineForeignKey(className, key, foreignClassName, cb);","        break;","      default:","      case 3:","        this.connector.defineForeignKey(className, key, cb);","        break;","    }","  } else {","    // Add the foreign key property to the data source _models","    this.defineProperty(className, key, fkDef);","  }","};","","/**"," * Close database connection"," * @param {Function} [cb] The callback function. Optional."," */","DataSource.prototype.disconnect = function disconnect(cb) {","  var self = this;","  if (this.connected && (typeof this.connector.disconnect === 'function')) {","    this.connector.disconnect(function(err, result) {","      self.connected = false;","      cb && cb(err, result);","    });","  } else {","    process.nextTick(function() {","      self.connected = false;","      cb && cb();","    });","  }","};","","/**"," * Copy the model from Master."," * @param {Function} Master The model constructor"," * @returns {Function} The copy of the model constructor"," *"," * @private"," */","DataSource.prototype.copyModel = function copyModel(Master) {","  var dataSource = this;","  var className = Master.modelName;","  var md = Master.modelBuilder.getModelDefinition(className);","  var Slave = function SlaveModel() {","    Master.apply(this, [].slice.call(arguments));","  };","","  util.inherits(Slave, Master);","","  // Delegating static properties","  Slave.__proto__ = Master;","","  hiddenProperty(Slave, 'dataSource', dataSource);","  hiddenProperty(Slave, 'modelName', className);","  hiddenProperty(Slave, 'relations', Master.relations);","","  if (!(className in dataSource.modelBuilder.models)) {","    // store class in model pool","    dataSource.modelBuilder.models[className] = Slave;","    dataSource.modelBuilder.definitions[className] =","      new ModelDefinition(dataSource.modelBuilder, md.name, md.properties, md.settings);","","    if ((!dataSource.isTransaction) && dataSource.connector && dataSource.connector.define) {","      dataSource.connector.define({","        model: Slave,","        properties: md.properties,","        settings: md.settings,","      });","    }","  }","","  return Slave;","};","","/**"," *"," * @returns {EventEmitter}"," * @private"," */","DataSource.prototype.transaction = function() {","  var dataSource = this;","  var transaction = new EventEmitter();","","  for (var p in dataSource) {","    transaction[p] = dataSource[p];","  }","","  transaction.isTransaction = true;","  transaction.origin = dataSource;","  transaction.name = dataSource.name;","  transaction.settings = dataSource.settings;","  transaction.connected = false;","  transaction.connecting = false;","  transaction.connector = dataSource.connector.transaction();","","  // create blank models pool","  transaction.modelBuilder = new ModelBuilder();","  transaction.models = transaction.modelBuilder.models;","  transaction.definitions = transaction.modelBuilder.definitions;","","  for (var i in dataSource.modelBuilder.models) {","    dataSource.copyModel.call(transaction, dataSource.modelBuilder.models[i]);","  }","","  transaction.exec = function(cb) {","    transaction.connector.exec(cb);","  };","","  return transaction;","};","","/**"," * Enable remote access to a data source operation. Each [connector](#connector) has its own set of set"," * remotely enabled and disabled operations. To list the operations, call `dataSource.operations()`."," * @param {String} operation The operation name"," */","","DataSource.prototype.enableRemote = function(operation) {","  var op = this.getOperation(operation);","  if (op) {","    op.remoteEnabled = true;","  } else {","    throw new Error(g.f('%s is not provided by the attached connector', operation));","  }","};","","/**"," * Disable remote access to a data source operation. Each [connector](#connector) has its own set of set enabled"," * and disabled operations. To list the operations, call `dataSource.operations()`."," *"," *```js"," * var oracle = loopback.createDataSource({"," *   connector: require('loopback-connector-oracle'),"," *   host: '...',"," *   ..."," * });"," * oracle.disableRemote('destroyAll');"," * ```"," * **Notes:**"," *"," * - Disabled operations will not be added to attached models."," * - Disabling the remoting for a method only affects client access (it will still be available from server models)."," * - Data sources must enable / disable operations before attaching or creating models."," * @param {String} operation The operation name"," */","","DataSource.prototype.disableRemote = function(operation) {","  var op = this.getOperation(operation);","  if (op) {","    op.remoteEnabled = false;","  } else {","    throw new Error(g.f('%s is not provided by the attached connector', operation));","  }","};","","/**"," * Get an operation's metadata."," * @param {String} operation The operation name"," */","","DataSource.prototype.getOperation = function(operation) {","  var ops = this.operations();","  var opKeys = Object.keys(ops);","","  for (var i = 0; i < opKeys.length; i++) {","    var op = ops[opKeys[i]];","","    if (op.name === operation) {","      return op;","    }","  }","};","","/**"," * Return JSON object describing all operations."," *"," * Example return value:"," * ```js"," * {"," *  find: {"," *    remoteEnabled: true,"," *    accepts: [...],"," *    returns: [...]"," *    enabled: true"," * },"," *  save: {"," *    remoteEnabled: true,"," *    prototype: true,"," *    accepts: [...],"," *    returns: [...],"," *    enabled: true"," *  },"," *  ..."," * }"," * ```"," */","DataSource.prototype.operations = function() {","  return this._operations;","};","","/**"," * Define an operation to the data source"," * @param {String} name The operation name"," * @param {Object} options The options"," * @param {Function} fn The function"," */","DataSource.prototype.defineOperation = function(name, options, fn) {","  options.fn = fn;","  options.name = name;","  this._operations[name] = options;","};","","/**"," * Check if the backend is a relational DB"," * @returns {Boolean}"," */","DataSource.prototype.isRelational = function() {","  return this.connector && this.connector.relational;","};","","/*!"," * Check if the data source is ready."," * Returns a Boolean value."," * @param {Object} obj  ?"," * @param {Object} args  ?"," */","DataSource.prototype.ready = function(obj, args) {","  var self = this;","  if (this.connected) {","    // Connected","    return false;","  }","","  var method = args.callee;","  // Set up a callback after the connection is established to continue the method call","","  var onConnected = null, onError = null, timeoutHandle = null;","  onConnected = function() {","    // Remove the error handler","    self.removeListener('error', onError);","    if (timeoutHandle) {","      clearTimeout(timeoutHandle);","    }","    var params = [].slice.call(args);","    try {","      method.apply(obj, params);","    } catch (err) {","      // Catch the exception and report it via callback","      var cb = params.pop();","      if (typeof cb === 'function') {","        process.nextTick(function() {","          cb(err);","        });","      } else {","        throw err;","      }","    }","  };","  onError = function(err) {","    // Remove the connected listener","    self.removeListener('connected', onConnected);","    if (timeoutHandle) {","      clearTimeout(timeoutHandle);","    }","    var params = [].slice.call(args);","    var cb = params.pop();","    if (typeof cb === 'function') {","      process.nextTick(function() {","        cb(err);","      });","    }","  };","  this.once('connected', onConnected);","  this.once('error', onError);","","  // Set up a timeout to cancel the invocation","  var timeout = this.settings.connectionTimeout || 5000;","  timeoutHandle = setTimeout(function() {","    self.removeListener('error', onError);","    self.removeListener('connected', onConnected);","    var params = [].slice.call(args);","    var cb = params.pop();","    if (typeof cb === 'function') {","      cb(new Error(g.f('Timeout in connecting after %s ms', timeout)));","    }","  }, timeout);","","  if (!this.connecting) {","    this.connect();","  }","  return true;","};","","/**"," * Ping the underlying connector to test the connections"," * @param {Function} [cb] Callback function"," */","DataSource.prototype.ping = function(cb) {","  var self = this;","  if (self.connector.ping) {","    this.connector.ping(cb);","  } else if (self.connector.discoverModelProperties) {","    self.discoverModelProperties('dummy', {}, cb);","  } else {","    process.nextTick(function() {","      var err = self.connected ? null : new Error(g.f('Not connected'));","      cb(err);","    });","  }","};","","/**"," * Define a hidden property"," * @param {Object} obj The property owner"," * @param {String} key The property name"," * @param {Mixed} value The default value"," */","function hiddenProperty(obj, key, value) {","  Object.defineProperty(obj, key, {","    writable: false,","    enumerable: false,","    configurable: false,","    value: value,","  });","}","","/**"," * Define readonly property on object"," *"," * @param {Object} obj The property owner"," * @param {String} key The property name"," * @param {Mixed} value The default value"," */","function defineReadonlyProp(obj, key, value) {","  Object.defineProperty(obj, key, {","    writable: false,","    enumerable: true,","    configurable: true,","    value: value,","  });","}","","// Carry over a few properties/methods from the ModelBuilder as some tests use them","DataSource.Text = ModelBuilder.Text;","DataSource.JSON = ModelBuilder.JSON;","DataSource.Any = ModelBuilder.Any;",""],"l":{"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"30":1,"32":0,"34":1,"39":1,"44":1,"91":1,"92":0,"93":0,"97":0,"98":0,"99":0,"103":0,"104":0,"108":0,"109":0,"112":0,"113":0,"114":0,"115":0,"119":0,"121":0,"123":0,"126":0,"129":0,"130":0,"134":0,"135":0,"136":0,"138":0,"139":0,"151":0,"152":0,"153":0,"154":0,"155":0,"168":1,"171":1,"177":1,"178":0,"179":0,"180":0,"181":0,"183":0,"185":0,"186":0,"187":0,"190":0,"191":0,"192":0,"193":0,"194":0,"198":0,"203":1,"204":0,"205":0,"206":0,"207":0,"208":0,"212":0,"214":0,"216":0,"220":1,"221":0,"222":0,"223":0,"224":0,"225":0,"227":0,"230":0,"231":0,"232":0,"235":0,"236":0,"238":0,"239":0,"242":0,"251":1,"252":0,"253":0,"254":0,"255":0,"256":0,"260":0,"270":1,"271":0,"272":0,"273":0,"275":0,"276":0,"278":0,"281":0,"282":0,"283":0,"284":0,"285":0,"287":0,"291":0,"292":0,"295":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"306":0,"309":0,"310":0,"311":0,"314":0,"316":0,"319":0,"322":0,"332":1,"333":0,"334":0,"337":0,"338":0,"339":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"353":0,"355":0,"357":0,"358":0,"362":0,"363":0,"365":0,"366":0,"367":0,"369":0,"370":0,"372":0,"373":0,"375":0,"376":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"389":0,"390":0,"391":0,"393":0,"394":0,"397":0,"398":0,"399":0,"402":0,"403":0,"404":0,"408":0,"409":0,"411":0,"412":0,"414":0,"415":0,"418":0,"419":0,"423":0,"428":1,"429":0,"430":0,"432":0,"435":1,"437":1,"438":0,"446":1,"447":0,"448":0,"449":0,"459":1,"460":0,"463":0,"464":0,"465":0,"467":0,"469":0,"470":0,"471":0,"472":0,"473":0,"475":0,"480":0,"482":0,"483":0,"485":0,"486":0,"487":0,"488":0,"489":0,"496":0,"497":0,"498":0,"499":0,"500":0,"502":0,"504":0,"505":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"517":0,"518":0,"521":0,"522":0,"523":0,"526":0,"529":0,"532":0,"533":0,"534":0,"535":0,"536":0,"538":0,"544":1,"545":0,"547":0,"555":1,"556":0,"558":0,"559":0,"560":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"570":0,"571":0,"574":0,"576":0,"585":0,"588":0,"589":0,"593":0,"596":0,"597":0,"649":1,"651":0,"653":0,"654":0,"656":0,"657":0,"658":0,"660":0,"661":0,"662":0,"665":0,"666":0,"668":0,"670":0,"671":0,"673":0,"674":0,"678":0,"679":0,"681":0,"682":0,"685":0,"686":0,"688":0,"698":1,"699":0,"700":0,"703":0,"706":0,"707":0,"708":0,"710":0,"711":0,"715":0,"718":0,"725":0,"726":0,"736":1,"737":0,"743":1,"744":0,"752":1,"753":0,"754":0,"755":0,"756":0,"758":0,"766":1,"767":0,"768":0,"770":0,"771":0,"773":0,"776":0,"779":0,"789":1,"790":0,"792":0,"795":0,"796":0,"797":0,"799":0,"803":0,"805":0,"806":0,"807":0,"817":1,"818":0,"820":0,"821":0,"822":0,"837":1,"838":0,"840":0,"841":0,"842":0,"845":0,"847":0,"849":0,"850":0,"854":0,"855":0,"858":0,"860":0,"861":0,"863":0,"864":0,"865":0,"868":0,"869":0,"872":0,"873":0,"874":0,"877":0,"881":0,"882":0,"892":1,"893":0,"895":0,"896":0,"897":0,"900":0,"902":0,"904":0,"905":0,"909":0,"910":0,"913":0,"915":0,"916":0,"918":0,"919":0,"920":0,"923":0,"924":0,"927":0,"928":0,"929":0,"932":0,"936":0,"937":0,"954":1,"955":0,"957":0,"958":0,"959":0,"961":0,"962":0,"964":0,"965":0,"966":0,"967":0,"969":0,"981":1,"982":0,"983":0,"984":0,"986":0,"1011":1,"1012":0,"1014":0,"1015":0,"1016":0,"1018":0,"1019":0,"1021":0,"1022":0,"1023":0,"1024":0,"1026":0,"1035":1,"1036":0,"1037":0,"1038":0,"1040":0,"1060":1,"1061":0,"1063":0,"1064":0,"1065":0,"1067":0,"1068":0,"1070":0,"1071":0,"1072":0,"1073":0,"1075":0,"1085":1,"1086":0,"1087":0,"1088":0,"1090":0,"1116":1,"1117":0,"1119":0,"1120":0,"1121":0,"1123":0,"1124":0,"1126":0,"1127":0,"1128":0,"1129":0,"1131":0,"1141":1,"1142":0,"1143":0,"1144":0,"1146":0,"1172":1,"1173":0,"1175":0,"1176":0,"1177":0,"1179":0,"1180":0,"1182":0,"1183":0,"1184":0,"1185":0,"1187":0,"1196":1,"1197":0,"1198":0,"1199":0,"1201":0,"1204":1,"1205":0,"1206":0,"1208":0,"1211":1,"1212":0,"1213":0,"1215":0,"1216":0,"1218":0,"1219":0,"1221":0,"1282":1,"1283":0,"1285":0,"1286":0,"1287":0,"1289":0,"1290":0,"1292":0,"1294":0,"1295":0,"1296":0,"1297":0,"1299":0,"1300":0,"1301":0,"1304":0,"1318":1,"1319":0,"1321":0,"1322":0,"1323":0,"1326":0,"1328":0,"1329":0,"1331":0,"1332":0,"1334":0,"1335":0,"1337":0,"1339":0,"1342":0,"1343":0,"1344":0,"1345":0,"1346":0,"1348":0,"1353":0,"1355":0,"1356":0,"1359":0,"1363":0,"1364":0,"1365":0,"1368":0,"1369":0,"1370":0,"1371":0,"1374":0,"1375":0,"1376":0,"1377":0,"1381":0,"1382":0,"1383":0,"1384":0,"1387":0,"1388":0,"1391":0,"1399":0,"1404":0,"1405":0,"1406":0,"1415":0,"1416":0,"1418":0,"1427":0,"1428":0,"1429":0,"1435":0,"1436":0,"1437":0,"1438":0,"1439":0,"1441":0,"1444":0,"1445":0,"1447":0,"1448":0,"1449":0,"1450":0,"1456":0,"1457":0,"1459":0,"1463":0,"1464":0,"1467":0,"1468":0,"1469":0,"1470":0,"1476":0,"1477":0,"1478":0,"1483":0,"1484":0,"1486":0,"1487":0,"1488":0,"1489":0,"1491":0,"1492":0,"1493":0,"1495":0,"1497":0,"1499":0,"1500":0,"1501":0,"1505":0,"1518":1,"1519":0,"1520":0,"1522":0,"1523":0,"1524":0,"1527":0,"1528":0,"1529":0,"1531":0,"1536":0,"1537":0,"1538":0,"1539":0,"1542":0,"1543":0,"1546":0,"1554":0,"1559":0,"1560":0,"1562":0,"1563":0,"1571":0,"1572":0,"1574":0,"1585":0,"1586":0,"1587":0,"1588":0,"1589":0,"1591":0,"1594":0,"1595":0,"1596":0,"1598":0,"1599":0,"1600":0,"1601":0,"1607":0,"1608":0,"1610":0,"1614":0,"1615":0,"1618":0,"1619":0,"1620":0,"1621":0,"1627":0,"1628":0,"1629":0,"1634":0,"1635":0,"1637":0,"1638":0,"1639":0,"1640":0,"1642":0,"1643":0,"1644":0,"1646":0,"1647":0,"1649":0,"1664":1,"1665":0,"1666":0,"1667":0,"1668":0,"1669":0,"1670":0,"1673":0,"1674":0,"1675":0,"1676":0,"1677":0,"1678":0,"1680":0,"1683":0,"1686":0,"1703":1,"1704":0,"1705":0,"1707":0,"1708":0,"1709":0,"1710":0,"1711":0,"1712":0,"1714":0,"1717":0,"1720":0,"1730":1,"1732":0,"1735":0,"1743":1,"1744":0,"1745":0,"1746":0,"1748":0,"1749":0,"1750":0,"1752":0,"1753":0,"1754":0,"1766":1,"1767":0,"1768":0,"1774":1,"1775":0,"1776":0,"1778":0,"1779":0,"1781":0,"1782":0,"1790":1,"1791":0,"1800":1,"1801":0,"1810":1,"1811":0,"1819":1,"1820":0,"1828":1,"1829":0,"1837":1,"1838":0,"1839":0,"1841":0,"1849":1,"1850":0,"1858":1,"1859":0,"1860":0,"1861":0,"1871":1,"1872":0,"1873":0,"1874":0,"1875":0,"1876":0,"1878":0,"1879":0,"1880":0,"1882":0,"1884":0,"1887":0,"1888":0,"1889":0,"1890":0,"1891":0,"1892":0,"1894":0,"1895":0,"1898":0,"1899":0,"1900":0,"1901":0,"1903":0,"1905":0,"1907":0,"1908":0,"1911":0,"1912":0,"1916":0,"1924":1,"1925":0,"1926":0,"1927":0,"1928":0,"1929":0,"1932":0,"1933":0,"1934":0,"1946":1,"1947":0,"1948":0,"1949":0,"1950":0,"1951":0,"1954":0,"1957":0,"1959":0,"1960":0,"1961":0,"1963":0,"1965":0,"1966":0,"1969":0,"1970":0,"1978":0,"1986":1,"1987":0,"1988":0,"1990":0,"1991":0,"1994":0,"1995":0,"1996":0,"1997":0,"1998":0,"1999":0,"2000":0,"2003":0,"2004":0,"2005":0,"2007":0,"2008":0,"2011":0,"2012":0,"2015":0,"2024":1,"2025":0,"2026":0,"2027":0,"2029":0,"2053":1,"2054":0,"2055":0,"2056":0,"2058":0,"2067":1,"2068":0,"2069":0,"2071":0,"2072":0,"2074":0,"2075":0,"2103":1,"2104":0,"2113":1,"2114":0,"2115":0,"2116":0,"2123":1,"2124":0,"2133":1,"2134":0,"2135":0,"2137":0,"2140":0,"2143":0,"2144":0,"2146":0,"2147":0,"2148":0,"2150":0,"2151":0,"2152":0,"2155":0,"2156":0,"2157":0,"2158":0,"2161":0,"2165":0,"2167":0,"2168":0,"2169":0,"2171":0,"2172":0,"2173":0,"2174":0,"2175":0,"2179":0,"2180":0,"2183":0,"2184":0,"2185":0,"2186":0,"2187":0,"2188":0,"2189":0,"2190":0,"2194":0,"2195":0,"2197":0,"2204":1,"2205":0,"2206":0,"2207":0,"2208":0,"2209":0,"2211":0,"2212":0,"2213":0,"2224":1,"2225":0,"2240":1,"2241":0,"2250":1,"2251":1,"2252":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/relation-definition.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/relation-definition.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":0,"168":1,"169":0,"170":1,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1,"178":0,"179":1,"180":0,"181":0,"182":0,"183":0,"184":1,"185":1,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":0,"208":0,"209":0,"210":0,"211":0,"212":1,"213":1,"214":0,"215":0,"216":0,"217":0,"218":1,"219":1,"220":0,"221":0,"222":0,"223":0,"224":1,"225":1,"226":0,"227":0,"228":0,"229":0,"230":1,"231":1,"232":0,"233":0,"234":0,"235":0,"236":1,"237":1,"238":0,"239":0,"240":0,"241":0,"242":1,"243":1,"244":0,"245":0,"246":0,"247":0,"248":1,"249":1,"250":0,"251":0,"252":0,"253":0,"254":1,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":1,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":1,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":1,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":1,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":1,"363":0,"364":0,"365":0,"366":0,"367":0,"368":1,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":1,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":1,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":1,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":1,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":1,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":1,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":1,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":1,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":1,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":1,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":1,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":1,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":1,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":1,"680":0,"681":0,"682":0,"683":1,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":1,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":1,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":1,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":1,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":1,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":1,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":1,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":1,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":1,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":1,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":1,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"981":0,"982":0,"983":0,"984":1,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":1,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":1,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":1,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":1,"1100":0,"1101":0,"1102":0,"1103":0,"1104":1,"1105":0,"1106":0,"1107":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":1,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":0,"1165":1,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":1,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":1,"1219":0,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1297":0,"1298":1,"1299":0,"1300":0,"1301":0,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1320":0,"1321":0,"1322":0,"1323":0,"1324":0,"1325":0,"1326":1,"1327":0,"1328":0,"1329":0,"1330":0,"1331":1,"1332":0,"1333":0,"1334":0,"1335":0,"1336":0,"1337":0,"1338":0,"1339":0,"1340":0,"1341":0,"1342":0,"1343":0,"1344":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":1,"1355":0,"1356":0,"1357":0,"1358":0,"1359":0,"1360":0,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1366":0,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1372":0,"1373":0,"1374":1,"1375":0,"1376":0,"1377":0,"1378":0,"1379":0,"1380":0,"1381":0,"1382":0,"1383":1,"1384":0,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":0,"1391":0,"1392":0,"1393":0,"1394":0,"1395":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":0,"1402":0,"1403":0,"1404":0,"1405":0,"1406":0,"1407":0,"1408":0,"1409":0,"1410":0,"1411":0,"1412":0,"1413":0,"1414":0,"1415":0,"1416":0,"1417":0,"1418":0,"1419":0,"1420":0,"1421":0,"1422":1,"1423":0,"1424":0,"1425":0,"1426":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":0,"1432":0,"1433":0,"1434":0,"1435":0,"1436":0,"1437":0,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":1,"1450":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":0,"1459":0,"1460":0,"1461":0,"1462":0,"1463":0,"1464":0,"1465":0,"1466":0,"1467":0,"1468":0,"1469":1,"1470":1,"1471":1,"1472":1,"1473":0,"1474":0,"1475":0,"1476":0,"1477":0,"1478":0,"1479":0,"1480":0,"1481":0,"1482":1,"1483":0,"1484":0,"1485":0,"1486":0,"1487":0,"1488":0,"1489":0,"1490":0,"1491":0,"1492":0,"1493":0,"1494":0,"1495":0,"1496":0,"1497":0,"1498":0,"1499":0,"1500":0,"1501":0,"1502":0,"1503":0,"1504":0,"1505":0,"1506":0,"1507":0,"1508":0,"1509":0,"1510":0,"1511":0,"1512":0,"1513":0,"1514":0,"1515":0,"1516":0,"1517":0,"1518":0,"1519":0,"1520":0,"1521":0,"1522":0,"1523":1,"1524":0,"1525":0,"1526":0,"1527":0,"1528":0,"1529":0,"1530":0,"1531":0,"1532":0,"1533":0,"1534":0,"1535":0,"1536":0,"1537":0,"1538":0,"1539":0,"1540":0,"1541":0,"1542":0,"1543":0,"1544":0,"1545":0,"1546":0,"1547":0,"1548":0,"1549":0,"1550":0,"1551":0,"1552":1,"1553":0,"1554":0,"1555":0,"1556":0,"1557":0,"1558":0,"1559":0,"1560":0,"1561":0,"1562":0,"1563":0,"1564":0,"1565":0,"1566":0,"1567":0,"1568":0,"1569":0,"1570":0,"1571":0,"1572":0,"1573":0,"1574":0,"1575":0,"1576":0,"1577":0,"1578":0,"1579":0,"1580":0,"1581":0,"1582":1,"1583":0,"1584":0,"1585":0,"1586":0,"1587":0,"1588":0,"1589":0,"1590":0,"1591":0,"1592":0,"1593":0,"1594":0,"1595":0,"1596":0,"1597":0,"1598":0,"1599":0,"1600":0,"1601":0,"1602":0,"1603":0,"1604":0,"1605":0,"1606":0,"1607":0,"1608":0,"1609":1,"1610":0,"1611":0,"1612":0,"1613":0,"1614":0,"1615":0,"1616":0,"1617":0,"1618":0,"1619":0,"1620":0,"1621":0,"1622":0,"1623":0,"1624":0,"1625":0,"1626":0,"1627":0,"1628":0,"1629":0,"1630":0,"1631":0,"1632":0,"1633":0,"1634":0,"1635":0,"1636":0,"1637":0,"1638":0,"1639":0,"1640":0,"1641":0,"1642":0,"1643":0,"1644":0,"1645":0,"1646":0,"1647":0,"1648":0,"1649":0,"1650":0,"1651":0,"1652":1,"1653":0,"1654":0,"1655":0,"1656":0,"1657":0,"1658":0,"1659":0,"1660":0,"1661":0,"1662":0,"1663":0,"1664":0,"1665":0,"1666":0,"1667":0,"1668":0,"1669":0,"1670":0,"1671":0,"1672":0,"1673":0,"1674":0,"1675":1,"1676":0,"1677":0,"1678":0,"1679":0,"1680":0,"1681":0,"1682":0,"1683":0,"1684":0,"1685":0,"1686":0,"1687":0,"1688":0,"1689":0,"1690":0,"1691":0,"1692":0,"1693":0,"1694":0,"1695":0,"1696":0,"1697":0,"1698":0,"1699":0,"1700":0,"1701":0,"1702":0,"1703":0,"1704":0,"1705":1,"1706":0,"1707":0,"1708":0,"1709":0,"1710":0,"1711":0,"1712":0,"1713":0,"1714":0,"1715":1,"1716":0,"1717":0,"1718":0,"1719":0,"1720":0,"1721":0,"1722":0,"1723":0,"1724":0,"1725":0,"1726":0,"1727":0,"1728":1,"1729":0,"1730":0,"1731":0,"1732":0,"1733":0,"1734":0,"1735":0,"1736":0,"1737":0,"1738":0,"1739":0,"1740":1,"1741":0,"1742":0,"1743":0,"1744":0,"1745":0,"1746":0,"1747":0,"1748":0,"1749":1,"1750":0,"1751":0,"1752":0,"1753":0,"1754":0,"1755":0,"1756":0,"1757":0,"1758":0,"1759":0,"1760":0,"1761":0,"1762":0,"1763":0,"1764":0,"1765":0,"1766":0,"1767":0,"1768":0,"1769":0,"1770":0,"1771":0,"1772":0,"1773":0,"1774":0,"1775":0,"1776":0,"1777":0,"1778":1,"1779":0,"1780":0,"1781":0,"1782":0,"1783":1,"1784":0,"1785":0,"1786":0,"1787":0,"1788":0,"1789":0,"1790":0,"1791":0,"1792":0,"1793":0,"1794":0,"1795":0,"1796":0,"1797":0,"1798":0,"1799":0,"1800":0,"1801":0,"1802":0,"1803":0,"1804":0,"1805":0,"1806":0,"1807":0,"1808":0,"1809":0,"1810":0,"1811":0,"1812":0,"1813":0,"1814":1,"1815":0,"1816":0,"1817":0,"1818":0,"1819":0,"1820":0,"1821":0,"1822":0,"1823":0,"1824":0,"1825":0,"1826":0,"1827":0,"1828":0,"1829":0,"1830":0,"1831":0,"1832":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0,0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0,0,0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0,0],"178":[0,0],"179":[0,0],"180":[0,0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0,0],"213":[0,0],"214":[0,0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0,0],"286":[0,0],"287":[0,0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0,0],"298":[0,0],"299":[0,0],"300":[0,0],"301":[0,0],"302":[0,0],"303":[0,0],"304":[0,0],"305":[0,0],"306":[0,0],"307":[0,0],"308":[0,0],"309":[0,0],"310":[0,0],"311":[0,0],"312":[0,0],"313":[0,0,0],"314":[0,0],"315":[0,0,0],"316":[0,0],"317":[0,0],"318":[0,0],"319":[0,0],"320":[0,0],"321":[0,0],"322":[0,0],"323":[0,0],"324":[0,0],"325":[0,0],"326":[0,0],"327":[0,0],"328":[0,0],"329":[0,0],"330":[0,0],"331":[0,0],"332":[0,0],"333":[0,0],"334":[0,0],"335":[0,0],"336":[0,0],"337":[0,0],"338":[0,0],"339":[0,0],"340":[0,0],"341":[0,0],"342":[0,0],"343":[0,0],"344":[0,0],"345":[0,0],"346":[0,0],"347":[0,0],"348":[0,0],"349":[0,0],"350":[0,0,0,0],"351":[0,0],"352":[0,0],"353":[0,0],"354":[0,0],"355":[0,0],"356":[0,0],"357":[0,0],"358":[0,0],"359":[0,0],"360":[0,0],"361":[0,0],"362":[0,0],"363":[0,0],"364":[0,0],"365":[0,0],"366":[0,0],"367":[0,0],"368":[0,0],"369":[0,0],"370":[0,0],"371":[0,0],"372":[0,0],"373":[0,0],"374":[0,0],"375":[0,0],"376":[0,0],"377":[0,0],"378":[0,0],"379":[0,0],"380":[0,0],"381":[0,0],"382":[0,0],"383":[0,0],"384":[0,0],"385":[0,0],"386":[0,0],"387":[0,0],"388":[0,0],"389":[0,0],"390":[0,0],"391":[0,0],"392":[0,0],"393":[0,0],"394":[0,0],"395":[0,0],"396":[0,0],"397":[0,0],"398":[0,0],"399":[0,0],"400":[0,0],"401":[0,0],"402":[0,0],"403":[0,0],"404":[0,0],"405":[0,0],"406":[0,0],"407":[0,0],"408":[0,0],"409":[0,0,0],"410":[0,0],"411":[0,0],"412":[0,0],"413":[0,0],"414":[0,0],"415":[0,0],"416":[0,0],"417":[0,0],"418":[0,0],"419":[0,0],"420":[0,0],"421":[0,0],"422":[0,0],"423":[0,0],"424":[0,0],"425":[0,0],"426":[0,0],"427":[0,0],"428":[0,0],"429":[0,0],"430":[0,0],"431":[0,0],"432":[0,0],"433":[0,0],"434":[0,0],"435":[0,0],"436":[0,0],"437":[0,0],"438":[0,0],"439":[0,0],"440":[0,0],"441":[0,0],"442":[0,0],"443":[0,0],"444":[0,0],"445":[0,0],"446":[0,0],"447":[0,0],"448":[0,0],"449":[0,0],"450":[0,0],"451":[0,0],"452":[0,0],"453":[0,0,0],"454":[0,0],"455":[0,0],"456":[0,0],"457":[0,0],"458":[0,0],"459":[0,0],"460":[0,0],"461":[0,0],"462":[0,0],"463":[0,0],"464":[0,0],"465":[0,0],"466":[0,0],"467":[0,0],"468":[0,0],"469":[0,0],"470":[0,0],"471":[0,0],"472":[0,0],"473":[0,0],"474":[0,0],"475":[0,0],"476":[0,0],"477":[0,0],"478":[0,0],"479":[0,0],"480":[0,0],"481":[0,0],"482":[0,0],"483":[0,0],"484":[0,0],"485":[0,0],"486":[0,0],"487":[0,0],"488":[0,0],"489":[0,0],"490":[0,0],"491":[0,0,0],"492":[0,0],"493":[0,0],"494":[0,0],"495":[0,0],"496":[0,0],"497":[0,0],"498":[0,0],"499":[0,0],"500":[0,0],"501":[0,0],"502":[0,0],"503":[0,0],"504":[0,0],"505":[0,0],"506":[0,0],"507":[0,0],"508":[0,0],"509":[0,0],"510":[0,0],"511":[0,0],"512":[0,0],"513":[0,0],"514":[0,0],"515":[0,0],"516":[0,0],"517":[0,0],"518":[0,0],"519":[0,0,0],"520":[0,0],"521":[0,0],"522":[0,0],"523":[0,0],"524":[0,0],"525":[0,0],"526":[0,0],"527":[0,0],"528":[0,0],"529":[0,0],"530":[0,0],"531":[0,0],"532":[0,0],"533":[0,0],"534":[0,0],"535":[0,0],"536":[0,0],"537":[0,0],"538":[0,0],"539":[0,0],"540":[0,0,0],"541":[0,0],"542":[0,0],"543":[0,0],"544":[0,0],"545":[0,0],"546":[0,0],"547":[0,0],"548":[0,0],"549":[0,0],"550":[0,0],"551":[0,0],"552":[0,0],"553":[0,0],"554":[0,0],"555":[0,0],"556":[0,0],"557":[0,0],"558":[0,0],"559":[0,0],"560":[0,0],"561":[0,0],"562":[0,0],"563":[0,0],"564":[0,0],"565":[0,0],"566":[0,0],"567":[0,0],"568":[0,0],"569":[0,0],"570":[0,0],"571":[0,0],"572":[0,0],"573":[0,0],"574":[0,0],"575":[0,0],"576":[0,0],"577":[0,0],"578":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0},"fnMap":{"1":{"name":"normalizeType","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":29}}},"2":{"name":"extendScopeMethods","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":59}}},"3":{"name":"createFunc","line":83,"loc":{"start":{"line":83,"column":4},"end":{"line":83,"column":52}}},"4":{"name":"(anonymous_4)","line":84,"loc":{"start":{"line":84,"column":13},"end":{"line":84,"column":24}}},"5":{"name":"bindRelationMethods","line":101,"loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":67}}},"6":{"name":"(anonymous_6)","line":103,"loc":{"start":{"line":103,"column":31},"end":{"line":103,"column":43}}},"7":{"name":"RelationDefinition","line":114,"loc":{"start":{"line":114,"column":0},"end":{"line":114,"column":40}}},"8":{"name":"(anonymous_8)","line":142,"loc":{"start":{"line":142,"column":38},"end":{"line":142,"column":49}}},"9":{"name":"(anonymous_9)","line":174,"loc":{"start":{"line":174,"column":44},"end":{"line":174,"column":63}}},"10":{"name":"(anonymous_10)","line":183,"loc":{"start":{"line":183,"column":38},"end":{"line":183,"column":49}}},"11":{"name":"(anonymous_11)","line":189,"loc":{"start":{"line":189,"column":13},"end":{"line":189,"column":24}}},"12":{"name":"(anonymous_12)","line":206,"loc":{"start":{"line":206,"column":42},"end":{"line":206,"column":74}}},"13":{"name":"(anonymous_13)","line":234,"loc":{"start":{"line":234,"column":47},"end":{"line":234,"column":76}}},"14":{"name":"Relation","line":280,"loc":{"start":{"line":280,"column":0},"end":{"line":280,"column":45}}},"15":{"name":"(anonymous_15)","line":291,"loc":{"start":{"line":291,"column":32},"end":{"line":291,"column":48}}},"16":{"name":"(anonymous_16)","line":296,"loc":{"start":{"line":296,"column":30},"end":{"line":296,"column":41}}},"17":{"name":"(anonymous_17)","line":300,"loc":{"start":{"line":300,"column":37},"end":{"line":300,"column":58}}},"18":{"name":"(anonymous_18)","line":317,"loc":{"start":{"line":317,"column":27},"end":{"line":317,"column":64}}},"19":{"name":"HasMany","line":329,"loc":{"start":{"line":329,"column":0},"end":{"line":329,"column":44}}},"20":{"name":"(anonymous_20)","line":339,"loc":{"start":{"line":339,"column":36},"end":{"line":339,"column":49}}},"21":{"name":"(anonymous_21)","line":352,"loc":{"start":{"line":352,"column":31},"end":{"line":352,"column":46}}},"22":{"name":"HasManyThrough","line":380,"loc":{"start":{"line":380,"column":0},"end":{"line":380,"column":51}}},"23":{"name":"BelongsTo","line":399,"loc":{"start":{"line":399,"column":0},"end":{"line":399,"column":46}}},"24":{"name":"HasAndBelongsToMany","line":417,"loc":{"start":{"line":417,"column":0},"end":{"line":417,"column":56}}},"25":{"name":"HasOne","line":435,"loc":{"start":{"line":435,"column":0},"end":{"line":435,"column":43}}},"26":{"name":"EmbedsOne","line":453,"loc":{"start":{"line":453,"column":0},"end":{"line":453,"column":46}}},"27":{"name":"EmbedsMany","line":471,"loc":{"start":{"line":471,"column":0},"end":{"line":471,"column":47}}},"28":{"name":"ReferencesMany","line":489,"loc":{"start":{"line":489,"column":0},"end":{"line":489,"column":51}}},"29":{"name":"findBelongsTo","line":504,"loc":{"start":{"line":504,"column":0},"end":{"line":504,"column":50}}},"30":{"name":"(anonymous_30)","line":506,"loc":{"start":{"line":506,"column":9},"end":{"line":506,"column":21}}},"31":{"name":"(anonymous_31)","line":507,"loc":{"start":{"line":507,"column":12},"end":{"line":507,"column":26}}},"32":{"name":"(anonymous_32)","line":512,"loc":{"start":{"line":512,"column":9},"end":{"line":512,"column":23}}},"33":{"name":"lookupModel","line":523,"loc":{"start":{"line":523,"column":0},"end":{"line":523,"column":40}}},"34":{"name":"lookupModelTo","line":535,"loc":{"start":{"line":535,"column":0},"end":{"line":535,"column":64}}},"35":{"name":"polymorphicParams","line":560,"loc":{"start":{"line":560,"column":0},"end":{"line":560,"column":39}}},"36":{"name":"hasMany","line":590,"loc":{"start":{"line":590,"column":29},"end":{"line":590,"column":74}}},"37":{"name":"(anonymous_37)","line":688,"loc":{"start":{"line":688,"column":76},"end":{"line":688,"column":87}}},"38":{"name":"scopeMethod","line":728,"loc":{"start":{"line":728,"column":0},"end":{"line":728,"column":45}}},"39":{"name":"(anonymous_39)","line":733,"loc":{"start":{"line":733,"column":15},"end":{"line":733,"column":26}}},"40":{"name":"sharedMethod","line":745,"loc":{"start":{"line":745,"column":0},"end":{"line":745,"column":70}}},"41":{"name":"(anonymous_41)","line":759,"loc":{"start":{"line":759,"column":29},"end":{"line":759,"column":57}}},"42":{"name":"(anonymous_42)","line":785,"loc":{"start":{"line":785,"column":35},"end":{"line":785,"column":55}}},"43":{"name":"(anonymous_43)","line":813,"loc":{"start":{"line":813,"column":27},"end":{"line":813,"column":55}}},"44":{"name":"(anonymous_44)","line":823,"loc":{"start":{"line":823,"column":22},"end":{"line":823,"column":42}}},"45":{"name":"(anonymous_45)","line":847,"loc":{"start":{"line":847,"column":31},"end":{"line":847,"column":65}}},"46":{"name":"(anonymous_46)","line":853,"loc":{"start":{"line":853,"column":31},"end":{"line":853,"column":51}}},"47":{"name":"(anonymous_47)","line":868,"loc":{"start":{"line":868,"column":32},"end":{"line":868,"column":60}}},"48":{"name":"(anonymous_48)","line":875,"loc":{"start":{"line":875,"column":31},"end":{"line":875,"column":51}}},"49":{"name":"(anonymous_49)","line":885,"loc":{"start":{"line":885,"column":18},"end":{"line":885,"column":39}}},"50":{"name":"(anonymous_50)","line":899,"loc":{"start":{"line":899,"column":11},"end":{"line":899,"column":30}}},"51":{"name":"(anonymous_51)","line":919,"loc":{"start":{"line":919,"column":36},"end":{"line":919,"column":64}}},"52":{"name":"(anonymous_52)","line":932,"loc":{"start":{"line":932,"column":29},"end":{"line":932,"column":51}}},"53":{"name":"(anonymous_53)","line":943,"loc":{"start":{"line":943,"column":36},"end":{"line":943,"column":56}}},"54":{"name":"(anonymous_54)","line":964,"loc":{"start":{"line":964,"column":39},"end":{"line":964,"column":67}}},"55":{"name":"(anonymous_55)","line":977,"loc":{"start":{"line":977,"column":29},"end":{"line":977,"column":51}}},"56":{"name":"(anonymous_56)","line":987,"loc":{"start":{"line":987,"column":31},"end":{"line":987,"column":45}}},"57":{"name":"create","line":999,"loc":{"start":{"line":999,"column":34},"end":{"line":999,"column":69}}},"58":{"name":"(anonymous_58)","line":1018,"loc":{"start":{"line":1018,"column":32},"end":{"line":1018,"column":50}}},"59":{"name":"createRelation","line":1028,"loc":{"start":{"line":1028,"column":4},"end":{"line":1028,"column":38}}},"60":{"name":"(anonymous_60)","line":1036,"loc":{"start":{"line":1036,"column":52},"end":{"line":1036,"column":73}}},"61":{"name":"(anonymous_61)","line":1039,"loc":{"start":{"line":1039,"column":30},"end":{"line":1039,"column":41}}},"62":{"name":"(anonymous_62)","line":1065,"loc":{"start":{"line":1065,"column":31},"end":{"line":1065,"column":67}}},"63":{"name":"(anonymous_63)","line":1104,"loc":{"start":{"line":1104,"column":51},"end":{"line":1104,"column":69}}},"64":{"name":"(anonymous_64)","line":1119,"loc":{"start":{"line":1119,"column":34},"end":{"line":1119,"column":64}}},"65":{"name":"(anonymous_65)","line":1146,"loc":{"start":{"line":1146,"column":44},"end":{"line":1146,"column":62}}},"66":{"name":"(anonymous_66)","line":1156,"loc":{"start":{"line":1156,"column":34},"end":{"line":1156,"column":64}}},"67":{"name":"(anonymous_67)","line":1184,"loc":{"start":{"line":1184,"column":48},"end":{"line":1184,"column":62}}},"68":{"name":"(anonymous_68)","line":1217,"loc":{"start":{"line":1217,"column":31},"end":{"line":1217,"column":68}}},"69":{"name":"(anonymous_69)","line":1276,"loc":{"start":{"line":1276,"column":9},"end":{"line":1276,"column":20}}},"70":{"name":"(anonymous_70)","line":1295,"loc":{"start":{"line":1295,"column":11},"end":{"line":1295,"column":22}}},"71":{"name":"(anonymous_71)","line":1304,"loc":{"start":{"line":1304,"column":29},"end":{"line":1304,"column":68}}},"72":{"name":"(anonymous_72)","line":1323,"loc":{"start":{"line":1323,"column":43},"end":{"line":1323,"column":70}}},"73":{"name":"(anonymous_73)","line":1330,"loc":{"start":{"line":1330,"column":36},"end":{"line":1330,"column":56}}},"74":{"name":"(anonymous_74)","line":1343,"loc":{"start":{"line":1343,"column":28},"end":{"line":1343,"column":54}}},"75":{"name":"(anonymous_75)","line":1349,"loc":{"start":{"line":1349,"column":29},"end":{"line":1349,"column":68}}},"76":{"name":"(anonymous_76)","line":1356,"loc":{"start":{"line":1356,"column":22},"end":{"line":1356,"column":42}}},"77":{"name":"(anonymous_77)","line":1366,"loc":{"start":{"line":1366,"column":30},"end":{"line":1366,"column":52}}},"78":{"name":"(anonymous_78)","line":1378,"loc":{"start":{"line":1378,"column":22},"end":{"line":1378,"column":49}}},"79":{"name":"(anonymous_79)","line":1381,"loc":{"start":{"line":1381,"column":34},"end":{"line":1381,"column":61}}},"80":{"name":"(anonymous_80)","line":1403,"loc":{"start":{"line":1403,"column":30},"end":{"line":1403,"column":67}}},"81":{"name":"(anonymous_81)","line":1481,"loc":{"start":{"line":1481,"column":38},"end":{"line":1481,"column":58}}},"82":{"name":"(anonymous_82)","line":1521,"loc":{"start":{"line":1521,"column":31},"end":{"line":1521,"column":53}}},"83":{"name":"hasAndBelongsToMany","line":1549,"loc":{"start":{"line":1549,"column":41},"end":{"line":1549,"column":98}}},"84":{"name":"(anonymous_84)","line":1607,"loc":{"start":{"line":1607,"column":28},"end":{"line":1607,"column":65}}},"85":{"name":"(anonymous_85)","line":1647,"loc":{"start":{"line":1647,"column":9},"end":{"line":1647,"column":20}}},"86":{"name":"(anonymous_86)","line":1664,"loc":{"start":{"line":1664,"column":50},"end":{"line":1664,"column":61}}},"87":{"name":"(anonymous_87)","line":1669,"loc":{"start":{"line":1669,"column":53},"end":{"line":1669,"column":64}}},"88":{"name":"(anonymous_88)","line":1674,"loc":{"start":{"line":1674,"column":53},"end":{"line":1674,"column":64}}},"89":{"name":"(anonymous_89)","line":1679,"loc":{"start":{"line":1679,"column":54},"end":{"line":1679,"column":65}}},"90":{"name":"(anonymous_90)","line":1694,"loc":{"start":{"line":1694,"column":26},"end":{"line":1694,"column":65}}},"91":{"name":"(anonymous_91)","line":1721,"loc":{"start":{"line":1721,"column":4},"end":{"line":1721,"column":40}}},"92":{"name":"(anonymous_92)","line":1738,"loc":{"start":{"line":1738,"column":26},"end":{"line":1738,"column":65}}},"93":{"name":"(anonymous_93)","line":1747,"loc":{"start":{"line":1747,"column":13},"end":{"line":1747,"column":40}}},"94":{"name":"(anonymous_94)","line":1758,"loc":{"start":{"line":1758,"column":27},"end":{"line":1758,"column":49}}},"95":{"name":"(anonymous_95)","line":1766,"loc":{"start":{"line":1766,"column":13},"end":{"line":1766,"column":40}}},"96":{"name":"(anonymous_96)","line":1783,"loc":{"start":{"line":1783,"column":27},"end":{"line":1783,"column":66}}},"97":{"name":"(anonymous_97)","line":1802,"loc":{"start":{"line":1802,"column":19},"end":{"line":1802,"column":34}}},"98":{"name":"(anonymous_98)","line":1807,"loc":{"start":{"line":1807,"column":14},"end":{"line":1807,"column":33}}},"99":{"name":"(anonymous_99)","line":1817,"loc":{"start":{"line":1817,"column":43},"end":{"line":1817,"column":70}}},"100":{"name":"(anonymous_100)","line":1833,"loc":{"start":{"line":1833,"column":51},"end":{"line":1833,"column":77}}},"101":{"name":"(anonymous_101)","line":1857,"loc":{"start":{"line":1857,"column":27},"end":{"line":1857,"column":64}}},"102":{"name":"(anonymous_102)","line":1894,"loc":{"start":{"line":1894,"column":38},"end":{"line":1894,"column":58}}},"103":{"name":"(anonymous_103)","line":1935,"loc":{"start":{"line":1935,"column":28},"end":{"line":1935,"column":50}}},"104":{"name":"(anonymous_104)","line":1946,"loc":{"start":{"line":1946,"column":31},"end":{"line":1946,"column":68}}},"105":{"name":"(anonymous_105)","line":1979,"loc":{"start":{"line":1979,"column":19},"end":{"line":1979,"column":30}}},"106":{"name":"(anonymous_106)","line":1981,"loc":{"start":{"line":1981,"column":20},"end":{"line":1981,"column":34}}},"107":{"name":"(anonymous_107)","line":1982,"loc":{"start":{"line":1982,"column":13},"end":{"line":1982,"column":24}}},"108":{"name":"(anonymous_108)","line":1992,"loc":{"start":{"line":1992,"column":37},"end":{"line":1992,"column":51}}},"109":{"name":"(anonymous_109)","line":2009,"loc":{"start":{"line":2009,"column":9},"end":{"line":2009,"column":20}}},"110":{"name":"(anonymous_110)","line":2026,"loc":{"start":{"line":2026,"column":50},"end":{"line":2026,"column":61}}},"111":{"name":"(anonymous_111)","line":2031,"loc":{"start":{"line":2031,"column":53},"end":{"line":2031,"column":64}}},"112":{"name":"(anonymous_112)","line":2036,"loc":{"start":{"line":2036,"column":53},"end":{"line":2036,"column":64}}},"113":{"name":"(anonymous_113)","line":2041,"loc":{"start":{"line":2041,"column":54},"end":{"line":2041,"column":65}}},"114":{"name":"(anonymous_114)","line":2049,"loc":{"start":{"line":2049,"column":30},"end":{"line":2049,"column":67}}},"115":{"name":"(anonymous_115)","line":2086,"loc":{"start":{"line":2086,"column":21},"end":{"line":2086,"column":32}}},"116":{"name":"(anonymous_116)","line":2094,"loc":{"start":{"line":2094,"column":46},"end":{"line":2094,"column":61}}},"117":{"name":"(anonymous_117)","line":2105,"loc":{"start":{"line":2105,"column":25},"end":{"line":2105,"column":56}}},"118":{"name":"(anonymous_118)","line":2109,"loc":{"start":{"line":2109,"column":25},"end":{"line":2109,"column":50}}},"119":{"name":"(anonymous_119)","line":2115,"loc":{"start":{"line":2115,"column":27},"end":{"line":2115,"column":52}}},"120":{"name":"(anonymous_120)","line":2123,"loc":{"start":{"line":2123,"column":19},"end":{"line":2123,"column":62}}},"121":{"name":"(anonymous_121)","line":2126,"loc":{"start":{"line":2126,"column":15},"end":{"line":2126,"column":30}}},"122":{"name":"(anonymous_122)","line":2127,"loc":{"start":{"line":2127,"column":34},"end":{"line":2127,"column":49}}},"123":{"name":"(anonymous_123)","line":2128,"loc":{"start":{"line":2128,"column":43},"end":{"line":2128,"column":63}}},"124":{"name":"(anonymous_124)","line":2139,"loc":{"start":{"line":2139,"column":36},"end":{"line":2139,"column":60}}},"125":{"name":"(anonymous_125)","line":2146,"loc":{"start":{"line":2146,"column":29},"end":{"line":2146,"column":68}}},"126":{"name":"(anonymous_126)","line":2166,"loc":{"start":{"line":2166,"column":23},"end":{"line":2166,"column":42}}},"127":{"name":"(anonymous_127)","line":2169,"loc":{"start":{"line":2169,"column":34},"end":{"line":2169,"column":48}}},"128":{"name":"(anonymous_128)","line":2174,"loc":{"start":{"line":2174,"column":23},"end":{"line":2174,"column":37}}},"129":{"name":"(anonymous_129)","line":2181,"loc":{"start":{"line":2181,"column":23},"end":{"line":2181,"column":37}}},"130":{"name":"(anonymous_130)","line":2192,"loc":{"start":{"line":2192,"column":54},"end":{"line":2192,"column":68}}},"131":{"name":"(anonymous_131)","line":2194,"loc":{"start":{"line":2194,"column":32},"end":{"line":2194,"column":43}}},"132":{"name":"(anonymous_132)","line":2201,"loc":{"start":{"line":2201,"column":25},"end":{"line":2201,"column":36}}},"133":{"name":"(anonymous_133)","line":2205,"loc":{"start":{"line":2205,"column":23},"end":{"line":2205,"column":43}}},"134":{"name":"(anonymous_134)","line":2208,"loc":{"start":{"line":2208,"column":59},"end":{"line":2208,"column":73}}},"135":{"name":"(anonymous_135)","line":2218,"loc":{"start":{"line":2218,"column":28},"end":{"line":2218,"column":54}}},"136":{"name":"(anonymous_136)","line":2249,"loc":{"start":{"line":2249,"column":29},"end":{"line":2249,"column":68}}},"137":{"name":"(anonymous_137)","line":2274,"loc":{"start":{"line":2274,"column":54},"end":{"line":2274,"column":68}}},"138":{"name":"(anonymous_138)","line":2284,"loc":{"start":{"line":2284,"column":25},"end":{"line":2284,"column":45}}},"139":{"name":"(anonymous_139)","line":2293,"loc":{"start":{"line":2293,"column":57},"end":{"line":2293,"column":71}}},"140":{"name":"(anonymous_140)","line":2306,"loc":{"start":{"line":2306,"column":30},"end":{"line":2306,"column":52}}},"141":{"name":"(anonymous_141)","line":2331,"loc":{"start":{"line":2331,"column":54},"end":{"line":2331,"column":68}}},"142":{"name":"(anonymous_142)","line":2333,"loc":{"start":{"line":2333,"column":23},"end":{"line":2333,"column":45}}},"143":{"name":"embedsMany","line":2342,"loc":{"start":{"line":2342,"column":32},"end":{"line":2342,"column":80}}},"144":{"name":"(anonymous_144)","line":2372,"loc":{"start":{"line":2372,"column":30},"end":{"line":2372,"column":41}}},"145":{"name":"(anonymous_145)","line":2376,"loc":{"start":{"line":2376,"column":37},"end":{"line":2376,"column":51}}},"146":{"name":"(anonymous_146)","line":2380,"loc":{"start":{"line":2380,"column":27},"end":{"line":2380,"column":47}}},"147":{"name":"(anonymous_147)","line":2393,"loc":{"start":{"line":2393,"column":37},"end":{"line":2393,"column":51}}},"148":{"name":"(anonymous_148)","line":2395,"loc":{"start":{"line":2395,"column":33},"end":{"line":2395,"column":45}}},"149":{"name":"(anonymous_149)","line":2396,"loc":{"start":{"line":2396,"column":33},"end":{"line":2396,"column":51}}},"150":{"name":"(anonymous_150)","line":2408,"loc":{"start":{"line":2408,"column":37},"end":{"line":2408,"column":51}}},"151":{"name":"(anonymous_151)","line":2412,"loc":{"start":{"line":2412,"column":27},"end":{"line":2412,"column":47}}},"152":{"name":"(anonymous_152)","line":2482,"loc":{"start":{"line":2482,"column":80},"end":{"line":2482,"column":91}}},"153":{"name":"(anonymous_153)","line":2491,"loc":{"start":{"line":2491,"column":47},"end":{"line":2491,"column":62}}},"154":{"name":"(anonymous_154)","line":2502,"loc":{"start":{"line":2502,"column":25},"end":{"line":2502,"column":56}}},"155":{"name":"(anonymous_155)","line":2510,"loc":{"start":{"line":2510,"column":24},"end":{"line":2510,"column":49}}},"156":{"name":"(anonymous_156)","line":2518,"loc":{"start":{"line":2518,"column":19},"end":{"line":2518,"column":62}}},"157":{"name":"(anonymous_157)","line":2521,"loc":{"start":{"line":2521,"column":15},"end":{"line":2521,"column":30}}},"158":{"name":"(anonymous_158)","line":2522,"loc":{"start":{"line":2522,"column":34},"end":{"line":2522,"column":49}}},"159":{"name":"(anonymous_159)","line":2523,"loc":{"start":{"line":2523,"column":43},"end":{"line":2523,"column":63}}},"160":{"name":"(anonymous_160)","line":2535,"loc":{"start":{"line":2535,"column":37},"end":{"line":2535,"column":61}}},"161":{"name":"(anonymous_161)","line":2542,"loc":{"start":{"line":2542,"column":31},"end":{"line":2542,"column":91}}},"162":{"name":"(anonymous_162)","line":2573,"loc":{"start":{"line":2573,"column":22},"end":{"line":2573,"column":37}}},"163":{"name":"(anonymous_163)","line":2577,"loc":{"start":{"line":2577,"column":23},"end":{"line":2577,"column":34}}},"164":{"name":"(anonymous_164)","line":2584,"loc":{"start":{"line":2584,"column":32},"end":{"line":2584,"column":60}}},"165":{"name":"(anonymous_165)","line":2596,"loc":{"start":{"line":2596,"column":13},"end":{"line":2596,"column":26}}},"166":{"name":"(anonymous_166)","line":2608,"loc":{"start":{"line":2608,"column":21},"end":{"line":2608,"column":32}}},"167":{"name":"(anonymous_167)","line":2616,"loc":{"start":{"line":2616,"column":30},"end":{"line":2616,"column":58}}},"168":{"name":"(anonymous_168)","line":2623,"loc":{"start":{"line":2623,"column":42},"end":{"line":2623,"column":62}}},"169":{"name":"(anonymous_169)","line":2629,"loc":{"start":{"line":2629,"column":34},"end":{"line":2629,"column":68}}},"170":{"name":"(anonymous_170)","line":2659,"loc":{"start":{"line":2659,"column":54},"end":{"line":2659,"column":68}}},"171":{"name":"(anonymous_171)","line":2666,"loc":{"start":{"line":2666,"column":32},"end":{"line":2666,"column":43}}},"172":{"name":"(anonymous_172)","line":2680,"loc":{"start":{"line":2680,"column":8},"end":{"line":2680,"column":22}}},"173":{"name":"(anonymous_173)","line":2682,"loc":{"start":{"line":2682,"column":59},"end":{"line":2682,"column":73}}},"174":{"name":"(anonymous_174)","line":2687,"loc":{"start":{"line":2687,"column":57},"end":{"line":2687,"column":71}}},"175":{"name":"(anonymous_175)","line":2694,"loc":{"start":{"line":2694,"column":21},"end":{"line":2694,"column":32}}},"176":{"name":"(anonymous_176)","line":2701,"loc":{"start":{"line":2701,"column":35},"end":{"line":2701,"column":63}}},"177":{"name":"(anonymous_177)","line":2722,"loc":{"start":{"line":2722,"column":56},"end":{"line":2722,"column":70}}},"178":{"name":"(anonymous_178)","line":2729,"loc":{"start":{"line":2729,"column":22},"end":{"line":2729,"column":36}}},"179":{"name":"(anonymous_179)","line":2731,"loc":{"start":{"line":2731,"column":61},"end":{"line":2731,"column":75}}},"180":{"name":"(anonymous_180)","line":2742,"loc":{"start":{"line":2742,"column":34},"end":{"line":2742,"column":63}}},"181":{"name":"(anonymous_181)","line":2760,"loc":{"start":{"line":2760,"column":17},"end":{"line":2760,"column":29}}},"182":{"name":"(anonymous_182)","line":2768,"loc":{"start":{"line":2768,"column":20},"end":{"line":2768,"column":34}}},"183":{"name":"(anonymous_183)","line":2780,"loc":{"start":{"line":2780,"column":26},"end":{"line":2780,"column":46}}},"184":{"name":"(anonymous_184)","line":2790,"loc":{"start":{"line":2790,"column":21},"end":{"line":2790,"column":32}}},"185":{"name":"(anonymous_185)","line":2798,"loc":{"start":{"line":2798,"column":30},"end":{"line":2798,"column":69}}},"186":{"name":"(anonymous_186)","line":2821,"loc":{"start":{"line":2821,"column":23},"end":{"line":2821,"column":42}}},"187":{"name":"(anonymous_187)","line":2824,"loc":{"start":{"line":2824,"column":34},"end":{"line":2824,"column":48}}},"188":{"name":"(anonymous_188)","line":2829,"loc":{"start":{"line":2829,"column":31},"end":{"line":2829,"column":45}}},"189":{"name":"(anonymous_189)","line":2836,"loc":{"start":{"line":2836,"column":14},"end":{"line":2836,"column":28}}},"190":{"name":"(anonymous_190)","line":2843,"loc":{"start":{"line":2843,"column":23},"end":{"line":2843,"column":34}}},"191":{"name":"(anonymous_191)","line":2853,"loc":{"start":{"line":2853,"column":56},"end":{"line":2853,"column":70}}},"192":{"name":"(anonymous_192)","line":2855,"loc":{"start":{"line":2855,"column":23},"end":{"line":2855,"column":43}}},"193":{"name":"(anonymous_193)","line":2857,"loc":{"start":{"line":2857,"column":59},"end":{"line":2857,"column":73}}},"194":{"name":"(anonymous_194)","line":2867,"loc":{"start":{"line":2867,"column":29},"end":{"line":2867,"column":55}}},"195":{"name":"(anonymous_195)","line":2886,"loc":{"start":{"line":2886,"column":31},"end":{"line":2886,"column":43}}},"196":{"name":"(anonymous_196)","line":2918,"loc":{"start":{"line":2918,"column":27},"end":{"line":2918,"column":63}}},"197":{"name":"(anonymous_197)","line":2954,"loc":{"start":{"line":2954,"column":45},"end":{"line":2954,"column":64}}},"198":{"name":"(anonymous_198)","line":2958,"loc":{"start":{"line":2958,"column":25},"end":{"line":2958,"column":39}}},"199":{"name":"(anonymous_199)","line":2972,"loc":{"start":{"line":2972,"column":30},"end":{"line":2972,"column":60}}},"200":{"name":"(anonymous_200)","line":3003,"loc":{"start":{"line":3003,"column":50},"end":{"line":3003,"column":71}}},"201":{"name":"(anonymous_201)","line":3006,"loc":{"start":{"line":3006,"column":18},"end":{"line":3006,"column":33}}},"202":{"name":"(anonymous_202)","line":3010,"loc":{"start":{"line":3010,"column":32},"end":{"line":3010,"column":46}}},"203":{"name":"referencesMany","line":3017,"loc":{"start":{"line":3017,"column":36},"end":{"line":3017,"column":88}}},"204":{"name":"(anonymous_204)","line":3041,"loc":{"start":{"line":3041,"column":29},"end":{"line":3041,"column":40}}},"205":{"name":"(anonymous_205)","line":3044,"loc":{"start":{"line":3044,"column":35},"end":{"line":3044,"column":49}}},"206":{"name":"(anonymous_206)","line":3046,"loc":{"start":{"line":3046,"column":31},"end":{"line":3046,"column":49}}},"207":{"name":"(anonymous_207)","line":3097,"loc":{"start":{"line":3097,"column":80},"end":{"line":3097,"column":91}}},"208":{"name":"(anonymous_208)","line":3106,"loc":{"start":{"line":3106,"column":35},"end":{"line":3106,"column":95}}},"209":{"name":"(anonymous_209)","line":3142,"loc":{"start":{"line":3142,"column":36},"end":{"line":3142,"column":64}}},"210":{"name":"(anonymous_210)","line":3168,"loc":{"start":{"line":3168,"column":45},"end":{"line":3168,"column":70}}},"211":{"name":"(anonymous_211)","line":3194,"loc":{"start":{"line":3194,"column":34},"end":{"line":3194,"column":62}}},"212":{"name":"(anonymous_212)","line":3204,"loc":{"start":{"line":3204,"column":19},"end":{"line":3204,"column":30}}},"213":{"name":"(anonymous_213)","line":3208,"loc":{"start":{"line":3208,"column":38},"end":{"line":3208,"column":72}}},"214":{"name":"(anonymous_214)","line":3221,"loc":{"start":{"line":3221,"column":31},"end":{"line":3221,"column":51}}},"215":{"name":"(anonymous_215)","line":3228,"loc":{"start":{"line":3228,"column":39},"end":{"line":3228,"column":67}}},"216":{"name":"(anonymous_216)","line":3236,"loc":{"start":{"line":3236,"column":22},"end":{"line":3236,"column":42}}},"217":{"name":"(anonymous_217)","line":3238,"loc":{"start":{"line":3238,"column":22},"end":{"line":3238,"column":41}}},"218":{"name":"(anonymous_218)","line":3245,"loc":{"start":{"line":3245,"column":30},"end":{"line":3245,"column":59}}},"219":{"name":"(anonymous_219)","line":3258,"loc":{"start":{"line":3258,"column":34},"end":{"line":3258,"column":73}}},"220":{"name":"(anonymous_220)","line":3283,"loc":{"start":{"line":3283,"column":21},"end":{"line":3283,"column":41}}},"221":{"name":"(anonymous_221)","line":3299,"loc":{"start":{"line":3299,"column":20},"end":{"line":3299,"column":45}}},"222":{"name":"(anonymous_222)","line":3306,"loc":{"start":{"line":3306,"column":33},"end":{"line":3306,"column":59}}},"223":{"name":"(anonymous_223)","line":3319,"loc":{"start":{"line":3319,"column":31},"end":{"line":3319,"column":61}}},"224":{"name":"(anonymous_224)","line":3333,"loc":{"start":{"line":3333,"column":15},"end":{"line":3333,"column":36}}},"225":{"name":"(anonymous_225)","line":3348,"loc":{"start":{"line":3348,"column":52},"end":{"line":3348,"column":66}}},"226":{"name":"(anonymous_226)","line":3363,"loc":{"start":{"line":3363,"column":37},"end":{"line":3363,"column":57}}},"227":{"name":"(anonymous_227)","line":3375,"loc":{"start":{"line":3375,"column":34},"end":{"line":3375,"column":64}}},"228":{"name":"(anonymous_228)","line":3396,"loc":{"start":{"line":3396,"column":52},"end":{"line":3396,"column":72}}},"229":{"name":"(anonymous_229)","line":3400,"loc":{"start":{"line":3400,"column":21},"end":{"line":3400,"column":32}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":27}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":29}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":52}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":38}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":34}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":43}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":61}},"12":{"start":{"line":22,"column":0},"end":{"line":22,"column":66}},"13":{"start":{"line":23,"column":0},"end":{"line":23,"column":51}},"14":{"start":{"line":25,"column":0},"end":{"line":33,"column":2}},"15":{"start":{"line":35,"column":0},"end":{"line":44,"column":2}},"16":{"start":{"line":46,"column":0},"end":{"line":46,"column":28}},"17":{"start":{"line":47,"column":0},"end":{"line":47,"column":48}},"18":{"start":{"line":49,"column":0},"end":{"line":49,"column":38}},"19":{"start":{"line":50,"column":0},"end":{"line":50,"column":42}},"20":{"start":{"line":52,"column":0},"end":{"line":52,"column":26}},"21":{"start":{"line":53,"column":0},"end":{"line":53,"column":40}},"22":{"start":{"line":54,"column":0},"end":{"line":54,"column":24}},"23":{"start":{"line":55,"column":0},"end":{"line":55,"column":50}},"24":{"start":{"line":56,"column":0},"end":{"line":56,"column":30}},"25":{"start":{"line":57,"column":0},"end":{"line":57,"column":40}},"26":{"start":{"line":58,"column":0},"end":{"line":58,"column":30}},"27":{"start":{"line":59,"column":0},"end":{"line":59,"column":32}},"28":{"start":{"line":61,"column":0},"end":{"line":72,"column":1}},"29":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"30":{"start":{"line":63,"column":4},"end":{"line":63,"column":16}},"31":{"start":{"line":65,"column":2},"end":{"line":65,"column":30}},"32":{"start":{"line":66,"column":2},"end":{"line":70,"column":3}},"33":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"34":{"start":{"line":68,"column":6},"end":{"line":68,"column":16}},"35":{"start":{"line":71,"column":2},"end":{"line":71,"column":14}},"36":{"start":{"line":74,"column":0},"end":{"line":99,"column":1}},"37":{"start":{"line":75,"column":2},"end":{"line":75,"column":25}},"38":{"start":{"line":76,"column":2},"end":{"line":76,"column":55}},"39":{"start":{"line":77,"column":2},"end":{"line":79,"column":3}},"40":{"start":{"line":78,"column":4},"end":{"line":78,"column":51}},"41":{"start":{"line":80,"column":2},"end":{"line":97,"column":3}},"42":{"start":{"line":81,"column":4},"end":{"line":81,"column":70}},"43":{"start":{"line":82,"column":9},"end":{"line":97,"column":3}},"44":{"start":{"line":83,"column":4},"end":{"line":88,"column":5}},"45":{"start":{"line":84,"column":6},"end":{"line":87,"column":8}},"46":{"start":{"line":85,"column":8},"end":{"line":85,"column":59}},"47":{"start":{"line":86,"column":8},"end":{"line":86,"column":57}},"48":{"start":{"line":89,"column":4},"end":{"line":96,"column":5}},"49":{"start":{"line":90,"column":6},"end":{"line":90,"column":36}},"50":{"start":{"line":91,"column":6},"end":{"line":91,"column":78}},"51":{"start":{"line":92,"column":6},"end":{"line":94,"column":7}},"52":{"start":{"line":93,"column":8},"end":{"line":93,"column":62}},"53":{"start":{"line":95,"column":6},"end":{"line":95,"column":30}},"54":{"start":{"line":98,"column":2},"end":{"line":98,"column":40}},"55":{"start":{"line":101,"column":0},"end":{"line":107,"column":1}},"56":{"start":{"line":102,"column":2},"end":{"line":102,"column":41}},"57":{"start":{"line":103,"column":2},"end":{"line":106,"column":5}},"58":{"start":{"line":104,"column":4},"end":{"line":104,"column":49}},"59":{"start":{"line":104,"column":42},"end":{"line":104,"column":49}},"60":{"start":{"line":105,"column":4},"end":{"line":105,"column":50}},"61":{"start":{"line":114,"column":0},"end":{"line":140,"column":1}},"62":{"start":{"line":115,"column":2},"end":{"line":117,"column":3}},"63":{"start":{"line":116,"column":4},"end":{"line":116,"column":46}},"64":{"start":{"line":118,"column":2},"end":{"line":118,"column":32}},"65":{"start":{"line":119,"column":2},"end":{"line":119,"column":30}},"66":{"start":{"line":120,"column":2},"end":{"line":120,"column":48}},"67":{"start":{"line":121,"column":2},"end":{"line":121,"column":45}},"68":{"start":{"line":122,"column":2},"end":{"line":122,"column":65}},"69":{"start":{"line":123,"column":2},"end":{"line":123,"column":40}},"70":{"start":{"line":124,"column":2},"end":{"line":124,"column":53}},"71":{"start":{"line":125,"column":2},"end":{"line":125,"column":36}},"72":{"start":{"line":126,"column":2},"end":{"line":126,"column":36}},"73":{"start":{"line":127,"column":2},"end":{"line":127,"column":32}},"74":{"start":{"line":128,"column":2},"end":{"line":128,"column":44}},"75":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"76":{"start":{"line":130,"column":4},"end":{"line":130,"column":53}},"77":{"start":{"line":132,"column":2},"end":{"line":132,"column":46}},"78":{"start":{"line":133,"column":2},"end":{"line":133,"column":42}},"79":{"start":{"line":134,"column":2},"end":{"line":134,"column":38}},"80":{"start":{"line":135,"column":2},"end":{"line":135,"column":48}},"81":{"start":{"line":136,"column":2},"end":{"line":136,"column":42}},"82":{"start":{"line":137,"column":2},"end":{"line":137,"column":32}},"83":{"start":{"line":138,"column":2},"end":{"line":138,"column":41}},"84":{"start":{"line":139,"column":2},"end":{"line":139,"column":42}},"85":{"start":{"line":142,"column":0},"end":{"line":167,"column":2}},"86":{"start":{"line":143,"column":2},"end":{"line":143,"column":57}},"87":{"start":{"line":145,"column":2},"end":{"line":145,"column":59}},"88":{"start":{"line":146,"column":2},"end":{"line":148,"column":3}},"89":{"start":{"line":147,"column":4},"end":{"line":147,"column":34}},"90":{"start":{"line":150,"column":2},"end":{"line":158,"column":4}},"91":{"start":{"line":159,"column":2},"end":{"line":162,"column":3}},"92":{"start":{"line":160,"column":4},"end":{"line":160,"column":52}},"93":{"start":{"line":161,"column":4},"end":{"line":161,"column":38}},"94":{"start":{"line":163,"column":2},"end":{"line":165,"column":3}},"95":{"start":{"line":164,"column":4},"end":{"line":164,"column":40}},"96":{"start":{"line":166,"column":2},"end":{"line":166,"column":14}},"97":{"start":{"line":174,"column":0},"end":{"line":199,"column":2}},"98":{"start":{"line":175,"column":2},"end":{"line":175,"column":49}},"99":{"start":{"line":176,"column":2},"end":{"line":176,"column":31}},"100":{"start":{"line":177,"column":2},"end":{"line":177,"column":33}},"101":{"start":{"line":178,"column":2},"end":{"line":178,"column":24}},"102":{"start":{"line":179,"column":2},"end":{"line":179,"column":13}},"103":{"start":{"line":180,"column":2},"end":{"line":193,"column":3}},"104":{"start":{"line":181,"column":4},"end":{"line":181,"column":49}},"105":{"start":{"line":182,"column":4},"end":{"line":182,"column":82}},"106":{"start":{"line":182,"column":16},"end":{"line":182,"column":82}},"107":{"start":{"line":183,"column":4},"end":{"line":186,"column":7}},"108":{"start":{"line":184,"column":6},"end":{"line":184,"column":57}},"109":{"start":{"line":185,"column":6},"end":{"line":185,"column":43}},"110":{"start":{"line":188,"column":4},"end":{"line":188,"column":34}},"111":{"start":{"line":189,"column":4},"end":{"line":192,"column":6}},"112":{"start":{"line":190,"column":6},"end":{"line":190,"column":35}},"113":{"start":{"line":191,"column":6},"end":{"line":191,"column":45}},"114":{"start":{"line":194,"column":2},"end":{"line":197,"column":3}},"115":{"start":{"line":195,"column":4},"end":{"line":195,"column":47}},"116":{"start":{"line":196,"column":4},"end":{"line":196,"column":68}},"117":{"start":{"line":198,"column":2},"end":{"line":198,"column":16}},"118":{"start":{"line":206,"column":0},"end":{"line":227,"column":2}},"119":{"start":{"line":207,"column":2},"end":{"line":207,"column":24}},"120":{"start":{"line":208,"column":2},"end":{"line":208,"column":36}},"121":{"start":{"line":209,"column":2},"end":{"line":217,"column":3}},"122":{"start":{"line":211,"column":4},"end":{"line":211,"column":55}},"123":{"start":{"line":212,"column":4},"end":{"line":216,"column":5}},"124":{"start":{"line":213,"column":6},"end":{"line":213,"column":59}},"125":{"start":{"line":215,"column":6},"end":{"line":215,"column":61}},"126":{"start":{"line":218,"column":2},"end":{"line":218,"column":12}},"127":{"start":{"line":219,"column":2},"end":{"line":223,"column":3}},"128":{"start":{"line":220,"column":4},"end":{"line":220,"column":57}},"129":{"start":{"line":222,"column":4},"end":{"line":222,"column":23}},"130":{"start":{"line":224,"column":2},"end":{"line":226,"column":3}},"131":{"start":{"line":225,"column":4},"end":{"line":225,"column":30}},"132":{"start":{"line":234,"column":0},"end":{"line":270,"column":2}},"133":{"start":{"line":235,"column":2},"end":{"line":235,"column":43}},"134":{"start":{"line":236,"column":2},"end":{"line":239,"column":3}},"135":{"start":{"line":237,"column":4},"end":{"line":237,"column":17}},"136":{"start":{"line":238,"column":4},"end":{"line":238,"column":27}},"137":{"start":{"line":240,"column":2},"end":{"line":243,"column":3}},"138":{"start":{"line":241,"column":4},"end":{"line":241,"column":43}},"139":{"start":{"line":242,"column":4},"end":{"line":242,"column":44}},"140":{"start":{"line":244,"column":2},"end":{"line":244,"column":13}},"141":{"start":{"line":245,"column":2},"end":{"line":260,"column":3}},"142":{"start":{"line":246,"column":4},"end":{"line":246,"column":58}},"143":{"start":{"line":247,"column":4},"end":{"line":249,"column":5}},"144":{"start":{"line":248,"column":6},"end":{"line":248,"column":26}},"145":{"start":{"line":250,"column":9},"end":{"line":260,"column":3}},"146":{"start":{"line":251,"column":4},"end":{"line":254,"column":5}},"147":{"start":{"line":252,"column":6},"end":{"line":252,"column":31}},"148":{"start":{"line":253,"column":6},"end":{"line":253,"column":32}},"149":{"start":{"line":255,"column":9},"end":{"line":260,"column":3}},"150":{"start":{"line":256,"column":4},"end":{"line":259,"column":5}},"151":{"start":{"line":257,"column":6},"end":{"line":257,"column":31}},"152":{"start":{"line":258,"column":6},"end":{"line":258,"column":30}},"153":{"start":{"line":261,"column":2},"end":{"line":269,"column":3}},"154":{"start":{"line":263,"column":4},"end":{"line":263,"column":55}},"155":{"start":{"line":264,"column":4},"end":{"line":268,"column":5}},"156":{"start":{"line":265,"column":6},"end":{"line":265,"column":53}},"157":{"start":{"line":267,"column":6},"end":{"line":267,"column":55}},"158":{"start":{"line":280,"column":0},"end":{"line":289,"column":1}},"159":{"start":{"line":281,"column":2},"end":{"line":283,"column":3}},"160":{"start":{"line":282,"column":4},"end":{"line":282,"column":51}},"161":{"start":{"line":284,"column":2},"end":{"line":286,"column":3}},"162":{"start":{"line":285,"column":4},"end":{"line":285,"column":52}},"163":{"start":{"line":287,"column":2},"end":{"line":287,"column":31}},"164":{"start":{"line":288,"column":2},"end":{"line":288,"column":37}},"165":{"start":{"line":291,"column":0},"end":{"line":294,"column":2}},"166":{"start":{"line":292,"column":2},"end":{"line":292,"column":29}},"167":{"start":{"line":293,"column":2},"end":{"line":293,"column":69}},"168":{"start":{"line":296,"column":0},"end":{"line":298,"column":2}},"169":{"start":{"line":297,"column":2},"end":{"line":297,"column":68}},"170":{"start":{"line":300,"column":0},"end":{"line":309,"column":2}},"171":{"start":{"line":301,"column":2},"end":{"line":301,"column":54}},"172":{"start":{"line":302,"column":2},"end":{"line":302,"column":41}},"173":{"start":{"line":303,"column":2},"end":{"line":303,"column":48}},"174":{"start":{"line":304,"column":2},"end":{"line":308,"column":3}},"175":{"start":{"line":305,"column":4},"end":{"line":305,"column":44}},"176":{"start":{"line":307,"column":4},"end":{"line":307,"column":65}},"177":{"start":{"line":317,"column":0},"end":{"line":319,"column":2}},"178":{"start":{"line":318,"column":2},"end":{"line":318,"column":80}},"179":{"start":{"line":329,"column":0},"end":{"line":335,"column":1}},"180":{"start":{"line":330,"column":2},"end":{"line":332,"column":3}},"181":{"start":{"line":331,"column":4},"end":{"line":331,"column":50}},"182":{"start":{"line":333,"column":2},"end":{"line":333,"column":52}},"183":{"start":{"line":334,"column":2},"end":{"line":334,"column":34}},"184":{"start":{"line":337,"column":0},"end":{"line":337,"column":33}},"185":{"start":{"line":339,"column":0},"end":{"line":350,"column":2}},"186":{"start":{"line":340,"column":2},"end":{"line":340,"column":73}},"187":{"start":{"line":341,"column":2},"end":{"line":341,"column":59}},"188":{"start":{"line":342,"column":2},"end":{"line":348,"column":3}},"189":{"start":{"line":343,"column":4},"end":{"line":347,"column":5}},"190":{"start":{"line":344,"column":6},"end":{"line":346,"column":7}},"191":{"start":{"line":345,"column":8},"end":{"line":345,"column":34}},"192":{"start":{"line":349,"column":2},"end":{"line":349,"column":14}},"193":{"start":{"line":352,"column":0},"end":{"line":370,"column":2}},"194":{"start":{"line":353,"column":2},"end":{"line":355,"column":3}},"195":{"start":{"line":354,"column":4},"end":{"line":354,"column":11}},"196":{"start":{"line":356,"column":2},"end":{"line":356,"column":73}},"197":{"start":{"line":357,"column":2},"end":{"line":359,"column":3}},"198":{"start":{"line":358,"column":4},"end":{"line":358,"column":76}},"199":{"start":{"line":360,"column":2},"end":{"line":360,"column":59}},"200":{"start":{"line":361,"column":2},"end":{"line":369,"column":3}},"201":{"start":{"line":362,"column":4},"end":{"line":367,"column":5}},"202":{"start":{"line":363,"column":6},"end":{"line":366,"column":7}},"203":{"start":{"line":364,"column":8},"end":{"line":364,"column":24}},"204":{"start":{"line":365,"column":8},"end":{"line":365,"column":15}},"205":{"start":{"line":368,"column":4},"end":{"line":368,"column":21}},"206":{"start":{"line":380,"column":0},"end":{"line":387,"column":1}},"207":{"start":{"line":381,"column":2},"end":{"line":383,"column":3}},"208":{"start":{"line":382,"column":4},"end":{"line":382,"column":57}},"209":{"start":{"line":384,"column":2},"end":{"line":384,"column":52}},"210":{"start":{"line":385,"column":2},"end":{"line":385,"column":34}},"211":{"start":{"line":386,"column":2},"end":{"line":386,"column":33}},"212":{"start":{"line":389,"column":0},"end":{"line":389,"column":39}},"213":{"start":{"line":399,"column":0},"end":{"line":405,"column":1}},"214":{"start":{"line":400,"column":2},"end":{"line":402,"column":3}},"215":{"start":{"line":401,"column":4},"end":{"line":401,"column":52}},"216":{"start":{"line":403,"column":2},"end":{"line":403,"column":54}},"217":{"start":{"line":404,"column":2},"end":{"line":404,"column":34}},"218":{"start":{"line":407,"column":0},"end":{"line":407,"column":35}},"219":{"start":{"line":417,"column":0},"end":{"line":423,"column":1}},"220":{"start":{"line":418,"column":2},"end":{"line":420,"column":3}},"221":{"start":{"line":419,"column":4},"end":{"line":419,"column":62}},"222":{"start":{"line":421,"column":2},"end":{"line":421,"column":64}},"223":{"start":{"line":422,"column":2},"end":{"line":422,"column":34}},"224":{"start":{"line":425,"column":0},"end":{"line":425,"column":45}},"225":{"start":{"line":435,"column":0},"end":{"line":441,"column":1}},"226":{"start":{"line":436,"column":2},"end":{"line":438,"column":3}},"227":{"start":{"line":437,"column":4},"end":{"line":437,"column":49}},"228":{"start":{"line":439,"column":2},"end":{"line":439,"column":51}},"229":{"start":{"line":440,"column":2},"end":{"line":440,"column":34}},"230":{"start":{"line":443,"column":0},"end":{"line":443,"column":32}},"231":{"start":{"line":453,"column":0},"end":{"line":459,"column":1}},"232":{"start":{"line":454,"column":2},"end":{"line":456,"column":3}},"233":{"start":{"line":455,"column":4},"end":{"line":455,"column":52}},"234":{"start":{"line":457,"column":2},"end":{"line":457,"column":54}},"235":{"start":{"line":458,"column":2},"end":{"line":458,"column":34}},"236":{"start":{"line":461,"column":0},"end":{"line":461,"column":35}},"237":{"start":{"line":471,"column":0},"end":{"line":477,"column":1}},"238":{"start":{"line":472,"column":2},"end":{"line":474,"column":3}},"239":{"start":{"line":473,"column":4},"end":{"line":473,"column":53}},"240":{"start":{"line":475,"column":2},"end":{"line":475,"column":55}},"241":{"start":{"line":476,"column":2},"end":{"line":476,"column":34}},"242":{"start":{"line":479,"column":0},"end":{"line":479,"column":36}},"243":{"start":{"line":489,"column":0},"end":{"line":495,"column":1}},"244":{"start":{"line":490,"column":2},"end":{"line":492,"column":3}},"245":{"start":{"line":491,"column":4},"end":{"line":491,"column":57}},"246":{"start":{"line":493,"column":2},"end":{"line":493,"column":59}},"247":{"start":{"line":494,"column":2},"end":{"line":494,"column":34}},"248":{"start":{"line":497,"column":0},"end":{"line":497,"column":40}},"249":{"start":{"line":504,"column":0},"end":{"line":515,"column":1}},"250":{"start":{"line":505,"column":2},"end":{"line":514,"column":7}},"251":{"start":{"line":506,"column":23},"end":{"line":506,"column":53}},"252":{"start":{"line":508,"column":6},"end":{"line":510,"column":60}},"253":{"start":{"line":513,"column":6},"end":{"line":513,"column":25}},"254":{"start":{"line":523,"column":0},"end":{"line":533,"column":1}},"255":{"start":{"line":524,"column":2},"end":{"line":526,"column":3}},"256":{"start":{"line":525,"column":4},"end":{"line":525,"column":29}},"257":{"start":{"line":527,"column":2},"end":{"line":527,"column":48}},"258":{"start":{"line":528,"column":2},"end":{"line":532,"column":3}},"259":{"start":{"line":529,"column":4},"end":{"line":531,"column":5}},"260":{"start":{"line":530,"column":6},"end":{"line":530,"column":26}},"261":{"start":{"line":535,"column":0},"end":{"line":553,"column":1}},"262":{"start":{"line":536,"column":2},"end":{"line":551,"column":3}},"263":{"start":{"line":537,"column":4},"end":{"line":537,"column":20}},"264":{"start":{"line":538,"column":4},"end":{"line":538,"column":37}},"265":{"start":{"line":539,"column":4},"end":{"line":539,"column":38}},"266":{"start":{"line":540,"column":4},"end":{"line":543,"column":5}},"267":{"start":{"line":541,"column":6},"end":{"line":541,"column":85}},"268":{"start":{"line":542,"column":6},"end":{"line":542,"column":94}},"269":{"start":{"line":544,"column":4},"end":{"line":547,"column":5}},"270":{"start":{"line":545,"column":6},"end":{"line":545,"column":89}},"271":{"start":{"line":546,"column":6},"end":{"line":546,"column":94}},"272":{"start":{"line":548,"column":4},"end":{"line":550,"column":5}},"273":{"start":{"line":549,"column":6},"end":{"line":549,"column":98}},"274":{"start":{"line":552,"column":2},"end":{"line":552,"column":17}},"275":{"start":{"line":560,"column":0},"end":{"line":566,"column":1}},"276":{"start":{"line":561,"column":2},"end":{"line":561,"column":56}},"277":{"start":{"line":561,"column":34},"end":{"line":561,"column":56}},"278":{"start":{"line":562,"column":2},"end":{"line":562,"column":67}},"279":{"start":{"line":562,"column":37},"end":{"line":562,"column":67}},"280":{"start":{"line":563,"column":2},"end":{"line":563,"column":81}},"281":{"start":{"line":564,"column":2},"end":{"line":564,"column":89}},"282":{"start":{"line":565,"column":2},"end":{"line":565,"column":16}},"283":{"start":{"line":590,"column":0},"end":{"line":726,"column":2}},"284":{"start":{"line":591,"column":2},"end":{"line":591,"column":42}},"285":{"start":{"line":592,"column":2},"end":{"line":592,"column":24}},"286":{"start":{"line":593,"column":2},"end":{"line":593,"column":60}},"287":{"start":{"line":595,"column":2},"end":{"line":595,"column":78}},"288":{"start":{"line":596,"column":2},"end":{"line":596,"column":74}},"289":{"start":{"line":597,"column":2},"end":{"line":597,"column":86}},"290":{"start":{"line":599,"column":2},"end":{"line":599,"column":93}},"291":{"start":{"line":600,"column":2},"end":{"line":600,"column":33}},"292":{"start":{"line":602,"column":2},"end":{"line":615,"column":3}},"293":{"start":{"line":603,"column":4},"end":{"line":603,"column":56}},"294":{"start":{"line":604,"column":4},"end":{"line":607,"column":5}},"295":{"start":{"line":605,"column":6},"end":{"line":605,"column":32}},"296":{"start":{"line":606,"column":6},"end":{"line":606,"column":42}},"297":{"start":{"line":608,"column":4},"end":{"line":608,"column":46}},"298":{"start":{"line":609,"column":4},"end":{"line":611,"column":5}},"299":{"start":{"line":610,"column":6},"end":{"line":610,"column":34}},"300":{"start":{"line":612,"column":4},"end":{"line":614,"column":5}},"301":{"start":{"line":613,"column":6},"end":{"line":613,"column":105}},"302":{"start":{"line":617,"column":2},"end":{"line":630,"column":5}},"303":{"start":{"line":632,"column":2},"end":{"line":632,"column":43}},"304":{"start":{"line":634,"column":2},"end":{"line":634,"column":49}},"305":{"start":{"line":636,"column":2},"end":{"line":641,"column":3}},"306":{"start":{"line":640,"column":4},"end":{"line":640,"column":92}},"307":{"start":{"line":643,"column":2},"end":{"line":648,"column":4}},"308":{"start":{"line":650,"column":2},"end":{"line":650,"column":43}},"309":{"start":{"line":651,"column":2},"end":{"line":651,"column":68}},"310":{"start":{"line":653,"column":2},"end":{"line":653,"column":45}},"311":{"start":{"line":654,"column":2},"end":{"line":654,"column":74}},"312":{"start":{"line":656,"column":2},"end":{"line":656,"column":47}},"313":{"start":{"line":657,"column":2},"end":{"line":657,"column":72}},"314":{"start":{"line":659,"column":2},"end":{"line":659,"column":43}},"315":{"start":{"line":660,"column":2},"end":{"line":660,"column":68}},"316":{"start":{"line":662,"column":2},"end":{"line":675,"column":3}},"317":{"start":{"line":663,"column":4},"end":{"line":663,"column":60}},"318":{"start":{"line":664,"column":4},"end":{"line":664,"column":54}},"319":{"start":{"line":665,"column":4},"end":{"line":665,"column":60}},"320":{"start":{"line":667,"column":4},"end":{"line":667,"column":35}},"321":{"start":{"line":668,"column":4},"end":{"line":668,"column":61}},"322":{"start":{"line":670,"column":4},"end":{"line":670,"column":41}},"323":{"start":{"line":671,"column":4},"end":{"line":671,"column":66}},"324":{"start":{"line":673,"column":4},"end":{"line":673,"column":60}},"325":{"start":{"line":674,"column":4},"end":{"line":674,"column":58}},"326":{"start":{"line":677,"column":2},"end":{"line":677,"column":88}},"327":{"start":{"line":679,"column":2},"end":{"line":685,"column":3}},"328":{"start":{"line":680,"column":4},"end":{"line":680,"column":38}},"329":{"start":{"line":681,"column":4},"end":{"line":681,"column":42}},"330":{"start":{"line":682,"column":4},"end":{"line":684,"column":5}},"331":{"start":{"line":683,"column":6},"end":{"line":683,"column":76}},"332":{"start":{"line":688,"column":2},"end":{"line":723,"column":39}},"333":{"start":{"line":689,"column":4},"end":{"line":689,"column":20}},"334":{"start":{"line":690,"column":4},"end":{"line":690,"column":22}},"335":{"start":{"line":691,"column":4},"end":{"line":691,"column":36}},"336":{"start":{"line":693,"column":4},"end":{"line":693,"column":40}},"337":{"start":{"line":695,"column":4},"end":{"line":720,"column":5}},"338":{"start":{"line":696,"column":6},"end":{"line":696,"column":30}},"339":{"start":{"line":699,"column":6},"end":{"line":711,"column":7}},"340":{"start":{"line":700,"column":8},"end":{"line":700,"column":60}},"341":{"start":{"line":704,"column":8},"end":{"line":710,"column":9}},"342":{"start":{"line":708,"column":10},"end":{"line":708,"column":46}},"343":{"start":{"line":709,"column":10},"end":{"line":709,"column":16}},"344":{"start":{"line":713,"column":6},"end":{"line":719,"column":7}},"345":{"start":{"line":714,"column":8},"end":{"line":714,"column":51}},"346":{"start":{"line":715,"column":8},"end":{"line":715,"column":40}},"347":{"start":{"line":717,"column":8},"end":{"line":717,"column":86}},"348":{"start":{"line":718,"column":8},"end":{"line":718,"column":40}},"349":{"start":{"line":722,"column":4},"end":{"line":722,"column":18}},"350":{"start":{"line":725,"column":2},"end":{"line":725,"column":20}},"351":{"start":{"line":728,"column":0},"end":{"line":743,"column":1}},"352":{"start":{"line":729,"column":2},"end":{"line":729,"column":55}},"353":{"start":{"line":730,"column":2},"end":{"line":732,"column":3}},"354":{"start":{"line":731,"column":4},"end":{"line":731,"column":51}},"355":{"start":{"line":733,"column":2},"end":{"line":736,"column":4}},"356":{"start":{"line":734,"column":4},"end":{"line":734,"column":55}},"357":{"start":{"line":735,"column":4},"end":{"line":735,"column":59}},"358":{"start":{"line":738,"column":2},"end":{"line":738,"column":59}},"359":{"start":{"line":739,"column":2},"end":{"line":741,"column":3}},"360":{"start":{"line":740,"column":4},"end":{"line":740,"column":65}},"361":{"start":{"line":742,"column":2},"end":{"line":742,"column":16}},"362":{"start":{"line":745,"column":0},"end":{"line":751,"column":1}},"363":{"start":{"line":746,"column":2},"end":{"line":746,"column":23}},"364":{"start":{"line":747,"column":2},"end":{"line":747,"column":42}},"365":{"start":{"line":748,"column":2},"end":{"line":748,"column":42}},"366":{"start":{"line":749,"column":2},"end":{"line":749,"column":36}},"367":{"start":{"line":750,"column":2},"end":{"line":750,"column":50}},"368":{"start":{"line":759,"column":0},"end":{"line":805,"column":2}},"369":{"start":{"line":760,"column":2},"end":{"line":763,"column":3}},"370":{"start":{"line":761,"column":4},"end":{"line":761,"column":17}},"371":{"start":{"line":762,"column":4},"end":{"line":762,"column":17}},"372":{"start":{"line":764,"column":2},"end":{"line":764,"column":40}},"373":{"start":{"line":765,"column":2},"end":{"line":765,"column":44}},"374":{"start":{"line":766,"column":2},"end":{"line":766,"column":33}},"375":{"start":{"line":767,"column":2},"end":{"line":767,"column":35}},"376":{"start":{"line":768,"column":2},"end":{"line":768,"column":41}},"377":{"start":{"line":770,"column":2},"end":{"line":770,"column":59}},"378":{"start":{"line":771,"column":2},"end":{"line":771,"column":18}},"379":{"start":{"line":772,"column":2},"end":{"line":772,"column":20}},"380":{"start":{"line":773,"column":2},"end":{"line":773,"column":30}},"381":{"start":{"line":774,"column":2},"end":{"line":774,"column":39}},"382":{"start":{"line":776,"column":2},"end":{"line":776,"column":43}},"383":{"start":{"line":778,"column":2},"end":{"line":782,"column":3}},"384":{"start":{"line":780,"column":4},"end":{"line":780,"column":25}},"385":{"start":{"line":781,"column":4},"end":{"line":781,"column":22}},"386":{"start":{"line":783,"column":2},"end":{"line":783,"column":52}},"387":{"start":{"line":785,"column":2},"end":{"line":803,"column":5}},"388":{"start":{"line":786,"column":4},"end":{"line":788,"column":5}},"389":{"start":{"line":787,"column":6},"end":{"line":787,"column":21}},"390":{"start":{"line":789,"column":4},"end":{"line":793,"column":5}},"391":{"start":{"line":790,"column":6},"end":{"line":790,"column":95}},"392":{"start":{"line":791,"column":6},"end":{"line":791,"column":27}},"393":{"start":{"line":792,"column":6},"end":{"line":792,"column":21}},"394":{"start":{"line":795,"column":4},"end":{"line":802,"column":5}},"395":{"start":{"line":796,"column":6},"end":{"line":796,"column":21}},"396":{"start":{"line":798,"column":6},"end":{"line":799,"column":86}},"397":{"start":{"line":800,"column":6},"end":{"line":800,"column":27}},"398":{"start":{"line":801,"column":6},"end":{"line":801,"column":14}},"399":{"start":{"line":804,"column":2},"end":{"line":804,"column":20}},"400":{"start":{"line":813,"column":0},"end":{"line":838,"column":2}},"401":{"start":{"line":814,"column":2},"end":{"line":817,"column":3}},"402":{"start":{"line":815,"column":4},"end":{"line":815,"column":17}},"403":{"start":{"line":816,"column":4},"end":{"line":816,"column":17}},"404":{"start":{"line":818,"column":2},"end":{"line":818,"column":33}},"405":{"start":{"line":819,"column":2},"end":{"line":819,"column":35}},"406":{"start":{"line":820,"column":2},"end":{"line":820,"column":41}},"407":{"start":{"line":821,"column":2},"end":{"line":821,"column":43}},"408":{"start":{"line":823,"column":2},"end":{"line":836,"column":5}},"409":{"start":{"line":824,"column":4},"end":{"line":826,"column":5}},"410":{"start":{"line":825,"column":6},"end":{"line":825,"column":21}},"411":{"start":{"line":827,"column":4},"end":{"line":829,"column":5}},"412":{"start":{"line":828,"column":6},"end":{"line":828,"column":29}},"413":{"start":{"line":831,"column":4},"end":{"line":835,"column":5}},"414":{"start":{"line":832,"column":6},"end":{"line":832,"column":21}},"415":{"start":{"line":834,"column":6},"end":{"line":834,"column":22}},"416":{"start":{"line":837,"column":2},"end":{"line":837,"column":20}},"417":{"start":{"line":847,"column":0},"end":{"line":860,"column":2}},"418":{"start":{"line":848,"column":2},"end":{"line":851,"column":3}},"419":{"start":{"line":849,"column":4},"end":{"line":849,"column":17}},"420":{"start":{"line":850,"column":4},"end":{"line":850,"column":17}},"421":{"start":{"line":852,"column":2},"end":{"line":852,"column":43}},"422":{"start":{"line":853,"column":2},"end":{"line":858,"column":5}},"423":{"start":{"line":854,"column":4},"end":{"line":856,"column":5}},"424":{"start":{"line":855,"column":6},"end":{"line":855,"column":27}},"425":{"start":{"line":857,"column":4},"end":{"line":857,"column":45}},"426":{"start":{"line":859,"column":2},"end":{"line":859,"column":20}},"427":{"start":{"line":868,"column":0},"end":{"line":883,"column":2}},"428":{"start":{"line":869,"column":2},"end":{"line":872,"column":3}},"429":{"start":{"line":870,"column":4},"end":{"line":870,"column":17}},"430":{"start":{"line":871,"column":4},"end":{"line":871,"column":17}},"431":{"start":{"line":873,"column":2},"end":{"line":873,"column":43}},"432":{"start":{"line":874,"column":2},"end":{"line":874,"column":18}},"433":{"start":{"line":875,"column":2},"end":{"line":881,"column":5}},"434":{"start":{"line":876,"column":4},"end":{"line":878,"column":5}},"435":{"start":{"line":877,"column":6},"end":{"line":877,"column":21}},"436":{"start":{"line":879,"column":4},"end":{"line":879,"column":31}},"437":{"start":{"line":880,"column":4},"end":{"line":880,"column":30}},"438":{"start":{"line":882,"column":2},"end":{"line":882,"column":20}},"439":{"start":{"line":885,"column":0},"end":{"line":911,"column":2}},"440":{"start":{"line":886,"column":2},"end":{"line":886,"column":45}},"441":{"start":{"line":887,"column":2},"end":{"line":887,"column":51}},"442":{"start":{"line":889,"column":2},"end":{"line":889,"column":15}},"443":{"start":{"line":890,"column":2},"end":{"line":909,"column":3}},"444":{"start":{"line":891,"column":4},"end":{"line":891,"column":27}},"445":{"start":{"line":892,"column":4},"end":{"line":896,"column":5}},"446":{"start":{"line":893,"column":6},"end":{"line":893,"column":46}},"447":{"start":{"line":895,"column":6},"end":{"line":895,"column":34}},"448":{"start":{"line":897,"column":9},"end":{"line":909,"column":3}},"449":{"start":{"line":898,"column":4},"end":{"line":904,"column":9}},"450":{"start":{"line":903,"column":8},"end":{"line":903,"column":51}},"451":{"start":{"line":906,"column":4},"end":{"line":907,"column":51}},"452":{"start":{"line":908,"column":4},"end":{"line":908,"column":66}},"453":{"start":{"line":910,"column":2},"end":{"line":910,"column":20}},"454":{"start":{"line":919,"column":0},"end":{"line":956,"column":2}},"455":{"start":{"line":920,"column":2},"end":{"line":923,"column":3}},"456":{"start":{"line":921,"column":4},"end":{"line":921,"column":17}},"457":{"start":{"line":922,"column":4},"end":{"line":922,"column":17}},"458":{"start":{"line":924,"column":2},"end":{"line":924,"column":18}},"459":{"start":{"line":925,"column":2},"end":{"line":925,"column":40}},"460":{"start":{"line":926,"column":2},"end":{"line":926,"column":35}},"461":{"start":{"line":927,"column":2},"end":{"line":927,"column":41}},"462":{"start":{"line":928,"column":2},"end":{"line":928,"column":50}},"463":{"start":{"line":930,"column":2},"end":{"line":930,"column":43}},"464":{"start":{"line":932,"column":2},"end":{"line":954,"column":5}},"465":{"start":{"line":933,"column":4},"end":{"line":942,"column":5}},"466":{"start":{"line":934,"column":6},"end":{"line":940,"column":7}},"467":{"start":{"line":935,"column":8},"end":{"line":938,"column":55}},"468":{"start":{"line":939,"column":8},"end":{"line":939,"column":29}},"469":{"start":{"line":941,"column":6},"end":{"line":941,"column":21}},"470":{"start":{"line":943,"column":4},"end":{"line":953,"column":7}},"471":{"start":{"line":944,"column":6},"end":{"line":946,"column":7}},"472":{"start":{"line":945,"column":8},"end":{"line":945,"column":23}},"473":{"start":{"line":947,"column":6},"end":{"line":951,"column":7}},"474":{"start":{"line":948,"column":8},"end":{"line":948,"column":93}},"475":{"start":{"line":949,"column":8},"end":{"line":949,"column":29}},"476":{"start":{"line":950,"column":8},"end":{"line":950,"column":23}},"477":{"start":{"line":952,"column":6},"end":{"line":952,"column":20}},"478":{"start":{"line":955,"column":2},"end":{"line":955,"column":20}},"479":{"start":{"line":964,"column":0},"end":{"line":995,"column":2}},"480":{"start":{"line":965,"column":2},"end":{"line":968,"column":3}},"481":{"start":{"line":966,"column":4},"end":{"line":966,"column":17}},"482":{"start":{"line":967,"column":4},"end":{"line":967,"column":17}},"483":{"start":{"line":969,"column":2},"end":{"line":969,"column":18}},"484":{"start":{"line":970,"column":2},"end":{"line":970,"column":40}},"485":{"start":{"line":971,"column":2},"end":{"line":971,"column":35}},"486":{"start":{"line":972,"column":2},"end":{"line":972,"column":41}},"487":{"start":{"line":973,"column":2},"end":{"line":973,"column":50}},"488":{"start":{"line":975,"column":2},"end":{"line":975,"column":43}},"489":{"start":{"line":977,"column":2},"end":{"line":993,"column":5}},"490":{"start":{"line":978,"column":4},"end":{"line":986,"column":5}},"491":{"start":{"line":979,"column":6},"end":{"line":984,"column":7}},"492":{"start":{"line":980,"column":8},"end":{"line":982,"column":55}},"493":{"start":{"line":983,"column":8},"end":{"line":983,"column":29}},"494":{"start":{"line":985,"column":6},"end":{"line":985,"column":21}},"495":{"start":{"line":987,"column":4},"end":{"line":992,"column":7}},"496":{"start":{"line":988,"column":6},"end":{"line":990,"column":7}},"497":{"start":{"line":989,"column":8},"end":{"line":989,"column":23}},"498":{"start":{"line":991,"column":6},"end":{"line":991,"column":44}},"499":{"start":{"line":994,"column":2},"end":{"line":994,"column":20}},"500":{"start":{"line":999,"column":0},"end":{"line":1056,"column":2}},"501":{"start":{"line":1000,"column":2},"end":{"line":1003,"column":3}},"502":{"start":{"line":1001,"column":4},"end":{"line":1001,"column":17}},"503":{"start":{"line":1002,"column":4},"end":{"line":1002,"column":17}},"504":{"start":{"line":1004,"column":2},"end":{"line":1004,"column":18}},"505":{"start":{"line":1005,"column":2},"end":{"line":1005,"column":35}},"506":{"start":{"line":1006,"column":2},"end":{"line":1006,"column":35}},"507":{"start":{"line":1007,"column":2},"end":{"line":1007,"column":45}},"508":{"start":{"line":1009,"column":2},"end":{"line":1012,"column":3}},"509":{"start":{"line":1010,"column":4},"end":{"line":1010,"column":14}},"510":{"start":{"line":1011,"column":4},"end":{"line":1011,"column":14}},"511":{"start":{"line":1013,"column":2},"end":{"line":1013,"column":43}},"512":{"start":{"line":1015,"column":2},"end":{"line":1015,"column":41}},"513":{"start":{"line":1018,"column":2},"end":{"line":1054,"column":5}},"514":{"start":{"line":1019,"column":4},"end":{"line":1021,"column":5}},"515":{"start":{"line":1020,"column":6},"end":{"line":1020,"column":25}},"516":{"start":{"line":1023,"column":4},"end":{"line":1023,"column":53}},"517":{"start":{"line":1024,"column":4},"end":{"line":1024,"column":39}},"518":{"start":{"line":1025,"column":4},"end":{"line":1025,"column":22}},"519":{"start":{"line":1026,"column":4},"end":{"line":1026,"column":22}},"520":{"start":{"line":1028,"column":4},"end":{"line":1047,"column":5}},"521":{"start":{"line":1029,"column":6},"end":{"line":1029,"column":46}},"522":{"start":{"line":1030,"column":6},"end":{"line":1030,"column":58}},"523":{"start":{"line":1031,"column":6},"end":{"line":1031,"column":32}},"524":{"start":{"line":1032,"column":6},"end":{"line":1032,"column":51}},"525":{"start":{"line":1033,"column":6},"end":{"line":1033,"column":51}},"526":{"start":{"line":1036,"column":6},"end":{"line":1046,"column":9}},"527":{"start":{"line":1037,"column":8},"end":{"line":1045,"column":9}},"528":{"start":{"line":1039,"column":10},"end":{"line":1041,"column":13}},"529":{"start":{"line":1040,"column":12},"end":{"line":1040,"column":20}},"530":{"start":{"line":1043,"column":10},"end":{"line":1043,"column":30}},"531":{"start":{"line":1044,"column":10},"end":{"line":1044,"column":24}},"532":{"start":{"line":1050,"column":4},"end":{"line":1053,"column":40}},"533":{"start":{"line":1051,"column":6},"end":{"line":1051,"column":29}},"534":{"start":{"line":1053,"column":6},"end":{"line":1053,"column":40}},"535":{"start":{"line":1055,"column":2},"end":{"line":1055,"column":20}},"536":{"start":{"line":1065,"column":0},"end":{"line":1113,"column":2}},"537":{"start":{"line":1066,"column":2},"end":{"line":1069,"column":3}},"538":{"start":{"line":1067,"column":4},"end":{"line":1067,"column":17}},"539":{"start":{"line":1068,"column":4},"end":{"line":1068,"column":17}},"540":{"start":{"line":1070,"column":2},"end":{"line":1070,"column":18}},"541":{"start":{"line":1071,"column":2},"end":{"line":1071,"column":35}},"542":{"start":{"line":1072,"column":2},"end":{"line":1072,"column":45}},"543":{"start":{"line":1073,"column":2},"end":{"line":1073,"column":31}},"544":{"start":{"line":1075,"column":2},"end":{"line":1078,"column":3}},"545":{"start":{"line":1076,"column":4},"end":{"line":1076,"column":14}},"546":{"start":{"line":1077,"column":4},"end":{"line":1077,"column":14}},"547":{"start":{"line":1079,"column":2},"end":{"line":1079,"column":17}},"548":{"start":{"line":1081,"column":2},"end":{"line":1081,"column":20}},"549":{"start":{"line":1082,"column":2},"end":{"line":1082,"column":43}},"550":{"start":{"line":1085,"column":2},"end":{"line":1085,"column":51}},"551":{"start":{"line":1087,"column":2},"end":{"line":1087,"column":37}},"552":{"start":{"line":1088,"column":2},"end":{"line":1088,"column":20}},"553":{"start":{"line":1089,"column":2},"end":{"line":1089,"column":20}},"554":{"start":{"line":1091,"column":2},"end":{"line":1091,"column":39}},"555":{"start":{"line":1092,"column":2},"end":{"line":1092,"column":77}},"556":{"start":{"line":1094,"column":2},"end":{"line":1094,"column":30}},"557":{"start":{"line":1096,"column":2},"end":{"line":1096,"column":52}},"558":{"start":{"line":1098,"column":2},"end":{"line":1098,"column":38}},"559":{"start":{"line":1099,"column":2},"end":{"line":1099,"column":76}},"560":{"start":{"line":1101,"column":2},"end":{"line":1101,"column":55}},"561":{"start":{"line":1104,"column":2},"end":{"line":1111,"column":5}},"562":{"start":{"line":1105,"column":4},"end":{"line":1109,"column":5}},"563":{"start":{"line":1106,"column":6},"end":{"line":1108,"column":7}},"564":{"start":{"line":1107,"column":8},"end":{"line":1107,"column":32}},"565":{"start":{"line":1110,"column":4},"end":{"line":1110,"column":16}},"566":{"start":{"line":1112,"column":2},"end":{"line":1112,"column":20}},"567":{"start":{"line":1119,"column":0},"end":{"line":1150,"column":2}},"568":{"start":{"line":1120,"column":2},"end":{"line":1123,"column":3}},"569":{"start":{"line":1121,"column":4},"end":{"line":1121,"column":17}},"570":{"start":{"line":1122,"column":4},"end":{"line":1122,"column":17}},"571":{"start":{"line":1124,"column":2},"end":{"line":1124,"column":35}},"572":{"start":{"line":1125,"column":2},"end":{"line":1125,"column":45}},"573":{"start":{"line":1126,"column":2},"end":{"line":1126,"column":31}},"574":{"start":{"line":1128,"column":2},"end":{"line":1128,"column":17}},"575":{"start":{"line":1131,"column":2},"end":{"line":1131,"column":51}},"576":{"start":{"line":1133,"column":2},"end":{"line":1133,"column":37}},"577":{"start":{"line":1134,"column":2},"end":{"line":1134,"column":20}},"578":{"start":{"line":1135,"column":2},"end":{"line":1135,"column":20}},"579":{"start":{"line":1137,"column":2},"end":{"line":1137,"column":39}},"580":{"start":{"line":1138,"column":2},"end":{"line":1138,"column":77}},"581":{"start":{"line":1140,"column":2},"end":{"line":1140,"column":30}},"582":{"start":{"line":1142,"column":2},"end":{"line":1142,"column":52}},"583":{"start":{"line":1144,"column":2},"end":{"line":1144,"column":43}},"584":{"start":{"line":1146,"column":2},"end":{"line":1148,"column":5}},"585":{"start":{"line":1147,"column":4},"end":{"line":1147,"column":20}},"586":{"start":{"line":1149,"column":2},"end":{"line":1149,"column":20}},"587":{"start":{"line":1156,"column":0},"end":{"line":1191,"column":2}},"588":{"start":{"line":1157,"column":2},"end":{"line":1160,"column":3}},"589":{"start":{"line":1158,"column":4},"end":{"line":1158,"column":17}},"590":{"start":{"line":1159,"column":4},"end":{"line":1159,"column":17}},"591":{"start":{"line":1161,"column":2},"end":{"line":1161,"column":18}},"592":{"start":{"line":1162,"column":2},"end":{"line":1162,"column":35}},"593":{"start":{"line":1163,"column":2},"end":{"line":1163,"column":45}},"594":{"start":{"line":1164,"column":2},"end":{"line":1164,"column":31}},"595":{"start":{"line":1166,"column":2},"end":{"line":1166,"column":17}},"596":{"start":{"line":1169,"column":2},"end":{"line":1169,"column":51}},"597":{"start":{"line":1171,"column":2},"end":{"line":1171,"column":37}},"598":{"start":{"line":1172,"column":2},"end":{"line":1172,"column":20}},"599":{"start":{"line":1173,"column":2},"end":{"line":1173,"column":20}},"600":{"start":{"line":1175,"column":2},"end":{"line":1175,"column":39}},"601":{"start":{"line":1176,"column":2},"end":{"line":1176,"column":77}},"602":{"start":{"line":1178,"column":2},"end":{"line":1178,"column":30}},"603":{"start":{"line":1180,"column":2},"end":{"line":1180,"column":52}},"604":{"start":{"line":1182,"column":2},"end":{"line":1182,"column":43}},"605":{"start":{"line":1184,"column":2},"end":{"line":1189,"column":5}},"606":{"start":{"line":1185,"column":4},"end":{"line":1187,"column":5}},"607":{"start":{"line":1186,"column":6},"end":{"line":1186,"column":39}},"608":{"start":{"line":1188,"column":4},"end":{"line":1188,"column":12}},"609":{"start":{"line":1190,"column":2},"end":{"line":1190,"column":20}},"610":{"start":{"line":1217,"column":0},"end":{"line":1302,"column":2}},"611":{"start":{"line":1218,"column":2},"end":{"line":1218,"column":33}},"612":{"start":{"line":1219,"column":2},"end":{"line":1219,"column":24}},"613":{"start":{"line":1220,"column":2},"end":{"line":1222,"column":3}},"614":{"start":{"line":1221,"column":4},"end":{"line":1221,"column":56}},"615":{"start":{"line":1224,"column":2},"end":{"line":1224,"column":31}},"616":{"start":{"line":1225,"column":2},"end":{"line":1255,"column":3}},"617":{"start":{"line":1226,"column":4},"end":{"line":1226,"column":79}},"618":{"start":{"line":1228,"column":4},"end":{"line":1233,"column":5}},"619":{"start":{"line":1230,"column":6},"end":{"line":1230,"column":61}},"620":{"start":{"line":1232,"column":6},"end":{"line":1232,"column":72}},"621":{"start":{"line":1235,"column":4},"end":{"line":1235,"column":19}},"622":{"start":{"line":1237,"column":4},"end":{"line":1237,"column":56}},"623":{"start":{"line":1238,"column":4},"end":{"line":1238,"column":47}},"624":{"start":{"line":1239,"column":4},"end":{"line":1239,"column":32}},"625":{"start":{"line":1240,"column":4},"end":{"line":1240,"column":46}},"626":{"start":{"line":1242,"column":4},"end":{"line":1246,"column":5}},"627":{"start":{"line":1243,"column":6},"end":{"line":1243,"column":108}},"628":{"start":{"line":1245,"column":6},"end":{"line":1245,"column":98}},"629":{"start":{"line":1248,"column":4},"end":{"line":1248,"column":107}},"630":{"start":{"line":1250,"column":4},"end":{"line":1250,"column":87}},"631":{"start":{"line":1251,"column":4},"end":{"line":1251,"column":70}},"632":{"start":{"line":1252,"column":4},"end":{"line":1252,"column":50}},"633":{"start":{"line":1254,"column":4},"end":{"line":1254,"column":94}},"634":{"start":{"line":1257,"column":2},"end":{"line":1270,"column":5}},"635":{"start":{"line":1273,"column":2},"end":{"line":1290,"column":5}},"636":{"start":{"line":1277,"column":6},"end":{"line":1277,"column":53}},"637":{"start":{"line":1278,"column":6},"end":{"line":1278,"column":59}},"638":{"start":{"line":1279,"column":6},"end":{"line":1279,"column":65}},"639":{"start":{"line":1280,"column":6},"end":{"line":1280,"column":61}},"640":{"start":{"line":1281,"column":6},"end":{"line":1281,"column":63}},"641":{"start":{"line":1282,"column":6},"end":{"line":1286,"column":7}},"642":{"start":{"line":1283,"column":8},"end":{"line":1283,"column":63}},"643":{"start":{"line":1284,"column":8},"end":{"line":1284,"column":61}},"644":{"start":{"line":1285,"column":8},"end":{"line":1285,"column":67}},"645":{"start":{"line":1287,"column":6},"end":{"line":1287,"column":64}},"646":{"start":{"line":1288,"column":6},"end":{"line":1288,"column":28}},"647":{"start":{"line":1295,"column":2},"end":{"line":1298,"column":4}},"648":{"start":{"line":1296,"column":4},"end":{"line":1296,"column":31}},"649":{"start":{"line":1297,"column":4},"end":{"line":1297,"column":29}},"650":{"start":{"line":1299,"column":2},"end":{"line":1299,"column":53}},"651":{"start":{"line":1301,"column":2},"end":{"line":1301,"column":20}},"652":{"start":{"line":1304,"column":0},"end":{"line":1341,"column":2}},"653":{"start":{"line":1305,"column":2},"end":{"line":1308,"column":3}},"654":{"start":{"line":1306,"column":4},"end":{"line":1306,"column":17}},"655":{"start":{"line":1307,"column":4},"end":{"line":1307,"column":17}},"656":{"start":{"line":1309,"column":2},"end":{"line":1309,"column":18}},"657":{"start":{"line":1310,"column":2},"end":{"line":1310,"column":40}},"658":{"start":{"line":1311,"column":2},"end":{"line":1311,"column":35}},"659":{"start":{"line":1312,"column":2},"end":{"line":1312,"column":33}},"660":{"start":{"line":1313,"column":2},"end":{"line":1313,"column":41}},"661":{"start":{"line":1315,"column":2},"end":{"line":1318,"column":3}},"662":{"start":{"line":1316,"column":4},"end":{"line":1316,"column":25}},"663":{"start":{"line":1317,"column":4},"end":{"line":1317,"column":25}},"664":{"start":{"line":1319,"column":2},"end":{"line":1319,"column":43}},"665":{"start":{"line":1321,"column":2},"end":{"line":1321,"column":72}},"666":{"start":{"line":1323,"column":2},"end":{"line":1339,"column":5}},"667":{"start":{"line":1324,"column":4},"end":{"line":1338,"column":5}},"668":{"start":{"line":1325,"column":6},"end":{"line":1325,"column":42}},"669":{"start":{"line":1326,"column":6},"end":{"line":1335,"column":7}},"670":{"start":{"line":1327,"column":8},"end":{"line":1327,"column":37}},"671":{"start":{"line":1328,"column":8},"end":{"line":1328,"column":35}},"672":{"start":{"line":1330,"column":8},"end":{"line":1334,"column":11}},"673":{"start":{"line":1331,"column":10},"end":{"line":1331,"column":46}},"674":{"start":{"line":1331,"column":25},"end":{"line":1331,"column":46}},"675":{"start":{"line":1332,"column":10},"end":{"line":1332,"column":39}},"676":{"start":{"line":1333,"column":10},"end":{"line":1333,"column":37}},"677":{"start":{"line":1337,"column":6},"end":{"line":1337,"column":20}},"678":{"start":{"line":1340,"column":2},"end":{"line":1340,"column":20}},"679":{"start":{"line":1343,"column":0},"end":{"line":1347,"column":2}},"680":{"start":{"line":1344,"column":2},"end":{"line":1344,"column":40}},"681":{"start":{"line":1345,"column":2},"end":{"line":1345,"column":77}},"682":{"start":{"line":1346,"column":2},"end":{"line":1346,"column":38}},"683":{"start":{"line":1349,"column":0},"end":{"line":1364,"column":2}},"684":{"start":{"line":1350,"column":2},"end":{"line":1353,"column":3}},"685":{"start":{"line":1351,"column":4},"end":{"line":1351,"column":17}},"686":{"start":{"line":1352,"column":4},"end":{"line":1352,"column":17}},"687":{"start":{"line":1354,"column":2},"end":{"line":1354,"column":43}},"688":{"start":{"line":1355,"column":2},"end":{"line":1355,"column":35}},"689":{"start":{"line":1356,"column":2},"end":{"line":1362,"column":5}},"690":{"start":{"line":1357,"column":4},"end":{"line":1361,"column":5}},"691":{"start":{"line":1358,"column":6},"end":{"line":1358,"column":58}},"692":{"start":{"line":1360,"column":6},"end":{"line":1360,"column":80}},"693":{"start":{"line":1363,"column":2},"end":{"line":1363,"column":20}},"694":{"start":{"line":1366,"column":0},"end":{"line":1390,"column":2}},"695":{"start":{"line":1367,"column":2},"end":{"line":1370,"column":3}},"696":{"start":{"line":1368,"column":4},"end":{"line":1368,"column":17}},"697":{"start":{"line":1369,"column":4},"end":{"line":1369,"column":17}},"698":{"start":{"line":1372,"column":2},"end":{"line":1372,"column":35}},"699":{"start":{"line":1373,"column":2},"end":{"line":1373,"column":41}},"700":{"start":{"line":1374,"column":2},"end":{"line":1374,"column":30}},"701":{"start":{"line":1376,"column":2},"end":{"line":1376,"column":43}},"702":{"start":{"line":1378,"column":2},"end":{"line":1388,"column":5}},"703":{"start":{"line":1379,"column":4},"end":{"line":1387,"column":5}},"704":{"start":{"line":1380,"column":6},"end":{"line":1380,"column":31}},"705":{"start":{"line":1381,"column":6},"end":{"line":1384,"column":9}},"706":{"start":{"line":1382,"column":8},"end":{"line":1382,"column":44}},"707":{"start":{"line":1382,"column":23},"end":{"line":1382,"column":44}},"708":{"start":{"line":1383,"column":8},"end":{"line":1383,"column":35}},"709":{"start":{"line":1386,"column":6},"end":{"line":1386,"column":80}},"710":{"start":{"line":1389,"column":2},"end":{"line":1389,"column":20}},"711":{"start":{"line":1403,"column":0},"end":{"line":1512,"column":2}},"712":{"start":{"line":1404,"column":2},"end":{"line":1404,"column":18}},"713":{"start":{"line":1405,"column":2},"end":{"line":1405,"column":44}},"714":{"start":{"line":1406,"column":2},"end":{"line":1406,"column":40}},"715":{"start":{"line":1407,"column":2},"end":{"line":1407,"column":33}},"716":{"start":{"line":1408,"column":2},"end":{"line":1408,"column":35}},"717":{"start":{"line":1409,"column":2},"end":{"line":1409,"column":41}},"718":{"start":{"line":1410,"column":2},"end":{"line":1410,"column":20}},"719":{"start":{"line":1411,"column":2},"end":{"line":1411,"column":24}},"720":{"start":{"line":1412,"column":2},"end":{"line":1412,"column":15}},"721":{"start":{"line":1414,"column":2},"end":{"line":1428,"column":3}},"722":{"start":{"line":1417,"column":4},"end":{"line":1417,"column":29}},"723":{"start":{"line":1418,"column":4},"end":{"line":1418,"column":26}},"724":{"start":{"line":1419,"column":9},"end":{"line":1428,"column":3}},"725":{"start":{"line":1422,"column":4},"end":{"line":1422,"column":23}},"726":{"start":{"line":1423,"column":4},"end":{"line":1423,"column":26}},"727":{"start":{"line":1424,"column":9},"end":{"line":1428,"column":3}},"728":{"start":{"line":1426,"column":4},"end":{"line":1426,"column":17}},"729":{"start":{"line":1427,"column":4},"end":{"line":1427,"column":17}},"730":{"start":{"line":1429,"column":2},"end":{"line":1431,"column":3}},"731":{"start":{"line":1430,"column":4},"end":{"line":1430,"column":31}},"732":{"start":{"line":1433,"column":2},"end":{"line":1435,"column":3}},"733":{"start":{"line":1434,"column":4},"end":{"line":1434,"column":62}},"734":{"start":{"line":1437,"column":2},"end":{"line":1437,"column":18}},"735":{"start":{"line":1438,"column":2},"end":{"line":1440,"column":3}},"736":{"start":{"line":1439,"column":4},"end":{"line":1439,"column":34}},"737":{"start":{"line":1441,"column":2},"end":{"line":1511,"column":3}},"738":{"start":{"line":1442,"column":4},"end":{"line":1442,"column":37}},"739":{"start":{"line":1444,"column":4},"end":{"line":1446,"column":5}},"740":{"start":{"line":1445,"column":6},"end":{"line":1445,"column":68}},"741":{"start":{"line":1448,"column":4},"end":{"line":1448,"column":61}},"742":{"start":{"line":1450,"column":4},"end":{"line":1450,"column":30}},"743":{"start":{"line":1451,"column":9},"end":{"line":1511,"column":3}},"744":{"start":{"line":1452,"column":4},"end":{"line":1462,"column":5}},"745":{"start":{"line":1453,"column":6},"end":{"line":1453,"column":53}},"746":{"start":{"line":1454,"column":6},"end":{"line":1456,"column":7}},"747":{"start":{"line":1455,"column":8},"end":{"line":1455,"column":93}},"748":{"start":{"line":1457,"column":6},"end":{"line":1457,"column":46}},"749":{"start":{"line":1458,"column":6},"end":{"line":1458,"column":83}},"750":{"start":{"line":1459,"column":6},"end":{"line":1461,"column":7}},"751":{"start":{"line":1460,"column":8},"end":{"line":1460,"column":83}},"752":{"start":{"line":1464,"column":4},"end":{"line":1505,"column":5}},"753":{"start":{"line":1465,"column":6},"end":{"line":1465,"column":30}},"754":{"start":{"line":1466,"column":6},"end":{"line":1466,"column":42}},"755":{"start":{"line":1468,"column":6},"end":{"line":1471,"column":7}},"756":{"start":{"line":1470,"column":8},"end":{"line":1470,"column":36}},"757":{"start":{"line":1473,"column":6},"end":{"line":1473,"column":55}},"758":{"start":{"line":1475,"column":6},"end":{"line":1475,"column":52}},"759":{"start":{"line":1475,"column":22},"end":{"line":1475,"column":52}},"760":{"start":{"line":1477,"column":6},"end":{"line":1479,"column":7}},"761":{"start":{"line":1478,"column":8},"end":{"line":1478,"column":30}},"762":{"start":{"line":1481,"column":6},"end":{"line":1500,"column":9}},"763":{"start":{"line":1482,"column":8},"end":{"line":1484,"column":9}},"764":{"start":{"line":1483,"column":10},"end":{"line":1483,"column":25}},"765":{"start":{"line":1485,"column":8},"end":{"line":1487,"column":9}},"766":{"start":{"line":1486,"column":10},"end":{"line":1486,"column":32}},"767":{"start":{"line":1489,"column":8},"end":{"line":1499,"column":9}},"768":{"start":{"line":1491,"column":10},"end":{"line":1491,"column":32}},"769":{"start":{"line":1492,"column":10},"end":{"line":1492,"column":25}},"770":{"start":{"line":1494,"column":10},"end":{"line":1496,"column":46}},"771":{"start":{"line":1497,"column":10},"end":{"line":1497,"column":31}},"772":{"start":{"line":1498,"column":10},"end":{"line":1498,"column":18}},"773":{"start":{"line":1501,"column":6},"end":{"line":1501,"column":31}},"774":{"start":{"line":1503,"column":6},"end":{"line":1503,"column":28}},"775":{"start":{"line":1504,"column":6},"end":{"line":1504,"column":25}},"776":{"start":{"line":1506,"column":9},"end":{"line":1511,"column":3}},"777":{"start":{"line":1507,"column":4},"end":{"line":1507,"column":23}},"778":{"start":{"line":1509,"column":4},"end":{"line":1509,"column":33}},"779":{"start":{"line":1510,"column":4},"end":{"line":1510,"column":22}},"780":{"start":{"line":1521,"column":0},"end":{"line":1530,"column":2}},"781":{"start":{"line":1522,"column":2},"end":{"line":1526,"column":3}},"782":{"start":{"line":1524,"column":4},"end":{"line":1524,"column":17}},"783":{"start":{"line":1525,"column":4},"end":{"line":1525,"column":17}},"784":{"start":{"line":1527,"column":2},"end":{"line":1527,"column":43}},"785":{"start":{"line":1528,"column":2},"end":{"line":1528,"column":34}},"786":{"start":{"line":1529,"column":2},"end":{"line":1529,"column":20}},"787":{"start":{"line":1549,"column":0},"end":{"line":1590,"column":2}},"788":{"start":{"line":1550,"column":2},"end":{"line":1550,"column":24}},"789":{"start":{"line":1551,"column":2},"end":{"line":1551,"column":60}},"790":{"start":{"line":1553,"column":2},"end":{"line":1553,"column":56}},"791":{"start":{"line":1555,"column":2},"end":{"line":1566,"column":3}},"792":{"start":{"line":1556,"column":4},"end":{"line":1556,"column":99}},"793":{"start":{"line":1556,"column":28},"end":{"line":1556,"column":99}},"794":{"start":{"line":1558,"column":4},"end":{"line":1565,"column":5}},"795":{"start":{"line":1559,"column":6},"end":{"line":1559,"column":72}},"796":{"start":{"line":1561,"column":6},"end":{"line":1561,"column":58}},"797":{"start":{"line":1562,"column":6},"end":{"line":1562,"column":58}},"798":{"start":{"line":1563,"column":6},"end":{"line":1564,"column":43}},"799":{"start":{"line":1568,"column":2},"end":{"line":1568,"column":57}},"800":{"start":{"line":1569,"column":2},"end":{"line":1569,"column":41}},"801":{"start":{"line":1570,"column":2},"end":{"line":1570,"column":31}},"802":{"start":{"line":1573,"column":2},"end":{"line":1573,"column":35}},"803":{"start":{"line":1575,"column":2},"end":{"line":1585,"column":3}},"804":{"start":{"line":1576,"column":4},"end":{"line":1576,"column":60}},"805":{"start":{"line":1577,"column":4},"end":{"line":1577,"column":38}},"806":{"start":{"line":1578,"column":4},"end":{"line":1578,"column":60}},"807":{"start":{"line":1579,"column":4},"end":{"line":1582,"column":5}},"808":{"start":{"line":1581,"column":6},"end":{"line":1581,"column":68}},"809":{"start":{"line":1584,"column":4},"end":{"line":1584,"column":40}},"810":{"start":{"line":1587,"column":2},"end":{"line":1587,"column":36}},"811":{"start":{"line":1589,"column":2},"end":{"line":1589,"column":51}},"812":{"start":{"line":1607,"column":0},"end":{"line":1685,"column":2}},"813":{"start":{"line":1608,"column":2},"end":{"line":1608,"column":24}},"814":{"start":{"line":1609,"column":2},"end":{"line":1609,"column":54}},"815":{"start":{"line":1611,"column":2},"end":{"line":1611,"column":89}},"816":{"start":{"line":1612,"column":2},"end":{"line":1612,"column":72}},"817":{"start":{"line":1614,"column":2},"end":{"line":1614,"column":80}},"818":{"start":{"line":1615,"column":2},"end":{"line":1615,"column":33}},"819":{"start":{"line":1617,"column":2},"end":{"line":1624,"column":3}},"820":{"start":{"line":1618,"column":4},"end":{"line":1618,"column":56}},"821":{"start":{"line":1619,"column":4},"end":{"line":1619,"column":32}},"822":{"start":{"line":1620,"column":4},"end":{"line":1620,"column":46}},"823":{"start":{"line":1621,"column":4},"end":{"line":1623,"column":5}},"824":{"start":{"line":1622,"column":6},"end":{"line":1622,"column":105}},"825":{"start":{"line":1626,"column":2},"end":{"line":1639,"column":5}},"826":{"start":{"line":1641,"column":2},"end":{"line":1641,"column":86}},"827":{"start":{"line":1644,"column":2},"end":{"line":1659,"column":5}},"828":{"start":{"line":1648,"column":6},"end":{"line":1648,"column":50}},"829":{"start":{"line":1649,"column":6},"end":{"line":1649,"column":59}},"830":{"start":{"line":1650,"column":6},"end":{"line":1650,"column":65}},"831":{"start":{"line":1651,"column":6},"end":{"line":1651,"column":61}},"832":{"start":{"line":1652,"column":6},"end":{"line":1652,"column":59}},"833":{"start":{"line":1653,"column":6},"end":{"line":1653,"column":61}},"834":{"start":{"line":1654,"column":6},"end":{"line":1654,"column":63}},"835":{"start":{"line":1655,"column":6},"end":{"line":1655,"column":65}},"836":{"start":{"line":1656,"column":6},"end":{"line":1656,"column":64}},"837":{"start":{"line":1657,"column":6},"end":{"line":1657,"column":28}},"838":{"start":{"line":1664,"column":2},"end":{"line":1667,"column":4}},"839":{"start":{"line":1665,"column":4},"end":{"line":1665,"column":31}},"840":{"start":{"line":1666,"column":4},"end":{"line":1666,"column":29}},"841":{"start":{"line":1669,"column":2},"end":{"line":1672,"column":4}},"842":{"start":{"line":1670,"column":4},"end":{"line":1670,"column":38}},"843":{"start":{"line":1671,"column":4},"end":{"line":1671,"column":29}},"844":{"start":{"line":1674,"column":2},"end":{"line":1677,"column":4}},"845":{"start":{"line":1675,"column":4},"end":{"line":1675,"column":38}},"846":{"start":{"line":1676,"column":4},"end":{"line":1676,"column":29}},"847":{"start":{"line":1679,"column":2},"end":{"line":1682,"column":4}},"848":{"start":{"line":1680,"column":4},"end":{"line":1680,"column":39}},"849":{"start":{"line":1681,"column":4},"end":{"line":1681,"column":29}},"850":{"start":{"line":1684,"column":2},"end":{"line":1684,"column":20}},"851":{"start":{"line":1694,"column":0},"end":{"line":1736,"column":2}},"852":{"start":{"line":1695,"column":2},"end":{"line":1699,"column":3}},"853":{"start":{"line":1697,"column":4},"end":{"line":1697,"column":17}},"854":{"start":{"line":1698,"column":4},"end":{"line":1698,"column":17}},"855":{"start":{"line":1700,"column":2},"end":{"line":1700,"column":18}},"856":{"start":{"line":1701,"column":2},"end":{"line":1701,"column":40}},"857":{"start":{"line":1702,"column":2},"end":{"line":1702,"column":33}},"858":{"start":{"line":1703,"column":2},"end":{"line":1703,"column":35}},"859":{"start":{"line":1704,"column":2},"end":{"line":1704,"column":41}},"860":{"start":{"line":1706,"column":2},"end":{"line":1709,"column":3}},"861":{"start":{"line":1707,"column":4},"end":{"line":1707,"column":25}},"862":{"start":{"line":1708,"column":4},"end":{"line":1708,"column":25}},"863":{"start":{"line":1710,"column":2},"end":{"line":1710,"column":42}},"864":{"start":{"line":1711,"column":2},"end":{"line":1711,"column":43}},"865":{"start":{"line":1713,"column":2},"end":{"line":1713,"column":42}},"866":{"start":{"line":1714,"column":2},"end":{"line":1714,"column":26}},"867":{"start":{"line":1715,"column":2},"end":{"line":1715,"column":40}},"868":{"start":{"line":1717,"column":2},"end":{"line":1717,"column":51}},"869":{"start":{"line":1718,"column":2},"end":{"line":1718,"column":66}},"870":{"start":{"line":1720,"column":2},"end":{"line":1734,"column":7}},"871":{"start":{"line":1722,"column":6},"end":{"line":1724,"column":7}},"872":{"start":{"line":1723,"column":8},"end":{"line":1723,"column":29}},"873":{"start":{"line":1725,"column":6},"end":{"line":1733,"column":7}},"874":{"start":{"line":1727,"column":8},"end":{"line":1727,"column":37}},"875":{"start":{"line":1728,"column":8},"end":{"line":1728,"column":35}},"876":{"start":{"line":1730,"column":8},"end":{"line":1732,"column":32}},"877":{"start":{"line":1735,"column":2},"end":{"line":1735,"column":20}},"878":{"start":{"line":1738,"column":0},"end":{"line":1756,"column":2}},"879":{"start":{"line":1739,"column":2},"end":{"line":1743,"column":3}},"880":{"start":{"line":1741,"column":4},"end":{"line":1741,"column":17}},"881":{"start":{"line":1742,"column":4},"end":{"line":1742,"column":17}},"882":{"start":{"line":1744,"column":2},"end":{"line":1744,"column":43}},"883":{"start":{"line":1745,"column":2},"end":{"line":1745,"column":35}},"884":{"start":{"line":1746,"column":2},"end":{"line":1746,"column":33}},"885":{"start":{"line":1747,"column":2},"end":{"line":1754,"column":5}},"886":{"start":{"line":1748,"column":4},"end":{"line":1753,"column":5}},"887":{"start":{"line":1749,"column":6},"end":{"line":1749,"column":33}},"888":{"start":{"line":1750,"column":6},"end":{"line":1750,"column":65}},"889":{"start":{"line":1752,"column":6},"end":{"line":1752,"column":77}},"890":{"start":{"line":1755,"column":2},"end":{"line":1755,"column":20}},"891":{"start":{"line":1758,"column":0},"end":{"line":1774,"column":2}},"892":{"start":{"line":1759,"column":2},"end":{"line":1763,"column":3}},"893":{"start":{"line":1761,"column":4},"end":{"line":1761,"column":17}},"894":{"start":{"line":1762,"column":4},"end":{"line":1762,"column":17}},"895":{"start":{"line":1764,"column":2},"end":{"line":1764,"column":43}},"896":{"start":{"line":1765,"column":2},"end":{"line":1765,"column":35}},"897":{"start":{"line":1766,"column":2},"end":{"line":1772,"column":5}},"898":{"start":{"line":1767,"column":4},"end":{"line":1771,"column":5}},"899":{"start":{"line":1768,"column":6},"end":{"line":1768,"column":39}},"900":{"start":{"line":1770,"column":6},"end":{"line":1770,"column":77}},"901":{"start":{"line":1773,"column":2},"end":{"line":1773,"column":20}},"902":{"start":{"line":1783,"column":0},"end":{"line":1827,"column":2}},"903":{"start":{"line":1784,"column":2},"end":{"line":1788,"column":3}},"904":{"start":{"line":1786,"column":4},"end":{"line":1786,"column":17}},"905":{"start":{"line":1787,"column":4},"end":{"line":1787,"column":17}},"906":{"start":{"line":1789,"column":2},"end":{"line":1789,"column":18}},"907":{"start":{"line":1790,"column":2},"end":{"line":1790,"column":40}},"908":{"start":{"line":1791,"column":2},"end":{"line":1791,"column":33}},"909":{"start":{"line":1792,"column":2},"end":{"line":1792,"column":35}},"910":{"start":{"line":1793,"column":2},"end":{"line":1793,"column":41}},"911":{"start":{"line":1795,"column":2},"end":{"line":1798,"column":3}},"912":{"start":{"line":1796,"column":4},"end":{"line":1796,"column":25}},"913":{"start":{"line":1797,"column":4},"end":{"line":1797,"column":25}},"914":{"start":{"line":1799,"column":2},"end":{"line":1799,"column":42}},"915":{"start":{"line":1800,"column":2},"end":{"line":1800,"column":43}},"916":{"start":{"line":1802,"column":2},"end":{"line":1805,"column":4}},"917":{"start":{"line":1803,"column":4},"end":{"line":1803,"column":33}},"918":{"start":{"line":1804,"column":4},"end":{"line":1804,"column":57}},"919":{"start":{"line":1807,"column":2},"end":{"line":1813,"column":4}},"920":{"start":{"line":1808,"column":4},"end":{"line":1812,"column":5}},"921":{"start":{"line":1809,"column":6},"end":{"line":1809,"column":23}},"922":{"start":{"line":1811,"column":6},"end":{"line":1811,"column":15}},"923":{"start":{"line":1815,"column":2},"end":{"line":1815,"column":37}},"924":{"start":{"line":1817,"column":2},"end":{"line":1825,"column":5}},"925":{"start":{"line":1818,"column":4},"end":{"line":1824,"column":5}},"926":{"start":{"line":1820,"column":6},"end":{"line":1820,"column":53}},"927":{"start":{"line":1821,"column":6},"end":{"line":1821,"column":33}},"928":{"start":{"line":1823,"column":6},"end":{"line":1823,"column":20}},"929":{"start":{"line":1826,"column":2},"end":{"line":1826,"column":20}},"930":{"start":{"line":1833,"column":0},"end":{"line":1844,"column":2}},"931":{"start":{"line":1834,"column":2},"end":{"line":1834,"column":40}},"932":{"start":{"line":1835,"column":2},"end":{"line":1835,"column":35}},"933":{"start":{"line":1836,"column":2},"end":{"line":1836,"column":33}},"934":{"start":{"line":1838,"column":2},"end":{"line":1838,"column":42}},"935":{"start":{"line":1839,"column":2},"end":{"line":1839,"column":47}},"936":{"start":{"line":1841,"column":2},"end":{"line":1841,"column":71}},"937":{"start":{"line":1843,"column":2},"end":{"line":1843,"column":38}},"938":{"start":{"line":1857,"column":0},"end":{"line":1925,"column":2}},"939":{"start":{"line":1858,"column":2},"end":{"line":1858,"column":18}},"940":{"start":{"line":1859,"column":2},"end":{"line":1859,"column":40}},"941":{"start":{"line":1860,"column":2},"end":{"line":1860,"column":33}},"942":{"start":{"line":1861,"column":2},"end":{"line":1861,"column":35}},"943":{"start":{"line":1862,"column":2},"end":{"line":1862,"column":35}},"944":{"start":{"line":1863,"column":2},"end":{"line":1863,"column":41}},"945":{"start":{"line":1864,"column":2},"end":{"line":1864,"column":15}},"946":{"start":{"line":1866,"column":2},"end":{"line":1880,"column":3}},"947":{"start":{"line":1869,"column":4},"end":{"line":1869,"column":29}},"948":{"start":{"line":1870,"column":4},"end":{"line":1870,"column":26}},"949":{"start":{"line":1871,"column":9},"end":{"line":1880,"column":3}},"950":{"start":{"line":1874,"column":4},"end":{"line":1874,"column":23}},"951":{"start":{"line":1875,"column":4},"end":{"line":1875,"column":26}},"952":{"start":{"line":1876,"column":9},"end":{"line":1880,"column":3}},"953":{"start":{"line":1878,"column":4},"end":{"line":1878,"column":17}},"954":{"start":{"line":1879,"column":4},"end":{"line":1879,"column":17}},"955":{"start":{"line":1882,"column":2},"end":{"line":1882,"column":18}},"956":{"start":{"line":1883,"column":2},"end":{"line":1885,"column":3}},"957":{"start":{"line":1884,"column":4},"end":{"line":1884,"column":34}},"958":{"start":{"line":1886,"column":2},"end":{"line":1924,"column":3}},"959":{"start":{"line":1887,"column":4},"end":{"line":1887,"column":37}},"960":{"start":{"line":1888,"column":4},"end":{"line":1888,"column":30}},"961":{"start":{"line":1889,"column":9},"end":{"line":1924,"column":3}},"962":{"start":{"line":1890,"column":4},"end":{"line":1918,"column":5}},"963":{"start":{"line":1891,"column":6},"end":{"line":1891,"column":30}},"964":{"start":{"line":1892,"column":6},"end":{"line":1892,"column":42}},"965":{"start":{"line":1893,"column":6},"end":{"line":1893,"column":50}},"966":{"start":{"line":1894,"column":6},"end":{"line":1913,"column":9}},"967":{"start":{"line":1895,"column":8},"end":{"line":1897,"column":9}},"968":{"start":{"line":1896,"column":10},"end":{"line":1896,"column":25}},"969":{"start":{"line":1898,"column":8},"end":{"line":1900,"column":9}},"970":{"start":{"line":1899,"column":10},"end":{"line":1899,"column":32}},"971":{"start":{"line":1902,"column":8},"end":{"line":1912,"column":9}},"972":{"start":{"line":1904,"column":10},"end":{"line":1904,"column":32}},"973":{"start":{"line":1905,"column":10},"end":{"line":1905,"column":25}},"974":{"start":{"line":1907,"column":10},"end":{"line":1909,"column":46}},"975":{"start":{"line":1910,"column":10},"end":{"line":1910,"column":31}},"976":{"start":{"line":1911,"column":10},"end":{"line":1911,"column":18}},"977":{"start":{"line":1914,"column":6},"end":{"line":1914,"column":31}},"978":{"start":{"line":1916,"column":6},"end":{"line":1916,"column":28}},"979":{"start":{"line":1917,"column":6},"end":{"line":1917,"column":25}},"980":{"start":{"line":1919,"column":9},"end":{"line":1924,"column":3}},"981":{"start":{"line":1920,"column":4},"end":{"line":1920,"column":23}},"982":{"start":{"line":1922,"column":4},"end":{"line":1922,"column":37}},"983":{"start":{"line":1923,"column":4},"end":{"line":1923,"column":22}},"984":{"start":{"line":1935,"column":0},"end":{"line":1944,"column":2}},"985":{"start":{"line":1936,"column":2},"end":{"line":1940,"column":3}},"986":{"start":{"line":1938,"column":4},"end":{"line":1938,"column":17}},"987":{"start":{"line":1939,"column":4},"end":{"line":1939,"column":17}},"988":{"start":{"line":1941,"column":2},"end":{"line":1941,"column":43}},"989":{"start":{"line":1942,"column":2},"end":{"line":1942,"column":25}},"990":{"start":{"line":1943,"column":2},"end":{"line":1943,"column":20}},"991":{"start":{"line":1946,"column":0},"end":{"line":2047,"column":2}},"992":{"start":{"line":1947,"column":2},"end":{"line":1947,"column":24}},"993":{"start":{"line":1948,"column":2},"end":{"line":1948,"column":54}},"994":{"start":{"line":1950,"column":2},"end":{"line":1950,"column":42}},"995":{"start":{"line":1951,"column":2},"end":{"line":1951,"column":83}},"996":{"start":{"line":1952,"column":2},"end":{"line":1952,"column":78}},"997":{"start":{"line":1953,"column":2},"end":{"line":1953,"column":68}},"998":{"start":{"line":1955,"column":2},"end":{"line":1959,"column":3}},"999":{"start":{"line":1956,"column":4},"end":{"line":1956,"column":38}},"1000":{"start":{"line":1957,"column":4},"end":{"line":1958,"column":73}},"1001":{"start":{"line":1961,"column":2},"end":{"line":1974,"column":5}},"1002":{"start":{"line":1976,"column":2},"end":{"line":1976,"column":29}},"1003":{"start":{"line":1978,"column":2},"end":{"line":1986,"column":3}},"1004":{"start":{"line":1979,"column":4},"end":{"line":1979,"column":56}},"1005":{"start":{"line":1979,"column":32},"end":{"line":1979,"column":53}},"1006":{"start":{"line":1980,"column":9},"end":{"line":1986,"column":3}},"1007":{"start":{"line":1981,"column":4},"end":{"line":1985,"column":23}},"1008":{"start":{"line":1982,"column":6},"end":{"line":1984,"column":8}},"1009":{"start":{"line":1983,"column":8},"end":{"line":1983,"column":32}},"1010":{"start":{"line":1988,"column":2},"end":{"line":1988,"column":79}},"1011":{"start":{"line":1991,"column":2},"end":{"line":2003,"column":3}},"1012":{"start":{"line":1992,"column":4},"end":{"line":2002,"column":7}},"1013":{"start":{"line":1993,"column":6},"end":{"line":1993,"column":36}},"1014":{"start":{"line":1994,"column":6},"end":{"line":2001,"column":7}},"1015":{"start":{"line":1995,"column":8},"end":{"line":2000,"column":9}},"1016":{"start":{"line":1996,"column":10},"end":{"line":1996,"column":50}},"1017":{"start":{"line":1997,"column":10},"end":{"line":1997,"column":72}},"1018":{"start":{"line":1998,"column":10},"end":{"line":1998,"column":56}},"1019":{"start":{"line":1999,"column":10},"end":{"line":1999,"column":21}},"1020":{"start":{"line":2006,"column":2},"end":{"line":2021,"column":5}},"1021":{"start":{"line":2010,"column":6},"end":{"line":2010,"column":53}},"1022":{"start":{"line":2011,"column":6},"end":{"line":2011,"column":59}},"1023":{"start":{"line":2012,"column":6},"end":{"line":2012,"column":61}},"1024":{"start":{"line":2013,"column":6},"end":{"line":2013,"column":59}},"1025":{"start":{"line":2014,"column":6},"end":{"line":2014,"column":61}},"1026":{"start":{"line":2015,"column":6},"end":{"line":2015,"column":63}},"1027":{"start":{"line":2016,"column":6},"end":{"line":2016,"column":67}},"1028":{"start":{"line":2017,"column":6},"end":{"line":2017,"column":65}},"1029":{"start":{"line":2018,"column":6},"end":{"line":2018,"column":64}},"1030":{"start":{"line":2019,"column":6},"end":{"line":2019,"column":28}},"1031":{"start":{"line":2026,"column":2},"end":{"line":2029,"column":4}},"1032":{"start":{"line":2027,"column":4},"end":{"line":2027,"column":31}},"1033":{"start":{"line":2028,"column":4},"end":{"line":2028,"column":29}},"1034":{"start":{"line":2031,"column":2},"end":{"line":2034,"column":4}},"1035":{"start":{"line":2032,"column":4},"end":{"line":2032,"column":38}},"1036":{"start":{"line":2033,"column":4},"end":{"line":2033,"column":29}},"1037":{"start":{"line":2036,"column":2},"end":{"line":2039,"column":4}},"1038":{"start":{"line":2037,"column":4},"end":{"line":2037,"column":38}},"1039":{"start":{"line":2038,"column":4},"end":{"line":2038,"column":29}},"1040":{"start":{"line":2041,"column":2},"end":{"line":2044,"column":4}},"1041":{"start":{"line":2042,"column":4},"end":{"line":2042,"column":39}},"1042":{"start":{"line":2043,"column":4},"end":{"line":2043,"column":29}},"1043":{"start":{"line":2046,"column":2},"end":{"line":2046,"column":20}},"1044":{"start":{"line":2049,"column":0},"end":{"line":2092,"column":2}},"1045":{"start":{"line":2050,"column":2},"end":{"line":2050,"column":40}},"1046":{"start":{"line":2051,"column":2},"end":{"line":2051,"column":41}},"1047":{"start":{"line":2052,"column":2},"end":{"line":2052,"column":45}},"1048":{"start":{"line":2053,"column":2},"end":{"line":2053,"column":15}},"1049":{"start":{"line":2055,"column":2},"end":{"line":2069,"column":3}},"1050":{"start":{"line":2058,"column":4},"end":{"line":2058,"column":29}},"1051":{"start":{"line":2059,"column":4},"end":{"line":2059,"column":26}},"1052":{"start":{"line":2060,"column":9},"end":{"line":2069,"column":3}},"1053":{"start":{"line":2063,"column":4},"end":{"line":2063,"column":23}},"1054":{"start":{"line":2064,"column":4},"end":{"line":2064,"column":26}},"1055":{"start":{"line":2065,"column":9},"end":{"line":2069,"column":3}},"1056":{"start":{"line":2067,"column":4},"end":{"line":2067,"column":17}},"1057":{"start":{"line":2068,"column":4},"end":{"line":2068,"column":17}},"1058":{"start":{"line":2071,"column":2},"end":{"line":2077,"column":3}},"1059":{"start":{"line":2072,"column":4},"end":{"line":2075,"column":5}},"1060":{"start":{"line":2073,"column":6},"end":{"line":2073,"column":63}},"1061":{"start":{"line":2074,"column":6},"end":{"line":2074,"column":57}},"1062":{"start":{"line":2076,"column":4},"end":{"line":2076,"column":11}},"1063":{"start":{"line":2079,"column":2},"end":{"line":2079,"column":46}},"1064":{"start":{"line":2081,"column":2},"end":{"line":2083,"column":3}},"1065":{"start":{"line":2082,"column":4},"end":{"line":2082,"column":40}},"1066":{"start":{"line":2085,"column":2},"end":{"line":2091,"column":3}},"1067":{"start":{"line":2086,"column":4},"end":{"line":2088,"column":7}},"1068":{"start":{"line":2087,"column":6},"end":{"line":2087,"column":33}},"1069":{"start":{"line":2089,"column":9},"end":{"line":2091,"column":3}},"1070":{"start":{"line":2090,"column":4},"end":{"line":2090,"column":28}},"1071":{"start":{"line":2094,"column":0},"end":{"line":2137,"column":2}},"1072":{"start":{"line":2095,"column":2},"end":{"line":2136,"column":3}},"1073":{"start":{"line":2096,"column":4},"end":{"line":2096,"column":20}},"1074":{"start":{"line":2097,"column":4},"end":{"line":2097,"column":47}},"1075":{"start":{"line":2098,"column":4},"end":{"line":2098,"column":43}},"1076":{"start":{"line":2099,"column":4},"end":{"line":2104,"column":5}},"1077":{"start":{"line":2100,"column":6},"end":{"line":2100,"column":37}},"1078":{"start":{"line":2101,"column":6},"end":{"line":2101,"column":36}},"1079":{"start":{"line":2103,"column":6},"end":{"line":2103,"column":30}},"1080":{"start":{"line":2105,"column":4},"end":{"line":2121,"column":6}},"1081":{"start":{"line":2106,"column":6},"end":{"line":2120,"column":7}},"1082":{"start":{"line":2107,"column":8},"end":{"line":2107,"column":49}},"1083":{"start":{"line":2108,"column":8},"end":{"line":2111,"column":13}},"1084":{"start":{"line":2110,"column":12},"end":{"line":2110,"column":50}},"1085":{"start":{"line":2112,"column":13},"end":{"line":2120,"column":7}},"1086":{"start":{"line":2113,"column":8},"end":{"line":2113,"column":57}},"1087":{"start":{"line":2115,"column":8},"end":{"line":2117,"column":11}},"1088":{"start":{"line":2116,"column":10},"end":{"line":2116,"column":35}},"1089":{"start":{"line":2119,"column":8},"end":{"line":2119,"column":35}},"1090":{"start":{"line":2122,"column":4},"end":{"line":2122,"column":39}},"1091":{"start":{"line":2123,"column":4},"end":{"line":2135,"column":6}},"1092":{"start":{"line":2124,"column":6},"end":{"line":2133,"column":7}},"1093":{"start":{"line":2125,"column":8},"end":{"line":2125,"column":32}},"1094":{"start":{"line":2126,"column":8},"end":{"line":2132,"column":10}},"1095":{"start":{"line":2127,"column":10},"end":{"line":2131,"column":13}},"1096":{"start":{"line":2128,"column":12},"end":{"line":2130,"column":15}},"1097":{"start":{"line":2129,"column":14},"end":{"line":2129,"column":25}},"1098":{"start":{"line":2134,"column":6},"end":{"line":2134,"column":67}},"1099":{"start":{"line":2139,"column":0},"end":{"line":2144,"column":2}},"1100":{"start":{"line":2140,"column":2},"end":{"line":2140,"column":54}},"1101":{"start":{"line":2141,"column":2},"end":{"line":2141,"column":61}},"1102":{"start":{"line":2142,"column":2},"end":{"line":2142,"column":46}},"1103":{"start":{"line":2143,"column":2},"end":{"line":2143,"column":23}},"1104":{"start":{"line":2146,"column":0},"end":{"line":2216,"column":2}},"1105":{"start":{"line":2147,"column":2},"end":{"line":2151,"column":3}},"1106":{"start":{"line":2149,"column":4},"end":{"line":2149,"column":17}},"1107":{"start":{"line":2150,"column":4},"end":{"line":2150,"column":17}},"1108":{"start":{"line":2152,"column":2},"end":{"line":2152,"column":40}},"1109":{"start":{"line":2153,"column":2},"end":{"line":2153,"column":45}},"1110":{"start":{"line":2154,"column":2},"end":{"line":2154,"column":41}},"1111":{"start":{"line":2156,"column":2},"end":{"line":2159,"column":3}},"1112":{"start":{"line":2157,"column":4},"end":{"line":2157,"column":25}},"1113":{"start":{"line":2158,"column":4},"end":{"line":2158,"column":25}},"1114":{"start":{"line":2161,"column":2},"end":{"line":2161,"column":42}},"1115":{"start":{"line":2162,"column":2},"end":{"line":2162,"column":43}},"1116":{"start":{"line":2164,"column":2},"end":{"line":2164,"column":60}},"1117":{"start":{"line":2166,"column":2},"end":{"line":2178,"column":4}},"1118":{"start":{"line":2167,"column":4},"end":{"line":2177,"column":5}},"1119":{"start":{"line":2168,"column":6},"end":{"line":2168,"column":53}},"1120":{"start":{"line":2169,"column":6},"end":{"line":2171,"column":9}},"1121":{"start":{"line":2170,"column":8},"end":{"line":2170,"column":41}},"1122":{"start":{"line":2173,"column":6},"end":{"line":2176,"column":11}},"1123":{"start":{"line":2175,"column":10},"end":{"line":2175,"column":43}},"1124":{"start":{"line":2180,"column":2},"end":{"line":2214,"column":3}},"1125":{"start":{"line":2181,"column":4},"end":{"line":2184,"column":7}},"1126":{"start":{"line":2182,"column":6},"end":{"line":2182,"column":36}},"1127":{"start":{"line":2182,"column":15},"end":{"line":2182,"column":36}},"1128":{"start":{"line":2183,"column":6},"end":{"line":2183,"column":25}},"1129":{"start":{"line":2186,"column":4},"end":{"line":2191,"column":6}},"1130":{"start":{"line":2192,"column":4},"end":{"line":2213,"column":7}},"1131":{"start":{"line":2193,"column":6},"end":{"line":2197,"column":7}},"1132":{"start":{"line":2194,"column":8},"end":{"line":2196,"column":11}},"1133":{"start":{"line":2195,"column":10},"end":{"line":2195,"column":18}},"1134":{"start":{"line":2199,"column":6},"end":{"line":2199,"column":62}},"1135":{"start":{"line":2200,"column":6},"end":{"line":2212,"column":7}},"1136":{"start":{"line":2201,"column":8},"end":{"line":2203,"column":11}},"1137":{"start":{"line":2202,"column":10},"end":{"line":2202,"column":18}},"1138":{"start":{"line":2205,"column":8},"end":{"line":2211,"column":11}},"1139":{"start":{"line":2206,"column":10},"end":{"line":2206,"column":34}},"1140":{"start":{"line":2206,"column":19},"end":{"line":2206,"column":34}},"1141":{"start":{"line":2207,"column":10},"end":{"line":2207,"column":34}},"1142":{"start":{"line":2208,"column":10},"end":{"line":2210,"column":13}},"1143":{"start":{"line":2209,"column":12},"end":{"line":2209,"column":39}},"1144":{"start":{"line":2215,"column":2},"end":{"line":2215,"column":20}},"1145":{"start":{"line":2218,"column":0},"end":{"line":2247,"column":2}},"1146":{"start":{"line":2219,"column":2},"end":{"line":2219,"column":40}},"1147":{"start":{"line":2220,"column":2},"end":{"line":2220,"column":41}},"1148":{"start":{"line":2221,"column":2},"end":{"line":2221,"column":45}},"1149":{"start":{"line":2222,"column":2},"end":{"line":2222,"column":48}},"1150":{"start":{"line":2223,"column":2},"end":{"line":2223,"column":54}},"1151":{"start":{"line":2224,"column":2},"end":{"line":2224,"column":47}},"1152":{"start":{"line":2226,"column":2},"end":{"line":2226,"column":42}},"1153":{"start":{"line":2228,"column":2},"end":{"line":2228,"column":66}},"1154":{"start":{"line":2230,"column":2},"end":{"line":2230,"column":33}},"1155":{"start":{"line":2231,"column":2},"end":{"line":2231,"column":49}},"1156":{"start":{"line":2233,"column":2},"end":{"line":2233,"column":64}},"1157":{"start":{"line":2234,"column":2},"end":{"line":2234,"column":69}},"1158":{"start":{"line":2236,"column":2},"end":{"line":2239,"column":3}},"1159":{"start":{"line":2237,"column":4},"end":{"line":2237,"column":74}},"1160":{"start":{"line":2238,"column":4},"end":{"line":2238,"column":29}},"1161":{"start":{"line":2241,"column":2},"end":{"line":2241,"column":54}},"1162":{"start":{"line":2242,"column":2},"end":{"line":2242,"column":49}},"1163":{"start":{"line":2244,"column":2},"end":{"line":2244,"column":49}},"1164":{"start":{"line":2246,"column":2},"end":{"line":2246,"column":26}},"1165":{"start":{"line":2249,"column":0},"end":{"line":2304,"column":2}},"1166":{"start":{"line":2250,"column":2},"end":{"line":2254,"column":3}},"1167":{"start":{"line":2252,"column":4},"end":{"line":2252,"column":17}},"1168":{"start":{"line":2253,"column":4},"end":{"line":2253,"column":17}},"1169":{"start":{"line":2256,"column":2},"end":{"line":2256,"column":40}},"1170":{"start":{"line":2257,"column":2},"end":{"line":2257,"column":41}},"1171":{"start":{"line":2258,"column":2},"end":{"line":2258,"column":45}},"1172":{"start":{"line":2260,"column":2},"end":{"line":2260,"column":57}},"1173":{"start":{"line":2261,"column":2},"end":{"line":2261,"column":67}},"1174":{"start":{"line":2263,"column":2},"end":{"line":2263,"column":46}},"1175":{"start":{"line":2264,"column":2},"end":{"line":2302,"column":3}},"1176":{"start":{"line":2265,"column":4},"end":{"line":2265,"column":45}},"1177":{"start":{"line":2266,"column":4},"end":{"line":2266,"column":23}},"1178":{"start":{"line":2267,"column":4},"end":{"line":2273,"column":6}},"1179":{"start":{"line":2274,"column":4},"end":{"line":2297,"column":7}},"1180":{"start":{"line":2275,"column":6},"end":{"line":2275,"column":30}},"1181":{"start":{"line":2275,"column":15},"end":{"line":2275,"column":30}},"1182":{"start":{"line":2277,"column":6},"end":{"line":2277,"column":51}},"1183":{"start":{"line":2280,"column":6},"end":{"line":2282,"column":7}},"1184":{"start":{"line":2281,"column":8},"end":{"line":2281,"column":57}},"1185":{"start":{"line":2284,"column":6},"end":{"line":2296,"column":9}},"1186":{"start":{"line":2285,"column":8},"end":{"line":2285,"column":32}},"1187":{"start":{"line":2285,"column":17},"end":{"line":2285,"column":32}},"1188":{"start":{"line":2287,"column":8},"end":{"line":2292,"column":10}},"1189":{"start":{"line":2293,"column":8},"end":{"line":2295,"column":11}},"1190":{"start":{"line":2294,"column":10},"end":{"line":2294,"column":36}},"1191":{"start":{"line":2298,"column":9},"end":{"line":2302,"column":3}},"1192":{"start":{"line":2299,"column":4},"end":{"line":2299,"column":52}},"1193":{"start":{"line":2300,"column":9},"end":{"line":2302,"column":3}},"1194":{"start":{"line":2301,"column":4},"end":{"line":2301,"column":47}},"1195":{"start":{"line":2303,"column":2},"end":{"line":2303,"column":20}},"1196":{"start":{"line":2306,"column":0},"end":{"line":2340,"column":2}},"1197":{"start":{"line":2307,"column":2},"end":{"line":2311,"column":3}},"1198":{"start":{"line":2309,"column":4},"end":{"line":2309,"column":17}},"1199":{"start":{"line":2310,"column":4},"end":{"line":2310,"column":17}},"1200":{"start":{"line":2312,"column":2},"end":{"line":2312,"column":43}},"1201":{"start":{"line":2313,"column":2},"end":{"line":2313,"column":40}},"1202":{"start":{"line":2314,"column":2},"end":{"line":2314,"column":41}},"1203":{"start":{"line":2315,"column":2},"end":{"line":2315,"column":45}},"1204":{"start":{"line":2316,"column":2},"end":{"line":2316,"column":53}},"1205":{"start":{"line":2318,"column":2},"end":{"line":2321,"column":3}},"1206":{"start":{"line":2319,"column":4},"end":{"line":2319,"column":9}},"1207":{"start":{"line":2320,"column":4},"end":{"line":2320,"column":22}},"1208":{"start":{"line":2323,"column":2},"end":{"line":2323,"column":51}},"1209":{"start":{"line":2325,"column":2},"end":{"line":2330,"column":4}},"1210":{"start":{"line":2331,"column":2},"end":{"line":2337,"column":5}},"1211":{"start":{"line":2332,"column":4},"end":{"line":2332,"column":28}},"1212":{"start":{"line":2332,"column":13},"end":{"line":2332,"column":28}},"1213":{"start":{"line":2333,"column":4},"end":{"line":2336,"column":7}},"1214":{"start":{"line":2334,"column":6},"end":{"line":2334,"column":30}},"1215":{"start":{"line":2334,"column":15},"end":{"line":2334,"column":30}},"1216":{"start":{"line":2335,"column":6},"end":{"line":2335,"column":61}},"1217":{"start":{"line":2339,"column":2},"end":{"line":2339,"column":20}},"1218":{"start":{"line":2342,"column":0},"end":{"line":2489,"column":2}},"1219":{"start":{"line":2343,"column":2},"end":{"line":2343,"column":24}},"1220":{"start":{"line":2344,"column":2},"end":{"line":2344,"column":60}},"1221":{"start":{"line":2346,"column":2},"end":{"line":2346,"column":42}},"1222":{"start":{"line":2347,"column":2},"end":{"line":2347,"column":83}},"1223":{"start":{"line":2348,"column":2},"end":{"line":2348,"column":84}},"1224":{"start":{"line":2349,"column":2},"end":{"line":2349,"column":68}},"1225":{"start":{"line":2351,"column":2},"end":{"line":2355,"column":3}},"1226":{"start":{"line":2352,"column":4},"end":{"line":2352,"column":38}},"1227":{"start":{"line":2353,"column":4},"end":{"line":2354,"column":73}},"1228":{"start":{"line":2357,"column":2},"end":{"line":2369,"column":5}},"1229":{"start":{"line":2371,"column":2},"end":{"line":2373,"column":5}},"1230":{"start":{"line":2372,"column":43},"end":{"line":2372,"column":53}},"1231":{"start":{"line":2375,"column":2},"end":{"line":2390,"column":3}},"1232":{"start":{"line":2376,"column":4},"end":{"line":2389,"column":7}},"1233":{"start":{"line":2377,"column":6},"end":{"line":2377,"column":22}},"1234":{"start":{"line":2378,"column":6},"end":{"line":2378,"column":50}},"1235":{"start":{"line":2379,"column":6},"end":{"line":2379,"column":28}},"1236":{"start":{"line":2380,"column":6},"end":{"line":2387,"column":9}},"1237":{"start":{"line":2381,"column":8},"end":{"line":2386,"column":9}},"1238":{"start":{"line":2382,"column":10},"end":{"line":2382,"column":27}},"1239":{"start":{"line":2383,"column":10},"end":{"line":2383,"column":68}},"1240":{"start":{"line":2384,"column":10},"end":{"line":2384,"column":46}},"1241":{"start":{"line":2385,"column":10},"end":{"line":2385,"column":56}},"1242":{"start":{"line":2388,"column":6},"end":{"line":2388,"column":32}},"1243":{"start":{"line":2388,"column":21},"end":{"line":2388,"column":32}},"1244":{"start":{"line":2392,"column":2},"end":{"line":2404,"column":3}},"1245":{"start":{"line":2393,"column":4},"end":{"line":2403,"column":29}},"1246":{"start":{"line":2394,"column":6},"end":{"line":2394,"column":50}},"1247":{"start":{"line":2395,"column":6},"end":{"line":2395,"column":92}},"1248":{"start":{"line":2395,"column":47},"end":{"line":2395,"column":88}},"1249":{"start":{"line":2396,"column":6},"end":{"line":2398,"column":9}},"1250":{"start":{"line":2397,"column":8},"end":{"line":2397,"column":60}},"1251":{"start":{"line":2399,"column":6},"end":{"line":2402,"column":7}},"1252":{"start":{"line":2400,"column":8},"end":{"line":2400,"column":91}},"1253":{"start":{"line":2401,"column":8},"end":{"line":2401,"column":19}},"1254":{"start":{"line":2407,"column":2},"end":{"line":2431,"column":3}},"1255":{"start":{"line":2408,"column":4},"end":{"line":2430,"column":7}},"1256":{"start":{"line":2409,"column":6},"end":{"line":2409,"column":22}},"1257":{"start":{"line":2410,"column":6},"end":{"line":2410,"column":50}},"1258":{"start":{"line":2411,"column":6},"end":{"line":2411,"column":28}},"1259":{"start":{"line":2412,"column":6},"end":{"line":2428,"column":9}},"1260":{"start":{"line":2413,"column":8},"end":{"line":2427,"column":9}},"1261":{"start":{"line":2414,"column":10},"end":{"line":2423,"column":11}},"1262":{"start":{"line":2415,"column":12},"end":{"line":2415,"column":29}},"1263":{"start":{"line":2416,"column":12},"end":{"line":2416,"column":34}},"1264":{"start":{"line":2417,"column":12},"end":{"line":2417,"column":52}},"1265":{"start":{"line":2418,"column":12},"end":{"line":2420,"column":61}},"1266":{"start":{"line":2421,"column":12},"end":{"line":2421,"column":67}},"1267":{"start":{"line":2422,"column":12},"end":{"line":2422,"column":58}},"1268":{"start":{"line":2425,"column":10},"end":{"line":2425,"column":27}},"1269":{"start":{"line":2426,"column":10},"end":{"line":2426,"column":76}},"1270":{"start":{"line":2429,"column":6},"end":{"line":2429,"column":32}},"1271":{"start":{"line":2429,"column":21},"end":{"line":2429,"column":32}},"1272":{"start":{"line":2433,"column":2},"end":{"line":2445,"column":4}},"1273":{"start":{"line":2447,"column":2},"end":{"line":2447,"column":43}},"1274":{"start":{"line":2448,"column":2},"end":{"line":2448,"column":68}},"1275":{"start":{"line":2450,"column":2},"end":{"line":2450,"column":45}},"1276":{"start":{"line":2451,"column":2},"end":{"line":2451,"column":74}},"1277":{"start":{"line":2453,"column":2},"end":{"line":2453,"column":47}},"1278":{"start":{"line":2454,"column":2},"end":{"line":2454,"column":72}},"1279":{"start":{"line":2456,"column":2},"end":{"line":2456,"column":33}},"1280":{"start":{"line":2457,"column":2},"end":{"line":2457,"column":59}},"1281":{"start":{"line":2459,"column":2},"end":{"line":2459,"column":39}},"1282":{"start":{"line":2460,"column":2},"end":{"line":2460,"column":64}},"1283":{"start":{"line":2462,"column":2},"end":{"line":2462,"column":58}},"1284":{"start":{"line":2463,"column":2},"end":{"line":2463,"column":56}},"1285":{"start":{"line":2465,"column":2},"end":{"line":2465,"column":60}},"1286":{"start":{"line":2467,"column":2},"end":{"line":2469,"column":3}},"1287":{"start":{"line":2468,"column":4},"end":{"line":2468,"column":68}},"1288":{"start":{"line":2471,"column":2},"end":{"line":2471,"column":88}},"1289":{"start":{"line":2473,"column":2},"end":{"line":2479,"column":3}},"1290":{"start":{"line":2474,"column":4},"end":{"line":2474,"column":38}},"1291":{"start":{"line":2475,"column":4},"end":{"line":2475,"column":42}},"1292":{"start":{"line":2476,"column":4},"end":{"line":2478,"column":5}},"1293":{"start":{"line":2477,"column":6},"end":{"line":2477,"column":76}},"1294":{"start":{"line":2482,"column":2},"end":{"line":2484,"column":39}},"1295":{"start":{"line":2483,"column":4},"end":{"line":2483,"column":14}},"1296":{"start":{"line":2486,"column":2},"end":{"line":2486,"column":49}},"1297":{"start":{"line":2488,"column":2},"end":{"line":2488,"column":20}},"1298":{"start":{"line":2491,"column":0},"end":{"line":2532,"column":2}},"1299":{"start":{"line":2492,"column":2},"end":{"line":2531,"column":3}},"1300":{"start":{"line":2493,"column":4},"end":{"line":2493,"column":20}},"1301":{"start":{"line":2494,"column":4},"end":{"line":2494,"column":47}},"1302":{"start":{"line":2495,"column":4},"end":{"line":2495,"column":43}},"1303":{"start":{"line":2496,"column":4},"end":{"line":2501,"column":5}},"1304":{"start":{"line":2497,"column":6},"end":{"line":2497,"column":37}},"1305":{"start":{"line":2498,"column":6},"end":{"line":2498,"column":36}},"1306":{"start":{"line":2500,"column":6},"end":{"line":2500,"column":30}},"1307":{"start":{"line":2502,"column":4},"end":{"line":2516,"column":6}},"1308":{"start":{"line":2503,"column":6},"end":{"line":2515,"column":7}},"1309":{"start":{"line":2504,"column":8},"end":{"line":2504,"column":47}},"1310":{"start":{"line":2505,"column":8},"end":{"line":2508,"column":9}},"1311":{"start":{"line":2506,"column":10},"end":{"line":2506,"column":49}},"1312":{"start":{"line":2507,"column":10},"end":{"line":2507,"column":56}},"1313":{"start":{"line":2507,"column":26},"end":{"line":2507,"column":56}},"1314":{"start":{"line":2509,"column":8},"end":{"line":2512,"column":13}},"1315":{"start":{"line":2511,"column":12},"end":{"line":2511,"column":50}},"1316":{"start":{"line":2514,"column":8},"end":{"line":2514,"column":35}},"1317":{"start":{"line":2517,"column":4},"end":{"line":2517,"column":39}},"1318":{"start":{"line":2518,"column":4},"end":{"line":2530,"column":6}},"1319":{"start":{"line":2519,"column":6},"end":{"line":2528,"column":7}},"1320":{"start":{"line":2520,"column":8},"end":{"line":2520,"column":32}},"1321":{"start":{"line":2521,"column":8},"end":{"line":2527,"column":10}},"1322":{"start":{"line":2522,"column":10},"end":{"line":2526,"column":13}},"1323":{"start":{"line":2523,"column":12},"end":{"line":2525,"column":15}},"1324":{"start":{"line":2524,"column":14},"end":{"line":2524,"column":25}},"1325":{"start":{"line":2529,"column":6},"end":{"line":2529,"column":67}},"1326":{"start":{"line":2534,"column":0},"end":{"line":2540,"column":2}},"1327":{"start":{"line":2536,"column":2},"end":{"line":2536,"column":54}},"1328":{"start":{"line":2537,"column":2},"end":{"line":2537,"column":66}},"1329":{"start":{"line":2538,"column":2},"end":{"line":2538,"column":64}},"1330":{"start":{"line":2539,"column":2},"end":{"line":2539,"column":22}},"1331":{"start":{"line":2542,"column":0},"end":{"line":2582,"column":2}},"1332":{"start":{"line":2543,"column":2},"end":{"line":2543,"column":40}},"1333":{"start":{"line":2544,"column":2},"end":{"line":2544,"column":41}},"1334":{"start":{"line":2546,"column":2},"end":{"line":2546,"column":22}},"1335":{"start":{"line":2548,"column":2},"end":{"line":2557,"column":3}},"1336":{"start":{"line":2551,"column":4},"end":{"line":2551,"column":23}},"1337":{"start":{"line":2552,"column":4},"end":{"line":2552,"column":26}},"1338":{"start":{"line":2553,"column":9},"end":{"line":2557,"column":3}},"1339":{"start":{"line":2555,"column":4},"end":{"line":2555,"column":17}},"1340":{"start":{"line":2556,"column":4},"end":{"line":2556,"column":17}},"1341":{"start":{"line":2559,"column":2},"end":{"line":2561,"column":3}},"1342":{"start":{"line":2560,"column":4},"end":{"line":2560,"column":31}},"1343":{"start":{"line":2563,"column":2},"end":{"line":2563,"column":49}},"1344":{"start":{"line":2565,"column":2},"end":{"line":2565,"column":51}},"1345":{"start":{"line":2567,"column":2},"end":{"line":2567,"column":51}},"1346":{"start":{"line":2569,"column":2},"end":{"line":2571,"column":3}},"1347":{"start":{"line":2570,"column":4},"end":{"line":2570,"column":90}},"1348":{"start":{"line":2573,"column":2},"end":{"line":2579,"column":4}},"1349":{"start":{"line":2574,"column":4},"end":{"line":2578,"column":5}},"1350":{"start":{"line":2575,"column":6},"end":{"line":2575,"column":57}},"1351":{"start":{"line":2577,"column":6},"end":{"line":2577,"column":55}},"1352":{"start":{"line":2577,"column":36},"end":{"line":2577,"column":51}},"1353":{"start":{"line":2581,"column":2},"end":{"line":2581,"column":30}},"1354":{"start":{"line":2584,"column":0},"end":{"line":2614,"column":2}},"1355":{"start":{"line":2585,"column":2},"end":{"line":2589,"column":3}},"1356":{"start":{"line":2587,"column":4},"end":{"line":2587,"column":17}},"1357":{"start":{"line":2588,"column":4},"end":{"line":2588,"column":17}},"1358":{"start":{"line":2590,"column":2},"end":{"line":2590,"column":33}},"1359":{"start":{"line":2591,"column":2},"end":{"line":2591,"column":40}},"1360":{"start":{"line":2592,"column":2},"end":{"line":2592,"column":41}},"1361":{"start":{"line":2594,"column":2},"end":{"line":2594,"column":41}},"1362":{"start":{"line":2596,"column":2},"end":{"line":2602,"column":4}},"1363":{"start":{"line":2597,"column":4},"end":{"line":2600,"column":5}},"1364":{"start":{"line":2598,"column":6},"end":{"line":2598,"column":33}},"1365":{"start":{"line":2599,"column":6},"end":{"line":2599,"column":46}},"1366":{"start":{"line":2599,"column":34},"end":{"line":2599,"column":46}},"1367":{"start":{"line":2601,"column":4},"end":{"line":2601,"column":16}},"1368":{"start":{"line":2604,"column":2},"end":{"line":2604,"column":35}},"1369":{"start":{"line":2605,"column":2},"end":{"line":2605,"column":49}},"1370":{"start":{"line":2607,"column":2},"end":{"line":2611,"column":3}},"1371":{"start":{"line":2608,"column":4},"end":{"line":2610,"column":7}},"1372":{"start":{"line":2609,"column":6},"end":{"line":2609,"column":21}},"1373":{"start":{"line":2613,"column":2},"end":{"line":2613,"column":14}},"1374":{"start":{"line":2616,"column":0},"end":{"line":2627,"column":2}},"1375":{"start":{"line":2617,"column":2},"end":{"line":2621,"column":3}},"1376":{"start":{"line":2619,"column":4},"end":{"line":2619,"column":17}},"1377":{"start":{"line":2620,"column":4},"end":{"line":2620,"column":17}},"1378":{"start":{"line":2622,"column":2},"end":{"line":2622,"column":40}},"1379":{"start":{"line":2623,"column":2},"end":{"line":2625,"column":5}},"1380":{"start":{"line":2624,"column":4},"end":{"line":2624,"column":45}},"1381":{"start":{"line":2624,"column":12},"end":{"line":2624,"column":45}},"1382":{"start":{"line":2626,"column":2},"end":{"line":2626,"column":33}},"1383":{"start":{"line":2629,"column":0},"end":{"line":2699,"column":2}},"1384":{"start":{"line":2630,"column":2},"end":{"line":2634,"column":3}},"1385":{"start":{"line":2632,"column":4},"end":{"line":2632,"column":17}},"1386":{"start":{"line":2633,"column":4},"end":{"line":2633,"column":17}},"1387":{"start":{"line":2635,"column":2},"end":{"line":2639,"column":3}},"1388":{"start":{"line":2637,"column":4},"end":{"line":2637,"column":14}},"1389":{"start":{"line":2638,"column":4},"end":{"line":2638,"column":14}},"1390":{"start":{"line":2640,"column":2},"end":{"line":2640,"column":26}},"1391":{"start":{"line":2642,"column":2},"end":{"line":2642,"column":40}},"1392":{"start":{"line":2643,"column":2},"end":{"line":2643,"column":45}},"1393":{"start":{"line":2644,"column":2},"end":{"line":2644,"column":41}},"1394":{"start":{"line":2646,"column":2},"end":{"line":2646,"column":41}},"1395":{"start":{"line":2648,"column":2},"end":{"line":2648,"column":33}},"1396":{"start":{"line":2650,"column":2},"end":{"line":2697,"column":3}},"1397":{"start":{"line":2651,"column":4},"end":{"line":2651,"column":23}},"1398":{"start":{"line":2652,"column":4},"end":{"line":2658,"column":6}},"1399":{"start":{"line":2659,"column":4},"end":{"line":2692,"column":7}},"1400":{"start":{"line":2660,"column":6},"end":{"line":2660,"column":36}},"1401":{"start":{"line":2660,"column":15},"end":{"line":2660,"column":36}},"1402":{"start":{"line":2662,"column":6},"end":{"line":2662,"column":31}},"1403":{"start":{"line":2664,"column":6},"end":{"line":2664,"column":62}},"1404":{"start":{"line":2665,"column":6},"end":{"line":2669,"column":7}},"1405":{"start":{"line":2666,"column":8},"end":{"line":2668,"column":11}},"1406":{"start":{"line":2667,"column":10},"end":{"line":2667,"column":24}},"1407":{"start":{"line":2671,"column":6},"end":{"line":2676,"column":8}},"1408":{"start":{"line":2678,"column":6},"end":{"line":2691,"column":7}},"1409":{"start":{"line":2679,"column":8},"end":{"line":2685,"column":11}},"1410":{"start":{"line":2681,"column":10},"end":{"line":2681,"column":40}},"1411":{"start":{"line":2681,"column":19},"end":{"line":2681,"column":40}},"1412":{"start":{"line":2682,"column":10},"end":{"line":2684,"column":13}},"1413":{"start":{"line":2683,"column":12},"end":{"line":2683,"column":26}},"1414":{"start":{"line":2687,"column":8},"end":{"line":2690,"column":11}},"1415":{"start":{"line":2688,"column":10},"end":{"line":2688,"column":27}},"1416":{"start":{"line":2688,"column":20},"end":{"line":2688,"column":27}},"1417":{"start":{"line":2689,"column":10},"end":{"line":2689,"column":79}},"1418":{"start":{"line":2693,"column":9},"end":{"line":2697,"column":3}},"1419":{"start":{"line":2694,"column":4},"end":{"line":2696,"column":7}},"1420":{"start":{"line":2695,"column":6},"end":{"line":2695,"column":21}},"1421":{"start":{"line":2698,"column":2},"end":{"line":2698,"column":14}},"1422":{"start":{"line":2701,"column":0},"end":{"line":2740,"column":2}},"1423":{"start":{"line":2702,"column":2},"end":{"line":2706,"column":3}},"1424":{"start":{"line":2704,"column":4},"end":{"line":2704,"column":17}},"1425":{"start":{"line":2705,"column":4},"end":{"line":2705,"column":17}},"1426":{"start":{"line":2707,"column":2},"end":{"line":2707,"column":40}},"1427":{"start":{"line":2708,"column":2},"end":{"line":2708,"column":45}},"1428":{"start":{"line":2709,"column":2},"end":{"line":2709,"column":41}},"1429":{"start":{"line":2711,"column":2},"end":{"line":2711,"column":41}},"1430":{"start":{"line":2713,"column":2},"end":{"line":2713,"column":68}},"1431":{"start":{"line":2715,"column":2},"end":{"line":2738,"column":3}},"1432":{"start":{"line":2716,"column":4},"end":{"line":2721,"column":6}},"1433":{"start":{"line":2722,"column":4},"end":{"line":2735,"column":7}},"1434":{"start":{"line":2723,"column":6},"end":{"line":2723,"column":30}},"1435":{"start":{"line":2723,"column":15},"end":{"line":2723,"column":30}},"1436":{"start":{"line":2725,"column":6},"end":{"line":2725,"column":45}},"1437":{"start":{"line":2726,"column":6},"end":{"line":2726,"column":52}},"1438":{"start":{"line":2726,"column":22},"end":{"line":2726,"column":52}},"1439":{"start":{"line":2727,"column":6},"end":{"line":2727,"column":43}},"1440":{"start":{"line":2727,"column":36},"end":{"line":2727,"column":43}},"1441":{"start":{"line":2728,"column":6},"end":{"line":2734,"column":11}},"1442":{"start":{"line":2730,"column":10},"end":{"line":2730,"column":34}},"1443":{"start":{"line":2730,"column":19},"end":{"line":2730,"column":34}},"1444":{"start":{"line":2731,"column":10},"end":{"line":2733,"column":13}},"1445":{"start":{"line":2732,"column":12},"end":{"line":2732,"column":20}},"1446":{"start":{"line":2736,"column":9},"end":{"line":2738,"column":3}},"1447":{"start":{"line":2737,"column":4},"end":{"line":2737,"column":25}},"1448":{"start":{"line":2739,"column":2},"end":{"line":2739,"column":14}},"1449":{"start":{"line":2742,"column":0},"end":{"line":2774,"column":2}},"1450":{"start":{"line":2743,"column":2},"end":{"line":2752,"column":3}},"1451":{"start":{"line":2745,"column":4},"end":{"line":2745,"column":17}},"1452":{"start":{"line":2746,"column":4},"end":{"line":2746,"column":17}},"1453":{"start":{"line":2747,"column":9},"end":{"line":2752,"column":3}},"1454":{"start":{"line":2750,"column":4},"end":{"line":2750,"column":15}},"1455":{"start":{"line":2751,"column":4},"end":{"line":2751,"column":15}},"1456":{"start":{"line":2753,"column":2},"end":{"line":2753,"column":45}},"1457":{"start":{"line":2754,"column":2},"end":{"line":2754,"column":41}},"1458":{"start":{"line":2756,"column":2},"end":{"line":2756,"column":41}},"1459":{"start":{"line":2758,"column":2},"end":{"line":2764,"column":3}},"1460":{"start":{"line":2759,"column":4},"end":{"line":2759,"column":45}},"1461":{"start":{"line":2760,"column":4},"end":{"line":2760,"column":52}},"1462":{"start":{"line":2760,"column":31},"end":{"line":2760,"column":49}},"1463":{"start":{"line":2761,"column":4},"end":{"line":2761,"column":77}},"1464":{"start":{"line":2763,"column":4},"end":{"line":2763,"column":22}},"1465":{"start":{"line":2766,"column":2},"end":{"line":2773,"column":3}},"1466":{"start":{"line":2767,"column":4},"end":{"line":2770,"column":9}},"1467":{"start":{"line":2769,"column":8},"end":{"line":2769,"column":16}},"1468":{"start":{"line":2772,"column":4},"end":{"line":2772,"column":59}},"1469":{"start":{"line":2776,"column":0},"end":{"line":2776,"column":57}},"1470":{"start":{"line":2777,"column":0},"end":{"line":2777,"column":59}},"1471":{"start":{"line":2778,"column":0},"end":{"line":2778,"column":62}},"1472":{"start":{"line":2780,"column":0},"end":{"line":2796,"column":2}},"1473":{"start":{"line":2781,"column":2},"end":{"line":2781,"column":40}},"1474":{"start":{"line":2782,"column":2},"end":{"line":2782,"column":41}},"1475":{"start":{"line":2784,"column":2},"end":{"line":2784,"column":41}},"1476":{"start":{"line":2786,"column":2},"end":{"line":2786,"column":43}},"1477":{"start":{"line":2787,"column":2},"end":{"line":2787,"column":49}},"1478":{"start":{"line":2789,"column":2},"end":{"line":2793,"column":3}},"1479":{"start":{"line":2790,"column":4},"end":{"line":2792,"column":7}},"1480":{"start":{"line":2791,"column":6},"end":{"line":2791,"column":21}},"1481":{"start":{"line":2795,"column":2},"end":{"line":2795,"column":14}},"1482":{"start":{"line":2798,"column":0},"end":{"line":2865,"column":2}},"1483":{"start":{"line":2799,"column":2},"end":{"line":2799,"column":33}},"1484":{"start":{"line":2800,"column":2},"end":{"line":2800,"column":40}},"1485":{"start":{"line":2801,"column":2},"end":{"line":2801,"column":45}},"1486":{"start":{"line":2802,"column":2},"end":{"line":2802,"column":41}},"1487":{"start":{"line":2804,"column":2},"end":{"line":2808,"column":3}},"1488":{"start":{"line":2806,"column":4},"end":{"line":2806,"column":17}},"1489":{"start":{"line":2807,"column":4},"end":{"line":2807,"column":17}},"1490":{"start":{"line":2810,"column":2},"end":{"line":2813,"column":3}},"1491":{"start":{"line":2811,"column":4},"end":{"line":2811,"column":25}},"1492":{"start":{"line":2812,"column":4},"end":{"line":2812,"column":25}},"1493":{"start":{"line":2814,"column":2},"end":{"line":2814,"column":42}},"1494":{"start":{"line":2815,"column":2},"end":{"line":2815,"column":43}},"1495":{"start":{"line":2817,"column":2},"end":{"line":2817,"column":41}},"1496":{"start":{"line":2819,"column":2},"end":{"line":2819,"column":60}},"1497":{"start":{"line":2821,"column":2},"end":{"line":2833,"column":4}},"1498":{"start":{"line":2822,"column":4},"end":{"line":2832,"column":5}},"1499":{"start":{"line":2823,"column":6},"end":{"line":2823,"column":61}},"1500":{"start":{"line":2824,"column":6},"end":{"line":2826,"column":9}},"1501":{"start":{"line":2825,"column":8},"end":{"line":2825,"column":41}},"1502":{"start":{"line":2828,"column":6},"end":{"line":2831,"column":11}},"1503":{"start":{"line":2830,"column":10},"end":{"line":2830,"column":43}},"1504":{"start":{"line":2835,"column":2},"end":{"line":2863,"column":3}},"1505":{"start":{"line":2836,"column":4},"end":{"line":2839,"column":7}},"1506":{"start":{"line":2837,"column":6},"end":{"line":2837,"column":36}},"1507":{"start":{"line":2837,"column":15},"end":{"line":2837,"column":36}},"1508":{"start":{"line":2838,"column":6},"end":{"line":2838,"column":25}},"1509":{"start":{"line":2841,"column":4},"end":{"line":2841,"column":66}},"1510":{"start":{"line":2842,"column":4},"end":{"line":2862,"column":5}},"1511":{"start":{"line":2843,"column":6},"end":{"line":2845,"column":9}},"1512":{"start":{"line":2844,"column":8},"end":{"line":2844,"column":16}},"1513":{"start":{"line":2847,"column":6},"end":{"line":2852,"column":8}},"1514":{"start":{"line":2853,"column":6},"end":{"line":2861,"column":9}},"1515":{"start":{"line":2854,"column":8},"end":{"line":2854,"column":32}},"1516":{"start":{"line":2854,"column":17},"end":{"line":2854,"column":32}},"1517":{"start":{"line":2855,"column":8},"end":{"line":2860,"column":11}},"1518":{"start":{"line":2856,"column":10},"end":{"line":2856,"column":40}},"1519":{"start":{"line":2856,"column":19},"end":{"line":2856,"column":40}},"1520":{"start":{"line":2857,"column":10},"end":{"line":2859,"column":13}},"1521":{"start":{"line":2858,"column":12},"end":{"line":2858,"column":39}},"1522":{"start":{"line":2864,"column":2},"end":{"line":2864,"column":20}},"1523":{"start":{"line":2867,"column":0},"end":{"line":2912,"column":2}},"1524":{"start":{"line":2868,"column":2},"end":{"line":2868,"column":40}},"1525":{"start":{"line":2869,"column":2},"end":{"line":2869,"column":41}},"1526":{"start":{"line":2870,"column":2},"end":{"line":2870,"column":48}},"1527":{"start":{"line":2871,"column":2},"end":{"line":2871,"column":54}},"1528":{"start":{"line":2872,"column":2},"end":{"line":2872,"column":47}},"1529":{"start":{"line":2874,"column":2},"end":{"line":2874,"column":33}},"1530":{"start":{"line":2875,"column":2},"end":{"line":2875,"column":49}},"1531":{"start":{"line":2876,"column":2},"end":{"line":2876,"column":37}},"1532":{"start":{"line":2878,"column":2},"end":{"line":2878,"column":41}},"1533":{"start":{"line":2880,"column":2},"end":{"line":2880,"column":42}},"1534":{"start":{"line":2882,"column":2},"end":{"line":2882,"column":64}},"1535":{"start":{"line":2883,"column":2},"end":{"line":2883,"column":37}},"1536":{"start":{"line":2885,"column":2},"end":{"line":2897,"column":3}},"1537":{"start":{"line":2886,"column":4},"end":{"line":2888,"column":7}},"1538":{"start":{"line":2887,"column":6},"end":{"line":2887,"column":53}},"1539":{"start":{"line":2889,"column":4},"end":{"line":2893,"column":5}},"1540":{"start":{"line":2890,"column":6},"end":{"line":2890,"column":58}},"1541":{"start":{"line":2892,"column":6},"end":{"line":2892,"column":30}},"1542":{"start":{"line":2894,"column":9},"end":{"line":2897,"column":3}},"1543":{"start":{"line":2895,"column":4},"end":{"line":2895,"column":74}},"1544":{"start":{"line":2896,"column":4},"end":{"line":2896,"column":29}},"1545":{"start":{"line":2899,"column":2},"end":{"line":2899,"column":66}},"1546":{"start":{"line":2901,"column":2},"end":{"line":2901,"column":42}},"1547":{"start":{"line":2903,"column":2},"end":{"line":2907,"column":3}},"1548":{"start":{"line":2904,"column":4},"end":{"line":2904,"column":31}},"1549":{"start":{"line":2906,"column":4},"end":{"line":2906,"column":28}},"1550":{"start":{"line":2909,"column":2},"end":{"line":2909,"column":37}},"1551":{"start":{"line":2911,"column":2},"end":{"line":2911,"column":14}},"1552":{"start":{"line":2918,"column":0},"end":{"line":2966,"column":2}},"1553":{"start":{"line":2919,"column":2},"end":{"line":2928,"column":3}},"1554":{"start":{"line":2921,"column":4},"end":{"line":2921,"column":17}},"1555":{"start":{"line":2922,"column":4},"end":{"line":2922,"column":17}},"1556":{"start":{"line":2923,"column":9},"end":{"line":2928,"column":3}},"1557":{"start":{"line":2926,"column":4},"end":{"line":2926,"column":14}},"1558":{"start":{"line":2927,"column":4},"end":{"line":2927,"column":14}},"1559":{"start":{"line":2929,"column":2},"end":{"line":2929,"column":43}},"1560":{"start":{"line":2931,"column":2},"end":{"line":2931,"column":18}},"1561":{"start":{"line":2932,"column":2},"end":{"line":2932,"column":35}},"1562":{"start":{"line":2933,"column":2},"end":{"line":2933,"column":40}},"1563":{"start":{"line":2934,"column":2},"end":{"line":2934,"column":41}},"1564":{"start":{"line":2936,"column":2},"end":{"line":2936,"column":35}},"1565":{"start":{"line":2937,"column":2},"end":{"line":2937,"column":76}},"1566":{"start":{"line":2939,"column":2},"end":{"line":2941,"column":3}},"1567":{"start":{"line":2940,"column":4},"end":{"line":2940,"column":75}},"1568":{"start":{"line":2943,"column":2},"end":{"line":2943,"column":28}},"1569":{"start":{"line":2944,"column":2},"end":{"line":2944,"column":58}},"1570":{"start":{"line":2946,"column":2},"end":{"line":2946,"column":17}},"1571":{"start":{"line":2948,"column":2},"end":{"line":2948,"column":76}},"1572":{"start":{"line":2950,"column":2},"end":{"line":2950,"column":30}},"1573":{"start":{"line":2952,"column":2},"end":{"line":2952,"column":46}},"1574":{"start":{"line":2954,"column":2},"end":{"line":2964,"column":5}},"1575":{"start":{"line":2955,"column":4},"end":{"line":2963,"column":5}},"1576":{"start":{"line":2956,"column":6},"end":{"line":2956,"column":40}},"1577":{"start":{"line":2957,"column":6},"end":{"line":2957,"column":35}},"1578":{"start":{"line":2958,"column":6},"end":{"line":2960,"column":9}},"1579":{"start":{"line":2959,"column":8},"end":{"line":2959,"column":35}},"1580":{"start":{"line":2962,"column":6},"end":{"line":2962,"column":21}},"1581":{"start":{"line":2965,"column":2},"end":{"line":2965,"column":20}},"1582":{"start":{"line":2972,"column":0},"end":{"line":3015,"column":2}},"1583":{"start":{"line":2973,"column":2},"end":{"line":2977,"column":3}},"1584":{"start":{"line":2975,"column":4},"end":{"line":2975,"column":17}},"1585":{"start":{"line":2976,"column":4},"end":{"line":2976,"column":17}},"1586":{"start":{"line":2978,"column":2},"end":{"line":2978,"column":18}},"1587":{"start":{"line":2979,"column":2},"end":{"line":2979,"column":35}},"1588":{"start":{"line":2980,"column":2},"end":{"line":2980,"column":40}},"1589":{"start":{"line":2981,"column":2},"end":{"line":2981,"column":41}},"1590":{"start":{"line":2983,"column":2},"end":{"line":2983,"column":35}},"1591":{"start":{"line":2984,"column":2},"end":{"line":2984,"column":76}},"1592":{"start":{"line":2986,"column":2},"end":{"line":2988,"column":3}},"1593":{"start":{"line":2987,"column":4},"end":{"line":2987,"column":75}},"1594":{"start":{"line":2990,"column":2},"end":{"line":2990,"column":28}},"1595":{"start":{"line":2991,"column":2},"end":{"line":2991,"column":58}},"1596":{"start":{"line":2993,"column":2},"end":{"line":2993,"column":17}},"1597":{"start":{"line":2995,"column":2},"end":{"line":2995,"column":76}},"1598":{"start":{"line":2997,"column":2},"end":{"line":2997,"column":30}},"1599":{"start":{"line":2999,"column":2},"end":{"line":2999,"column":46}},"1600":{"start":{"line":3001,"column":2},"end":{"line":3001,"column":43}},"1601":{"start":{"line":3003,"column":2},"end":{"line":3013,"column":5}},"1602":{"start":{"line":3004,"column":4},"end":{"line":3004,"column":28}},"1603":{"start":{"line":3004,"column":13},"end":{"line":3004,"column":28}},"1604":{"start":{"line":3006,"column":4},"end":{"line":3008,"column":7}},"1605":{"start":{"line":3007,"column":6},"end":{"line":3007,"column":23}},"1606":{"start":{"line":3010,"column":4},"end":{"line":3012,"column":7}},"1607":{"start":{"line":3011,"column":6},"end":{"line":3011,"column":14}},"1608":{"start":{"line":3014,"column":2},"end":{"line":3014,"column":20}},"1609":{"start":{"line":3017,"column":0},"end":{"line":3104,"column":2}},"1610":{"start":{"line":3018,"column":2},"end":{"line":3018,"column":24}},"1611":{"start":{"line":3019,"column":2},"end":{"line":3019,"column":60}},"1612":{"start":{"line":3021,"column":2},"end":{"line":3021,"column":42}},"1613":{"start":{"line":3022,"column":2},"end":{"line":3022,"column":78}},"1614":{"start":{"line":3023,"column":2},"end":{"line":3023,"column":79}},"1615":{"start":{"line":3024,"column":2},"end":{"line":3024,"column":68}},"1616":{"start":{"line":3025,"column":2},"end":{"line":3025,"column":58}},"1617":{"start":{"line":3027,"column":2},"end":{"line":3038,"column":5}},"1618":{"start":{"line":3040,"column":2},"end":{"line":3042,"column":5}},"1619":{"start":{"line":3041,"column":42},"end":{"line":3041,"column":52}},"1620":{"start":{"line":3044,"column":2},"end":{"line":3054,"column":27}},"1621":{"start":{"line":3045,"column":4},"end":{"line":3045,"column":29}},"1622":{"start":{"line":3046,"column":4},"end":{"line":3048,"column":7}},"1623":{"start":{"line":3047,"column":6},"end":{"line":3047,"column":58}},"1624":{"start":{"line":3049,"column":4},"end":{"line":3053,"column":5}},"1625":{"start":{"line":3050,"column":6},"end":{"line":3050,"column":74}},"1626":{"start":{"line":3051,"column":6},"end":{"line":3051,"column":55}},"1627":{"start":{"line":3052,"column":6},"end":{"line":3052,"column":17}},"1628":{"start":{"line":3056,"column":2},"end":{"line":3064,"column":4}},"1629":{"start":{"line":3066,"column":2},"end":{"line":3066,"column":43}},"1630":{"start":{"line":3067,"column":2},"end":{"line":3067,"column":68}},"1631":{"start":{"line":3069,"column":2},"end":{"line":3069,"column":45}},"1632":{"start":{"line":3070,"column":2},"end":{"line":3070,"column":74}},"1633":{"start":{"line":3072,"column":2},"end":{"line":3072,"column":47}},"1634":{"start":{"line":3073,"column":2},"end":{"line":3073,"column":72}},"1635":{"start":{"line":3075,"column":2},"end":{"line":3075,"column":33}},"1636":{"start":{"line":3076,"column":2},"end":{"line":3076,"column":59}},"1637":{"start":{"line":3078,"column":2},"end":{"line":3078,"column":39}},"1638":{"start":{"line":3079,"column":2},"end":{"line":3079,"column":64}},"1639":{"start":{"line":3081,"column":2},"end":{"line":3081,"column":58}},"1640":{"start":{"line":3082,"column":2},"end":{"line":3082,"column":56}},"1641":{"start":{"line":3084,"column":2},"end":{"line":3084,"column":60}},"1642":{"start":{"line":3086,"column":2},"end":{"line":3086,"column":88}},"1643":{"start":{"line":3088,"column":2},"end":{"line":3094,"column":3}},"1644":{"start":{"line":3089,"column":4},"end":{"line":3089,"column":38}},"1645":{"start":{"line":3090,"column":4},"end":{"line":3090,"column":42}},"1646":{"start":{"line":3091,"column":4},"end":{"line":3093,"column":5}},"1647":{"start":{"line":3092,"column":6},"end":{"line":3092,"column":76}},"1648":{"start":{"line":3097,"column":2},"end":{"line":3099,"column":39}},"1649":{"start":{"line":3098,"column":4},"end":{"line":3098,"column":14}},"1650":{"start":{"line":3101,"column":2},"end":{"line":3101,"column":49}},"1651":{"start":{"line":3103,"column":2},"end":{"line":3103,"column":20}},"1652":{"start":{"line":3106,"column":0},"end":{"line":3140,"column":2}},"1653":{"start":{"line":3107,"column":2},"end":{"line":3107,"column":35}},"1654":{"start":{"line":3108,"column":2},"end":{"line":3108,"column":40}},"1655":{"start":{"line":3109,"column":2},"end":{"line":3109,"column":42}},"1656":{"start":{"line":3110,"column":2},"end":{"line":3110,"column":41}},"1657":{"start":{"line":3111,"column":2},"end":{"line":3111,"column":22}},"1658":{"start":{"line":3113,"column":2},"end":{"line":3113,"column":22}},"1659":{"start":{"line":3114,"column":2},"end":{"line":3114,"column":28}},"1660":{"start":{"line":3116,"column":2},"end":{"line":3131,"column":3}},"1661":{"start":{"line":3119,"column":4},"end":{"line":3119,"column":23}},"1662":{"start":{"line":3120,"column":4},"end":{"line":3120,"column":30}},"1663":{"start":{"line":3121,"column":9},"end":{"line":3131,"column":3}},"1664":{"start":{"line":3123,"column":4},"end":{"line":3123,"column":17}},"1665":{"start":{"line":3124,"column":4},"end":{"line":3124,"column":17}},"1666":{"start":{"line":3125,"column":4},"end":{"line":3130,"column":5}},"1667":{"start":{"line":3126,"column":6},"end":{"line":3126,"column":36}},"1668":{"start":{"line":3127,"column":6},"end":{"line":3127,"column":25}},"1669":{"start":{"line":3129,"column":6},"end":{"line":3129,"column":27}},"1670":{"start":{"line":3132,"column":2},"end":{"line":3132,"column":35}},"1671":{"start":{"line":3134,"column":2},"end":{"line":3134,"column":27}},"1672":{"start":{"line":3136,"column":2},"end":{"line":3136,"column":56}},"1673":{"start":{"line":3138,"column":2},"end":{"line":3138,"column":51}},"1674":{"start":{"line":3139,"column":2},"end":{"line":3139,"column":53}},"1675":{"start":{"line":3142,"column":0},"end":{"line":3192,"column":2}},"1676":{"start":{"line":3143,"column":2},"end":{"line":3147,"column":3}},"1677":{"start":{"line":3145,"column":4},"end":{"line":3145,"column":17}},"1678":{"start":{"line":3146,"column":4},"end":{"line":3146,"column":17}},"1679":{"start":{"line":3148,"column":2},"end":{"line":3148,"column":40}},"1680":{"start":{"line":3149,"column":2},"end":{"line":3149,"column":44}},"1681":{"start":{"line":3150,"column":2},"end":{"line":3150,"column":42}},"1682":{"start":{"line":3151,"column":2},"end":{"line":3151,"column":41}},"1683":{"start":{"line":3153,"column":2},"end":{"line":3153,"column":33}},"1684":{"start":{"line":3154,"column":2},"end":{"line":3154,"column":35}},"1685":{"start":{"line":3156,"column":2},"end":{"line":3158,"column":3}},"1686":{"start":{"line":3157,"column":4},"end":{"line":3157,"column":27}},"1687":{"start":{"line":3160,"column":2},"end":{"line":3160,"column":36}},"1688":{"start":{"line":3162,"column":2},"end":{"line":3162,"column":18}},"1689":{"start":{"line":3164,"column":2},"end":{"line":3164,"column":52}},"1690":{"start":{"line":3166,"column":2},"end":{"line":3166,"column":43}},"1691":{"start":{"line":3168,"column":2},"end":{"line":3190,"column":5}},"1692":{"start":{"line":3169,"column":4},"end":{"line":3171,"column":5}},"1693":{"start":{"line":3170,"column":6},"end":{"line":3170,"column":21}},"1694":{"start":{"line":3173,"column":4},"end":{"line":3173,"column":28}},"1695":{"start":{"line":3174,"column":4},"end":{"line":3178,"column":5}},"1696":{"start":{"line":3175,"column":6},"end":{"line":3175,"column":95}},"1697":{"start":{"line":3176,"column":6},"end":{"line":3176,"column":27}},"1698":{"start":{"line":3177,"column":6},"end":{"line":3177,"column":21}},"1699":{"start":{"line":3181,"column":4},"end":{"line":3189,"column":5}},"1700":{"start":{"line":3182,"column":6},"end":{"line":3182,"column":21}},"1701":{"start":{"line":3184,"column":6},"end":{"line":3186,"column":42}},"1702":{"start":{"line":3187,"column":6},"end":{"line":3187,"column":27}},"1703":{"start":{"line":3188,"column":6},"end":{"line":3188,"column":14}},"1704":{"start":{"line":3191,"column":2},"end":{"line":3191,"column":20}},"1705":{"start":{"line":3194,"column":0},"end":{"line":3206,"column":2}},"1706":{"start":{"line":3195,"column":2},"end":{"line":3199,"column":3}},"1707":{"start":{"line":3197,"column":4},"end":{"line":3197,"column":17}},"1708":{"start":{"line":3198,"column":4},"end":{"line":3198,"column":17}},"1709":{"start":{"line":3200,"column":2},"end":{"line":3200,"column":35}},"1710":{"start":{"line":3201,"column":2},"end":{"line":3201,"column":41}},"1711":{"start":{"line":3203,"column":2},"end":{"line":3203,"column":43}},"1712":{"start":{"line":3204,"column":2},"end":{"line":3204,"column":90}},"1713":{"start":{"line":3204,"column":32},"end":{"line":3204,"column":86}},"1714":{"start":{"line":3205,"column":2},"end":{"line":3205,"column":20}},"1715":{"start":{"line":3208,"column":0},"end":{"line":3226,"column":2}},"1716":{"start":{"line":3209,"column":2},"end":{"line":3218,"column":3}},"1717":{"start":{"line":3211,"column":4},"end":{"line":3211,"column":17}},"1718":{"start":{"line":3212,"column":4},"end":{"line":3212,"column":17}},"1719":{"start":{"line":3213,"column":9},"end":{"line":3218,"column":3}},"1720":{"start":{"line":3216,"column":4},"end":{"line":3216,"column":14}},"1721":{"start":{"line":3217,"column":4},"end":{"line":3217,"column":14}},"1722":{"start":{"line":3219,"column":2},"end":{"line":3219,"column":43}},"1723":{"start":{"line":3221,"column":2},"end":{"line":3224,"column":5}},"1724":{"start":{"line":3222,"column":4},"end":{"line":3222,"column":28}},"1725":{"start":{"line":3222,"column":13},"end":{"line":3222,"column":28}},"1726":{"start":{"line":3223,"column":4},"end":{"line":3223,"column":45}},"1727":{"start":{"line":3225,"column":2},"end":{"line":3225,"column":20}},"1728":{"start":{"line":3228,"column":0},"end":{"line":3243,"column":2}},"1729":{"start":{"line":3229,"column":2},"end":{"line":3233,"column":3}},"1730":{"start":{"line":3231,"column":4},"end":{"line":3231,"column":17}},"1731":{"start":{"line":3232,"column":4},"end":{"line":3232,"column":17}},"1732":{"start":{"line":3234,"column":2},"end":{"line":3234,"column":18}},"1733":{"start":{"line":3235,"column":2},"end":{"line":3235,"column":43}},"1734":{"start":{"line":3236,"column":2},"end":{"line":3241,"column":5}},"1735":{"start":{"line":3237,"column":4},"end":{"line":3237,"column":28}},"1736":{"start":{"line":3237,"column":13},"end":{"line":3237,"column":28}},"1737":{"start":{"line":3238,"column":4},"end":{"line":3240,"column":7}},"1738":{"start":{"line":3239,"column":6},"end":{"line":3239,"column":23}},"1739":{"start":{"line":3242,"column":2},"end":{"line":3242,"column":20}},"1740":{"start":{"line":3245,"column":0},"end":{"line":3256,"column":2}},"1741":{"start":{"line":3246,"column":2},"end":{"line":3250,"column":3}},"1742":{"start":{"line":3248,"column":4},"end":{"line":3248,"column":17}},"1743":{"start":{"line":3249,"column":4},"end":{"line":3249,"column":17}},"1744":{"start":{"line":3251,"column":2},"end":{"line":3251,"column":35}},"1745":{"start":{"line":3252,"column":2},"end":{"line":3252,"column":41}},"1746":{"start":{"line":3253,"column":2},"end":{"line":3253,"column":43}},"1747":{"start":{"line":3254,"column":2},"end":{"line":3254,"column":41}},"1748":{"start":{"line":3255,"column":2},"end":{"line":3255,"column":20}},"1749":{"start":{"line":3258,"column":0},"end":{"line":3304,"column":2}},"1750":{"start":{"line":3259,"column":2},"end":{"line":3263,"column":3}},"1751":{"start":{"line":3261,"column":4},"end":{"line":3261,"column":17}},"1752":{"start":{"line":3262,"column":4},"end":{"line":3262,"column":17}},"1753":{"start":{"line":3264,"column":2},"end":{"line":3264,"column":35}},"1754":{"start":{"line":3265,"column":2},"end":{"line":3265,"column":40}},"1755":{"start":{"line":3266,"column":2},"end":{"line":3266,"column":42}},"1756":{"start":{"line":3267,"column":2},"end":{"line":3267,"column":41}},"1757":{"start":{"line":3269,"column":2},"end":{"line":3269,"column":33}},"1758":{"start":{"line":3270,"column":2},"end":{"line":3270,"column":35}},"1759":{"start":{"line":3272,"column":2},"end":{"line":3275,"column":3}},"1760":{"start":{"line":3273,"column":4},"end":{"line":3273,"column":25}},"1761":{"start":{"line":3274,"column":4},"end":{"line":3274,"column":25}},"1762":{"start":{"line":3276,"column":2},"end":{"line":3276,"column":42}},"1763":{"start":{"line":3277,"column":2},"end":{"line":3277,"column":43}},"1764":{"start":{"line":3279,"column":2},"end":{"line":3279,"column":36}},"1765":{"start":{"line":3281,"column":2},"end":{"line":3281,"column":60}},"1766":{"start":{"line":3283,"column":2},"end":{"line":3302,"column":5}},"1767":{"start":{"line":3284,"column":4},"end":{"line":3284,"column":34}},"1768":{"start":{"line":3284,"column":13},"end":{"line":3284,"column":34}},"1769":{"start":{"line":3286,"column":4},"end":{"line":3286,"column":22}},"1770":{"start":{"line":3288,"column":4},"end":{"line":3290,"column":5}},"1771":{"start":{"line":3289,"column":6},"end":{"line":3289,"column":25}},"1772":{"start":{"line":3292,"column":4},"end":{"line":3296,"column":5}},"1773":{"start":{"line":3293,"column":6},"end":{"line":3293,"column":22}},"1774":{"start":{"line":3295,"column":6},"end":{"line":3295,"column":19}},"1775":{"start":{"line":3298,"column":4},"end":{"line":3301,"column":9}},"1776":{"start":{"line":3300,"column":8},"end":{"line":3300,"column":22}},"1777":{"start":{"line":3303,"column":2},"end":{"line":3303,"column":20}},"1778":{"start":{"line":3306,"column":0},"end":{"line":3313,"column":2}},"1779":{"start":{"line":3307,"column":2},"end":{"line":3307,"column":40}},"1780":{"start":{"line":3308,"column":2},"end":{"line":3308,"column":42}},"1781":{"start":{"line":3310,"column":2},"end":{"line":3310,"column":71}},"1782":{"start":{"line":3312,"column":2},"end":{"line":3312,"column":38}},"1783":{"start":{"line":3319,"column":0},"end":{"line":3369,"column":2}},"1784":{"start":{"line":3320,"column":2},"end":{"line":3324,"column":3}},"1785":{"start":{"line":3322,"column":4},"end":{"line":3322,"column":17}},"1786":{"start":{"line":3323,"column":4},"end":{"line":3323,"column":17}},"1787":{"start":{"line":3325,"column":2},"end":{"line":3325,"column":18}},"1788":{"start":{"line":3326,"column":2},"end":{"line":3326,"column":35}},"1789":{"start":{"line":3327,"column":2},"end":{"line":3327,"column":40}},"1790":{"start":{"line":3328,"column":2},"end":{"line":3328,"column":41}},"1791":{"start":{"line":3330,"column":2},"end":{"line":3330,"column":33}},"1792":{"start":{"line":3331,"column":2},"end":{"line":3331,"column":35}},"1793":{"start":{"line":3333,"column":2},"end":{"line":3351,"column":4}},"1794":{"start":{"line":3334,"column":4},"end":{"line":3334,"column":22}},"1795":{"start":{"line":3336,"column":4},"end":{"line":3338,"column":5}},"1796":{"start":{"line":3337,"column":6},"end":{"line":3337,"column":25}},"1797":{"start":{"line":3340,"column":4},"end":{"line":3340,"column":38}},"1798":{"start":{"line":3342,"column":4},"end":{"line":3346,"column":5}},"1799":{"start":{"line":3343,"column":6},"end":{"line":3343,"column":22}},"1800":{"start":{"line":3345,"column":6},"end":{"line":3345,"column":19}},"1801":{"start":{"line":3348,"column":4},"end":{"line":3350,"column":7}},"1802":{"start":{"line":3349,"column":6},"end":{"line":3349,"column":35}},"1803":{"start":{"line":3353,"column":2},"end":{"line":3353,"column":43}},"1804":{"start":{"line":3355,"column":2},"end":{"line":3367,"column":3}},"1805":{"start":{"line":3356,"column":4},"end":{"line":3356,"column":23}},"1806":{"start":{"line":3358,"column":4},"end":{"line":3358,"column":29}},"1807":{"start":{"line":3359,"column":4},"end":{"line":3359,"column":30}},"1808":{"start":{"line":3361,"column":4},"end":{"line":3361,"column":49}},"1809":{"start":{"line":3363,"column":4},"end":{"line":3366,"column":7}},"1810":{"start":{"line":3364,"column":6},"end":{"line":3364,"column":45}},"1811":{"start":{"line":3364,"column":24},"end":{"line":3364,"column":45}},"1812":{"start":{"line":3365,"column":6},"end":{"line":3365,"column":23}},"1813":{"start":{"line":3368,"column":2},"end":{"line":3368,"column":20}},"1814":{"start":{"line":3375,"column":0},"end":{"line":3403,"column":2}},"1815":{"start":{"line":3376,"column":2},"end":{"line":3380,"column":3}},"1816":{"start":{"line":3378,"column":4},"end":{"line":3378,"column":17}},"1817":{"start":{"line":3379,"column":4},"end":{"line":3379,"column":17}},"1818":{"start":{"line":3381,"column":2},"end":{"line":3381,"column":35}},"1819":{"start":{"line":3382,"column":2},"end":{"line":3382,"column":41}},"1820":{"start":{"line":3384,"column":2},"end":{"line":3384,"column":33}},"1821":{"start":{"line":3385,"column":2},"end":{"line":3385,"column":35}},"1822":{"start":{"line":3387,"column":2},"end":{"line":3387,"column":36}},"1823":{"start":{"line":3389,"column":2},"end":{"line":3389,"column":72}},"1824":{"start":{"line":3391,"column":2},"end":{"line":3391,"column":43}},"1825":{"start":{"line":3393,"column":2},"end":{"line":3393,"column":51}},"1826":{"start":{"line":3394,"column":2},"end":{"line":3401,"column":3}},"1827":{"start":{"line":3395,"column":4},"end":{"line":3395,"column":25}},"1828":{"start":{"line":3396,"column":4},"end":{"line":3398,"column":7}},"1829":{"start":{"line":3397,"column":6},"end":{"line":3397,"column":30}},"1830":{"start":{"line":3400,"column":4},"end":{"line":3400,"column":52}},"1831":{"start":{"line":3400,"column":34},"end":{"line":3400,"column":48}},"1832":{"start":{"line":3402,"column":2},"end":{"line":3402,"column":20}}},"branchMap":{"1":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"2":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"3":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"4":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":6},"end":{"line":77,"column":47}},{"start":{"line":77,"column":51},"end":{"line":77,"column":74}}]},"5":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"6":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":9},"end":{"line":82,"column":9}},{"start":{"line":82,"column":9},"end":{"line":82,"column":9}}]},"7":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":6},"end":{"line":92,"column":6}},{"start":{"line":92,"column":6},"end":{"line":92,"column":6}}]},"8":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":19},"end":{"line":98,"column":32}},{"start":{"line":98,"column":36},"end":{"line":98,"column":38}}]},"9":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":16},"end":{"line":102,"column":34}},{"start":{"line":102,"column":38},"end":{"line":102,"column":40}}]},"10":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"11":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"12":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":15},"end":{"line":118,"column":25}},{"start":{"line":118,"column":29},"end":{"line":118,"column":31}}]},"13":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"14":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":20},"end":{"line":135,"column":41}},{"start":{"line":135,"column":45},"end":{"line":135,"column":47}}]},"15":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":17},"end":{"line":136,"column":35}},{"start":{"line":136,"column":39},"end":{"line":136,"column":41}}]},"16":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":17},"end":{"line":139,"column":35}},{"start":{"line":139,"column":39},"end":{"line":139,"column":41}}]},"17":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":20},"end":{"line":145,"column":32}},{"start":{"line":145,"column":36},"end":{"line":145,"column":58}}]},"18":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":146,"column":2}},{"start":{"line":146,"column":2},"end":{"line":146,"column":2}}]},"19":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":6},"end":{"line":146,"column":18}},{"start":{"line":146,"column":22},"end":{"line":146,"column":33}},{"start":{"line":146,"column":37},"end":{"line":146,"column":62}}]},"20":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":2},"end":{"line":159,"column":2}},{"start":{"line":159,"column":2},"end":{"line":159,"column":2}}]},"21":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"22":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"23":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":182,"column":4}},{"start":{"line":182,"column":4},"end":{"line":182,"column":4}}]},"24":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":2},"end":{"line":194,"column":2}},{"start":{"line":194,"column":2},"end":{"line":194,"column":2}}]},"25":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":6},"end":{"line":194,"column":12}},{"start":{"line":194,"column":16},"end":{"line":194,"column":25}}]},"26":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":11},"end":{"line":207,"column":17}},{"start":{"line":207,"column":21},"end":{"line":207,"column":23}}]},"27":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":17},"end":{"line":208,"column":29}},{"start":{"line":208,"column":33},"end":{"line":208,"column":35}}]},"28":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":2},"end":{"line":209,"column":2}},{"start":{"line":209,"column":2},"end":{"line":209,"column":2}}]},"29":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":7},"end":{"line":209,"column":32}},{"start":{"line":209,"column":36},"end":{"line":209,"column":58}},{"start":{"line":210,"column":6},"end":{"line":210,"column":42}}]},"30":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"31":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"32":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":2},"end":{"line":224,"column":2}},{"start":{"line":224,"column":2},"end":{"line":224,"column":2}}]},"33":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":2},"end":{"line":236,"column":2}},{"start":{"line":236,"column":2},"end":{"line":236,"column":2}}]},"34":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":2},"end":{"line":240,"column":2}},{"start":{"line":240,"column":2},"end":{"line":240,"column":2}}]},"35":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":2},"end":{"line":245,"column":2}},{"start":{"line":245,"column":2},"end":{"line":245,"column":2}}]},"36":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":9},"end":{"line":250,"column":9}},{"start":{"line":250,"column":9},"end":{"line":250,"column":9}}]},"37":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":9},"end":{"line":255,"column":9}},{"start":{"line":255,"column":9},"end":{"line":255,"column":9}}]},"38":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":2},"end":{"line":261,"column":2}},{"start":{"line":261,"column":2},"end":{"line":261,"column":2}}]},"39":{"line":261,"type":"binary-expr","locations":[{"start":{"line":261,"column":7},"end":{"line":261,"column":32}},{"start":{"line":261,"column":36},"end":{"line":261,"column":58}},{"start":{"line":262,"column":6},"end":{"line":262,"column":42}}]},"40":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":4},"end":{"line":264,"column":4}},{"start":{"line":264,"column":4},"end":{"line":264,"column":4}}]},"41":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":2},"end":{"line":281,"column":2}},{"start":{"line":281,"column":2},"end":{"line":281,"column":2}}]},"42":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":2},"end":{"line":284,"column":2}},{"start":{"line":284,"column":2},"end":{"line":284,"column":2}}]},"43":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":10},"end":{"line":292,"column":15}},{"start":{"line":292,"column":19},"end":{"line":292,"column":28}}]},"44":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":2},"end":{"line":304,"column":2}},{"start":{"line":304,"column":2},"end":{"line":304,"column":2}}]},"45":{"line":304,"type":"binary-expr","locations":[{"start":{"line":304,"column":6},"end":{"line":304,"column":9}},{"start":{"line":304,"column":13},"end":{"line":304,"column":50}}]},"46":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":2},"end":{"line":330,"column":2}},{"start":{"line":330,"column":2},"end":{"line":330,"column":2}}]},"47":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":2},"end":{"line":342,"column":2}},{"start":{"line":342,"column":2},"end":{"line":342,"column":2}}]},"48":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":6},"end":{"line":344,"column":6}},{"start":{"line":344,"column":6},"end":{"line":344,"column":6}}]},"49":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":2},"end":{"line":353,"column":2}},{"start":{"line":353,"column":2},"end":{"line":353,"column":2}}]},"50":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":2},"end":{"line":357,"column":2}},{"start":{"line":357,"column":2},"end":{"line":357,"column":2}}]},"51":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":2},"end":{"line":361,"column":2}},{"start":{"line":361,"column":2},"end":{"line":361,"column":2}}]},"52":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":6},"end":{"line":363,"column":6}},{"start":{"line":363,"column":6},"end":{"line":363,"column":6}}]},"53":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":2},"end":{"line":381,"column":2}},{"start":{"line":381,"column":2},"end":{"line":381,"column":2}}]},"54":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":2},"end":{"line":400,"column":2}},{"start":{"line":400,"column":2},"end":{"line":400,"column":2}}]},"55":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":2},"end":{"line":418,"column":2}},{"start":{"line":418,"column":2},"end":{"line":418,"column":2}}]},"56":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":2},"end":{"line":436,"column":2}},{"start":{"line":436,"column":2},"end":{"line":436,"column":2}}]},"57":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":2},"end":{"line":454,"column":2}},{"start":{"line":454,"column":2},"end":{"line":454,"column":2}}]},"58":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":2},"end":{"line":472,"column":2}},{"start":{"line":472,"column":2},"end":{"line":472,"column":2}}]},"59":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":2},"end":{"line":490,"column":2}},{"start":{"line":490,"column":2},"end":{"line":490,"column":2}}]},"60":{"line":508,"type":"binary-expr","locations":[{"start":{"line":508,"column":14},"end":{"line":508,"column":50}},{"start":{"line":509,"column":14},"end":{"line":509,"column":37}},{"start":{"line":510,"column":15},"end":{"line":510,"column":34}},{"start":{"line":510,"column":38},"end":{"line":510,"column":57}}]},"61":{"line":524,"type":"if","locations":[{"start":{"line":524,"column":2},"end":{"line":524,"column":2}},{"start":{"line":524,"column":2},"end":{"line":524,"column":2}}]},"62":{"line":529,"type":"if","locations":[{"start":{"line":529,"column":4},"end":{"line":529,"column":4}},{"start":{"line":529,"column":4},"end":{"line":529,"column":4}}]},"63":{"line":536,"type":"if","locations":[{"start":{"line":536,"column":2},"end":{"line":536,"column":2}},{"start":{"line":536,"column":2},"end":{"line":536,"column":2}}]},"64":{"line":538,"type":"binary-expr","locations":[{"start":{"line":538,"column":16},"end":{"line":538,"column":25}},{"start":{"line":538,"column":29},"end":{"line":538,"column":36}}]},"65":{"line":539,"type":"binary-expr","locations":[{"start":{"line":539,"column":14},"end":{"line":539,"column":26}},{"start":{"line":539,"column":30},"end":{"line":539,"column":37}}]},"66":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":4},"end":{"line":540,"column":4}},{"start":{"line":540,"column":4},"end":{"line":540,"column":4}}]},"67":{"line":541,"type":"cond-expr","locations":[{"start":{"line":541,"column":35},"end":{"line":541,"column":59}},{"start":{"line":541,"column":62},"end":{"line":541,"column":69}}]},"68":{"line":542,"type":"binary-expr","locations":[{"start":{"line":542,"column":16},"end":{"line":542,"column":82}},{"start":{"line":542,"column":86},"end":{"line":542,"column":93}}]},"69":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":4},"end":{"line":544,"column":4}},{"start":{"line":544,"column":4},"end":{"line":544,"column":4}}]},"70":{"line":545,"type":"cond-expr","locations":[{"start":{"line":545,"column":35},"end":{"line":545,"column":61}},{"start":{"line":545,"column":64},"end":{"line":545,"column":73}}]},"71":{"line":546,"type":"binary-expr","locations":[{"start":{"line":546,"column":16},"end":{"line":546,"column":82}},{"start":{"line":546,"column":86},"end":{"line":546,"column":93}}]},"72":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":4},"end":{"line":548,"column":4}},{"start":{"line":548,"column":4},"end":{"line":548,"column":4}}]},"73":{"line":561,"type":"if","locations":[{"start":{"line":561,"column":2},"end":{"line":561,"column":2}},{"start":{"line":561,"column":2},"end":{"line":561,"column":2}}]},"74":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":2},"end":{"line":562,"column":2}},{"start":{"line":562,"column":2},"end":{"line":562,"column":2}}]},"75":{"line":562,"type":"binary-expr","locations":[{"start":{"line":562,"column":49},"end":{"line":562,"column":51}},{"start":{"line":562,"column":55},"end":{"line":562,"column":66}}]},"76":{"line":563,"type":"binary-expr","locations":[{"start":{"line":563,"column":22},"end":{"line":563,"column":39}},{"start":{"line":563,"column":43},"end":{"line":563,"column":80}}]},"77":{"line":564,"type":"binary-expr","locations":[{"start":{"line":564,"column":25},"end":{"line":564,"column":45}},{"start":{"line":564,"column":49},"end":{"line":564,"column":88}}]},"78":{"line":592,"type":"binary-expr","locations":[{"start":{"line":592,"column":11},"end":{"line":592,"column":17}},{"start":{"line":592,"column":21},"end":{"line":592,"column":23}}]},"79":{"line":595,"type":"binary-expr","locations":[{"start":{"line":595,"column":21},"end":{"line":595,"column":30}},{"start":{"line":595,"column":34},"end":{"line":595,"column":77}}]},"80":{"line":596,"type":"binary-expr","locations":[{"start":{"line":596,"column":11},"end":{"line":596,"column":28}},{"start":{"line":596,"column":32},"end":{"line":596,"column":73}}]},"81":{"line":597,"type":"binary-expr","locations":[{"start":{"line":597,"column":19},"end":{"line":597,"column":36}},{"start":{"line":597,"column":40},"end":{"line":597,"column":85}}]},"82":{"line":599,"type":"binary-expr","locations":[{"start":{"line":599,"column":15},"end":{"line":599,"column":32}},{"start":{"line":599,"column":36},"end":{"line":599,"column":84}},{"start":{"line":599,"column":88},"end":{"line":599,"column":92}}]},"83":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":2},"end":{"line":602,"column":2}},{"start":{"line":602,"column":2},"end":{"line":602,"column":2}}]},"84":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":4},"end":{"line":604,"column":4}},{"start":{"line":604,"column":4},"end":{"line":604,"column":4}}]},"85":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":4},"end":{"line":609,"column":4}},{"start":{"line":609,"column":4},"end":{"line":609,"column":4}}]},"86":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":4},"end":{"line":612,"column":4}},{"start":{"line":612,"column":4},"end":{"line":612,"column":4}}]},"87":{"line":636,"type":"if","locations":[{"start":{"line":636,"column":2},"end":{"line":636,"column":2}},{"start":{"line":636,"column":2},"end":{"line":636,"column":2}}]},"88":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":2},"end":{"line":662,"column":2}},{"start":{"line":662,"column":2},"end":{"line":662,"column":2}}]},"89":{"line":682,"type":"if","locations":[{"start":{"line":682,"column":4},"end":{"line":682,"column":4}},{"start":{"line":682,"column":4},"end":{"line":682,"column":4}}]},"90":{"line":682,"type":"binary-expr","locations":[{"start":{"line":682,"column":8},"end":{"line":682,"column":36}},{"start":{"line":682,"column":40},"end":{"line":682,"column":62}}]},"91":{"line":688,"type":"binary-expr","locations":[{"start":{"line":688,"column":35},"end":{"line":688,"column":49}},{"start":{"line":688,"column":53},"end":{"line":688,"column":60}}]},"92":{"line":695,"type":"if","locations":[{"start":{"line":695,"column":4},"end":{"line":695,"column":4}},{"start":{"line":695,"column":4},"end":{"line":695,"column":4}}]},"93":{"line":704,"type":"if","locations":[{"start":{"line":704,"column":8},"end":{"line":704,"column":8}},{"start":{"line":704,"column":8},"end":{"line":704,"column":8}}]},"94":{"line":704,"type":"binary-expr","locations":[{"start":{"line":704,"column":12},"end":{"line":704,"column":53}},{"start":{"line":705,"column":11},"end":{"line":705,"column":31}},{"start":{"line":705,"column":35},"end":{"line":705,"column":52}},{"start":{"line":705,"column":56},"end":{"line":705,"column":95}},{"start":{"line":706,"column":11},"end":{"line":706,"column":53}}]},"95":{"line":713,"type":"if","locations":[{"start":{"line":713,"column":6},"end":{"line":713,"column":6}},{"start":{"line":713,"column":6},"end":{"line":713,"column":6}}]},"96":{"line":713,"type":"binary-expr","locations":[{"start":{"line":713,"column":10},"end":{"line":713,"column":32}},{"start":{"line":713,"column":36},"end":{"line":713,"column":65}}]},"97":{"line":717,"type":"binary-expr","locations":[{"start":{"line":717,"column":25},"end":{"line":717,"column":44}},{"start":{"line":717,"column":48},"end":{"line":717,"column":85}}]},"98":{"line":730,"type":"if","locations":[{"start":{"line":730,"column":2},"end":{"line":730,"column":2}},{"start":{"line":730,"column":2},"end":{"line":730,"column":2}}]},"99":{"line":730,"type":"binary-expr","locations":[{"start":{"line":730,"column":6},"end":{"line":730,"column":47}},{"start":{"line":730,"column":51},"end":{"line":730,"column":74}}]},"100":{"line":739,"type":"if","locations":[{"start":{"line":739,"column":2},"end":{"line":739,"column":2}},{"start":{"line":739,"column":2},"end":{"line":739,"column":2}}]},"101":{"line":760,"type":"if","locations":[{"start":{"line":760,"column":2},"end":{"line":760,"column":2}},{"start":{"line":760,"column":2},"end":{"line":760,"column":2}}]},"102":{"line":760,"type":"binary-expr","locations":[{"start":{"line":760,"column":6},"end":{"line":760,"column":35}},{"start":{"line":760,"column":39},"end":{"line":760,"column":55}}]},"103":{"line":776,"type":"binary-expr","locations":[{"start":{"line":776,"column":7},"end":{"line":776,"column":9}},{"start":{"line":776,"column":13},"end":{"line":776,"column":42}}]},"104":{"line":778,"type":"if","locations":[{"start":{"line":778,"column":2},"end":{"line":778,"column":2}},{"start":{"line":778,"column":2},"end":{"line":778,"column":2}}]},"105":{"line":786,"type":"if","locations":[{"start":{"line":786,"column":4},"end":{"line":786,"column":4}},{"start":{"line":786,"column":4},"end":{"line":786,"column":4}}]},"106":{"line":789,"type":"if","locations":[{"start":{"line":789,"column":4},"end":{"line":789,"column":4}},{"start":{"line":789,"column":4},"end":{"line":789,"column":4}}]},"107":{"line":795,"type":"if","locations":[{"start":{"line":795,"column":4},"end":{"line":795,"column":4}},{"start":{"line":795,"column":4},"end":{"line":795,"column":4}}]},"108":{"line":795,"type":"binary-expr","locations":[{"start":{"line":795,"column":8},"end":{"line":795,"column":24}},{"start":{"line":795,"column":28},"end":{"line":795,"column":65}}]},"109":{"line":814,"type":"if","locations":[{"start":{"line":814,"column":2},"end":{"line":814,"column":2}},{"start":{"line":814,"column":2},"end":{"line":814,"column":2}}]},"110":{"line":814,"type":"binary-expr","locations":[{"start":{"line":814,"column":6},"end":{"line":814,"column":35}},{"start":{"line":814,"column":39},"end":{"line":814,"column":55}}]},"111":{"line":821,"type":"binary-expr","locations":[{"start":{"line":821,"column":7},"end":{"line":821,"column":9}},{"start":{"line":821,"column":13},"end":{"line":821,"column":42}}]},"112":{"line":824,"type":"if","locations":[{"start":{"line":824,"column":4},"end":{"line":824,"column":4}},{"start":{"line":824,"column":4},"end":{"line":824,"column":4}}]},"113":{"line":827,"type":"if","locations":[{"start":{"line":827,"column":4},"end":{"line":827,"column":4}},{"start":{"line":827,"column":4},"end":{"line":827,"column":4}}]},"114":{"line":831,"type":"if","locations":[{"start":{"line":831,"column":4},"end":{"line":831,"column":4}},{"start":{"line":831,"column":4},"end":{"line":831,"column":4}}]},"115":{"line":831,"type":"binary-expr","locations":[{"start":{"line":831,"column":8},"end":{"line":831,"column":16}},{"start":{"line":831,"column":20},"end":{"line":831,"column":72}}]},"116":{"line":848,"type":"if","locations":[{"start":{"line":848,"column":2},"end":{"line":848,"column":2}},{"start":{"line":848,"column":2},"end":{"line":848,"column":2}}]},"117":{"line":848,"type":"binary-expr","locations":[{"start":{"line":848,"column":6},"end":{"line":848,"column":35}},{"start":{"line":848,"column":39},"end":{"line":848,"column":55}}]},"118":{"line":852,"type":"binary-expr","locations":[{"start":{"line":852,"column":7},"end":{"line":852,"column":9}},{"start":{"line":852,"column":13},"end":{"line":852,"column":42}}]},"119":{"line":854,"type":"if","locations":[{"start":{"line":854,"column":4},"end":{"line":854,"column":4}},{"start":{"line":854,"column":4},"end":{"line":854,"column":4}}]},"120":{"line":855,"type":"binary-expr","locations":[{"start":{"line":855,"column":13},"end":{"line":855,"column":15}},{"start":{"line":855,"column":19},"end":{"line":855,"column":26}}]},"121":{"line":869,"type":"if","locations":[{"start":{"line":869,"column":2},"end":{"line":869,"column":2}},{"start":{"line":869,"column":2},"end":{"line":869,"column":2}}]},"122":{"line":869,"type":"binary-expr","locations":[{"start":{"line":869,"column":6},"end":{"line":869,"column":35}},{"start":{"line":869,"column":39},"end":{"line":869,"column":55}}]},"123":{"line":873,"type":"binary-expr","locations":[{"start":{"line":873,"column":7},"end":{"line":873,"column":9}},{"start":{"line":873,"column":13},"end":{"line":873,"column":42}}]},"124":{"line":876,"type":"if","locations":[{"start":{"line":876,"column":4},"end":{"line":876,"column":4}},{"start":{"line":876,"column":4},"end":{"line":876,"column":4}}]},"125":{"line":890,"type":"if","locations":[{"start":{"line":890,"column":2},"end":{"line":890,"column":2}},{"start":{"line":890,"column":2},"end":{"line":890,"column":2}}]},"126":{"line":892,"type":"if","locations":[{"start":{"line":892,"column":4},"end":{"line":892,"column":4}},{"start":{"line":892,"column":4},"end":{"line":892,"column":4}}]},"127":{"line":897,"type":"if","locations":[{"start":{"line":897,"column":9},"end":{"line":897,"column":9}},{"start":{"line":897,"column":9},"end":{"line":897,"column":9}}]},"128":{"line":903,"type":"cond-expr","locations":[{"start":{"line":903,"column":44},"end":{"line":903,"column":46}},{"start":{"line":903,"column":49},"end":{"line":903,"column":50}}]},"129":{"line":920,"type":"if","locations":[{"start":{"line":920,"column":2},"end":{"line":920,"column":2}},{"start":{"line":920,"column":2},"end":{"line":920,"column":2}}]},"130":{"line":920,"type":"binary-expr","locations":[{"start":{"line":920,"column":6},"end":{"line":920,"column":35}},{"start":{"line":920,"column":39},"end":{"line":920,"column":55}}]},"131":{"line":930,"type":"binary-expr","locations":[{"start":{"line":930,"column":7},"end":{"line":930,"column":9}},{"start":{"line":930,"column":13},"end":{"line":930,"column":42}}]},"132":{"line":933,"type":"if","locations":[{"start":{"line":933,"column":4},"end":{"line":933,"column":4}},{"start":{"line":933,"column":4},"end":{"line":933,"column":4}}]},"133":{"line":933,"type":"binary-expr","locations":[{"start":{"line":933,"column":8},"end":{"line":933,"column":11}},{"start":{"line":933,"column":15},"end":{"line":933,"column":22}}]},"134":{"line":934,"type":"if","locations":[{"start":{"line":934,"column":6},"end":{"line":934,"column":6}},{"start":{"line":934,"column":6},"end":{"line":934,"column":6}}]},"135":{"line":944,"type":"if","locations":[{"start":{"line":944,"column":6},"end":{"line":944,"column":6}},{"start":{"line":944,"column":6},"end":{"line":944,"column":6}}]},"136":{"line":947,"type":"if","locations":[{"start":{"line":947,"column":6},"end":{"line":947,"column":6}},{"start":{"line":947,"column":6},"end":{"line":947,"column":6}}]},"137":{"line":965,"type":"if","locations":[{"start":{"line":965,"column":2},"end":{"line":965,"column":2}},{"start":{"line":965,"column":2},"end":{"line":965,"column":2}}]},"138":{"line":965,"type":"binary-expr","locations":[{"start":{"line":965,"column":6},"end":{"line":965,"column":35}},{"start":{"line":965,"column":39},"end":{"line":965,"column":55}}]},"139":{"line":975,"type":"binary-expr","locations":[{"start":{"line":975,"column":7},"end":{"line":975,"column":9}},{"start":{"line":975,"column":13},"end":{"line":975,"column":42}}]},"140":{"line":978,"type":"if","locations":[{"start":{"line":978,"column":4},"end":{"line":978,"column":4}},{"start":{"line":978,"column":4},"end":{"line":978,"column":4}}]},"141":{"line":978,"type":"binary-expr","locations":[{"start":{"line":978,"column":8},"end":{"line":978,"column":11}},{"start":{"line":978,"column":15},"end":{"line":978,"column":22}}]},"142":{"line":979,"type":"if","locations":[{"start":{"line":979,"column":6},"end":{"line":979,"column":6}},{"start":{"line":979,"column":6},"end":{"line":979,"column":6}}]},"143":{"line":988,"type":"if","locations":[{"start":{"line":988,"column":6},"end":{"line":988,"column":6}},{"start":{"line":988,"column":6},"end":{"line":988,"column":6}}]},"144":{"line":1000,"type":"if","locations":[{"start":{"line":1000,"column":2},"end":{"line":1000,"column":2}},{"start":{"line":1000,"column":2},"end":{"line":1000,"column":2}}]},"145":{"line":1000,"type":"binary-expr","locations":[{"start":{"line":1000,"column":6},"end":{"line":1000,"column":35}},{"start":{"line":1000,"column":39},"end":{"line":1000,"column":55}}]},"146":{"line":1009,"type":"if","locations":[{"start":{"line":1009,"column":2},"end":{"line":1009,"column":2}},{"start":{"line":1009,"column":2},"end":{"line":1009,"column":2}}]},"147":{"line":1009,"type":"binary-expr","locations":[{"start":{"line":1009,"column":6},"end":{"line":1009,"column":32}},{"start":{"line":1009,"column":36},"end":{"line":1009,"column":39}}]},"148":{"line":1013,"type":"binary-expr","locations":[{"start":{"line":1013,"column":7},"end":{"line":1013,"column":9}},{"start":{"line":1013,"column":13},"end":{"line":1013,"column":42}}]},"149":{"line":1019,"type":"if","locations":[{"start":{"line":1019,"column":4},"end":{"line":1019,"column":4}},{"start":{"line":1019,"column":4},"end":{"line":1019,"column":4}}]},"150":{"line":1037,"type":"if","locations":[{"start":{"line":1037,"column":8},"end":{"line":1037,"column":8}},{"start":{"line":1037,"column":8},"end":{"line":1037,"column":8}}]},"151":{"line":1050,"type":"if","locations":[{"start":{"line":1050,"column":4},"end":{"line":1050,"column":4}},{"start":{"line":1050,"column":4},"end":{"line":1050,"column":4}}]},"152":{"line":1066,"type":"if","locations":[{"start":{"line":1066,"column":2},"end":{"line":1066,"column":2}},{"start":{"line":1066,"column":2},"end":{"line":1066,"column":2}}]},"153":{"line":1066,"type":"binary-expr","locations":[{"start":{"line":1066,"column":6},"end":{"line":1066,"column":35}},{"start":{"line":1066,"column":39},"end":{"line":1066,"column":55}}]},"154":{"line":1075,"type":"if","locations":[{"start":{"line":1075,"column":2},"end":{"line":1075,"column":2}},{"start":{"line":1075,"column":2},"end":{"line":1075,"column":2}}]},"155":{"line":1081,"type":"binary-expr","locations":[{"start":{"line":1081,"column":9},"end":{"line":1081,"column":13}},{"start":{"line":1081,"column":17},"end":{"line":1081,"column":19}}]},"156":{"line":1082,"type":"binary-expr","locations":[{"start":{"line":1082,"column":7},"end":{"line":1082,"column":9}},{"start":{"line":1082,"column":13},"end":{"line":1082,"column":42}}]},"157":{"line":1092,"type":"cond-expr","locations":[{"start":{"line":1092,"column":56},"end":{"line":1092,"column":67}},{"start":{"line":1092,"column":70},"end":{"line":1092,"column":76}}]},"158":{"line":1099,"type":"cond-expr","locations":[{"start":{"line":1099,"column":55},"end":{"line":1099,"column":66}},{"start":{"line":1099,"column":69},"end":{"line":1099,"column":75}}]},"159":{"line":1105,"type":"if","locations":[{"start":{"line":1105,"column":4},"end":{"line":1105,"column":4}},{"start":{"line":1105,"column":4},"end":{"line":1105,"column":4}}]},"160":{"line":1106,"type":"if","locations":[{"start":{"line":1106,"column":6},"end":{"line":1106,"column":6}},{"start":{"line":1106,"column":6},"end":{"line":1106,"column":6}}]},"161":{"line":1120,"type":"if","locations":[{"start":{"line":1120,"column":2},"end":{"line":1120,"column":2}},{"start":{"line":1120,"column":2},"end":{"line":1120,"column":2}}]},"162":{"line":1120,"type":"binary-expr","locations":[{"start":{"line":1120,"column":6},"end":{"line":1120,"column":35}},{"start":{"line":1120,"column":39},"end":{"line":1120,"column":55}}]},"163":{"line":1138,"type":"cond-expr","locations":[{"start":{"line":1138,"column":56},"end":{"line":1138,"column":67}},{"start":{"line":1138,"column":70},"end":{"line":1138,"column":76}}]},"164":{"line":1144,"type":"binary-expr","locations":[{"start":{"line":1144,"column":7},"end":{"line":1144,"column":9}},{"start":{"line":1144,"column":13},"end":{"line":1144,"column":42}}]},"165":{"line":1157,"type":"if","locations":[{"start":{"line":1157,"column":2},"end":{"line":1157,"column":2}},{"start":{"line":1157,"column":2},"end":{"line":1157,"column":2}}]},"166":{"line":1157,"type":"binary-expr","locations":[{"start":{"line":1157,"column":6},"end":{"line":1157,"column":35}},{"start":{"line":1157,"column":39},"end":{"line":1157,"column":55}}]},"167":{"line":1176,"type":"cond-expr","locations":[{"start":{"line":1176,"column":56},"end":{"line":1176,"column":67}},{"start":{"line":1176,"column":70},"end":{"line":1176,"column":76}}]},"168":{"line":1182,"type":"binary-expr","locations":[{"start":{"line":1182,"column":7},"end":{"line":1182,"column":9}},{"start":{"line":1182,"column":13},"end":{"line":1182,"column":42}}]},"169":{"line":1185,"type":"if","locations":[{"start":{"line":1185,"column":4},"end":{"line":1185,"column":4}},{"start":{"line":1185,"column":4},"end":{"line":1185,"column":4}}]},"170":{"line":1219,"type":"binary-expr","locations":[{"start":{"line":1219,"column":11},"end":{"line":1219,"column":17}},{"start":{"line":1219,"column":21},"end":{"line":1219,"column":23}}]},"171":{"line":1220,"type":"if","locations":[{"start":{"line":1220,"column":2},"end":{"line":1220,"column":2}},{"start":{"line":1220,"column":2},"end":{"line":1220,"column":2}}]},"172":{"line":1220,"type":"binary-expr","locations":[{"start":{"line":1220,"column":6},"end":{"line":1220,"column":33}},{"start":{"line":1220,"column":37},"end":{"line":1220,"column":56}}]},"173":{"line":1225,"type":"if","locations":[{"start":{"line":1225,"column":2},"end":{"line":1225,"column":2}},{"start":{"line":1225,"column":2},"end":{"line":1225,"column":2}}]},"174":{"line":1226,"type":"binary-expr","locations":[{"start":{"line":1226,"column":19},"end":{"line":1226,"column":28}},{"start":{"line":1226,"column":33},"end":{"line":1226,"column":77}}]},"175":{"line":1226,"type":"cond-expr","locations":[{"start":{"line":1226,"column":63},"end":{"line":1226,"column":70}},{"start":{"line":1226,"column":73},"end":{"line":1226,"column":77}}]},"176":{"line":1228,"type":"if","locations":[{"start":{"line":1228,"column":4},"end":{"line":1228,"column":4}},{"start":{"line":1228,"column":4},"end":{"line":1228,"column":4}}]},"177":{"line":1237,"type":"binary-expr","locations":[{"start":{"line":1237,"column":13},"end":{"line":1237,"column":30}},{"start":{"line":1237,"column":34},"end":{"line":1237,"column":47}},{"start":{"line":1237,"column":51},"end":{"line":1237,"column":55}}]},"178":{"line":1238,"type":"binary-expr","locations":[{"start":{"line":1238,"column":19},"end":{"line":1238,"column":28}},{"start":{"line":1238,"column":32},"end":{"line":1238,"column":46}}]},"179":{"line":1242,"type":"if","locations":[{"start":{"line":1242,"column":4},"end":{"line":1242,"column":4}},{"start":{"line":1242,"column":4},"end":{"line":1242,"column":4}}]},"180":{"line":1250,"type":"binary-expr","locations":[{"start":{"line":1250,"column":13},"end":{"line":1250,"column":30}},{"start":{"line":1250,"column":34},"end":{"line":1250,"column":78}},{"start":{"line":1250,"column":82},"end":{"line":1250,"column":86}}]},"181":{"line":1251,"type":"binary-expr","locations":[{"start":{"line":1251,"column":19},"end":{"line":1251,"column":28}},{"start":{"line":1251,"column":32},"end":{"line":1251,"column":69}}]},"182":{"line":1252,"type":"binary-expr","locations":[{"start":{"line":1252,"column":9},"end":{"line":1252,"column":26}},{"start":{"line":1252,"column":30},"end":{"line":1252,"column":49}}]},"183":{"line":1282,"type":"if","locations":[{"start":{"line":1282,"column":6},"end":{"line":1282,"column":6}},{"start":{"line":1282,"column":6},"end":{"line":1282,"column":6}}]},"184":{"line":1305,"type":"if","locations":[{"start":{"line":1305,"column":2},"end":{"line":1305,"column":2}},{"start":{"line":1305,"column":2},"end":{"line":1305,"column":2}}]},"185":{"line":1305,"type":"binary-expr","locations":[{"start":{"line":1305,"column":6},"end":{"line":1305,"column":35}},{"start":{"line":1305,"column":39},"end":{"line":1305,"column":55}}]},"186":{"line":1315,"type":"if","locations":[{"start":{"line":1315,"column":2},"end":{"line":1315,"column":2}},{"start":{"line":1315,"column":2},"end":{"line":1315,"column":2}}]},"187":{"line":1315,"type":"binary-expr","locations":[{"start":{"line":1315,"column":6},"end":{"line":1315,"column":43}},{"start":{"line":1315,"column":47},"end":{"line":1315,"column":50}}]},"188":{"line":1319,"type":"binary-expr","locations":[{"start":{"line":1319,"column":7},"end":{"line":1319,"column":9}},{"start":{"line":1319,"column":13},"end":{"line":1319,"column":42}}]},"189":{"line":1321,"type":"binary-expr","locations":[{"start":{"line":1321,"column":49},"end":{"line":1321,"column":64}},{"start":{"line":1321,"column":68},"end":{"line":1321,"column":70}}]},"190":{"line":1324,"type":"if","locations":[{"start":{"line":1324,"column":4},"end":{"line":1324,"column":4}},{"start":{"line":1324,"column":4},"end":{"line":1324,"column":4}}]},"191":{"line":1326,"type":"if","locations":[{"start":{"line":1326,"column":6},"end":{"line":1326,"column":6}},{"start":{"line":1326,"column":6},"end":{"line":1326,"column":6}}]},"192":{"line":1328,"type":"binary-expr","locations":[{"start":{"line":1328,"column":8},"end":{"line":1328,"column":10}},{"start":{"line":1328,"column":14},"end":{"line":1328,"column":34}}]},"193":{"line":1331,"type":"if","locations":[{"start":{"line":1331,"column":10},"end":{"line":1331,"column":10}},{"start":{"line":1331,"column":10},"end":{"line":1331,"column":10}}]},"194":{"line":1331,"type":"binary-expr","locations":[{"start":{"line":1331,"column":14},"end":{"line":1331,"column":16}},{"start":{"line":1331,"column":20},"end":{"line":1331,"column":23}}]},"195":{"line":1331,"type":"binary-expr","locations":[{"start":{"line":1331,"column":32},"end":{"line":1331,"column":34}},{"start":{"line":1331,"column":38},"end":{"line":1331,"column":45}}]},"196":{"line":1333,"type":"binary-expr","locations":[{"start":{"line":1333,"column":10},"end":{"line":1333,"column":12}},{"start":{"line":1333,"column":16},"end":{"line":1333,"column":36}}]},"197":{"line":1337,"type":"binary-expr","locations":[{"start":{"line":1337,"column":6},"end":{"line":1337,"column":8}},{"start":{"line":1337,"column":12},"end":{"line":1337,"column":19}}]},"198":{"line":1345,"type":"binary-expr","locations":[{"start":{"line":1345,"column":54},"end":{"line":1345,"column":69}},{"start":{"line":1345,"column":73},"end":{"line":1345,"column":75}}]},"199":{"line":1350,"type":"if","locations":[{"start":{"line":1350,"column":2},"end":{"line":1350,"column":2}},{"start":{"line":1350,"column":2},"end":{"line":1350,"column":2}}]},"200":{"line":1350,"type":"binary-expr","locations":[{"start":{"line":1350,"column":6},"end":{"line":1350,"column":35}},{"start":{"line":1350,"column":39},"end":{"line":1350,"column":55}}]},"201":{"line":1354,"type":"binary-expr","locations":[{"start":{"line":1354,"column":7},"end":{"line":1354,"column":9}},{"start":{"line":1354,"column":13},"end":{"line":1354,"column":42}}]},"202":{"line":1357,"type":"if","locations":[{"start":{"line":1357,"column":4},"end":{"line":1357,"column":4}},{"start":{"line":1357,"column":4},"end":{"line":1357,"column":4}}]},"203":{"line":1367,"type":"if","locations":[{"start":{"line":1367,"column":2},"end":{"line":1367,"column":2}},{"start":{"line":1367,"column":2},"end":{"line":1367,"column":2}}]},"204":{"line":1367,"type":"binary-expr","locations":[{"start":{"line":1367,"column":6},"end":{"line":1367,"column":35}},{"start":{"line":1367,"column":39},"end":{"line":1367,"column":55}}]},"205":{"line":1376,"type":"binary-expr","locations":[{"start":{"line":1376,"column":7},"end":{"line":1376,"column":9}},{"start":{"line":1376,"column":13},"end":{"line":1376,"column":42}}]},"206":{"line":1379,"type":"if","locations":[{"start":{"line":1379,"column":4},"end":{"line":1379,"column":4}},{"start":{"line":1379,"column":4},"end":{"line":1379,"column":4}}]},"207":{"line":1382,"type":"if","locations":[{"start":{"line":1382,"column":8},"end":{"line":1382,"column":8}},{"start":{"line":1382,"column":8},"end":{"line":1382,"column":8}}]},"208":{"line":1382,"type":"binary-expr","locations":[{"start":{"line":1382,"column":12},"end":{"line":1382,"column":14}},{"start":{"line":1382,"column":18},"end":{"line":1382,"column":21}}]},"209":{"line":1382,"type":"binary-expr","locations":[{"start":{"line":1382,"column":30},"end":{"line":1382,"column":32}},{"start":{"line":1382,"column":36},"end":{"line":1382,"column":43}}]},"210":{"line":1383,"type":"binary-expr","locations":[{"start":{"line":1383,"column":8},"end":{"line":1383,"column":10}},{"start":{"line":1383,"column":14},"end":{"line":1383,"column":34}}]},"211":{"line":1414,"type":"if","locations":[{"start":{"line":1414,"column":2},"end":{"line":1414,"column":2}},{"start":{"line":1414,"column":2},"end":{"line":1414,"column":2}}]},"212":{"line":1414,"type":"binary-expr","locations":[{"start":{"line":1414,"column":7},"end":{"line":1414,"column":46}},{"start":{"line":1415,"column":4},"end":{"line":1415,"column":25}},{"start":{"line":1415,"column":29},"end":{"line":1415,"column":45}}]},"213":{"line":1419,"type":"if","locations":[{"start":{"line":1419,"column":9},"end":{"line":1419,"column":9}},{"start":{"line":1419,"column":9},"end":{"line":1419,"column":9}}]},"214":{"line":1419,"type":"binary-expr","locations":[{"start":{"line":1419,"column":13},"end":{"line":1419,"column":48}},{"start":{"line":1420,"column":4},"end":{"line":1420,"column":25}},{"start":{"line":1420,"column":29},"end":{"line":1420,"column":45}}]},"215":{"line":1424,"type":"if","locations":[{"start":{"line":1424,"column":9},"end":{"line":1424,"column":9}},{"start":{"line":1424,"column":9},"end":{"line":1424,"column":9}}]},"216":{"line":1424,"type":"binary-expr","locations":[{"start":{"line":1424,"column":13},"end":{"line":1424,"column":42}},{"start":{"line":1424,"column":46},"end":{"line":1424,"column":62}}]},"217":{"line":1429,"type":"if","locations":[{"start":{"line":1429,"column":2},"end":{"line":1429,"column":2}},{"start":{"line":1429,"column":2},"end":{"line":1429,"column":2}}]},"218":{"line":1433,"type":"if","locations":[{"start":{"line":1433,"column":2},"end":{"line":1433,"column":2}},{"start":{"line":1433,"column":2},"end":{"line":1433,"column":2}}]},"219":{"line":1438,"type":"if","locations":[{"start":{"line":1438,"column":2},"end":{"line":1438,"column":2}},{"start":{"line":1438,"column":2},"end":{"line":1438,"column":2}}]},"220":{"line":1441,"type":"if","locations":[{"start":{"line":1441,"column":2},"end":{"line":1441,"column":2}},{"start":{"line":1441,"column":2},"end":{"line":1441,"column":2}}]},"221":{"line":1444,"type":"if","locations":[{"start":{"line":1444,"column":4},"end":{"line":1444,"column":4}},{"start":{"line":1444,"column":4},"end":{"line":1444,"column":4}}]},"222":{"line":1451,"type":"if","locations":[{"start":{"line":1451,"column":9},"end":{"line":1451,"column":9}},{"start":{"line":1451,"column":9},"end":{"line":1451,"column":9}}]},"223":{"line":1452,"type":"if","locations":[{"start":{"line":1452,"column":4},"end":{"line":1452,"column":4}},{"start":{"line":1452,"column":4},"end":{"line":1452,"column":4}}]},"224":{"line":1454,"type":"if","locations":[{"start":{"line":1454,"column":6},"end":{"line":1454,"column":6}},{"start":{"line":1454,"column":6},"end":{"line":1454,"column":6}}]},"225":{"line":1459,"type":"if","locations":[{"start":{"line":1459,"column":6},"end":{"line":1459,"column":6}},{"start":{"line":1459,"column":6},"end":{"line":1459,"column":6}}]},"226":{"line":1464,"type":"if","locations":[{"start":{"line":1464,"column":4},"end":{"line":1464,"column":4}},{"start":{"line":1464,"column":4},"end":{"line":1464,"column":4}}]},"227":{"line":1464,"type":"binary-expr","locations":[{"start":{"line":1464,"column":8},"end":{"line":1464,"column":33}},{"start":{"line":1464,"column":37},"end":{"line":1464,"column":77}}]},"228":{"line":1468,"type":"if","locations":[{"start":{"line":1468,"column":6},"end":{"line":1468,"column":6}},{"start":{"line":1468,"column":6},"end":{"line":1468,"column":6}}]},"229":{"line":1468,"type":"binary-expr","locations":[{"start":{"line":1468,"column":10},"end":{"line":1468,"column":39}},{"start":{"line":1468,"column":43},"end":{"line":1468,"column":67}}]},"230":{"line":1475,"type":"if","locations":[{"start":{"line":1475,"column":6},"end":{"line":1475,"column":6}},{"start":{"line":1475,"column":6},"end":{"line":1475,"column":6}}]},"231":{"line":1477,"type":"if","locations":[{"start":{"line":1477,"column":6},"end":{"line":1477,"column":6}},{"start":{"line":1477,"column":6},"end":{"line":1477,"column":6}}]},"232":{"line":1477,"type":"binary-expr","locations":[{"start":{"line":1477,"column":10},"end":{"line":1477,"column":37}},{"start":{"line":1477,"column":41},"end":{"line":1477,"column":72}}]},"233":{"line":1482,"type":"if","locations":[{"start":{"line":1482,"column":8},"end":{"line":1482,"column":8}},{"start":{"line":1482,"column":8},"end":{"line":1482,"column":8}}]},"234":{"line":1485,"type":"if","locations":[{"start":{"line":1485,"column":8},"end":{"line":1485,"column":8}},{"start":{"line":1485,"column":8},"end":{"line":1485,"column":8}}]},"235":{"line":1489,"type":"if","locations":[{"start":{"line":1489,"column":8},"end":{"line":1489,"column":8}},{"start":{"line":1489,"column":8},"end":{"line":1489,"column":8}}]},"236":{"line":1489,"type":"binary-expr","locations":[{"start":{"line":1489,"column":12},"end":{"line":1489,"column":28}},{"start":{"line":1489,"column":32},"end":{"line":1489,"column":57}},{"start":{"line":1490,"column":12},"end":{"line":1490,"column":64}}]},"237":{"line":1506,"type":"if","locations":[{"start":{"line":1506,"column":9},"end":{"line":1506,"column":9}},{"start":{"line":1506,"column":9},"end":{"line":1506,"column":9}}]},"238":{"line":1522,"type":"if","locations":[{"start":{"line":1522,"column":2},"end":{"line":1522,"column":2}},{"start":{"line":1522,"column":2},"end":{"line":1522,"column":2}}]},"239":{"line":1522,"type":"binary-expr","locations":[{"start":{"line":1522,"column":6},"end":{"line":1522,"column":35}},{"start":{"line":1522,"column":39},"end":{"line":1522,"column":55}}]},"240":{"line":1527,"type":"binary-expr","locations":[{"start":{"line":1527,"column":7},"end":{"line":1527,"column":9}},{"start":{"line":1527,"column":13},"end":{"line":1527,"column":42}}]},"241":{"line":1550,"type":"binary-expr","locations":[{"start":{"line":1550,"column":11},"end":{"line":1550,"column":17}},{"start":{"line":1550,"column":21},"end":{"line":1550,"column":23}}]},"242":{"line":1555,"type":"if","locations":[{"start":{"line":1555,"column":2},"end":{"line":1555,"column":2}},{"start":{"line":1555,"column":2},"end":{"line":1555,"column":2}}]},"243":{"line":1556,"type":"if","locations":[{"start":{"line":1556,"column":4},"end":{"line":1556,"column":4}},{"start":{"line":1556,"column":4},"end":{"line":1556,"column":4}}]},"244":{"line":1558,"type":"if","locations":[{"start":{"line":1558,"column":4},"end":{"line":1558,"column":4}},{"start":{"line":1558,"column":4},"end":{"line":1558,"column":4}}]},"245":{"line":1563,"type":"binary-expr","locations":[{"start":{"line":1563,"column":23},"end":{"line":1563,"column":49}},{"start":{"line":1563,"column":53},"end":{"line":1563,"column":79}},{"start":{"line":1564,"column":8},"end":{"line":1564,"column":42}}]},"246":{"line":1575,"type":"if","locations":[{"start":{"line":1575,"column":2},"end":{"line":1575,"column":2}},{"start":{"line":1575,"column":2},"end":{"line":1575,"column":2}}]},"247":{"line":1579,"type":"if","locations":[{"start":{"line":1579,"column":4},"end":{"line":1579,"column":4}},{"start":{"line":1579,"column":4},"end":{"line":1579,"column":4}}]},"248":{"line":1608,"type":"binary-expr","locations":[{"start":{"line":1608,"column":11},"end":{"line":1608,"column":17}},{"start":{"line":1608,"column":21},"end":{"line":1608,"column":23}}]},"249":{"line":1611,"type":"binary-expr","locations":[{"start":{"line":1611,"column":11},"end":{"line":1611,"column":28}},{"start":{"line":1611,"column":32},"end":{"line":1611,"column":80}},{"start":{"line":1611,"column":84},"end":{"line":1611,"column":88}}]},"250":{"line":1612,"type":"binary-expr","locations":[{"start":{"line":1612,"column":21},"end":{"line":1612,"column":30}},{"start":{"line":1612,"column":34},"end":{"line":1612,"column":71}}]},"251":{"line":1614,"type":"binary-expr","locations":[{"start":{"line":1614,"column":11},"end":{"line":1614,"column":28}},{"start":{"line":1614,"column":32},"end":{"line":1614,"column":79}}]},"252":{"line":1617,"type":"if","locations":[{"start":{"line":1617,"column":2},"end":{"line":1617,"column":2}},{"start":{"line":1617,"column":2},"end":{"line":1617,"column":2}}]},"253":{"line":1621,"type":"if","locations":[{"start":{"line":1621,"column":4},"end":{"line":1621,"column":4}},{"start":{"line":1621,"column":4},"end":{"line":1621,"column":4}}]},"254":{"line":1695,"type":"if","locations":[{"start":{"line":1695,"column":2},"end":{"line":1695,"column":2}},{"start":{"line":1695,"column":2},"end":{"line":1695,"column":2}}]},"255":{"line":1695,"type":"binary-expr","locations":[{"start":{"line":1695,"column":6},"end":{"line":1695,"column":35}},{"start":{"line":1695,"column":39},"end":{"line":1695,"column":55}}]},"256":{"line":1706,"type":"if","locations":[{"start":{"line":1706,"column":2},"end":{"line":1706,"column":2}},{"start":{"line":1706,"column":2},"end":{"line":1706,"column":2}}]},"257":{"line":1706,"type":"binary-expr","locations":[{"start":{"line":1706,"column":6},"end":{"line":1706,"column":43}},{"start":{"line":1706,"column":47},"end":{"line":1706,"column":50}}]},"258":{"line":1710,"type":"binary-expr","locations":[{"start":{"line":1710,"column":20},"end":{"line":1710,"column":35}},{"start":{"line":1710,"column":39},"end":{"line":1710,"column":41}}]},"259":{"line":1711,"type":"binary-expr","locations":[{"start":{"line":1711,"column":7},"end":{"line":1711,"column":9}},{"start":{"line":1711,"column":13},"end":{"line":1711,"column":42}}]},"260":{"line":1722,"type":"if","locations":[{"start":{"line":1722,"column":6},"end":{"line":1722,"column":6}},{"start":{"line":1722,"column":6},"end":{"line":1722,"column":6}}]},"261":{"line":1723,"type":"binary-expr","locations":[{"start":{"line":1723,"column":15},"end":{"line":1723,"column":17}},{"start":{"line":1723,"column":21},"end":{"line":1723,"column":28}}]},"262":{"line":1725,"type":"if","locations":[{"start":{"line":1725,"column":6},"end":{"line":1725,"column":6}},{"start":{"line":1725,"column":6},"end":{"line":1725,"column":6}}]},"263":{"line":1728,"type":"binary-expr","locations":[{"start":{"line":1728,"column":8},"end":{"line":1728,"column":10}},{"start":{"line":1728,"column":14},"end":{"line":1728,"column":34}}]},"264":{"line":1730,"type":"binary-expr","locations":[{"start":{"line":1730,"column":8},"end":{"line":1730,"column":10}},{"start":{"line":1730,"column":14},"end":{"line":1732,"column":31}}]},"265":{"line":1739,"type":"if","locations":[{"start":{"line":1739,"column":2},"end":{"line":1739,"column":2}},{"start":{"line":1739,"column":2},"end":{"line":1739,"column":2}}]},"266":{"line":1739,"type":"binary-expr","locations":[{"start":{"line":1739,"column":6},"end":{"line":1739,"column":35}},{"start":{"line":1739,"column":39},"end":{"line":1739,"column":55}}]},"267":{"line":1744,"type":"binary-expr","locations":[{"start":{"line":1744,"column":7},"end":{"line":1744,"column":9}},{"start":{"line":1744,"column":13},"end":{"line":1744,"column":42}}]},"268":{"line":1748,"type":"if","locations":[{"start":{"line":1748,"column":4},"end":{"line":1748,"column":4}},{"start":{"line":1748,"column":4},"end":{"line":1748,"column":4}}]},"269":{"line":1759,"type":"if","locations":[{"start":{"line":1759,"column":2},"end":{"line":1759,"column":2}},{"start":{"line":1759,"column":2},"end":{"line":1759,"column":2}}]},"270":{"line":1759,"type":"binary-expr","locations":[{"start":{"line":1759,"column":6},"end":{"line":1759,"column":35}},{"start":{"line":1759,"column":39},"end":{"line":1759,"column":55}}]},"271":{"line":1764,"type":"binary-expr","locations":[{"start":{"line":1764,"column":7},"end":{"line":1764,"column":9}},{"start":{"line":1764,"column":13},"end":{"line":1764,"column":42}}]},"272":{"line":1767,"type":"if","locations":[{"start":{"line":1767,"column":4},"end":{"line":1767,"column":4}},{"start":{"line":1767,"column":4},"end":{"line":1767,"column":4}}]},"273":{"line":1784,"type":"if","locations":[{"start":{"line":1784,"column":2},"end":{"line":1784,"column":2}},{"start":{"line":1784,"column":2},"end":{"line":1784,"column":2}}]},"274":{"line":1784,"type":"binary-expr","locations":[{"start":{"line":1784,"column":6},"end":{"line":1784,"column":35}},{"start":{"line":1784,"column":39},"end":{"line":1784,"column":55}}]},"275":{"line":1795,"type":"if","locations":[{"start":{"line":1795,"column":2},"end":{"line":1795,"column":2}},{"start":{"line":1795,"column":2},"end":{"line":1795,"column":2}}]},"276":{"line":1795,"type":"binary-expr","locations":[{"start":{"line":1795,"column":6},"end":{"line":1795,"column":43}},{"start":{"line":1795,"column":47},"end":{"line":1795,"column":50}}]},"277":{"line":1799,"type":"binary-expr","locations":[{"start":{"line":1799,"column":20},"end":{"line":1799,"column":35}},{"start":{"line":1799,"column":39},"end":{"line":1799,"column":41}}]},"278":{"line":1800,"type":"binary-expr","locations":[{"start":{"line":1800,"column":7},"end":{"line":1800,"column":9}},{"start":{"line":1800,"column":13},"end":{"line":1800,"column":42}}]},"279":{"line":1808,"type":"if","locations":[{"start":{"line":1808,"column":4},"end":{"line":1808,"column":4}},{"start":{"line":1808,"column":4},"end":{"line":1808,"column":4}}]},"280":{"line":1818,"type":"if","locations":[{"start":{"line":1818,"column":4},"end":{"line":1818,"column":4}},{"start":{"line":1818,"column":4},"end":{"line":1818,"column":4}}]},"281":{"line":1821,"type":"binary-expr","locations":[{"start":{"line":1821,"column":6},"end":{"line":1821,"column":8}},{"start":{"line":1821,"column":12},"end":{"line":1821,"column":32}}]},"282":{"line":1823,"type":"binary-expr","locations":[{"start":{"line":1823,"column":6},"end":{"line":1823,"column":8}},{"start":{"line":1823,"column":12},"end":{"line":1823,"column":19}}]},"283":{"line":1838,"type":"binary-expr","locations":[{"start":{"line":1838,"column":20},"end":{"line":1838,"column":35}},{"start":{"line":1838,"column":39},"end":{"line":1838,"column":41}}]},"284":{"line":1866,"type":"if","locations":[{"start":{"line":1866,"column":2},"end":{"line":1866,"column":2}},{"start":{"line":1866,"column":2},"end":{"line":1866,"column":2}}]},"285":{"line":1866,"type":"binary-expr","locations":[{"start":{"line":1866,"column":7},"end":{"line":1866,"column":46}},{"start":{"line":1867,"column":4},"end":{"line":1867,"column":25}},{"start":{"line":1867,"column":29},"end":{"line":1867,"column":45}}]},"286":{"line":1871,"type":"if","locations":[{"start":{"line":1871,"column":9},"end":{"line":1871,"column":9}},{"start":{"line":1871,"column":9},"end":{"line":1871,"column":9}}]},"287":{"line":1871,"type":"binary-expr","locations":[{"start":{"line":1871,"column":13},"end":{"line":1871,"column":48}},{"start":{"line":1872,"column":4},"end":{"line":1872,"column":25}},{"start":{"line":1872,"column":29},"end":{"line":1872,"column":45}}]},"288":{"line":1876,"type":"if","locations":[{"start":{"line":1876,"column":9},"end":{"line":1876,"column":9}},{"start":{"line":1876,"column":9},"end":{"line":1876,"column":9}}]},"289":{"line":1876,"type":"binary-expr","locations":[{"start":{"line":1876,"column":13},"end":{"line":1876,"column":42}},{"start":{"line":1876,"column":46},"end":{"line":1876,"column":62}}]},"290":{"line":1883,"type":"if","locations":[{"start":{"line":1883,"column":2},"end":{"line":1883,"column":2}},{"start":{"line":1883,"column":2},"end":{"line":1883,"column":2}}]},"291":{"line":1886,"type":"if","locations":[{"start":{"line":1886,"column":2},"end":{"line":1886,"column":2}},{"start":{"line":1886,"column":2},"end":{"line":1886,"column":2}}]},"292":{"line":1889,"type":"if","locations":[{"start":{"line":1889,"column":9},"end":{"line":1889,"column":9}},{"start":{"line":1889,"column":9},"end":{"line":1889,"column":9}}]},"293":{"line":1890,"type":"if","locations":[{"start":{"line":1890,"column":4},"end":{"line":1890,"column":4}},{"start":{"line":1890,"column":4},"end":{"line":1890,"column":4}}]},"294":{"line":1895,"type":"if","locations":[{"start":{"line":1895,"column":8},"end":{"line":1895,"column":8}},{"start":{"line":1895,"column":8},"end":{"line":1895,"column":8}}]},"295":{"line":1898,"type":"if","locations":[{"start":{"line":1898,"column":8},"end":{"line":1898,"column":8}},{"start":{"line":1898,"column":8},"end":{"line":1898,"column":8}}]},"296":{"line":1902,"type":"if","locations":[{"start":{"line":1902,"column":8},"end":{"line":1902,"column":8}},{"start":{"line":1902,"column":8},"end":{"line":1902,"column":8}}]},"297":{"line":1902,"type":"binary-expr","locations":[{"start":{"line":1902,"column":12},"end":{"line":1902,"column":28}},{"start":{"line":1902,"column":32},"end":{"line":1902,"column":57}},{"start":{"line":1903,"column":12},"end":{"line":1903,"column":64}}]},"298":{"line":1919,"type":"if","locations":[{"start":{"line":1919,"column":9},"end":{"line":1919,"column":9}},{"start":{"line":1919,"column":9},"end":{"line":1919,"column":9}}]},"299":{"line":1936,"type":"if","locations":[{"start":{"line":1936,"column":2},"end":{"line":1936,"column":2}},{"start":{"line":1936,"column":2},"end":{"line":1936,"column":2}}]},"300":{"line":1936,"type":"binary-expr","locations":[{"start":{"line":1936,"column":6},"end":{"line":1936,"column":35}},{"start":{"line":1936,"column":39},"end":{"line":1936,"column":55}}]},"301":{"line":1941,"type":"binary-expr","locations":[{"start":{"line":1941,"column":7},"end":{"line":1941,"column":9}},{"start":{"line":1941,"column":13},"end":{"line":1941,"column":42}}]},"302":{"line":1947,"type":"binary-expr","locations":[{"start":{"line":1947,"column":11},"end":{"line":1947,"column":17}},{"start":{"line":1947,"column":21},"end":{"line":1947,"column":23}}]},"303":{"line":1951,"type":"binary-expr","locations":[{"start":{"line":1951,"column":21},"end":{"line":1951,"column":30}},{"start":{"line":1951,"column":35},"end":{"line":1951,"column":81}}]},"304":{"line":1952,"type":"binary-expr","locations":[{"start":{"line":1952,"column":21},"end":{"line":1952,"column":36}},{"start":{"line":1952,"column":40},"end":{"line":1952,"column":77}}]},"305":{"line":1953,"type":"binary-expr","locations":[{"start":{"line":1953,"column":15},"end":{"line":1953,"column":59}},{"start":{"line":1953,"column":63},"end":{"line":1953,"column":67}}]},"306":{"line":1955,"type":"if","locations":[{"start":{"line":1955,"column":2},"end":{"line":1955,"column":2}},{"start":{"line":1955,"column":2},"end":{"line":1955,"column":2}}]},"307":{"line":1978,"type":"if","locations":[{"start":{"line":1978,"column":2},"end":{"line":1978,"column":2}},{"start":{"line":1978,"column":2},"end":{"line":1978,"column":2}}]},"308":{"line":1980,"type":"if","locations":[{"start":{"line":1980,"column":9},"end":{"line":1980,"column":9}},{"start":{"line":1980,"column":9},"end":{"line":1980,"column":9}}]},"309":{"line":1991,"type":"if","locations":[{"start":{"line":1991,"column":2},"end":{"line":1991,"column":2}},{"start":{"line":1991,"column":2},"end":{"line":1991,"column":2}}]},"310":{"line":1994,"type":"if","locations":[{"start":{"line":1994,"column":6},"end":{"line":1994,"column":6}},{"start":{"line":1994,"column":6},"end":{"line":1994,"column":6}}]},"311":{"line":1995,"type":"if","locations":[{"start":{"line":1995,"column":8},"end":{"line":1995,"column":8}},{"start":{"line":1995,"column":8},"end":{"line":1995,"column":8}}]},"312":{"line":2055,"type":"if","locations":[{"start":{"line":2055,"column":2},"end":{"line":2055,"column":2}},{"start":{"line":2055,"column":2},"end":{"line":2055,"column":2}}]},"313":{"line":2055,"type":"binary-expr","locations":[{"start":{"line":2055,"column":7},"end":{"line":2055,"column":46}},{"start":{"line":2056,"column":4},"end":{"line":2056,"column":25}},{"start":{"line":2056,"column":29},"end":{"line":2056,"column":45}}]},"314":{"line":2060,"type":"if","locations":[{"start":{"line":2060,"column":9},"end":{"line":2060,"column":9}},{"start":{"line":2060,"column":9},"end":{"line":2060,"column":9}}]},"315":{"line":2060,"type":"binary-expr","locations":[{"start":{"line":2060,"column":13},"end":{"line":2060,"column":48}},{"start":{"line":2061,"column":4},"end":{"line":2061,"column":25}},{"start":{"line":2061,"column":29},"end":{"line":2061,"column":45}}]},"316":{"line":2065,"type":"if","locations":[{"start":{"line":2065,"column":9},"end":{"line":2065,"column":9}},{"start":{"line":2065,"column":9},"end":{"line":2065,"column":9}}]},"317":{"line":2065,"type":"binary-expr","locations":[{"start":{"line":2065,"column":13},"end":{"line":2065,"column":42}},{"start":{"line":2065,"column":46},"end":{"line":2065,"column":62}}]},"318":{"line":2071,"type":"if","locations":[{"start":{"line":2071,"column":2},"end":{"line":2071,"column":2}},{"start":{"line":2071,"column":2},"end":{"line":2071,"column":2}}]},"319":{"line":2072,"type":"if","locations":[{"start":{"line":2072,"column":4},"end":{"line":2072,"column":4}},{"start":{"line":2072,"column":4},"end":{"line":2072,"column":4}}]},"320":{"line":2081,"type":"if","locations":[{"start":{"line":2081,"column":2},"end":{"line":2081,"column":2}},{"start":{"line":2081,"column":2},"end":{"line":2081,"column":2}}]},"321":{"line":2085,"type":"if","locations":[{"start":{"line":2085,"column":2},"end":{"line":2085,"column":2}},{"start":{"line":2085,"column":2},"end":{"line":2085,"column":2}}]},"322":{"line":2089,"type":"if","locations":[{"start":{"line":2089,"column":9},"end":{"line":2089,"column":9}},{"start":{"line":2089,"column":9},"end":{"line":2089,"column":9}}]},"323":{"line":2095,"type":"if","locations":[{"start":{"line":2095,"column":2},"end":{"line":2095,"column":2}},{"start":{"line":2095,"column":2},"end":{"line":2095,"column":2}}]},"324":{"line":2095,"type":"binary-expr","locations":[{"start":{"line":2095,"column":6},"end":{"line":2095,"column":10}},{"start":{"line":2095,"column":14},"end":{"line":2095,"column":47}}]},"325":{"line":2099,"type":"if","locations":[{"start":{"line":2099,"column":4},"end":{"line":2099,"column":4}},{"start":{"line":2099,"column":4},"end":{"line":2099,"column":4}}]},"326":{"line":2106,"type":"if","locations":[{"start":{"line":2106,"column":6},"end":{"line":2106,"column":6}},{"start":{"line":2106,"column":6},"end":{"line":2106,"column":6}}]},"327":{"line":2110,"type":"cond-expr","locations":[{"start":{"line":2110,"column":32},"end":{"line":2110,"column":36}},{"start":{"line":2110,"column":39},"end":{"line":2110,"column":48}}]},"328":{"line":2112,"type":"if","locations":[{"start":{"line":2112,"column":13},"end":{"line":2112,"column":13}},{"start":{"line":2112,"column":13},"end":{"line":2112,"column":13}}]},"329":{"line":2124,"type":"if","locations":[{"start":{"line":2124,"column":6},"end":{"line":2124,"column":6}},{"start":{"line":2124,"column":6},"end":{"line":2124,"column":6}}]},"330":{"line":2140,"type":"binary-expr","locations":[{"start":{"line":2140,"column":18},"end":{"line":2140,"column":31}},{"start":{"line":2140,"column":35},"end":{"line":2140,"column":53}}]},"331":{"line":2147,"type":"if","locations":[{"start":{"line":2147,"column":2},"end":{"line":2147,"column":2}},{"start":{"line":2147,"column":2},"end":{"line":2147,"column":2}}]},"332":{"line":2147,"type":"binary-expr","locations":[{"start":{"line":2147,"column":6},"end":{"line":2147,"column":35}},{"start":{"line":2147,"column":39},"end":{"line":2147,"column":55}}]},"333":{"line":2156,"type":"if","locations":[{"start":{"line":2156,"column":2},"end":{"line":2156,"column":2}},{"start":{"line":2156,"column":2},"end":{"line":2156,"column":2}}]},"334":{"line":2156,"type":"binary-expr","locations":[{"start":{"line":2156,"column":6},"end":{"line":2156,"column":43}},{"start":{"line":2156,"column":47},"end":{"line":2156,"column":50}}]},"335":{"line":2161,"type":"binary-expr","locations":[{"start":{"line":2161,"column":20},"end":{"line":2161,"column":35}},{"start":{"line":2161,"column":39},"end":{"line":2161,"column":41}}]},"336":{"line":2162,"type":"binary-expr","locations":[{"start":{"line":2162,"column":7},"end":{"line":2162,"column":9}},{"start":{"line":2162,"column":13},"end":{"line":2162,"column":42}}]},"337":{"line":2167,"type":"if","locations":[{"start":{"line":2167,"column":4},"end":{"line":2167,"column":4}},{"start":{"line":2167,"column":4},"end":{"line":2167,"column":4}}]},"338":{"line":2170,"type":"cond-expr","locations":[{"start":{"line":2170,"column":28},"end":{"line":2170,"column":32}},{"start":{"line":2170,"column":35},"end":{"line":2170,"column":39}}]},"339":{"line":2175,"type":"cond-expr","locations":[{"start":{"line":2175,"column":30},"end":{"line":2175,"column":34}},{"start":{"line":2175,"column":37},"end":{"line":2175,"column":41}}]},"340":{"line":2180,"type":"if","locations":[{"start":{"line":2180,"column":2},"end":{"line":2180,"column":2}},{"start":{"line":2180,"column":2},"end":{"line":2180,"column":2}}]},"341":{"line":2182,"type":"if","locations":[{"start":{"line":2182,"column":6},"end":{"line":2182,"column":6}},{"start":{"line":2182,"column":6},"end":{"line":2182,"column":6}}]},"342":{"line":2189,"type":"binary-expr","locations":[{"start":{"line":2189,"column":15},"end":{"line":2189,"column":22}},{"start":{"line":2189,"column":26},"end":{"line":2189,"column":28}}]},"343":{"line":2193,"type":"if","locations":[{"start":{"line":2193,"column":6},"end":{"line":2193,"column":6}},{"start":{"line":2193,"column":6},"end":{"line":2193,"column":6}}]},"344":{"line":2199,"type":"cond-expr","locations":[{"start":{"line":2199,"column":29},"end":{"line":2199,"column":33}},{"start":{"line":2199,"column":36},"end":{"line":2199,"column":61}}]},"345":{"line":2200,"type":"if","locations":[{"start":{"line":2200,"column":6},"end":{"line":2200,"column":6}},{"start":{"line":2200,"column":6},"end":{"line":2200,"column":6}}]},"346":{"line":2206,"type":"if","locations":[{"start":{"line":2206,"column":10},"end":{"line":2206,"column":10}},{"start":{"line":2206,"column":10},"end":{"line":2206,"column":10}}]},"347":{"line":2209,"type":"cond-expr","locations":[{"start":{"line":2209,"column":26},"end":{"line":2209,"column":30}},{"start":{"line":2209,"column":33},"end":{"line":2209,"column":37}}]},"348":{"line":2226,"type":"binary-expr","locations":[{"start":{"line":2226,"column":20},"end":{"line":2226,"column":35}},{"start":{"line":2226,"column":39},"end":{"line":2226,"column":41}}]},"349":{"line":2233,"type":"binary-expr","locations":[{"start":{"line":2233,"column":18},"end":{"line":2233,"column":25}},{"start":{"line":2233,"column":29},"end":{"line":2233,"column":62}}]},"350":{"line":2234,"type":"binary-expr","locations":[{"start":{"line":2234,"column":13},"end":{"line":2234,"column":21}},{"start":{"line":2234,"column":25},"end":{"line":2234,"column":36}},{"start":{"line":2234,"column":41},"end":{"line":2234,"column":47}},{"start":{"line":2234,"column":51},"end":{"line":2234,"column":67}}]},"351":{"line":2236,"type":"if","locations":[{"start":{"line":2236,"column":2},"end":{"line":2236,"column":2}},{"start":{"line":2236,"column":2},"end":{"line":2236,"column":2}}]},"352":{"line":2236,"type":"binary-expr","locations":[{"start":{"line":2236,"column":6},"end":{"line":2236,"column":14}},{"start":{"line":2236,"column":18},"end":{"line":2236,"column":60}}]},"353":{"line":2250,"type":"if","locations":[{"start":{"line":2250,"column":2},"end":{"line":2250,"column":2}},{"start":{"line":2250,"column":2},"end":{"line":2250,"column":2}}]},"354":{"line":2250,"type":"binary-expr","locations":[{"start":{"line":2250,"column":6},"end":{"line":2250,"column":35}},{"start":{"line":2250,"column":39},"end":{"line":2250,"column":55}}]},"355":{"line":2261,"type":"cond-expr","locations":[{"start":{"line":2261,"column":22},"end":{"line":2261,"column":48}},{"start":{"line":2261,"column":51},"end":{"line":2261,"column":66}}]},"356":{"line":2264,"type":"if","locations":[{"start":{"line":2264,"column":2},"end":{"line":2264,"column":2}},{"start":{"line":2264,"column":2},"end":{"line":2264,"column":2}}]},"357":{"line":2265,"type":"binary-expr","locations":[{"start":{"line":2265,"column":9},"end":{"line":2265,"column":11}},{"start":{"line":2265,"column":15},"end":{"line":2265,"column":44}}]},"358":{"line":2271,"type":"binary-expr","locations":[{"start":{"line":2271,"column":15},"end":{"line":2271,"column":22}},{"start":{"line":2271,"column":26},"end":{"line":2271,"column":28}}]},"359":{"line":2275,"type":"if","locations":[{"start":{"line":2275,"column":6},"end":{"line":2275,"column":6}},{"start":{"line":2275,"column":6},"end":{"line":2275,"column":6}}]},"360":{"line":2280,"type":"if","locations":[{"start":{"line":2280,"column":6},"end":{"line":2280,"column":6}},{"start":{"line":2280,"column":6},"end":{"line":2280,"column":6}}]},"361":{"line":2285,"type":"if","locations":[{"start":{"line":2285,"column":8},"end":{"line":2285,"column":8}},{"start":{"line":2285,"column":8},"end":{"line":2285,"column":8}}]},"362":{"line":2289,"type":"cond-expr","locations":[{"start":{"line":2289,"column":27},"end":{"line":2289,"column":45}},{"start":{"line":2289,"column":48},"end":{"line":2289,"column":64}}]},"363":{"line":2290,"type":"binary-expr","locations":[{"start":{"line":2290,"column":19},"end":{"line":2290,"column":26}},{"start":{"line":2290,"column":30},"end":{"line":2290,"column":32}}]},"364":{"line":2298,"type":"if","locations":[{"start":{"line":2298,"column":9},"end":{"line":2298,"column":9}},{"start":{"line":2298,"column":9},"end":{"line":2298,"column":9}}]},"365":{"line":2298,"type":"binary-expr","locations":[{"start":{"line":2298,"column":13},"end":{"line":2298,"column":30}},{"start":{"line":2298,"column":34},"end":{"line":2298,"column":36}}]},"366":{"line":2300,"type":"if","locations":[{"start":{"line":2300,"column":9},"end":{"line":2300,"column":9}},{"start":{"line":2300,"column":9},"end":{"line":2300,"column":9}}]},"367":{"line":2307,"type":"if","locations":[{"start":{"line":2307,"column":2},"end":{"line":2307,"column":2}},{"start":{"line":2307,"column":2},"end":{"line":2307,"column":2}}]},"368":{"line":2307,"type":"binary-expr","locations":[{"start":{"line":2307,"column":6},"end":{"line":2307,"column":35}},{"start":{"line":2307,"column":39},"end":{"line":2307,"column":55}}]},"369":{"line":2312,"type":"binary-expr","locations":[{"start":{"line":2312,"column":7},"end":{"line":2312,"column":9}},{"start":{"line":2312,"column":13},"end":{"line":2312,"column":42}}]},"370":{"line":2318,"type":"if","locations":[{"start":{"line":2318,"column":2},"end":{"line":2318,"column":2}},{"start":{"line":2318,"column":2},"end":{"line":2318,"column":2}}]},"371":{"line":2328,"type":"binary-expr","locations":[{"start":{"line":2328,"column":13},"end":{"line":2328,"column":20}},{"start":{"line":2328,"column":24},"end":{"line":2328,"column":26}}]},"372":{"line":2332,"type":"if","locations":[{"start":{"line":2332,"column":4},"end":{"line":2332,"column":4}},{"start":{"line":2332,"column":4},"end":{"line":2332,"column":4}}]},"373":{"line":2334,"type":"if","locations":[{"start":{"line":2334,"column":6},"end":{"line":2334,"column":6}},{"start":{"line":2334,"column":6},"end":{"line":2334,"column":6}}]},"374":{"line":2343,"type":"binary-expr","locations":[{"start":{"line":2343,"column":11},"end":{"line":2343,"column":17}},{"start":{"line":2343,"column":21},"end":{"line":2343,"column":23}}]},"375":{"line":2347,"type":"binary-expr","locations":[{"start":{"line":2347,"column":21},"end":{"line":2347,"column":30}},{"start":{"line":2347,"column":35},"end":{"line":2347,"column":81}}]},"376":{"line":2348,"type":"binary-expr","locations":[{"start":{"line":2348,"column":21},"end":{"line":2348,"column":36}},{"start":{"line":2348,"column":40},"end":{"line":2348,"column":83}}]},"377":{"line":2349,"type":"binary-expr","locations":[{"start":{"line":2349,"column":15},"end":{"line":2349,"column":59}},{"start":{"line":2349,"column":63},"end":{"line":2349,"column":67}}]},"378":{"line":2351,"type":"if","locations":[{"start":{"line":2351,"column":2},"end":{"line":2351,"column":2}},{"start":{"line":2351,"column":2},"end":{"line":2351,"column":2}}]},"379":{"line":2375,"type":"if","locations":[{"start":{"line":2375,"column":2},"end":{"line":2375,"column":2}},{"start":{"line":2375,"column":2},"end":{"line":2375,"column":2}}]},"380":{"line":2378,"type":"binary-expr","locations":[{"start":{"line":2378,"column":25},"end":{"line":2378,"column":43}},{"start":{"line":2378,"column":47},"end":{"line":2378,"column":49}}]},"381":{"line":2381,"type":"if","locations":[{"start":{"line":2381,"column":8},"end":{"line":2381,"column":8}},{"start":{"line":2381,"column":8},"end":{"line":2381,"column":8}}]},"382":{"line":2381,"type":"binary-expr","locations":[{"start":{"line":2381,"column":12},"end":{"line":2381,"column":35}},{"start":{"line":2381,"column":39},"end":{"line":2381,"column":64}}]},"383":{"line":2388,"type":"if","locations":[{"start":{"line":2388,"column":6},"end":{"line":2388,"column":6}},{"start":{"line":2388,"column":6},"end":{"line":2388,"column":6}}]},"384":{"line":2392,"type":"if","locations":[{"start":{"line":2392,"column":2},"end":{"line":2392,"column":2}},{"start":{"line":2392,"column":2},"end":{"line":2392,"column":2}}]},"385":{"line":2394,"type":"binary-expr","locations":[{"start":{"line":2394,"column":25},"end":{"line":2394,"column":43}},{"start":{"line":2394,"column":47},"end":{"line":2394,"column":49}}]},"386":{"line":2395,"type":"binary-expr","locations":[{"start":{"line":2395,"column":54},"end":{"line":2395,"column":63}},{"start":{"line":2395,"column":67},"end":{"line":2395,"column":87}}]},"387":{"line":2399,"type":"if","locations":[{"start":{"line":2399,"column":6},"end":{"line":2399,"column":6}},{"start":{"line":2399,"column":6},"end":{"line":2399,"column":6}}]},"388":{"line":2407,"type":"if","locations":[{"start":{"line":2407,"column":2},"end":{"line":2407,"column":2}},{"start":{"line":2407,"column":2},"end":{"line":2407,"column":2}}]},"389":{"line":2410,"type":"binary-expr","locations":[{"start":{"line":2410,"column":25},"end":{"line":2410,"column":43}},{"start":{"line":2410,"column":47},"end":{"line":2410,"column":49}}]},"390":{"line":2413,"type":"if","locations":[{"start":{"line":2413,"column":8},"end":{"line":2413,"column":8}},{"start":{"line":2413,"column":8},"end":{"line":2413,"column":8}}]},"391":{"line":2414,"type":"if","locations":[{"start":{"line":2414,"column":10},"end":{"line":2414,"column":10}},{"start":{"line":2414,"column":10},"end":{"line":2414,"column":10}}]},"392":{"line":2418,"type":"cond-expr","locations":[{"start":{"line":2419,"column":14},"end":{"line":2419,"column":51}},{"start":{"line":2420,"column":14},"end":{"line":2420,"column":60}}]},"393":{"line":2429,"type":"if","locations":[{"start":{"line":2429,"column":6},"end":{"line":2429,"column":6}},{"start":{"line":2429,"column":6},"end":{"line":2429,"column":6}}]},"394":{"line":2467,"type":"if","locations":[{"start":{"line":2467,"column":2},"end":{"line":2467,"column":2}},{"start":{"line":2467,"column":2},"end":{"line":2467,"column":2}}]},"395":{"line":2476,"type":"if","locations":[{"start":{"line":2476,"column":4},"end":{"line":2476,"column":4}},{"start":{"line":2476,"column":4},"end":{"line":2476,"column":4}}]},"396":{"line":2476,"type":"binary-expr","locations":[{"start":{"line":2476,"column":8},"end":{"line":2476,"column":36}},{"start":{"line":2476,"column":40},"end":{"line":2476,"column":62}}]},"397":{"line":2492,"type":"if","locations":[{"start":{"line":2492,"column":2},"end":{"line":2492,"column":2}},{"start":{"line":2492,"column":2},"end":{"line":2492,"column":2}}]},"398":{"line":2492,"type":"binary-expr","locations":[{"start":{"line":2492,"column":6},"end":{"line":2492,"column":10}},{"start":{"line":2492,"column":14},"end":{"line":2492,"column":47}}]},"399":{"line":2496,"type":"if","locations":[{"start":{"line":2496,"column":4},"end":{"line":2496,"column":4}},{"start":{"line":2496,"column":4},"end":{"line":2496,"column":4}}]},"400":{"line":2503,"type":"if","locations":[{"start":{"line":2503,"column":6},"end":{"line":2503,"column":6}},{"start":{"line":2503,"column":6},"end":{"line":2503,"column":6}}]},"401":{"line":2503,"type":"binary-expr","locations":[{"start":{"line":2503,"column":10},"end":{"line":2503,"column":31}},{"start":{"line":2503,"column":35},"end":{"line":2503,"column":59}}]},"402":{"line":2505,"type":"if","locations":[{"start":{"line":2505,"column":8},"end":{"line":2505,"column":8}},{"start":{"line":2505,"column":8},"end":{"line":2505,"column":8}}]},"403":{"line":2507,"type":"if","locations":[{"start":{"line":2507,"column":10},"end":{"line":2507,"column":10}},{"start":{"line":2507,"column":10},"end":{"line":2507,"column":10}}]},"404":{"line":2511,"type":"cond-expr","locations":[{"start":{"line":2511,"column":32},"end":{"line":2511,"column":36}},{"start":{"line":2511,"column":39},"end":{"line":2511,"column":48}}]},"405":{"line":2519,"type":"if","locations":[{"start":{"line":2519,"column":6},"end":{"line":2519,"column":6}},{"start":{"line":2519,"column":6},"end":{"line":2519,"column":6}}]},"406":{"line":2536,"type":"binary-expr","locations":[{"start":{"line":2536,"column":18},"end":{"line":2536,"column":31}},{"start":{"line":2536,"column":35},"end":{"line":2536,"column":53}}]},"407":{"line":2537,"type":"binary-expr","locations":[{"start":{"line":2537,"column":21},"end":{"line":2537,"column":59}},{"start":{"line":2537,"column":63},"end":{"line":2537,"column":65}}]},"408":{"line":2548,"type":"if","locations":[{"start":{"line":2548,"column":2},"end":{"line":2548,"column":2}},{"start":{"line":2548,"column":2},"end":{"line":2548,"column":2}}]},"409":{"line":2548,"type":"binary-expr","locations":[{"start":{"line":2548,"column":6},"end":{"line":2548,"column":41}},{"start":{"line":2549,"column":4},"end":{"line":2549,"column":25}},{"start":{"line":2549,"column":29},"end":{"line":2549,"column":45}}]},"410":{"line":2553,"type":"if","locations":[{"start":{"line":2553,"column":9},"end":{"line":2553,"column":9}},{"start":{"line":2553,"column":9},"end":{"line":2553,"column":9}}]},"411":{"line":2553,"type":"binary-expr","locations":[{"start":{"line":2553,"column":13},"end":{"line":2553,"column":42}},{"start":{"line":2553,"column":46},"end":{"line":2553,"column":62}}]},"412":{"line":2559,"type":"if","locations":[{"start":{"line":2559,"column":2},"end":{"line":2559,"column":2}},{"start":{"line":2559,"column":2},"end":{"line":2559,"column":2}}]},"413":{"line":2569,"type":"if","locations":[{"start":{"line":2569,"column":2},"end":{"line":2569,"column":2}},{"start":{"line":2569,"column":2},"end":{"line":2569,"column":2}}]},"414":{"line":2569,"type":"binary-expr","locations":[{"start":{"line":2569,"column":6},"end":{"line":2569,"column":18}},{"start":{"line":2569,"column":22},"end":{"line":2569,"column":58}}]},"415":{"line":2570,"type":"cond-expr","locations":[{"start":{"line":2570,"column":34},"end":{"line":2570,"column":74}},{"start":{"line":2570,"column":77},"end":{"line":2570,"column":89}}]},"416":{"line":2574,"type":"if","locations":[{"start":{"line":2574,"column":4},"end":{"line":2574,"column":4}},{"start":{"line":2574,"column":4},"end":{"line":2574,"column":4}}]},"417":{"line":2585,"type":"if","locations":[{"start":{"line":2585,"column":2},"end":{"line":2585,"column":2}},{"start":{"line":2585,"column":2},"end":{"line":2585,"column":2}}]},"418":{"line":2585,"type":"binary-expr","locations":[{"start":{"line":2585,"column":6},"end":{"line":2585,"column":35}},{"start":{"line":2585,"column":39},"end":{"line":2585,"column":55}}]},"419":{"line":2599,"type":"if","locations":[{"start":{"line":2599,"column":6},"end":{"line":2599,"column":6}},{"start":{"line":2599,"column":6},"end":{"line":2599,"column":6}}]},"420":{"line":2605,"type":"cond-expr","locations":[{"start":{"line":2605,"column":37},"end":{"line":2605,"column":41}},{"start":{"line":2605,"column":44},"end":{"line":2605,"column":48}}]},"421":{"line":2607,"type":"if","locations":[{"start":{"line":2607,"column":2},"end":{"line":2607,"column":2}},{"start":{"line":2607,"column":2},"end":{"line":2607,"column":2}}]},"422":{"line":2617,"type":"if","locations":[{"start":{"line":2617,"column":2},"end":{"line":2617,"column":2}},{"start":{"line":2617,"column":2},"end":{"line":2617,"column":2}}]},"423":{"line":2617,"type":"binary-expr","locations":[{"start":{"line":2617,"column":6},"end":{"line":2617,"column":35}},{"start":{"line":2617,"column":39},"end":{"line":2617,"column":55}}]},"424":{"line":2624,"type":"if","locations":[{"start":{"line":2624,"column":4},"end":{"line":2624,"column":4}},{"start":{"line":2624,"column":4},"end":{"line":2624,"column":4}}]},"425":{"line":2630,"type":"if","locations":[{"start":{"line":2630,"column":2},"end":{"line":2630,"column":2}},{"start":{"line":2630,"column":2},"end":{"line":2630,"column":2}}]},"426":{"line":2630,"type":"binary-expr","locations":[{"start":{"line":2630,"column":6},"end":{"line":2630,"column":35}},{"start":{"line":2630,"column":39},"end":{"line":2630,"column":55}}]},"427":{"line":2635,"type":"if","locations":[{"start":{"line":2635,"column":2},"end":{"line":2635,"column":2}},{"start":{"line":2635,"column":2},"end":{"line":2635,"column":2}}]},"428":{"line":2640,"type":"binary-expr","locations":[{"start":{"line":2640,"column":12},"end":{"line":2640,"column":19}},{"start":{"line":2640,"column":23},"end":{"line":2640,"column":25}}]},"429":{"line":2650,"type":"if","locations":[{"start":{"line":2650,"column":2},"end":{"line":2650,"column":2}},{"start":{"line":2650,"column":2},"end":{"line":2650,"column":2}}]},"430":{"line":2660,"type":"if","locations":[{"start":{"line":2660,"column":6},"end":{"line":2660,"column":6}},{"start":{"line":2660,"column":6},"end":{"line":2660,"column":6}}]},"431":{"line":2660,"type":"binary-expr","locations":[{"start":{"line":2660,"column":22},"end":{"line":2660,"column":24}},{"start":{"line":2660,"column":28},"end":{"line":2660,"column":35}}]},"432":{"line":2664,"type":"cond-expr","locations":[{"start":{"line":2664,"column":29},"end":{"line":2664,"column":33}},{"start":{"line":2664,"column":36},"end":{"line":2664,"column":61}}]},"433":{"line":2665,"type":"if","locations":[{"start":{"line":2665,"column":6},"end":{"line":2665,"column":6}},{"start":{"line":2665,"column":6},"end":{"line":2665,"column":6}}]},"434":{"line":2665,"type":"binary-expr","locations":[{"start":{"line":2665,"column":10},"end":{"line":2665,"column":13}},{"start":{"line":2665,"column":17},"end":{"line":2665,"column":41}}]},"435":{"line":2678,"type":"if","locations":[{"start":{"line":2678,"column":6},"end":{"line":2678,"column":6}},{"start":{"line":2678,"column":6},"end":{"line":2678,"column":6}}]},"436":{"line":2681,"type":"if","locations":[{"start":{"line":2681,"column":10},"end":{"line":2681,"column":10}},{"start":{"line":2681,"column":10},"end":{"line":2681,"column":10}}]},"437":{"line":2688,"type":"if","locations":[{"start":{"line":2688,"column":10},"end":{"line":2688,"column":10}},{"start":{"line":2688,"column":10},"end":{"line":2688,"column":10}}]},"438":{"line":2689,"type":"binary-expr","locations":[{"start":{"line":2689,"column":61},"end":{"line":2689,"column":70}},{"start":{"line":2689,"column":74},"end":{"line":2689,"column":77}}]},"439":{"line":2693,"type":"if","locations":[{"start":{"line":2693,"column":9},"end":{"line":2693,"column":9}},{"start":{"line":2693,"column":9},"end":{"line":2693,"column":9}}]},"440":{"line":2702,"type":"if","locations":[{"start":{"line":2702,"column":2},"end":{"line":2702,"column":2}},{"start":{"line":2702,"column":2},"end":{"line":2702,"column":2}}]},"441":{"line":2702,"type":"binary-expr","locations":[{"start":{"line":2702,"column":6},"end":{"line":2702,"column":35}},{"start":{"line":2702,"column":39},"end":{"line":2702,"column":55}}]},"442":{"line":2713,"type":"cond-expr","locations":[{"start":{"line":2713,"column":41},"end":{"line":2713,"column":45}},{"start":{"line":2713,"column":48},"end":{"line":2713,"column":67}}]},"443":{"line":2715,"type":"if","locations":[{"start":{"line":2715,"column":2},"end":{"line":2715,"column":2}},{"start":{"line":2715,"column":2},"end":{"line":2715,"column":2}}]},"444":{"line":2719,"type":"binary-expr","locations":[{"start":{"line":2719,"column":15},"end":{"line":2719,"column":22}},{"start":{"line":2719,"column":26},"end":{"line":2719,"column":28}}]},"445":{"line":2723,"type":"if","locations":[{"start":{"line":2723,"column":6},"end":{"line":2723,"column":6}},{"start":{"line":2723,"column":6},"end":{"line":2723,"column":6}}]},"446":{"line":2726,"type":"if","locations":[{"start":{"line":2726,"column":6},"end":{"line":2726,"column":6}},{"start":{"line":2726,"column":6},"end":{"line":2726,"column":6}}]},"447":{"line":2727,"type":"if","locations":[{"start":{"line":2727,"column":6},"end":{"line":2727,"column":6}},{"start":{"line":2727,"column":6},"end":{"line":2727,"column":6}}]},"448":{"line":2730,"type":"if","locations":[{"start":{"line":2730,"column":10},"end":{"line":2730,"column":10}},{"start":{"line":2730,"column":10},"end":{"line":2730,"column":10}}]},"449":{"line":2736,"type":"if","locations":[{"start":{"line":2736,"column":9},"end":{"line":2736,"column":9}},{"start":{"line":2736,"column":9},"end":{"line":2736,"column":9}}]},"450":{"line":2743,"type":"if","locations":[{"start":{"line":2743,"column":2},"end":{"line":2743,"column":2}},{"start":{"line":2743,"column":2},"end":{"line":2743,"column":2}}]},"451":{"line":2743,"type":"binary-expr","locations":[{"start":{"line":2743,"column":6},"end":{"line":2743,"column":35}},{"start":{"line":2743,"column":39},"end":{"line":2743,"column":55}}]},"452":{"line":2747,"type":"if","locations":[{"start":{"line":2747,"column":9},"end":{"line":2747,"column":9}},{"start":{"line":2747,"column":9},"end":{"line":2747,"column":9}}]},"453":{"line":2747,"type":"binary-expr","locations":[{"start":{"line":2747,"column":13},"end":{"line":2747,"column":40}},{"start":{"line":2748,"column":4},"end":{"line":2748,"column":25}},{"start":{"line":2748,"column":29},"end":{"line":2748,"column":45}}]},"454":{"line":2758,"type":"if","locations":[{"start":{"line":2758,"column":2},"end":{"line":2758,"column":2}},{"start":{"line":2758,"column":2},"end":{"line":2758,"column":2}}]},"455":{"line":2758,"type":"binary-expr","locations":[{"start":{"line":2758,"column":6},"end":{"line":2758,"column":11}},{"start":{"line":2758,"column":15},"end":{"line":2758,"column":44}}]},"456":{"line":2761,"type":"cond-expr","locations":[{"start":{"line":2761,"column":34},"end":{"line":2761,"column":61}},{"start":{"line":2761,"column":64},"end":{"line":2761,"column":76}}]},"457":{"line":2766,"type":"if","locations":[{"start":{"line":2766,"column":2},"end":{"line":2766,"column":2}},{"start":{"line":2766,"column":2},"end":{"line":2766,"column":2}}]},"458":{"line":2787,"type":"cond-expr","locations":[{"start":{"line":2787,"column":37},"end":{"line":2787,"column":41}},{"start":{"line":2787,"column":44},"end":{"line":2787,"column":48}}]},"459":{"line":2789,"type":"if","locations":[{"start":{"line":2789,"column":2},"end":{"line":2789,"column":2}},{"start":{"line":2789,"column":2},"end":{"line":2789,"column":2}}]},"460":{"line":2804,"type":"if","locations":[{"start":{"line":2804,"column":2},"end":{"line":2804,"column":2}},{"start":{"line":2804,"column":2},"end":{"line":2804,"column":2}}]},"461":{"line":2804,"type":"binary-expr","locations":[{"start":{"line":2804,"column":6},"end":{"line":2804,"column":35}},{"start":{"line":2804,"column":39},"end":{"line":2804,"column":55}}]},"462":{"line":2810,"type":"if","locations":[{"start":{"line":2810,"column":2},"end":{"line":2810,"column":2}},{"start":{"line":2810,"column":2},"end":{"line":2810,"column":2}}]},"463":{"line":2810,"type":"binary-expr","locations":[{"start":{"line":2810,"column":6},"end":{"line":2810,"column":43}},{"start":{"line":2810,"column":47},"end":{"line":2810,"column":50}}]},"464":{"line":2814,"type":"binary-expr","locations":[{"start":{"line":2814,"column":20},"end":{"line":2814,"column":35}},{"start":{"line":2814,"column":39},"end":{"line":2814,"column":41}}]},"465":{"line":2815,"type":"binary-expr","locations":[{"start":{"line":2815,"column":7},"end":{"line":2815,"column":9}},{"start":{"line":2815,"column":13},"end":{"line":2815,"column":42}}]},"466":{"line":2822,"type":"if","locations":[{"start":{"line":2822,"column":4},"end":{"line":2822,"column":4}},{"start":{"line":2822,"column":4},"end":{"line":2822,"column":4}}]},"467":{"line":2825,"type":"cond-expr","locations":[{"start":{"line":2825,"column":28},"end":{"line":2825,"column":32}},{"start":{"line":2825,"column":35},"end":{"line":2825,"column":39}}]},"468":{"line":2830,"type":"cond-expr","locations":[{"start":{"line":2830,"column":30},"end":{"line":2830,"column":34}},{"start":{"line":2830,"column":37},"end":{"line":2830,"column":41}}]},"469":{"line":2835,"type":"if","locations":[{"start":{"line":2835,"column":2},"end":{"line":2835,"column":2}},{"start":{"line":2835,"column":2},"end":{"line":2835,"column":2}}]},"470":{"line":2837,"type":"if","locations":[{"start":{"line":2837,"column":6},"end":{"line":2837,"column":6}},{"start":{"line":2837,"column":6},"end":{"line":2837,"column":6}}]},"471":{"line":2841,"type":"cond-expr","locations":[{"start":{"line":2841,"column":33},"end":{"line":2841,"column":37}},{"start":{"line":2841,"column":40},"end":{"line":2841,"column":65}}]},"472":{"line":2842,"type":"if","locations":[{"start":{"line":2842,"column":4},"end":{"line":2842,"column":4}},{"start":{"line":2842,"column":4},"end":{"line":2842,"column":4}}]},"473":{"line":2850,"type":"binary-expr","locations":[{"start":{"line":2850,"column":17},"end":{"line":2850,"column":24}},{"start":{"line":2850,"column":28},"end":{"line":2850,"column":30}}]},"474":{"line":2854,"type":"if","locations":[{"start":{"line":2854,"column":8},"end":{"line":2854,"column":8}},{"start":{"line":2854,"column":8},"end":{"line":2854,"column":8}}]},"475":{"line":2856,"type":"if","locations":[{"start":{"line":2856,"column":10},"end":{"line":2856,"column":10}},{"start":{"line":2856,"column":10},"end":{"line":2856,"column":10}}]},"476":{"line":2858,"type":"cond-expr","locations":[{"start":{"line":2858,"column":26},"end":{"line":2858,"column":30}},{"start":{"line":2858,"column":33},"end":{"line":2858,"column":37}}]},"477":{"line":2876,"type":"binary-expr","locations":[{"start":{"line":2876,"column":15},"end":{"line":2876,"column":21}},{"start":{"line":2876,"column":25},"end":{"line":2876,"column":36}}]},"478":{"line":2880,"type":"binary-expr","locations":[{"start":{"line":2880,"column":20},"end":{"line":2880,"column":35}},{"start":{"line":2880,"column":39},"end":{"line":2880,"column":41}}]},"479":{"line":2882,"type":"binary-expr","locations":[{"start":{"line":2882,"column":18},"end":{"line":2882,"column":25}},{"start":{"line":2882,"column":29},"end":{"line":2882,"column":62}}]},"480":{"line":2883,"type":"binary-expr","locations":[{"start":{"line":2883,"column":13},"end":{"line":2883,"column":21}},{"start":{"line":2883,"column":25},"end":{"line":2883,"column":36}}]},"481":{"line":2885,"type":"if","locations":[{"start":{"line":2885,"column":2},"end":{"line":2885,"column":2}},{"start":{"line":2885,"column":2},"end":{"line":2885,"column":2}}]},"482":{"line":2885,"type":"binary-expr","locations":[{"start":{"line":2885,"column":6},"end":{"line":2885,"column":14}},{"start":{"line":2885,"column":18},"end":{"line":2885,"column":35}}]},"483":{"line":2887,"type":"cond-expr","locations":[{"start":{"line":2887,"column":42},"end":{"line":2887,"column":47}},{"start":{"line":2887,"column":50},"end":{"line":2887,"column":51}}]},"484":{"line":2889,"type":"if","locations":[{"start":{"line":2889,"column":4},"end":{"line":2889,"column":4}},{"start":{"line":2889,"column":4},"end":{"line":2889,"column":4}}]},"485":{"line":2894,"type":"if","locations":[{"start":{"line":2894,"column":9},"end":{"line":2894,"column":9}},{"start":{"line":2894,"column":9},"end":{"line":2894,"column":9}}]},"486":{"line":2894,"type":"binary-expr","locations":[{"start":{"line":2894,"column":13},"end":{"line":2894,"column":21}},{"start":{"line":2894,"column":25},"end":{"line":2894,"column":67}}]},"487":{"line":2903,"type":"if","locations":[{"start":{"line":2903,"column":2},"end":{"line":2903,"column":2}},{"start":{"line":2903,"column":2},"end":{"line":2903,"column":2}}]},"488":{"line":2919,"type":"if","locations":[{"start":{"line":2919,"column":2},"end":{"line":2919,"column":2}},{"start":{"line":2919,"column":2},"end":{"line":2919,"column":2}}]},"489":{"line":2919,"type":"binary-expr","locations":[{"start":{"line":2919,"column":6},"end":{"line":2919,"column":35}},{"start":{"line":2919,"column":39},"end":{"line":2919,"column":55}}]},"490":{"line":2923,"type":"if","locations":[{"start":{"line":2923,"column":9},"end":{"line":2923,"column":9}},{"start":{"line":2923,"column":9},"end":{"line":2923,"column":9}}]},"491":{"line":2923,"type":"binary-expr","locations":[{"start":{"line":2923,"column":13},"end":{"line":2923,"column":39}},{"start":{"line":2924,"column":4},"end":{"line":2924,"column":25}},{"start":{"line":2924,"column":29},"end":{"line":2924,"column":45}}]},"492":{"line":2929,"type":"binary-expr","locations":[{"start":{"line":2929,"column":7},"end":{"line":2929,"column":9}},{"start":{"line":2929,"column":13},"end":{"line":2929,"column":42}}]},"493":{"line":2937,"type":"binary-expr","locations":[{"start":{"line":2937,"column":18},"end":{"line":2937,"column":35}},{"start":{"line":2937,"column":39},"end":{"line":2937,"column":75}}]},"494":{"line":2939,"type":"if","locations":[{"start":{"line":2939,"column":2},"end":{"line":2939,"column":2}},{"start":{"line":2939,"column":2},"end":{"line":2939,"column":2}}]},"495":{"line":2940,"type":"binary-expr","locations":[{"start":{"line":2940,"column":20},"end":{"line":2940,"column":61}},{"start":{"line":2940,"column":65},"end":{"line":2940,"column":73}}]},"496":{"line":2944,"type":"binary-expr","locations":[{"start":{"line":2944,"column":12},"end":{"line":2944,"column":49}},{"start":{"line":2944,"column":53},"end":{"line":2944,"column":57}}]},"497":{"line":2948,"type":"cond-expr","locations":[{"start":{"line":2948,"column":55},"end":{"line":2948,"column":66}},{"start":{"line":2948,"column":69},"end":{"line":2948,"column":75}}]},"498":{"line":2955,"type":"if","locations":[{"start":{"line":2955,"column":4},"end":{"line":2955,"column":4}},{"start":{"line":2955,"column":4},"end":{"line":2955,"column":4}}]},"499":{"line":2956,"type":"binary-expr","locations":[{"start":{"line":2956,"column":28},"end":{"line":2956,"column":32}},{"start":{"line":2956,"column":36},"end":{"line":2956,"column":38}}]},"500":{"line":2959,"type":"cond-expr","locations":[{"start":{"line":2959,"column":22},"end":{"line":2959,"column":26}},{"start":{"line":2959,"column":29},"end":{"line":2959,"column":33}}]},"501":{"line":2973,"type":"if","locations":[{"start":{"line":2973,"column":2},"end":{"line":2973,"column":2}},{"start":{"line":2973,"column":2},"end":{"line":2973,"column":2}}]},"502":{"line":2973,"type":"binary-expr","locations":[{"start":{"line":2973,"column":6},"end":{"line":2973,"column":35}},{"start":{"line":2973,"column":39},"end":{"line":2973,"column":55}}]},"503":{"line":2984,"type":"binary-expr","locations":[{"start":{"line":2984,"column":18},"end":{"line":2984,"column":35}},{"start":{"line":2984,"column":39},"end":{"line":2984,"column":75}}]},"504":{"line":2986,"type":"if","locations":[{"start":{"line":2986,"column":2},"end":{"line":2986,"column":2}},{"start":{"line":2986,"column":2},"end":{"line":2986,"column":2}}]},"505":{"line":2987,"type":"binary-expr","locations":[{"start":{"line":2987,"column":20},"end":{"line":2987,"column":61}},{"start":{"line":2987,"column":65},"end":{"line":2987,"column":73}}]},"506":{"line":2991,"type":"binary-expr","locations":[{"start":{"line":2991,"column":12},"end":{"line":2991,"column":49}},{"start":{"line":2991,"column":53},"end":{"line":2991,"column":57}}]},"507":{"line":2995,"type":"cond-expr","locations":[{"start":{"line":2995,"column":55},"end":{"line":2995,"column":66}},{"start":{"line":2995,"column":69},"end":{"line":2995,"column":75}}]},"508":{"line":3001,"type":"binary-expr","locations":[{"start":{"line":3001,"column":7},"end":{"line":3001,"column":9}},{"start":{"line":3001,"column":13},"end":{"line":3001,"column":42}}]},"509":{"line":3004,"type":"if","locations":[{"start":{"line":3004,"column":4},"end":{"line":3004,"column":4}},{"start":{"line":3004,"column":4},"end":{"line":3004,"column":4}}]},"510":{"line":3018,"type":"binary-expr","locations":[{"start":{"line":3018,"column":11},"end":{"line":3018,"column":17}},{"start":{"line":3018,"column":21},"end":{"line":3018,"column":23}}]},"511":{"line":3022,"type":"binary-expr","locations":[{"start":{"line":3022,"column":21},"end":{"line":3022,"column":30}},{"start":{"line":3022,"column":34},"end":{"line":3022,"column":77}}]},"512":{"line":3023,"type":"binary-expr","locations":[{"start":{"line":3023,"column":11},"end":{"line":3023,"column":28}},{"start":{"line":3023,"column":32},"end":{"line":3023,"column":78}}]},"513":{"line":3024,"type":"binary-expr","locations":[{"start":{"line":3024,"column":15},"end":{"line":3024,"column":59}},{"start":{"line":3024,"column":63},"end":{"line":3024,"column":67}}]},"514":{"line":3045,"type":"binary-expr","locations":[{"start":{"line":3045,"column":14},"end":{"line":3045,"column":22}},{"start":{"line":3045,"column":26},"end":{"line":3045,"column":28}}]},"515":{"line":3049,"type":"if","locations":[{"start":{"line":3049,"column":4},"end":{"line":3049,"column":4}},{"start":{"line":3049,"column":4},"end":{"line":3049,"column":4}}]},"516":{"line":3091,"type":"if","locations":[{"start":{"line":3091,"column":4},"end":{"line":3091,"column":4}},{"start":{"line":3091,"column":4},"end":{"line":3091,"column":4}}]},"517":{"line":3091,"type":"binary-expr","locations":[{"start":{"line":3091,"column":8},"end":{"line":3091,"column":36}},{"start":{"line":3091,"column":40},"end":{"line":3091,"column":62}}]},"518":{"line":3116,"type":"if","locations":[{"start":{"line":3116,"column":2},"end":{"line":3116,"column":2}},{"start":{"line":3116,"column":2},"end":{"line":3116,"column":2}}]},"519":{"line":3116,"type":"binary-expr","locations":[{"start":{"line":3116,"column":6},"end":{"line":3116,"column":41}},{"start":{"line":3117,"column":4},"end":{"line":3117,"column":25}},{"start":{"line":3117,"column":29},"end":{"line":3117,"column":45}}]},"520":{"line":3121,"type":"if","locations":[{"start":{"line":3121,"column":9},"end":{"line":3121,"column":9}},{"start":{"line":3121,"column":9},"end":{"line":3121,"column":9}}]},"521":{"line":3121,"type":"binary-expr","locations":[{"start":{"line":3121,"column":13},"end":{"line":3121,"column":42}},{"start":{"line":3121,"column":46},"end":{"line":3121,"column":62}}]},"522":{"line":3125,"type":"if","locations":[{"start":{"line":3125,"column":4},"end":{"line":3125,"column":4}},{"start":{"line":3125,"column":4},"end":{"line":3125,"column":4}}]},"523":{"line":3132,"type":"binary-expr","locations":[{"start":{"line":3132,"column":15},"end":{"line":3132,"column":28}},{"start":{"line":3132,"column":32},"end":{"line":3132,"column":34}}]},"524":{"line":3134,"type":"binary-expr","locations":[{"start":{"line":3134,"column":12},"end":{"line":3134,"column":20}},{"start":{"line":3134,"column":24},"end":{"line":3134,"column":26}}]},"525":{"line":3143,"type":"if","locations":[{"start":{"line":3143,"column":2},"end":{"line":3143,"column":2}},{"start":{"line":3143,"column":2},"end":{"line":3143,"column":2}}]},"526":{"line":3143,"type":"binary-expr","locations":[{"start":{"line":3143,"column":6},"end":{"line":3143,"column":35}},{"start":{"line":3143,"column":39},"end":{"line":3143,"column":55}}]},"527":{"line":3156,"type":"if","locations":[{"start":{"line":3156,"column":2},"end":{"line":3156,"column":2}},{"start":{"line":3156,"column":2},"end":{"line":3156,"column":2}}]},"528":{"line":3160,"type":"binary-expr","locations":[{"start":{"line":3160,"column":12},"end":{"line":3160,"column":29}},{"start":{"line":3160,"column":33},"end":{"line":3160,"column":35}}]},"529":{"line":3166,"type":"binary-expr","locations":[{"start":{"line":3166,"column":7},"end":{"line":3166,"column":9}},{"start":{"line":3166,"column":13},"end":{"line":3166,"column":42}}]},"530":{"line":3169,"type":"if","locations":[{"start":{"line":3169,"column":4},"end":{"line":3169,"column":4}},{"start":{"line":3169,"column":4},"end":{"line":3169,"column":4}}]},"531":{"line":3174,"type":"if","locations":[{"start":{"line":3174,"column":4},"end":{"line":3174,"column":4}},{"start":{"line":3174,"column":4},"end":{"line":3174,"column":4}}]},"532":{"line":3181,"type":"if","locations":[{"start":{"line":3181,"column":4},"end":{"line":3181,"column":4}},{"start":{"line":3181,"column":4},"end":{"line":3181,"column":4}}]},"533":{"line":3195,"type":"if","locations":[{"start":{"line":3195,"column":2},"end":{"line":3195,"column":2}},{"start":{"line":3195,"column":2},"end":{"line":3195,"column":2}}]},"534":{"line":3195,"type":"binary-expr","locations":[{"start":{"line":3195,"column":6},"end":{"line":3195,"column":35}},{"start":{"line":3195,"column":39},"end":{"line":3195,"column":55}}]},"535":{"line":3201,"type":"binary-expr","locations":[{"start":{"line":3201,"column":12},"end":{"line":3201,"column":34}},{"start":{"line":3201,"column":38},"end":{"line":3201,"column":40}}]},"536":{"line":3203,"type":"binary-expr","locations":[{"start":{"line":3203,"column":7},"end":{"line":3203,"column":9}},{"start":{"line":3203,"column":13},"end":{"line":3203,"column":42}}]},"537":{"line":3209,"type":"if","locations":[{"start":{"line":3209,"column":2},"end":{"line":3209,"column":2}},{"start":{"line":3209,"column":2},"end":{"line":3209,"column":2}}]},"538":{"line":3209,"type":"binary-expr","locations":[{"start":{"line":3209,"column":6},"end":{"line":3209,"column":35}},{"start":{"line":3209,"column":39},"end":{"line":3209,"column":55}}]},"539":{"line":3213,"type":"if","locations":[{"start":{"line":3213,"column":9},"end":{"line":3213,"column":9}},{"start":{"line":3213,"column":9},"end":{"line":3213,"column":9}}]},"540":{"line":3213,"type":"binary-expr","locations":[{"start":{"line":3213,"column":13},"end":{"line":3213,"column":39}},{"start":{"line":3214,"column":4},"end":{"line":3214,"column":25}},{"start":{"line":3214,"column":29},"end":{"line":3214,"column":45}}]},"541":{"line":3219,"type":"binary-expr","locations":[{"start":{"line":3219,"column":7},"end":{"line":3219,"column":9}},{"start":{"line":3219,"column":13},"end":{"line":3219,"column":42}}]},"542":{"line":3222,"type":"if","locations":[{"start":{"line":3222,"column":4},"end":{"line":3222,"column":4}},{"start":{"line":3222,"column":4},"end":{"line":3222,"column":4}}]},"543":{"line":3229,"type":"if","locations":[{"start":{"line":3229,"column":2},"end":{"line":3229,"column":2}},{"start":{"line":3229,"column":2},"end":{"line":3229,"column":2}}]},"544":{"line":3229,"type":"binary-expr","locations":[{"start":{"line":3229,"column":6},"end":{"line":3229,"column":35}},{"start":{"line":3229,"column":39},"end":{"line":3229,"column":55}}]},"545":{"line":3235,"type":"binary-expr","locations":[{"start":{"line":3235,"column":7},"end":{"line":3235,"column":9}},{"start":{"line":3235,"column":13},"end":{"line":3235,"column":42}}]},"546":{"line":3237,"type":"if","locations":[{"start":{"line":3237,"column":4},"end":{"line":3237,"column":4}},{"start":{"line":3237,"column":4},"end":{"line":3237,"column":4}}]},"547":{"line":3246,"type":"if","locations":[{"start":{"line":3246,"column":2},"end":{"line":3246,"column":2}},{"start":{"line":3246,"column":2},"end":{"line":3246,"column":2}}]},"548":{"line":3246,"type":"binary-expr","locations":[{"start":{"line":3246,"column":6},"end":{"line":3246,"column":35}},{"start":{"line":3246,"column":39},"end":{"line":3246,"column":55}}]},"549":{"line":3252,"type":"binary-expr","locations":[{"start":{"line":3252,"column":12},"end":{"line":3252,"column":34}},{"start":{"line":3252,"column":38},"end":{"line":3252,"column":40}}]},"550":{"line":3253,"type":"binary-expr","locations":[{"start":{"line":3253,"column":7},"end":{"line":3253,"column":9}},{"start":{"line":3253,"column":13},"end":{"line":3253,"column":42}}]},"551":{"line":3259,"type":"if","locations":[{"start":{"line":3259,"column":2},"end":{"line":3259,"column":2}},{"start":{"line":3259,"column":2},"end":{"line":3259,"column":2}}]},"552":{"line":3259,"type":"binary-expr","locations":[{"start":{"line":3259,"column":6},"end":{"line":3259,"column":35}},{"start":{"line":3259,"column":39},"end":{"line":3259,"column":55}}]},"553":{"line":3272,"type":"if","locations":[{"start":{"line":3272,"column":2},"end":{"line":3272,"column":2}},{"start":{"line":3272,"column":2},"end":{"line":3272,"column":2}}]},"554":{"line":3272,"type":"binary-expr","locations":[{"start":{"line":3272,"column":6},"end":{"line":3272,"column":43}},{"start":{"line":3272,"column":47},"end":{"line":3272,"column":50}}]},"555":{"line":3276,"type":"binary-expr","locations":[{"start":{"line":3276,"column":20},"end":{"line":3276,"column":35}},{"start":{"line":3276,"column":39},"end":{"line":3276,"column":41}}]},"556":{"line":3277,"type":"binary-expr","locations":[{"start":{"line":3277,"column":7},"end":{"line":3277,"column":9}},{"start":{"line":3277,"column":13},"end":{"line":3277,"column":42}}]},"557":{"line":3279,"type":"binary-expr","locations":[{"start":{"line":3279,"column":12},"end":{"line":3279,"column":29}},{"start":{"line":3279,"column":33},"end":{"line":3279,"column":35}}]},"558":{"line":3284,"type":"if","locations":[{"start":{"line":3284,"column":4},"end":{"line":3284,"column":4}},{"start":{"line":3284,"column":4},"end":{"line":3284,"column":4}}]},"559":{"line":3288,"type":"if","locations":[{"start":{"line":3288,"column":4},"end":{"line":3288,"column":4}},{"start":{"line":3288,"column":4},"end":{"line":3288,"column":4}}]},"560":{"line":3292,"type":"if","locations":[{"start":{"line":3292,"column":4},"end":{"line":3292,"column":4}},{"start":{"line":3292,"column":4},"end":{"line":3292,"column":4}}]},"561":{"line":3308,"type":"binary-expr","locations":[{"start":{"line":3308,"column":20},"end":{"line":3308,"column":35}},{"start":{"line":3308,"column":39},"end":{"line":3308,"column":41}}]},"562":{"line":3320,"type":"if","locations":[{"start":{"line":3320,"column":2},"end":{"line":3320,"column":2}},{"start":{"line":3320,"column":2},"end":{"line":3320,"column":2}}]},"563":{"line":3320,"type":"binary-expr","locations":[{"start":{"line":3320,"column":6},"end":{"line":3320,"column":35}},{"start":{"line":3320,"column":39},"end":{"line":3320,"column":55}}]},"564":{"line":3336,"type":"if","locations":[{"start":{"line":3336,"column":4},"end":{"line":3336,"column":4}},{"start":{"line":3336,"column":4},"end":{"line":3336,"column":4}}]},"565":{"line":3340,"type":"binary-expr","locations":[{"start":{"line":3340,"column":14},"end":{"line":3340,"column":31}},{"start":{"line":3340,"column":35},"end":{"line":3340,"column":37}}]},"566":{"line":3342,"type":"if","locations":[{"start":{"line":3342,"column":4},"end":{"line":3342,"column":4}},{"start":{"line":3342,"column":4},"end":{"line":3342,"column":4}}]},"567":{"line":3349,"type":"cond-expr","locations":[{"start":{"line":3349,"column":22},"end":{"line":3349,"column":26}},{"start":{"line":3349,"column":29},"end":{"line":3349,"column":33}}]},"568":{"line":3353,"type":"binary-expr","locations":[{"start":{"line":3353,"column":7},"end":{"line":3353,"column":9}},{"start":{"line":3353,"column":13},"end":{"line":3353,"column":42}}]},"569":{"line":3355,"type":"if","locations":[{"start":{"line":3355,"column":2},"end":{"line":3355,"column":2}},{"start":{"line":3355,"column":2},"end":{"line":3355,"column":2}}]},"570":{"line":3364,"type":"if","locations":[{"start":{"line":3364,"column":6},"end":{"line":3364,"column":6}},{"start":{"line":3364,"column":6},"end":{"line":3364,"column":6}}]},"571":{"line":3364,"type":"binary-expr","locations":[{"start":{"line":3364,"column":10},"end":{"line":3364,"column":13}},{"start":{"line":3364,"column":17},"end":{"line":3364,"column":22}}]},"572":{"line":3376,"type":"if","locations":[{"start":{"line":3376,"column":2},"end":{"line":3376,"column":2}},{"start":{"line":3376,"column":2},"end":{"line":3376,"column":2}}]},"573":{"line":3376,"type":"binary-expr","locations":[{"start":{"line":3376,"column":6},"end":{"line":3376,"column":35}},{"start":{"line":3376,"column":39},"end":{"line":3376,"column":55}}]},"574":{"line":3387,"type":"binary-expr","locations":[{"start":{"line":3387,"column":12},"end":{"line":3387,"column":29}},{"start":{"line":3387,"column":33},"end":{"line":3387,"column":35}}]},"575":{"line":3389,"type":"cond-expr","locations":[{"start":{"line":3389,"column":52},"end":{"line":3389,"column":62}},{"start":{"line":3389,"column":65},"end":{"line":3389,"column":71}}]},"576":{"line":3391,"type":"binary-expr","locations":[{"start":{"line":3391,"column":7},"end":{"line":3391,"column":9}},{"start":{"line":3391,"column":13},"end":{"line":3391,"column":42}}]},"577":{"line":3394,"type":"if","locations":[{"start":{"line":3394,"column":2},"end":{"line":3394,"column":2}},{"start":{"line":3394,"column":2},"end":{"line":3394,"column":2}}]},"578":{"line":3397,"type":"binary-expr","locations":[{"start":{"line":3397,"column":14},"end":{"line":3397,"column":22}},{"start":{"line":3397,"column":26},"end":{"line":3397,"column":28}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","/*!"," * Dependencies"," */","var assert = require('assert');","var util = require('util');","var async = require('async');","var utils = require('./utils');","var i8n = require('inflection');","var defineScope = require('./scope.js').defineScope;","var g = require('strong-globalize')();","var mergeQuery = utils.mergeQuery;","var idEquals = utils.idEquals;","var ModelBaseClass = require('./model.js');","var applyFilter = require('./connectors/memory').applyFilter;","var ValidationError = require('./validations.js').ValidationError;","var debug = require('debug')('loopback:relations');","","var RelationTypes = {","  belongsTo: 'belongsTo',","  hasMany: 'hasMany',","  hasOne: 'hasOne',","  hasAndBelongsToMany: 'hasAndBelongsToMany',","  referencesMany: 'referencesMany',","  embedsOne: 'embedsOne',","  embedsMany: 'embedsMany',","};","","var RelationClasses = {","  belongsTo: BelongsTo,","  hasMany: HasMany,","  hasManyThrough: HasManyThrough,","  hasOne: HasOne,","  hasAndBelongsToMany: HasAndBelongsToMany,","  referencesMany: ReferencesMany,","  embedsOne: EmbedsOne,","  embedsMany: EmbedsMany,","};","","exports.Relation = Relation;","exports.RelationDefinition = RelationDefinition;","","exports.RelationTypes = RelationTypes;","exports.RelationClasses = RelationClasses;","","exports.HasMany = HasMany;","exports.HasManyThrough = HasManyThrough;","exports.HasOne = HasOne;","exports.HasAndBelongsToMany = HasAndBelongsToMany;","exports.BelongsTo = BelongsTo;","exports.ReferencesMany = ReferencesMany;","exports.EmbedsOne = EmbedsOne;","exports.EmbedsMany = EmbedsMany;","","function normalizeType(type) {","  if (!type) {","    return type;","  }","  var t1 = type.toLowerCase();","  for (var t2 in RelationTypes) {","    if (t2.toLowerCase() === t1) {","      return t2;","    }","  }","  return null;","};","","function extendScopeMethods(definition, scopeMethods, ext) {","  var customMethods = [];","  var relationClass = RelationClasses[definition.type];","  if (definition.type === RelationTypes.hasMany && definition.modelThrough) {","    relationClass = RelationClasses.hasManyThrough;","  }","  if (typeof ext === 'function') {","    customMethods = ext.call(definition, scopeMethods, relationClass);","  } else if (typeof ext === 'object') {","    function createFunc(definition, relationMethod) {","      return function() {","        var relation = new relationClass(definition, this);","        return relationMethod.apply(relation, arguments);","      };","    };","    for (var key in ext) {","      var relationMethod = ext[key];","      var method = scopeMethods[key] = createFunc(definition, relationMethod);","      if (relationMethod.shared) {","        sharedMethod(definition, key, method, relationMethod);","      }","      customMethods.push(key);","    }","  }","  return [].concat(customMethods || []);","};","","function bindRelationMethods(relation, relationMethod, definition) {","  var methods = definition.methods || {};","  Object.keys(methods).forEach(function(m) {","    if (typeof methods[m] !== 'function') return;","    relationMethod[m] = methods[m].bind(relation);","  });","};","","/**"," * Relation definition class.  Use to define relationships between models."," * @param {Object} definition"," * @class RelationDefinition"," */","function RelationDefinition(definition) {","  if (!(this instanceof RelationDefinition)) {","    return new RelationDefinition(definition);","  }","  definition = definition || {};","  this.name = definition.name;","  assert(this.name, 'Relation name is missing');","  this.type = normalizeType(definition.type);","  assert(this.type, 'Invalid relation type: ' + definition.type);","  this.modelFrom = definition.modelFrom;","  assert(this.modelFrom, 'Source model is required');","  this.keyFrom = definition.keyFrom;","  this.modelTo = definition.modelTo;","  this.keyTo = definition.keyTo;","  this.polymorphic = definition.polymorphic;","  if (typeof this.polymorphic !== 'object') {","    assert(this.modelTo, 'Target model is required');","  }","  this.modelThrough = definition.modelThrough;","  this.keyThrough = definition.keyThrough;","  this.multiple = definition.multiple;","  this.properties = definition.properties || {};","  this.options = definition.options || {};","  this.scope = definition.scope;","  this.embed = definition.embed === true;","  this.methods = definition.methods || {};","}","","RelationDefinition.prototype.toJSON = function() {","  var polymorphic = typeof this.polymorphic === 'object';","","  var modelToName = this.modelTo && this.modelTo.modelName;","  if (!modelToName && polymorphic && this.type === 'belongsTo') {","    modelToName = '<polymorphic>';","  }","","  var json = {","    name: this.name,","    type: this.type,","    modelFrom: this.modelFrom.modelName,","    keyFrom: this.keyFrom,","    modelTo: modelToName,","    keyTo: this.keyTo,","    multiple: this.multiple,","  };","  if (this.modelThrough) {","    json.modelThrough = this.modelThrough.modelName;","    json.keyThrough = this.keyThrough;","  }","  if (polymorphic) {","    json.polymorphic = this.polymorphic;","  }","  return json;","};","","/**"," * Define a relation scope method"," * @param {String} name of the method"," * @param {Function} function to define"," */","RelationDefinition.prototype.defineMethod = function(name, fn) {","  var relationClass = RelationClasses[this.type];","  var relationName = this.name;","  var modelFrom = this.modelFrom;","  var definition = this;","  var method;","  if (definition.multiple) {","    var scope = this.modelFrom.scopes[this.name];","    if (!scope) throw new Error(g.f('Unknown relation {{scope}}: %s', this.name));","    method = scope.defineMethod(name, function() {","      var relation = new relationClass(definition, this);","      return fn.apply(relation, arguments);","    });","  } else {","    definition.methods[name] = fn;","    method = function() {","      var rel = this[relationName];","      return rel[name].apply(rel, arguments);","    };","  }","  if (method && fn.shared) {","    sharedMethod(definition, name, method, fn);","    modelFrom.prototype['__' + name + '__' + relationName] = method;","  }","  return method;","};","","/**"," * Apply the configured scope to the filter/query object."," * @param {Object} modelInstance"," * @param {Object} filter (where, order, limit, fields, ...)"," */","RelationDefinition.prototype.applyScope = function(modelInstance, filter) {","  filter = filter || {};","  filter.where = filter.where || {};","  if ((this.type !== 'belongsTo' || this.type === 'hasOne') &&","      typeof this.polymorphic === 'object') { // polymorphic","    var discriminator = this.polymorphic.discriminator;","    if (this.polymorphic.invert) {","      filter.where[discriminator] = this.modelTo.modelName;","    } else {","      filter.where[discriminator] = this.modelFrom.modelName;","    }","  }","  var scope;","  if (typeof this.scope === 'function') {","    scope = this.scope.call(this, modelInstance, filter);","  } else {","    scope = this.scope;","  }","  if (typeof scope === 'object') {","    mergeQuery(filter, scope);","  }","};","","/**"," * Apply the configured properties to the target object."," * @param {Object} modelInstance"," * @param {Object} target"," */","RelationDefinition.prototype.applyProperties = function(modelInstance, obj) {","  var source = modelInstance, target = obj;","  if (this.options.invertProperties) {","    source = obj;","    target = modelInstance;","  }","  if (this.options.embedsProperties) {","    target = target.__data[this.name] = {};","    target[this.keyTo] = source[this.keyTo];","  }","  var k, key;","  if (typeof this.properties === 'function') {","    var data = this.properties.call(this, source, target);","    for (k in data) {","      target[k] = data[k];","    }","  } else if (Array.isArray(this.properties)) {","    for (k = 0; k < this.properties.length; k++) {","      key = this.properties[k];","      target[key] = source[key];","    }","  } else if (typeof this.properties === 'object') {","    for (k in this.properties) {","      key = this.properties[k];","      target[key] = source[k];","    }","  }","  if ((this.type !== 'belongsTo' || this.type === 'hasOne') &&","      typeof this.polymorphic === 'object') { // polymorphic","    var discriminator = this.polymorphic.discriminator;","    if (this.polymorphic.invert) {","      target[discriminator] = this.modelTo.modelName;","    } else {","      target[discriminator] = this.modelFrom.modelName;","    }","  }","};","","/**"," * A relation attaching to a given model instance"," * @param {RelationDefinition|Object} definition"," * @param {Object} modelInstance"," * @returns {Relation}"," * @constructor"," * @class Relation"," */","function Relation(definition, modelInstance) {","  if (!(this instanceof Relation)) {","    return new Relation(definition, modelInstance);","  }","  if (!(definition instanceof RelationDefinition)) {","    definition = new RelationDefinition(definition);","  }","  this.definition = definition;","  this.modelInstance = modelInstance;","}","","Relation.prototype.resetCache = function(cache) {","  cache = cache || undefined;","  this.modelInstance.__cachedRelations[this.definition.name] = cache;","};","","Relation.prototype.getCache = function() {","  return this.modelInstance.__cachedRelations[this.definition.name];","};","","Relation.prototype.callScopeMethod = function(methodName) {","  var args = Array.prototype.slice.call(arguments, 1);","  var modelInstance = this.modelInstance;","  var rel = modelInstance[this.definition.name];","  if (rel && typeof rel[methodName] === 'function') {","    return rel[methodName].apply(rel, args);","  } else {","    throw new Error(g.f('Unknown scope method: %s', methodName));","  }","};","","/**"," * Fetch the related model(s) - this is a helper method to unify access."," * @param (Boolean|Object} condOrRefresh refresh or conditions object"," * @param {Object} [options] Options"," * @param {Function} cb callback"," */","Relation.prototype.fetch = function(condOrRefresh, options, cb) {","  this.modelInstance[this.definition.name].apply(this.modelInstance, arguments);","};","","/**"," * HasMany subclass"," * @param {RelationDefinition|Object} definition"," * @param {Object} modelInstance"," * @returns {HasMany}"," * @constructor"," * @class HasMany"," */","function HasMany(definition, modelInstance) {","  if (!(this instanceof HasMany)) {","    return new HasMany(definition, modelInstance);","  }","  assert(definition.type === RelationTypes.hasMany);","  Relation.apply(this, arguments);","}","","util.inherits(HasMany, Relation);","","HasMany.prototype.removeFromCache = function(id) {","  var cache = this.modelInstance.__cachedRelations[this.definition.name];","  var idName = this.definition.modelTo.definition.idName();","  if (Array.isArray(cache)) {","    for (var i = 0, n = cache.length; i < n; i++) {","      if (idEquals(cache[i][idName], id)) {","        return cache.splice(i, 1);","      }","    }","  }","  return null;","};","","HasMany.prototype.addToCache = function(inst) {","  if (!inst) {","    return;","  }","  var cache = this.modelInstance.__cachedRelations[this.definition.name];","  if (cache === undefined) {","    cache = this.modelInstance.__cachedRelations[this.definition.name] = [];","  }","  var idName = this.definition.modelTo.definition.idName();","  if (Array.isArray(cache)) {","    for (var i = 0, n = cache.length; i < n; i++) {","      if (idEquals(cache[i][idName], inst[idName])) {","        cache[i] = inst;","        return;","      }","    }","    cache.push(inst);","  }","};","","/**"," * HasManyThrough subclass"," * @param {RelationDefinition|Object} definition"," * @param {Object} modelInstance"," * @returns {HasManyThrough}"," * @constructor"," * @class HasManyThrough"," */","function HasManyThrough(definition, modelInstance) {","  if (!(this instanceof HasManyThrough)) {","    return new HasManyThrough(definition, modelInstance);","  }","  assert(definition.type === RelationTypes.hasMany);","  assert(definition.modelThrough);","  HasMany.apply(this, arguments);","}","","util.inherits(HasManyThrough, HasMany);","","/**"," * BelongsTo subclass"," * @param {RelationDefinition|Object} definition"," * @param {Object} modelInstance"," * @returns {BelongsTo}"," * @constructor"," * @class BelongsTo"," */","function BelongsTo(definition, modelInstance) {","  if (!(this instanceof BelongsTo)) {","    return new BelongsTo(definition, modelInstance);","  }","  assert(definition.type === RelationTypes.belongsTo);","  Relation.apply(this, arguments);","}","","util.inherits(BelongsTo, Relation);","","/**"," * HasAndBelongsToMany subclass"," * @param {RelationDefinition|Object} definition"," * @param {Object} modelInstance"," * @returns {HasAndBelongsToMany}"," * @constructor"," * @class HasAndBelongsToMany"," */","function HasAndBelongsToMany(definition, modelInstance) {","  if (!(this instanceof HasAndBelongsToMany)) {","    return new HasAndBelongsToMany(definition, modelInstance);","  }","  assert(definition.type === RelationTypes.hasAndBelongsToMany);","  Relation.apply(this, arguments);","}","","util.inherits(HasAndBelongsToMany, Relation);","","/**"," * HasOne subclass"," * @param {RelationDefinition|Object} definition"," * @param {Object} modelInstance"," * @returns {HasOne}"," * @constructor"," * @class HasOne"," */","function HasOne(definition, modelInstance) {","  if (!(this instanceof HasOne)) {","    return new HasOne(definition, modelInstance);","  }","  assert(definition.type === RelationTypes.hasOne);","  Relation.apply(this, arguments);","}","","util.inherits(HasOne, Relation);","","/**"," * EmbedsOne subclass"," * @param {RelationDefinition|Object} definition"," * @param {Object} modelInstance"," * @returns {EmbedsOne}"," * @constructor"," * @class EmbedsOne"," */","function EmbedsOne(definition, modelInstance) {","  if (!(this instanceof EmbedsOne)) {","    return new EmbedsOne(definition, modelInstance);","  }","  assert(definition.type === RelationTypes.embedsOne);","  Relation.apply(this, arguments);","}","","util.inherits(EmbedsOne, Relation);","","/**"," * EmbedsMany subclass"," * @param {RelationDefinition|Object} definition"," * @param {Object} modelInstance"," * @returns {EmbedsMany}"," * @constructor"," * @class EmbedsMany"," */","function EmbedsMany(definition, modelInstance) {","  if (!(this instanceof EmbedsMany)) {","    return new EmbedsMany(definition, modelInstance);","  }","  assert(definition.type === RelationTypes.embedsMany);","  Relation.apply(this, arguments);","}","","util.inherits(EmbedsMany, Relation);","","/**"," * ReferencesMany subclass"," * @param {RelationDefinition|Object} definition"," * @param {Object} modelInstance"," * @returns {ReferencesMany}"," * @constructor"," * @class ReferencesMany"," */","function ReferencesMany(definition, modelInstance) {","  if (!(this instanceof ReferencesMany)) {","    return new ReferencesMany(definition, modelInstance);","  }","  assert(definition.type === RelationTypes.referencesMany);","  Relation.apply(this, arguments);","}","","util.inherits(ReferencesMany, Relation);","","/*!"," * Find the relation by foreign key"," * @param {*} foreignKey The foreign key"," * @returns {Array} The array of matching relation objects"," */","function findBelongsTo(modelFrom, modelTo, keyTo) {","  return Object.keys(modelFrom.relations)","    .map(function(k) { return modelFrom.relations[k]; })","    .filter(function(rel) {","      return (rel.type === RelationTypes.belongsTo &&","              rel.modelTo === modelTo &&","              (keyTo === undefined || rel.keyTo === keyTo));","    })","    .map(function(rel) {","      return rel.keyFrom;","    });","}","","/*!"," * Look up a model by name from the list of given models"," * @param {Object} models Models keyed by name"," * @param {String} modelName The model name"," * @returns {*} The matching model class"," */","function lookupModel(models, modelName) {","  if (models[modelName]) {","    return models[modelName];","  }","  var lookupClassName = modelName.toLowerCase();","  for (var name in models) {","    if (name.toLowerCase() === lookupClassName) {","      return models[name];","    }","  }","}","","function lookupModelTo(modelFrom, modelTo, params, singularize) {","  if ('string' === typeof modelTo) {","    var modelToName;","    params.as = params.as || modelTo;","    modelTo = params.model || modelTo;","    if (typeof modelTo === 'string') {","      modelToName = (singularize ? i8n.singularize(modelTo) : modelTo).toLowerCase();","      modelTo = lookupModel(modelFrom.dataSource.modelBuilder.models, modelToName) || modelTo;","    }","    if (typeof modelTo === 'string') {","      modelToName = (singularize ? i8n.singularize(params.as) : params.as).toLowerCase();","      modelTo = lookupModel(modelFrom.dataSource.modelBuilder.models, modelToName) || modelTo;","    }","    if (typeof modelTo !== 'function') {","      throw new Error(g.f('Could not find \"%s\" relation for %s', params.as, modelFrom.modelName));","    }","  }","  return modelTo;","}","","/*!"," * Normalize polymorphic parameters"," * @param {Object|String} params Name of the polymorphic relation or params"," * @returns {Object} The normalized parameters"," */","function polymorphicParams(params, as) {","  if (typeof params === 'string') params = {as: params};","  if (typeof params.as !== 'string') params.as = as || 'reference'; // default","  params.foreignKey = params.foreignKey || i8n.camelize(params.as + '_id', true);","  params.discriminator = params.discriminator || i8n.camelize(params.as + '_type', true);","  return params;","}","","/**"," * Define a \"one to many\" relationship by specifying the model name"," *"," * Examples:"," * ```"," * User.hasMany(Post, {as: 'posts', foreignKey: 'authorId'});"," * ```"," *"," * ```"," * Book.hasMany(Chapter);"," * ```"," * Or, equivalently:"," * ```"," * Book.hasMany('chapters', {model: Chapter});"," * ```"," * @param {Model} modelFrom Source model class"," * @param {Object|String} modelTo Model object (or String name of model) to which you are creating the relationship."," * @options {Object} params Configuration parameters; see below."," * @property {String} as Name of the property in the referring model that corresponds to the foreign key field in the related model."," * @property {String} foreignKey Property name of foreign key field."," * @property {Object} model Model object"," */","RelationDefinition.hasMany = function hasMany(modelFrom, modelTo, params) {","  var thisClassName = modelFrom.modelName;","  params = params || {};","  modelTo = lookupModelTo(modelFrom, modelTo, params, true);","","  var relationName = params.as || i8n.camelize(modelTo.pluralModelName, true);","  var fk = params.foreignKey || i8n.camelize(thisClassName + '_id', true);","  var keyThrough = params.keyThrough || i8n.camelize(modelTo.modelName + '_id', true);","","  var pkName = params.primaryKey || modelFrom.dataSource.idName(modelFrom.modelName) || 'id';","  var discriminator, polymorphic;","","  if (params.polymorphic) {","    polymorphic = polymorphicParams(params.polymorphic);","    if (params.invert) {","      polymorphic.invert = true;","      keyThrough = polymorphic.foreignKey;","    }","    discriminator = polymorphic.discriminator;","    if (!params.invert) {","      fk = polymorphic.foreignKey;","    }","    if (!params.through) {","      modelTo.dataSource.defineProperty(modelTo.modelName, discriminator, {type: 'string', index: true});","    }","  }","","  var definition = new RelationDefinition({","    name: relationName,","    type: RelationTypes.hasMany,","    modelFrom: modelFrom,","    keyFrom: pkName,","    keyTo: fk,","    modelTo: modelTo,","    multiple: true,","    properties: params.properties,","    scope: params.scope,","    options: params.options,","    keyThrough: keyThrough,","    polymorphic: polymorphic,","  });","","  definition.modelThrough = params.through;","","  modelFrom.relations[relationName] = definition;","","  if (!params.through) {","    // obviously, modelTo should have attribute called `fk`","    // for polymorphic relations, it is assumed to share the same fk type for all","    // polymorphic models","    modelTo.dataSource.defineForeignKey(modelTo.modelName, fk, modelFrom.modelName, pkName);","  }","","  var scopeMethods = {","    findById: scopeMethod(definition, 'findById'),","    destroy: scopeMethod(definition, 'destroyById'),","    updateById: scopeMethod(definition, 'updateById'),","    exists: scopeMethod(definition, 'exists'),","  };","","  var findByIdFunc = scopeMethods.findById;","  modelFrom.prototype['__findById__' + relationName] = findByIdFunc;","","  var destroyByIdFunc = scopeMethods.destroy;","  modelFrom.prototype['__destroyById__' + relationName] = destroyByIdFunc;","","  var updateByIdFunc = scopeMethods.updateById;","  modelFrom.prototype['__updateById__' + relationName] = updateByIdFunc;","","  var existsByIdFunc = scopeMethods.exists;","  modelFrom.prototype['__exists__' + relationName] = existsByIdFunc;","","  if (definition.modelThrough) {","    scopeMethods.create = scopeMethod(definition, 'create');","    scopeMethods.add = scopeMethod(definition, 'add');","    scopeMethods.remove = scopeMethod(definition, 'remove');","","    var addFunc = scopeMethods.add;","    modelFrom.prototype['__link__' + relationName] = addFunc;","","    var removeFunc = scopeMethods.remove;","    modelFrom.prototype['__unlink__' + relationName] = removeFunc;","  } else {","    scopeMethods.create = scopeMethod(definition, 'create');","    scopeMethods.build = scopeMethod(definition, 'build');","  }","","  var customMethods = extendScopeMethods(definition, scopeMethods, params.scopeMethods);","","  for (var i = 0; i < customMethods.length; i++) {","    var methodName = customMethods[i];","    var method = scopeMethods[methodName];","    if (typeof method === 'function' && method.shared === true) {","      modelFrom.prototype['__' + methodName + '__' + relationName] = method;","    }","  };","","  // Mix the property and scoped methods into the prototype class","  defineScope(modelFrom.prototype, params.through || modelTo, relationName, function() {","    var filter = {};","    filter.where = {};","    filter.where[fk] = this[pkName];","","    definition.applyScope(this, filter);","","    if (definition.modelThrough) {","      var throughRelationName;","","      // find corresponding belongsTo relations from through model as collect","      for (var r in definition.modelThrough.relations) {","        var relation = definition.modelThrough.relations[r];","","        // should be a belongsTo and match modelTo and keyThrough","        // if relation is polymorphic then check keyThrough only","        if (relation.type === RelationTypes.belongsTo &&","          (relation.polymorphic && !relation.modelTo || relation.modelTo === definition.modelTo) &&","          (relation.keyFrom === definition.keyThrough)","          ) {","          throughRelationName = relation.name;","          break;","        }","      }","","      if (definition.polymorphic && definition.polymorphic.invert) {","        filter.collect = definition.polymorphic.as;","        filter.include = filter.collect;","      } else {","        filter.collect = throughRelationName || i8n.camelize(modelTo.modelName, true);","        filter.include = filter.collect;","      }","    }","","    return filter;","  }, scopeMethods, definition.options);","","  return definition;","};","","function scopeMethod(definition, methodName) {","  var relationClass = RelationClasses[definition.type];","  if (definition.type === RelationTypes.hasMany && definition.modelThrough) {","    relationClass = RelationClasses.hasManyThrough;","  }","  var method = function() {","    var relation = new relationClass(definition, this);","    return relation[methodName].apply(relation, arguments);","  };","","  var relationMethod = relationClass.prototype[methodName];","  if (relationMethod.shared) {","    sharedMethod(definition, methodName, method, relationMethod);","  }","  return method;","}","","function sharedMethod(definition, methodName, method, relationMethod) {","  method.shared = true;","  method.accepts = relationMethod.accepts;","  method.returns = relationMethod.returns;","  method.http = relationMethod.http;","  method.description = relationMethod.description;","}","","/**"," * Find a related item by foreign key"," * @param {*} fkId The foreign key"," * @param {Object} [options] Options"," * @param {Function} cb The callback function"," */","HasMany.prototype.findById = function(fkId, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","  var modelTo = this.definition.modelTo;","  var modelFrom = this.definition.modelFrom;","  var fk = this.definition.keyTo;","  var pk = this.definition.keyFrom;","  var modelInstance = this.modelInstance;","","  var idName = this.definition.modelTo.definition.idName();","  var filter = {};","  filter.where = {};","  filter.where[idName] = fkId;","  filter.where[fk] = modelInstance[pk];","","  cb = cb || utils.createPromiseCallback();","","  if (filter.where[fk] === undefined) {","    // Foreign key is undefined","    process.nextTick(cb);","    return cb.promise;","  }","  this.definition.applyScope(modelInstance, filter);","","  modelTo.findOne(filter, options, function(err, inst) {","    if (err) {","      return cb(err);","    }","    if (!inst) {","      err = new Error(g.f('No instance with {{id}} %s found for %s', fkId, modelTo.modelName));","      err.statusCode = 404;","      return cb(err);","    }","    // Check if the foreign key matches the primary key","    if (inst[fk] != null && idEquals(inst[fk], modelInstance[pk])) {","      cb(null, inst);","    } else {","      err = new Error(g.f('Key mismatch: %s.%s: %s, %s.%s: %s',","        modelFrom.modelName, pk, modelInstance[pk], modelTo.modelName, fk, inst[fk]));","      err.statusCode = 400;","      cb(err);","    }","  });","  return cb.promise;","};","","/**"," * Find a related item by foreign key"," * @param {*} fkId The foreign key"," * @param {Object} [options] Options"," * @param {Function} cb The callback function"," */","HasMany.prototype.exists = function(fkId, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","  var fk = this.definition.keyTo;","  var pk = this.definition.keyFrom;","  var modelInstance = this.modelInstance;","  cb = cb || utils.createPromiseCallback();","","  this.findById(fkId, function(err, inst) {","    if (err) {","      return cb(err);","    }","    if (!inst) {","      return cb(null, false);","    }","    // Check if the foreign key matches the primary key","    if (inst[fk] && inst[fk].toString() === modelInstance[pk].toString()) {","      cb(null, true);","    } else {","      cb(null, false);","    }","  });","  return cb.promise;","};","","/**"," * Update a related item by foreign key"," * @param {*} fkId The foreign key"," * @param {Object} Changes to the data"," * @param {Object} [options] Options"," * @param {Function} cb The callback function"," */","HasMany.prototype.updateById = function(fkId, data, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","  cb = cb || utils.createPromiseCallback();","  this.findById(fkId, options, function(err, inst) {","    if (err) {","      return cb && cb(err);","    }","    inst.updateAttributes(data, options, cb);","  });","  return cb.promise;","};","","/**"," * Delete a related item by foreign key"," * @param {*} fkId The foreign key"," * @param {Object} [options] Options"," * @param {Function} cb The callback function"," */","HasMany.prototype.destroyById = function(fkId, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","  cb = cb || utils.createPromiseCallback();","  var self = this;","  this.findById(fkId, options, function(err, inst) {","    if (err) {","      return cb(err);","    }","    self.removeFromCache(fkId);","    inst.destroy(options, cb);","  });","  return cb.promise;","};","","var throughKeys = function(definition) {","  var modelThrough = definition.modelThrough;","  var pk2 = definition.modelTo.definition.idName();","","  let fk1, fk2;","  if (typeof definition.polymorphic === 'object') { // polymorphic","    fk1 = definition.keyTo;","    if (definition.polymorphic.invert) {","      fk2 = definition.polymorphic.foreignKey;","    } else {","      fk2 = definition.keyThrough;","    }","  } else if (definition.modelFrom === definition.modelTo) {","    return findBelongsTo(modelThrough, definition.modelTo, pk2).","      sort(function(fk1, fk2) {","        // Fix for bug - https://github.com/strongloop/loopback-datasource-juggler/issues/571","        // Make sure that first key is mapped to modelFrom","        // & second key to modelTo. Order matters","        return (definition.keyTo === fk1) ? -1 : 1;","      });","  } else {","    fk1 = findBelongsTo(modelThrough, definition.modelFrom,","                            definition.keyFrom)[0];","    fk2 = findBelongsTo(modelThrough, definition.modelTo, pk2)[0];","  }","  return [fk1, fk2];","};","","/**"," * Find a related item by foreign key"," * @param {*} fkId The foreign key value"," * @param {Object} [options] Options"," * @param {Function} cb The callback function"," */","HasManyThrough.prototype.findById = function(fkId, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","  var self = this;","  var modelTo = this.definition.modelTo;","  var pk = this.definition.keyFrom;","  var modelInstance = this.modelInstance;","  var modelThrough = this.definition.modelThrough;","","  cb = cb || utils.createPromiseCallback();","","  self.exists(fkId, options, function(err, exists) {","    if (err || !exists) {","      if (!err) {","        err = new Error(g.f('No relation found in %s' +","          ' for (%s.%s,%s.%s)',","          modelThrough.modelName, self.definition.modelFrom.modelName,","          modelInstance[pk], modelTo.modelName, fkId));","        err.statusCode = 404;","      }","      return cb(err);","    }","    modelTo.findById(fkId, options, function(err, inst) {","      if (err) {","        return cb(err);","      }","      if (!inst) {","        err = new Error(g.f('No instance with id %s found for %s', fkId, modelTo.modelName));","        err.statusCode = 404;","        return cb(err);","      }","      cb(err, inst);","    });","  });","  return cb.promise;","};","","/**"," * Delete a related item by foreign key"," * @param {*} fkId The foreign key"," * @param {Object} [options] Options"," * @param {Function} cb The callback function"," */","HasManyThrough.prototype.destroyById = function(fkId, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","  var self = this;","  var modelTo = this.definition.modelTo;","  var pk = this.definition.keyFrom;","  var modelInstance = this.modelInstance;","  var modelThrough = this.definition.modelThrough;","","  cb = cb || utils.createPromiseCallback();","","  self.exists(fkId, options, function(err, exists) {","    if (err || !exists) {","      if (!err) {","        err = new Error(g.f('No record found in %s for (%s.%s ,%s.%s)',","          modelThrough.modelName, self.definition.modelFrom.modelName,","          modelInstance[pk], modelTo.modelName, fkId));","        err.statusCode = 404;","      }","      return cb(err);","    }","    self.remove(fkId, options, function(err) {","      if (err) {","        return cb(err);","      }","      modelTo.deleteById(fkId, options, cb);","    });","  });","  return cb.promise;","};","","// Create an instance of the target model and connect it to the instance of","// the source model by creating an instance of the through model","HasManyThrough.prototype.create = function create(data, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","  var self = this;","  var definition = this.definition;","  var modelTo = definition.modelTo;","  var modelThrough = definition.modelThrough;","","  if (typeof data === 'function' && !cb) {","    cb = data;","    data = {};","  }","  cb = cb || utils.createPromiseCallback();","","  var modelInstance = this.modelInstance;","","  // First create the target model","  modelTo.create(data, options, function(err, to) {","    if (err) {","      return cb(err, to);","    }","    // The primary key for the target model","    var pk2 = definition.modelTo.definition.idName();","    var keys = throughKeys(definition);","    var fk1 = keys[0];","    var fk2 = keys[1];","","    function createRelation(to, next) {","      var d = {}, q = {}, filter = {where: q};","      d[fk1] = q[fk1] = modelInstance[definition.keyFrom];","      d[fk2] = q[fk2] = to[pk2];","      definition.applyProperties(modelInstance, d);","      definition.applyScope(modelInstance, filter);","","      // Then create the through model","      modelThrough.findOrCreate(filter, d, options, function(e, through) {","        if (e) {","          // Undo creation of the target model","          to.destroy(options, function() {","            next(e);","          });","        } else {","          self.addToCache(to);","          next(err, to);","        }","      });","    }","","    // process array or single item","    if (!Array.isArray(to))","      createRelation(to, cb);","    else","      async.map(to, createRelation, cb);","  });","  return cb.promise;","};","","/**"," * Add the target model instance to the 'hasMany' relation"," * @param {Object|ID} acInst The actual instance or id value"," * @param {Object} [data] Optional data object for the through model to be created"," * @param {Object} [options] Options"," * @param {Function} [cb] Callback function"," */","HasManyThrough.prototype.add = function(acInst, data, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","  var self = this;","  var definition = this.definition;","  var modelThrough = definition.modelThrough;","  var pk1 = definition.keyFrom;","","  if (typeof data === 'function') {","    cb = data;","    data = {};","  }","  var query = {};","","  data = data || {};","  cb = cb || utils.createPromiseCallback();","","  // The primary key for the target model","  var pk2 = definition.modelTo.definition.idName();","","  var keys = throughKeys(definition);","  var fk1 = keys[0];","  var fk2 = keys[1];","","  query[fk1] = this.modelInstance[pk1];","  query[fk2] = (acInst instanceof definition.modelTo) ? acInst[pk2] : acInst;","","  var filter = {where: query};","","  definition.applyScope(this.modelInstance, filter);","","  data[fk1] = this.modelInstance[pk1];","  data[fk2] = (acInst instanceof definition.modelTo) ? acInst[pk2] : acInst;","","  definition.applyProperties(this.modelInstance, data);","","  // Create an instance of the through model","  modelThrough.findOrCreate(filter, data, options, function(err, ac) {","    if (!err) {","      if (acInst instanceof definition.modelTo) {","        self.addToCache(acInst);","      }","    }","    cb(err, ac);","  });","  return cb.promise;","};","","/**"," * Check if the target model instance is related to the 'hasMany' relation"," * @param {Object|ID} acInst The actual instance or id value"," */","HasManyThrough.prototype.exists = function(acInst, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","  var definition = this.definition;","  var modelThrough = definition.modelThrough;","  var pk1 = definition.keyFrom;","","  var query = {};","","  // The primary key for the target model","  var pk2 = definition.modelTo.definition.idName();","","  var keys = throughKeys(definition);","  var fk1 = keys[0];","  var fk2 = keys[1];","","  query[fk1] = this.modelInstance[pk1];","  query[fk2] = (acInst instanceof definition.modelTo) ? acInst[pk2] : acInst;","","  var filter = {where: query};","","  definition.applyScope(this.modelInstance, filter);","","  cb = cb || utils.createPromiseCallback();","","  modelThrough.count(filter.where, options, function(err, ac) {","    cb(err, ac > 0);","  });","  return cb.promise;","};","","/**"," * Remove the target model instance from the 'hasMany' relation"," * @param {Object|ID) acInst The actual instance or id value"," */","HasManyThrough.prototype.remove = function(acInst, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","  var self = this;","  var definition = this.definition;","  var modelThrough = definition.modelThrough;","  var pk1 = definition.keyFrom;","","  var query = {};","","  // The primary key for the target model","  var pk2 = definition.modelTo.definition.idName();","","  var keys = throughKeys(definition);","  var fk1 = keys[0];","  var fk2 = keys[1];","","  query[fk1] = this.modelInstance[pk1];","  query[fk2] = (acInst instanceof definition.modelTo) ? acInst[pk2] : acInst;","","  var filter = {where: query};","","  definition.applyScope(this.modelInstance, filter);","","  cb = cb || utils.createPromiseCallback();","","  modelThrough.deleteAll(filter.where, options, function(err) {","    if (!err) {","      self.removeFromCache(query[fk2]);","    }","    cb(err);","  });","  return cb.promise;","};","","/**"," * Declare \"belongsTo\" relation that sets up a one-to-one connection with"," * another model, such that each instance of the declaring model \"belongs to\""," * one instance of the other model."," *"," * For example, if an application includes users and posts, and each post can"," * be written by exactly one user. The following code specifies that `Post` has"," * a reference called `author` to the `User` model via the `userId` property of"," * `Post` as the foreign key."," * ```"," * Post.belongsTo(User, {as: 'author', foreignKey: 'userId'});"," * ```"," *"," * This optional parameter default value is false, so the related object will"," * be loaded from cache if available."," *"," * @param {Class|String} modelTo Model object (or String name of model) to"," * which you are creating the relationship."," * @options {Object} params Configuration parameters; see below."," * @property {String} as Name of the property in the referring model that"," * corresponds to the foreign key field in the related model."," * @property {String} foreignKey Name of foreign key property."," *"," */","RelationDefinition.belongsTo = function(modelFrom, modelTo, params) {","  var discriminator, polymorphic;","  params = params || {};","  if ('string' === typeof modelTo && !params.polymorphic) {","    modelTo = lookupModelTo(modelFrom, modelTo, params);","  }","","  var pkName, relationName, fk;","  if (params.polymorphic) {","    relationName = params.as || (typeof modelTo === 'string' ? modelTo : null); // initially","","    if (params.polymorphic === true) {","      // modelTo arg will be the name of the polymorphic relation (string)","      polymorphic = polymorphicParams(modelTo, relationName);","    } else {","      polymorphic = polymorphicParams(params.polymorphic, relationName);","    }","","    modelTo = null; // will lookup dynamically","","    pkName = params.primaryKey || params.idName || 'id';","    relationName = params.as || polymorphic.as; // finally","    fk = polymorphic.foreignKey;","    discriminator = polymorphic.discriminator;","","    if (polymorphic.idType) { // explicit key type","      modelFrom.dataSource.defineProperty(modelFrom.modelName, fk, {type: polymorphic.idType, index: true});","    } else { // try to use the same foreign key type as modelFrom","      modelFrom.dataSource.defineForeignKey(modelFrom.modelName, fk, modelFrom.modelName, pkName);","    }","","    modelFrom.dataSource.defineProperty(modelFrom.modelName, discriminator, {type: 'string', index: true});","  } else {","    pkName = params.primaryKey || modelTo.dataSource.idName(modelTo.modelName) || 'id';","    relationName = params.as || i8n.camelize(modelTo.modelName, true);","    fk = params.foreignKey || relationName + 'Id';","","    modelFrom.dataSource.defineForeignKey(modelFrom.modelName, fk, modelTo.modelName, pkName);","  }","","  var definition = modelFrom.relations[relationName] = new RelationDefinition({","    name: relationName,","    type: RelationTypes.belongsTo,","    modelFrom: modelFrom,","    keyFrom: fk,","    keyTo: pkName,","    modelTo: modelTo,","    multiple: false,","    properties: params.properties,","    scope: params.scope,","    options: params.options,","    polymorphic: polymorphic,","    methods: params.methods,","  });","","  // Define a property for the scope so that we have 'this' for the scoped methods","  Object.defineProperty(modelFrom.prototype, relationName, {","    enumerable: true,","    configurable: true,","    get: function() {","      var relation = new BelongsTo(definition, this);","      var relationMethod = relation.related.bind(relation);","      relationMethod.getAsync = relation.getAsync.bind(relation);","      relationMethod.update = relation.update.bind(relation);","      relationMethod.destroy = relation.destroy.bind(relation);","      if (!polymorphic) {","        relationMethod.create = relation.create.bind(relation);","        relationMethod.build = relation.build.bind(relation);","        relationMethod._targetClass = definition.modelTo.modelName;","      }","      bindRelationMethods(relation, relationMethod, definition);","      return relationMethod;","    },","  });","","  // FIXME: [rfeng] Wrap the property into a function for remoting","  // so that it can be accessed as /api/<model>/<id>/<belongsToRelationName>","  // For example, /api/orders/1/customer","  var fn = function() {","    var f = this[relationName];","    f.apply(this, arguments);","  };","  modelFrom.prototype['__get__' + relationName] = fn;","","  return definition;","};","","BelongsTo.prototype.create = function(targetModelData, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","  var self = this;","  var modelTo = this.definition.modelTo;","  var fk = this.definition.keyFrom;","  var pk = this.definition.keyTo;","  var modelInstance = this.modelInstance;","","  if (typeof targetModelData === 'function' && !cb) {","    cb = targetModelData;","    targetModelData = {};","  }","  cb = cb || utils.createPromiseCallback();","","  this.definition.applyProperties(modelInstance, targetModelData || {});","","  modelTo.create(targetModelData, options, function(err, targetModel) {","    if (!err) {","      modelInstance[fk] = targetModel[pk];","      if (modelInstance.isNewRecord()) {","        self.resetCache(targetModel);","        cb && cb(err, targetModel);","      } else {","        modelInstance.save(options, function(err, inst) {","          if (cb && err) return cb && cb(err);","          self.resetCache(targetModel);","          cb && cb(err, targetModel);","        });","      }","    } else {","      cb && cb(err);","    }","  });","  return cb.promise;","};","","BelongsTo.prototype.build = function(targetModelData) {","  var modelTo = this.definition.modelTo;","  this.definition.applyProperties(this.modelInstance, targetModelData || {});","  return new modelTo(targetModelData);","};","","BelongsTo.prototype.update = function(targetModelData, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","  cb = cb || utils.createPromiseCallback();","  var definition = this.definition;","  this.fetch(options, function(err, inst) {","    if (inst instanceof ModelBaseClass) {","      inst.updateAttributes(targetModelData, options, cb);","    } else {","      cb(new Error(g.f('{{BelongsTo}} relation %s is empty', definition.name)));","    }","  });","  return cb.promise;","};","","BelongsTo.prototype.destroy = function(options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","","  var definition = this.definition;","  var modelInstance = this.modelInstance;","  var fk = definition.keyFrom;","","  cb = cb || utils.createPromiseCallback();","","  this.fetch(options, function(err, targetModel) {","    if (targetModel instanceof ModelBaseClass) {","      modelInstance[fk] = null;","      modelInstance.save(options, function(err, targetModel) {","        if (cb && err) return cb && cb(err);","        cb && cb(err, targetModel);","      });","    } else {","      cb(new Error(g.f('{{BelongsTo}} relation %s is empty', definition.name)));","    }","  });","  return cb.promise;","};","","/**"," * Define the method for the belongsTo relation itself"," * It will support one of the following styles:"," * - order.customer(refresh, options, callback): Load the target model instance asynchronously"," * - order.customer(customer): Synchronous setter of the target model instance"," * - order.customer(): Synchronous getter of the target model instance"," *"," * @param refresh"," * @param params"," * @returns {*}"," */","BelongsTo.prototype.related = function(condOrRefresh, options, cb) {","  var self = this;","  var modelFrom = this.definition.modelFrom;","  var modelTo = this.definition.modelTo;","  var pk = this.definition.keyTo;","  var fk = this.definition.keyFrom;","  var modelInstance = this.modelInstance;","  var discriminator;","  var scopeQuery = null;","  var newValue;","","  if ((condOrRefresh instanceof ModelBaseClass) &&","    options === undefined && cb === undefined) {","    // order.customer(customer)","    newValue = condOrRefresh;","    condOrRefresh = false;","  } else if (typeof condOrRefresh === 'function' &&","    options === undefined && cb === undefined) {","    // order.customer(cb)","    cb = condOrRefresh;","    condOrRefresh = false;","  } else if (typeof options === 'function' && cb === undefined) {","    // order.customer(condOrRefresh, cb)","    cb = options;","    options = {};","  }","  if (!newValue) {","    scopeQuery = condOrRefresh;","  }","","  if (typeof this.definition.polymorphic === 'object') {","    discriminator = this.definition.polymorphic.discriminator;","  }","","  var cachedValue;","  if (!condOrRefresh) {","    cachedValue = self.getCache();","  }","  if (newValue) { // acts as setter","    modelInstance[fk] = newValue[pk];","","    if (discriminator) {","      modelInstance[discriminator] = newValue.constructor.modelName;","    }","","    this.definition.applyProperties(modelInstance, newValue);","","    self.resetCache(newValue);","  } else if (typeof cb === 'function') { // acts as async getter","    if (discriminator) {","      var modelToName = modelInstance[discriminator];","      if (typeof modelToName !== 'string') {","        throw new Error(g.f('{{Polymorphic}} model not found: `%s` not set', discriminator));","      }","      modelToName = modelToName.toLowerCase();","      modelTo = lookupModel(modelFrom.dataSource.modelBuilder.models, modelToName);","      if (!modelTo) {","        throw new Error(g.f('{{Polymorphic}} model not found: `%s`', modelToName));","      }","    }","","    if (cachedValue === undefined || !(cachedValue instanceof ModelBaseClass)) {","      var query = {where: {}};","      query.where[pk] = modelInstance[fk];","","      if (query.where[pk] === undefined || query.where[pk] === null) {","        // Foreign key is undefined","        return process.nextTick(cb);","      }","","      this.definition.applyScope(modelInstance, query);","","      if (scopeQuery) mergeQuery(query, scopeQuery);","","      if (Array.isArray(query.fields) && query.fields.indexOf(pk) === -1) {","        query.fields.push(pk); // always include the pk","      }","","      modelTo.findOne(query, options, function(err, inst) {","        if (err) {","          return cb(err);","        }","        if (!inst) {","          return cb(null, null);","        }","        // Check if the foreign key matches the primary key","        if (inst[pk] != null && modelInstance[fk] != null &&","            inst[pk].toString() === modelInstance[fk].toString()) {","          self.resetCache(inst);","          cb(null, inst);","        } else {","          err = new Error(g.f('Key mismatch: %s.%s: %s, %s.%s: %s',","            self.definition.modelFrom.modelName, fk, modelInstance[fk],","            modelTo.modelName, pk, inst[pk]));","          err.statusCode = 400;","          cb(err);","        }","      });","      return modelInstance[fk];","    } else {","      cb(null, cachedValue);","      return cachedValue;","    }","  } else if (condOrRefresh === undefined) { // acts as sync getter","    return cachedValue;","  } else { // setter","    modelInstance[fk] = newValue;","    self.resetCache();","  }","};","","/**"," * Define a Promise-based method for the belongsTo relation itself"," * - order.customer.get(cb): Load the target model instance asynchronously"," *"," * @param {Function} cb Callback of the form function (err, inst)"," * @returns {Promise | Undefined} returns promise if callback is omitted"," */","BelongsTo.prototype.getAsync = function(options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // order.customer.getAsync(cb)","    cb = options;","    options = {};","  }","  cb = cb || utils.createPromiseCallback();","  this.related(true, options, cb);","  return cb.promise;","};","","/**"," * A hasAndBelongsToMany relation creates a direct many-to-many connection with"," * another model, with no intervening model. For example, if your application"," * includes users and groups, with each group having many users and each user"," * appearing in many groups, you could declare the models this way:"," * ```"," *  User.hasAndBelongsToMany('groups', {model: Group, foreignKey: 'groupId'});"," * ```"," *"," * @param {String|Object} modelTo Model object (or String name of model) to"," * which you are creating the relationship."," * @options {Object} params Configuration parameters; see below."," * @property {String} as Name of the property in the referring model that"," * corresponds to the foreign key field in the related model."," * @property {String} foreignKey Property name of foreign key field."," * @property {Object} model Model object"," */","RelationDefinition.hasAndBelongsToMany = function hasAndBelongsToMany(modelFrom, modelTo, params) {","  params = params || {};","  modelTo = lookupModelTo(modelFrom, modelTo, params, true);","","  var models = modelFrom.dataSource.modelBuilder.models;","","  if (!params.through) {","    if (params.polymorphic) throw new Error(g.f('{{Polymorphic}} relations need a through model'));","","    if (params.throughTable) {","      params.through = modelFrom.dataSource.define(params.throughTable);","    } else {","      var name1 = modelFrom.modelName + modelTo.modelName;","      var name2 = modelTo.modelName + modelFrom.modelName;","      params.through = lookupModel(models, name1) || lookupModel(models, name2) ||","        modelFrom.dataSource.define(name1);","    }","  }","","  var options = {as: params.as, through: params.through};","  options.properties = params.properties;","  options.scope = params.scope;","","  // Forward relation options like \"disableInclude\"","  options.options = params.options;","","  if (params.polymorphic) {","    var polymorphic = polymorphicParams(params.polymorphic);","    options.polymorphic = polymorphic; // pass through","    var accessor = params.through.prototype[polymorphic.as];","    if (typeof accessor !== 'function') { // declare once","      // use the name of the polymorphic rel, not modelTo","      params.through.belongsTo(polymorphic.as, {polymorphic: true});","    }","  } else {","    params.through.belongsTo(modelFrom);","  }","","  params.through.belongsTo(modelTo);","","  return this.hasMany(modelFrom, modelTo, options);","};","","/**"," * A HasOne relation creates a one-to-one connection from modelFrom to modelTo."," * This relation indicates that each instance of a model contains or possesses"," * one instance of another model. For example, each supplier in your application"," * has only one account."," *"," * @param {Function} modelFrom The declaring model class"," * @param {String|Function} modelTo Model object (or String name of model) to"," * which you are creating the relationship."," * @options {Object} params Configuration parameters; see below."," * @property {String} as Name of the property in the referring model that"," * corresponds to the foreign key field in the related model."," * @property {String} foreignKey Property name of foreign key field."," * @property {Object} model Model object"," */","RelationDefinition.hasOne = function(modelFrom, modelTo, params) {","  params = params || {};","  modelTo = lookupModelTo(modelFrom, modelTo, params);","","  var pk = params.primaryKey || modelFrom.dataSource.idName(modelFrom.modelName) || 'id';","  var relationName = params.as || i8n.camelize(modelTo.modelName, true);","","  var fk = params.foreignKey || i8n.camelize(modelFrom.modelName + '_id', true);","  var discriminator, polymorphic;","","  if (params.polymorphic) {","    polymorphic = polymorphicParams(params.polymorphic);","    fk = polymorphic.foreignKey;","    discriminator = polymorphic.discriminator;","    if (!params.through) {","      modelTo.dataSource.defineProperty(modelTo.modelName, discriminator, {type: 'string', index: true});","    }","  }","","  var definition = modelFrom.relations[relationName] = new RelationDefinition({","    name: relationName,","    type: RelationTypes.hasOne,","    modelFrom: modelFrom,","    keyFrom: pk,","    keyTo: fk,","    modelTo: modelTo,","    multiple: false,","    properties: params.properties,","    scope: params.scope,","    options: params.options,","    polymorphic: polymorphic,","    methods: params.methods,","  });","","  modelTo.dataSource.defineForeignKey(modelTo.modelName, fk, modelFrom.modelName, pk);","","  // Define a property for the scope so that we have 'this' for the scoped methods","  Object.defineProperty(modelFrom.prototype, relationName, {","    enumerable: true,","    configurable: true,","    get: function() {","      var relation = new HasOne(definition, this);","      var relationMethod = relation.related.bind(relation);","      relationMethod.getAsync = relation.getAsync.bind(relation);","      relationMethod.create = relation.create.bind(relation);","      relationMethod.build = relation.build.bind(relation);","      relationMethod.update = relation.update.bind(relation);","      relationMethod.destroy = relation.destroy.bind(relation);","      relationMethod._targetClass = definition.modelTo.modelName;","      bindRelationMethods(relation, relationMethod, definition);","      return relationMethod;","    },","  });","","  // FIXME: [rfeng] Wrap the property into a function for remoting","  // so that it can be accessed as /api/<model>/<id>/<hasOneRelationName>","  // For example, /api/orders/1/customer","  modelFrom.prototype['__get__' + relationName] = function() {","    var f = this[relationName];","    f.apply(this, arguments);","  };","","  modelFrom.prototype['__create__' + relationName] = function() {","    var f = this[relationName].create;","    f.apply(this, arguments);","  };","","  modelFrom.prototype['__update__' + relationName] = function() {","    var f = this[relationName].update;","    f.apply(this, arguments);","  };","","  modelFrom.prototype['__destroy__' + relationName] = function() {","    var f = this[relationName].destroy;","    f.apply(this, arguments);","  };","","  return definition;","};","","/**"," * Create a target model instance"," * @param {Object} targetModelData The target model data"," * @callback {Function} [cb] Callback function"," * @param {String|Object} err Error string or object"," * @param {Object} The newly created target model instance"," */","HasOne.prototype.create = function(targetModelData, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.profile.create(options, cb)","    cb = options;","    options = {};","  }","  var self = this;","  var modelTo = this.definition.modelTo;","  var fk = this.definition.keyTo;","  var pk = this.definition.keyFrom;","  var modelInstance = this.modelInstance;","","  if (typeof targetModelData === 'function' && !cb) {","    cb = targetModelData;","    targetModelData = {};","  }","  targetModelData = targetModelData || {};","  cb = cb || utils.createPromiseCallback();","","  targetModelData[fk] = modelInstance[pk];","  var query = {where: {}};","  query.where[fk] = targetModelData[fk];","","  this.definition.applyScope(modelInstance, query);","  this.definition.applyProperties(modelInstance, targetModelData);","","  modelTo.findOrCreate(query, targetModelData, options,","    function(err, targetModel, created) {","      if (err) {","        return cb && cb(err);","      }","      if (created) {","        // Refresh the cache","        self.resetCache(targetModel);","        cb && cb(err, targetModel);","      } else {","        cb && cb(new Error(g.f(","          '{{HasOne}} relation cannot create more than one instance of %s',","           modelTo.modelName)));","      }","    });","  return cb.promise;","};","","HasOne.prototype.update = function(targetModelData, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.profile.update(data, cb)","    cb = options;","    options = {};","  }","  cb = cb || utils.createPromiseCallback();","  var definition = this.definition;","  var fk = this.definition.keyTo;","  this.fetch(function(err, targetModel) {","    if (targetModel instanceof ModelBaseClass) {","      delete targetModelData[fk];","      targetModel.updateAttributes(targetModelData, options, cb);","    } else {","      cb(new Error(g.f('{{HasOne}} relation %s is empty', definition.name)));","    }","  });","  return cb.promise;","};","","HasOne.prototype.destroy = function(options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.profile.destroy(cb)","    cb = options;","    options = {};","  }","  cb = cb || utils.createPromiseCallback();","  var definition = this.definition;","  this.fetch(function(err, targetModel) {","    if (targetModel instanceof ModelBaseClass) {","      targetModel.destroy(options, cb);","    } else {","      cb(new Error(g.f('{{HasOne}} relation %s is empty', definition.name)));","    }","  });","  return cb.promise;","};","","/**"," * Create a target model instance"," * @param {Object} targetModelData The target model data"," * @callback {Function} [cb] Callback function"," * @param {String|Object} err Error string or object"," * @param {Object} The newly created target model instance"," */","HasMany.prototype.create = function(targetModelData, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.orders.create(data, cb)","    cb = options;","    options = {};","  }","  var self = this;","  var modelTo = this.definition.modelTo;","  var fk = this.definition.keyTo;","  var pk = this.definition.keyFrom;","  var modelInstance = this.modelInstance;","","  if (typeof targetModelData === 'function' && !cb) {","    cb = targetModelData;","    targetModelData = {};","  }","  targetModelData = targetModelData || {};","  cb = cb || utils.createPromiseCallback();","","  var fkAndProps = function(item) {","    item[fk] = modelInstance[pk];","    self.definition.applyProperties(modelInstance, item);","  };","","  var apply = function(data, fn) {","    if (Array.isArray(data)) {","      data.forEach(fn);","    } else {","      fn(data);","    }","  };","","  apply(targetModelData, fkAndProps);","","  modelTo.create(targetModelData, options, function(err, targetModel) {","    if (!err) {","      // Refresh the cache","      apply(targetModel, self.addToCache.bind(self));","      cb && cb(err, targetModel);","    } else {","      cb && cb(err);","    }","  });","  return cb.promise;","};","/**"," * Build a target model instance"," * @param {Object} targetModelData The target model data"," * @returns {Object} The newly built target model instance"," */","HasMany.prototype.build = HasOne.prototype.build = function(targetModelData) {","  var modelTo = this.definition.modelTo;","  var pk = this.definition.keyFrom;","  var fk = this.definition.keyTo;","","  targetModelData = targetModelData || {};","  targetModelData[fk] = this.modelInstance[pk];","","  this.definition.applyProperties(this.modelInstance, targetModelData);","","  return new modelTo(targetModelData);","};","","/**"," * Define the method for the hasOne relation itself"," * It will support one of the following styles:"," * - order.customer(refresh, callback): Load the target model instance asynchronously"," * - order.customer(customer): Synchronous setter of the target model instance"," * - order.customer(): Synchronous getter of the target model instance"," *"," * @param {Boolean} refresh Reload from the data source"," * @param {Object|Function} params Query parameters"," * @returns {Object}"," */","HasOne.prototype.related = function(condOrRefresh, options, cb) {","  var self = this;","  var modelTo = this.definition.modelTo;","  var fk = this.definition.keyTo;","  var pk = this.definition.keyFrom;","  var definition = this.definition;","  var modelInstance = this.modelInstance;","  var newValue;","","  if ((condOrRefresh instanceof ModelBaseClass) &&","    options === undefined && cb === undefined) {","    // order.customer(customer)","    newValue = condOrRefresh;","    condOrRefresh = false;","  } else if (typeof condOrRefresh === 'function' &&","    options === undefined && cb === undefined) {","    // customer.profile(cb)","    cb = condOrRefresh;","    condOrRefresh = false;","  } else if (typeof options === 'function' && cb === undefined) {","    // customer.profile(condOrRefresh, cb)","    cb = options;","    options = {};","  }","","  var cachedValue;","  if (!condOrRefresh) {","    cachedValue = self.getCache();","  }","  if (newValue) { // acts as setter","    newValue[fk] = modelInstance[pk];","    self.resetCache(newValue);","  } else if (typeof cb === 'function') { // acts as async getter","    if (cachedValue === undefined) {","      var query = {where: {}};","      query.where[fk] = modelInstance[pk];","      definition.applyScope(modelInstance, query);","      modelTo.findOne(query, options, function(err, inst) {","        if (err) {","          return cb(err);","        }","        if (!inst) {","          return cb(null, null);","        }","        // Check if the foreign key matches the primary key","        if (inst[fk] != null && modelInstance[pk] != null &&","            inst[fk].toString() === modelInstance[pk].toString()) {","          self.resetCache(inst);","          cb(null, inst);","        } else {","          err = new Error(g.f('Key mismatch: %s.%s: %s, %s.%s: %s',","            self.definition.modelFrom.modelName, pk, modelInstance[pk],","            modelTo.modelName, fk, inst[fk]));","          err.statusCode = 400;","          cb(err);","        }","      });","      return modelInstance[pk];","    } else {","      cb(null, cachedValue);","      return cachedValue;","    }","  } else if (condOrRefresh === undefined) { // acts as sync getter","    return cachedValue;","  } else { // setter","    newValue[fk] = modelInstance[pk];","    self.resetCache();","  }","};","","/**"," * Define a Promise-based method for the hasOne relation itself"," * - order.customer.getAsync(cb): Load the target model instance asynchronously"," *"," * @param {Function} cb Callback of the form function (err, inst)"," * @returns {Promise | Undefined} Returns promise if cb is omitted"," */","","HasOne.prototype.getAsync = function(options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // order.profile.getAsync(cb)","    cb = options;","    options = {};","  }","  cb = cb || utils.createPromiseCallback();","  this.related(true, cb);","  return cb.promise;","};","","RelationDefinition.embedsOne = function(modelFrom, modelTo, params) {","  params = params || {};","  modelTo = lookupModelTo(modelFrom, modelTo, params);","","  var thisClassName = modelFrom.modelName;","  var relationName = params.as || (i8n.camelize(modelTo.modelName, true) + 'Item');","  var propertyName = params.property || i8n.camelize(modelTo.modelName, true);","  var idName = modelTo.dataSource.idName(modelTo.modelName) || 'id';","","  if (relationName === propertyName) {","    propertyName = '_' + propertyName;","    debug('EmbedsOne property cannot be equal to relation name: ' +","      'forcing property %s for relation %s', propertyName, relationName);","  }","","  var definition = modelFrom.relations[relationName] = new RelationDefinition({","    name: relationName,","    type: RelationTypes.embedsOne,","    modelFrom: modelFrom,","    keyFrom: propertyName,","    keyTo: idName,","    modelTo: modelTo,","    multiple: false,","    properties: params.properties,","    scope: params.scope,","    options: params.options,","    embed: true,","    methods: params.methods,","  });","","  var opts = {type: modelTo};","","  if (params.default === true) {","    opts.default = function() { return new modelTo(); };","  } else if (typeof params.default === 'object') {","    opts.default = (function(def) {","      return function() {","        return new modelTo(def);","      };","    }(params.default));","  }","","  modelFrom.dataSource.defineProperty(modelFrom.modelName, propertyName, opts);","","  // validate the embedded instance","  if (definition.options.validate !== false) {","    modelFrom.validate(relationName, function(err) {","      var inst = this[propertyName];","      if (inst instanceof modelTo) {","        if (!inst.isValid()) {","          var first = Object.keys(inst.errors)[0];","          var msg = 'is invalid: `' + first + '` ' + inst.errors[first];","          this.errors.add(relationName, msg, 'invalid');","          err(false);","        }","      }","    });","  }","","  // Define a property for the scope so that we have 'this' for the scoped methods","  Object.defineProperty(modelFrom.prototype, relationName, {","    enumerable: true,","    configurable: true,","    get: function() {","      var relation = new EmbedsOne(definition, this);","      var relationMethod = relation.related.bind(relation);","      relationMethod.create = relation.create.bind(relation);","      relationMethod.build = relation.build.bind(relation);","      relationMethod.update = relation.update.bind(relation);","      relationMethod.destroy = relation.destroy.bind(relation);","      relationMethod.value = relation.embeddedValue.bind(relation);","      relationMethod._targetClass = definition.modelTo.modelName;","      bindRelationMethods(relation, relationMethod, definition);","      return relationMethod;","    },","  });","","  // FIXME: [rfeng] Wrap the property into a function for remoting","  // so that it can be accessed as /api/<model>/<id>/<embedsOneRelationName>","  // For example, /api/orders/1/customer","  modelFrom.prototype['__get__' + relationName] = function() {","    var f = this[relationName];","    f.apply(this, arguments);","  };","","  modelFrom.prototype['__create__' + relationName] = function() {","    var f = this[relationName].create;","    f.apply(this, arguments);","  };","","  modelFrom.prototype['__update__' + relationName] = function() {","    var f = this[relationName].update;","    f.apply(this, arguments);","  };","","  modelFrom.prototype['__destroy__' + relationName] = function() {","    var f = this[relationName].destroy;","    f.apply(this, arguments);","  };","","  return definition;","};","","EmbedsOne.prototype.related = function(condOrRefresh, options, cb) {","  var modelTo = this.definition.modelTo;","  var modelInstance = this.modelInstance;","  var propertyName = this.definition.keyFrom;","  var newValue;","","  if ((condOrRefresh instanceof ModelBaseClass) &&","    options === undefined && cb === undefined) {","    // order.customer(customer)","    newValue = condOrRefresh;","    condOrRefresh = false;","  } else if (typeof condOrRefresh === 'function' &&","    options === undefined && cb === undefined) {","    // order.customer(cb)","    cb = condOrRefresh;","    condOrRefresh = false;","  } else if (typeof options === 'function' && cb === undefined) {","    // order.customer(condOrRefresh, cb)","    cb = options;","    options = {};","  }","","  if (newValue) { // acts as setter","    if (newValue instanceof modelTo) {","      this.definition.applyProperties(modelInstance, newValue);","      modelInstance.setAttribute(propertyName, newValue);","    }","    return;","  }","","  var embeddedInstance = this.embeddedValue();","","  if (embeddedInstance) {","    embeddedInstance.__persisted = true;","  }","","  if (typeof cb === 'function') { // acts as async getter","    process.nextTick(function() {","      cb(null, embeddedInstance);","    });","  } else if (condOrRefresh === undefined) { // acts as sync getter","    return embeddedInstance;","  }","};","","EmbedsOne.prototype.prepareEmbeddedInstance = function(inst) {","  if (inst && inst.triggerParent !== 'function') {","    var self = this;","    var propertyName = this.definition.keyFrom;","    var modelInstance = this.modelInstance;","    if (this.definition.options.persistent) {","      var pk = this.definition.keyTo;","      inst.__persisted = !!inst[pk];","    } else {","      inst.__persisted = true;","    }","    inst.triggerParent = function(actionName, callback) {","      if (actionName === 'save') {","        var embeddedValue = self.embeddedValue();","        modelInstance.updateAttribute(propertyName,","          embeddedValue, function(err, modelInst) {","            callback(err, err ? null : modelInst);","          });","      } else if (actionName === 'destroy') {","        modelInstance.unsetAttribute(propertyName, true);","        // cannot delete property completely the way save works. operator $unset needed like mongo","        modelInstance.save(function(err, modelInst) {","          callback(err, modelInst);","        });","      } else {","        process.nextTick(callback);","      }","    };","    var originalTrigger = inst.trigger;","    inst.trigger = function(actionName, work, data, callback) {","      if (typeof work === 'function') {","        var originalWork = work;","        work = function(next) {","          originalWork.call(this, function(done) {","            inst.triggerParent(actionName, function(err, inst) {","              next(done); // TODO [fabien] - error handling?","            });","          });","        };","      }","      originalTrigger.call(this, actionName, work, data, callback);","    };","  }","};","","EmbedsOne.prototype.embeddedValue = function(modelInstance) {","  modelInstance = modelInstance || this.modelInstance;","  var embeddedValue = modelInstance[this.definition.keyFrom];","  this.prepareEmbeddedInstance(embeddedValue);","  return embeddedValue;","};","","EmbedsOne.prototype.create = function(targetModelData, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // order.customer.create(data, cb)","    cb = options;","    options = {};","  }","  var modelTo = this.definition.modelTo;","  var propertyName = this.definition.keyFrom;","  var modelInstance = this.modelInstance;","","  if (typeof targetModelData === 'function' && !cb) {","    cb = targetModelData;","    targetModelData = {};","  }","","  targetModelData = targetModelData || {};","  cb = cb || utils.createPromiseCallback();","","  var inst = this.callScopeMethod('build', targetModelData);","","  var updateEmbedded = function(callback) {","    if (modelInstance.isNewRecord()) {","      modelInstance.setAttribute(propertyName, inst);","      modelInstance.save(options, function(err) {","        callback(err, err ? null : inst);","      });","    } else {","      modelInstance.updateAttribute(propertyName,","        inst, options, function(err) {","          callback(err, err ? null : inst);","        });","    }","  };","","  if (this.definition.options.persistent) {","    inst.save(options, function(err) { // will validate","      if (err) return cb(err, inst);","      updateEmbedded(cb);","    });","  } else {","    var context = {","      Model: modelTo,","      instance: inst,","      options: options || {},","      hookState: {},","    };","    modelTo.notifyObserversOf('before save', context, function(err) {","      if (err) {","        return process.nextTick(function() {","          cb(err);","        });","      }","","      err = inst.isValid() ? null : new ValidationError(inst);","      if (err) {","        process.nextTick(function() {","          cb(err);","        });","      } else {","        updateEmbedded(function(err, inst) {","          if (err) return cb(err);","          context.instance = inst;","          modelTo.notifyObserversOf('after save', context, function(err) {","            cb(err, err ? null : inst);","          });","        });","      }","    });","  }","  return cb.promise;","};","","EmbedsOne.prototype.build = function(targetModelData) {","  var modelTo = this.definition.modelTo;","  var modelInstance = this.modelInstance;","  var propertyName = this.definition.keyFrom;","  var forceId = this.definition.options.forceId;","  var persistent = this.definition.options.persistent;","  var connector = modelTo.dataSource.connector;","","  targetModelData = targetModelData || {};","","  this.definition.applyProperties(modelInstance, targetModelData);","","  var pk = this.definition.keyTo;","  var pkProp = modelTo.definition.properties[pk];","","  var assignId = (forceId || targetModelData[pk] === undefined);","  assignId = assignId && !persistent && (pkProp && pkProp.generated);","","  if (assignId && typeof connector.generateId === 'function') {","    var id = connector.generateId(modelTo.modelName, targetModelData, pk);","    targetModelData[pk] = id;","  }","","  var embeddedInstance = new modelTo(targetModelData);","  modelInstance[propertyName] = embeddedInstance;","","  this.prepareEmbeddedInstance(embeddedInstance);","","  return embeddedInstance;","};","","EmbedsOne.prototype.update = function(targetModelData, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // order.customer.update(data, cb)","    cb = options;","    options = {};","  }","","  var modelTo = this.definition.modelTo;","  var modelInstance = this.modelInstance;","  var propertyName = this.definition.keyFrom;","","  var isInst = targetModelData instanceof ModelBaseClass;","  var data = isInst ? targetModelData.toObject() : targetModelData;","","  var embeddedInstance = this.embeddedValue();","  if (embeddedInstance instanceof modelTo) {","    cb = cb || utils.createPromiseCallback();","    var hookState = {};","    var context = {","      Model: modelTo,","      currentInstance: embeddedInstance,","      data: data,","      options: options || {},","      hookState: hookState,","    };","    modelTo.notifyObserversOf('before save', context, function(err) {","      if (err) return cb(err);","","      embeddedInstance.setAttributes(context.data);","","      // TODO support async validations","      if (!embeddedInstance.isValid()) {","        return cb(new ValidationError(embeddedInstance));","      }","","      modelInstance.save(function(err, inst) {","        if (err) return cb(err);","","        context = {","          Model: modelTo,","          instance: inst ? inst[propertyName] : embeddedInstance,","          options: options || {},","          hookState: hookState,","        };","        modelTo.notifyObserversOf('after save', context, function(err) {","          cb(err, context.instance);","        });","      });","    });","  } else if (!embeddedInstance && cb) {","    return this.callScopeMethod('create', data, cb);","  } else if (!embeddedInstance) {","    return this.callScopeMethod('build', data);","  }","  return cb.promise;","};","","EmbedsOne.prototype.destroy = function(options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // order.customer.destroy(cb)","    cb = options;","    options = {};","  }","  cb = cb || utils.createPromiseCallback();","  var modelTo = this.definition.modelTo;","  var modelInstance = this.modelInstance;","  var propertyName = this.definition.keyFrom;","  var embeddedInstance = modelInstance[propertyName];","","  if (!embeddedInstance) {","    cb();","    return cb.promise;","  }","","  modelInstance.unsetAttribute(propertyName, true);","","  var context = {","    Model: modelTo,","    instance: embeddedInstance,","    options: options || {},","    hookState: {},","  };","  modelTo.notifyObserversOf('before delete', context, function(err) {","    if (err) return cb(err);","    modelInstance.save(function(err, result) {","      if (err) return cb(err);","      modelTo.notifyObserversOf('after delete', context, cb);","    });","  });","","  return cb.promise;","};","","RelationDefinition.embedsMany = function embedsMany(modelFrom, modelTo, params) {","  params = params || {};","  modelTo = lookupModelTo(modelFrom, modelTo, params, true);","","  var thisClassName = modelFrom.modelName;","  var relationName = params.as || (i8n.camelize(modelTo.modelName, true) + 'List');","  var propertyName = params.property || i8n.camelize(modelTo.pluralModelName, true);","  var idName = modelTo.dataSource.idName(modelTo.modelName) || 'id';","","  if (relationName === propertyName) {","    propertyName = '_' + propertyName;","    debug('EmbedsMany property cannot be equal to relation name: ' +","      'forcing property %s for relation %s', propertyName, relationName);","  }","","  var definition = modelFrom.relations[relationName] = new RelationDefinition({","    name: relationName,","    type: RelationTypes.embedsMany,","    modelFrom: modelFrom,","    keyFrom: propertyName,","    keyTo: idName,","    modelTo: modelTo,","    multiple: true,","    properties: params.properties,","    scope: params.scope,","    options: params.options,","    embed: true,","  });","","  modelFrom.dataSource.defineProperty(modelFrom.modelName, propertyName, {","    type: [modelTo], default: function() { return []; },","  });","","  if (typeof modelTo.dataSource.connector.generateId !== 'function') {","    modelFrom.validate(propertyName, function(err) {","      var self = this;","      var embeddedList = this[propertyName] || [];","      var hasErrors = false;","      embeddedList.forEach(function(item, idx) {","        if (item instanceof modelTo && item[idName] == undefined) {","          hasErrors = true;","          var msg = 'contains invalid item at index `' + idx + '`:';","          msg += ' `' + idName + '` is blank';","          self.errors.add(propertyName, msg, 'invalid');","        }","      });","      if (hasErrors) err(false);","    });","  }","","  if (!params.polymorphic) {","    modelFrom.validate(propertyName, function(err) {","      var embeddedList = this[propertyName] || [];","      var ids = embeddedList.map(function(m) { return m[idName] && m[idName].toString(); }); // mongodb","      var uniqueIds = ids.filter(function(id, pos) {","        return utils.findIndexOf(ids, id, idEquals) === pos;","      });","      if (ids.length !== uniqueIds.length) {","        this.errors.add(propertyName, 'contains duplicate `' + idName + '`', 'uniqueness');","        err(false);","      }","    }, {code: 'uniqueness'});","  }","","  // validate all embedded items","  if (definition.options.validate !== false) {","    modelFrom.validate(propertyName, function(err) {","      var self = this;","      var embeddedList = this[propertyName] || [];","      var hasErrors = false;","      embeddedList.forEach(function(item, idx) {","        if (item instanceof modelTo) {","          if (!item.isValid()) {","            hasErrors = true;","            var id = item[idName];","            var first = Object.keys(item.errors)[0];","            let msg = id ?","              'contains invalid item: `' + id + '`' :","              'contains invalid item at index `' + idx + '`';","            msg += ' (`' + first + '` ' + item.errors[first] + ')';","            self.errors.add(propertyName, msg, 'invalid');","          }","        } else {","          hasErrors = true;","          self.errors.add(propertyName, 'contains invalid item', 'invalid');","        }","      });","      if (hasErrors) err(false);","    });","  }","","  var scopeMethods = {","    findById: scopeMethod(definition, 'findById'),","    destroy: scopeMethod(definition, 'destroyById'),","    updateById: scopeMethod(definition, 'updateById'),","    exists: scopeMethod(definition, 'exists'),","    add: scopeMethod(definition, 'add'),","    remove: scopeMethod(definition, 'remove'),","    get: scopeMethod(definition, 'get'),","    set: scopeMethod(definition, 'set'),","    unset: scopeMethod(definition, 'unset'),","    at: scopeMethod(definition, 'at'),","    value: scopeMethod(definition, 'embeddedValue'),","  };","","  var findByIdFunc = scopeMethods.findById;","  modelFrom.prototype['__findById__' + relationName] = findByIdFunc;","","  var destroyByIdFunc = scopeMethods.destroy;","  modelFrom.prototype['__destroyById__' + relationName] = destroyByIdFunc;","","  var updateByIdFunc = scopeMethods.updateById;","  modelFrom.prototype['__updateById__' + relationName] = updateByIdFunc;","","  var addFunc = scopeMethods.add;","  modelFrom.prototype['__link__' + relationName] = addFunc;","","  var removeFunc = scopeMethods.remove;","  modelFrom.prototype['__unlink__' + relationName] = removeFunc;","","  scopeMethods.create = scopeMethod(definition, 'create');","  scopeMethods.build = scopeMethod(definition, 'build');","","  scopeMethods.related = scopeMethod(definition, 'related'); // bound to definition","","  if (!definition.options.persistent) {","    scopeMethods.destroyAll = scopeMethod(definition, 'destroyAll');","  }","","  var customMethods = extendScopeMethods(definition, scopeMethods, params.scopeMethods);","","  for (var i = 0; i < customMethods.length; i++) {","    var methodName = customMethods[i];","    var method = scopeMethods[methodName];","    if (typeof method === 'function' && method.shared === true) {","      modelFrom.prototype['__' + methodName + '__' + relationName] = method;","    }","  };","","  // Mix the property and scoped methods into the prototype class","  var scopeDefinition = defineScope(modelFrom.prototype, modelTo, relationName, function() {","    return {};","  }, scopeMethods, definition.options);","","  scopeDefinition.related = scopeMethods.related;","","  return definition;","};","","EmbedsMany.prototype.prepareEmbeddedInstance = function(inst) {","  if (inst && inst.triggerParent !== 'function') {","    var self = this;","    var propertyName = this.definition.keyFrom;","    var modelInstance = this.modelInstance;","    if (this.definition.options.persistent) {","      var pk = this.definition.keyTo;","      inst.__persisted = !!inst[pk];","    } else {","      inst.__persisted = true;","    }","    inst.triggerParent = function(actionName, callback) {","      if (actionName === 'save' || actionName === 'destroy') {","        var embeddedList = self.embeddedList();","        if (actionName === 'destroy') {","          var index = embeddedList.indexOf(inst);","          if (index > -1) embeddedList.splice(index, 1);","        }","        modelInstance.updateAttribute(propertyName,","          embeddedList, function(err, modelInst) {","            callback(err, err ? null : modelInst);","          });","      } else {","        process.nextTick(callback);","      }","    };","    var originalTrigger = inst.trigger;","    inst.trigger = function(actionName, work, data, callback) {","      if (typeof work === 'function') {","        var originalWork = work;","        work = function(next) {","          originalWork.call(this, function(done) {","            inst.triggerParent(actionName, function(err, inst) {","              next(done); // TODO [fabien] - error handling?","            });","          });","        };","      }","      originalTrigger.call(this, actionName, work, data, callback);","    };","  }","};","","EmbedsMany.prototype.embeddedList =","EmbedsMany.prototype.embeddedValue = function(modelInstance) {","  modelInstance = modelInstance || this.modelInstance;","  var embeddedList = modelInstance[this.definition.keyFrom] || [];","  embeddedList.forEach(this.prepareEmbeddedInstance.bind(this));","  return embeddedList;","};","","EmbedsMany.prototype.related = function(receiver, scopeParams, condOrRefresh, options, cb) {","  var modelTo = this.definition.modelTo;","  var modelInstance = this.modelInstance;","","  var actualCond = {};","","  if (typeof condOrRefresh === 'function' &&","    options === undefined && cb === undefined) {","    // customer.emails(receiver, scopeParams, cb)","    cb = condOrRefresh;","    condOrRefresh = false;","  } else if (typeof options === 'function' && cb === undefined) {","    // customer.emails(receiver, scopeParams, condOrRefresh, cb)","    cb = options;","    options = {};","  }","","  if (typeof condOrRefresh === 'object') {","    actualCond = condOrRefresh;","  }","","  var embeddedList = this.embeddedList(receiver);","","  this.definition.applyScope(receiver, actualCond);","","  var params = mergeQuery(actualCond, scopeParams);","","  if (params.where && Object.keys(params.where).length > 0) { // TODO [fabien] Support order/sorting","    embeddedList = embeddedList ? embeddedList.filter(applyFilter(params)) : embeddedList;","  }","","  var returnRelated = function(list) {","    if (params.include) {","      modelTo.include(list, params.include, options, cb);","    } else {","      process.nextTick(function() { cb(null, list); });","    }","  };","","  returnRelated(embeddedList);","};","","EmbedsMany.prototype.findById = function(fkId, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // order.emails(fkId, cb)","    cb = options;","    options = {};","  }","  var pk = this.definition.keyTo;","  var modelTo = this.definition.modelTo;","  var modelInstance = this.modelInstance;","","  var embeddedList = this.embeddedList();","","  var find = function(id) {","    for (var i = 0; i < embeddedList.length; i++) {","      var item = embeddedList[i];","      if (idEquals(item[pk], id)) return item;","    }","    return null;","  };","","  var item = find(fkId.toString()); // in case of explicit id","  item = (item instanceof modelTo) ? item : null;","","  if (typeof cb === 'function') {","    process.nextTick(function() {","      cb(null, item);","    });","  };","","  return item; // sync","};","","EmbedsMany.prototype.exists = function(fkId, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.emails.exists(fkId, cb)","    cb = options;","    options = {};","  }","  var modelTo = this.definition.modelTo;","  var inst = this.findById(fkId, options, function(err, inst) {","    if (cb) cb(err, inst instanceof modelTo);","  });","  return inst instanceof modelTo; // sync","};","","EmbedsMany.prototype.updateById = function(fkId, data, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.emails.updateById(fkId, data, cb)","    cb = options;","    options = {};","  }","  if (typeof data === 'function') {","    // customer.emails.updateById(fkId, cb)","    cb = data;","    data = {};","  }","  options = options || {};","","  var modelTo = this.definition.modelTo;","  var propertyName = this.definition.keyFrom;","  var modelInstance = this.modelInstance;","","  var embeddedList = this.embeddedList();","","  var inst = this.findById(fkId);","","  if (inst instanceof modelTo) {","    var hookState = {};","    var context = {","      Model: modelTo,","      currentInstance: inst,","      data: data,","      options: options,","      hookState: hookState,","    };","    modelTo.notifyObserversOf('before save', context, function(err) {","      if (err) return cb && cb(err);","","      inst.setAttributes(data);","","      err = inst.isValid() ? null : new ValidationError(inst);","      if (err && typeof cb === 'function') {","        return process.nextTick(function() {","          cb(err, inst);","        });","      }","","      context = {","        Model: modelTo,","        instance: inst,","        options: options,","        hookState: hookState,","      };","","      if (typeof cb === 'function') {","        modelInstance.updateAttribute(propertyName, embeddedList, options,","        function(err) {","          if (err) return cb(err, inst);","          modelTo.notifyObserversOf('after save', context, function(err) {","            cb(err, inst);","          });","        });","      } else {","        modelTo.notifyObserversOf('after save', context, function(err) {","          if (!err) return;","          debug('Unhandled error in \"after save\" hooks: %s', err.stack || err);","        });","      }","    });","  } else if (typeof cb === 'function') {","    process.nextTick(function() {","      cb(null, null); // not found","    });","  }","  return inst; // sync","};","","EmbedsMany.prototype.destroyById = function(fkId, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.emails.destroyById(fkId, cb)","    cb = options;","    options = {};","  }","  var modelTo = this.definition.modelTo;","  var propertyName = this.definition.keyFrom;","  var modelInstance = this.modelInstance;","","  var embeddedList = this.embeddedList();","","  var inst = (fkId instanceof modelTo) ? fkId : this.findById(fkId);","","  if (inst instanceof modelTo) {","    var context = {","      Model: modelTo,","      instance: inst,","      options: options || {},","      hookState: {},","    };","    modelTo.notifyObserversOf('before delete', context, function(err) {","      if (err) return cb(err);","","      var index = embeddedList.indexOf(inst);","      if (index > -1) embeddedList.splice(index, 1);","      if (typeof cb !== 'function') return;","      modelInstance.updateAttribute(propertyName,","        embeddedList, function(err) {","          if (err) return cb(err);","          modelTo.notifyObserversOf('after delete', context, function(err) {","            cb(err);","          });","        });","    });","  } else if (typeof cb === 'function') {","    process.nextTick(cb); // not found","  }","  return inst; // sync","};","","EmbedsMany.prototype.destroyAll = function(where, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.emails.destroyAll(where, cb);","    cb = options;","    options = {};","  } else if (typeof where === 'function' &&","    options === undefined && cb === undefined) {","    // customer.emails.destroyAll(cb);","    cb = where;","    where = {};","  }","  var propertyName = this.definition.keyFrom;","  var modelInstance = this.modelInstance;","","  var embeddedList = this.embeddedList();","","  if (where && Object.keys(where).length > 0) {","    var filter = applyFilter({where: where});","    var reject = function(v) { return !filter(v); };","    embeddedList = embeddedList ? embeddedList.filter(reject) : embeddedList;","  } else {","    embeddedList = [];","  }","","  if (typeof cb === 'function') {","    modelInstance.updateAttribute(propertyName,","      embeddedList, function(err) {","        cb(err);","      });","  } else {","    modelInstance.setAttribute(propertyName, embeddedList);","  }","};","","EmbedsMany.prototype.get = EmbedsMany.prototype.findById;","EmbedsMany.prototype.set = EmbedsMany.prototype.updateById;","EmbedsMany.prototype.unset = EmbedsMany.prototype.destroyById;","","EmbedsMany.prototype.at = function(index, cb) {","  var modelTo = this.definition.modelTo;","  var modelInstance = this.modelInstance;","","  var embeddedList = this.embeddedList();","","  var item = embeddedList[parseInt(index)];","  item = (item instanceof modelTo) ? item : null;","","  if (typeof cb === 'function') {","    process.nextTick(function() {","      cb(null, item);","    });","  };","","  return item; // sync","};","","EmbedsMany.prototype.create = function(targetModelData, options, cb) {","  var pk = this.definition.keyTo;","  var modelTo = this.definition.modelTo;","  var propertyName = this.definition.keyFrom;","  var modelInstance = this.modelInstance;","","  if (typeof options === 'function' && cb === undefined) {","    // customer.emails.create(cb)","    cb = options;","    options = {};","  }","","  if (typeof targetModelData === 'function' && !cb) {","    cb = targetModelData;","    targetModelData = {};","  }","  targetModelData = targetModelData || {};","  cb = cb || utils.createPromiseCallback();","","  var embeddedList = this.embeddedList();","","  var inst = this.callScopeMethod('build', targetModelData);","","  var updateEmbedded = function(callback) {","    if (modelInstance.isNewRecord()) {","      modelInstance.setAttribute(propertyName, embeddedList);","      modelInstance.save(options, function(err) {","        callback(err, err ? null : inst);","      });","    } else {","      modelInstance.updateAttribute(propertyName,","        embeddedList, options, function(err) {","          callback(err, err ? null : inst);","        });","    }","  };","","  if (this.definition.options.persistent) {","    inst.save(function(err) { // will validate","      if (err) return cb(err, inst);","      updateEmbedded(cb);","    });","  } else {","    const err = inst.isValid() ? null : new ValidationError(inst);","    if (err) {","      process.nextTick(function() {","        cb(err);","      });","    } else {","      var context = {","        Model: modelTo,","        instance: inst,","        options: options || {},","        hookState: {},","      };","      modelTo.notifyObserversOf('before save', context, function(err) {","        if (err) return cb(err);","        updateEmbedded(function(err, inst) {","          if (err) return cb(err, null);","          modelTo.notifyObserversOf('after save', context, function(err) {","            cb(err, err ? null : inst);","          });","        });","      });","    }","  }","  return cb.promise;","};","","EmbedsMany.prototype.build = function(targetModelData) {","  var modelTo = this.definition.modelTo;","  var modelInstance = this.modelInstance;","  var forceId = this.definition.options.forceId;","  var persistent = this.definition.options.persistent;","  var connector = modelTo.dataSource.connector;","","  var pk = this.definition.keyTo;","  var pkProp = modelTo.definition.properties[pk];","  var pkType = pkProp && pkProp.type;","","  var embeddedList = this.embeddedList();","","  targetModelData = targetModelData || {};","","  var assignId = (forceId || targetModelData[pk] === undefined);","  assignId = assignId && !persistent;","","  if (assignId && pkType === Number) {","    var ids = embeddedList.map(function(m) {","      return (typeof m[pk] === 'number' ? m[pk] : 0);","    });","    if (ids.length > 0) {","      targetModelData[pk] = Math.max.apply(null, ids) + 1;","    } else {","      targetModelData[pk] = 1;","    }","  } else if (assignId && typeof connector.generateId === 'function') {","    var id = connector.generateId(modelTo.modelName, targetModelData, pk);","    targetModelData[pk] = id;","  }","","  this.definition.applyProperties(modelInstance, targetModelData);","","  var inst = new modelTo(targetModelData);","","  if (this.definition.options.prepend) {","    embeddedList.unshift(inst);","  } else {","    embeddedList.push(inst);","  }","","  this.prepareEmbeddedInstance(inst);","","  return inst;","};","","/**"," * Add the target model instance to the 'embedsMany' relation"," * @param {Object|ID} acInst The actual instance or id value"," */","EmbedsMany.prototype.add = function(acInst, data, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.emails.add(acInst, data, cb)","    cb = options;","    options = {};","  } else if (typeof data === 'function' &&","    options === undefined && cb === undefined) {","    // customer.emails.add(acInst, cb)","    cb = data;","    data = {};","  }","  cb = cb || utils.createPromiseCallback();","","  var self = this;","  var definition = this.definition;","  var modelTo = this.definition.modelTo;","  var modelInstance = this.modelInstance;","","  var defOpts = definition.options;","  var belongsTo = defOpts.belongsTo && modelTo.relations[defOpts.belongsTo];","","  if (!belongsTo) {","    throw new Error('Invalid reference: ' + defOpts.belongsTo || '(none)');","  }","","  var fk2 = belongsTo.keyTo;","  var pk2 = belongsTo.modelTo.definition.idName() || 'id';","","  var query = {};","","  query[fk2] = (acInst instanceof belongsTo.modelTo) ? acInst[pk2] : acInst;","","  var filter = {where: query};","","  belongsTo.applyScope(modelInstance, filter);","","  belongsTo.modelTo.findOne(filter, options, function(err, ref) {","    if (ref instanceof belongsTo.modelTo) {","      var inst = self.build(data || {});","      inst[defOpts.belongsTo](ref);","      modelInstance.save(function(err) {","        cb(err, err ? null : inst);","      });","    } else {","      cb(null, null);","    }","  });","  return cb.promise;","};","","/**"," * Remove the target model instance from the 'embedsMany' relation"," * @param {Object|ID) acInst The actual instance or id value"," */","EmbedsMany.prototype.remove = function(acInst, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.emails.remove(acInst, cb)","    cb = options;","    options = {};","  }","  var self = this;","  var definition = this.definition;","  var modelTo = this.definition.modelTo;","  var modelInstance = this.modelInstance;","","  var defOpts = definition.options;","  var belongsTo = defOpts.belongsTo && modelTo.relations[defOpts.belongsTo];","","  if (!belongsTo) {","    throw new Error('Invalid reference: ' + defOpts.belongsTo || '(none)');","  }","","  var fk2 = belongsTo.keyTo;","  var pk2 = belongsTo.modelTo.definition.idName() || 'id';","","  var query = {};","","  query[fk2] = (acInst instanceof belongsTo.modelTo) ? acInst[pk2] : acInst;","","  var filter = {where: query};","","  belongsTo.applyScope(modelInstance, filter);","","  cb = cb || utils.createPromiseCallback();","","  modelInstance[definition.name](filter, options, function(err, items) {","    if (err) return cb(err);","","    items.forEach(function(item) {","      self.unset(item);","    });","","    modelInstance.save(options, function(err) {","      cb(err);","    });","  });","  return cb.promise;","};","","RelationDefinition.referencesMany = function referencesMany(modelFrom, modelTo, params) {","  params = params || {};","  modelTo = lookupModelTo(modelFrom, modelTo, params, true);","","  var thisClassName = modelFrom.modelName;","  var relationName = params.as || i8n.camelize(modelTo.pluralModelName, true);","  var fk = params.foreignKey || i8n.camelize(modelTo.modelName + '_ids', true);","  var idName = modelTo.dataSource.idName(modelTo.modelName) || 'id';","  var idType = modelTo.definition.properties[idName].type;","","  var definition = modelFrom.relations[relationName] = new RelationDefinition({","    name: relationName,","    type: RelationTypes.referencesMany,","    modelFrom: modelFrom,","    keyFrom: fk,","    keyTo: idName,","    modelTo: modelTo,","    multiple: true,","    properties: params.properties,","    scope: params.scope,","    options: params.options,","  });","","  modelFrom.dataSource.defineProperty(modelFrom.modelName, fk, {","    type: [idType], default: function() { return []; },","  });","","  modelFrom.validate(relationName, function(err) {","    var ids = this[fk] || [];","    var uniqueIds = ids.filter(function(id, pos) {","      return utils.findIndexOf(ids, id, idEquals) === pos;","    });","    if (ids.length !== uniqueIds.length) {","      var msg = 'contains duplicate `' + modelTo.modelName + '` instance';","      this.errors.add(relationName, msg, 'uniqueness');","      err(false);","    }","  }, {code: 'uniqueness'});","","  var scopeMethods = {","    findById: scopeMethod(definition, 'findById'),","    destroy: scopeMethod(definition, 'destroyById'),","    updateById: scopeMethod(definition, 'updateById'),","    exists: scopeMethod(definition, 'exists'),","    add: scopeMethod(definition, 'add'),","    remove: scopeMethod(definition, 'remove'),","    at: scopeMethod(definition, 'at'),","  };","","  var findByIdFunc = scopeMethods.findById;","  modelFrom.prototype['__findById__' + relationName] = findByIdFunc;","","  var destroyByIdFunc = scopeMethods.destroy;","  modelFrom.prototype['__destroyById__' + relationName] = destroyByIdFunc;","","  var updateByIdFunc = scopeMethods.updateById;","  modelFrom.prototype['__updateById__' + relationName] = updateByIdFunc;","","  var addFunc = scopeMethods.add;","  modelFrom.prototype['__link__' + relationName] = addFunc;","","  var removeFunc = scopeMethods.remove;","  modelFrom.prototype['__unlink__' + relationName] = removeFunc;","","  scopeMethods.create = scopeMethod(definition, 'create');","  scopeMethods.build = scopeMethod(definition, 'build');","","  scopeMethods.related = scopeMethod(definition, 'related');","","  var customMethods = extendScopeMethods(definition, scopeMethods, params.scopeMethods);","","  for (var i = 0; i < customMethods.length; i++) {","    var methodName = customMethods[i];","    var method = scopeMethods[methodName];","    if (typeof method === 'function' && method.shared === true) {","      modelFrom.prototype['__' + methodName + '__' + relationName] = method;","    }","  };","","  // Mix the property and scoped methods into the prototype class","  var scopeDefinition = defineScope(modelFrom.prototype, modelTo, relationName, function() {","    return {};","  }, scopeMethods, definition.options);","","  scopeDefinition.related = scopeMethods.related; // bound to definition","","  return definition;","};","","ReferencesMany.prototype.related = function(receiver, scopeParams, condOrRefresh, options, cb) {","  var fk = this.definition.keyFrom;","  var modelTo = this.definition.modelTo;","  var relationName = this.definition.name;","  var modelInstance = this.modelInstance;","  var self = receiver;","","  var actualCond = {};","  var actualRefresh = false;","","  if (typeof condOrRefresh === 'function' &&","    options === undefined && cb === undefined) {","    // customer.orders(receiver, scopeParams, cb)","    cb = condOrRefresh;","    condOrRefresh = undefined;","  } else if (typeof options === 'function' && cb === undefined) {","    // customer.orders(receiver, scopeParams, condOrRefresh, cb)","    cb = options;","    options = {};","    if (typeof condOrRefresh === 'boolean') {","      actualRefresh = condOrRefresh;","      condOrRefresh = {};","    } else {","      actualRefresh = true;","    }","  }","  actualCond = condOrRefresh || {};","","  var ids = self[fk] || [];","","  this.definition.applyScope(modelInstance, actualCond);","","  var params = mergeQuery(actualCond, scopeParams);","  return modelTo.findByIds(ids, params, options, cb);","};","","ReferencesMany.prototype.findById = function(fkId, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.orders.findById(fkId, cb)","    cb = options;","    options = {};","  }","  var modelTo = this.definition.modelTo;","  var modelFrom = this.definition.modelFrom;","  var relationName = this.definition.name;","  var modelInstance = this.modelInstance;","","  var pk = this.definition.keyTo;","  var fk = this.definition.keyFrom;","","  if (typeof fkId === 'object') {","    fkId = fkId.toString(); // mongodb","  }","","  var ids = modelInstance[fk] || [];","","  var filter = {};","","  this.definition.applyScope(modelInstance, filter);","","  cb = cb || utils.createPromiseCallback();","","  modelTo.findByIds([fkId], filter, options, function(err, instances) {","    if (err) {","      return cb(err);","    }","","    var inst = instances[0];","    if (!inst) {","      err = new Error(g.f('No instance with {{id}} %s found for %s', fkId, modelTo.modelName));","      err.statusCode = 404;","      return cb(err);","    }","","    // Check if the foreign key is amongst the ids","    if (utils.findIndexOf(ids, inst[pk], idEquals) > -1) {","      cb(null, inst);","    } else {","      err = new Error(g.f('Key mismatch: %s.%s: %s, %s.%s: %s',","        modelFrom.modelName, fk, modelInstance[fk],","        modelTo.modelName, pk, inst[pk]));","      err.statusCode = 400;","      cb(err);","    }","  });","  return cb.promise;","};","","ReferencesMany.prototype.exists = function(fkId, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.orders.exists(fkId, cb)","    cb = options;","    options = {};","  }","  var fk = this.definition.keyFrom;","  var ids = this.modelInstance[fk] || [];","","  cb = cb || utils.createPromiseCallback();","  process.nextTick(function() { cb(null, utils.findIndexOf(ids, fkId, idEquals) > -1); });","  return cb.promise;","};","","ReferencesMany.prototype.updateById = function(fkId, data, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.orders.updateById(fkId, data, cb)","    cb = options;","    options = {};","  } else if (typeof data === 'function' &&","    options === undefined && cb === undefined) {","    // customer.orders.updateById(fkId, cb)","    cb = data;","    data = {};","  }","  cb = cb || utils.createPromiseCallback();","","  this.findById(fkId, options, function(err, inst) {","    if (err) return cb(err);","    inst.updateAttributes(data, options, cb);","  });","  return cb.promise;","};","","ReferencesMany.prototype.destroyById = function(fkId, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.orders.destroyById(fkId, cb)","    cb = options;","    options = {};","  }","  var self = this;","  cb = cb || utils.createPromiseCallback();","  this.findById(fkId, function(err, inst) {","    if (err) return cb(err);","    self.remove(inst, function(err, ids) {","      inst.destroy(cb);","    });","  });","  return cb.promise;","};","","ReferencesMany.prototype.at = function(index, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.orders.at(index, cb)","    cb = options;","    options = {};","  }","  var fk = this.definition.keyFrom;","  var ids = this.modelInstance[fk] || [];","  cb = cb || utils.createPromiseCallback();","  this.findById(ids[index], options, cb);","  return cb.promise;","};","","ReferencesMany.prototype.create = function(targetModelData, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.orders.create(data, cb)","    cb = options;","    options = {};","  }","  var definition = this.definition;","  var modelTo = this.definition.modelTo;","  var relationName = this.definition.name;","  var modelInstance = this.modelInstance;","","  var pk = this.definition.keyTo;","  var fk = this.definition.keyFrom;","","  if (typeof targetModelData === 'function' && !cb) {","    cb = targetModelData;","    targetModelData = {};","  }","  targetModelData = targetModelData || {};","  cb = cb || utils.createPromiseCallback();","","  var ids = modelInstance[fk] || [];","","  var inst = this.callScopeMethod('build', targetModelData);","","  inst.save(options, function(err, inst) {","    if (err) return cb(err, inst);","","    var id = inst[pk];","","    if (typeof id === 'object') {","      id = id.toString(); // mongodb","    }","","    if (definition.options.prepend) {","      ids.unshift(id);","    } else {","      ids.push(id);","    }","","    modelInstance.updateAttribute(fk,","      ids, options, function(err, modelInst) {","        cb(err, inst);","      });","  });","  return cb.promise;","};","","ReferencesMany.prototype.build = function(targetModelData) {","  var modelTo = this.definition.modelTo;","  targetModelData = targetModelData || {};","","  this.definition.applyProperties(this.modelInstance, targetModelData);","","  return new modelTo(targetModelData);","};","","/**"," * Add the target model instance to the 'embedsMany' relation"," * @param {Object|ID} acInst The actual instance or id value"," */","ReferencesMany.prototype.add = function(acInst, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.orders.add(acInst, cb)","    cb = options;","    options = {};","  }","  var self = this;","  var definition = this.definition;","  var modelTo = this.definition.modelTo;","  var modelInstance = this.modelInstance;","","  var pk = this.definition.keyTo;","  var fk = this.definition.keyFrom;","","  var insert = function(inst, done) {","    var id = inst[pk];","","    if (typeof id === 'object') {","      id = id.toString(); // mongodb","    }","","    var ids = modelInstance[fk] || [];","","    if (definition.options.prepend) {","      ids.unshift(id);","    } else {","      ids.push(id);","    }","","    modelInstance.updateAttribute(fk, ids, options, function(err) {","      done(err, err ? null : inst);","    });","  };","","  cb = cb || utils.createPromiseCallback();","","  if (acInst instanceof modelTo) {","    insert(acInst, cb);","  } else {","    var filter = {where: {}};","    filter.where[pk] = acInst;","","    definition.applyScope(modelInstance, filter);","","    modelTo.findOne(filter, options, function(err, inst) {","      if (err || !inst) return cb(err, null);","      insert(inst, cb);","    });","  }","  return cb.promise;","};","","/**"," * Remove the target model instance from the 'embedsMany' relation"," * @param {Object|ID) acInst The actual instance or id value"," */","ReferencesMany.prototype.remove = function(acInst, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    // customer.orders.remove(acInst, cb)","    cb = options;","    options = {};","  }","  var definition = this.definition;","  var modelInstance = this.modelInstance;","","  var pk = this.definition.keyTo;","  var fk = this.definition.keyFrom;","","  var ids = modelInstance[fk] || [];","","  var id = (acInst instanceof definition.modelTo) ? acInst[pk] : acInst;","","  cb = cb || utils.createPromiseCallback();","","  var index = utils.findIndexOf(ids, id, idEquals);","  if (index > -1) {","    ids.splice(index, 1);","    modelInstance.updateAttribute(fk, ids, options, function(err, inst) {","      cb(err, inst[fk] || []);","    });","  } else {","    process.nextTick(function() { cb(null, ids); });","  }","  return cb.promise;","};",""],"l":{"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"25":1,"35":1,"46":1,"47":1,"49":1,"50":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"61":1,"62":0,"63":0,"65":0,"66":0,"67":0,"68":0,"71":0,"74":1,"75":0,"76":0,"77":0,"78":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"89":0,"90":0,"91":0,"92":0,"93":0,"95":0,"98":0,"101":1,"102":0,"103":0,"104":0,"105":0,"114":1,"115":0,"116":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"142":1,"143":0,"145":0,"146":0,"147":0,"150":0,"159":0,"160":0,"161":0,"163":0,"164":0,"166":0,"174":1,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"188":0,"189":0,"190":0,"191":0,"194":0,"195":0,"196":0,"198":0,"206":1,"207":0,"208":0,"209":0,"211":0,"212":0,"213":0,"215":0,"218":0,"219":0,"220":0,"222":0,"224":0,"225":0,"234":1,"235":0,"236":0,"237":0,"238":0,"240":0,"241":0,"242":0,"244":0,"245":0,"246":0,"247":0,"248":0,"250":0,"251":0,"252":0,"253":0,"255":0,"256":0,"257":0,"258":0,"261":0,"263":0,"264":0,"265":0,"267":0,"280":1,"281":0,"282":0,"284":0,"285":0,"287":0,"288":0,"291":1,"292":0,"293":0,"296":1,"297":0,"300":1,"301":0,"302":0,"303":0,"304":0,"305":0,"307":0,"317":1,"318":0,"329":1,"330":0,"331":0,"333":0,"334":0,"337":1,"339":1,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"349":0,"352":1,"353":0,"354":0,"356":0,"357":0,"358":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"368":0,"380":1,"381":0,"382":0,"384":0,"385":0,"386":0,"389":1,"399":1,"400":0,"401":0,"403":0,"404":0,"407":1,"417":1,"418":0,"419":0,"421":0,"422":0,"425":1,"435":1,"436":0,"437":0,"439":0,"440":0,"443":1,"453":1,"454":0,"455":0,"457":0,"458":0,"461":1,"471":1,"472":0,"473":0,"475":0,"476":0,"479":1,"489":1,"490":0,"491":0,"493":0,"494":0,"497":1,"504":1,"505":0,"506":0,"508":0,"513":0,"523":1,"524":0,"525":0,"527":0,"528":0,"529":0,"530":0,"535":1,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"544":0,"545":0,"546":0,"548":0,"549":0,"552":0,"560":1,"561":0,"562":0,"563":0,"564":0,"565":0,"590":1,"591":0,"592":0,"593":0,"595":0,"596":0,"597":0,"599":0,"600":0,"602":0,"603":0,"604":0,"605":0,"606":0,"608":0,"609":0,"610":0,"612":0,"613":0,"617":0,"632":0,"634":0,"636":0,"640":0,"643":0,"650":0,"651":0,"653":0,"654":0,"656":0,"657":0,"659":0,"660":0,"662":0,"663":0,"664":0,"665":0,"667":0,"668":0,"670":0,"671":0,"673":0,"674":0,"677":0,"679":0,"680":0,"681":0,"682":0,"683":0,"688":0,"689":0,"690":0,"691":0,"693":0,"695":0,"696":0,"699":0,"700":0,"704":0,"708":0,"709":0,"713":0,"714":0,"715":0,"717":0,"718":0,"722":0,"725":0,"728":1,"729":0,"730":0,"731":0,"733":0,"734":0,"735":0,"738":0,"739":0,"740":0,"742":0,"745":1,"746":0,"747":0,"748":0,"749":0,"750":0,"759":1,"760":0,"761":0,"762":0,"764":0,"765":0,"766":0,"767":0,"768":0,"770":0,"771":0,"772":0,"773":0,"774":0,"776":0,"778":0,"780":0,"781":0,"783":0,"785":0,"786":0,"787":0,"789":0,"790":0,"791":0,"792":0,"795":0,"796":0,"798":0,"800":0,"801":0,"804":0,"813":1,"814":0,"815":0,"816":0,"818":0,"819":0,"820":0,"821":0,"823":0,"824":0,"825":0,"827":0,"828":0,"831":0,"832":0,"834":0,"837":0,"847":1,"848":0,"849":0,"850":0,"852":0,"853":0,"854":0,"855":0,"857":0,"859":0,"868":1,"869":0,"870":0,"871":0,"873":0,"874":0,"875":0,"876":0,"877":0,"879":0,"880":0,"882":0,"885":1,"886":0,"887":0,"889":0,"890":0,"891":0,"892":0,"893":0,"895":0,"897":0,"898":0,"903":0,"906":0,"908":0,"910":0,"919":1,"920":0,"921":0,"922":0,"924":0,"925":0,"926":0,"927":0,"928":0,"930":0,"932":0,"933":0,"934":0,"935":0,"939":0,"941":0,"943":0,"944":0,"945":0,"947":0,"948":0,"949":0,"950":0,"952":0,"955":0,"964":1,"965":0,"966":0,"967":0,"969":0,"970":0,"971":0,"972":0,"973":0,"975":0,"977":0,"978":0,"979":0,"980":0,"983":0,"985":0,"987":0,"988":0,"989":0,"991":0,"994":0,"999":1,"1000":0,"1001":0,"1002":0,"1004":0,"1005":0,"1006":0,"1007":0,"1009":0,"1010":0,"1011":0,"1013":0,"1015":0,"1018":0,"1019":0,"1020":0,"1023":0,"1024":0,"1025":0,"1026":0,"1028":1,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1036":0,"1037":0,"1039":0,"1040":0,"1043":0,"1044":0,"1050":0,"1051":0,"1053":0,"1055":0,"1065":1,"1066":0,"1067":0,"1068":0,"1070":0,"1071":0,"1072":0,"1073":0,"1075":0,"1076":0,"1077":0,"1079":0,"1081":0,"1082":0,"1085":0,"1087":0,"1088":0,"1089":0,"1091":0,"1092":0,"1094":0,"1096":0,"1098":0,"1099":0,"1101":0,"1104":0,"1105":0,"1106":0,"1107":0,"1110":0,"1112":0,"1119":1,"1120":0,"1121":0,"1122":0,"1124":0,"1125":0,"1126":0,"1128":0,"1131":0,"1133":0,"1134":0,"1135":0,"1137":0,"1138":0,"1140":0,"1142":0,"1144":0,"1146":0,"1147":0,"1149":0,"1156":1,"1157":0,"1158":0,"1159":0,"1161":0,"1162":0,"1163":0,"1164":0,"1166":0,"1169":0,"1171":0,"1172":0,"1173":0,"1175":0,"1176":0,"1178":0,"1180":0,"1182":0,"1184":0,"1185":0,"1186":0,"1188":0,"1190":0,"1217":1,"1218":0,"1219":0,"1220":0,"1221":0,"1224":0,"1225":0,"1226":0,"1228":0,"1230":0,"1232":0,"1235":0,"1237":0,"1238":0,"1239":0,"1240":0,"1242":0,"1243":0,"1245":0,"1248":0,"1250":0,"1251":0,"1252":0,"1254":0,"1257":0,"1273":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1287":0,"1288":0,"1295":0,"1296":0,"1297":0,"1299":0,"1301":0,"1304":1,"1305":0,"1306":0,"1307":0,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1315":0,"1316":0,"1317":0,"1319":0,"1321":0,"1323":0,"1324":0,"1325":0,"1326":0,"1327":0,"1328":0,"1330":0,"1331":0,"1332":0,"1333":0,"1337":0,"1340":0,"1343":1,"1344":0,"1345":0,"1346":0,"1349":1,"1350":0,"1351":0,"1352":0,"1354":0,"1355":0,"1356":0,"1357":0,"1358":0,"1360":0,"1363":0,"1366":1,"1367":0,"1368":0,"1369":0,"1372":0,"1373":0,"1374":0,"1376":0,"1378":0,"1379":0,"1380":0,"1381":0,"1382":0,"1383":0,"1386":0,"1389":0,"1403":1,"1404":0,"1405":0,"1406":0,"1407":0,"1408":0,"1409":0,"1410":0,"1411":0,"1412":0,"1414":0,"1417":0,"1418":0,"1419":0,"1422":0,"1423":0,"1424":0,"1426":0,"1427":0,"1429":0,"1430":0,"1433":0,"1434":0,"1437":0,"1438":0,"1439":0,"1441":0,"1442":0,"1444":0,"1445":0,"1448":0,"1450":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1457":0,"1458":0,"1459":0,"1460":0,"1464":0,"1465":0,"1466":0,"1468":0,"1470":0,"1473":0,"1475":0,"1477":0,"1478":0,"1481":0,"1482":0,"1483":0,"1485":0,"1486":0,"1489":0,"1491":0,"1492":0,"1494":0,"1497":0,"1498":0,"1501":0,"1503":0,"1504":0,"1506":0,"1507":0,"1509":0,"1510":0,"1521":1,"1522":0,"1524":0,"1525":0,"1527":0,"1528":0,"1529":0,"1549":1,"1550":0,"1551":0,"1553":0,"1555":0,"1556":0,"1558":0,"1559":0,"1561":0,"1562":0,"1563":0,"1568":0,"1569":0,"1570":0,"1573":0,"1575":0,"1576":0,"1577":0,"1578":0,"1579":0,"1581":0,"1584":0,"1587":0,"1589":0,"1607":1,"1608":0,"1609":0,"1611":0,"1612":0,"1614":0,"1615":0,"1617":0,"1618":0,"1619":0,"1620":0,"1621":0,"1622":0,"1626":0,"1641":0,"1644":0,"1648":0,"1649":0,"1650":0,"1651":0,"1652":0,"1653":0,"1654":0,"1655":0,"1656":0,"1657":0,"1664":0,"1665":0,"1666":0,"1669":0,"1670":0,"1671":0,"1674":0,"1675":0,"1676":0,"1679":0,"1680":0,"1681":0,"1684":0,"1694":1,"1695":0,"1697":0,"1698":0,"1700":0,"1701":0,"1702":0,"1703":0,"1704":0,"1706":0,"1707":0,"1708":0,"1710":0,"1711":0,"1713":0,"1714":0,"1715":0,"1717":0,"1718":0,"1720":0,"1722":0,"1723":0,"1725":0,"1727":0,"1728":0,"1730":0,"1735":0,"1738":1,"1739":0,"1741":0,"1742":0,"1744":0,"1745":0,"1746":0,"1747":0,"1748":0,"1749":0,"1750":0,"1752":0,"1755":0,"1758":1,"1759":0,"1761":0,"1762":0,"1764":0,"1765":0,"1766":0,"1767":0,"1768":0,"1770":0,"1773":0,"1783":1,"1784":0,"1786":0,"1787":0,"1789":0,"1790":0,"1791":0,"1792":0,"1793":0,"1795":0,"1796":0,"1797":0,"1799":0,"1800":0,"1802":0,"1803":0,"1804":0,"1807":0,"1808":0,"1809":0,"1811":0,"1815":0,"1817":0,"1818":0,"1820":0,"1821":0,"1823":0,"1826":0,"1833":1,"1834":0,"1835":0,"1836":0,"1838":0,"1839":0,"1841":0,"1843":0,"1857":1,"1858":0,"1859":0,"1860":0,"1861":0,"1862":0,"1863":0,"1864":0,"1866":0,"1869":0,"1870":0,"1871":0,"1874":0,"1875":0,"1876":0,"1878":0,"1879":0,"1882":0,"1883":0,"1884":0,"1886":0,"1887":0,"1888":0,"1889":0,"1890":0,"1891":0,"1892":0,"1893":0,"1894":0,"1895":0,"1896":0,"1898":0,"1899":0,"1902":0,"1904":0,"1905":0,"1907":0,"1910":0,"1911":0,"1914":0,"1916":0,"1917":0,"1919":0,"1920":0,"1922":0,"1923":0,"1935":1,"1936":0,"1938":0,"1939":0,"1941":0,"1942":0,"1943":0,"1946":1,"1947":0,"1948":0,"1950":0,"1951":0,"1952":0,"1953":0,"1955":0,"1956":0,"1957":0,"1961":0,"1976":0,"1978":0,"1979":0,"1980":0,"1981":0,"1982":0,"1983":0,"1988":0,"1991":0,"1992":0,"1993":0,"1994":0,"1995":0,"1996":0,"1997":0,"1998":0,"1999":0,"2006":0,"2010":0,"2011":0,"2012":0,"2013":0,"2014":0,"2015":0,"2016":0,"2017":0,"2018":0,"2019":0,"2026":0,"2027":0,"2028":0,"2031":0,"2032":0,"2033":0,"2036":0,"2037":0,"2038":0,"2041":0,"2042":0,"2043":0,"2046":0,"2049":1,"2050":0,"2051":0,"2052":0,"2053":0,"2055":0,"2058":0,"2059":0,"2060":0,"2063":0,"2064":0,"2065":0,"2067":0,"2068":0,"2071":0,"2072":0,"2073":0,"2074":0,"2076":0,"2079":0,"2081":0,"2082":0,"2085":0,"2086":0,"2087":0,"2089":0,"2090":0,"2094":1,"2095":0,"2096":0,"2097":0,"2098":0,"2099":0,"2100":0,"2101":0,"2103":0,"2105":0,"2106":0,"2107":0,"2108":0,"2110":0,"2112":0,"2113":0,"2115":0,"2116":0,"2119":0,"2122":0,"2123":0,"2124":0,"2125":0,"2126":0,"2127":0,"2128":0,"2129":0,"2134":0,"2139":1,"2140":0,"2141":0,"2142":0,"2143":0,"2146":1,"2147":0,"2149":0,"2150":0,"2152":0,"2153":0,"2154":0,"2156":0,"2157":0,"2158":0,"2161":0,"2162":0,"2164":0,"2166":0,"2167":0,"2168":0,"2169":0,"2170":0,"2173":0,"2175":0,"2180":0,"2181":0,"2182":0,"2183":0,"2186":0,"2192":0,"2193":0,"2194":0,"2195":0,"2199":0,"2200":0,"2201":0,"2202":0,"2205":0,"2206":0,"2207":0,"2208":0,"2209":0,"2215":0,"2218":1,"2219":0,"2220":0,"2221":0,"2222":0,"2223":0,"2224":0,"2226":0,"2228":0,"2230":0,"2231":0,"2233":0,"2234":0,"2236":0,"2237":0,"2238":0,"2241":0,"2242":0,"2244":0,"2246":0,"2249":1,"2250":0,"2252":0,"2253":0,"2256":0,"2257":0,"2258":0,"2260":0,"2261":0,"2263":0,"2264":0,"2265":0,"2266":0,"2267":0,"2274":0,"2275":0,"2277":0,"2280":0,"2281":0,"2284":0,"2285":0,"2287":0,"2293":0,"2294":0,"2298":0,"2299":0,"2300":0,"2301":0,"2303":0,"2306":1,"2307":0,"2309":0,"2310":0,"2312":0,"2313":0,"2314":0,"2315":0,"2316":0,"2318":0,"2319":0,"2320":0,"2323":0,"2325":0,"2331":0,"2332":0,"2333":0,"2334":0,"2335":0,"2339":0,"2342":1,"2343":0,"2344":0,"2346":0,"2347":0,"2348":0,"2349":0,"2351":0,"2352":0,"2353":0,"2357":0,"2371":0,"2372":0,"2375":0,"2376":0,"2377":0,"2378":0,"2379":0,"2380":0,"2381":0,"2382":0,"2383":0,"2384":0,"2385":0,"2388":0,"2392":0,"2393":0,"2394":0,"2395":0,"2396":0,"2397":0,"2399":0,"2400":0,"2401":0,"2407":0,"2408":0,"2409":0,"2410":0,"2411":0,"2412":0,"2413":0,"2414":0,"2415":0,"2416":0,"2417":0,"2418":0,"2421":0,"2422":0,"2425":0,"2426":0,"2429":0,"2433":0,"2447":0,"2448":0,"2450":0,"2451":0,"2453":0,"2454":0,"2456":0,"2457":0,"2459":0,"2460":0,"2462":0,"2463":0,"2465":0,"2467":0,"2468":0,"2471":0,"2473":0,"2474":0,"2475":0,"2476":0,"2477":0,"2482":0,"2483":0,"2486":0,"2488":0,"2491":1,"2492":0,"2493":0,"2494":0,"2495":0,"2496":0,"2497":0,"2498":0,"2500":0,"2502":0,"2503":0,"2504":0,"2505":0,"2506":0,"2507":0,"2509":0,"2511":0,"2514":0,"2517":0,"2518":0,"2519":0,"2520":0,"2521":0,"2522":0,"2523":0,"2524":0,"2529":0,"2534":1,"2536":0,"2537":0,"2538":0,"2539":0,"2542":1,"2543":0,"2544":0,"2546":0,"2548":0,"2551":0,"2552":0,"2553":0,"2555":0,"2556":0,"2559":0,"2560":0,"2563":0,"2565":0,"2567":0,"2569":0,"2570":0,"2573":0,"2574":0,"2575":0,"2577":0,"2581":0,"2584":1,"2585":0,"2587":0,"2588":0,"2590":0,"2591":0,"2592":0,"2594":0,"2596":0,"2597":0,"2598":0,"2599":0,"2601":0,"2604":0,"2605":0,"2607":0,"2608":0,"2609":0,"2613":0,"2616":1,"2617":0,"2619":0,"2620":0,"2622":0,"2623":0,"2624":0,"2626":0,"2629":1,"2630":0,"2632":0,"2633":0,"2635":0,"2637":0,"2638":0,"2640":0,"2642":0,"2643":0,"2644":0,"2646":0,"2648":0,"2650":0,"2651":0,"2652":0,"2659":0,"2660":0,"2662":0,"2664":0,"2665":0,"2666":0,"2667":0,"2671":0,"2678":0,"2679":0,"2681":0,"2682":0,"2683":0,"2687":0,"2688":0,"2689":0,"2693":0,"2694":0,"2695":0,"2698":0,"2701":1,"2702":0,"2704":0,"2705":0,"2707":0,"2708":0,"2709":0,"2711":0,"2713":0,"2715":0,"2716":0,"2722":0,"2723":0,"2725":0,"2726":0,"2727":0,"2728":0,"2730":0,"2731":0,"2732":0,"2736":0,"2737":0,"2739":0,"2742":1,"2743":0,"2745":0,"2746":0,"2747":0,"2750":0,"2751":0,"2753":0,"2754":0,"2756":0,"2758":0,"2759":0,"2760":0,"2761":0,"2763":0,"2766":0,"2767":0,"2769":0,"2772":0,"2776":1,"2777":1,"2778":1,"2780":1,"2781":0,"2782":0,"2784":0,"2786":0,"2787":0,"2789":0,"2790":0,"2791":0,"2795":0,"2798":1,"2799":0,"2800":0,"2801":0,"2802":0,"2804":0,"2806":0,"2807":0,"2810":0,"2811":0,"2812":0,"2814":0,"2815":0,"2817":0,"2819":0,"2821":0,"2822":0,"2823":0,"2824":0,"2825":0,"2828":0,"2830":0,"2835":0,"2836":0,"2837":0,"2838":0,"2841":0,"2842":0,"2843":0,"2844":0,"2847":0,"2853":0,"2854":0,"2855":0,"2856":0,"2857":0,"2858":0,"2864":0,"2867":1,"2868":0,"2869":0,"2870":0,"2871":0,"2872":0,"2874":0,"2875":0,"2876":0,"2878":0,"2880":0,"2882":0,"2883":0,"2885":0,"2886":0,"2887":0,"2889":0,"2890":0,"2892":0,"2894":0,"2895":0,"2896":0,"2899":0,"2901":0,"2903":0,"2904":0,"2906":0,"2909":0,"2911":0,"2918":1,"2919":0,"2921":0,"2922":0,"2923":0,"2926":0,"2927":0,"2929":0,"2931":0,"2932":0,"2933":0,"2934":0,"2936":0,"2937":0,"2939":0,"2940":0,"2943":0,"2944":0,"2946":0,"2948":0,"2950":0,"2952":0,"2954":0,"2955":0,"2956":0,"2957":0,"2958":0,"2959":0,"2962":0,"2965":0,"2972":1,"2973":0,"2975":0,"2976":0,"2978":0,"2979":0,"2980":0,"2981":0,"2983":0,"2984":0,"2986":0,"2987":0,"2990":0,"2991":0,"2993":0,"2995":0,"2997":0,"2999":0,"3001":0,"3003":0,"3004":0,"3006":0,"3007":0,"3010":0,"3011":0,"3014":0,"3017":1,"3018":0,"3019":0,"3021":0,"3022":0,"3023":0,"3024":0,"3025":0,"3027":0,"3040":0,"3041":0,"3044":0,"3045":0,"3046":0,"3047":0,"3049":0,"3050":0,"3051":0,"3052":0,"3056":0,"3066":0,"3067":0,"3069":0,"3070":0,"3072":0,"3073":0,"3075":0,"3076":0,"3078":0,"3079":0,"3081":0,"3082":0,"3084":0,"3086":0,"3088":0,"3089":0,"3090":0,"3091":0,"3092":0,"3097":0,"3098":0,"3101":0,"3103":0,"3106":1,"3107":0,"3108":0,"3109":0,"3110":0,"3111":0,"3113":0,"3114":0,"3116":0,"3119":0,"3120":0,"3121":0,"3123":0,"3124":0,"3125":0,"3126":0,"3127":0,"3129":0,"3132":0,"3134":0,"3136":0,"3138":0,"3139":0,"3142":1,"3143":0,"3145":0,"3146":0,"3148":0,"3149":0,"3150":0,"3151":0,"3153":0,"3154":0,"3156":0,"3157":0,"3160":0,"3162":0,"3164":0,"3166":0,"3168":0,"3169":0,"3170":0,"3173":0,"3174":0,"3175":0,"3176":0,"3177":0,"3181":0,"3182":0,"3184":0,"3187":0,"3188":0,"3191":0,"3194":1,"3195":0,"3197":0,"3198":0,"3200":0,"3201":0,"3203":0,"3204":0,"3205":0,"3208":1,"3209":0,"3211":0,"3212":0,"3213":0,"3216":0,"3217":0,"3219":0,"3221":0,"3222":0,"3223":0,"3225":0,"3228":1,"3229":0,"3231":0,"3232":0,"3234":0,"3235":0,"3236":0,"3237":0,"3238":0,"3239":0,"3242":0,"3245":1,"3246":0,"3248":0,"3249":0,"3251":0,"3252":0,"3253":0,"3254":0,"3255":0,"3258":1,"3259":0,"3261":0,"3262":0,"3264":0,"3265":0,"3266":0,"3267":0,"3269":0,"3270":0,"3272":0,"3273":0,"3274":0,"3276":0,"3277":0,"3279":0,"3281":0,"3283":0,"3284":0,"3286":0,"3288":0,"3289":0,"3292":0,"3293":0,"3295":0,"3298":0,"3300":0,"3303":0,"3306":1,"3307":0,"3308":0,"3310":0,"3312":0,"3319":1,"3320":0,"3322":0,"3323":0,"3325":0,"3326":0,"3327":0,"3328":0,"3330":0,"3331":0,"3333":0,"3334":0,"3336":0,"3337":0,"3340":0,"3342":0,"3343":0,"3345":0,"3348":0,"3349":0,"3353":0,"3355":0,"3356":0,"3358":0,"3359":0,"3361":0,"3363":0,"3364":0,"3365":0,"3368":0,"3375":1,"3376":0,"3378":0,"3379":0,"3381":0,"3382":0,"3384":0,"3385":0,"3387":0,"3389":0,"3391":0,"3393":0,"3394":0,"3395":0,"3396":0,"3397":0,"3400":0,"3402":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/scope.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/scope.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":1,"179":0,"180":0,"181":0,"182":0,"183":0,"184":1,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":1,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":1,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":1,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":1,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0,0],"44":[0,0],"45":[0,0],"46":[0,0,0,0],"47":[0,0],"48":[0,0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0,0],"55":[0,0],"56":[0,0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0,0],"65":[0,0],"66":[0,0],"67":[0,0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0,0],"94":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"fnMap":{"1":{"name":"ScopeDefinition","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":40},"end":{"line":31,"column":59}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":36},"end":{"line":57,"column":96}}},"4":{"name":"(anonymous_4)","line":105,"loc":{"start":{"line":105,"column":38},"end":{"line":105,"column":58}}},"5":{"name":"(anonymous_5)","line":116,"loc":{"start":{"line":116,"column":25},"end":{"line":116,"column":36}}},"6":{"name":"(anonymous_6)","line":148,"loc":{"start":{"line":148,"column":41},"end":{"line":148,"column":60}}},"7":{"name":"defineScope","line":161,"loc":{"start":{"line":161,"column":0},"end":{"line":161,"column":71}}},"8":{"name":"(anonymous_8)","line":213,"loc":{"start":{"line":213,"column":9},"end":{"line":213,"column":20}}},"9":{"name":"(anonymous_9)","line":217,"loc":{"start":{"line":217,"column":14},"end":{"line":217,"column":51}}},"10":{"name":"(anonymous_10)","line":261,"loc":{"start":{"line":261,"column":19},"end":{"line":261,"column":56}}},"11":{"name":"(anonymous_11)","line":295,"loc":{"start":{"line":295,"column":50},"end":{"line":295,"column":65}}},"12":{"name":"(anonymous_12)","line":298,"loc":{"start":{"line":298,"column":15},"end":{"line":298,"column":26}}},"13":{"name":"(anonymous_13)","line":309,"loc":{"start":{"line":309,"column":11},"end":{"line":309,"column":22}}},"14":{"name":"(anonymous_14)","line":318,"loc":{"start":{"line":318,"column":17},"end":{"line":318,"column":28}}},"15":{"name":"(anonymous_15)","line":325,"loc":{"start":{"line":325,"column":17},"end":{"line":325,"column":28}}},"16":{"name":"(anonymous_16)","line":332,"loc":{"start":{"line":332,"column":17},"end":{"line":332,"column":28}}},"17":{"name":"(anonymous_17)","line":339,"loc":{"start":{"line":339,"column":19},"end":{"line":339,"column":32}}},"18":{"name":"(anonymous_18)","line":346,"loc":{"start":{"line":346,"column":18},"end":{"line":346,"column":31}}},"19":{"name":"(anonymous_19)","line":353,"loc":{"start":{"line":353,"column":16},"end":{"line":353,"column":29}}},"20":{"name":"build","line":361,"loc":{"start":{"line":361,"column":2},"end":{"line":361,"column":23}}},"21":{"name":"create","line":370,"loc":{"start":{"line":370,"column":2},"end":{"line":370,"column":37}}},"22":{"name":"destroyAll","line":391,"loc":{"start":{"line":391,"column":2},"end":{"line":391,"column":42}}},"23":{"name":"updateAll","line":409,"loc":{"start":{"line":409,"column":2},"end":{"line":409,"column":47}}},"24":{"name":"findById","line":429,"loc":{"start":{"line":429,"column":2},"end":{"line":429,"column":45}}},"25":{"name":"findOne","line":459,"loc":{"start":{"line":459,"column":2},"end":{"line":459,"column":40}}},"26":{"name":"count","line":477,"loc":{"start":{"line":477,"column":2},"end":{"line":477,"column":37}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":56}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":60}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":50}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":46}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":26}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}},"10":{"start":{"line":21,"column":0},"end":{"line":29,"column":1}},"11":{"start":{"line":22,"column":2},"end":{"line":22,"column":38}},"12":{"start":{"line":23,"column":2},"end":{"line":23,"column":40}},"13":{"start":{"line":24,"column":2},"end":{"line":24,"column":60}},"14":{"start":{"line":25,"column":2},"end":{"line":25,"column":30}},"15":{"start":{"line":26,"column":2},"end":{"line":26,"column":34}},"16":{"start":{"line":27,"column":2},"end":{"line":27,"column":42}},"17":{"start":{"line":28,"column":2},"end":{"line":28,"column":42}},"18":{"start":{"line":31,"column":0},"end":{"line":46,"column":2}},"19":{"start":{"line":32,"column":2},"end":{"line":32,"column":14}},"20":{"start":{"line":33,"column":2},"end":{"line":37,"column":3}},"21":{"start":{"line":34,"column":4},"end":{"line":34,"column":72}},"22":{"start":{"line":36,"column":4},"end":{"line":36,"column":27}},"23":{"start":{"line":38,"column":2},"end":{"line":44,"column":3}},"24":{"start":{"line":39,"column":4},"end":{"line":39,"column":49}},"25":{"start":{"line":40,"column":4},"end":{"line":40,"column":83}},"26":{"start":{"line":41,"column":4},"end":{"line":41,"column":47}},"27":{"start":{"line":42,"column":4},"end":{"line":42,"column":28}},"28":{"start":{"line":43,"column":4},"end":{"line":43,"column":25}},"29":{"start":{"line":45,"column":2},"end":{"line":45,"column":17}},"30":{"start":{"line":57,"column":0},"end":{"line":141,"column":2}},"31":{"start":{"line":58,"column":2},"end":{"line":58,"column":23}},"32":{"start":{"line":59,"column":2},"end":{"line":59,"column":22}},"33":{"start":{"line":61,"column":2},"end":{"line":61,"column":22}},"34":{"start":{"line":62,"column":2},"end":{"line":62,"column":28}},"35":{"start":{"line":63,"column":2},"end":{"line":63,"column":62}},"36":{"start":{"line":64,"column":2},"end":{"line":73,"column":3}},"37":{"start":{"line":67,"column":4},"end":{"line":67,"column":23}},"38":{"start":{"line":68,"column":4},"end":{"line":68,"column":17}},"39":{"start":{"line":69,"column":4},"end":{"line":69,"column":30}},"40":{"start":{"line":70,"column":9},"end":{"line":73,"column":3}},"41":{"start":{"line":71,"column":4},"end":{"line":71,"column":17}},"42":{"start":{"line":72,"column":4},"end":{"line":72,"column":17}},"43":{"start":{"line":74,"column":2},"end":{"line":74,"column":26}},"44":{"start":{"line":75,"column":2},"end":{"line":83,"column":3}},"45":{"start":{"line":76,"column":4},"end":{"line":82,"column":5}},"46":{"start":{"line":77,"column":6},"end":{"line":77,"column":36}},"47":{"start":{"line":79,"column":6},"end":{"line":79,"column":33}},"48":{"start":{"line":80,"column":6},"end":{"line":80,"column":27}},"49":{"start":{"line":81,"column":6},"end":{"line":81,"column":26}},"50":{"start":{"line":84,"column":2},"end":{"line":84,"column":43}},"51":{"start":{"line":86,"column":2},"end":{"line":139,"column":3}},"52":{"start":{"line":89,"column":4},"end":{"line":89,"column":76}},"53":{"start":{"line":90,"column":4},"end":{"line":90,"column":49}},"54":{"start":{"line":95,"column":4},"end":{"line":97,"column":49}},"55":{"start":{"line":98,"column":4},"end":{"line":103,"column":5}},"56":{"start":{"line":99,"column":6},"end":{"line":99,"column":34}},"57":{"start":{"line":101,"column":6},"end":{"line":101,"column":38}},"58":{"start":{"line":102,"column":6},"end":{"line":102,"column":34}},"59":{"start":{"line":105,"column":4},"end":{"line":135,"column":7}},"60":{"start":{"line":106,"column":6},"end":{"line":109,"column":7}},"61":{"start":{"line":107,"column":8},"end":{"line":107,"column":36}},"62":{"start":{"line":108,"column":8},"end":{"line":108,"column":44}},"63":{"start":{"line":111,"column":6},"end":{"line":134,"column":7}},"64":{"start":{"line":112,"column":8},"end":{"line":112,"column":74}},"65":{"start":{"line":113,"column":8},"end":{"line":113,"column":41}},"66":{"start":{"line":116,"column":8},"end":{"line":123,"column":10}},"67":{"start":{"line":117,"column":10},"end":{"line":117,"column":34}},"68":{"start":{"line":118,"column":10},"end":{"line":118,"column":64}},"69":{"start":{"line":119,"column":10},"end":{"line":121,"column":12}},"70":{"start":{"line":122,"column":10},"end":{"line":122,"column":29}},"71":{"start":{"line":124,"column":8},"end":{"line":129,"column":9}},"72":{"start":{"line":125,"column":10},"end":{"line":125,"column":44}},"73":{"start":{"line":127,"column":10},"end":{"line":127,"column":34}},"74":{"start":{"line":128,"column":10},"end":{"line":128,"column":68}},"75":{"start":{"line":131,"column":8},"end":{"line":131,"column":44}},"76":{"start":{"line":133,"column":8},"end":{"line":133,"column":22}},"77":{"start":{"line":138,"column":4},"end":{"line":138,"column":43}},"78":{"start":{"line":140,"column":2},"end":{"line":140,"column":20}},"79":{"start":{"line":148,"column":0},"end":{"line":150,"column":2}},"80":{"start":{"line":149,"column":2},"end":{"line":149,"column":33}},"81":{"start":{"line":161,"column":0},"end":{"line":496,"column":1}},"82":{"start":{"line":163,"column":2},"end":{"line":165,"column":3}},"83":{"start":{"line":164,"column":4},"end":{"line":164,"column":24}},"84":{"start":{"line":169,"column":2},"end":{"line":175,"column":3}},"85":{"start":{"line":170,"column":4},"end":{"line":170,"column":34}},"86":{"start":{"line":171,"column":9},"end":{"line":175,"column":3}},"87":{"start":{"line":172,"column":4},"end":{"line":174,"column":5}},"88":{"start":{"line":173,"column":6},"end":{"line":173,"column":34}},"89":{"start":{"line":177,"column":2},"end":{"line":177,"column":26}},"90":{"start":{"line":179,"column":2},"end":{"line":179,"column":74}},"91":{"start":{"line":180,"column":2},"end":{"line":188,"column":5}},"92":{"start":{"line":190,"column":2},"end":{"line":196,"column":3}},"93":{"start":{"line":191,"column":4},"end":{"line":191,"column":34}},"94":{"start":{"line":192,"column":4},"end":{"line":192,"column":34}},"95":{"start":{"line":194,"column":4},"end":{"line":194,"column":58}},"96":{"start":{"line":195,"column":4},"end":{"line":195,"column":46}},"97":{"start":{"line":199,"column":2},"end":{"line":306,"column":5}},"98":{"start":{"line":214,"column":6},"end":{"line":214,"column":53}},"99":{"start":{"line":215,"column":6},"end":{"line":215,"column":22}},"100":{"start":{"line":217,"column":6},"end":{"line":249,"column":8}},"101":{"start":{"line":218,"column":8},"end":{"line":248,"column":9}},"102":{"start":{"line":219,"column":10},"end":{"line":223,"column":11}},"103":{"start":{"line":220,"column":12},"end":{"line":220,"column":33}},"104":{"start":{"line":221,"column":17},"end":{"line":223,"column":11}},"105":{"start":{"line":222,"column":12},"end":{"line":222,"column":48}},"106":{"start":{"line":225,"column":10},"end":{"line":235,"column":11}},"107":{"start":{"line":228,"column":12},"end":{"line":228,"column":31}},"108":{"start":{"line":229,"column":12},"end":{"line":229,"column":25}},"109":{"start":{"line":230,"column":12},"end":{"line":230,"column":38}},"110":{"start":{"line":231,"column":17},"end":{"line":235,"column":11}},"111":{"start":{"line":233,"column":12},"end":{"line":233,"column":25}},"112":{"start":{"line":234,"column":12},"end":{"line":234,"column":25}},"113":{"start":{"line":236,"column":10},"end":{"line":236,"column":34}},"114":{"start":{"line":239,"column":10},"end":{"line":246,"column":11}},"115":{"start":{"line":241,"column":12},"end":{"line":244,"column":14}},"116":{"start":{"line":245,"column":12},"end":{"line":245,"column":31}},"117":{"start":{"line":247,"column":10},"end":{"line":247,"column":80}},"118":{"start":{"line":251,"column":6},"end":{"line":251,"column":25}},"119":{"start":{"line":252,"column":6},"end":{"line":253,"column":57}},"120":{"start":{"line":255,"column":6},"end":{"line":255,"column":45}},"121":{"start":{"line":256,"column":6},"end":{"line":259,"column":7}},"122":{"start":{"line":257,"column":8},"end":{"line":257,"column":60}},"123":{"start":{"line":258,"column":8},"end":{"line":258,"column":103}},"124":{"start":{"line":261,"column":6},"end":{"line":275,"column":8}},"125":{"start":{"line":262,"column":8},"end":{"line":272,"column":9}},"126":{"start":{"line":265,"column":10},"end":{"line":265,"column":29}},"127":{"start":{"line":266,"column":10},"end":{"line":266,"column":23}},"128":{"start":{"line":267,"column":10},"end":{"line":267,"column":29}},"129":{"start":{"line":268,"column":15},"end":{"line":272,"column":9}},"130":{"start":{"line":270,"column":10},"end":{"line":270,"column":23}},"131":{"start":{"line":271,"column":10},"end":{"line":271,"column":23}},"132":{"start":{"line":273,"column":8},"end":{"line":273,"column":32}},"133":{"start":{"line":274,"column":8},"end":{"line":274,"column":78}},"134":{"start":{"line":277,"column":6},"end":{"line":277,"column":22}},"135":{"start":{"line":278,"column":6},"end":{"line":278,"column":24}},"136":{"start":{"line":279,"column":6},"end":{"line":279,"column":30}},"137":{"start":{"line":280,"column":6},"end":{"line":280,"column":32}},"138":{"start":{"line":281,"column":6},"end":{"line":281,"column":28}},"139":{"start":{"line":282,"column":6},"end":{"line":282,"column":26}},"140":{"start":{"line":283,"column":6},"end":{"line":283,"column":22}},"141":{"start":{"line":285,"column":6},"end":{"line":287,"column":7}},"142":{"start":{"line":286,"column":8},"end":{"line":286,"column":48}},"143":{"start":{"line":289,"column":6},"end":{"line":289,"column":33}},"144":{"start":{"line":289,"column":24},"end":{"line":289,"column":33}},"145":{"start":{"line":295,"column":6},"end":{"line":303,"column":20}},"146":{"start":{"line":296,"column":8},"end":{"line":302,"column":11}},"147":{"start":{"line":299,"column":12},"end":{"line":299,"column":63}},"148":{"start":{"line":300,"column":12},"end":{"line":300,"column":21}},"149":{"start":{"line":304,"column":6},"end":{"line":304,"column":15}},"150":{"start":{"line":309,"column":2},"end":{"line":314,"column":4}},"151":{"start":{"line":311,"column":4},"end":{"line":311,"column":23}},"152":{"start":{"line":313,"column":4},"end":{"line":313,"column":35}},"153":{"start":{"line":316,"column":2},"end":{"line":316,"column":29}},"154":{"start":{"line":318,"column":2},"end":{"line":321,"column":4}},"155":{"start":{"line":319,"column":4},"end":{"line":319,"column":30}},"156":{"start":{"line":320,"column":4},"end":{"line":320,"column":35}},"157":{"start":{"line":323,"column":2},"end":{"line":323,"column":38}},"158":{"start":{"line":325,"column":2},"end":{"line":328,"column":4}},"159":{"start":{"line":326,"column":4},"end":{"line":326,"column":34}},"160":{"start":{"line":327,"column":4},"end":{"line":327,"column":35}},"161":{"start":{"line":330,"column":2},"end":{"line":330,"column":38}},"162":{"start":{"line":332,"column":2},"end":{"line":335,"column":4}},"163":{"start":{"line":333,"column":4},"end":{"line":333,"column":33}},"164":{"start":{"line":334,"column":4},"end":{"line":334,"column":35}},"165":{"start":{"line":337,"column":2},"end":{"line":337,"column":38}},"166":{"start":{"line":339,"column":2},"end":{"line":342,"column":4}},"167":{"start":{"line":340,"column":4},"end":{"line":340,"column":32}},"168":{"start":{"line":341,"column":4},"end":{"line":341,"column":35}},"169":{"start":{"line":344,"column":2},"end":{"line":344,"column":42}},"170":{"start":{"line":346,"column":2},"end":{"line":349,"column":4}},"171":{"start":{"line":347,"column":4},"end":{"line":347,"column":31}},"172":{"start":{"line":348,"column":4},"end":{"line":348,"column":35}},"173":{"start":{"line":351,"column":2},"end":{"line":351,"column":40}},"174":{"start":{"line":353,"column":2},"end":{"line":356,"column":4}},"175":{"start":{"line":354,"column":4},"end":{"line":354,"column":29}},"176":{"start":{"line":355,"column":4},"end":{"line":355,"column":35}},"177":{"start":{"line":358,"column":2},"end":{"line":358,"column":36}},"178":{"start":{"line":361,"column":2},"end":{"line":368,"column":3}},"179":{"start":{"line":362,"column":4},"end":{"line":362,"column":22}},"180":{"start":{"line":364,"column":4},"end":{"line":364,"column":61}},"181":{"start":{"line":365,"column":4},"end":{"line":365,"column":57}},"182":{"start":{"line":366,"column":4},"end":{"line":366,"column":54}},"183":{"start":{"line":367,"column":4},"end":{"line":367,"column":33}},"184":{"start":{"line":370,"column":2},"end":{"line":383,"column":3}},"185":{"start":{"line":371,"column":4},"end":{"line":380,"column":5}},"186":{"start":{"line":374,"column":6},"end":{"line":374,"column":16}},"187":{"start":{"line":375,"column":6},"end":{"line":375,"column":16}},"188":{"start":{"line":376,"column":11},"end":{"line":380,"column":5}},"189":{"start":{"line":378,"column":6},"end":{"line":378,"column":19}},"190":{"start":{"line":379,"column":6},"end":{"line":379,"column":19}},"191":{"start":{"line":381,"column":4},"end":{"line":381,"column":28}},"192":{"start":{"line":382,"column":4},"end":{"line":382,"column":46}},"193":{"start":{"line":391,"column":2},"end":{"line":407,"column":3}},"194":{"start":{"line":392,"column":4},"end":{"line":400,"column":5}},"195":{"start":{"line":394,"column":6},"end":{"line":394,"column":17}},"196":{"start":{"line":395,"column":6},"end":{"line":395,"column":17}},"197":{"start":{"line":396,"column":11},"end":{"line":400,"column":5}},"198":{"start":{"line":398,"column":6},"end":{"line":398,"column":19}},"199":{"start":{"line":399,"column":6},"end":{"line":399,"column":19}},"200":{"start":{"line":401,"column":4},"end":{"line":401,"column":28}},"201":{"start":{"line":403,"column":4},"end":{"line":403,"column":61}},"202":{"start":{"line":404,"column":4},"end":{"line":404,"column":58}},"203":{"start":{"line":405,"column":4},"end":{"line":405,"column":67}},"204":{"start":{"line":406,"column":4},"end":{"line":406,"column":61}},"205":{"start":{"line":409,"column":2},"end":{"line":427,"column":3}},"206":{"start":{"line":410,"column":4},"end":{"line":421,"column":5}},"207":{"start":{"line":413,"column":6},"end":{"line":413,"column":16}},"208":{"start":{"line":414,"column":6},"end":{"line":414,"column":19}},"209":{"start":{"line":415,"column":6},"end":{"line":415,"column":17}},"210":{"start":{"line":416,"column":6},"end":{"line":416,"column":19}},"211":{"start":{"line":417,"column":11},"end":{"line":421,"column":5}},"212":{"start":{"line":419,"column":6},"end":{"line":419,"column":19}},"213":{"start":{"line":420,"column":6},"end":{"line":420,"column":19}},"214":{"start":{"line":422,"column":4},"end":{"line":422,"column":28}},"215":{"start":{"line":423,"column":4},"end":{"line":423,"column":61}},"216":{"start":{"line":424,"column":4},"end":{"line":424,"column":58}},"217":{"start":{"line":425,"column":4},"end":{"line":425,"column":67}},"218":{"start":{"line":426,"column":4},"end":{"line":426,"column":66}},"219":{"start":{"line":429,"column":2},"end":{"line":457,"column":3}},"220":{"start":{"line":430,"column":4},"end":{"line":447,"column":5}},"221":{"start":{"line":431,"column":6},"end":{"line":435,"column":7}},"222":{"start":{"line":433,"column":8},"end":{"line":433,"column":20}},"223":{"start":{"line":434,"column":8},"end":{"line":434,"column":20}},"224":{"start":{"line":436,"column":11},"end":{"line":447,"column":5}},"225":{"start":{"line":437,"column":6},"end":{"line":446,"column":7}},"226":{"start":{"line":439,"column":8},"end":{"line":439,"column":21}},"227":{"start":{"line":440,"column":8},"end":{"line":440,"column":21}},"228":{"start":{"line":441,"column":8},"end":{"line":445,"column":9}},"229":{"start":{"line":443,"column":10},"end":{"line":443,"column":27}},"230":{"start":{"line":444,"column":10},"end":{"line":444,"column":22}},"231":{"start":{"line":449,"column":4},"end":{"line":449,"column":28}},"232":{"start":{"line":450,"column":4},"end":{"line":450,"column":26}},"233":{"start":{"line":451,"column":4},"end":{"line":451,"column":61}},"234":{"start":{"line":452,"column":4},"end":{"line":452,"column":49}},"235":{"start":{"line":453,"column":4},"end":{"line":453,"column":28}},"236":{"start":{"line":454,"column":4},"end":{"line":454,"column":29}},"237":{"start":{"line":455,"column":4},"end":{"line":455,"column":38}},"238":{"start":{"line":456,"column":4},"end":{"line":456,"column":44}},"239":{"start":{"line":459,"column":2},"end":{"line":475,"column":3}},"240":{"start":{"line":460,"column":4},"end":{"line":469,"column":5}},"241":{"start":{"line":462,"column":6},"end":{"line":462,"column":18}},"242":{"start":{"line":463,"column":6},"end":{"line":463,"column":18}},"243":{"start":{"line":464,"column":6},"end":{"line":464,"column":19}},"244":{"start":{"line":465,"column":11},"end":{"line":469,"column":5}},"245":{"start":{"line":467,"column":6},"end":{"line":467,"column":19}},"246":{"start":{"line":468,"column":6},"end":{"line":468,"column":19}},"247":{"start":{"line":470,"column":4},"end":{"line":470,"column":28}},"248":{"start":{"line":471,"column":4},"end":{"line":471,"column":61}},"249":{"start":{"line":472,"column":4},"end":{"line":472,"column":58}},"250":{"start":{"line":473,"column":4},"end":{"line":473,"column":55}},"251":{"start":{"line":474,"column":4},"end":{"line":474,"column":52}},"252":{"start":{"line":477,"column":2},"end":{"line":493,"column":3}},"253":{"start":{"line":478,"column":4},"end":{"line":486,"column":5}},"254":{"start":{"line":480,"column":6},"end":{"line":480,"column":17}},"255":{"start":{"line":481,"column":6},"end":{"line":481,"column":17}},"256":{"start":{"line":482,"column":11},"end":{"line":486,"column":5}},"257":{"start":{"line":484,"column":6},"end":{"line":484,"column":19}},"258":{"start":{"line":485,"column":6},"end":{"line":485,"column":19}},"259":{"start":{"line":487,"column":4},"end":{"line":487,"column":28}},"260":{"start":{"line":489,"column":4},"end":{"line":489,"column":61}},"261":{"start":{"line":490,"column":4},"end":{"line":490,"column":58}},"262":{"start":{"line":491,"column":4},"end":{"line":491,"column":67}},"263":{"start":{"line":492,"column":4},"end":{"line":492,"column":56}},"264":{"start":{"line":495,"column":2},"end":{"line":495,"column":20}}},"branchMap":{"1":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":17},"end":{"line":24,"column":35}},{"start":{"line":24,"column":39},"end":{"line":24,"column":59}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":17},"end":{"line":27,"column":35}},{"start":{"line":27,"column":39},"end":{"line":27,"column":41}}]},"3":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":17},"end":{"line":28,"column":35}},{"start":{"line":28,"column":39},"end":{"line":28,"column":41}}]},"4":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"5":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":14},"end":{"line":34,"column":55}},{"start":{"line":34,"column":59},"end":{"line":34,"column":71}}]},"6":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"7":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":28},"end":{"line":40,"column":42}},{"start":{"line":40,"column":45},"end":{"line":40,"column":71}}]},"8":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":27},"end":{"line":41,"column":30}},{"start":{"line":41,"column":33},"end":{"line":41,"column":46}}]},"9":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"10":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":41}},{"start":{"line":65,"column":4},"end":{"line":65,"column":25}},{"start":{"line":65,"column":29},"end":{"line":65,"column":45}}]},"11":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":9},"end":{"line":70,"column":9}},{"start":{"line":70,"column":9},"end":{"line":70,"column":9}}]},"12":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":13},"end":{"line":70,"column":42}},{"start":{"line":70,"column":46},"end":{"line":70,"column":62}}]},"13":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":19}},{"start":{"line":74,"column":23},"end":{"line":74,"column":25}}]},"14":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"15":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"16":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":7},"end":{"line":84,"column":9}},{"start":{"line":84,"column":13},"end":{"line":84,"column":42}}]},"17":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"18":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":29}},{"start":{"line":86,"column":33},"end":{"line":86,"column":75}},{"start":{"line":87,"column":6},"end":{"line":87,"column":19}}]},"19":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":30},"end":{"line":95,"column":44}},{"start":{"line":96,"column":8},"end":{"line":96,"column":37}},{"start":{"line":97,"column":8},"end":{"line":97,"column":48}}]},"20":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"21":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":6},"end":{"line":106,"column":6}},{"start":{"line":106,"column":6},"end":{"line":106,"column":6}}]},"22":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":10},"end":{"line":106,"column":14}},{"start":{"line":106,"column":18},"end":{"line":106,"column":29}}]},"23":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":6},"end":{"line":111,"column":6}},{"start":{"line":111,"column":6},"end":{"line":111,"column":6}}]},"24":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":124,"column":8}},{"start":{"line":124,"column":8},"end":{"line":124,"column":8}}]},"25":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"26":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":2},"end":{"line":169,"column":2}},{"start":{"line":169,"column":2},"end":{"line":169,"column":2}}]},"27":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":9},"end":{"line":171,"column":9}},{"start":{"line":171,"column":9},"end":{"line":171,"column":9}}]},"28":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"29":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":12},"end":{"line":177,"column":19}},{"start":{"line":177,"column":23},"end":{"line":177,"column":25}}]},"30":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":18},"end":{"line":179,"column":43}},{"start":{"line":179,"column":48},"end":{"line":179,"column":64}},{"start":{"line":179,"column":68},"end":{"line":179,"column":73}}]},"31":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":2},"end":{"line":190,"column":2}},{"start":{"line":190,"column":2},"end":{"line":190,"column":2}}]},"32":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":17},"end":{"line":191,"column":27}},{"start":{"line":191,"column":31},"end":{"line":191,"column":33}}]},"33":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":29},"end":{"line":194,"column":51}},{"start":{"line":194,"column":55},"end":{"line":194,"column":57}}]},"34":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":8}},{"start":{"line":218,"column":8},"end":{"line":218,"column":8}}]},"35":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":10},"end":{"line":219,"column":10}},{"start":{"line":219,"column":10},"end":{"line":219,"column":10}}]},"36":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":17},"end":{"line":221,"column":17}},{"start":{"line":221,"column":17},"end":{"line":221,"column":17}}]},"37":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":10},"end":{"line":225,"column":10}},{"start":{"line":225,"column":10},"end":{"line":225,"column":10}}]},"38":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":14},"end":{"line":225,"column":49}},{"start":{"line":226,"column":14},"end":{"line":226,"column":35}},{"start":{"line":226,"column":39},"end":{"line":226,"column":55}}]},"39":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":17},"end":{"line":231,"column":17}},{"start":{"line":231,"column":17},"end":{"line":231,"column":17}}]},"40":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":21},"end":{"line":231,"column":50}},{"start":{"line":231,"column":54},"end":{"line":231,"column":70}}]},"41":{"line":236,"type":"binary-expr","locations":[{"start":{"line":236,"column":20},"end":{"line":236,"column":27}},{"start":{"line":236,"column":31},"end":{"line":236,"column":33}}]},"42":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":10},"end":{"line":239,"column":10}},{"start":{"line":239,"column":10},"end":{"line":239,"column":10}}]},"43":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":14},"end":{"line":239,"column":30}},{"start":{"line":240,"column":12},"end":{"line":240,"column":34}},{"start":{"line":240,"column":38},"end":{"line":240,"column":71}}]},"44":{"line":252,"type":"cond-expr","locations":[{"start":{"line":253,"column":8},"end":{"line":253,"column":36}},{"start":{"line":253,"column":39},"end":{"line":253,"column":56}}]},"45":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":6},"end":{"line":256,"column":6}},{"start":{"line":256,"column":6},"end":{"line":256,"column":6}}]},"46":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":25},"end":{"line":258,"column":28}},{"start":{"line":258,"column":32},"end":{"line":258,"column":43}},{"start":{"line":258,"column":47},"end":{"line":258,"column":68}},{"start":{"line":258,"column":72},"end":{"line":258,"column":102}}]},"47":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":8},"end":{"line":262,"column":8}},{"start":{"line":262,"column":8},"end":{"line":262,"column":8}}]},"48":{"line":262,"type":"binary-expr","locations":[{"start":{"line":262,"column":12},"end":{"line":262,"column":47}},{"start":{"line":263,"column":12},"end":{"line":263,"column":33}},{"start":{"line":263,"column":37},"end":{"line":263,"column":53}}]},"49":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":15},"end":{"line":268,"column":15}},{"start":{"line":268,"column":15},"end":{"line":268,"column":15}}]},"50":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":19},"end":{"line":268,"column":48}},{"start":{"line":268,"column":52},"end":{"line":268,"column":68}}]},"51":{"line":273,"type":"binary-expr","locations":[{"start":{"line":273,"column":18},"end":{"line":273,"column":25}},{"start":{"line":273,"column":29},"end":{"line":273,"column":31}}]},"52":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":6},"end":{"line":289,"column":6}},{"start":{"line":289,"column":6},"end":{"line":289,"column":6}}]},"53":{"line":362,"type":"binary-expr","locations":[{"start":{"line":362,"column":11},"end":{"line":362,"column":15}},{"start":{"line":362,"column":19},"end":{"line":362,"column":21}}]},"54":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":17},"end":{"line":365,"column":28}},{"start":{"line":365,"column":32},"end":{"line":365,"column":49}},{"start":{"line":365,"column":54},"end":{"line":365,"column":56}}]},"55":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":4},"end":{"line":371,"column":4}},{"start":{"line":371,"column":4},"end":{"line":371,"column":4}}]},"56":{"line":371,"type":"binary-expr","locations":[{"start":{"line":371,"column":8},"end":{"line":371,"column":34}},{"start":{"line":372,"column":6},"end":{"line":372,"column":27}},{"start":{"line":372,"column":31},"end":{"line":372,"column":47}}]},"57":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":11},"end":{"line":376,"column":11}},{"start":{"line":376,"column":11},"end":{"line":376,"column":11}}]},"58":{"line":376,"type":"binary-expr","locations":[{"start":{"line":376,"column":15},"end":{"line":376,"column":44}},{"start":{"line":376,"column":48},"end":{"line":376,"column":64}}]},"59":{"line":381,"type":"binary-expr","locations":[{"start":{"line":381,"column":14},"end":{"line":381,"column":21}},{"start":{"line":381,"column":25},"end":{"line":381,"column":27}}]},"60":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":4},"end":{"line":392,"column":4}},{"start":{"line":392,"column":4},"end":{"line":392,"column":4}}]},"61":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":11},"end":{"line":396,"column":11}},{"start":{"line":396,"column":11},"end":{"line":396,"column":11}}]},"62":{"line":396,"type":"binary-expr","locations":[{"start":{"line":396,"column":15},"end":{"line":396,"column":44}},{"start":{"line":396,"column":48},"end":{"line":396,"column":64}}]},"63":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":14},"end":{"line":401,"column":21}},{"start":{"line":401,"column":25},"end":{"line":401,"column":27}}]},"64":{"line":404,"type":"binary-expr","locations":[{"start":{"line":404,"column":18},"end":{"line":404,"column":29}},{"start":{"line":404,"column":33},"end":{"line":404,"column":50}},{"start":{"line":404,"column":55},"end":{"line":404,"column":57}}]},"65":{"line":405,"type":"binary-expr","locations":[{"start":{"line":405,"column":53},"end":{"line":405,"column":58}},{"start":{"line":405,"column":62},"end":{"line":405,"column":64}}]},"66":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":4},"end":{"line":410,"column":4}},{"start":{"line":410,"column":4},"end":{"line":410,"column":4}}]},"67":{"line":410,"type":"binary-expr","locations":[{"start":{"line":410,"column":8},"end":{"line":410,"column":34}},{"start":{"line":411,"column":6},"end":{"line":411,"column":27}},{"start":{"line":411,"column":31},"end":{"line":411,"column":47}}]},"68":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":11},"end":{"line":417,"column":11}},{"start":{"line":417,"column":11},"end":{"line":417,"column":11}}]},"69":{"line":417,"type":"binary-expr","locations":[{"start":{"line":417,"column":15},"end":{"line":417,"column":44}},{"start":{"line":417,"column":48},"end":{"line":417,"column":64}}]},"70":{"line":422,"type":"binary-expr","locations":[{"start":{"line":422,"column":14},"end":{"line":422,"column":21}},{"start":{"line":422,"column":25},"end":{"line":422,"column":27}}]},"71":{"line":424,"type":"binary-expr","locations":[{"start":{"line":424,"column":18},"end":{"line":424,"column":29}},{"start":{"line":424,"column":33},"end":{"line":424,"column":50}},{"start":{"line":424,"column":55},"end":{"line":424,"column":57}}]},"72":{"line":425,"type":"binary-expr","locations":[{"start":{"line":425,"column":53},"end":{"line":425,"column":58}},{"start":{"line":425,"column":62},"end":{"line":425,"column":64}}]},"73":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":4},"end":{"line":430,"column":4}},{"start":{"line":430,"column":4},"end":{"line":430,"column":4}}]},"74":{"line":430,"type":"binary-expr","locations":[{"start":{"line":430,"column":8},"end":{"line":430,"column":29}},{"start":{"line":430,"column":33},"end":{"line":430,"column":49}}]},"75":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":6},"end":{"line":431,"column":6}},{"start":{"line":431,"column":6},"end":{"line":431,"column":6}}]},"76":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":11},"end":{"line":436,"column":11}},{"start":{"line":436,"column":11},"end":{"line":436,"column":11}}]},"77":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":6},"end":{"line":437,"column":6}},{"start":{"line":437,"column":6},"end":{"line":437,"column":6}}]},"78":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":8},"end":{"line":441,"column":8}},{"start":{"line":441,"column":8},"end":{"line":441,"column":8}}]},"79":{"line":441,"type":"binary-expr","locations":[{"start":{"line":441,"column":12},"end":{"line":441,"column":38}},{"start":{"line":441,"column":42},"end":{"line":441,"column":76}}]},"80":{"line":441,"type":"binary-expr","locations":[{"start":{"line":441,"column":44},"end":{"line":441,"column":58}},{"start":{"line":441,"column":62},"end":{"line":441,"column":75}}]},"81":{"line":449,"type":"binary-expr","locations":[{"start":{"line":449,"column":14},"end":{"line":449,"column":21}},{"start":{"line":449,"column":25},"end":{"line":449,"column":27}}]},"82":{"line":450,"type":"binary-expr","locations":[{"start":{"line":450,"column":13},"end":{"line":450,"column":19}},{"start":{"line":450,"column":23},"end":{"line":450,"column":25}}]},"83":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":4},"end":{"line":460,"column":4}},{"start":{"line":460,"column":4},"end":{"line":460,"column":4}}]},"84":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":11},"end":{"line":465,"column":11}},{"start":{"line":465,"column":11},"end":{"line":465,"column":11}}]},"85":{"line":465,"type":"binary-expr","locations":[{"start":{"line":465,"column":15},"end":{"line":465,"column":44}},{"start":{"line":465,"column":48},"end":{"line":465,"column":64}}]},"86":{"line":470,"type":"binary-expr","locations":[{"start":{"line":470,"column":14},"end":{"line":470,"column":21}},{"start":{"line":470,"column":25},"end":{"line":470,"column":27}}]},"87":{"line":472,"type":"binary-expr","locations":[{"start":{"line":472,"column":18},"end":{"line":472,"column":29}},{"start":{"line":472,"column":33},"end":{"line":472,"column":50}},{"start":{"line":472,"column":55},"end":{"line":472,"column":57}}]},"88":{"line":473,"type":"binary-expr","locations":[{"start":{"line":473,"column":41},"end":{"line":473,"column":47}},{"start":{"line":473,"column":51},"end":{"line":473,"column":53}}]},"89":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":4},"end":{"line":478,"column":4}},{"start":{"line":478,"column":4},"end":{"line":478,"column":4}}]},"90":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":11},"end":{"line":482,"column":11}},{"start":{"line":482,"column":11},"end":{"line":482,"column":11}}]},"91":{"line":482,"type":"binary-expr","locations":[{"start":{"line":482,"column":15},"end":{"line":482,"column":44}},{"start":{"line":482,"column":48},"end":{"line":482,"column":64}}]},"92":{"line":487,"type":"binary-expr","locations":[{"start":{"line":487,"column":14},"end":{"line":487,"column":21}},{"start":{"line":487,"column":25},"end":{"line":487,"column":27}}]},"93":{"line":490,"type":"binary-expr","locations":[{"start":{"line":490,"column":18},"end":{"line":490,"column":29}},{"start":{"line":490,"column":33},"end":{"line":490,"column":50}},{"start":{"line":490,"column":55},"end":{"line":490,"column":57}}]},"94":{"line":491,"type":"binary-expr","locations":[{"start":{"line":491,"column":53},"end":{"line":491,"column":58}},{"start":{"line":491,"column":62},"end":{"line":491,"column":64}}]}},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","'use strict';","","var i8n = require('inflection');","var utils = require('./utils');","var defineCachedRelations = utils.defineCachedRelations;","var setScopeValuesFromWhere = utils.setScopeValuesFromWhere;","var mergeQuery = utils.mergeQuery;","var DefaultModelBaseClass = require('./model.js');","var collectTargetIds = utils.collectTargetIds;","var idName = utils.idName;","","/**"," * Module exports"," */","exports.defineScope = defineScope;","","function ScopeDefinition(definition) {","  this.isStatic = definition.isStatic;","  this.modelFrom = definition.modelFrom;","  this.modelTo = definition.modelTo || definition.modelFrom;","  this.name = definition.name;","  this.params = definition.params;","  this.methods = definition.methods || {};","  this.options = definition.options || {};","}","","ScopeDefinition.prototype.targetModel = function(receiver) {","  var modelTo;","  if (typeof this.options.modelTo === 'function') {","    modelTo = this.options.modelTo.call(this, receiver) || this.modelTo;","  } else {","    modelTo = this.modelTo;","  }","  if (!(modelTo.prototype instanceof DefaultModelBaseClass)) {","    var msg = 'Invalid target model for scope `';","    msg += (this.isStatic ? this.modelFrom : this.modelFrom.constructor).modelName;","    msg += this.isStatic ? '.' : '.prototype.';","    msg += this.name + '`.';","    throw new Error(msg);","  }","  return modelTo;","};","","/*!"," * Find related model instances"," * @param {*} receiver The target model class/prototype"," * @param {Object|Function} scopeParams"," * @param {Boolean|Object} [condOrRefresh] true for refresh or object as a filter"," * @param {Object} [options]"," * @param {Function} cb"," * @returns {*}"," */","ScopeDefinition.prototype.related = function(receiver, scopeParams, condOrRefresh, options, cb) {","  var name = this.name;","  var self = receiver;","","  var actualCond = {};","  var actualRefresh = false;","  var saveOnCache = receiver instanceof DefaultModelBaseClass;","  if (typeof condOrRefresh === 'function' &&","    options === undefined && cb === undefined) {","    // related(receiver, scopeParams, cb)","    cb = condOrRefresh;","    options = {};","    condOrRefresh = undefined;","  } else if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","  options = options || {};","  if (condOrRefresh !== undefined) {","    if (typeof condOrRefresh === 'boolean') {","      actualRefresh = condOrRefresh;","    } else {","      actualCond = condOrRefresh;","      actualRefresh = true;","      saveOnCache = false;","    }","  }","  cb = cb || utils.createPromiseCallback();","","  if (!self.__cachedRelations || self.__cachedRelations[name] === undefined ||","      actualRefresh) {","    // It either doesn't hit the cache or refresh is required","    var params = mergeQuery(actualCond, scopeParams, {nestedInclude: true});","    var targetModel = this.targetModel(receiver);","","    // If there is a through model","    // run another query to apply filter on relatedModel(targetModel)","    // see github.com/strongloop/loopback-datasource-juggler/issues/166","    var scopeOnRelatedModel = params.collect &&","        params.include.scope !== null &&","        typeof params.include.scope === 'object';","    if (scopeOnRelatedModel) {","      var filter = params.include;","      // The filter applied on relatedModel","      var queryRelated = filter.scope;","      delete params.include.scope;","    };","","    targetModel.find(params, options, function(err, data) {","      if (!err && saveOnCache) {","        defineCachedRelations(self);","        self.__cachedRelations[name] = data;","      }","","      if (scopeOnRelatedModel === true) {","        var relatedModel = targetModel.relations[filter.relation].modelTo;","        var IdKey = idName(relatedModel);","","        // Merge queryRelated filter and targetId filter","        var buildWhere = function() {","          var IdKeyCondition = {};","          IdKeyCondition[IdKey] = collectTargetIds(data, IdKey);","          var mergedWhere = {","            and: [IdKeyCondition, queryRelated.where],","          };","          return mergedWhere;","        };","        if (queryRelated.where !== undefined) {","          queryRelated.where = buildWhere();","        } else {","          queryRelated.where = {};","          queryRelated.where[IdKey] = collectTargetIds(data, IdKey);","        }","","        relatedModel.find(queryRelated, cb);","      } else {","        cb(err, data);","      }","    });","  } else {","    // Return from cache","    cb(null, self.__cachedRelations[name]);","  }","  return cb.promise;","};","","/**"," * Define a scope method"," * @param {String} name of the method"," * @param {Function} function to define"," */","ScopeDefinition.prototype.defineMethod = function(name, fn) {","  return this.methods[name] = fn;","};","","/**"," * Define a scope to the class"," * @param {Model} cls The class where the scope method is added"," * @param {Model} targetClass The class that a query to run against"," * @param {String} name The name of the scope"," * @param {Object|Function} params The parameters object for the query or a function"," * to return the query object"," * @param methods An object of methods keyed by the method name to be bound to the class"," */","function defineScope(cls, targetClass, name, params, methods, options) {","  // collect meta info about scope","  if (!cls._scopeMeta) {","    cls._scopeMeta = {};","  }","","  // only makes sense to add scope in meta if base and target classes","  // are same","  if (cls === targetClass) {","    cls._scopeMeta[name] = params;","  } else if (targetClass) {","    if (!targetClass._scopeMeta) {","      targetClass._scopeMeta = {};","    }","  }","","  options = options || {};","  // Check if the cls is the class itself or its prototype","  var isStatic = (typeof cls === 'function') || options.isStatic || false;","  var definition = new ScopeDefinition({","    isStatic: isStatic,","    modelFrom: cls,","    modelTo: targetClass,","    name: name,","    params: params,","    methods: methods,","    options: options,","  });","","  if (isStatic) {","    cls.scopes = cls.scopes || {};","    cls.scopes[name] = definition;","  } else {","    cls.constructor.scopes = cls.constructor.scopes || {};","    cls.constructor.scopes[name] = definition;","  }","","  // Define a property for the scope","  Object.defineProperty(cls, name, {","    enumerable: false,","    configurable: true,","    /**","     * This defines a property for the scope. For example, user.accounts or","     * User.vips. Please note the cls can be the model class or prototype of","     * the model class.","     *","     * The property value is function. It can be used to query the scope,","     * such as user.accounts(condOrRefresh, cb) or User.vips(cb). The value","     * can also have child properties for create/build/delete. For example,","     * user.accounts.create(act, cb).","     *","     */","    get: function() {","      var targetModel = definition.targetModel(this);","      var self = this;","","      var f = function(condOrRefresh, options, cb) {","        if (arguments.length === 0) {","          if (typeof f.value === 'function') {","            return f.value(self);","          } else if (self.__cachedRelations) {","            return self.__cachedRelations[name];","          }","        } else {","          if (typeof condOrRefresh === 'function' &&","              options === undefined && cb === undefined) {","            // customer.orders(cb)","            cb = condOrRefresh;","            options = {};","            condOrRefresh = undefined;","          } else if (typeof options === 'function' && cb === undefined) {","            // customer.orders(condOrRefresh, cb);","            cb = options;","            options = {};","          }","          options = options || {};","          // Check if there is a through model","          // see https://github.com/strongloop/loopback/issues/1076","          if (f._scope.collect &&","            condOrRefresh !== null && typeof condOrRefresh === 'object') {","            f._scope.include = {","              relation: f._scope.collect,","              scope: condOrRefresh,","            };","            condOrRefresh = {};","          }","          return definition.related(self, f._scope, condOrRefresh, options, cb);","        }","      };","","      f._receiver = this;","      f._scope = typeof definition.params === 'function' ?","        definition.params.call(self) : definition.params;","","      f._targetClass = targetModel.modelName;","      if (f._scope.collect) {","        const rel = targetModel.relations[f._scope.collect];","        f._targetClass = rel && rel.modelTo && rel.modelTo.modelName || i8n.camelize(f._scope.collect);","      }","","      f.getAsync = function(condOrRefresh, options, cb) {","        if (typeof condOrRefresh === 'function' &&","            options === undefined && cb === undefined) {","          // customer.orders.getAsync(cb)","          cb = condOrRefresh;","          options = {};","          condOrRefresh = {};","        } else if (typeof options === 'function' && cb === undefined) {","          // customer.orders.getAsync(condOrRefresh, cb);","          cb = options;","          options = {};","        }","        options = options || {};","        return definition.related(self, f._scope, condOrRefresh, options, cb);","      };","","      f.build = build;","      f.create = create;","      f.updateAll = updateAll;","      f.destroyAll = destroyAll;","      f.findById = findById;","      f.findOne = findOne;","      f.count = count;","","      for (var i in definition.methods) {","        f[i] = definition.methods[i].bind(self);","      }","","      if (!targetClass) return f;","","      // Define scope-chaining, such as","      // Station.scope('active', {where: {isActive: true}});","      // Station.scope('subway', {where: {isUndeground: true}});","      // Station.active.subway(cb);","      Object.keys(targetClass._scopeMeta).forEach(function(name) {","        Object.defineProperty(f, name, {","          enumerable: false,","          get: function() {","            mergeQuery(f._scope, targetModel._scopeMeta[name]);","            return f;","          },","        });","      }.bind(self));","      return f;","    },","  });","","  // Wrap the property into a function for remoting","  var fn = function() {","    // primaryObject.scopeName, such as user.accounts","    var f = this[name];","    // set receiver to be the scope property whose value is a function","    f.apply(this[name], arguments);","  };","","  cls['__get__' + name] = fn;","","  var fnCreate = function() {","    var f = this[name].create;","    f.apply(this[name], arguments);","  };","","  cls['__create__' + name] = fnCreate;","","  var fnDelete = function() {","    var f = this[name].destroyAll;","    f.apply(this[name], arguments);","  };","","  cls['__delete__' + name] = fnDelete;","","  var fnUpdate = function() {","    var f = this[name].updateAll;","    f.apply(this[name], arguments);","  };","","  cls['__update__' + name] = fnUpdate;","","  var fnFindById = function(cb) {","    var f = this[name].findById;","    f.apply(this[name], arguments);","  };","","  cls['__findById__' + name] = fnFindById;","","  var fnFindOne = function(cb) {","    var f = this[name].findOne;","    f.apply(this[name], arguments);","  };","","  cls['__findOne__' + name] = fnFindOne;","","  var fnCount = function(cb) {","    var f = this[name].count;","    f.apply(this[name], arguments);","  };","","  cls['__count__' + name] = fnCount;","","  // and it should have create/build methods with binded thisModelNameId param","  function build(data) {","    data = data || {};","    // Find all fixed property values for the scope","    var targetModel = definition.targetModel(this._receiver);","    var where = (this._scope && this._scope.where) || {};","    setScopeValuesFromWhere(data, where, targetModel);","    return new targetModel(data);","  }","","  function create(data, options, cb) {","    if (typeof data === 'function' &&","      options === undefined && cb === undefined) {","      // create(cb)","      cb = data;","      data = {};","    } else if (typeof options === 'function' && cb === undefined) {","      // create(data, cb)","      cb = options;","      options = {};","    }","    options = options || {};","    return this.build(data).save(options, cb);","  }","","  /*","   Callback","   - The callback will be called after all elements are destroyed","   - For every destroy call which results in an error","   - If fetching the Elements on which destroyAll is called results in an error","   */","  function destroyAll(where, options, cb) {","    if (typeof where === 'function') {","      // destroyAll(cb)","      cb = where;","      where = {};","    } else if (typeof options === 'function' && cb === undefined) {","      // destroyAll(where, cb)","      cb = options;","      options = {};","    }","    options = options || {};","","    var targetModel = definition.targetModel(this._receiver);","    var scoped = (this._scope && this._scope.where) || {};","    var filter = mergeQuery({where: scoped}, {where: where || {}});","    return targetModel.destroyAll(filter.where, options, cb);","  }","","  function updateAll(where, data, options, cb) {","    if (typeof data === 'function' &&","      options === undefined && cb === undefined) {","      // updateAll(data, cb)","      cb = data;","      data = where;","      where = {};","      options = {};","    } else if (typeof options === 'function' && cb === undefined) {","      // updateAll(where, data, cb)","      cb = options;","      options = {};","    }","    options = options || {};","    var targetModel = definition.targetModel(this._receiver);","    var scoped = (this._scope && this._scope.where) || {};","    var filter = mergeQuery({where: scoped}, {where: where || {}});","    return targetModel.updateAll(filter.where, data, options, cb);","  }","","  function findById(id, filter, options, cb) {","    if (options === undefined && cb === undefined) {","      if (typeof filter === 'function') {","        // findById(id, cb)","        cb = filter;","        filter = {};","      }","    } else if (cb === undefined) {","      if (typeof options === 'function') {","        // findById(id, query, cb)","        cb = options;","        options = {};","        if (typeof filter === 'object' && !(filter.include || filter.fields)) {","          // If filter doesn't have include or fields, assuming it's options","          options = filter;","          filter = {};","        }","      }","    }","","    options = options || {};","    filter = filter || {};","    var targetModel = definition.targetModel(this._receiver);","    var idName = targetModel.definition.idName();","    var query = {where: {}};","    query.where[idName] = id;","    query = mergeQuery(query, filter);","    return this.findOne(query, options, cb);","  }","","  function findOne(filter, options, cb) {","    if (typeof filter === 'function') {","      // findOne(cb)","      cb = filter;","      filter = {};","      options = {};","    } else if (typeof options === 'function' && cb === undefined) {","      // findOne(filter, cb)","      cb = options;","      options = {};","    }","    options = options || {};","    var targetModel = definition.targetModel(this._receiver);","    var scoped = (this._scope && this._scope.where) || {};","    filter = mergeQuery({where: scoped}, filter || {});","    return targetModel.findOne(filter, options, cb);","  }","","  function count(where, options, cb) {","    if (typeof where === 'function') {","      // count(cb)","      cb = where;","      where = {};","    } else if (typeof options === 'function' && cb === undefined) {","      // count(where, cb)","      cb = options;","      options = {};","    }","    options = options || {};","","    var targetModel = definition.targetModel(this._receiver);","    var scoped = (this._scope && this._scope.where) || {};","    var filter = mergeQuery({where: scoped}, {where: where || {}});","    return targetModel.count(filter.where, options, cb);","  }","","  return definition;","}",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"19":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"31":1,"32":0,"33":0,"34":0,"36":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"45":0,"57":1,"58":0,"59":0,"61":0,"62":0,"63":0,"64":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"74":0,"75":0,"76":0,"77":0,"79":0,"80":0,"81":0,"84":0,"86":0,"89":0,"90":0,"95":0,"98":0,"99":0,"101":0,"102":0,"105":0,"106":0,"107":0,"108":0,"111":0,"112":0,"113":0,"116":0,"117":0,"118":0,"119":0,"122":0,"124":0,"125":0,"127":0,"128":0,"131":0,"133":0,"138":0,"140":0,"148":1,"149":0,"161":1,"163":0,"164":0,"169":0,"170":0,"171":0,"172":0,"173":0,"177":0,"179":0,"180":0,"190":0,"191":0,"192":0,"194":0,"195":0,"199":0,"214":0,"215":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"225":0,"228":0,"229":0,"230":0,"231":0,"233":0,"234":0,"236":0,"239":0,"241":0,"245":0,"247":0,"251":0,"252":0,"255":0,"256":0,"257":0,"258":0,"261":0,"262":0,"265":0,"266":0,"267":0,"268":0,"270":0,"271":0,"273":0,"274":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"285":0,"286":0,"289":0,"295":0,"296":0,"299":0,"300":0,"304":0,"309":0,"311":0,"313":0,"316":0,"318":0,"319":0,"320":0,"323":0,"325":0,"326":0,"327":0,"330":0,"332":0,"333":0,"334":0,"337":0,"339":0,"340":0,"341":0,"344":0,"346":0,"347":0,"348":0,"351":0,"353":0,"354":0,"355":0,"358":0,"361":1,"362":0,"364":0,"365":0,"366":0,"367":0,"370":1,"371":0,"374":0,"375":0,"376":0,"378":0,"379":0,"381":0,"382":0,"391":1,"392":0,"394":0,"395":0,"396":0,"398":0,"399":0,"401":0,"403":0,"404":0,"405":0,"406":0,"409":1,"410":0,"413":0,"414":0,"415":0,"416":0,"417":0,"419":0,"420":0,"422":0,"423":0,"424":0,"425":0,"426":0,"429":1,"430":0,"431":0,"433":0,"434":0,"436":0,"437":0,"439":0,"440":0,"441":0,"443":0,"444":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"459":1,"460":0,"462":0,"463":0,"464":0,"465":0,"467":0,"468":0,"470":0,"471":0,"472":0,"473":0,"474":0,"477":1,"478":0,"480":0,"481":0,"482":0,"484":0,"485":0,"487":0,"489":0,"490":0,"491":0,"492":0,"495":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/connectors/memory.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/connectors/memory.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":1,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":1,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":1,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":1,"218":0,"219":0,"220":1,"221":0,"222":0,"223":1,"224":0,"225":0,"226":0,"227":1,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":1,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":1,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":1,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":1,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":1,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":1,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":1,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":1,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":1,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":1,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":1,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":1,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":1,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":1,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":1,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":1,"529":0,"530":1,"531":0,"532":0,"533":1,"534":1,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":1,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0,0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0,0,0],"126":[0,0,0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0},"fnMap":{"1":{"name":"initializeDataSource","line":24,"loc":{"start":{"line":24,"column":21},"end":{"line":24,"column":73}}},"2":{"name":"Memory","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":29}}},"3":{"name":"(anonymous_3)","line":50,"loc":{"start":{"line":50,"column":36},"end":{"line":50,"column":47}}},"4":{"name":"(anonymous_4)","line":54,"loc":{"start":{"line":54,"column":28},"end":{"line":54,"column":39}}},"5":{"name":"(anonymous_5)","line":58,"loc":{"start":{"line":58,"column":27},"end":{"line":58,"column":46}}},"6":{"name":"serialize","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":24}}},"7":{"name":"deserialize","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":28}}},"8":{"name":"(anonymous_8)","line":84,"loc":{"start":{"line":84,"column":33},"end":{"line":84,"column":49}}},"9":{"name":"(anonymous_9)","line":92,"loc":{"start":{"line":92,"column":34},"end":{"line":92,"column":50}}},"10":{"name":"(anonymous_10)","line":97,"loc":{"start":{"line":97,"column":30},"end":{"line":97,"column":51}}},"11":{"name":"(anonymous_11)","line":103,"loc":{"start":{"line":103,"column":33},"end":{"line":103,"column":54}}},"12":{"name":"(anonymous_12)","line":113,"loc":{"start":{"line":113,"column":34},"end":{"line":113,"column":45}}},"13":{"name":"(anonymous_13)","line":117,"loc":{"start":{"line":117,"column":33},"end":{"line":117,"column":54}}},"14":{"name":"(anonymous_14)","line":118,"loc":{"start":{"line":118,"column":38},"end":{"line":118,"column":49}}},"15":{"name":"(anonymous_15)","line":127,"loc":{"start":{"line":127,"column":33},"end":{"line":127,"column":47}}},"16":{"name":"(anonymous_16)","line":137,"loc":{"start":{"line":137,"column":11},"end":{"line":137,"column":31}}},"17":{"name":"(anonymous_17)","line":143,"loc":{"start":{"line":143,"column":36},"end":{"line":143,"column":50}}},"18":{"name":"(anonymous_18)","line":159,"loc":{"start":{"line":159,"column":32},"end":{"line":159,"column":57}}},"19":{"name":"(anonymous_19)","line":178,"loc":{"start":{"line":178,"column":32},"end":{"line":178,"column":51}}},"20":{"name":"(anonymous_20)","line":201,"loc":{"start":{"line":201,"column":30},"end":{"line":201,"column":57}}},"21":{"name":"(anonymous_21)","line":220,"loc":{"start":{"line":220,"column":21},"end":{"line":220,"column":32}}},"22":{"name":"(anonymous_22)","line":224,"loc":{"start":{"line":224,"column":21},"end":{"line":224,"column":32}}},"23":{"name":"defineModel","line":230,"loc":{"start":{"line":230,"column":26},"end":{"line":230,"column":59}}},"24":{"name":"(anonymous_24)","line":236,"loc":{"start":{"line":236,"column":31},"end":{"line":236,"column":57}}},"25":{"name":"create","line":268,"loc":{"start":{"line":268,"column":26},"end":{"line":268,"column":74}}},"26":{"name":"(anonymous_26)","line":270,"loc":{"start":{"line":270,"column":32},"end":{"line":270,"column":50}}},"27":{"name":"(anonymous_27)","line":272,"loc":{"start":{"line":272,"column":30},"end":{"line":272,"column":41}}},"28":{"name":"(anonymous_28)","line":280,"loc":{"start":{"line":280,"column":34},"end":{"line":280,"column":75}}},"29":{"name":"(anonymous_29)","line":282,"loc":{"start":{"line":282,"column":60},"end":{"line":282,"column":82}}},"30":{"name":"(anonymous_30)","line":284,"loc":{"start":{"line":284,"column":38},"end":{"line":284,"column":58}}},"31":{"name":"(anonymous_31)","line":288,"loc":{"start":{"line":288,"column":40},"end":{"line":288,"column":58}}},"32":{"name":"(anonymous_32)","line":297,"loc":{"start":{"line":297,"column":35},"end":{"line":297,"column":83}}},"33":{"name":"(anonymous_33)","line":303,"loc":{"start":{"line":303,"column":41},"end":{"line":303,"column":59}}},"34":{"name":"(anonymous_34)","line":304,"loc":{"start":{"line":304,"column":39},"end":{"line":304,"column":50}}},"35":{"name":"(anonymous_35)","line":305,"loc":{"start":{"line":305,"column":26},"end":{"line":305,"column":44}}},"36":{"name":"(anonymous_36)","line":313,"loc":{"start":{"line":313,"column":65},"end":{"line":313,"column":85}}},"37":{"name":"(anonymous_37)","line":317,"loc":{"start":{"line":317,"column":21},"end":{"line":317,"column":32}}},"38":{"name":"(anonymous_38)","line":326,"loc":{"start":{"line":326,"column":32},"end":{"line":326,"column":72}}},"39":{"name":"(anonymous_39)","line":333,"loc":{"start":{"line":333,"column":41},"end":{"line":333,"column":59}}},"40":{"name":"(anonymous_40)","line":335,"loc":{"start":{"line":335,"column":26},"end":{"line":335,"column":44}}},"41":{"name":"(anonymous_41)","line":343,"loc":{"start":{"line":343,"column":28},"end":{"line":343,"column":39}}},"42":{"name":"(anonymous_42)","line":348,"loc":{"start":{"line":348,"column":66},"end":{"line":348,"column":87}}},"43":{"name":"(anonymous_43)","line":349,"loc":{"start":{"line":349,"column":21},"end":{"line":349,"column":32}}},"44":{"name":"save","line":356,"loc":{"start":{"line":356,"column":24},"end":{"line":356,"column":70}}},"45":{"name":"(anonymous_45)","line":366,"loc":{"start":{"line":366,"column":24},"end":{"line":366,"column":38}}},"46":{"name":"exists","line":371,"loc":{"start":{"line":371,"column":26},"end":{"line":371,"column":72}}},"47":{"name":"(anonymous_47)","line":372,"loc":{"start":{"line":372,"column":19},"end":{"line":372,"column":30}}},"48":{"name":"find","line":377,"loc":{"start":{"line":377,"column":24},"end":{"line":377,"column":68}}},"49":{"name":"(anonymous_49)","line":378,"loc":{"start":{"line":378,"column":19},"end":{"line":378,"column":30}}},"50":{"name":"destroy","line":383,"loc":{"start":{"line":383,"column":27},"end":{"line":383,"column":74}}},"51":{"name":"(anonymous_51)","line":389,"loc":{"start":{"line":389,"column":26},"end":{"line":389,"column":48}}},"52":{"name":"getValue","line":416,"loc":{"start":{"line":416,"column":0},"end":{"line":416,"column":29}}},"53":{"name":"(anonymous_53)","line":431,"loc":{"start":{"line":431,"column":44},"end":{"line":431,"column":68}}},"54":{"name":"(anonymous_54)","line":432,"loc":{"start":{"line":432,"column":54},"end":{"line":432,"column":68}}},"55":{"name":"(anonymous_55)","line":449,"loc":{"start":{"line":449,"column":21},"end":{"line":449,"column":38}}},"56":{"name":"sorting","line":484,"loc":{"start":{"line":484,"column":2},"end":{"line":484,"column":25}}},"57":{"name":"all","line":504,"loc":{"start":{"line":504,"column":23},"end":{"line":504,"column":70}}},"58":{"name":"(anonymous_58)","line":508,"loc":{"start":{"line":508,"column":19},"end":{"line":508,"column":30}}},"59":{"name":"applyFilter","line":517,"loc":{"start":{"line":517,"column":0},"end":{"line":517,"column":29}}},"60":{"name":"(anonymous_60)","line":523,"loc":{"start":{"line":523,"column":9},"end":{"line":523,"column":23}}},"61":{"name":"(anonymous_61)","line":524,"loc":{"start":{"line":524,"column":22},"end":{"line":524,"column":36}}},"62":{"name":"(anonymous_62)","line":528,"loc":{"start":{"line":528,"column":36},"end":{"line":528,"column":51}}},"63":{"name":"(anonymous_63)","line":533,"loc":{"start":{"line":533,"column":35},"end":{"line":533,"column":50}}},"64":{"name":"(anonymous_64)","line":550,"loc":{"start":{"line":550,"column":26},"end":{"line":550,"column":41}}},"65":{"name":"toRegExp","line":580,"loc":{"start":{"line":580,"column":2},"end":{"line":580,"column":29}}},"66":{"name":"test","line":611,"loc":{"start":{"line":611,"column":2},"end":{"line":611,"column":32}}},"67":{"name":"compare","line":697,"loc":{"start":{"line":697,"column":2},"end":{"line":697,"column":31}}},"68":{"name":"testInEquality","line":719,"loc":{"start":{"line":719,"column":2},"end":{"line":719,"column":40}}},"69":{"name":"destroyAll","line":736,"loc":{"start":{"line":736,"column":30},"end":{"line":736,"column":83}}},"70":{"name":"(anonymous_70)","line":742,"loc":{"start":{"line":742,"column":31},"end":{"line":742,"column":44}}},"71":{"name":"count","line":755,"loc":{"start":{"line":755,"column":25},"end":{"line":755,"column":73}}},"72":{"name":"(anonymous_72)","line":760,"loc":{"start":{"line":760,"column":20},"end":{"line":760,"column":33}}},"73":{"name":"(anonymous_73)","line":765,"loc":{"start":{"line":765,"column":19},"end":{"line":765,"column":30}}},"74":{"name":"updateAll","line":771,"loc":{"start":{"line":771,"column":31},"end":{"line":771,"column":83}}},"75":{"name":"(anonymous_75)","line":780,"loc":{"start":{"line":780,"column":20},"end":{"line":780,"column":39}}},"76":{"name":"(anonymous_76)","line":791,"loc":{"start":{"line":791,"column":7},"end":{"line":791,"column":21}}},"77":{"name":"updateAttributes","line":797,"loc":{"start":{"line":797,"column":36},"end":{"line":797,"column":92}}},"78":{"name":"(anonymous_78)","line":822,"loc":{"start":{"line":822,"column":31},"end":{"line":822,"column":70}}},"79":{"name":"(anonymous_79)","line":826,"loc":{"start":{"line":826,"column":28},"end":{"line":826,"column":39}}},"80":{"name":"(anonymous_80)","line":837,"loc":{"start":{"line":837,"column":28},"end":{"line":837,"column":39}}},"81":{"name":"(anonymous_81)","line":850,"loc":{"start":{"line":850,"column":32},"end":{"line":850,"column":46}}},"82":{"name":"(anonymous_82)","line":855,"loc":{"start":{"line":855,"column":35},"end":{"line":855,"column":76}}},"83":{"name":"(anonymous_83)","line":867,"loc":{"start":{"line":867,"column":41},"end":{"line":867,"column":59}}},"84":{"name":"(anonymous_84)","line":868,"loc":{"start":{"line":868,"column":39},"end":{"line":868,"column":50}}},"85":{"name":"(anonymous_85)","line":869,"loc":{"start":{"line":869,"column":26},"end":{"line":869,"column":44}}},"86":{"name":"(anonymous_86)","line":877,"loc":{"start":{"line":877,"column":24},"end":{"line":877,"column":38}}},"87":{"name":"(anonymous_87)","line":882,"loc":{"start":{"line":882,"column":31},"end":{"line":882,"column":42}}},"88":{"name":"(anonymous_88)","line":886,"loc":{"start":{"line":886,"column":24},"end":{"line":886,"column":43}}},"89":{"name":"(anonymous_89)","line":891,"loc":{"start":{"line":891,"column":35},"end":{"line":891,"column":52}}},"90":{"name":"(anonymous_90)","line":895,"loc":{"start":{"line":895,"column":31},"end":{"line":895,"column":52}}},"91":{"name":"(anonymous_91)","line":912,"loc":{"start":{"line":912,"column":36},"end":{"line":912,"column":48}}},"92":{"name":"(anonymous_92)","line":917,"loc":{"start":{"line":917,"column":28},"end":{"line":917,"column":39}}},"93":{"name":"(anonymous_93)","line":923,"loc":{"start":{"line":923,"column":17},"end":{"line":923,"column":29}}},"94":{"name":"merge","line":929,"loc":{"start":{"line":929,"column":0},"end":{"line":929,"column":29}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":56}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":32}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":23}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":58}},"9":{"start":{"line":24,"column":0},"end":{"line":28,"column":2}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":63}},"11":{"start":{"line":27,"column":2},"end":{"line":27,"column":31}},"12":{"start":{"line":30,"column":0},"end":{"line":30,"column":24}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":34}},"14":{"start":{"line":33,"column":0},"end":{"line":46,"column":1}},"15":{"start":{"line":34,"column":2},"end":{"line":45,"column":3}},"16":{"start":{"line":35,"column":4},"end":{"line":35,"column":30}},"17":{"start":{"line":36,"column":4},"end":{"line":36,"column":25}},"18":{"start":{"line":37,"column":4},"end":{"line":37,"column":21}},"19":{"start":{"line":38,"column":4},"end":{"line":38,"column":59}},"20":{"start":{"line":39,"column":4},"end":{"line":39,"column":29}},"21":{"start":{"line":41,"column":4},"end":{"line":41,"column":31}},"22":{"start":{"line":42,"column":4},"end":{"line":42,"column":20}},"23":{"start":{"line":43,"column":4},"end":{"line":43,"column":18}},"24":{"start":{"line":44,"column":4},"end":{"line":44,"column":59}},"25":{"start":{"line":48,"column":0},"end":{"line":48,"column":33}},"26":{"start":{"line":50,"column":0},"end":{"line":52,"column":2}},"27":{"start":{"line":51,"column":2},"end":{"line":51,"column":16}},"28":{"start":{"line":54,"column":0},"end":{"line":56,"column":2}},"29":{"start":{"line":55,"column":2},"end":{"line":55,"column":35}},"30":{"start":{"line":58,"column":0},"end":{"line":64,"column":2}},"31":{"start":{"line":59,"column":2},"end":{"line":63,"column":3}},"32":{"start":{"line":60,"column":4},"end":{"line":60,"column":38}},"33":{"start":{"line":62,"column":4},"end":{"line":62,"column":32}},"34":{"start":{"line":66,"column":0},"end":{"line":71,"column":1}},"35":{"start":{"line":67,"column":2},"end":{"line":69,"column":3}},"36":{"start":{"line":68,"column":4},"end":{"line":68,"column":15}},"37":{"start":{"line":70,"column":2},"end":{"line":70,"column":29}},"38":{"start":{"line":73,"column":0},"end":{"line":82,"column":1}},"39":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"40":{"start":{"line":75,"column":4},"end":{"line":75,"column":17}},"41":{"start":{"line":77,"column":2},"end":{"line":81,"column":3}},"42":{"start":{"line":78,"column":4},"end":{"line":78,"column":29}},"43":{"start":{"line":80,"column":4},"end":{"line":80,"column":17}},"44":{"start":{"line":84,"column":0},"end":{"line":90,"column":2}},"45":{"start":{"line":85,"column":2},"end":{"line":85,"column":39}},"46":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"47":{"start":{"line":87,"column":4},"end":{"line":87,"column":59}},"48":{"start":{"line":89,"column":2},"end":{"line":89,"column":15}},"49":{"start":{"line":92,"column":0},"end":{"line":95,"column":2}},"50":{"start":{"line":93,"column":2},"end":{"line":93,"column":29}},"51":{"start":{"line":94,"column":2},"end":{"line":94,"column":31}},"52":{"start":{"line":97,"column":0},"end":{"line":101,"column":2}},"53":{"start":{"line":98,"column":2},"end":{"line":98,"column":36}},"54":{"start":{"line":99,"column":2},"end":{"line":99,"column":52}},"55":{"start":{"line":99,"column":28},"end":{"line":99,"column":52}},"56":{"start":{"line":100,"column":2},"end":{"line":100,"column":27}},"57":{"start":{"line":103,"column":0},"end":{"line":107,"column":2}},"58":{"start":{"line":104,"column":2},"end":{"line":104,"column":36}},"59":{"start":{"line":105,"column":2},"end":{"line":105,"column":50}},"60":{"start":{"line":105,"column":28},"end":{"line":105,"column":50}},"61":{"start":{"line":106,"column":2},"end":{"line":106,"column":25}},"62":{"start":{"line":113,"column":0},"end":{"line":157,"column":2}},"63":{"start":{"line":114,"column":2},"end":{"line":114,"column":18}},"64":{"start":{"line":115,"column":2},"end":{"line":155,"column":3}},"65":{"start":{"line":117,"column":4},"end":{"line":154,"column":10}},"66":{"start":{"line":118,"column":6},"end":{"line":118,"column":52}},"67":{"start":{"line":119,"column":6},"end":{"line":119,"column":36}},"68":{"start":{"line":120,"column":6},"end":{"line":153,"column":7}},"69":{"start":{"line":122,"column":8},"end":{"line":125,"column":23}},"70":{"start":{"line":126,"column":8},"end":{"line":126,"column":53}},"71":{"start":{"line":127,"column":8},"end":{"line":131,"column":11}},"72":{"start":{"line":128,"column":10},"end":{"line":128,"column":54}},"73":{"start":{"line":129,"column":10},"end":{"line":129,"column":20}},"74":{"start":{"line":130,"column":10},"end":{"line":130,"column":35}},"75":{"start":{"line":132,"column":13},"end":{"line":153,"column":7}},"76":{"start":{"line":133,"column":8},"end":{"line":133,"column":55}},"77":{"start":{"line":134,"column":8},"end":{"line":148,"column":11}},"78":{"start":{"line":138,"column":10},"end":{"line":147,"column":11}},"79":{"start":{"line":139,"column":12},"end":{"line":139,"column":22}},"80":{"start":{"line":140,"column":12},"end":{"line":140,"column":26}},"81":{"start":{"line":142,"column":12},"end":{"line":142,"column":65}},"82":{"start":{"line":143,"column":12},"end":{"line":146,"column":15}},"83":{"start":{"line":144,"column":14},"end":{"line":144,"column":24}},"84":{"start":{"line":145,"column":14},"end":{"line":145,"column":28}},"85":{"start":{"line":150,"column":8},"end":{"line":150,"column":52}},"86":{"start":{"line":151,"column":8},"end":{"line":151,"column":18}},"87":{"start":{"line":152,"column":8},"end":{"line":152,"column":22}},"88":{"start":{"line":156,"column":2},"end":{"line":156,"column":24}},"89":{"start":{"line":159,"column":0},"end":{"line":176,"column":2}},"90":{"start":{"line":160,"column":2},"end":{"line":174,"column":3}},"91":{"start":{"line":161,"column":4},"end":{"line":165,"column":5}},"92":{"start":{"line":162,"column":6},"end":{"line":162,"column":41}},"93":{"start":{"line":164,"column":6},"end":{"line":164,"column":37}},"94":{"start":{"line":167,"column":4},"end":{"line":167,"column":30}},"95":{"start":{"line":168,"column":4},"end":{"line":168,"column":35}},"96":{"start":{"line":170,"column":4},"end":{"line":173,"column":5}},"97":{"start":{"line":171,"column":6},"end":{"line":171,"column":20}},"98":{"start":{"line":172,"column":6},"end":{"line":172,"column":22}},"99":{"start":{"line":175,"column":2},"end":{"line":175,"column":25}},"100":{"start":{"line":178,"column":0},"end":{"line":195,"column":2}},"101":{"start":{"line":179,"column":2},"end":{"line":179,"column":77}},"102":{"start":{"line":180,"column":2},"end":{"line":180,"column":67}},"103":{"start":{"line":182,"column":2},"end":{"line":194,"column":3}},"104":{"start":{"line":183,"column":4},"end":{"line":183,"column":50}},"105":{"start":{"line":184,"column":4},"end":{"line":187,"column":7}},"106":{"start":{"line":188,"column":9},"end":{"line":194,"column":3}},"107":{"start":{"line":189,"column":4},"end":{"line":189,"column":57}},"108":{"start":{"line":190,"column":4},"end":{"line":190,"column":24}},"109":{"start":{"line":191,"column":4},"end":{"line":191,"column":38}},"110":{"start":{"line":193,"column":4},"end":{"line":193,"column":31}},"111":{"start":{"line":201,"column":0},"end":{"line":228,"column":2}},"112":{"start":{"line":202,"column":2},"end":{"line":202,"column":32}},"113":{"start":{"line":203,"column":2},"end":{"line":203,"column":77}},"114":{"start":{"line":204,"column":2},"end":{"line":204,"column":67}},"115":{"start":{"line":205,"column":2},"end":{"line":227,"column":3}},"116":{"start":{"line":206,"column":4},"end":{"line":206,"column":51}},"117":{"start":{"line":208,"column":4},"end":{"line":212,"column":7}},"118":{"start":{"line":213,"column":9},"end":{"line":227,"column":3}},"119":{"start":{"line":215,"column":4},"end":{"line":218,"column":19}},"120":{"start":{"line":219,"column":4},"end":{"line":219,"column":52}},"121":{"start":{"line":220,"column":4},"end":{"line":222,"column":7}},"122":{"start":{"line":221,"column":6},"end":{"line":221,"column":41}},"123":{"start":{"line":224,"column":4},"end":{"line":226,"column":7}},"124":{"start":{"line":225,"column":6},"end":{"line":225,"column":41}},"125":{"start":{"line":230,"column":0},"end":{"line":234,"column":2}},"126":{"start":{"line":231,"column":2},"end":{"line":231,"column":81}},"127":{"start":{"line":232,"column":2},"end":{"line":232,"column":37}},"128":{"start":{"line":233,"column":2},"end":{"line":233,"column":50}},"129":{"start":{"line":233,"column":27},"end":{"line":233,"column":50}},"130":{"start":{"line":236,"column":0},"end":{"line":266,"column":2}},"131":{"start":{"line":239,"column":2},"end":{"line":239,"column":44}},"132":{"start":{"line":240,"column":2},"end":{"line":242,"column":3}},"133":{"start":{"line":241,"column":4},"end":{"line":241,"column":45}},"134":{"start":{"line":243,"column":2},"end":{"line":243,"column":53}},"135":{"start":{"line":244,"column":2},"end":{"line":247,"column":3}},"136":{"start":{"line":246,"column":4},"end":{"line":246,"column":19}},"137":{"start":{"line":248,"column":2},"end":{"line":248,"column":51}},"138":{"start":{"line":250,"column":2},"end":{"line":250,"column":45}},"139":{"start":{"line":251,"column":2},"end":{"line":251,"column":34}},"140":{"start":{"line":252,"column":2},"end":{"line":252,"column":77}},"141":{"start":{"line":253,"column":2},"end":{"line":253,"column":35}},"142":{"start":{"line":254,"column":2},"end":{"line":256,"column":3}},"143":{"start":{"line":255,"column":4},"end":{"line":255,"column":31}},"144":{"start":{"line":258,"column":2},"end":{"line":262,"column":3}},"145":{"start":{"line":259,"column":4},"end":{"line":259,"column":75}},"146":{"start":{"line":260,"column":4},"end":{"line":260,"column":42}},"147":{"start":{"line":261,"column":4},"end":{"line":261,"column":21}},"148":{"start":{"line":264,"column":2},"end":{"line":264,"column":47}},"149":{"start":{"line":265,"column":2},"end":{"line":265,"column":15}},"150":{"start":{"line":268,"column":0},"end":{"line":278,"column":2}},"151":{"start":{"line":269,"column":2},"end":{"line":269,"column":18}},"152":{"start":{"line":270,"column":2},"end":{"line":277,"column":5}},"153":{"start":{"line":271,"column":4},"end":{"line":275,"column":5}},"154":{"start":{"line":272,"column":6},"end":{"line":274,"column":9}},"155":{"start":{"line":273,"column":8},"end":{"line":273,"column":22}},"156":{"start":{"line":276,"column":4},"end":{"line":276,"column":34}},"157":{"start":{"line":280,"column":0},"end":{"line":294,"column":2}},"158":{"start":{"line":281,"column":2},"end":{"line":281,"column":18}},"159":{"start":{"line":282,"column":2},"end":{"line":293,"column":5}},"160":{"start":{"line":283,"column":4},"end":{"line":292,"column":5}},"161":{"start":{"line":284,"column":6},"end":{"line":286,"column":9}},"162":{"start":{"line":285,"column":8},"end":{"line":285,"column":52}},"163":{"start":{"line":288,"column":6},"end":{"line":291,"column":9}},"164":{"start":{"line":289,"column":8},"end":{"line":289,"column":41}},"165":{"start":{"line":290,"column":8},"end":{"line":290,"column":51}},"166":{"start":{"line":296,"column":0},"end":{"line":324,"column":2}},"167":{"start":{"line":298,"column":2},"end":{"line":298,"column":18}},"168":{"start":{"line":299,"column":2},"end":{"line":299,"column":38}},"169":{"start":{"line":300,"column":2},"end":{"line":300,"column":30}},"170":{"start":{"line":301,"column":2},"end":{"line":301,"column":59}},"171":{"start":{"line":302,"column":2},"end":{"line":310,"column":3}},"172":{"start":{"line":303,"column":4},"end":{"line":309,"column":7}},"173":{"start":{"line":304,"column":6},"end":{"line":304,"column":70}},"174":{"start":{"line":304,"column":15},"end":{"line":304,"column":70}},"175":{"start":{"line":304,"column":52},"end":{"line":304,"column":66}},"176":{"start":{"line":305,"column":6},"end":{"line":308,"column":9}},"177":{"start":{"line":306,"column":8},"end":{"line":306,"column":41}},"178":{"start":{"line":307,"column":8},"end":{"line":307,"column":71}},"179":{"start":{"line":311,"column":2},"end":{"line":323,"column":3}},"180":{"start":{"line":312,"column":4},"end":{"line":312,"column":47}},"181":{"start":{"line":313,"column":4},"end":{"line":315,"column":7}},"182":{"start":{"line":314,"column":6},"end":{"line":314,"column":50}},"183":{"start":{"line":317,"column":4},"end":{"line":322,"column":7}},"184":{"start":{"line":318,"column":6},"end":{"line":319,"column":51}},"185":{"start":{"line":320,"column":6},"end":{"line":320,"column":29}},"186":{"start":{"line":321,"column":6},"end":{"line":321,"column":22}},"187":{"start":{"line":326,"column":0},"end":{"line":354,"column":2}},"188":{"start":{"line":327,"column":2},"end":{"line":327,"column":18}},"189":{"start":{"line":328,"column":2},"end":{"line":328,"column":59}},"190":{"start":{"line":329,"column":2},"end":{"line":329,"column":23}},"191":{"start":{"line":331,"column":2},"end":{"line":340,"column":3}},"192":{"start":{"line":333,"column":4},"end":{"line":339,"column":7}},"193":{"start":{"line":334,"column":6},"end":{"line":334,"column":36}},"194":{"start":{"line":334,"column":15},"end":{"line":334,"column":36}},"195":{"start":{"line":335,"column":6},"end":{"line":338,"column":9}},"196":{"start":{"line":336,"column":8},"end":{"line":336,"column":41}},"197":{"start":{"line":337,"column":8},"end":{"line":337,"column":34}},"198":{"start":{"line":342,"column":2},"end":{"line":346,"column":3}},"199":{"start":{"line":343,"column":4},"end":{"line":345,"column":7}},"200":{"start":{"line":344,"column":6},"end":{"line":344,"column":35}},"201":{"start":{"line":348,"column":2},"end":{"line":353,"column":5}},"202":{"start":{"line":349,"column":4},"end":{"line":352,"column":7}},"203":{"start":{"line":350,"column":6},"end":{"line":350,"column":36}},"204":{"start":{"line":350,"column":15},"end":{"line":350,"column":36}},"205":{"start":{"line":351,"column":6},"end":{"line":351,"column":38}},"206":{"start":{"line":356,"column":0},"end":{"line":369,"column":2}},"207":{"start":{"line":357,"column":2},"end":{"line":357,"column":18}},"208":{"start":{"line":358,"column":2},"end":{"line":358,"column":40}},"209":{"start":{"line":359,"column":2},"end":{"line":359,"column":44}},"210":{"start":{"line":360,"column":2},"end":{"line":360,"column":61}},"211":{"start":{"line":361,"column":2},"end":{"line":361,"column":50}},"212":{"start":{"line":362,"column":2},"end":{"line":364,"column":3}},"213":{"start":{"line":363,"column":4},"end":{"line":363,"column":34}},"214":{"start":{"line":365,"column":2},"end":{"line":365,"column":47}},"215":{"start":{"line":366,"column":2},"end":{"line":368,"column":5}},"216":{"start":{"line":367,"column":4},"end":{"line":367,"column":73}},"217":{"start":{"line":371,"column":0},"end":{"line":375,"column":2}},"218":{"start":{"line":372,"column":2},"end":{"line":374,"column":16}},"219":{"start":{"line":373,"column":4},"end":{"line":373,"column":88}},"220":{"start":{"line":377,"column":0},"end":{"line":381,"column":2}},"221":{"start":{"line":378,"column":2},"end":{"line":380,"column":16}},"222":{"start":{"line":379,"column":4},"end":{"line":379,"column":99}},"223":{"start":{"line":383,"column":0},"end":{"line":387,"column":2}},"224":{"start":{"line":384,"column":2},"end":{"line":384,"column":42}},"225":{"start":{"line":385,"column":2},"end":{"line":385,"column":36}},"226":{"start":{"line":386,"column":2},"end":{"line":386,"column":53}},"227":{"start":{"line":389,"column":0},"end":{"line":414,"column":2}},"228":{"start":{"line":390,"column":2},"end":{"line":390,"column":25}},"229":{"start":{"line":390,"column":13},"end":{"line":390,"column":25}},"230":{"start":{"line":391,"column":2},"end":{"line":391,"column":27}},"231":{"start":{"line":392,"column":2},"end":{"line":392,"column":45}},"232":{"start":{"line":393,"column":2},"end":{"line":412,"column":3}},"233":{"start":{"line":394,"column":4},"end":{"line":394,"column":24}},"234":{"start":{"line":395,"column":4},"end":{"line":397,"column":5}},"235":{"start":{"line":396,"column":6},"end":{"line":396,"column":15}},"236":{"start":{"line":398,"column":4},"end":{"line":410,"column":5}},"237":{"start":{"line":399,"column":6},"end":{"line":409,"column":7}},"238":{"start":{"line":401,"column":10},"end":{"line":401,"column":66}},"239":{"start":{"line":402,"column":10},"end":{"line":402,"column":16}},"240":{"start":{"line":404,"column":10},"end":{"line":404,"column":29}},"241":{"start":{"line":405,"column":10},"end":{"line":405,"column":16}},"242":{"start":{"line":407,"column":10},"end":{"line":407,"column":28}},"243":{"start":{"line":408,"column":10},"end":{"line":408,"column":16}},"244":{"start":{"line":411,"column":4},"end":{"line":411,"column":20}},"245":{"start":{"line":413,"column":2},"end":{"line":413,"column":14}},"246":{"start":{"line":416,"column":0},"end":{"line":429,"column":1}},"247":{"start":{"line":417,"column":2},"end":{"line":419,"column":3}},"248":{"start":{"line":418,"column":4},"end":{"line":418,"column":21}},"249":{"start":{"line":420,"column":2},"end":{"line":420,"column":29}},"250":{"start":{"line":421,"column":2},"end":{"line":421,"column":16}},"251":{"start":{"line":422,"column":2},"end":{"line":427,"column":3}},"252":{"start":{"line":423,"column":4},"end":{"line":423,"column":23}},"253":{"start":{"line":424,"column":4},"end":{"line":426,"column":5}},"254":{"start":{"line":425,"column":6},"end":{"line":425,"column":17}},"255":{"start":{"line":428,"column":2},"end":{"line":428,"column":13}},"256":{"start":{"line":431,"column":0},"end":{"line":502,"column":2}},"257":{"start":{"line":432,"column":2},"end":{"line":434,"column":16}},"258":{"start":{"line":433,"column":4},"end":{"line":433,"column":59}},"259":{"start":{"line":436,"column":2},"end":{"line":481,"column":3}},"260":{"start":{"line":437,"column":4},"end":{"line":442,"column":5}},"261":{"start":{"line":438,"column":6},"end":{"line":438,"column":40}},"262":{"start":{"line":439,"column":6},"end":{"line":441,"column":7}},"263":{"start":{"line":440,"column":8},"end":{"line":440,"column":31}},"264":{"start":{"line":444,"column":4},"end":{"line":459,"column":5}},"265":{"start":{"line":445,"column":6},"end":{"line":445,"column":32}},"266":{"start":{"line":446,"column":6},"end":{"line":448,"column":7}},"267":{"start":{"line":447,"column":8},"end":{"line":447,"column":32}},"268":{"start":{"line":449,"column":6},"end":{"line":457,"column":9}},"269":{"start":{"line":450,"column":8},"end":{"line":450,"column":24}},"270":{"start":{"line":451,"column":8},"end":{"line":451,"column":43}},"271":{"start":{"line":452,"column":8},"end":{"line":455,"column":9}},"272":{"start":{"line":453,"column":10},"end":{"line":453,"column":48}},"273":{"start":{"line":454,"column":10},"end":{"line":454,"column":56}},"274":{"start":{"line":454,"column":43},"end":{"line":454,"column":56}},"275":{"start":{"line":456,"column":8},"end":{"line":456,"column":53}},"276":{"start":{"line":458,"column":6},"end":{"line":458,"column":47}},"277":{"start":{"line":461,"column":4},"end":{"line":461,"column":50}},"278":{"start":{"line":464,"column":4},"end":{"line":466,"column":5}},"279":{"start":{"line":465,"column":6},"end":{"line":465,"column":44}},"280":{"start":{"line":469,"column":4},"end":{"line":470,"column":48}},"281":{"start":{"line":470,"column":6},"end":{"line":470,"column":48}},"282":{"start":{"line":473,"column":4},"end":{"line":475,"column":5}},"283":{"start":{"line":474,"column":6},"end":{"line":474,"column":59}},"284":{"start":{"line":478,"column":4},"end":{"line":478,"column":49}},"285":{"start":{"line":479,"column":4},"end":{"line":479,"column":45}},"286":{"start":{"line":480,"column":4},"end":{"line":480,"column":44}},"287":{"start":{"line":482,"column":2},"end":{"line":482,"column":15}},"288":{"start":{"line":484,"column":2},"end":{"line":501,"column":3}},"289":{"start":{"line":485,"column":4},"end":{"line":485,"column":31}},"290":{"start":{"line":487,"column":4},"end":{"line":498,"column":5}},"291":{"start":{"line":488,"column":6},"end":{"line":488,"column":42}},"292":{"start":{"line":489,"column":6},"end":{"line":489,"column":42}},"293":{"start":{"line":490,"column":6},"end":{"line":490,"column":60}},"294":{"start":{"line":491,"column":6},"end":{"line":491,"column":60}},"295":{"start":{"line":493,"column":6},"end":{"line":497,"column":7}},"296":{"start":{"line":494,"column":8},"end":{"line":494,"column":35}},"297":{"start":{"line":495,"column":13},"end":{"line":497,"column":7}},"298":{"start":{"line":496,"column":8},"end":{"line":496,"column":36}},"299":{"start":{"line":500,"column":4},"end":{"line":500,"column":13}},"300":{"start":{"line":504,"column":0},"end":{"line":515,"column":2}},"301":{"start":{"line":505,"column":2},"end":{"line":505,"column":18}},"302":{"start":{"line":506,"column":2},"end":{"line":506,"column":59}},"303":{"start":{"line":508,"column":2},"end":{"line":514,"column":5}},"304":{"start":{"line":509,"column":4},"end":{"line":513,"column":5}},"305":{"start":{"line":510,"column":6},"end":{"line":510,"column":82}},"306":{"start":{"line":512,"column":6},"end":{"line":512,"column":28}},"307":{"start":{"line":517,"column":0},"end":{"line":734,"column":1}},"308":{"start":{"line":518,"column":2},"end":{"line":518,"column":27}},"309":{"start":{"line":519,"column":2},"end":{"line":521,"column":3}},"310":{"start":{"line":520,"column":4},"end":{"line":520,"column":17}},"311":{"start":{"line":522,"column":2},"end":{"line":522,"column":32}},"312":{"start":{"line":523,"column":2},"end":{"line":578,"column":4}},"313":{"start":{"line":524,"column":4},"end":{"line":577,"column":7}},"314":{"start":{"line":525,"column":6},"end":{"line":538,"column":7}},"315":{"start":{"line":526,"column":8},"end":{"line":537,"column":9}},"316":{"start":{"line":527,"column":10},"end":{"line":531,"column":11}},"317":{"start":{"line":528,"column":12},"end":{"line":530,"column":15}},"318":{"start":{"line":529,"column":14},"end":{"line":529,"column":53}},"319":{"start":{"line":532,"column":10},"end":{"line":536,"column":11}},"320":{"start":{"line":533,"column":12},"end":{"line":535,"column":15}},"321":{"start":{"line":534,"column":14},"end":{"line":534,"column":53}},"322":{"start":{"line":540,"column":6},"end":{"line":540,"column":37}},"323":{"start":{"line":543,"column":6},"end":{"line":555,"column":7}},"324":{"start":{"line":544,"column":8},"end":{"line":544,"column":33}},"325":{"start":{"line":547,"column":8},"end":{"line":549,"column":9}},"326":{"start":{"line":548,"column":10},"end":{"line":548,"column":22}},"327":{"start":{"line":550,"column":8},"end":{"line":554,"column":11}},"328":{"start":{"line":551,"column":10},"end":{"line":551,"column":35}},"329":{"start":{"line":552,"column":10},"end":{"line":552,"column":36}},"330":{"start":{"line":553,"column":10},"end":{"line":553,"column":44}},"331":{"start":{"line":557,"column":6},"end":{"line":559,"column":7}},"332":{"start":{"line":558,"column":8},"end":{"line":558,"column":20}},"333":{"start":{"line":563,"column":6},"end":{"line":563,"column":38}},"334":{"start":{"line":564,"column":6},"end":{"line":564,"column":53}},"335":{"start":{"line":565,"column":6},"end":{"line":574,"column":7}},"336":{"start":{"line":566,"column":8},"end":{"line":566,"column":36}},"337":{"start":{"line":567,"column":8},"end":{"line":567,"column":49}},"338":{"start":{"line":568,"column":8},"end":{"line":568,"column":45}},"339":{"start":{"line":569,"column":8},"end":{"line":573,"column":9}},"340":{"start":{"line":570,"column":10},"end":{"line":570,"column":55}},"341":{"start":{"line":571,"column":15},"end":{"line":573,"column":9}},"342":{"start":{"line":572,"column":10},"end":{"line":572,"column":50}},"343":{"start":{"line":576,"column":6},"end":{"line":576,"column":19}},"344":{"start":{"line":580,"column":2},"end":{"line":609,"column":3}},"345":{"start":{"line":581,"column":4},"end":{"line":583,"column":5}},"346":{"start":{"line":582,"column":6},"end":{"line":582,"column":21}},"347":{"start":{"line":584,"column":4},"end":{"line":584,"column":19}},"348":{"start":{"line":587,"column":4},"end":{"line":587,"column":69}},"349":{"start":{"line":588,"column":4},"end":{"line":607,"column":5}},"350":{"start":{"line":589,"column":6},"end":{"line":589,"column":35}},"351":{"start":{"line":590,"column":6},"end":{"line":606,"column":7}},"352":{"start":{"line":591,"column":8},"end":{"line":591,"column":12}},"353":{"start":{"line":592,"column":8},"end":{"line":594,"column":9}},"354":{"start":{"line":593,"column":10},"end":{"line":593,"column":37}},"355":{"start":{"line":595,"column":8},"end":{"line":595,"column":17}},"356":{"start":{"line":596,"column":13},"end":{"line":606,"column":7}},"357":{"start":{"line":597,"column":8},"end":{"line":597,"column":22}},"358":{"start":{"line":598,"column":13},"end":{"line":606,"column":7}},"359":{"start":{"line":599,"column":8},"end":{"line":599,"column":21}},"360":{"start":{"line":600,"column":13},"end":{"line":606,"column":7}},"361":{"start":{"line":601,"column":8},"end":{"line":601,"column":23}},"362":{"start":{"line":602,"column":13},"end":{"line":606,"column":7}},"363":{"start":{"line":603,"column":8},"end":{"line":603,"column":23}},"364":{"start":{"line":605,"column":8},"end":{"line":605,"column":22}},"365":{"start":{"line":608,"column":4},"end":{"line":608,"column":17}},"366":{"start":{"line":611,"column":2},"end":{"line":688,"column":3}},"367":{"start":{"line":612,"column":4},"end":{"line":614,"column":5}},"368":{"start":{"line":613,"column":6},"end":{"line":613,"column":34}},"369":{"start":{"line":616,"column":4},"end":{"line":618,"column":5}},"370":{"start":{"line":617,"column":6},"end":{"line":617,"column":23}},"371":{"start":{"line":620,"column":4},"end":{"line":684,"column":5}},"372":{"start":{"line":621,"column":6},"end":{"line":623,"column":7}},"373":{"start":{"line":622,"column":8},"end":{"line":622,"column":59}},"374":{"start":{"line":626,"column":6},"end":{"line":628,"column":7}},"375":{"start":{"line":627,"column":8},"end":{"line":627,"column":20}},"376":{"start":{"line":630,"column":6},"end":{"line":630,"column":12}},"377":{"start":{"line":631,"column":6},"end":{"line":639,"column":7}},"378":{"start":{"line":633,"column":8},"end":{"line":637,"column":9}},"379":{"start":{"line":634,"column":10},"end":{"line":636,"column":11}},"380":{"start":{"line":635,"column":12},"end":{"line":635,"column":24}},"381":{"start":{"line":638,"column":8},"end":{"line":638,"column":21}},"382":{"start":{"line":641,"column":6},"end":{"line":648,"column":7}},"383":{"start":{"line":642,"column":8},"end":{"line":646,"column":9}},"384":{"start":{"line":643,"column":10},"end":{"line":645,"column":11}},"385":{"start":{"line":644,"column":12},"end":{"line":644,"column":25}},"386":{"start":{"line":647,"column":8},"end":{"line":647,"column":20}},"387":{"start":{"line":650,"column":6},"end":{"line":652,"column":7}},"388":{"start":{"line":651,"column":8},"end":{"line":651,"column":49}},"389":{"start":{"line":654,"column":6},"end":{"line":657,"column":7}},"390":{"start":{"line":655,"column":8},"end":{"line":656,"column":58}},"391":{"start":{"line":659,"column":6},"end":{"line":679,"column":7}},"392":{"start":{"line":660,"column":8},"end":{"line":660,"column":84}},"393":{"start":{"line":661,"column":8},"end":{"line":663,"column":9}},"394":{"start":{"line":662,"column":10},"end":{"line":662,"column":32}},"395":{"start":{"line":664,"column":8},"end":{"line":666,"column":9}},"396":{"start":{"line":665,"column":10},"end":{"line":665,"column":48}},"397":{"start":{"line":668,"column":8},"end":{"line":670,"column":9}},"398":{"start":{"line":669,"column":10},"end":{"line":669,"column":47}},"399":{"start":{"line":672,"column":8},"end":{"line":674,"column":9}},"400":{"start":{"line":673,"column":10},"end":{"line":673,"column":53}},"401":{"start":{"line":676,"column":8},"end":{"line":678,"column":9}},"402":{"start":{"line":677,"column":10},"end":{"line":677,"column":52}},"403":{"start":{"line":681,"column":6},"end":{"line":683,"column":7}},"404":{"start":{"line":682,"column":8},"end":{"line":682,"column":20}},"405":{"start":{"line":686,"column":4},"end":{"line":687,"column":49}},"406":{"start":{"line":697,"column":2},"end":{"line":717,"column":3}},"407":{"start":{"line":698,"column":4},"end":{"line":701,"column":5}},"408":{"start":{"line":700,"column":6},"end":{"line":700,"column":36}},"409":{"start":{"line":702,"column":4},"end":{"line":704,"column":5}},"410":{"start":{"line":703,"column":6},"end":{"line":703,"column":25}},"411":{"start":{"line":705,"column":4},"end":{"line":707,"column":5}},"412":{"start":{"line":706,"column":6},"end":{"line":706,"column":81}},"413":{"start":{"line":708,"column":4},"end":{"line":710,"column":5}},"414":{"start":{"line":709,"column":6},"end":{"line":709,"column":25}},"415":{"start":{"line":711,"column":4},"end":{"line":714,"column":5}},"416":{"start":{"line":712,"column":6},"end":{"line":712,"column":31}},"417":{"start":{"line":713,"column":6},"end":{"line":713,"column":20}},"418":{"start":{"line":716,"column":4},"end":{"line":716,"column":36}},"419":{"start":{"line":719,"column":2},"end":{"line":733,"column":3}},"420":{"start":{"line":720,"column":4},"end":{"line":722,"column":5}},"421":{"start":{"line":721,"column":6},"end":{"line":721,"column":42}},"422":{"start":{"line":723,"column":4},"end":{"line":725,"column":5}},"423":{"start":{"line":724,"column":6},"end":{"line":724,"column":44}},"424":{"start":{"line":726,"column":4},"end":{"line":728,"column":5}},"425":{"start":{"line":727,"column":6},"end":{"line":727,"column":42}},"426":{"start":{"line":729,"column":4},"end":{"line":731,"column":5}},"427":{"start":{"line":730,"column":6},"end":{"line":730,"column":44}},"428":{"start":{"line":732,"column":4},"end":{"line":732,"column":17}},"429":{"start":{"line":736,"column":0},"end":{"line":753,"column":2}},"430":{"start":{"line":737,"column":2},"end":{"line":737,"column":37}},"431":{"start":{"line":738,"column":2},"end":{"line":738,"column":20}},"432":{"start":{"line":739,"column":2},"end":{"line":739,"column":16}},"433":{"start":{"line":740,"column":2},"end":{"line":751,"column":3}},"434":{"start":{"line":741,"column":4},"end":{"line":741,"column":41}},"435":{"start":{"line":742,"column":4},"end":{"line":747,"column":18}},"436":{"start":{"line":743,"column":6},"end":{"line":746,"column":7}},"437":{"start":{"line":744,"column":8},"end":{"line":744,"column":16}},"438":{"start":{"line":745,"column":8},"end":{"line":745,"column":25}},"439":{"start":{"line":749,"column":4},"end":{"line":749,"column":38}},"440":{"start":{"line":750,"column":4},"end":{"line":750,"column":31}},"441":{"start":{"line":752,"column":2},"end":{"line":752,"column":44}},"442":{"start":{"line":755,"column":0},"end":{"line":768,"column":2}},"443":{"start":{"line":756,"column":2},"end":{"line":756,"column":37}},"444":{"start":{"line":757,"column":2},"end":{"line":757,"column":32}},"445":{"start":{"line":758,"column":2},"end":{"line":764,"column":3}},"446":{"start":{"line":759,"column":4},"end":{"line":759,"column":32}},"447":{"start":{"line":760,"column":4},"end":{"line":762,"column":18}},"448":{"start":{"line":761,"column":6},"end":{"line":761,"column":43}},"449":{"start":{"line":763,"column":4},"end":{"line":763,"column":44}},"450":{"start":{"line":765,"column":2},"end":{"line":767,"column":5}},"451":{"start":{"line":766,"column":4},"end":{"line":766,"column":32}},"452":{"start":{"line":770,"column":0},"end":{"line":795,"column":4}},"453":{"start":{"line":772,"column":4},"end":{"line":772,"column":20}},"454":{"start":{"line":773,"column":4},"end":{"line":773,"column":39}},"455":{"start":{"line":774,"column":4},"end":{"line":774,"column":22}},"456":{"start":{"line":775,"column":4},"end":{"line":775,"column":24}},"457":{"start":{"line":776,"column":4},"end":{"line":776,"column":41}},"458":{"start":{"line":778,"column":4},"end":{"line":778,"column":33}},"459":{"start":{"line":779,"column":4},"end":{"line":779,"column":18}},"460":{"start":{"line":780,"column":4},"end":{"line":794,"column":7}},"461":{"start":{"line":781,"column":6},"end":{"line":781,"column":47}},"462":{"start":{"line":782,"column":6},"end":{"line":790,"column":7}},"463":{"start":{"line":783,"column":8},"end":{"line":783,"column":16}},"464":{"start":{"line":786,"column":8},"end":{"line":786,"column":42}},"465":{"start":{"line":787,"column":8},"end":{"line":787,"column":62}},"466":{"start":{"line":789,"column":8},"end":{"line":789,"column":31}},"467":{"start":{"line":792,"column":6},"end":{"line":792,"column":30}},"468":{"start":{"line":792,"column":15},"end":{"line":792,"column":30}},"469":{"start":{"line":793,"column":6},"end":{"line":793,"column":42}},"470":{"start":{"line":797,"column":0},"end":{"line":820,"column":2}},"471":{"start":{"line":798,"column":2},"end":{"line":805,"column":3}},"472":{"start":{"line":799,"column":4},"end":{"line":799,"column":85}},"473":{"start":{"line":800,"column":4},"end":{"line":804,"column":5}},"474":{"start":{"line":801,"column":6},"end":{"line":801,"column":21}},"475":{"start":{"line":803,"column":6},"end":{"line":803,"column":16}},"476":{"start":{"line":808,"column":2},"end":{"line":808,"column":29}},"477":{"start":{"line":810,"column":2},"end":{"line":810,"column":35}},"478":{"start":{"line":812,"column":2},"end":{"line":812,"column":44}},"479":{"start":{"line":813,"column":2},"end":{"line":813,"column":61}},"480":{"start":{"line":815,"column":2},"end":{"line":819,"column":3}},"481":{"start":{"line":816,"column":4},"end":{"line":816,"column":40}},"482":{"start":{"line":818,"column":4},"end":{"line":818,"column":101}},"483":{"start":{"line":822,"column":0},"end":{"line":853,"column":2}},"484":{"start":{"line":823,"column":2},"end":{"line":823,"column":18}},"485":{"start":{"line":824,"column":2},"end":{"line":827,"column":3}},"486":{"start":{"line":825,"column":4},"end":{"line":825,"column":75}},"487":{"start":{"line":826,"column":4},"end":{"line":826,"column":53}},"488":{"start":{"line":826,"column":41},"end":{"line":826,"column":49}},"489":{"start":{"line":829,"column":2},"end":{"line":829,"column":29}},"490":{"start":{"line":830,"column":2},"end":{"line":830,"column":35}},"491":{"start":{"line":831,"column":2},"end":{"line":831,"column":44}},"492":{"start":{"line":832,"column":2},"end":{"line":832,"column":61}},"493":{"start":{"line":833,"column":2},"end":{"line":838,"column":3}},"494":{"start":{"line":834,"column":4},"end":{"line":834,"column":77}},"495":{"start":{"line":835,"column":4},"end":{"line":835,"column":31}},"496":{"start":{"line":836,"column":4},"end":{"line":836,"column":42}},"497":{"start":{"line":837,"column":4},"end":{"line":837,"column":55}},"498":{"start":{"line":837,"column":41},"end":{"line":837,"column":51}},"499":{"start":{"line":840,"column":2},"end":{"line":840,"column":24}},"500":{"start":{"line":841,"column":2},"end":{"line":847,"column":3}},"501":{"start":{"line":842,"column":4},"end":{"line":842,"column":24}},"502":{"start":{"line":843,"column":4},"end":{"line":845,"column":5}},"503":{"start":{"line":844,"column":6},"end":{"line":844,"column":15}},"504":{"start":{"line":846,"column":4},"end":{"line":846,"column":28}},"505":{"start":{"line":849,"column":2},"end":{"line":849,"column":55}},"506":{"start":{"line":850,"column":2},"end":{"line":852,"column":5}},"507":{"start":{"line":851,"column":4},"end":{"line":851,"column":46}},"508":{"start":{"line":855,"column":0},"end":{"line":880,"column":2}},"509":{"start":{"line":856,"column":2},"end":{"line":856,"column":18}},"510":{"start":{"line":857,"column":2},"end":{"line":857,"column":38}},"511":{"start":{"line":858,"column":2},"end":{"line":858,"column":45}},"512":{"start":{"line":859,"column":2},"end":{"line":859,"column":27}},"513":{"start":{"line":860,"column":2},"end":{"line":860,"column":33}},"514":{"start":{"line":861,"column":2},"end":{"line":861,"column":59}},"515":{"start":{"line":862,"column":2},"end":{"line":862,"column":23}},"516":{"start":{"line":864,"column":2},"end":{"line":874,"column":3}},"517":{"start":{"line":867,"column":4},"end":{"line":873,"column":7}},"518":{"start":{"line":868,"column":6},"end":{"line":868,"column":70}},"519":{"start":{"line":868,"column":15},"end":{"line":868,"column":70}},"520":{"start":{"line":868,"column":52},"end":{"line":868,"column":66}},"521":{"start":{"line":869,"column":6},"end":{"line":872,"column":9}},"522":{"start":{"line":870,"column":8},"end":{"line":870,"column":41}},"523":{"start":{"line":871,"column":8},"end":{"line":871,"column":71}},"524":{"start":{"line":875,"column":2},"end":{"line":875,"column":40}},"525":{"start":{"line":876,"column":2},"end":{"line":876,"column":47}},"526":{"start":{"line":877,"column":2},"end":{"line":879,"column":5}},"527":{"start":{"line":878,"column":4},"end":{"line":878,"column":68}},"528":{"start":{"line":882,"column":0},"end":{"line":884,"column":2}},"529":{"start":{"line":883,"column":2},"end":{"line":883,"column":26}},"530":{"start":{"line":886,"column":0},"end":{"line":889,"column":2}},"531":{"start":{"line":887,"column":2},"end":{"line":887,"column":27}},"532":{"start":{"line":888,"column":2},"end":{"line":888,"column":27}},"533":{"start":{"line":891,"column":0},"end":{"line":893,"column":2}},"534":{"start":{"line":895,"column":0},"end":{"line":927,"column":2}},"535":{"start":{"line":896,"column":2},"end":{"line":896,"column":18}},"536":{"start":{"line":898,"column":2},"end":{"line":901,"column":3}},"537":{"start":{"line":899,"column":4},"end":{"line":899,"column":16}},"538":{"start":{"line":900,"column":4},"end":{"line":900,"column":23}},"539":{"start":{"line":903,"column":2},"end":{"line":905,"column":3}},"540":{"start":{"line":904,"column":4},"end":{"line":904,"column":22}},"541":{"start":{"line":907,"column":2},"end":{"line":907,"column":47}},"542":{"start":{"line":908,"column":2},"end":{"line":910,"column":3}},"543":{"start":{"line":909,"column":4},"end":{"line":909,"column":32}},"544":{"start":{"line":912,"column":2},"end":{"line":914,"column":5}},"545":{"start":{"line":913,"column":4},"end":{"line":913,"column":32}},"546":{"start":{"line":916,"column":2},"end":{"line":921,"column":3}},"547":{"start":{"line":917,"column":4},"end":{"line":920,"column":7}},"548":{"start":{"line":918,"column":6},"end":{"line":919,"column":35}},"549":{"start":{"line":923,"column":2},"end":{"line":925,"column":5}},"550":{"start":{"line":924,"column":4},"end":{"line":924,"column":27}},"551":{"start":{"line":926,"column":2},"end":{"line":926,"column":31}},"552":{"start":{"line":926,"column":10},"end":{"line":926,"column":31}},"553":{"start":{"line":929,"column":0},"end":{"line":943,"column":1}},"554":{"start":{"line":930,"column":2},"end":{"line":932,"column":3}},"555":{"start":{"line":931,"column":4},"end":{"line":931,"column":18}},"556":{"start":{"line":935,"column":2},"end":{"line":941,"column":3}},"557":{"start":{"line":936,"column":4},"end":{"line":936,"column":26}},"558":{"start":{"line":937,"column":4},"end":{"line":939,"column":5}},"559":{"start":{"line":938,"column":6},"end":{"line":938,"column":15}},"560":{"start":{"line":940,"column":4},"end":{"line":940,"column":20}},"561":{"start":{"line":942,"column":2},"end":{"line":942,"column":14}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"3":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"4":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":18}},{"start":{"line":67,"column":22},"end":{"line":67,"column":39}}]},"5":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"6":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":20}},{"start":{"line":74,"column":24},"end":{"line":74,"column":43}}]},"7":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"8":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"9":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":16}},{"start":{"line":86,"column":20},"end":{"line":86,"column":46}}]},"10":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":12},"end":{"line":87,"column":49}},{"start":{"line":87,"column":53},"end":{"line":87,"column":58}}]},"11":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]},"12":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"13":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"14":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":21},"end":{"line":118,"column":34}},{"start":{"line":118,"column":38},"end":{"line":118,"column":51}}]},"15":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":6},"end":{"line":120,"column":6}},{"start":{"line":120,"column":6},"end":{"line":120,"column":6}}]},"16":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":13},"end":{"line":132,"column":13}},{"start":{"line":132,"column":13},"end":{"line":132,"column":13}}]},"17":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":10},"end":{"line":138,"column":10}},{"start":{"line":138,"column":10},"end":{"line":138,"column":10}}]},"18":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":14},"end":{"line":138,"column":17}},{"start":{"line":138,"column":21},"end":{"line":138,"column":42}}]},"19":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":2},"end":{"line":160,"column":2}},{"start":{"line":160,"column":2},"end":{"line":160,"column":2}}]},"20":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":13},"end":{"line":164,"column":21}},{"start":{"line":164,"column":25},"end":{"line":164,"column":36}}]},"21":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":15},"end":{"line":167,"column":23}},{"start":{"line":167,"column":27},"end":{"line":167,"column":29}}]},"22":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":17},"end":{"line":168,"column":28}},{"start":{"line":168,"column":32},"end":{"line":168,"column":34}}]},"23":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":170,"column":4}},{"start":{"line":170,"column":4},"end":{"line":170,"column":4}}]},"24":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":2},"end":{"line":175,"column":10}},{"start":{"line":175,"column":14},"end":{"line":175,"column":24}}]},"25":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":24},"end":{"line":179,"column":53}},{"start":{"line":179,"column":57},"end":{"line":179,"column":76}}]},"26":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":21},"end":{"line":180,"column":36}},{"start":{"line":180,"column":40},"end":{"line":180,"column":66}}]},"27":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"28":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":9},"end":{"line":188,"column":9}},{"start":{"line":188,"column":9},"end":{"line":188,"column":9}}]},"29":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":11},"end":{"line":190,"column":15}},{"start":{"line":190,"column":19},"end":{"line":190,"column":23}}]},"30":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":24},"end":{"line":203,"column":53}},{"start":{"line":203,"column":57},"end":{"line":203,"column":76}}]},"31":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":21},"end":{"line":204,"column":36}},{"start":{"line":204,"column":40},"end":{"line":204,"column":66}}]},"32":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"33":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":9},"end":{"line":213,"column":9}},{"start":{"line":213,"column":9},"end":{"line":213,"column":9}}]},"34":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":6},"end":{"line":221,"column":14}},{"start":{"line":221,"column":18},"end":{"line":221,"column":40}}]},"35":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":6},"end":{"line":225,"column":14}},{"start":{"line":225,"column":18},"end":{"line":225,"column":40}}]},"36":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":233,"column":2}},{"start":{"line":233,"column":2},"end":{"line":233,"column":2}}]},"37":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":2},"end":{"line":240,"column":2}},{"start":{"line":240,"column":2},"end":{"line":240,"column":2}}]},"38":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":11},"end":{"line":243,"column":39}},{"start":{"line":243,"column":43},"end":{"line":243,"column":52}}]},"39":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":2},"end":{"line":244,"column":2}},{"start":{"line":244,"column":2},"end":{"line":244,"column":2}}]},"40":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":8},"end":{"line":252,"column":21}},{"start":{"line":252,"column":25},"end":{"line":252,"column":43}},{"start":{"line":252,"column":47},"end":{"line":252,"column":69}},{"start":{"line":252,"column":74},"end":{"line":252,"column":76}}]},"41":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":2},"end":{"line":254,"column":2}},{"start":{"line":254,"column":2},"end":{"line":254,"column":2}}]},"42":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":2},"end":{"line":258,"column":2}},{"start":{"line":258,"column":2},"end":{"line":258,"column":2}}]},"43":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":4},"end":{"line":271,"column":4}},{"start":{"line":271,"column":4},"end":{"line":271,"column":4}}]},"44":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":4},"end":{"line":283,"column":4}},{"start":{"line":283,"column":4},"end":{"line":283,"column":4}}]},"45":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":2},"end":{"line":302,"column":2}},{"start":{"line":302,"column":2},"end":{"line":302,"column":2}}]},"46":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":6},"end":{"line":304,"column":6}},{"start":{"line":304,"column":6},"end":{"line":304,"column":6}}]},"47":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":2},"end":{"line":311,"column":2}},{"start":{"line":311,"column":2},"end":{"line":311,"column":2}}]},"48":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":2},"end":{"line":331,"column":2}},{"start":{"line":331,"column":2},"end":{"line":331,"column":2}}]},"49":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":6},"end":{"line":334,"column":6}},{"start":{"line":334,"column":6},"end":{"line":334,"column":6}}]},"50":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":2},"end":{"line":342,"column":2}},{"start":{"line":342,"column":2},"end":{"line":342,"column":2}}]},"51":{"line":342,"type":"binary-expr","locations":[{"start":{"line":342,"column":6},"end":{"line":342,"column":13}},{"start":{"line":342,"column":17},"end":{"line":342,"column":32}}]},"52":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":6},"end":{"line":350,"column":6}},{"start":{"line":350,"column":6},"end":{"line":350,"column":6}}]},"53":{"line":360,"type":"binary-expr","locations":[{"start":{"line":360,"column":18},"end":{"line":360,"column":30}},{"start":{"line":360,"column":34},"end":{"line":360,"column":60}}]},"54":{"line":361,"type":"binary-expr","locations":[{"start":{"line":361,"column":14},"end":{"line":361,"column":23}},{"start":{"line":361,"column":27},"end":{"line":361,"column":49}}]},"55":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":2},"end":{"line":362,"column":2}},{"start":{"line":362,"column":2},"end":{"line":362,"column":2}}]},"56":{"line":373,"type":"binary-expr","locations":[{"start":{"line":373,"column":19},"end":{"line":373,"column":41}},{"start":{"line":373,"column":45},"end":{"line":373,"column":86}}]},"57":{"line":379,"type":"binary-expr","locations":[{"start":{"line":379,"column":19},"end":{"line":379,"column":47}},{"start":{"line":379,"column":51},"end":{"line":379,"column":97}}]},"58":{"line":386,"type":"cond-expr","locations":[{"start":{"line":386,"column":35},"end":{"line":386,"column":36}},{"start":{"line":386,"column":39},"end":{"line":386,"column":40}}]},"59":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":2},"end":{"line":390,"column":2}},{"start":{"line":390,"column":2},"end":{"line":390,"column":2}}]},"60":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":4},"end":{"line":395,"column":4}},{"start":{"line":395,"column":4},"end":{"line":395,"column":4}}]},"61":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":8},"end":{"line":395,"column":25}},{"start":{"line":395,"column":29},"end":{"line":395,"column":41}}]},"62":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":4},"end":{"line":398,"column":4}},{"start":{"line":398,"column":4},"end":{"line":398,"column":4}}]},"63":{"line":399,"type":"switch","locations":[{"start":{"line":400,"column":8},"end":{"line":402,"column":16}},{"start":{"line":403,"column":8},"end":{"line":405,"column":16}},{"start":{"line":406,"column":8},"end":{"line":408,"column":16}}]},"64":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":2},"end":{"line":417,"column":2}},{"start":{"line":417,"column":2},"end":{"line":417,"column":2}}]},"65":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":4},"end":{"line":424,"column":4}},{"start":{"line":424,"column":4},"end":{"line":424,"column":4}}]},"66":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":2},"end":{"line":436,"column":2}},{"start":{"line":436,"column":2},"end":{"line":436,"column":2}}]},"67":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":4},"end":{"line":437,"column":4}},{"start":{"line":437,"column":4},"end":{"line":437,"column":4}}]},"68":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":6},"end":{"line":439,"column":6}},{"start":{"line":439,"column":6},"end":{"line":439,"column":6}}]},"69":{"line":439,"type":"binary-expr","locations":[{"start":{"line":439,"column":10},"end":{"line":439,"column":17}},{"start":{"line":439,"column":21},"end":{"line":439,"column":35}}]},"70":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":4},"end":{"line":444,"column":4}},{"start":{"line":444,"column":4},"end":{"line":444,"column":4}}]},"71":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":6},"end":{"line":446,"column":6}},{"start":{"line":446,"column":6},"end":{"line":446,"column":6}}]},"72":{"line":452,"type":"if","locations":[{"start":{"line":452,"column":8},"end":{"line":452,"column":8}},{"start":{"line":452,"column":8},"end":{"line":452,"column":8}}]},"73":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":10},"end":{"line":454,"column":10}},{"start":{"line":454,"column":10},"end":{"line":454,"column":10}}]},"74":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":4},"end":{"line":464,"column":4}},{"start":{"line":464,"column":4},"end":{"line":464,"column":4}}]},"75":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":4},"end":{"line":469,"column":4}},{"start":{"line":469,"column":4},"end":{"line":469,"column":4}}]},"76":{"line":469,"type":"binary-expr","locations":[{"start":{"line":469,"column":8},"end":{"line":469,"column":20}},{"start":{"line":469,"column":24},"end":{"line":469,"column":29}}]},"77":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":4},"end":{"line":473,"column":4}},{"start":{"line":473,"column":4},"end":{"line":473,"column":4}}]},"78":{"line":478,"type":"binary-expr","locations":[{"start":{"line":478,"column":15},"end":{"line":478,"column":26}},{"start":{"line":478,"column":30},"end":{"line":478,"column":43}},{"start":{"line":478,"column":47},"end":{"line":478,"column":48}}]},"79":{"line":479,"type":"binary-expr","locations":[{"start":{"line":479,"column":16},"end":{"line":479,"column":28}},{"start":{"line":479,"column":32},"end":{"line":479,"column":44}}]},"80":{"line":490,"type":"binary-expr","locations":[{"start":{"line":490,"column":19},"end":{"line":490,"column":37}},{"start":{"line":490,"column":41},"end":{"line":490,"column":59}}]},"81":{"line":491,"type":"binary-expr","locations":[{"start":{"line":491,"column":19},"end":{"line":491,"column":37}},{"start":{"line":491,"column":41},"end":{"line":491,"column":59}}]},"82":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":6},"end":{"line":493,"column":6}},{"start":{"line":493,"column":6},"end":{"line":493,"column":6}}]},"83":{"line":493,"type":"binary-expr","locations":[{"start":{"line":493,"column":10},"end":{"line":493,"column":20}},{"start":{"line":493,"column":24},"end":{"line":493,"column":35}}]},"84":{"line":495,"type":"if","locations":[{"start":{"line":495,"column":13},"end":{"line":495,"column":13}},{"start":{"line":495,"column":13},"end":{"line":495,"column":13}}]},"85":{"line":495,"type":"binary-expr","locations":[{"start":{"line":495,"column":17},"end":{"line":495,"column":27}},{"start":{"line":495,"column":31},"end":{"line":495,"column":42}}]},"86":{"line":509,"type":"if","locations":[{"start":{"line":509,"column":4},"end":{"line":509,"column":4}},{"start":{"line":509,"column":4},"end":{"line":509,"column":4}}]},"87":{"line":509,"type":"binary-expr","locations":[{"start":{"line":509,"column":8},"end":{"line":509,"column":14}},{"start":{"line":509,"column":18},"end":{"line":509,"column":32}}]},"88":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":2},"end":{"line":519,"column":2}},{"start":{"line":519,"column":2},"end":{"line":519,"column":2}}]},"89":{"line":525,"type":"if","locations":[{"start":{"line":525,"column":6},"end":{"line":525,"column":6}},{"start":{"line":525,"column":6},"end":{"line":525,"column":6}}]},"90":{"line":525,"type":"binary-expr","locations":[{"start":{"line":525,"column":10},"end":{"line":525,"column":23}},{"start":{"line":525,"column":27},"end":{"line":525,"column":39}}]},"91":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":8},"end":{"line":526,"column":8}},{"start":{"line":526,"column":8},"end":{"line":526,"column":8}}]},"92":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":10},"end":{"line":527,"column":10}},{"start":{"line":527,"column":10},"end":{"line":527,"column":10}}]},"93":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":10},"end":{"line":532,"column":10}},{"start":{"line":532,"column":10},"end":{"line":532,"column":10}}]},"94":{"line":543,"type":"if","locations":[{"start":{"line":543,"column":6},"end":{"line":543,"column":6}},{"start":{"line":543,"column":6},"end":{"line":543,"column":6}}]},"95":{"line":547,"type":"if","locations":[{"start":{"line":547,"column":8},"end":{"line":547,"column":8}},{"start":{"line":547,"column":8},"end":{"line":547,"column":8}}]},"96":{"line":547,"type":"binary-expr","locations":[{"start":{"line":547,"column":12},"end":{"line":547,"column":37}},{"start":{"line":547,"column":41},"end":{"line":547,"column":58}}]},"97":{"line":557,"type":"if","locations":[{"start":{"line":557,"column":6},"end":{"line":557,"column":6}},{"start":{"line":557,"column":6},"end":{"line":557,"column":6}}]},"98":{"line":565,"type":"if","locations":[{"start":{"line":565,"column":6},"end":{"line":565,"column":6}},{"start":{"line":565,"column":6},"end":{"line":565,"column":6}}]},"99":{"line":569,"type":"if","locations":[{"start":{"line":569,"column":8},"end":{"line":569,"column":8}},{"start":{"line":569,"column":8},"end":{"line":569,"column":8}}]},"100":{"line":571,"type":"if","locations":[{"start":{"line":571,"column":15},"end":{"line":571,"column":15}},{"start":{"line":571,"column":15},"end":{"line":571,"column":15}}]},"101":{"line":571,"type":"binary-expr","locations":[{"start":{"line":571,"column":19},"end":{"line":571,"column":47}},{"start":{"line":571,"column":51},"end":{"line":571,"column":68}}]},"102":{"line":581,"type":"if","locations":[{"start":{"line":581,"column":4},"end":{"line":581,"column":4}},{"start":{"line":581,"column":4},"end":{"line":581,"column":4}}]},"103":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":6},"end":{"line":590,"column":6}},{"start":{"line":590,"column":6},"end":{"line":590,"column":6}}]},"104":{"line":592,"type":"if","locations":[{"start":{"line":592,"column":8},"end":{"line":592,"column":8}},{"start":{"line":592,"column":8},"end":{"line":592,"column":8}}]},"105":{"line":596,"type":"if","locations":[{"start":{"line":596,"column":13},"end":{"line":596,"column":13}},{"start":{"line":596,"column":13},"end":{"line":596,"column":13}}]},"106":{"line":598,"type":"if","locations":[{"start":{"line":598,"column":13},"end":{"line":598,"column":13}},{"start":{"line":598,"column":13},"end":{"line":598,"column":13}}]},"107":{"line":600,"type":"if","locations":[{"start":{"line":600,"column":13},"end":{"line":600,"column":13}},{"start":{"line":600,"column":13},"end":{"line":600,"column":13}}]},"108":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":13},"end":{"line":602,"column":13}},{"start":{"line":602,"column":13},"end":{"line":602,"column":13}}]},"109":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":4},"end":{"line":612,"column":4}},{"start":{"line":612,"column":4},"end":{"line":612,"column":4}}]},"110":{"line":612,"type":"binary-expr","locations":[{"start":{"line":612,"column":8},"end":{"line":612,"column":33}},{"start":{"line":612,"column":38},"end":{"line":612,"column":63}}]},"111":{"line":616,"type":"if","locations":[{"start":{"line":616,"column":4},"end":{"line":616,"column":4}},{"start":{"line":616,"column":4},"end":{"line":616,"column":4}}]},"112":{"line":620,"type":"if","locations":[{"start":{"line":620,"column":4},"end":{"line":620,"column":4}},{"start":{"line":620,"column":4},"end":{"line":620,"column":4}}]},"113":{"line":620,"type":"binary-expr","locations":[{"start":{"line":620,"column":8},"end":{"line":620,"column":35}},{"start":{"line":620,"column":39},"end":{"line":620,"column":55}}]},"114":{"line":621,"type":"if","locations":[{"start":{"line":621,"column":6},"end":{"line":621,"column":6}},{"start":{"line":621,"column":6},"end":{"line":621,"column":6}}]},"115":{"line":622,"type":"cond-expr","locations":[{"start":{"line":622,"column":23},"end":{"line":622,"column":50}},{"start":{"line":622,"column":53},"end":{"line":622,"column":58}}]},"116":{"line":626,"type":"if","locations":[{"start":{"line":626,"column":6},"end":{"line":626,"column":6}},{"start":{"line":626,"column":6},"end":{"line":626,"column":6}}]},"117":{"line":631,"type":"if","locations":[{"start":{"line":631,"column":6},"end":{"line":631,"column":6}},{"start":{"line":631,"column":6},"end":{"line":631,"column":6}}]},"118":{"line":634,"type":"if","locations":[{"start":{"line":634,"column":10},"end":{"line":634,"column":10}},{"start":{"line":634,"column":10},"end":{"line":634,"column":10}}]},"119":{"line":641,"type":"if","locations":[{"start":{"line":641,"column":6},"end":{"line":641,"column":6}},{"start":{"line":641,"column":6},"end":{"line":641,"column":6}}]},"120":{"line":643,"type":"if","locations":[{"start":{"line":643,"column":10},"end":{"line":643,"column":10}},{"start":{"line":643,"column":10},"end":{"line":643,"column":10}}]},"121":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":6},"end":{"line":650,"column":6}},{"start":{"line":650,"column":6},"end":{"line":650,"column":6}}]},"122":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":6},"end":{"line":654,"column":6}},{"start":{"line":654,"column":6},"end":{"line":654,"column":6}}]},"123":{"line":655,"type":"binary-expr","locations":[{"start":{"line":655,"column":16},"end":{"line":655,"column":64}},{"start":{"line":656,"column":8},"end":{"line":656,"column":56}}]},"124":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":6},"end":{"line":659,"column":6}},{"start":{"line":659,"column":6},"end":{"line":659,"column":6}}]},"125":{"line":659,"type":"binary-expr","locations":[{"start":{"line":659,"column":10},"end":{"line":659,"column":22}},{"start":{"line":659,"column":26},"end":{"line":659,"column":39}},{"start":{"line":659,"column":43},"end":{"line":659,"column":56}},{"start":{"line":659,"column":60},"end":{"line":659,"column":74}}]},"126":{"line":660,"type":"binary-expr","locations":[{"start":{"line":660,"column":19},"end":{"line":660,"column":31}},{"start":{"line":660,"column":35},"end":{"line":660,"column":48}},{"start":{"line":660,"column":52},"end":{"line":660,"column":65}},{"start":{"line":660,"column":69},"end":{"line":660,"column":83}}]},"127":{"line":661,"type":"if","locations":[{"start":{"line":661,"column":8},"end":{"line":661,"column":8}},{"start":{"line":661,"column":8},"end":{"line":661,"column":8}}]},"128":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":8},"end":{"line":664,"column":8}},{"start":{"line":664,"column":8},"end":{"line":664,"column":8}}]},"129":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":8},"end":{"line":668,"column":8}},{"start":{"line":668,"column":8},"end":{"line":668,"column":8}}]},"130":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":8},"end":{"line":672,"column":8}},{"start":{"line":672,"column":8},"end":{"line":672,"column":8}}]},"131":{"line":676,"type":"if","locations":[{"start":{"line":676,"column":8},"end":{"line":676,"column":8}},{"start":{"line":676,"column":8},"end":{"line":676,"column":8}}]},"132":{"line":681,"type":"if","locations":[{"start":{"line":681,"column":6},"end":{"line":681,"column":6}},{"start":{"line":681,"column":6},"end":{"line":681,"column":6}}]},"133":{"line":686,"type":"cond-expr","locations":[{"start":{"line":686,"column":31},"end":{"line":686,"column":49}},{"start":{"line":686,"column":52},"end":{"line":686,"column":59}}]},"134":{"line":687,"type":"cond-expr","locations":[{"start":{"line":687,"column":23},"end":{"line":687,"column":39}},{"start":{"line":687,"column":42},"end":{"line":687,"column":47}}]},"135":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":4},"end":{"line":698,"column":4}},{"start":{"line":698,"column":4},"end":{"line":698,"column":4}}]},"136":{"line":698,"type":"binary-expr","locations":[{"start":{"line":698,"column":8},"end":{"line":698,"column":20}},{"start":{"line":698,"column":24},"end":{"line":698,"column":36}}]},"137":{"line":700,"type":"cond-expr","locations":[{"start":{"line":700,"column":28},"end":{"line":700,"column":29}},{"start":{"line":700,"column":32},"end":{"line":700,"column":35}}]},"138":{"line":702,"type":"if","locations":[{"start":{"line":702,"column":4},"end":{"line":702,"column":4}},{"start":{"line":702,"column":4},"end":{"line":702,"column":4}}]},"139":{"line":705,"type":"if","locations":[{"start":{"line":705,"column":4},"end":{"line":705,"column":4}},{"start":{"line":705,"column":4},"end":{"line":705,"column":4}}]},"140":{"line":706,"type":"cond-expr","locations":[{"start":{"line":706,"column":29},"end":{"line":706,"column":30}},{"start":{"line":706,"column":34},"end":{"line":706,"column":79}}]},"141":{"line":706,"type":"cond-expr","locations":[{"start":{"line":706,"column":50},"end":{"line":706,"column":52}},{"start":{"line":706,"column":55},"end":{"line":706,"column":79}}]},"142":{"line":706,"type":"cond-expr","locations":[{"start":{"line":706,"column":72},"end":{"line":706,"column":73}},{"start":{"line":706,"column":76},"end":{"line":706,"column":79}}]},"143":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":4},"end":{"line":708,"column":4}},{"start":{"line":708,"column":4},"end":{"line":708,"column":4}}]},"144":{"line":711,"type":"if","locations":[{"start":{"line":711,"column":4},"end":{"line":711,"column":4}},{"start":{"line":711,"column":4},"end":{"line":711,"column":4}}]},"145":{"line":716,"type":"cond-expr","locations":[{"start":{"line":716,"column":28},"end":{"line":716,"column":29}},{"start":{"line":716,"column":32},"end":{"line":716,"column":35}}]},"146":{"line":720,"type":"if","locations":[{"start":{"line":720,"column":4},"end":{"line":720,"column":4}},{"start":{"line":720,"column":4},"end":{"line":720,"column":4}}]},"147":{"line":723,"type":"if","locations":[{"start":{"line":723,"column":4},"end":{"line":723,"column":4}},{"start":{"line":723,"column":4},"end":{"line":723,"column":4}}]},"148":{"line":726,"type":"if","locations":[{"start":{"line":726,"column":4},"end":{"line":726,"column":4}},{"start":{"line":726,"column":4},"end":{"line":726,"column":4}}]},"149":{"line":729,"type":"if","locations":[{"start":{"line":729,"column":4},"end":{"line":729,"column":4}},{"start":{"line":729,"column":4},"end":{"line":729,"column":4}}]},"150":{"line":740,"type":"if","locations":[{"start":{"line":740,"column":2},"end":{"line":740,"column":2}},{"start":{"line":740,"column":2},"end":{"line":740,"column":2}}]},"151":{"line":743,"type":"if","locations":[{"start":{"line":743,"column":6},"end":{"line":743,"column":6}},{"start":{"line":743,"column":6},"end":{"line":743,"column":6}}]},"152":{"line":743,"type":"binary-expr","locations":[{"start":{"line":743,"column":10},"end":{"line":743,"column":17}},{"start":{"line":743,"column":21},"end":{"line":743,"column":58}}]},"153":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":2},"end":{"line":758,"column":2}},{"start":{"line":758,"column":2},"end":{"line":758,"column":2}}]},"154":{"line":775,"type":"binary-expr","locations":[{"start":{"line":775,"column":12},"end":{"line":775,"column":17}},{"start":{"line":775,"column":21},"end":{"line":775,"column":23}}]},"155":{"line":782,"type":"if","locations":[{"start":{"line":782,"column":6},"end":{"line":782,"column":6}},{"start":{"line":782,"column":6},"end":{"line":782,"column":6}}]},"156":{"line":782,"type":"binary-expr","locations":[{"start":{"line":782,"column":10},"end":{"line":782,"column":17}},{"start":{"line":782,"column":21},"end":{"line":782,"column":33}}]},"157":{"line":792,"type":"if","locations":[{"start":{"line":792,"column":6},"end":{"line":792,"column":6}},{"start":{"line":792,"column":6},"end":{"line":792,"column":6}}]},"158":{"line":798,"type":"if","locations":[{"start":{"line":798,"column":2},"end":{"line":798,"column":2}},{"start":{"line":798,"column":2},"end":{"line":798,"column":2}}]},"159":{"line":800,"type":"if","locations":[{"start":{"line":800,"column":4},"end":{"line":800,"column":4}},{"start":{"line":800,"column":4},"end":{"line":800,"column":4}}]},"160":{"line":813,"type":"binary-expr","locations":[{"start":{"line":813,"column":18},"end":{"line":813,"column":30}},{"start":{"line":813,"column":34},"end":{"line":813,"column":60}}]},"161":{"line":815,"type":"if","locations":[{"start":{"line":815,"column":2},"end":{"line":815,"column":2}},{"start":{"line":815,"column":2},"end":{"line":815,"column":2}}]},"162":{"line":824,"type":"if","locations":[{"start":{"line":824,"column":2},"end":{"line":824,"column":2}},{"start":{"line":824,"column":2},"end":{"line":824,"column":2}}]},"163":{"line":832,"type":"binary-expr","locations":[{"start":{"line":832,"column":18},"end":{"line":832,"column":30}},{"start":{"line":832,"column":34},"end":{"line":832,"column":60}}]},"164":{"line":833,"type":"if","locations":[{"start":{"line":833,"column":2},"end":{"line":833,"column":2}},{"start":{"line":833,"column":2},"end":{"line":833,"column":2}}]},"165":{"line":843,"type":"if","locations":[{"start":{"line":843,"column":4},"end":{"line":843,"column":4}},{"start":{"line":843,"column":4},"end":{"line":843,"column":4}}]},"166":{"line":864,"type":"if","locations":[{"start":{"line":864,"column":2},"end":{"line":864,"column":2}},{"start":{"line":864,"column":2},"end":{"line":864,"column":2}}]},"167":{"line":868,"type":"if","locations":[{"start":{"line":868,"column":6},"end":{"line":868,"column":6}},{"start":{"line":868,"column":6},"end":{"line":868,"column":6}}]},"168":{"line":898,"type":"if","locations":[{"start":{"line":898,"column":2},"end":{"line":898,"column":2}},{"start":{"line":898,"column":2},"end":{"line":898,"column":2}}]},"169":{"line":898,"type":"binary-expr","locations":[{"start":{"line":898,"column":7},"end":{"line":898,"column":10}},{"start":{"line":898,"column":16},"end":{"line":898,"column":44}}]},"170":{"line":903,"type":"if","locations":[{"start":{"line":903,"column":2},"end":{"line":903,"column":2}},{"start":{"line":903,"column":2},"end":{"line":903,"column":2}}]},"171":{"line":907,"type":"binary-expr","locations":[{"start":{"line":907,"column":11},"end":{"line":907,"column":17}},{"start":{"line":907,"column":21},"end":{"line":907,"column":46}}]},"172":{"line":908,"type":"if","locations":[{"start":{"line":908,"column":2},"end":{"line":908,"column":2}},{"start":{"line":908,"column":2},"end":{"line":908,"column":2}}]},"173":{"line":916,"type":"if","locations":[{"start":{"line":916,"column":2},"end":{"line":916,"column":2}},{"start":{"line":916,"column":2},"end":{"line":916,"column":2}}]},"174":{"line":926,"type":"if","locations":[{"start":{"line":926,"column":2},"end":{"line":926,"column":2}},{"start":{"line":926,"column":2},"end":{"line":926,"column":2}}]},"175":{"line":930,"type":"if","locations":[{"start":{"line":930,"column":2},"end":{"line":930,"column":2}},{"start":{"line":930,"column":2},"end":{"line":930,"column":2}}]},"176":{"line":937,"type":"if","locations":[{"start":{"line":937,"column":4},"end":{"line":937,"column":4}},{"start":{"line":937,"column":4},"end":{"line":937,"column":4}}]}},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","/* global window:false */","var g = require('strong-globalize')();","var util = require('util');","var Connector = require('loopback-connector').Connector;","var geo = require('../geo');","var utils = require('../utils');","var fs = require('fs');","var async = require('async');","var debug = require('debug')('loopback:connector:memory');","","/**"," * Initialize the Memory connector against the given data source"," *"," * @param {DataSource} dataSource The loopback-datasource-juggler dataSource"," * @param {Function} [callback] The callback function"," */","exports.initialize = function initializeDataSource(dataSource, callback) {","  dataSource.connector = new Memory(null, dataSource.settings);","  // Use dataSource.connect to avoid duplicate file reads from cache","  dataSource.connect(callback);","};","","exports.Memory = Memory;","exports.applyFilter = applyFilter;","","function Memory(m, settings) {","  if (m instanceof Memory) {","    this.isTransaction = true;","    this.cache = m.cache;","    this.ids = m.ids;","    this.constructor.super_.call(this, 'memory', settings);","    this._models = m._models;","  } else {","    this.isTransaction = false;","    this.cache = {};","    this.ids = {};","    this.constructor.super_.call(this, 'memory', settings);","  }","}","","util.inherits(Memory, Connector);","","Memory.prototype.getDefaultIdType = function() {","  return Number;","};","","Memory.prototype.getTypes = function() {","  return ['db', 'nosql', 'memory'];","};","","Memory.prototype.connect = function(callback) {","  if (this.isTransaction) {","    this.onTransactionExec = callback;","  } else {","    this.loadFromFile(callback);","  }","};","","function serialize(obj) {","  if (obj === null || obj === undefined) {","    return obj;","  }","  return JSON.stringify(obj);","}","","function deserialize(dbObj) {","  if (dbObj === null || dbObj === undefined) {","    return dbObj;","  }","  if (typeof dbObj === 'string') {","    return JSON.parse(dbObj);","  } else {","    return dbObj;","  }","}","","Memory.prototype.getCollection = function(model) {","  var modelClass = this._models[model];","  if (modelClass && modelClass.settings.memory) {","    model = modelClass.settings.memory.collection || model;","  }","  return model;","};","","Memory.prototype.initCollection = function(model) {","  this.collection(model, {});","  this.collectionSeq(model, 1);","};","","Memory.prototype.collection = function(model, val) {","  model = this.getCollection(model);","  if (arguments.length > 1) this.cache[model] = val;","  return this.cache[model];","};","","Memory.prototype.collectionSeq = function(model, val) {","  model = this.getCollection(model);","  if (arguments.length > 1) this.ids[model] = val;","  return this.ids[model];","};","","/**"," * Create a queue to serialize file read/write operations"," * @returns {*} The file operation queue"," */","Memory.prototype.setupFileQueue = function() {","  var self = this;","  if (!this.fileQueue) {","    // Create a queue for writes","    this.fileQueue = async.queue(function(task, done) {","      var callback = task.callback || function() {};","      var file = self.settings.file;","      if (task.operation === 'write') {","        // Flush out the models/ids","        var data = JSON.stringify({","          ids: self.ids,","          models: self.cache,","        }, null, '  ');","        debug('Writing cache to %s: %s', file, data);","        fs.writeFile(file, data, function(err) {","          debug('Cache has been written to %s', file);","          done(err);","          callback(err, task.data);","        });","      } else if (task.operation === 'read') {","        debug('Reading cache from %s: %s', file, data);","        fs.readFile(file, {","          encoding: 'utf8',","          flag: 'r',","        }, function(err, data) {","          if (err && err.code !== 'ENOENT') {","            done(err);","            callback(err);","          } else {","            debug('Cache has been read from %s: %s', file, data);","            self.parseAndLoad(data, function(err) {","              done(err);","              callback(err);","            });","          }","        });","      } else {","        var err = new Error('Unknown type of task');","        done(err);","        callback(err);","      }","    }, 1);","  }","  return this.fileQueue;","};","","Memory.prototype.parseAndLoad = function(data, callback) {","  if (data) {","    try {","      data = JSON.parse(data.toString());","    } catch (e) {","      return callback && callback(e);","    }","","    this.ids = data.ids || {};","    this.cache = data.models || {};","  } else {","    if (!this.cache) {","      this.ids = {};","      this.cache = {};","    }","  }","  callback && callback();","};","","Memory.prototype.loadFromFile = function(callback) {","  var hasLocalStorage = typeof window !== 'undefined' && window.localStorage;","  var localStorage = hasLocalStorage && this.settings.localStorage;","","  if (this.settings.file) {","    debug('Queueing read %s', this.settings.file);","    this.setupFileQueue().push({","      operation: 'read',","      callback: callback,","    });","  } else if (localStorage) {","    var data = window.localStorage.getItem(localStorage);","    data = data || '{}';","    this.parseAndLoad(data, callback);","  } else {","    process.nextTick(callback);","  }","};","","/*!"," * Flush the cache into the json file if necessary"," * @param {Function} callback"," */","Memory.prototype.saveToFile = function(result, callback) {","  var file = this.settings.file;","  var hasLocalStorage = typeof window !== 'undefined' && window.localStorage;","  var localStorage = hasLocalStorage && this.settings.localStorage;","  if (file) {","    debug('Queueing write %s', this.settings.file);","    // Enqueue the write","    this.setupFileQueue().push({","      operation: 'write',","      data: result,","      callback: callback,","    });","  } else if (localStorage) {","    // Flush out the models/ids","    var data = JSON.stringify({","      ids: this.ids,","      models: this.cache,","    }, null, '  ');","    window.localStorage.setItem(localStorage, data);","    process.nextTick(function() {","      callback && callback(null, result);","    });","  } else {","    process.nextTick(function() {","      callback && callback(null, result);","    });","  }","};","","Memory.prototype.define = function defineModel(definition) {","  this.constructor.super_.prototype.define.apply(this, [].slice.call(arguments));","  var m = definition.model.modelName;","  if (!this.collection(m)) this.initCollection(m);","};","","Memory.prototype._createSync = function(model, data, fn) {","  // FIXME: [rfeng] We need to generate unique ids based on the id type","  // FIXME: [rfeng] We don't support composite ids yet","  var currentId = this.collectionSeq(model);","  if (currentId === undefined) { // First time","    currentId = this.collectionSeq(model, 1);","  }","  var id = this.getIdValue(model, data) || currentId;","  if (id > currentId) {","    // If the id is passed in and the value is greater than the current id","    currentId = id;","  }","  this.collectionSeq(model, Number(currentId) + 1);","","  var props = this._models[model].properties;","  var idName = this.idName(model);","  id = (props[idName] && props[idName].type && props[idName].type(id)) || id;","  this.setIdValue(model, data, id);","  if (!this.collection(model)) {","    this.collection(model, {});","  }","","  if (this.collection(model)[id]) {","    var error = new Error(g.f('Duplicate entry for %s.%s', model, idName));","    error.statusCode = error.status = 409;","    return fn(error);","  }","","  this.collection(model)[id] = serialize(data);","  fn(null, id);","};","","Memory.prototype.create = function create(model, data, options, callback) {","  var self = this;","  this._createSync(model, data, function(err, id) {","    if (err) {","      return process.nextTick(function() {","        callback(err);","      });","    };","    self.saveToFile(id, callback);","  });","};","","Memory.prototype.updateOrCreate = function(model, data, options, callback) {","  var self = this;","  this.exists(model, self.getIdValue(model, data), options, function(err, exists) {","    if (exists) {","      self.save(model, data, options, function(err, data) {","        callback(err, data, {isNewInstance: false});","      });","    } else {","      self.create(model, data, options, function(err, id) {","        self.setIdValue(model, data, id);","        callback(err, data, {isNewInstance: true});","      });","    }","  });","};","","Memory.prototype.patchOrCreateWithWhere =","Memory.prototype.upsertWithWhere = function(model, where, data, options, callback) {","  var self = this;","  var primaryKey = this.idName(model);","  var filter = {where: where};","  var nodes = self._findAllSkippingIncludes(model, filter);","  if (nodes.length === 0) {","    return self._createSync(model, data, function(err, id) {","      if (err) return process.nextTick(function() { callback(err); });","      self.saveToFile(id, function(err, id) {","        self.setIdValue(model, data, id);","        callback(err, self.fromDb(model, data), {isNewInstance: true});","      });","    });","  }","  if (nodes.length === 1) {","    var primaryKeyValue = nodes[0][primaryKey];","    self.updateAttributes(model, primaryKeyValue, data, options, function(err, data) {","      callback(err, data, {isNewInstance: false});","    });","  } else {","    process.nextTick(function() {","      var error = new Error('There are multiple instances found.' +","        'Upsert Operation will not be performed!');","      error.statusCode = 400;","      callback(error);","    });","  }","};","","Memory.prototype.findOrCreate = function(model, filter, data, callback) {","  var self = this;","  var nodes = self._findAllSkippingIncludes(model, filter);","  var found = nodes[0];","","  if (!found) {","    // Calling _createSync to update the collection in a sync way and to guarantee to create it in the same turn of even loop","    return self._createSync(model, data, function(err, id) {","      if (err) return callback(err);","      self.saveToFile(id, function(err, id) {","        self.setIdValue(model, data, id);","        callback(err, data, true);","      });","    });","  }","","  if (!filter || !filter.include) {","    return process.nextTick(function() {","      callback(null, found, false);","    });","  }","","  self._models[model].model.include(nodes[0], filter.include, {}, function(err, nodes) {","    process.nextTick(function() {","      if (err) return callback(err);","      callback(null, nodes[0], false);","    });","  });","};","","Memory.prototype.save = function save(model, data, options, callback) {","  var self = this;","  var id = this.getIdValue(model, data);","  var cachedModels = this.collection(model);","  var modelData = cachedModels && this.collection(model)[id];","  modelData = modelData && deserialize(modelData);","  if (modelData) {","    data = merge(modelData, data);","  }","  this.collection(model)[id] = serialize(data);","  this.saveToFile(data, function(err) {","    callback(err, self.fromDb(model, data), {isNewInstance: !modelData});","  });","};","","Memory.prototype.exists = function exists(model, id, options, callback) {","  process.nextTick(function() {","    callback(null, this.collection(model) && this.collection(model).hasOwnProperty(id));","  }.bind(this));","};","","Memory.prototype.find = function find(model, id, options, callback) {","  process.nextTick(function() {","    callback(null, id in this.collection(model) && this.fromDb(model, this.collection(model)[id]));","  }.bind(this));","};","","Memory.prototype.destroy = function destroy(model, id, options, callback) {","  var exists = this.collection(model)[id];","  delete this.collection(model)[id];","  this.saveToFile({count: exists ? 1 : 0}, callback);","};","","Memory.prototype.fromDb = function(model, data) {","  if (!data) return null;","  data = deserialize(data);","  var props = this._models[model].properties;","  for (var key in data) {","    var val = data[key];","    if (val === undefined || val === null) {","      continue;","    }","    if (props[key]) {","      switch (props[key].type.name) {","        case 'Date':","          val = new Date(val.toString().replace(/GMT.*$/, 'GMT'));","          break;","        case 'Boolean':","          val = Boolean(val);","          break;","        case 'Number':","          val = Number(val);","          break;","      }","    }","    data[key] = val;","  }","  return data;","};","","function getValue(obj, path) {","  if (obj == null) {","    return undefined;","  }","  var keys = path.split('.');","  var val = obj;","  for (var i = 0, n = keys.length; i < n; i++) {","    val = val[keys[i]];","    if (val == null) {","      return val;","    }","  }","  return val;","}","","Memory.prototype._findAllSkippingIncludes = function(model, filter) {","  var nodes = Object.keys(this.collection(model)).map(function(key) {","    return this.fromDb(model, this.collection(model)[key]);","  }.bind(this));","","  if (filter) {","    if (!filter.order) {","      var idNames = this.idNames(model);","      if (idNames && idNames.length) {","        filter.order = idNames;","      }","    }","    // do we need some sorting?","    if (filter.order) {","      var orders = filter.order;","      if (typeof filter.order === 'string') {","        orders = [filter.order];","      }","      orders.forEach(function(key, i) {","        var reverse = 1;","        var m = key.match(/\\s+(A|DE)SC$/i);","        if (m) {","          key = key.replace(/\\s+(A|DE)SC/i, '');","          if (m[1].toLowerCase() === 'de') reverse = -1;","        }","        orders[i] = {'key': key, 'reverse': reverse};","      });","      nodes = nodes.sort(sorting.bind(orders));","    }","","    var nearFilter = geo.nearFilter(filter.where);","","    // geo sorting","    if (nearFilter) {","      nodes = geo.filter(nodes, nearFilter);","    }","","    // do we need some filtration?","    if (filter.where && nodes)","      nodes = nodes.filter(applyFilter(filter));","","    // field selection","    if (filter.fields) {","      nodes = nodes.map(utils.selectFields(filter.fields));","    }","","    // limit/skip","    var skip = filter.skip || filter.offset || 0;","    var limit = filter.limit || nodes.length;","    nodes = nodes.slice(skip, skip + limit);","  }","  return nodes;","","  function sorting(a, b) {","    var undefinedA, undefinedB;","","    for (var i = 0, l = this.length; i < l; i++) {","      var aVal = getValue(a, this[i].key);","      var bVal = getValue(b, this[i].key);","      undefinedB = bVal === undefined && aVal !== undefined;","      undefinedA = aVal === undefined && bVal !== undefined;","","      if (undefinedB || aVal > bVal) {","        return 1 * this[i].reverse;","      } else if (undefinedA || aVal < bVal) {","        return -1 * this[i].reverse;","      }","    }","","    return 0;","  }","};","","Memory.prototype.all = function all(model, filter, options, callback) {","  var self = this;","  var nodes = self._findAllSkippingIncludes(model, filter);","","  process.nextTick(function() {","    if (filter && filter.include) {","      self._models[model].model.include(nodes, filter.include, options, callback);","    } else {","      callback(null, nodes);","    }","  });","};","","function applyFilter(filter) {","  var where = filter.where;","  if (typeof where === 'function') {","    return where;","  }","  var keys = Object.keys(where);","  return function(obj) {","    return keys.every(function(key) {","      if (key === 'and' || key === 'or') {","        if (Array.isArray(where[key])) {","          if (key === 'and') {","            return where[key].every(function(cond) {","              return applyFilter({where: cond})(obj);","            });","          }","          if (key === 'or') {","            return where[key].some(function(cond) {","              return applyFilter({where: cond})(obj);","            });","          }","        }","      }","","      var value = getValue(obj, key);","      // Support referencesMany and other embedded relations","      // Also support array types. Mongo, possibly PostgreSQL","      if (Array.isArray(value)) {","        var matcher = where[key];","        // The following condition is for the case where we are querying with","        // a neq filter, and when the value is an empty array ([]).","        if (matcher.neq !== undefined && value.length <= 0) {","          return true;","        }","        return value.some(function(v, i) {","          var filter = {where: {}};","          filter.where[i] = matcher;","          return applyFilter(filter)(value);","        });","      }","","      if (test(where[key], value)) {","        return true;","      }","","      // If we have a composed key a.b and b would resolve to a property of an object inside an array","      // then, we attempt to emulate mongo db matching. Helps for embedded relations","      var dotIndex = key.indexOf('.');","      var subValue = obj[key.substring(0, dotIndex)];","      if (dotIndex !== -1) {","        var subFilter = {where: {}};","        var subKey = key.substring(dotIndex + 1);","        subFilter.where[subKey] = where[key];","        if (Array.isArray(subValue)) {","          return subValue.some(applyFilter(subFilter));","        } else if (typeof subValue === 'object' && subValue !== null) {","          return applyFilter(subFilter)(subValue);","        }","      }","","      return false;","    });","  };","","  function toRegExp(pattern) {","    if (pattern instanceof RegExp) {","      return pattern;","    }","    var regex = '';","    // Escaping user input to be treated as a literal string within a regular expression","    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Writing_a_Regular_Expression_Pattern","    pattern = pattern.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1');","    for (var i = 0, n = pattern.length; i < n; i++) {","      var char = pattern.charAt(i);","      if (char === '\\\\') {","        i++; // Skip to next char","        if (i < n) {","          regex += pattern.charAt(i);","        }","        continue;","      } else if (char === '%') {","        regex += '.*';","      } else if (char === '_') {","        regex += '.';","      } else if (char === '.') {","        regex += '\\\\.';","      } else if (char === '*') {","        regex += '\\\\*';","      } else {","        regex += char;","      }","    }","    return regex;","  }","","  function test(example, value) {","    if (typeof value === 'string' && (example instanceof RegExp)) {","      return value.match(example);","    }","","    if (example === undefined) {","      return undefined;","    }","","    if (typeof example === 'object' && example !== null) {","      if (example.regexp) {","        return value ? value.match(example.regexp) : false;","      }","","      // ignore geo near filter","      if (example.near) {","        return true;","      }","","      var i;","      if (example.inq) {","        // if (!value) return false;","        for (i = 0; i < example.inq.length; i++) {","          if (example.inq[i] == value) {","            return true;","          }","        }","        return false;","      }","","      if (example.nin) {","        for (i = 0; i < example.nin.length; i++) {","          if (example.nin[i] == value) {","            return false;","          }","        }","        return true;","      }","","      if ('neq' in example) {","        return compare(example.neq, value) !== 0;","      }","","      if ('between' in example) {","        return (testInEquality({gte: example.between[0]}, value) &&","        testInEquality({lte: example.between[1]}, value));","      }","","      if (example.like || example.nlike || example.ilike || example.nilike) {","        var like = example.like || example.nlike || example.ilike || example.nilike;","        if (typeof like === 'string') {","          like = toRegExp(like);","        }","        if (example.like) {","          return !!new RegExp(like).test(value);","        }","","        if (example.nlike) {","          return !new RegExp(like).test(value);","        }","","        if (example.ilike) {","          return !!new RegExp(like, 'i').test(value);","        }","","        if (example.nilike) {","          return !new RegExp(like, 'i').test(value);","        }","      }","","      if (testInEquality(example, value)) {","        return true;","      }","    }","    // not strict equality","    return (example !== null ? example.toString() : example) ==","      (value != null ? value.toString() : value);","  }","","  /**","   * Compare two values","   * @param {*} val1 The 1st value","   * @param {*} val2 The 2nd value","   * @returns {number} 0: =, positive: >, negative <","   * @private","   */","  function compare(val1, val2) {","    if (val1 == null || val2 == null) {","      // Either val1 or val2 is null or undefined","      return val1 == val2 ? 0 : NaN;","    }","    if (typeof val1 === 'number') {","      return val1 - val2;","    }","    if (typeof val1 === 'string') {","      return (val1 > val2) ? 1 : ((val1 < val2) ? -1 : (val1 == val2) ? 0 : NaN);","    }","    if (typeof val1 === 'boolean') {","      return val1 - val2;","    }","    if (val1 instanceof Date) {","      var result = val1 - val2;","      return result;","    }","    // Return NaN if we don't know how to compare","    return (val1 == val2) ? 0 : NaN;","  }","","  function testInEquality(example, val) {","    if ('gt' in example) {","      return compare(val, example.gt) > 0;","    }","    if ('gte' in example) {","      return compare(val, example.gte) >= 0;","    }","    if ('lt' in example) {","      return compare(val, example.lt) < 0;","    }","    if ('lte' in example) {","      return compare(val, example.lte) <= 0;","    }","    return false;","  }","}","","Memory.prototype.destroyAll = function destroyAll(model, where, options, callback) {","  var cache = this.collection(model);","  var filter = null;","  var count = 0;","  if (where) {","    filter = applyFilter({where: where});","    Object.keys(cache).forEach(function(id) {","      if (!filter || filter(this.fromDb(model, cache[id]))) {","        count++;","        delete cache[id];","      }","    }.bind(this));","  } else {","    count = Object.keys(cache).length;","    this.collection(model, {});","  }","  this.saveToFile({count: count}, callback);","};","","Memory.prototype.count = function count(model, where, options, callback) {","  var cache = this.collection(model);","  var data = Object.keys(cache);","  if (where) {","    var filter = {where: where};","    data = data.map(function(id) {","      return this.fromDb(model, cache[id]);","    }.bind(this));","    data = data.filter(applyFilter(filter));","  }","  process.nextTick(function() {","    callback(null, data.length);","  });","};","","Memory.prototype.update =","  Memory.prototype.updateAll = function updateAll(model, where, data, options, cb) {","    var self = this;","    var cache = this.collection(model);","    var filter = null;","    where = where || {};","    filter = applyFilter({where: where});","","    var ids = Object.keys(cache);","    var count = 0;","    async.each(ids, function(id, done) {","      var inst = self.fromDb(model, cache[id]);","      if (!filter || filter(inst)) {","        count++;","        // The id value from the cache is string","        // Get the real id from the inst","        id = self.getIdValue(model, inst);","        self.updateAttributes(model, id, data, options, done);","      } else {","        process.nextTick(done);","      }","    }, function(err) {","      if (err) return cb(err);","      self.saveToFile({count: count}, cb);","    });","  };","","Memory.prototype.updateAttributes = function updateAttributes(model, id, data, options, cb) {","  if (!id) {","    var err = new Error(g.f('You must provide an {{id}} when updating attributes!'));","    if (cb) {","      return cb(err);","    } else {","      throw err;","    }","  }","","  // Do not modify the data object passed in arguments","  data = Object.create(data);","","  this.setIdValue(model, data, id);","","  var cachedModels = this.collection(model);","  var modelData = cachedModels && this.collection(model)[id];","","  if (modelData) {","    this.save(model, data, options, cb);","  } else {","    cb(new Error(g.f('Could not update attributes. {{Object}} with {{id}} %s does not exist!', id)));","  }","};","","Memory.prototype.replaceById = function(model, id, data, options, cb) {","  var self = this;","  if (!id) {","    var err = new Error(g.f('You must provide an {{id}} when replacing!'));","    return process.nextTick(function() { cb(err); });","  }","  // Do not modify the data object passed in arguments","  data = Object.create(data);","  this.setIdValue(model, data, id);","  var cachedModels = this.collection(model);","  var modelData = cachedModels && this.collection(model)[id];","  if (!modelData) {","    var msg = 'Could not replace. Object with id ' + id + ' does not exist!';","    var error = new Error(msg);","    error.statusCode = error.status = 404;","    return process.nextTick(function() { cb(error); });","  }","","  var newModelData = {};","  for (var key in data) {","    var val = data[key];","    if (typeof val === 'function') {","      continue; // Skip methods","    }","    newModelData[key] = val;","  }","","  this.collection(model)[id] = serialize(newModelData);","  this.saveToFile(newModelData, function(err) {","    cb(err, self.fromDb(model, newModelData));","  });","};","","Memory.prototype.replaceOrCreate = function(model, data, options, callback) {","  var self = this;","  var idName = self.idNames(model)[0];","  var idValue = self.getIdValue(model, data);","  var filter = {where: {}};","  filter.where[idName] = idValue;","  var nodes = self._findAllSkippingIncludes(model, filter);","  var found = nodes[0];","","  if (!found) {","    // Calling _createSync to update the collection in a sync way and","    // to guarantee to create it in the same turn of even loop","    return self._createSync(model, data, function(err, id) {","      if (err) return process.nextTick(function() { callback(err); });","      self.saveToFile(id, function(err, id) {","        self.setIdValue(model, data, id);","        callback(err, self.fromDb(model, data), {isNewInstance: true});","      });","    });","  }","  var id = self.getIdValue(model, data);","  self.collection(model)[id] = serialize(data);","  self.saveToFile(data, function(err) {","    callback(err, self.fromDb(model, data), {isNewInstance: false});","  });","};","","Memory.prototype.transaction = function() {","  return new Memory(this);","};","","Memory.prototype.exec = function(callback) {","  this.onTransactionExec();","  setTimeout(callback, 50);","};","","Memory.prototype.buildNearFilter = function(filter) {","  // noop","};","","Memory.prototype.automigrate = function(models, cb) {","  var self = this;","","  if ((!cb) && ('function' === typeof models)) {","    cb = models;","    models = undefined;","  }","  // First argument is a model name","  if ('string' === typeof models) {","    models = [models];","  }","","  models = models || Object.keys(self._models);","  if (models.length === 0) {","    return process.nextTick(cb);","  }","","  var invalidModels = models.filter(function(m) {","    return !(m in self._models);","  });","","  if (invalidModels.length) {","    return process.nextTick(function() {","      cb(new Error(g.f('Cannot migrate models not attached to this datasource: %s',","        invalidModels.join(' '))));","    });","  }","","  models.forEach(function(m) {","    self.initCollection(m);","  });","  if (cb) process.nextTick(cb);","};","","function merge(base, update) {","  if (!base) {","    return update;","  }","  // We cannot use Object.keys(update) if the update is an instance of the model","  // class as the properties are defined at the ModelClass.prototype level","  for (var key in update) {","    var val = update[key];","    if (typeof val === 'function') {","      continue; // Skip methods","    }","    base[key] = val;","  }","  return base;","}",""],"l":{"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"24":1,"25":0,"27":0,"30":1,"31":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"42":0,"43":0,"44":0,"48":1,"50":1,"51":0,"54":1,"55":0,"58":1,"59":0,"60":0,"62":0,"66":1,"67":0,"68":0,"70":0,"73":1,"74":0,"75":0,"77":0,"78":0,"80":0,"84":1,"85":0,"86":0,"87":0,"89":0,"92":1,"93":0,"94":0,"97":1,"98":0,"99":0,"100":0,"103":1,"104":0,"105":0,"106":0,"113":1,"114":0,"115":0,"117":0,"118":0,"119":0,"120":0,"122":0,"126":0,"127":0,"128":0,"129":0,"130":0,"132":0,"133":0,"134":0,"138":0,"139":0,"140":0,"142":0,"143":0,"144":0,"145":0,"150":0,"151":0,"152":0,"156":0,"159":1,"160":0,"161":0,"162":0,"164":0,"167":0,"168":0,"170":0,"171":0,"172":0,"175":0,"178":1,"179":0,"180":0,"182":0,"183":0,"184":0,"188":0,"189":0,"190":0,"191":0,"193":0,"201":1,"202":0,"203":0,"204":0,"205":0,"206":0,"208":0,"213":0,"215":0,"219":0,"220":0,"221":0,"224":0,"225":0,"230":1,"231":0,"232":0,"233":0,"236":1,"239":0,"240":0,"241":0,"243":0,"244":0,"246":0,"248":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"258":0,"259":0,"260":0,"261":0,"264":0,"265":0,"268":1,"269":0,"270":0,"271":0,"272":0,"273":0,"276":0,"280":1,"281":0,"282":0,"283":0,"284":0,"285":0,"288":0,"289":0,"290":0,"296":1,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"311":0,"312":0,"313":0,"314":0,"317":0,"318":0,"320":0,"321":0,"326":1,"327":0,"328":0,"329":0,"331":0,"333":0,"334":0,"335":0,"336":0,"337":0,"342":0,"343":0,"344":0,"348":0,"349":0,"350":0,"351":0,"356":1,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"365":0,"366":0,"367":0,"371":1,"372":0,"373":0,"377":1,"378":0,"379":0,"383":1,"384":0,"385":0,"386":0,"389":1,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"398":0,"399":0,"401":0,"402":0,"404":0,"405":0,"407":0,"408":0,"411":0,"413":0,"416":1,"417":0,"418":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"428":0,"431":1,"432":0,"433":0,"436":0,"437":0,"438":0,"439":0,"440":0,"444":0,"445":0,"446":0,"447":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"456":0,"458":0,"461":0,"464":0,"465":0,"469":0,"470":0,"473":0,"474":0,"478":0,"479":0,"480":0,"482":0,"484":1,"485":0,"487":0,"488":0,"489":0,"490":0,"491":0,"493":0,"494":0,"495":0,"496":0,"500":0,"504":1,"505":0,"506":0,"508":0,"509":0,"510":0,"512":0,"517":1,"518":0,"519":0,"520":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"532":0,"533":0,"534":0,"540":0,"543":0,"544":0,"547":0,"548":0,"550":0,"551":0,"552":0,"553":0,"557":0,"558":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"576":0,"580":1,"581":0,"582":0,"584":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"605":0,"608":0,"611":1,"612":0,"613":0,"616":0,"617":0,"620":0,"621":0,"622":0,"626":0,"627":0,"630":0,"631":0,"633":0,"634":0,"635":0,"638":0,"641":0,"642":0,"643":0,"644":0,"647":0,"650":0,"651":0,"654":0,"655":0,"659":0,"660":0,"661":0,"662":0,"664":0,"665":0,"668":0,"669":0,"672":0,"673":0,"676":0,"677":0,"681":0,"682":0,"686":0,"697":1,"698":0,"700":0,"702":0,"703":0,"705":0,"706":0,"708":0,"709":0,"711":0,"712":0,"713":0,"716":0,"719":1,"720":0,"721":0,"723":0,"724":0,"726":0,"727":0,"729":0,"730":0,"732":0,"736":1,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"749":0,"750":0,"752":0,"755":1,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"763":0,"765":0,"766":0,"770":1,"772":0,"773":0,"774":0,"775":0,"776":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"786":0,"787":0,"789":0,"792":0,"793":0,"797":1,"798":0,"799":0,"800":0,"801":0,"803":0,"808":0,"810":0,"812":0,"813":0,"815":0,"816":0,"818":0,"822":1,"823":0,"824":0,"825":0,"826":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"840":0,"841":0,"842":0,"843":0,"844":0,"846":0,"849":0,"850":0,"851":0,"855":1,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"864":0,"867":0,"868":0,"869":0,"870":0,"871":0,"875":0,"876":0,"877":0,"878":0,"882":1,"883":0,"886":1,"887":0,"888":0,"891":1,"895":1,"896":0,"898":0,"899":0,"900":0,"903":0,"904":0,"907":0,"908":0,"909":0,"912":0,"913":0,"916":0,"917":0,"918":0,"923":0,"924":0,"926":0,"929":1,"930":0,"931":0,"935":0,"936":0,"937":0,"938":0,"940":0,"942":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":25}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":67}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":65}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":77}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":63}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":54}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":63}}},"branchMap":{},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback-connector","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var SG = require('strong-globalize');","SG.SetRootDir(__dirname);","","exports.Connector = require('./lib/connector');","// Set up SqlConnector as an alias to SQLConnector","exports.SQLConnector = exports.SqlConnector = require('./lib/sql');","exports.ParameterizedSQL = exports.SQLConnector.ParameterizedSQL;","exports.Transaction = require('./lib/transaction');","","exports.createPromiseCallback = require('./lib/utils').createPromiseCallback;","","// KeyValue helpers","exports.ModelKeyComposer = require('./lib/model-key-composer');","exports.BinaryPacker = require('./lib/binary-packer');","exports.JSONStringPacker = require('./lib/json-string-packer');",""],"l":{"7":1,"8":1,"10":1,"12":1,"13":1,"14":1,"16":1,"19":1,"20":1,"21":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/connector.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/connector.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":1,"13":0,"14":1,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":1,"26":0,"27":1,"28":0,"29":1,"30":0,"31":0,"32":1,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":1,"43":0,"44":1,"45":0,"46":0,"47":1,"48":0,"49":0,"50":1,"51":0,"52":0,"53":1,"54":0,"55":0,"56":1,"57":0,"58":1,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":1,"72":7,"73":0,"74":7,"75":7,"76":10,"77":10,"78":0,"79":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0,0],"22":[0,7],"23":[7,0],"24":[10,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":7,"23":10,"24":0},"fnMap":{"1":{"name":"Connector","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":35}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":35},"end":{"line":34,"column":46}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":31},"end":{"line":43,"column":42}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":39},"end":{"line":52,"column":54}}},"5":{"name":"(anonymous_5)","line":63,"loc":{"start":{"line":63,"column":39},"end":{"line":63,"column":59}}},"6":{"name":"(anonymous_6)","line":80,"loc":{"start":{"line":80,"column":34},"end":{"line":80,"column":45}}},"7":{"name":"(anonymous_7)","line":99,"loc":{"start":{"line":99,"column":30},"end":{"line":99,"column":75}}},"8":{"name":"(anonymous_8)","line":108,"loc":{"start":{"line":108,"column":41},"end":{"line":108,"column":61}}},"9":{"name":"(anonymous_9)","line":125,"loc":{"start":{"line":125,"column":51},"end":{"line":125,"column":71}}},"10":{"name":"(anonymous_10)","line":136,"loc":{"start":{"line":136,"column":44},"end":{"line":136,"column":74}}},"11":{"name":"(anonymous_11)","line":146,"loc":{"start":{"line":146,"column":36},"end":{"line":146,"column":52}}},"12":{"name":"(anonymous_12)","line":159,"loc":{"start":{"line":159,"column":29},"end":{"line":159,"column":45}}},"13":{"name":"(anonymous_13)","line":168,"loc":{"start":{"line":168,"column":30},"end":{"line":168,"column":46}}},"14":{"name":"(anonymous_14)","line":179,"loc":{"start":{"line":179,"column":25},"end":{"line":179,"column":47}}},"15":{"name":"(anonymous_15)","line":188,"loc":{"start":{"line":188,"column":29},"end":{"line":188,"column":55}}},"16":{"name":"(anonymous_16)","line":199,"loc":{"start":{"line":199,"column":37},"end":{"line":199,"column":87}}},"17":{"name":"disconnect","line":208,"loc":{"start":{"line":208,"column":33},"end":{"line":208,"column":57}}},"18":{"name":"(anonymous_18)","line":222,"loc":{"start":{"line":222,"column":33},"end":{"line":222,"column":55}}},"19":{"name":"(anonymous_19)","line":233,"loc":{"start":{"line":233,"column":33},"end":{"line":233,"column":62}}},"20":{"name":"(anonymous_20)","line":244,"loc":{"start":{"line":244,"column":33},"end":{"line":244,"column":48}}},"21":{"name":"(anonymous_21)","line":264,"loc":{"start":{"line":264,"column":42},"end":{"line":264,"column":53}}},"22":{"name":"(anonymous_22)","line":274,"loc":{"start":{"line":274,"column":26},"end":{"line":274,"column":71}}},"23":{"name":"(anonymous_23)","line":279,"loc":{"start":{"line":279,"column":20},"end":{"line":279,"column":36}}},"24":{"name":"(anonymous_24)","line":282,"loc":{"start":{"line":282,"column":15},"end":{"line":282,"column":26}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":13}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":27}},"5":{"start":{"line":18,"column":0},"end":{"line":22,"column":1}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":20}},"7":{"start":{"line":20,"column":2},"end":{"line":20,"column":19}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":33}},"9":{"start":{"line":28,"column":0},"end":{"line":28,"column":39}},"10":{"start":{"line":34,"column":0},"end":{"line":37,"column":2}},"11":{"start":{"line":35,"column":2},"end":{"line":36,"column":46}},"12":{"start":{"line":43,"column":0},"end":{"line":45,"column":2}},"13":{"start":{"line":44,"column":2},"end":{"line":44,"column":25}},"14":{"start":{"line":52,"column":0},"end":{"line":55,"column":2}},"15":{"start":{"line":54,"column":2},"end":{"line":54,"column":16}},"16":{"start":{"line":63,"column":0},"end":{"line":69,"column":2}},"17":{"start":{"line":64,"column":2},"end":{"line":64,"column":64}},"18":{"start":{"line":65,"column":2},"end":{"line":65,"column":54}},"19":{"start":{"line":66,"column":2},"end":{"line":67,"column":53}},"20":{"start":{"line":68,"column":2},"end":{"line":68,"column":12}},"21":{"start":{"line":80,"column":0},"end":{"line":90,"column":2}},"22":{"start":{"line":81,"column":2},"end":{"line":88,"column":3}},"23":{"start":{"line":82,"column":4},"end":{"line":87,"column":6}},"24":{"start":{"line":89,"column":2},"end":{"line":89,"column":24}},"25":{"start":{"line":99,"column":0},"end":{"line":101,"column":2}},"26":{"start":{"line":100,"column":2},"end":{"line":100,"column":73}},"27":{"start":{"line":108,"column":0},"end":{"line":110,"column":2}},"28":{"start":{"line":109,"column":2},"end":{"line":109,"column":33}},"29":{"start":{"line":125,"column":0},"end":{"line":128,"column":2}},"30":{"start":{"line":126,"column":2},"end":{"line":126,"column":67}},"31":{"start":{"line":127,"column":2},"end":{"line":127,"column":29}},"32":{"start":{"line":136,"column":0},"end":{"line":139,"column":2}},"33":{"start":{"line":137,"column":2},"end":{"line":137,"column":49}},"34":{"start":{"line":138,"column":2},"end":{"line":138,"column":45}},"35":{"start":{"line":146,"column":0},"end":{"line":152,"column":2}},"36":{"start":{"line":147,"column":2},"end":{"line":147,"column":41}},"37":{"start":{"line":148,"column":2},"end":{"line":150,"column":3}},"38":{"start":{"line":149,"column":4},"end":{"line":149,"column":39}},"39":{"start":{"line":151,"column":2},"end":{"line":151,"column":33}},"40":{"start":{"line":159,"column":0},"end":{"line":161,"column":2}},"41":{"start":{"line":160,"column":2},"end":{"line":160,"column":49}},"42":{"start":{"line":168,"column":0},"end":{"line":170,"column":2}},"43":{"start":{"line":169,"column":2},"end":{"line":169,"column":50}},"44":{"start":{"line":179,"column":0},"end":{"line":182,"column":2}},"45":{"start":{"line":180,"column":2},"end":{"line":180,"column":58}},"46":{"start":{"line":181,"column":2},"end":{"line":181,"column":19}},"47":{"start":{"line":188,"column":0},"end":{"line":191,"column":2}},"48":{"start":{"line":189,"column":2},"end":{"line":189,"column":60}},"49":{"start":{"line":190,"column":2},"end":{"line":190,"column":66}},"50":{"start":{"line":199,"column":0},"end":{"line":202,"column":2}},"51":{"start":{"line":200,"column":2},"end":{"line":200,"column":48}},"52":{"start":{"line":201,"column":2},"end":{"line":201,"column":57}},"53":{"start":{"line":208,"column":0},"end":{"line":213,"column":2}},"54":{"start":{"line":210,"column":2},"end":{"line":212,"column":3}},"55":{"start":{"line":211,"column":4},"end":{"line":211,"column":25}},"56":{"start":{"line":222,"column":0},"end":{"line":224,"column":2}},"57":{"start":{"line":223,"column":2},"end":{"line":223,"column":42}},"58":{"start":{"line":233,"column":0},"end":{"line":237,"column":2}},"59":{"start":{"line":234,"column":2},"end":{"line":236,"column":3}},"60":{"start":{"line":235,"column":4},"end":{"line":235,"column":37}},"61":{"start":{"line":244,"column":0},"end":{"line":256,"column":2}},"62":{"start":{"line":245,"column":2},"end":{"line":247,"column":3}},"63":{"start":{"line":246,"column":4},"end":{"line":246,"column":17}},"64":{"start":{"line":248,"column":2},"end":{"line":250,"column":3}},"65":{"start":{"line":249,"column":4},"end":{"line":249,"column":16}},"66":{"start":{"line":251,"column":2},"end":{"line":254,"column":3}},"67":{"start":{"line":253,"column":4},"end":{"line":253,"column":17}},"68":{"start":{"line":255,"column":2},"end":{"line":255,"column":14}},"69":{"start":{"line":264,"column":0},"end":{"line":266,"column":2}},"70":{"start":{"line":265,"column":2},"end":{"line":265,"column":31}},"71":{"start":{"line":274,"column":0},"end":{"line":289,"column":2}},"72":{"start":{"line":275,"column":2},"end":{"line":277,"column":3}},"73":{"start":{"line":276,"column":4},"end":{"line":276,"column":24}},"74":{"start":{"line":278,"column":2},"end":{"line":288,"column":3}},"75":{"start":{"line":279,"column":4},"end":{"line":287,"column":7}},"76":{"start":{"line":280,"column":6},"end":{"line":286,"column":7}},"77":{"start":{"line":281,"column":8},"end":{"line":285,"column":11}},"78":{"start":{"line":283,"column":12},"end":{"line":283,"column":46}},"79":{"start":{"line":294,"column":0},"end":{"line":294,"column":78}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":18},"end":{"line":21,"column":26}},{"start":{"line":21,"column":30},"end":{"line":21,"column":32}}]},"2":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":9},"end":{"line":35,"column":26}},{"start":{"line":36,"column":5},"end":{"line":36,"column":44}}]},"3":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":15},"end":{"line":64,"column":36}},{"start":{"line":64,"column":40},"end":{"line":64,"column":63}}]},"4":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":44},"end":{"line":66,"column":82}},{"start":{"line":67,"column":5},"end":{"line":67,"column":51}}]},"5":{"line":67,"type":"cond-expr","locations":[{"start":{"line":67,"column":36},"end":{"line":67,"column":44}},{"start":{"line":67,"column":47},"end":{"line":67,"column":51}}]},"6":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"7":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":17},"end":{"line":126,"column":60}},{"start":{"line":126,"column":64},"end":{"line":126,"column":66}}]},"8":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":9},"end":{"line":138,"column":14}},{"start":{"line":138,"column":18},"end":{"line":138,"column":44}}]},"9":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"10":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":9},"end":{"line":151,"column":10}},{"start":{"line":151,"column":14},"end":{"line":151,"column":32}}]},"11":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":9},"end":{"line":181,"column":10}},{"start":{"line":181,"column":14},"end":{"line":181,"column":18}}]},"12":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":29},"end":{"line":189,"column":53}},{"start":{"line":189,"column":57},"end":{"line":189,"column":59}}]},"13":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":2},"end":{"line":210,"column":2}},{"start":{"line":210,"column":2},"end":{"line":210,"column":2}}]},"14":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":9},"end":{"line":223,"column":13}},{"start":{"line":223,"column":17},"end":{"line":223,"column":41}}]},"15":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":2},"end":{"line":234,"column":2}},{"start":{"line":234,"column":2},"end":{"line":234,"column":2}}]},"16":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":2},"end":{"line":245,"column":2}},{"start":{"line":245,"column":2},"end":{"line":245,"column":2}}]},"17":{"line":245,"type":"binary-expr","locations":[{"start":{"line":245,"column":6},"end":{"line":245,"column":19}},{"start":{"line":245,"column":23},"end":{"line":245,"column":30}}]},"18":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":2},"end":{"line":248,"column":2}},{"start":{"line":248,"column":2},"end":{"line":248,"column":2}}]},"19":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":6},"end":{"line":248,"column":19}},{"start":{"line":248,"column":23},"end":{"line":248,"column":35}},{"start":{"line":248,"column":39},"end":{"line":248,"column":53}}]},"20":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":2},"end":{"line":251,"column":2}},{"start":{"line":251,"column":2},"end":{"line":251,"column":2}}]},"21":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":6},"end":{"line":251,"column":29}},{"start":{"line":251,"column":33},"end":{"line":251,"column":55}},{"start":{"line":252,"column":4},"end":{"line":252,"column":28}}]},"22":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]},"23":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":2},"end":{"line":278,"column":2}},{"start":{"line":278,"column":2},"end":{"line":278,"column":2}}]},"24":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":6},"end":{"line":280,"column":6}},{"start":{"line":280,"column":6},"end":{"line":280,"column":6}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback-connector","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var SG = require('strong-globalize');","var g = SG();","var debug = require('debug')('loopback:connector');","","module.exports = Connector;","","/**"," * Base class for LoopBack connector. This is more a collection of useful"," * methods for connectors than a super class"," * @constructor"," */","function Connector(name, settings) {","  this._models = {};","  this.name = name;","  this.settings = settings || {};","}","","/**"," * Set the relational property to indicate the backend is a relational DB"," * @type {boolean}"," */","Connector.prototype.relational = false;","","/**"," * Check if the connector is for a relational DB"," * @returns {Boolean} true for relational DB"," */","Connector.prototype.isRelational = function() {","  return this.isRelational ||","    (this.getTypes().indexOf('rdbms') !== -1);","};","","/**"," * Get types associated with the connector"," * @returns {String[]} The types for the connector"," */","Connector.prototype.getTypes = function() {","  return ['db', 'nosql'];","};","","/**"," * Get the default data type for ID"," * @param prop Property definition"," * @returns {Function} The default type for ID"," */","Connector.prototype.getDefaultIdType = function(prop) {","  /* jshint unused:false */","  return String;","};","","/**"," * Generate random id.  Each data source model must override this method."," * @param {String} modelName Model name"," * @returns {<model dependent>} Data type varies from model to model,"," */","","Connector.prototype.generateUniqueId = function(modelName) {","  var idType = this.getDefaultIdType && this.getDefaultIdType();","  var isTypeFunction = (typeof idType === 'function');","  var id = this.generateValueByColumnType ? this.generateValueByColumnType(idType) :","    (typeof idType === 'function' ? idType() : null);","  return id;","};","","/**"," * Get the metadata for the connector"," * @returns {Object} The metadata object"," * @property {String} type The type for the backend"," * @property {Function} defaultIdType The default id type"," * @property {Boolean} [isRelational] If the connector represents a relational"," * database"," * @property {Object} schemaForSettings The schema for settings object"," */","Connector.prototype.getMetadata = function() {","  if (!this._metadata) {","    this._metadata = {","      types: this.getTypes(),","      defaultIdType: this.getDefaultIdType(),","      isRelational: this.isRelational(),","      schemaForSettings: {},","    };","  }","  return this._metadata;","};","","/**"," * Execute a command with given parameters"," * @param {String|Object} command The command such as SQL"," * @param {*[]} [params] An array of parameter values"," * @param {Object} [options] Options object"," * @param {Function} [callback] The callback function"," */","Connector.prototype.execute = function(command, params, options, callback) {","  throw new Error(g.f('execute() must be implemented by the connector'));","};","","/**"," * Get the model definition by name"," * @param {String} modelName The model name"," * @returns {ModelDefinition} The model definition"," */","Connector.prototype.getModelDefinition = function(modelName) {","  return this._models[modelName];","};","","/**"," * Get connector specific settings for a given model, for example,"," * ```"," * {"," *   \"postgresql\": {"," *     \"schema\": \"xyz\""," *   }"," * }"," * ```"," *"," * @param {String} modelName Model name"," * @returns {Object} The connector specific settings"," */","Connector.prototype.getConnectorSpecificSettings = function(modelName) {","  var settings = this.getModelDefinition(modelName).settings || {};","  return settings[this.name];","};","","/**"," * Get model property definition"," * @param {String} modelName Model name"," * @param {String} propName Property name"," * @returns {Object} Property definition"," */","Connector.prototype.getPropertyDefinition = function(modelName, propName) {","  var model = this.getModelDefinition(modelName);","  return model && model.properties[propName];","};","","/**"," * Look up the data source by model name"," * @param {String} model The model name"," * @returns {DataSource} The data source"," */","Connector.prototype.getDataSource = function(model) {","  var m = this.getModelDefinition(model);","  if (!m) {","    debug('Model not found: ' + model);","  }","  return m && m.model.dataSource;","};","","/**"," * Get the id property name"," * @param {String} model The model name"," * @returns {String} The id property name"," */","Connector.prototype.idName = function(model) {","  return this.getDataSource(model).idName(model);","};","","/**"," * Get the id property names"," * @param {String} model The model name"," * @returns {[String]} The id property names"," */","Connector.prototype.idNames = function(model) {","  return this.getDataSource(model).idNames(model);","};","","/**"," * Get the id index (sequence number, starting from 1)"," * @param {String} model The model name"," * @param {String} prop The property name"," * @returns {Number} The id index, undefined if the property is not part"," *   of the primary key"," */","Connector.prototype.id = function(model, prop) {","  var p = this.getModelDefinition(model).properties[prop];","  return p && p.id;","};","","/**"," * Hook to be called by DataSource for defining a model"," * @param {Object} modelDefinition The model definition"," */","Connector.prototype.define = function(modelDefinition) {","  modelDefinition.settings = modelDefinition.settings || {};","  this._models[modelDefinition.model.modelName] = modelDefinition;","};","","/**"," * Hook to be called by DataSource for defining a model property"," * @param {String} model The model name"," * @param {String} propertyName The property name"," * @param {Object} propertyDefinition The object for property definition"," */","Connector.prototype.defineProperty = function(model, propertyName, propertyDefinition) {","  var modelDef = this.getModelDefinition(model);","  modelDef.properties[propertyName] = propertyDefinition;","};","","/**"," * Disconnect from the connector"," * @param {Function} [cb] Callback function"," */","Connector.prototype.disconnect = function disconnect(cb) {","  // NO-OP","  if (cb) {","    process.nextTick(cb);","  }","};","","/**"," * Get the id value for the given model"," * @param {String} model The model name"," * @param {Object} data The model instance data"," * @returns {*} The id value"," *"," */","Connector.prototype.getIdValue = function(model, data) {","  return data && data[this.idName(model)];","};","","/**"," * Set the id value for the given model"," * @param {String} model The model name"," * @param {Object} data The model instance data"," * @param {*} value The id value"," *"," */","Connector.prototype.setIdValue = function(model, data, value) {","  if (data) {","    data[this.idName(model)] = value;","  }","};","","/**"," * Test if a property is nullable"," * @param {Object} prop The property definition"," * @returns {boolean} true if nullable"," */","Connector.prototype.isNullable = function(prop) {","  if (prop.required || prop.id) {","    return false;","  }","  if (prop.nullable || prop['null'] || prop.allowNull) {","    return true;","  }","  if (prop.nullable === false || prop['null'] === false ||","    prop.allowNull === false) {","    return false;","  }","  return true;","};","","/**"," * Return the DataAccessObject interface implemented by the connector"," * @returns {Object} An object containing all methods implemented by the"," * connector that can be mixed into the model class. It should be considered as"," * the interface."," */","Connector.prototype.getDataAccessObject = function() {","  return this.DataAccessObject;","};","","/*!"," * Define aliases to a prototype method/property"," * @param {Function} cls The class that owns the method/property"," * @param {String} methodOrPropertyName The official property method/property name"," * @param {String|String[]} aliases Aliases to the official property/method"," */","Connector.defineAliases = function(cls, methodOrPropertyName, aliases) {","  if (typeof aliases === 'string') {","    aliases = [aliases];","  }","  if (Array.isArray(aliases)) {","    aliases.forEach(function(alias) {","      if (typeof alias === 'string') {","        Object.defineProperty(cls, alias, {","          get: function() {","            return this[methodOrPropertyName];","          },","        });","      }","    });","  }","};","","/**"," * `command()` and `query()` are aliases to `execute()`"," */","Connector.defineAliases(Connector.prototype, 'execute', ['command', 'query']);","",""],"l":{"7":1,"8":1,"9":1,"11":1,"18":1,"19":0,"20":0,"21":0,"28":1,"34":1,"35":0,"43":1,"44":0,"52":1,"54":0,"63":1,"64":0,"65":0,"66":0,"68":0,"80":1,"81":0,"82":0,"89":0,"99":1,"100":0,"108":1,"109":0,"125":1,"126":0,"127":0,"136":1,"137":0,"138":0,"146":1,"147":0,"148":0,"149":0,"151":0,"159":1,"160":0,"168":1,"169":0,"179":1,"180":0,"181":0,"188":1,"189":0,"190":0,"199":1,"200":0,"201":0,"208":1,"210":0,"211":0,"222":1,"223":0,"233":1,"234":0,"235":0,"244":1,"245":0,"246":0,"248":0,"249":0,"251":0,"253":0,"255":0,"264":1,"265":0,"274":1,"275":7,"276":0,"278":7,"279":7,"280":10,"281":10,"283":0,"294":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/sql.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/sql.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":1,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":0,"113":1,"114":0,"115":1,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":1,"131":0,"132":1,"133":0,"134":1,"135":0,"136":1,"137":0,"138":1,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":1,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":1,"165":0,"166":1,"167":0,"168":0,"169":0,"170":0,"171":0,"172":1,"173":0,"174":0,"175":0,"176":0,"177":0,"178":1,"179":0,"180":1,"181":0,"182":1,"183":0,"184":1,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":1,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":1,"208":0,"209":0,"210":0,"211":0,"212":0,"213":1,"214":0,"215":1,"216":0,"217":1,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":1,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":1,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":1,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":1,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":1,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":1,"304":1,"305":0,"306":0,"307":0,"308":1,"309":0,"310":0,"311":1,"312":1,"313":0,"314":0,"315":0,"316":0,"317":1,"318":0,"319":0,"320":0,"321":0,"322":1,"323":0,"324":0,"325":0,"326":0,"327":0,"328":1,"329":0,"330":0,"331":1,"332":0,"333":0,"334":1,"335":0,"336":0,"337":0,"338":0,"339":1,"340":0,"341":0,"342":1,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":1,"354":0,"355":0,"356":0,"357":0,"358":1,"359":0,"360":0,"361":0,"362":0,"363":1,"364":1,"365":1,"366":0,"367":0,"368":0,"369":0,"370":1,"371":1,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":1,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":1,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":1,"502":0,"503":0,"504":1,"505":0,"506":0,"507":0,"508":1,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":1,"529":0,"530":0,"531":0,"532":0,"533":1,"534":0,"535":0,"536":0,"537":0,"538":1,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":1,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":1,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":1,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":1,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":1,"611":1,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":1,"625":1,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":1,"639":0,"640":1,"641":0,"642":0,"643":1,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":1,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":1,"675":0,"676":0,"677":1,"678":0,"679":1,"680":0,"681":1,"682":0,"683":1,"684":0,"685":1,"686":0,"687":1,"688":0,"689":1,"690":0,"691":1,"692":0,"693":1,"694":0,"695":1,"696":0,"697":1,"698":0,"699":0,"700":1,"701":0,"702":1,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":1,"710":0,"711":1,"712":0,"713":1,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":1,"733":0,"734":1,"735":0,"736":1,"737":0,"738":1,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":1,"758":0,"759":1,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":1,"771":0,"772":1,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":1,"784":0,"785":1,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":1,"797":0,"798":1,"799":0,"800":1,"801":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0,0,0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0,0,0,0,0,0,0,0,0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0,0],"141":[0,0],"142":[0,0],"143":[0,0,0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0},"fnMap":{"1":{"name":"NOOP","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":16}}},"2":{"name":"SQLConnector","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":24}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":52,"column":37},"end":{"line":52,"column":58}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":36},"end":{"line":64,"column":57}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":21},"end":{"line":77,"column":43}}},"6":{"name":"(anonymous_6)","line":79,"loc":{"start":{"line":79,"column":30},"end":{"line":79,"column":41}}},"7":{"name":"(anonymous_7)","line":83,"loc":{"start":{"line":83,"column":31},"end":{"line":83,"column":67}}},"8":{"name":"(anonymous_8)","line":99,"loc":{"start":{"line":99,"column":34},"end":{"line":99,"column":55}}},"9":{"name":"(anonymous_9)","line":114,"loc":{"start":{"line":114,"column":21},"end":{"line":114,"column":43}}},"10":{"name":"(anonymous_10)","line":115,"loc":{"start":{"line":115,"column":31},"end":{"line":115,"column":53}}},"11":{"name":"done","line":120,"loc":{"start":{"line":120,"column":5},"end":{"line":120,"column":24}}},"12":{"name":"(anonymous_12)","line":129,"loc":{"start":{"line":129,"column":45},"end":{"line":129,"column":69}}},"13":{"name":"(anonymous_13)","line":136,"loc":{"start":{"line":136,"column":41},"end":{"line":136,"column":65}}},"14":{"name":"(anonymous_14)","line":140,"loc":{"start":{"line":140,"column":40},"end":{"line":140,"column":64}}},"15":{"name":"(anonymous_15)","line":147,"loc":{"start":{"line":147,"column":42},"end":{"line":147,"column":66}}},"16":{"name":"(anonymous_16)","line":151,"loc":{"start":{"line":151,"column":51},"end":{"line":152,"column":16}}},"17":{"name":"(anonymous_17)","line":155,"loc":{"start":{"line":155,"column":23},"end":{"line":155,"column":35}}},"18":{"name":"(anonymous_18)","line":164,"loc":{"start":{"line":164,"column":45},"end":{"line":164,"column":71}}},"19":{"name":"(anonymous_19)","line":173,"loc":{"start":{"line":173,"column":40},"end":{"line":173,"column":66}}},"20":{"name":"(anonymous_20)","line":191,"loc":{"start":{"line":191,"column":41},"end":{"line":191,"column":60}}},"21":{"name":"(anonymous_21)","line":195,"loc":{"start":{"line":195,"column":51},"end":{"line":195,"column":77}}},"22":{"name":"(anonymous_22)","line":199,"loc":{"start":{"line":199,"column":41},"end":{"line":199,"column":77}}},"23":{"name":"(anonymous_23)","line":204,"loc":{"start":{"line":204,"column":27},"end":{"line":204,"column":44}}},"24":{"name":"(anonymous_24)","line":222,"loc":{"start":{"line":222,"column":36},"end":{"line":222,"column":73}}},"25":{"name":"(anonymous_25)","line":226,"loc":{"start":{"line":226,"column":44},"end":{"line":226,"column":70}}},"26":{"name":"(anonymous_26)","line":235,"loc":{"start":{"line":235,"column":40},"end":{"line":235,"column":60}}},"27":{"name":"(anonymous_27)","line":239,"loc":{"start":{"line":239,"column":25},"end":{"line":239,"column":45}}},"28":{"name":"(anonymous_28)","line":243,"loc":{"start":{"line":243,"column":28},"end":{"line":243,"column":48}}},"29":{"name":"(anonymous_29)","line":258,"loc":{"start":{"line":258,"column":36},"end":{"line":258,"column":56}}},"30":{"name":"(anonymous_30)","line":267,"loc":{"start":{"line":267,"column":37},"end":{"line":267,"column":57}}},"31":{"name":"(anonymous_31)","line":275,"loc":{"start":{"line":275,"column":34},"end":{"line":275,"column":45}}},"32":{"name":"(anonymous_32)","line":284,"loc":{"start":{"line":284,"column":42},"end":{"line":284,"column":57}}},"33":{"name":"(anonymous_33)","line":292,"loc":{"start":{"line":292,"column":46},"end":{"line":292,"column":57}}},"34":{"name":"(anonymous_34)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":48}}},"35":{"name":"(anonymous_35)","line":339,"loc":{"start":{"line":339,"column":31},"end":{"line":339,"column":47}}},"36":{"name":"(anonymous_36)","line":374,"loc":{"start":{"line":374,"column":32},"end":{"line":374,"column":58}}},"37":{"name":"(anonymous_37)","line":397,"loc":{"start":{"line":397,"column":40},"end":{"line":397,"column":66}}},"38":{"name":"(anonymous_38)","line":407,"loc":{"start":{"line":407,"column":38},"end":{"line":407,"column":62}}},"39":{"name":"(anonymous_39)","line":422,"loc":{"start":{"line":422,"column":34},"end":{"line":422,"column":50}}},"40":{"name":"(anonymous_40)","line":436,"loc":{"start":{"line":436,"column":41},"end":{"line":436,"column":57}}},"41":{"name":"(anonymous_41)","line":445,"loc":{"start":{"line":445,"column":38},"end":{"line":445,"column":54}}},"42":{"name":"(anonymous_42)","line":455,"loc":{"start":{"line":455,"column":39},"end":{"line":455,"column":65}}},"43":{"name":"isIdValuePresent","line":466,"loc":{"start":{"line":466,"column":0},"end":{"line":466,"column":54}}},"44":{"name":"(anonymous_44)","line":471,"loc":{"start":{"line":471,"column":21},"end":{"line":471,"column":32}}},"45":{"name":"(anonymous_45)","line":484,"loc":{"start":{"line":484,"column":39},"end":{"line":484,"column":64}}},"46":{"name":"(anonymous_46)","line":509,"loc":{"start":{"line":509,"column":38},"end":{"line":509,"column":51}}},"47":{"name":"(anonymous_47)","line":534,"loc":{"start":{"line":534,"column":41},"end":{"line":534,"column":74}}},"48":{"name":"(anonymous_48)","line":550,"loc":{"start":{"line":550,"column":46},"end":{"line":550,"column":77}}},"49":{"name":"(anonymous_49)","line":561,"loc":{"start":{"line":561,"column":50},"end":{"line":561,"column":81}}},"50":{"name":"(anonymous_50)","line":572,"loc":{"start":{"line":572,"column":37},"end":{"line":572,"column":68}}},"51":{"name":"(anonymous_51)","line":599,"loc":{"start":{"line":599,"column":33},"end":{"line":599,"column":74}}},"52":{"name":"(anonymous_52)","line":620,"loc":{"start":{"line":620,"column":45},"end":{"line":620,"column":56}}},"53":{"name":"(anonymous_53)","line":631,"loc":{"start":{"line":631,"column":49},"end":{"line":631,"column":73}}},"54":{"name":"(anonymous_54)","line":633,"loc":{"start":{"line":633,"column":4},"end":{"line":633,"column":24}}},"55":{"name":"(anonymous_55)","line":655,"loc":{"start":{"line":655,"column":32},"end":{"line":655,"column":73}}},"56":{"name":"(anonymous_56)","line":658,"loc":{"start":{"line":658,"column":47},"end":{"line":658,"column":67}}},"57":{"name":"(anonymous_57)","line":675,"loc":{"start":{"line":675,"column":30},"end":{"line":675,"column":65}}},"58":{"name":"(anonymous_58)","line":692,"loc":{"start":{"line":692,"column":4},"end":{"line":692,"column":26}}},"59":{"name":"(anonymous_59)","line":704,"loc":{"start":{"line":704,"column":32},"end":{"line":704,"column":65}}},"60":{"name":"(anonymous_60)","line":723,"loc":{"start":{"line":723,"column":59},"end":{"line":723,"column":79}}},"61":{"name":"(anonymous_61)","line":745,"loc":{"start":{"line":745,"column":33},"end":{"line":745,"column":66}}},"62":{"name":"(anonymous_62)","line":766,"loc":{"start":{"line":766,"column":37},"end":{"line":766,"column":69}}},"63":{"name":"(anonymous_63)","line":781,"loc":{"start":{"line":781,"column":36},"end":{"line":781,"column":72}}},"64":{"name":"(anonymous_64)","line":803,"loc":{"start":{"line":803,"column":42},"end":{"line":803,"column":81}}},"65":{"name":"(anonymous_65)","line":819,"loc":{"start":{"line":819,"column":37},"end":{"line":819,"column":76}}},"66":{"name":"(anonymous_66)","line":832,"loc":{"start":{"line":832,"column":44},"end":{"line":832,"column":70}}},"67":{"name":"(anonymous_67)","line":849,"loc":{"start":{"line":849,"column":37},"end":{"line":849,"column":75}}},"68":{"name":"(anonymous_68)","line":863,"loc":{"start":{"line":863,"column":38},"end":{"line":863,"column":76}}},"69":{"name":"(anonymous_69)","line":875,"loc":{"start":{"line":875,"column":47},"end":{"line":875,"column":78}}},"70":{"name":"(anonymous_70)","line":891,"loc":{"start":{"line":891,"column":32},"end":{"line":891,"column":74}}},"71":{"name":"(anonymous_71)","line":905,"loc":{"start":{"line":905,"column":34},"end":{"line":905,"column":76}}},"72":{"name":"(anonymous_72)","line":908,"loc":{"start":{"line":908,"column":47},"end":{"line":908,"column":67}}},"73":{"name":"errorIdNotFoundForReplace","line":921,"loc":{"start":{"line":921,"column":0},"end":{"line":921,"column":44}}},"74":{"name":"(anonymous_74)","line":928,"loc":{"start":{"line":928,"column":47},"end":{"line":928,"column":89}}},"75":{"name":"(anonymous_75)","line":930,"loc":{"start":{"line":930,"column":37},"end":{"line":930,"column":57}}},"76":{"name":"(anonymous_76)","line":946,"loc":{"start":{"line":946,"column":36},"end":{"line":946,"column":59}}},"77":{"name":"(anonymous_77)","line":963,"loc":{"start":{"line":963,"column":0},"end":{"line":963,"column":59}}},"78":{"name":"buildClause","line":964,"loc":{"start":{"line":964,"column":2},"end":{"line":964,"column":57}}},"79":{"name":"(anonymous_79)","line":1041,"loc":{"start":{"line":1041,"column":37},"end":{"line":1041,"column":60}}},"80":{"name":"(anonymous_80)","line":1168,"loc":{"start":{"line":1168,"column":38},"end":{"line":1168,"column":61}}},"81":{"name":"(anonymous_81)","line":1195,"loc":{"start":{"line":1195,"column":37},"end":{"line":1195,"column":71}}},"82":{"name":"(anonymous_82)","line":1207,"loc":{"start":{"line":1207,"column":44},"end":{"line":1207,"column":78}}},"83":{"name":"(anonymous_83)","line":1220,"loc":{"start":{"line":1220,"column":45},"end":{"line":1220,"column":85}}},"84":{"name":"(anonymous_84)","line":1261,"loc":{"start":{"line":1261,"column":46},"end":{"line":1261,"column":80}}},"85":{"name":"(anonymous_85)","line":1276,"loc":{"start":{"line":1276,"column":47},"end":{"line":1276,"column":81}}},"86":{"name":"(anonymous_86)","line":1289,"loc":{"start":{"line":1289,"column":58},"end":{"line":1289,"column":75}}},"87":{"name":"(anonymous_87)","line":1306,"loc":{"start":{"line":1306,"column":42},"end":{"line":1306,"column":66}}},"88":{"name":"(anonymous_88)","line":1316,"loc":{"start":{"line":1316,"column":31},"end":{"line":1316,"column":43}}},"89":{"name":"(anonymous_89)","line":1324,"loc":{"start":{"line":1324,"column":17},"end":{"line":1324,"column":29}}},"90":{"name":"(anonymous_90)","line":1334,"loc":{"start":{"line":1334,"column":23},"end":{"line":1334,"column":35}}},"91":{"name":"(anonymous_91)","line":1340,"loc":{"start":{"line":1340,"column":23},"end":{"line":1340,"column":35}}},"92":{"name":"(anonymous_92)","line":1353,"loc":{"start":{"line":1353,"column":37},"end":{"line":1353,"column":70}}},"93":{"name":"(anonymous_93)","line":1391,"loc":{"start":{"line":1391,"column":0},"end":{"line":1391,"column":25}}},"94":{"name":"find","line":1421,"loc":{"start":{"line":1421,"column":29},"end":{"line":1421,"column":71}}},"95":{"name":"(anonymous_95)","line":1426,"loc":{"start":{"line":1426,"column":47},"end":{"line":1426,"column":67}}},"96":{"name":"(anonymous_96)","line":1431,"loc":{"start":{"line":1431,"column":24},"end":{"line":1431,"column":38}}},"97":{"name":"(anonymous_97)","line":1464,"loc":{"start":{"line":1464,"column":30},"end":{"line":1464,"column":63}}},"98":{"name":"(anonymous_98)","line":1466,"loc":{"start":{"line":1466,"column":21},"end":{"line":1466,"column":32}}},"99":{"name":"(anonymous_99)","line":1479,"loc":{"start":{"line":1479,"column":42},"end":{"line":1479,"column":65}}},"100":{"name":"(anonymous_100)","line":1494,"loc":{"start":{"line":1494,"column":31},"end":{"line":1494,"column":67}}},"101":{"name":"(anonymous_101)","line":1508,"loc":{"start":{"line":1508,"column":4},"end":{"line":1508,"column":23}}},"102":{"name":"(anonymous_102)","line":1524,"loc":{"start":{"line":1524,"column":35},"end":{"line":1524,"column":55}}},"103":{"name":"(anonymous_103)","line":1533,"loc":{"start":{"line":1533,"column":37},"end":{"line":1533,"column":57}}},"104":{"name":"(anonymous_104)","line":1545,"loc":{"start":{"line":1545,"column":37},"end":{"line":1545,"column":58}}},"105":{"name":"(anonymous_105)","line":1562,"loc":{"start":{"line":1562,"column":36},"end":{"line":1562,"column":48}}},"106":{"name":"(anonymous_106)","line":1566,"loc":{"start":{"line":1566,"column":28},"end":{"line":1566,"column":39}}},"107":{"name":"(anonymous_107)","line":1572,"loc":{"start":{"line":1572,"column":21},"end":{"line":1572,"column":43}}},"108":{"name":"(anonymous_108)","line":1573,"loc":{"start":{"line":1573,"column":26},"end":{"line":1573,"column":40}}},"109":{"name":"(anonymous_109)","line":1579,"loc":{"start":{"line":1579,"column":30},"end":{"line":1579,"column":52}}},"110":{"name":"(anonymous_110)","line":1595,"loc":{"start":{"line":1595,"column":41},"end":{"line":1595,"column":55}}},"111":{"name":"(anonymous_111)","line":1611,"loc":{"start":{"line":1611,"column":38},"end":{"line":1611,"column":52}}},"112":{"name":"(anonymous_112)","line":1635,"loc":{"start":{"line":1635,"column":39},"end":{"line":1635,"column":68}}},"113":{"name":"(anonymous_113)","line":1645,"loc":{"start":{"line":1645,"column":41},"end":{"line":1645,"column":70}}},"114":{"name":"(anonymous_114)","line":1654,"loc":{"start":{"line":1654,"column":36},"end":{"line":1654,"column":51}}},"115":{"name":"(anonymous_115)","line":1663,"loc":{"start":{"line":1663,"column":37},"end":{"line":1663,"column":53}}},"116":{"name":"(anonymous_116)","line":1672,"loc":{"start":{"line":1672,"column":53},"end":{"line":1672,"column":67}}},"117":{"name":"(anonymous_117)","line":1682,"loc":{"start":{"line":1682,"column":48},"end":{"line":1682,"column":62}}},"118":{"name":"(anonymous_118)","line":1693,"loc":{"start":{"line":1693,"column":41},"end":{"line":1693,"column":71}}},"119":{"name":"(anonymous_119)","line":1704,"loc":{"start":{"line":1704,"column":49},"end":{"line":1704,"column":71}}},"120":{"name":"(anonymous_120)","line":1715,"loc":{"start":{"line":1715,"column":39},"end":{"line":1715,"column":61}}},"121":{"name":"(anonymous_121)","line":1726,"loc":{"start":{"line":1726,"column":36},"end":{"line":1726,"column":77}}},"122":{"name":"(anonymous_122)","line":1736,"loc":{"start":{"line":1736,"column":43},"end":{"line":1736,"column":61}}},"123":{"name":"(anonymous_123)","line":1749,"loc":{"start":{"line":1749,"column":37},"end":{"line":1749,"column":69}}},"124":{"name":"(anonymous_124)","line":1758,"loc":{"start":{"line":1758,"column":49},"end":{"line":1758,"column":71}}},"125":{"name":"(anonymous_125)","line":1775,"loc":{"start":{"line":1775,"column":42},"end":{"line":1775,"column":60}}},"126":{"name":"(anonymous_126)","line":1786,"loc":{"start":{"line":1786,"column":41},"end":{"line":1786,"column":59}}},"127":{"name":"(anonymous_127)","line":1796,"loc":{"start":{"line":1796,"column":50},"end":{"line":1796,"column":72}}},"128":{"name":"(anonymous_128)","line":1804,"loc":{"start":{"line":1804,"column":15},"end":{"line":1804,"column":34}}},"129":{"name":"(anonymous_129)","line":1809,"loc":{"start":{"line":1809,"column":15},"end":{"line":1809,"column":34}}},"130":{"name":"(anonymous_130)","line":1813,"loc":{"start":{"line":1813,"column":24},"end":{"line":1813,"column":44}}},"131":{"name":"(anonymous_131)","line":1834,"loc":{"start":{"line":1834,"column":43},"end":{"line":1834,"column":67}}},"132":{"name":"(anonymous_132)","line":1843,"loc":{"start":{"line":1843,"column":43},"end":{"line":1843,"column":79}}},"133":{"name":"(anonymous_133)","line":1853,"loc":{"start":{"line":1853,"column":33},"end":{"line":1853,"column":62}}},"134":{"name":"(anonymous_134)","line":1863,"loc":{"start":{"line":1863,"column":49},"end":{"line":1863,"column":78}}},"135":{"name":"(anonymous_135)","line":1879,"loc":{"start":{"line":1879,"column":17},"end":{"line":1879,"column":40}}},"136":{"name":"(anonymous_136)","line":1883,"loc":{"start":{"line":1883,"column":18},"end":{"line":1883,"column":30}}},"137":{"name":"(anonymous_137)","line":1903,"loc":{"start":{"line":1903,"column":47},"end":{"line":1903,"column":71}}},"138":{"name":"(anonymous_138)","line":1913,"loc":{"start":{"line":1913,"column":45},"end":{"line":1913,"column":74}}},"139":{"name":"(anonymous_139)","line":1937,"loc":{"start":{"line":1937,"column":47},"end":{"line":1937,"column":71}}},"140":{"name":"(anonymous_140)","line":1947,"loc":{"start":{"line":1947,"column":45},"end":{"line":1947,"column":74}}},"141":{"name":"(anonymous_141)","line":1973,"loc":{"start":{"line":1973,"column":55},"end":{"line":1973,"column":79}}},"142":{"name":"(anonymous_142)","line":1984,"loc":{"start":{"line":1984,"column":53},"end":{"line":1984,"column":82}}},"143":{"name":"(anonymous_143)","line":2004,"loc":{"start":{"line":2004,"column":42},"end":{"line":2004,"column":60}}},"144":{"name":"(anonymous_144)","line":2013,"loc":{"start":{"line":2013,"column":43},"end":{"line":2013,"column":61}}},"145":{"name":"(anonymous_145)","line":2022,"loc":{"start":{"line":2022,"column":45},"end":{"line":2022,"column":64}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":13}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":31}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":39}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":55}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":54}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":43}},"10":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"11":{"start":{"line":20,"column":0},"end":{"line":20,"column":18}},"12":{"start":{"line":26,"column":0},"end":{"line":29,"column":1}},"13":{"start":{"line":28,"column":2},"end":{"line":28,"column":50}},"14":{"start":{"line":32,"column":0},"end":{"line":32,"column":39}},"15":{"start":{"line":35,"column":0},"end":{"line":35,"column":49}},"16":{"start":{"line":38,"column":0},"end":{"line":38,"column":74}},"17":{"start":{"line":40,"column":0},"end":{"line":40,"column":39}},"18":{"start":{"line":46,"column":0},"end":{"line":46,"column":41}},"19":{"start":{"line":52,"column":0},"end":{"line":56,"column":2}},"20":{"start":{"line":53,"column":2},"end":{"line":53,"column":41}},"21":{"start":{"line":54,"column":2},"end":{"line":54,"column":66}},"22":{"start":{"line":55,"column":2},"end":{"line":55,"column":39}},"23":{"start":{"line":64,"column":0},"end":{"line":91,"column":2}},"24":{"start":{"line":65,"column":2},"end":{"line":65,"column":18}},"25":{"start":{"line":66,"column":2},"end":{"line":69,"column":3}},"26":{"start":{"line":67,"column":4},"end":{"line":67,"column":16}},"27":{"start":{"line":68,"column":4},"end":{"line":68,"column":23}},"28":{"start":{"line":71,"column":2},"end":{"line":73,"column":3}},"29":{"start":{"line":72,"column":4},"end":{"line":72,"column":22}},"30":{"start":{"line":75,"column":2},"end":{"line":75,"column":47}},"31":{"start":{"line":77,"column":2},"end":{"line":90,"column":9}},"32":{"start":{"line":78,"column":4},"end":{"line":82,"column":5}},"33":{"start":{"line":79,"column":6},"end":{"line":81,"column":9}},"34":{"start":{"line":80,"column":8},"end":{"line":80,"column":59}},"35":{"start":{"line":83,"column":4},"end":{"line":89,"column":7}},"36":{"start":{"line":84,"column":6},"end":{"line":88,"column":7}},"37":{"start":{"line":85,"column":8},"end":{"line":85,"column":54}},"38":{"start":{"line":87,"column":8},"end":{"line":87,"column":38}},"39":{"start":{"line":99,"column":0},"end":{"line":127,"column":2}},"40":{"start":{"line":100,"column":2},"end":{"line":100,"column":18}},"41":{"start":{"line":102,"column":2},"end":{"line":105,"column":3}},"42":{"start":{"line":103,"column":4},"end":{"line":103,"column":16}},"43":{"start":{"line":104,"column":4},"end":{"line":104,"column":23}},"44":{"start":{"line":107,"column":2},"end":{"line":109,"column":3}},"45":{"start":{"line":108,"column":4},"end":{"line":108,"column":22}},"46":{"start":{"line":111,"column":2},"end":{"line":111,"column":47}},"47":{"start":{"line":113,"column":2},"end":{"line":113,"column":19}},"48":{"start":{"line":114,"column":2},"end":{"line":126,"column":5}},"49":{"start":{"line":115,"column":4},"end":{"line":119,"column":7}},"50":{"start":{"line":116,"column":6},"end":{"line":116,"column":72}},"51":{"start":{"line":117,"column":6},"end":{"line":117,"column":67}},"52":{"start":{"line":118,"column":6},"end":{"line":118,"column":16}},"53":{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},"54":{"start":{"line":122,"column":6},"end":{"line":122,"column":27}},"55":{"start":{"line":124,"column":4},"end":{"line":124,"column":40}},"56":{"start":{"line":125,"column":4},"end":{"line":125,"column":29}},"57":{"start":{"line":125,"column":12},"end":{"line":125,"column":29}},"58":{"start":{"line":129,"column":0},"end":{"line":134,"column":2}},"59":{"start":{"line":130,"column":2},"end":{"line":130,"column":15}},"60":{"start":{"line":131,"column":2},"end":{"line":131,"column":18}},"61":{"start":{"line":132,"column":2},"end":{"line":132,"column":56}},"62":{"start":{"line":133,"column":2},"end":{"line":133,"column":13}},"63":{"start":{"line":136,"column":0},"end":{"line":138,"column":2}},"64":{"start":{"line":137,"column":2},"end":{"line":137,"column":85}},"65":{"start":{"line":140,"column":0},"end":{"line":145,"column":2}},"66":{"start":{"line":141,"column":2},"end":{"line":141,"column":15}},"67":{"start":{"line":142,"column":2},"end":{"line":142,"column":18}},"68":{"start":{"line":143,"column":2},"end":{"line":143,"column":57}},"69":{"start":{"line":144,"column":2},"end":{"line":144,"column":13}},"70":{"start":{"line":147,"column":0},"end":{"line":149,"column":2}},"71":{"start":{"line":148,"column":2},"end":{"line":148,"column":86}},"72":{"start":{"line":151,"column":0},"end":{"line":162,"column":2}},"73":{"start":{"line":153,"column":2},"end":{"line":153,"column":18}},"74":{"start":{"line":154,"column":2},"end":{"line":154,"column":20}},"75":{"start":{"line":155,"column":2},"end":{"line":160,"column":5}},"76":{"start":{"line":156,"column":4},"end":{"line":159,"column":5}},"77":{"start":{"line":157,"column":6},"end":{"line":157,"column":16}},"78":{"start":{"line":158,"column":6},"end":{"line":158,"column":13}},"79":{"start":{"line":161,"column":2},"end":{"line":161,"column":15}},"80":{"start":{"line":164,"column":0},"end":{"line":171,"column":2}},"81":{"start":{"line":165,"column":2},"end":{"line":165,"column":18}},"82":{"start":{"line":166,"column":2},"end":{"line":169,"column":22}},"83":{"start":{"line":170,"column":2},"end":{"line":170,"column":20}},"84":{"start":{"line":173,"column":0},"end":{"line":189,"column":2}},"85":{"start":{"line":174,"column":2},"end":{"line":174,"column":60}},"86":{"start":{"line":175,"column":2},"end":{"line":175,"column":58}},"87":{"start":{"line":176,"column":2},"end":{"line":178,"column":3}},"88":{"start":{"line":177,"column":4},"end":{"line":177,"column":36}},"89":{"start":{"line":179,"column":2},"end":{"line":179,"column":65}},"90":{"start":{"line":180,"column":2},"end":{"line":182,"column":3}},"91":{"start":{"line":181,"column":4},"end":{"line":181,"column":16}},"92":{"start":{"line":183,"column":2},"end":{"line":184,"column":30}},"93":{"start":{"line":185,"column":2},"end":{"line":187,"column":3}},"94":{"start":{"line":186,"column":4},"end":{"line":186,"column":43}},"95":{"start":{"line":188,"column":2},"end":{"line":188,"column":36}},"96":{"start":{"line":191,"column":0},"end":{"line":193,"column":2}},"97":{"start":{"line":192,"column":2},"end":{"line":192,"column":85}},"98":{"start":{"line":195,"column":0},"end":{"line":197,"column":2}},"99":{"start":{"line":196,"column":2},"end":{"line":196,"column":63}},"100":{"start":{"line":199,"column":0},"end":{"line":213,"column":2}},"101":{"start":{"line":200,"column":2},"end":{"line":200,"column":18}},"102":{"start":{"line":201,"column":2},"end":{"line":212,"column":3}},"103":{"start":{"line":202,"column":4},"end":{"line":202,"column":62}},"104":{"start":{"line":203,"column":4},"end":{"line":203,"column":24}},"105":{"start":{"line":204,"column":4},"end":{"line":210,"column":7}},"106":{"start":{"line":205,"column":6},"end":{"line":207,"column":7}},"107":{"start":{"line":206,"column":8},"end":{"line":206,"column":36}},"108":{"start":{"line":208,"column":6},"end":{"line":208,"column":43}},"109":{"start":{"line":209,"column":6},"end":{"line":209,"column":21}},"110":{"start":{"line":211,"column":4},"end":{"line":211,"column":32}},"111":{"start":{"line":222,"column":0},"end":{"line":224,"column":2}},"112":{"start":{"line":223,"column":2},"end":{"line":223,"column":80}},"113":{"start":{"line":226,"column":0},"end":{"line":228,"column":2}},"114":{"start":{"line":227,"column":2},"end":{"line":227,"column":14}},"115":{"start":{"line":235,"column":0},"end":{"line":251,"column":2}},"116":{"start":{"line":236,"column":2},"end":{"line":236,"column":22}},"117":{"start":{"line":237,"column":2},"end":{"line":237,"column":18}},"118":{"start":{"line":239,"column":2},"end":{"line":250,"column":5}},"119":{"start":{"line":240,"column":4},"end":{"line":240,"column":28}},"120":{"start":{"line":240,"column":13},"end":{"line":240,"column":28}},"121":{"start":{"line":241,"column":4},"end":{"line":241,"column":18}},"122":{"start":{"line":243,"column":4},"end":{"line":249,"column":7}},"123":{"start":{"line":244,"column":6},"end":{"line":244,"column":30}},"124":{"start":{"line":244,"column":15},"end":{"line":244,"column":30}},"125":{"start":{"line":245,"column":6},"end":{"line":245,"column":21}},"126":{"start":{"line":247,"column":6},"end":{"line":248,"column":41}},"127":{"start":{"line":248,"column":8},"end":{"line":248,"column":41}},"128":{"start":{"line":258,"column":0},"end":{"line":260,"column":2}},"129":{"start":{"line":259,"column":2},"end":{"line":259,"column":80}},"130":{"start":{"line":267,"column":0},"end":{"line":269,"column":2}},"131":{"start":{"line":268,"column":2},"end":{"line":268,"column":81}},"132":{"start":{"line":275,"column":0},"end":{"line":277,"column":2}},"133":{"start":{"line":276,"column":2},"end":{"line":276,"column":32}},"134":{"start":{"line":284,"column":0},"end":{"line":286,"column":2}},"135":{"start":{"line":285,"column":2},"end":{"line":285,"column":16}},"136":{"start":{"line":292,"column":0},"end":{"line":294,"column":2}},"137":{"start":{"line":293,"column":2},"end":{"line":293,"column":12}},"138":{"start":{"line":314,"column":0},"end":{"line":321,"column":2}},"139":{"start":{"line":316,"column":2},"end":{"line":316,"column":56}},"140":{"start":{"line":317,"column":2},"end":{"line":319,"column":32}},"141":{"start":{"line":320,"column":2},"end":{"line":320,"column":20}},"142":{"start":{"line":339,"column":0},"end":{"line":354,"column":2}},"143":{"start":{"line":340,"column":2},"end":{"line":340,"column":56}},"144":{"start":{"line":341,"column":2},"end":{"line":341,"column":16}},"145":{"start":{"line":342,"column":2},"end":{"line":348,"column":3}},"146":{"start":{"line":343,"column":4},"end":{"line":343,"column":49}},"147":{"start":{"line":344,"column":4},"end":{"line":347,"column":5}},"148":{"start":{"line":346,"column":6},"end":{"line":346,"column":23}},"149":{"start":{"line":349,"column":2},"end":{"line":349,"column":20}},"150":{"start":{"line":350,"column":2},"end":{"line":352,"column":3}},"151":{"start":{"line":351,"column":4},"end":{"line":351,"column":39}},"152":{"start":{"line":353,"column":2},"end":{"line":353,"column":19}},"153":{"start":{"line":374,"column":0},"end":{"line":389,"column":2}},"154":{"start":{"line":375,"column":2},"end":{"line":375,"column":57}},"155":{"start":{"line":376,"column":2},"end":{"line":376,"column":17}},"156":{"start":{"line":377,"column":2},"end":{"line":383,"column":3}},"157":{"start":{"line":378,"column":4},"end":{"line":378,"column":70}},"158":{"start":{"line":379,"column":4},"end":{"line":382,"column":5}},"159":{"start":{"line":381,"column":6},"end":{"line":381,"column":24}},"160":{"start":{"line":384,"column":2},"end":{"line":384,"column":24}},"161":{"start":{"line":385,"column":2},"end":{"line":387,"column":3}},"162":{"start":{"line":386,"column":4},"end":{"line":386,"column":41}},"163":{"start":{"line":388,"column":2},"end":{"line":388,"column":20}},"164":{"start":{"line":397,"column":0},"end":{"line":399,"column":2}},"165":{"start":{"line":398,"column":2},"end":{"line":398,"column":67}},"166":{"start":{"line":407,"column":0},"end":{"line":415,"column":2}},"167":{"start":{"line":408,"column":2},"end":{"line":408,"column":56}},"168":{"start":{"line":409,"column":2},"end":{"line":413,"column":3}},"169":{"start":{"line":410,"column":4},"end":{"line":412,"column":5}},"170":{"start":{"line":411,"column":6},"end":{"line":411,"column":15}},"171":{"start":{"line":414,"column":2},"end":{"line":414,"column":14}},"172":{"start":{"line":422,"column":0},"end":{"line":429,"column":2}},"173":{"start":{"line":423,"column":2},"end":{"line":423,"column":59}},"174":{"start":{"line":424,"column":2},"end":{"line":424,"column":27}},"175":{"start":{"line":425,"column":2},"end":{"line":427,"column":3}},"176":{"start":{"line":426,"column":4},"end":{"line":426,"column":24}},"177":{"start":{"line":428,"column":2},"end":{"line":428,"column":14}},"178":{"start":{"line":436,"column":0},"end":{"line":438,"column":2}},"179":{"start":{"line":437,"column":2},"end":{"line":437,"column":47}},"180":{"start":{"line":445,"column":0},"end":{"line":447,"column":2}},"181":{"start":{"line":446,"column":2},"end":{"line":446,"column":44}},"182":{"start":{"line":455,"column":0},"end":{"line":457,"column":2}},"183":{"start":{"line":456,"column":2},"end":{"line":456,"column":55}},"184":{"start":{"line":466,"column":0},"end":{"line":476,"column":1}},"185":{"start":{"line":467,"column":2},"end":{"line":475,"column":3}},"186":{"start":{"line":468,"column":4},"end":{"line":468,"column":78}},"187":{"start":{"line":469,"column":4},"end":{"line":469,"column":16}},"188":{"start":{"line":471,"column":4},"end":{"line":473,"column":7}},"189":{"start":{"line":472,"column":6},"end":{"line":472,"column":45}},"190":{"start":{"line":472,"column":14},"end":{"line":472,"column":45}},"191":{"start":{"line":474,"column":4},"end":{"line":474,"column":17}},"192":{"start":{"line":484,"column":0},"end":{"line":491,"column":2}},"193":{"start":{"line":485,"column":2},"end":{"line":485,"column":59}},"194":{"start":{"line":486,"column":2},"end":{"line":490,"column":3}},"195":{"start":{"line":487,"column":4},"end":{"line":487,"column":47}},"196":{"start":{"line":489,"column":4},"end":{"line":489,"column":19}},"197":{"start":{"line":509,"column":0},"end":{"line":525,"column":2}},"198":{"start":{"line":510,"column":2},"end":{"line":510,"column":32}},"199":{"start":{"line":514,"column":2},"end":{"line":514,"column":40}},"200":{"start":{"line":515,"column":2},"end":{"line":515,"column":18}},"201":{"start":{"line":516,"column":2},"end":{"line":522,"column":3}},"202":{"start":{"line":518,"column":4},"end":{"line":518,"column":26}},"203":{"start":{"line":519,"column":4},"end":{"line":521,"column":5}},"204":{"start":{"line":520,"column":6},"end":{"line":520,"column":54}},"205":{"start":{"line":523,"column":2},"end":{"line":523,"column":27}},"206":{"start":{"line":524,"column":2},"end":{"line":524,"column":12}},"207":{"start":{"line":534,"column":0},"end":{"line":541,"column":2}},"208":{"start":{"line":535,"column":2},"end":{"line":535,"column":77}},"209":{"start":{"line":536,"column":2},"end":{"line":536,"column":43}},"210":{"start":{"line":537,"column":2},"end":{"line":539,"column":3}},"211":{"start":{"line":538,"column":4},"end":{"line":538,"column":44}},"212":{"start":{"line":540,"column":2},"end":{"line":540,"column":14}},"213":{"start":{"line":550,"column":0},"end":{"line":552,"column":2}},"214":{"start":{"line":551,"column":2},"end":{"line":551,"column":12}},"215":{"start":{"line":561,"column":0},"end":{"line":563,"column":2}},"216":{"start":{"line":562,"column":2},"end":{"line":562,"column":20}},"217":{"start":{"line":572,"column":0},"end":{"line":589,"column":2}},"218":{"start":{"line":573,"column":2},"end":{"line":573,"column":45}},"219":{"start":{"line":574,"column":2},"end":{"line":574,"column":64}},"220":{"start":{"line":575,"column":2},"end":{"line":575,"column":41}},"221":{"start":{"line":576,"column":2},"end":{"line":576,"column":32}},"222":{"start":{"line":577,"column":2},"end":{"line":583,"column":3}},"223":{"start":{"line":578,"column":4},"end":{"line":578,"column":58}},"224":{"start":{"line":579,"column":4},"end":{"line":579,"column":46}},"225":{"start":{"line":580,"column":4},"end":{"line":580,"column":29}},"226":{"start":{"line":582,"column":4},"end":{"line":582,"column":74}},"227":{"start":{"line":584,"column":2},"end":{"line":584,"column":66}},"228":{"start":{"line":585,"column":2},"end":{"line":587,"column":3}},"229":{"start":{"line":586,"column":4},"end":{"line":586,"column":32}},"230":{"start":{"line":588,"column":2},"end":{"line":588,"column":39}},"231":{"start":{"line":599,"column":0},"end":{"line":645,"column":2}},"232":{"start":{"line":600,"column":2},"end":{"line":600,"column":58}},"233":{"start":{"line":601,"column":2},"end":{"line":611,"column":3}},"234":{"start":{"line":604,"column":4},"end":{"line":604,"column":17}},"235":{"start":{"line":605,"column":4},"end":{"line":605,"column":22}},"236":{"start":{"line":606,"column":4},"end":{"line":606,"column":16}},"237":{"start":{"line":607,"column":9},"end":{"line":611,"column":3}},"238":{"start":{"line":609,"column":4},"end":{"line":609,"column":23}},"239":{"start":{"line":610,"column":4},"end":{"line":610,"column":17}},"240":{"start":{"line":612,"column":2},"end":{"line":612,"column":24}},"241":{"start":{"line":613,"column":2},"end":{"line":613,"column":26}},"242":{"start":{"line":614,"column":2},"end":{"line":614,"column":59}},"243":{"start":{"line":615,"column":2},"end":{"line":615,"column":67}},"244":{"start":{"line":616,"column":2},"end":{"line":616,"column":72}},"245":{"start":{"line":618,"column":2},"end":{"line":618,"column":18}},"246":{"start":{"line":619,"column":2},"end":{"line":623,"column":3}},"247":{"start":{"line":620,"column":4},"end":{"line":622,"column":7}},"248":{"start":{"line":621,"column":6},"end":{"line":621,"column":51}},"249":{"start":{"line":624,"column":2},"end":{"line":630,"column":4}},"250":{"start":{"line":631,"column":2},"end":{"line":644,"column":15}},"251":{"start":{"line":632,"column":4},"end":{"line":643,"column":7}},"252":{"start":{"line":634,"column":6},"end":{"line":636,"column":7}},"253":{"start":{"line":635,"column":8},"end":{"line":635,"column":75}},"254":{"start":{"line":638,"column":6},"end":{"line":640,"column":7}},"255":{"start":{"line":639,"column":8},"end":{"line":639,"column":27}},"256":{"start":{"line":642,"column":6},"end":{"line":642,"column":22}},"257":{"start":{"line":655,"column":0},"end":{"line":666,"column":2}},"258":{"start":{"line":656,"column":2},"end":{"line":656,"column":18}},"259":{"start":{"line":657,"column":2},"end":{"line":657,"column":52}},"260":{"start":{"line":658,"column":2},"end":{"line":665,"column":5}},"261":{"start":{"line":659,"column":4},"end":{"line":664,"column":5}},"262":{"start":{"line":660,"column":6},"end":{"line":660,"column":20}},"263":{"start":{"line":662,"column":6},"end":{"line":662,"column":55}},"264":{"start":{"line":663,"column":6},"end":{"line":663,"column":32}},"265":{"start":{"line":675,"column":0},"end":{"line":695,"column":2}},"266":{"start":{"line":676,"column":2},"end":{"line":676,"column":34}},"267":{"start":{"line":677,"column":2},"end":{"line":677,"column":29}},"268":{"start":{"line":679,"column":2},"end":{"line":681,"column":3}},"269":{"start":{"line":680,"column":4},"end":{"line":680,"column":11}},"270":{"start":{"line":683,"column":2},"end":{"line":683,"column":17}},"271":{"start":{"line":684,"column":2},"end":{"line":684,"column":26}},"272":{"start":{"line":686,"column":2},"end":{"line":686,"column":78}},"273":{"start":{"line":687,"column":2},"end":{"line":687,"column":59}},"274":{"start":{"line":688,"column":2},"end":{"line":688,"column":48}},"275":{"start":{"line":689,"column":2},"end":{"line":689,"column":30}},"276":{"start":{"line":690,"column":2},"end":{"line":690,"column":45}},"277":{"start":{"line":691,"column":2},"end":{"line":694,"column":7}},"278":{"start":{"line":693,"column":6},"end":{"line":693,"column":30}},"279":{"start":{"line":693,"column":14},"end":{"line":693,"column":30}},"280":{"start":{"line":704,"column":0},"end":{"line":731,"column":2}},"281":{"start":{"line":705,"column":2},"end":{"line":707,"column":3}},"282":{"start":{"line":706,"column":4},"end":{"line":706,"column":11}},"283":{"start":{"line":708,"column":2},"end":{"line":708,"column":34}},"284":{"start":{"line":709,"column":2},"end":{"line":709,"column":17}},"285":{"start":{"line":710,"column":2},"end":{"line":710,"column":21}},"286":{"start":{"line":711,"column":2},"end":{"line":714,"column":4}},"287":{"start":{"line":715,"column":2},"end":{"line":715,"column":50}},"288":{"start":{"line":716,"column":2},"end":{"line":720,"column":5}},"289":{"start":{"line":721,"column":2},"end":{"line":721,"column":45}},"290":{"start":{"line":723,"column":2},"end":{"line":730,"column":5}},"291":{"start":{"line":724,"column":4},"end":{"line":724,"column":20}},"292":{"start":{"line":724,"column":13},"end":{"line":724,"column":20}},"293":{"start":{"line":725,"column":4},"end":{"line":729,"column":5}},"294":{"start":{"line":726,"column":6},"end":{"line":726,"column":14}},"295":{"start":{"line":728,"column":6},"end":{"line":728,"column":33}},"296":{"start":{"line":745,"column":0},"end":{"line":753,"column":2}},"297":{"start":{"line":746,"column":2},"end":{"line":748,"column":3}},"298":{"start":{"line":747,"column":4},"end":{"line":747,"column":11}},"299":{"start":{"line":749,"column":2},"end":{"line":749,"column":34}},"300":{"start":{"line":750,"column":2},"end":{"line":750,"column":17}},"301":{"start":{"line":751,"column":2},"end":{"line":751,"column":21}},"302":{"start":{"line":752,"column":2},"end":{"line":752,"column":45}},"303":{"start":{"line":756,"column":0},"end":{"line":757,"column":43}},"304":{"start":{"line":766,"column":0},"end":{"line":771,"column":2}},"305":{"start":{"line":767,"column":2},"end":{"line":768,"column":30}},"306":{"start":{"line":769,"column":2},"end":{"line":769,"column":50}},"307":{"start":{"line":770,"column":2},"end":{"line":770,"column":39}},"308":{"start":{"line":781,"column":0},"end":{"line":784,"column":2}},"309":{"start":{"line":782,"column":2},"end":{"line":782,"column":53}},"310":{"start":{"line":783,"column":2},"end":{"line":783,"column":80}},"311":{"start":{"line":787,"column":0},"end":{"line":787,"column":77}},"312":{"start":{"line":803,"column":0},"end":{"line":807,"column":2}},"313":{"start":{"line":804,"column":2},"end":{"line":804,"column":40}},"314":{"start":{"line":804,"column":33},"end":{"line":804,"column":40}},"315":{"start":{"line":805,"column":2},"end":{"line":805,"column":55}},"316":{"start":{"line":806,"column":2},"end":{"line":806,"column":50}},"317":{"start":{"line":819,"column":0},"end":{"line":823,"column":2}},"318":{"start":{"line":820,"column":2},"end":{"line":820,"column":40}},"319":{"start":{"line":820,"column":33},"end":{"line":820,"column":40}},"320":{"start":{"line":821,"column":2},"end":{"line":821,"column":55}},"321":{"start":{"line":822,"column":2},"end":{"line":822,"column":49}},"322":{"start":{"line":832,"column":0},"end":{"line":838,"column":2}},"323":{"start":{"line":833,"column":2},"end":{"line":833,"column":34}},"324":{"start":{"line":834,"column":2},"end":{"line":834,"column":22}},"325":{"start":{"line":835,"column":2},"end":{"line":835,"column":17}},"326":{"start":{"line":836,"column":2},"end":{"line":836,"column":21}},"327":{"start":{"line":837,"column":2},"end":{"line":837,"column":15}},"328":{"start":{"line":849,"column":0},"end":{"line":852,"column":2}},"329":{"start":{"line":850,"column":2},"end":{"line":850,"column":54}},"330":{"start":{"line":851,"column":2},"end":{"line":851,"column":58}},"331":{"start":{"line":863,"column":0},"end":{"line":866,"column":2}},"332":{"start":{"line":864,"column":2},"end":{"line":864,"column":55}},"333":{"start":{"line":865,"column":2},"end":{"line":865,"column":58}},"334":{"start":{"line":875,"column":0},"end":{"line":880,"column":2}},"335":{"start":{"line":876,"column":2},"end":{"line":876,"column":80}},"336":{"start":{"line":877,"column":2},"end":{"line":877,"column":50}},"337":{"start":{"line":878,"column":2},"end":{"line":878,"column":44}},"338":{"start":{"line":879,"column":2},"end":{"line":879,"column":41}},"339":{"start":{"line":891,"column":0},"end":{"line":894,"column":2}},"340":{"start":{"line":892,"column":2},"end":{"line":892,"column":59}},"341":{"start":{"line":893,"column":2},"end":{"line":893,"column":80}},"342":{"start":{"line":905,"column":0},"end":{"line":919,"column":2}},"343":{"start":{"line":906,"column":2},"end":{"line":906,"column":18}},"344":{"start":{"line":907,"column":2},"end":{"line":907,"column":60}},"345":{"start":{"line":908,"column":2},"end":{"line":918,"column":5}},"346":{"start":{"line":909,"column":4},"end":{"line":909,"column":28}},"347":{"start":{"line":909,"column":13},"end":{"line":909,"column":28}},"348":{"start":{"line":910,"column":4},"end":{"line":910,"column":65}},"349":{"start":{"line":911,"column":4},"end":{"line":912,"column":39}},"350":{"start":{"line":913,"column":4},"end":{"line":917,"column":5}},"351":{"start":{"line":914,"column":6},"end":{"line":914,"column":53}},"352":{"start":{"line":916,"column":6},"end":{"line":916,"column":28}},"353":{"start":{"line":921,"column":0},"end":{"line":926,"column":1}},"354":{"start":{"line":922,"column":2},"end":{"line":922,"column":81}},"355":{"start":{"line":923,"column":2},"end":{"line":923,"column":29}},"356":{"start":{"line":924,"column":2},"end":{"line":924,"column":40}},"357":{"start":{"line":925,"column":2},"end":{"line":925,"column":15}},"358":{"start":{"line":928,"column":0},"end":{"line":934,"column":2}},"359":{"start":{"line":929,"column":2},"end":{"line":929,"column":18}},"360":{"start":{"line":930,"column":2},"end":{"line":933,"column":5}},"361":{"start":{"line":931,"column":4},"end":{"line":931,"column":65}},"362":{"start":{"line":932,"column":4},"end":{"line":932,"column":35}},"363":{"start":{"line":937,"column":0},"end":{"line":937,"column":73}},"364":{"start":{"line":938,"column":0},"end":{"line":938,"column":75}},"365":{"start":{"line":946,"column":0},"end":{"line":952,"column":2}},"366":{"start":{"line":947,"column":2},"end":{"line":947,"column":51}},"367":{"start":{"line":948,"column":2},"end":{"line":950,"column":3}},"368":{"start":{"line":949,"column":4},"end":{"line":949,"column":49}},"369":{"start":{"line":951,"column":2},"end":{"line":951,"column":21}},"370":{"start":{"line":962,"column":0},"end":{"line":1033,"column":2}},"371":{"start":{"line":964,"column":2},"end":{"line":979,"column":3}},"372":{"start":{"line":965,"column":4},"end":{"line":965,"column":20}},"373":{"start":{"line":966,"column":4},"end":{"line":972,"column":5}},"374":{"start":{"line":967,"column":6},"end":{"line":971,"column":7}},"375":{"start":{"line":968,"column":8},"end":{"line":968,"column":36}},"376":{"start":{"line":970,"column":8},"end":{"line":970,"column":73}},"377":{"start":{"line":973,"column":4},"end":{"line":973,"column":33}},"378":{"start":{"line":974,"column":4},"end":{"line":974,"column":58}},"379":{"start":{"line":975,"column":4},"end":{"line":977,"column":5}},"380":{"start":{"line":976,"column":6},"end":{"line":976,"column":42}},"381":{"start":{"line":978,"column":4},"end":{"line":978,"column":18}},"382":{"start":{"line":981,"column":2},"end":{"line":981,"column":26}},"383":{"start":{"line":982,"column":2},"end":{"line":982,"column":13}},"384":{"start":{"line":983,"column":2},"end":{"line":987,"column":3}},"385":{"start":{"line":984,"column":4},"end":{"line":984,"column":25}},"386":{"start":{"line":986,"column":4},"end":{"line":986,"column":62}},"387":{"start":{"line":988,"column":2},"end":{"line":1030,"column":3}},"388":{"start":{"line":990,"column":6},"end":{"line":990,"column":20}},"389":{"start":{"line":991,"column":6},"end":{"line":991,"column":12}},"390":{"start":{"line":993,"column":6},"end":{"line":993,"column":21}},"391":{"start":{"line":994,"column":6},"end":{"line":994,"column":12}},"392":{"start":{"line":996,"column":6},"end":{"line":996,"column":20}},"393":{"start":{"line":997,"column":6},"end":{"line":997,"column":12}},"394":{"start":{"line":999,"column":6},"end":{"line":999,"column":21}},"395":{"start":{"line":1000,"column":6},"end":{"line":1000,"column":12}},"396":{"start":{"line":1002,"column":6},"end":{"line":1002,"column":28}},"397":{"start":{"line":1003,"column":6},"end":{"line":1003,"column":56}},"398":{"start":{"line":1004,"column":6},"end":{"line":1004,"column":12}},"399":{"start":{"line":1006,"column":6},"end":{"line":1006,"column":23}},"400":{"start":{"line":1007,"column":6},"end":{"line":1007,"column":51}},"401":{"start":{"line":1008,"column":6},"end":{"line":1008,"column":12}},"402":{"start":{"line":1010,"column":6},"end":{"line":1010,"column":27}},"403":{"start":{"line":1011,"column":6},"end":{"line":1011,"column":51}},"404":{"start":{"line":1012,"column":6},"end":{"line":1012,"column":12}},"405":{"start":{"line":1014,"column":6},"end":{"line":1016,"column":7}},"406":{"start":{"line":1015,"column":8},"end":{"line":1015,"column":61}},"407":{"start":{"line":1017,"column":6},"end":{"line":1017,"column":21}},"408":{"start":{"line":1018,"column":6},"end":{"line":1018,"column":12}},"409":{"start":{"line":1020,"column":6},"end":{"line":1020,"column":25}},"410":{"start":{"line":1021,"column":6},"end":{"line":1021,"column":12}},"411":{"start":{"line":1023,"column":6},"end":{"line":1023,"column":29}},"412":{"start":{"line":1024,"column":6},"end":{"line":1024,"column":12}},"413":{"start":{"line":1028,"column":6},"end":{"line":1028,"column":27}},"414":{"start":{"line":1029,"column":6},"end":{"line":1029,"column":12}},"415":{"start":{"line":1031,"column":2},"end":{"line":1031,"column":57}},"416":{"start":{"line":1032,"column":2},"end":{"line":1032,"column":14}},"417":{"start":{"line":1041,"column":0},"end":{"line":1160,"column":2}},"418":{"start":{"line":1042,"column":2},"end":{"line":1044,"column":3}},"419":{"start":{"line":1043,"column":4},"end":{"line":1043,"column":36}},"420":{"start":{"line":1045,"column":2},"end":{"line":1048,"column":3}},"421":{"start":{"line":1046,"column":4},"end":{"line":1046,"column":48}},"422":{"start":{"line":1047,"column":4},"end":{"line":1047,"column":36}},"423":{"start":{"line":1049,"column":2},"end":{"line":1049,"column":18}},"424":{"start":{"line":1050,"column":2},"end":{"line":1050,"column":56}},"425":{"start":{"line":1052,"column":2},"end":{"line":1052,"column":22}},"426":{"start":{"line":1053,"column":2},"end":{"line":1148,"column":3}},"427":{"start":{"line":1054,"column":4},"end":{"line":1054,"column":44}},"428":{"start":{"line":1056,"column":4},"end":{"line":1077,"column":5}},"429":{"start":{"line":1057,"column":6},"end":{"line":1057,"column":24}},"430":{"start":{"line":1058,"column":6},"end":{"line":1058,"column":28}},"431":{"start":{"line":1059,"column":6},"end":{"line":1059,"column":31}},"432":{"start":{"line":1060,"column":6},"end":{"line":1075,"column":7}},"433":{"start":{"line":1061,"column":8},"end":{"line":1068,"column":9}},"434":{"start":{"line":1062,"column":10},"end":{"line":1062,"column":66}},"435":{"start":{"line":1063,"column":10},"end":{"line":1067,"column":11}},"436":{"start":{"line":1064,"column":12},"end":{"line":1064,"column":62}},"437":{"start":{"line":1065,"column":12},"end":{"line":1065,"column":69}},"438":{"start":{"line":1066,"column":12},"end":{"line":1066,"column":45}},"439":{"start":{"line":1069,"column":8},"end":{"line":1072,"column":11}},"440":{"start":{"line":1073,"column":8},"end":{"line":1073,"column":30}},"441":{"start":{"line":1074,"column":8},"end":{"line":1074,"column":17}},"442":{"start":{"line":1078,"column":4},"end":{"line":1078,"column":23}},"443":{"start":{"line":1079,"column":4},"end":{"line":1083,"column":5}},"444":{"start":{"line":1081,"column":6},"end":{"line":1081,"column":71}},"445":{"start":{"line":1082,"column":6},"end":{"line":1082,"column":15}},"446":{"start":{"line":1085,"column":4},"end":{"line":1085,"column":52}},"447":{"start":{"line":1086,"column":4},"end":{"line":1086,"column":32}},"448":{"start":{"line":1087,"column":4},"end":{"line":1087,"column":20}},"449":{"start":{"line":1088,"column":4},"end":{"line":1088,"column":15}},"450":{"start":{"line":1090,"column":4},"end":{"line":1146,"column":5}},"451":{"start":{"line":1091,"column":6},"end":{"line":1091,"column":42}},"452":{"start":{"line":1092,"column":11},"end":{"line":1146,"column":5}},"453":{"start":{"line":1093,"column":6},"end":{"line":1093,"column":48}},"454":{"start":{"line":1095,"column":6},"end":{"line":1095,"column":40}},"455":{"start":{"line":1096,"column":6},"end":{"line":1127,"column":7}},"456":{"start":{"line":1097,"column":8},"end":{"line":1097,"column":25}},"457":{"start":{"line":1098,"column":8},"end":{"line":1105,"column":9}},"458":{"start":{"line":1100,"column":10},"end":{"line":1102,"column":11}},"459":{"start":{"line":1101,"column":12},"end":{"line":1101,"column":67}},"460":{"start":{"line":1104,"column":10},"end":{"line":1104,"column":62}},"461":{"start":{"line":1106,"column":8},"end":{"line":1121,"column":9}},"462":{"start":{"line":1108,"column":10},"end":{"line":1108,"column":72}},"463":{"start":{"line":1109,"column":10},"end":{"line":1109,"column":72}},"464":{"start":{"line":1110,"column":10},"end":{"line":1110,"column":33}},"465":{"start":{"line":1113,"column":10},"end":{"line":1120,"column":11}},"466":{"start":{"line":1114,"column":12},"end":{"line":1119,"column":13}},"467":{"start":{"line":1115,"column":14},"end":{"line":1115,"column":35}},"468":{"start":{"line":1118,"column":14},"end":{"line":1118,"column":23}},"469":{"start":{"line":1122,"column":13},"end":{"line":1127,"column":7}},"470":{"start":{"line":1124,"column":8},"end":{"line":1124,"column":33}},"471":{"start":{"line":1126,"column":8},"end":{"line":1126,"column":56}},"472":{"start":{"line":1128,"column":6},"end":{"line":1129,"column":46}},"473":{"start":{"line":1130,"column":6},"end":{"line":1130,"column":25}},"474":{"start":{"line":1133,"column":6},"end":{"line":1133,"column":54}},"475":{"start":{"line":1134,"column":6},"end":{"line":1145,"column":7}},"476":{"start":{"line":1135,"column":8},"end":{"line":1135,"column":44}},"477":{"start":{"line":1137,"column":8},"end":{"line":1144,"column":9}},"478":{"start":{"line":1138,"column":10},"end":{"line":1138,"column":58}},"479":{"start":{"line":1140,"column":10},"end":{"line":1143,"column":13}},"480":{"start":{"line":1147,"column":4},"end":{"line":1147,"column":26}},"481":{"start":{"line":1149,"column":2},"end":{"line":1149,"column":18}},"482":{"start":{"line":1150,"column":2},"end":{"line":1150,"column":16}},"483":{"start":{"line":1151,"column":2},"end":{"line":1154,"column":3}},"484":{"start":{"line":1152,"column":4},"end":{"line":1152,"column":33}},"485":{"start":{"line":1153,"column":4},"end":{"line":1153,"column":49}},"486":{"start":{"line":1155,"column":2},"end":{"line":1158,"column":5}},"487":{"start":{"line":1159,"column":2},"end":{"line":1159,"column":19}},"488":{"start":{"line":1168,"column":0},"end":{"line":1186,"column":2}},"489":{"start":{"line":1169,"column":2},"end":{"line":1171,"column":3}},"490":{"start":{"line":1170,"column":4},"end":{"line":1170,"column":14}},"491":{"start":{"line":1172,"column":2},"end":{"line":1172,"column":18}},"492":{"start":{"line":1173,"column":2},"end":{"line":1175,"column":3}},"493":{"start":{"line":1174,"column":4},"end":{"line":1174,"column":20}},"494":{"start":{"line":1176,"column":2},"end":{"line":1176,"column":19}},"495":{"start":{"line":1177,"column":2},"end":{"line":1184,"column":3}},"496":{"start":{"line":1178,"column":4},"end":{"line":1178,"column":37}},"497":{"start":{"line":1179,"column":4},"end":{"line":1183,"column":5}},"498":{"start":{"line":1180,"column":6},"end":{"line":1180,"column":56}},"499":{"start":{"line":1182,"column":6},"end":{"line":1182,"column":65}},"500":{"start":{"line":1185,"column":2},"end":{"line":1185,"column":41}},"501":{"start":{"line":1195,"column":0},"end":{"line":1198,"column":2}},"502":{"start":{"line":1196,"column":2},"end":{"line":1196,"column":31}},"503":{"start":{"line":1197,"column":2},"end":{"line":1197,"column":65}},"504":{"start":{"line":1207,"column":0},"end":{"line":1211,"column":2}},"505":{"start":{"line":1208,"column":2},"end":{"line":1208,"column":56}},"506":{"start":{"line":1209,"column":2},"end":{"line":1209,"column":32}},"507":{"start":{"line":1210,"column":2},"end":{"line":1210,"column":65}},"508":{"start":{"line":1220,"column":0},"end":{"line":1252,"column":2}},"509":{"start":{"line":1221,"column":2},"end":{"line":1221,"column":56}},"510":{"start":{"line":1222,"column":2},"end":{"line":1226,"column":4}},"511":{"start":{"line":1227,"column":2},"end":{"line":1250,"column":3}},"512":{"start":{"line":1228,"column":4},"end":{"line":1228,"column":22}},"513":{"start":{"line":1229,"column":4},"end":{"line":1229,"column":23}},"514":{"start":{"line":1230,"column":4},"end":{"line":1234,"column":5}},"515":{"start":{"line":1232,"column":6},"end":{"line":1232,"column":71}},"516":{"start":{"line":1233,"column":6},"end":{"line":1233,"column":15}},"517":{"start":{"line":1236,"column":4},"end":{"line":1238,"column":5}},"518":{"start":{"line":1237,"column":6},"end":{"line":1237,"column":15}},"519":{"start":{"line":1239,"column":4},"end":{"line":1239,"column":43}},"520":{"start":{"line":1240,"column":4},"end":{"line":1240,"column":45}},"521":{"start":{"line":1241,"column":4},"end":{"line":1249,"column":5}},"522":{"start":{"line":1242,"column":6},"end":{"line":1242,"column":27}},"523":{"start":{"line":1243,"column":6},"end":{"line":1247,"column":7}},"524":{"start":{"line":1244,"column":8},"end":{"line":1244,"column":36}},"525":{"start":{"line":1246,"column":8},"end":{"line":1246,"column":73}},"526":{"start":{"line":1248,"column":6},"end":{"line":1248,"column":32}},"527":{"start":{"line":1251,"column":2},"end":{"line":1251,"column":16}},"528":{"start":{"line":1261,"column":0},"end":{"line":1267,"column":2}},"529":{"start":{"line":1262,"column":2},"end":{"line":1264,"column":3}},"530":{"start":{"line":1263,"column":4},"end":{"line":1263,"column":22}},"531":{"start":{"line":1265,"column":2},"end":{"line":1265,"column":57}},"532":{"start":{"line":1266,"column":2},"end":{"line":1266,"column":55}},"533":{"start":{"line":1276,"column":0},"end":{"line":1282,"column":2}},"534":{"start":{"line":1277,"column":2},"end":{"line":1279,"column":3}},"535":{"start":{"line":1278,"column":4},"end":{"line":1278,"column":22}},"536":{"start":{"line":1280,"column":2},"end":{"line":1280,"column":64}},"537":{"start":{"line":1281,"column":2},"end":{"line":1281,"column":55}},"538":{"start":{"line":1289,"column":0},"end":{"line":1298,"column":2}},"539":{"start":{"line":1290,"column":2},"end":{"line":1290,"column":41}},"540":{"start":{"line":1291,"column":2},"end":{"line":1295,"column":3}},"541":{"start":{"line":1292,"column":4},"end":{"line":1293,"column":35}},"542":{"start":{"line":1294,"column":4},"end":{"line":1294,"column":31}},"543":{"start":{"line":1296,"column":2},"end":{"line":1296,"column":37}},"544":{"start":{"line":1297,"column":2},"end":{"line":1297,"column":17}},"545":{"start":{"line":1306,"column":0},"end":{"line":1344,"column":2}},"546":{"start":{"line":1307,"column":2},"end":{"line":1307,"column":45}},"547":{"start":{"line":1308,"column":2},"end":{"line":1308,"column":55}},"548":{"start":{"line":1309,"column":2},"end":{"line":1311,"column":3}},"549":{"start":{"line":1310,"column":4},"end":{"line":1310,"column":15}},"550":{"start":{"line":1312,"column":2},"end":{"line":1312,"column":18}},"551":{"start":{"line":1313,"column":2},"end":{"line":1313,"column":31}},"552":{"start":{"line":1314,"column":2},"end":{"line":1339,"column":3}},"553":{"start":{"line":1316,"column":4},"end":{"line":1318,"column":7}},"554":{"start":{"line":1317,"column":6},"end":{"line":1317,"column":21}},"555":{"start":{"line":1319,"column":9},"end":{"line":1339,"column":3}},"556":{"start":{"line":1322,"column":4},"end":{"line":1322,"column":22}},"557":{"start":{"line":1323,"column":4},"end":{"line":1323,"column":22}},"558":{"start":{"line":1324,"column":4},"end":{"line":1330,"column":7}},"559":{"start":{"line":1325,"column":6},"end":{"line":1329,"column":7}},"560":{"start":{"line":1326,"column":8},"end":{"line":1326,"column":25}},"561":{"start":{"line":1327,"column":13},"end":{"line":1329,"column":7}},"562":{"start":{"line":1328,"column":8},"end":{"line":1328,"column":25}},"563":{"start":{"line":1331,"column":4},"end":{"line":1338,"column":5}},"564":{"start":{"line":1332,"column":6},"end":{"line":1332,"column":22}},"565":{"start":{"line":1333,"column":11},"end":{"line":1338,"column":5}},"566":{"start":{"line":1334,"column":6},"end":{"line":1337,"column":9}},"567":{"start":{"line":1335,"column":8},"end":{"line":1335,"column":36}},"568":{"start":{"line":1336,"column":8},"end":{"line":1336,"column":30}},"569":{"start":{"line":1340,"column":2},"end":{"line":1342,"column":5}},"570":{"start":{"line":1341,"column":4},"end":{"line":1341,"column":40}},"571":{"start":{"line":1343,"column":2},"end":{"line":1343,"column":25}},"572":{"start":{"line":1353,"column":0},"end":{"line":1382,"column":2}},"573":{"start":{"line":1354,"column":2},"end":{"line":1359,"column":3}},"574":{"start":{"line":1355,"column":4},"end":{"line":1355,"column":38}},"575":{"start":{"line":1356,"column":4},"end":{"line":1358,"column":5}},"576":{"start":{"line":1357,"column":6},"end":{"line":1357,"column":29}},"577":{"start":{"line":1361,"column":2},"end":{"line":1364,"column":4}},"578":{"start":{"line":1366,"column":2},"end":{"line":1380,"column":3}},"579":{"start":{"line":1367,"column":4},"end":{"line":1370,"column":5}},"580":{"start":{"line":1368,"column":6},"end":{"line":1368,"column":59}},"581":{"start":{"line":1369,"column":6},"end":{"line":1369,"column":34}},"582":{"start":{"line":1372,"column":4},"end":{"line":1374,"column":5}},"583":{"start":{"line":1373,"column":6},"end":{"line":1373,"column":63}},"584":{"start":{"line":1376,"column":4},"end":{"line":1379,"column":5}},"585":{"start":{"line":1377,"column":6},"end":{"line":1378,"column":35}},"586":{"start":{"line":1381,"column":2},"end":{"line":1381,"column":39}},"587":{"start":{"line":1390,"column":0},"end":{"line":1406,"column":2}},"588":{"start":{"line":1392,"column":2},"end":{"line":1394,"column":3}},"589":{"start":{"line":1393,"column":4},"end":{"line":1393,"column":19}},"590":{"start":{"line":1395,"column":2},"end":{"line":1395,"column":56}},"591":{"start":{"line":1396,"column":2},"end":{"line":1396,"column":16}},"592":{"start":{"line":1397,"column":2},"end":{"line":1404,"column":3}},"593":{"start":{"line":1398,"column":4},"end":{"line":1398,"column":43}},"594":{"start":{"line":1400,"column":4},"end":{"line":1400,"column":74}},"595":{"start":{"line":1401,"column":4},"end":{"line":1403,"column":5}},"596":{"start":{"line":1402,"column":6},"end":{"line":1402,"column":28}},"597":{"start":{"line":1405,"column":2},"end":{"line":1405,"column":14}},"598":{"start":{"line":1421,"column":0},"end":{"line":1441,"column":2}},"599":{"start":{"line":1422,"column":2},"end":{"line":1422,"column":18}},"600":{"start":{"line":1424,"column":2},"end":{"line":1424,"column":24}},"601":{"start":{"line":1425,"column":2},"end":{"line":1425,"column":54}},"602":{"start":{"line":1426,"column":2},"end":{"line":1440,"column":5}},"603":{"start":{"line":1427,"column":4},"end":{"line":1429,"column":5}},"604":{"start":{"line":1428,"column":6},"end":{"line":1428,"column":25}},"605":{"start":{"line":1431,"column":4},"end":{"line":1433,"column":7}},"606":{"start":{"line":1432,"column":6},"end":{"line":1432,"column":38}},"607":{"start":{"line":1434,"column":4},"end":{"line":1439,"column":5}},"608":{"start":{"line":1435,"column":6},"end":{"line":1436,"column":43}},"609":{"start":{"line":1438,"column":6},"end":{"line":1438,"column":21}},"610":{"start":{"line":1444,"column":0},"end":{"line":1444,"column":68}},"611":{"start":{"line":1464,"column":0},"end":{"line":1482,"column":2}},"612":{"start":{"line":1465,"column":2},"end":{"line":1473,"column":3}},"613":{"start":{"line":1466,"column":4},"end":{"line":1471,"column":7}},"614":{"start":{"line":1467,"column":6},"end":{"line":1467,"column":55}},"615":{"start":{"line":1468,"column":6},"end":{"line":1470,"column":7}},"616":{"start":{"line":1469,"column":8},"end":{"line":1469,"column":16}},"617":{"start":{"line":1472,"column":4},"end":{"line":1472,"column":11}},"618":{"start":{"line":1474,"column":2},"end":{"line":1474,"column":17}},"619":{"start":{"line":1475,"column":2},"end":{"line":1475,"column":34}},"620":{"start":{"line":1476,"column":2},"end":{"line":1476,"column":21}},"621":{"start":{"line":1478,"column":2},"end":{"line":1478,"column":66}},"622":{"start":{"line":1479,"column":2},"end":{"line":1481,"column":5}},"623":{"start":{"line":1480,"column":4},"end":{"line":1480,"column":45}},"624":{"start":{"line":1484,"column":0},"end":{"line":1484,"column":70}},"625":{"start":{"line":1494,"column":0},"end":{"line":1517,"column":2}},"626":{"start":{"line":1495,"column":2},"end":{"line":1501,"column":3}},"627":{"start":{"line":1498,"column":4},"end":{"line":1498,"column":22}},"628":{"start":{"line":1499,"column":4},"end":{"line":1499,"column":15}},"629":{"start":{"line":1500,"column":4},"end":{"line":1500,"column":16}},"630":{"start":{"line":1503,"column":2},"end":{"line":1504,"column":30}},"631":{"start":{"line":1505,"column":2},"end":{"line":1505,"column":51}},"632":{"start":{"line":1506,"column":2},"end":{"line":1506,"column":33}},"633":{"start":{"line":1507,"column":2},"end":{"line":1516,"column":7}},"634":{"start":{"line":1509,"column":6},"end":{"line":1511,"column":7}},"635":{"start":{"line":1510,"column":8},"end":{"line":1510,"column":23}},"636":{"start":{"line":1512,"column":6},"end":{"line":1512,"column":49}},"637":{"start":{"line":1515,"column":6},"end":{"line":1515,"column":25}},"638":{"start":{"line":1524,"column":0},"end":{"line":1526,"column":2}},"639":{"start":{"line":1525,"column":2},"end":{"line":1525,"column":71}},"640":{"start":{"line":1533,"column":0},"end":{"line":1537,"column":2}},"641":{"start":{"line":1534,"column":2},"end":{"line":1535,"column":58}},"642":{"start":{"line":1536,"column":2},"end":{"line":1536,"column":24}},"643":{"start":{"line":1545,"column":0},"end":{"line":1587,"column":2}},"644":{"start":{"line":1546,"column":2},"end":{"line":1546,"column":18}},"645":{"start":{"line":1548,"column":2},"end":{"line":1551,"column":3}},"646":{"start":{"line":1549,"column":4},"end":{"line":1549,"column":16}},"647":{"start":{"line":1550,"column":4},"end":{"line":1550,"column":23}},"648":{"start":{"line":1553,"column":2},"end":{"line":1555,"column":3}},"649":{"start":{"line":1554,"column":4},"end":{"line":1554,"column":22}},"650":{"start":{"line":1557,"column":2},"end":{"line":1557,"column":47}},"651":{"start":{"line":1558,"column":2},"end":{"line":1560,"column":3}},"652":{"start":{"line":1559,"column":4},"end":{"line":1559,"column":32}},"653":{"start":{"line":1562,"column":2},"end":{"line":1564,"column":5}},"654":{"start":{"line":1563,"column":4},"end":{"line":1563,"column":32}},"655":{"start":{"line":1565,"column":2},"end":{"line":1570,"column":3}},"656":{"start":{"line":1566,"column":4},"end":{"line":1569,"column":7}},"657":{"start":{"line":1567,"column":6},"end":{"line":1568,"column":35}},"658":{"start":{"line":1572,"column":2},"end":{"line":1586,"column":9}},"659":{"start":{"line":1573,"column":4},"end":{"line":1585,"column":7}},"660":{"start":{"line":1574,"column":6},"end":{"line":1578,"column":7}},"661":{"start":{"line":1577,"column":8},"end":{"line":1577,"column":27}},"662":{"start":{"line":1579,"column":6},"end":{"line":1584,"column":9}},"663":{"start":{"line":1580,"column":8},"end":{"line":1582,"column":9}},"664":{"start":{"line":1581,"column":10},"end":{"line":1581,"column":29}},"665":{"start":{"line":1583,"column":8},"end":{"line":1583,"column":26}},"666":{"start":{"line":1595,"column":0},"end":{"line":1606,"column":2}},"667":{"start":{"line":1596,"column":2},"end":{"line":1596,"column":10}},"668":{"start":{"line":1597,"column":2},"end":{"line":1599,"column":3}},"669":{"start":{"line":1598,"column":4},"end":{"line":1598,"column":23}},"670":{"start":{"line":1600,"column":2},"end":{"line":1604,"column":3}},"671":{"start":{"line":1601,"column":4},"end":{"line":1601,"column":30}},"672":{"start":{"line":1603,"column":4},"end":{"line":1603,"column":14}},"673":{"start":{"line":1605,"column":2},"end":{"line":1605,"column":13}},"674":{"start":{"line":1611,"column":0},"end":{"line":1614,"column":2}},"675":{"start":{"line":1612,"column":2},"end":{"line":1612,"column":38}},"676":{"start":{"line":1613,"column":2},"end":{"line":1613,"column":31}},"677":{"start":{"line":1635,"column":0},"end":{"line":1637,"column":2}},"678":{"start":{"line":1636,"column":2},"end":{"line":1636,"column":83}},"679":{"start":{"line":1645,"column":0},"end":{"line":1647,"column":2}},"680":{"start":{"line":1646,"column":2},"end":{"line":1646,"column":85}},"681":{"start":{"line":1654,"column":0},"end":{"line":1656,"column":2}},"682":{"start":{"line":1655,"column":2},"end":{"line":1655,"column":80}},"683":{"start":{"line":1663,"column":0},"end":{"line":1665,"column":2}},"684":{"start":{"line":1664,"column":2},"end":{"line":1664,"column":81}},"685":{"start":{"line":1672,"column":0},"end":{"line":1675,"column":2}},"686":{"start":{"line":1673,"column":2},"end":{"line":1674,"column":22}},"687":{"start":{"line":1682,"column":0},"end":{"line":1685,"column":2}},"688":{"start":{"line":1683,"column":2},"end":{"line":1684,"column":22}},"689":{"start":{"line":1693,"column":0},"end":{"line":1695,"column":2}},"690":{"start":{"line":1694,"column":2},"end":{"line":1694,"column":85}},"691":{"start":{"line":1704,"column":0},"end":{"line":1707,"column":2}},"692":{"start":{"line":1705,"column":2},"end":{"line":1706,"column":22}},"693":{"start":{"line":1715,"column":0},"end":{"line":1717,"column":2}},"694":{"start":{"line":1716,"column":2},"end":{"line":1716,"column":83}},"695":{"start":{"line":1726,"column":0},"end":{"line":1728,"column":2}},"696":{"start":{"line":1727,"column":2},"end":{"line":1727,"column":80}},"697":{"start":{"line":1736,"column":0},"end":{"line":1741,"column":2}},"698":{"start":{"line":1737,"column":2},"end":{"line":1739,"column":39}},"699":{"start":{"line":1740,"column":2},"end":{"line":1740,"column":55}},"700":{"start":{"line":1749,"column":0},"end":{"line":1751,"column":2}},"701":{"start":{"line":1750,"column":2},"end":{"line":1750,"column":79}},"702":{"start":{"line":1758,"column":0},"end":{"line":1766,"column":2}},"703":{"start":{"line":1759,"column":2},"end":{"line":1762,"column":3}},"704":{"start":{"line":1760,"column":4},"end":{"line":1760,"column":17}},"705":{"start":{"line":1761,"column":4},"end":{"line":1761,"column":17}},"706":{"start":{"line":1763,"column":2},"end":{"line":1763,"column":26}},"707":{"start":{"line":1764,"column":2},"end":{"line":1764,"column":18}},"708":{"start":{"line":1765,"column":2},"end":{"line":1765,"column":52}},"709":{"start":{"line":1775,"column":0},"end":{"line":1777,"column":2}},"710":{"start":{"line":1776,"column":2},"end":{"line":1776,"column":84}},"711":{"start":{"line":1786,"column":0},"end":{"line":1788,"column":2}},"712":{"start":{"line":1787,"column":2},"end":{"line":1787,"column":83}},"713":{"start":{"line":1796,"column":0},"end":{"line":1825,"column":2}},"714":{"start":{"line":1797,"column":2},"end":{"line":1800,"column":3}},"715":{"start":{"line":1798,"column":4},"end":{"line":1798,"column":17}},"716":{"start":{"line":1799,"column":4},"end":{"line":1799,"column":17}},"717":{"start":{"line":1801,"column":2},"end":{"line":1801,"column":26}},"718":{"start":{"line":1803,"column":2},"end":{"line":1803,"column":18}},"719":{"start":{"line":1804,"column":2},"end":{"line":1806,"column":5}},"720":{"start":{"line":1805,"column":4},"end":{"line":1805,"column":59}},"721":{"start":{"line":1808,"column":2},"end":{"line":1812,"column":3}},"722":{"start":{"line":1809,"column":4},"end":{"line":1811,"column":7}},"723":{"start":{"line":1810,"column":6},"end":{"line":1810,"column":60}},"724":{"start":{"line":1813,"column":2},"end":{"line":1824,"column":5}},"725":{"start":{"line":1814,"column":4},"end":{"line":1823,"column":5}},"726":{"start":{"line":1815,"column":6},"end":{"line":1815,"column":20}},"727":{"start":{"line":1817,"column":6},"end":{"line":1817,"column":22}},"728":{"start":{"line":1818,"column":6},"end":{"line":1818,"column":43}},"729":{"start":{"line":1819,"column":6},"end":{"line":1821,"column":7}},"730":{"start":{"line":1820,"column":8},"end":{"line":1820,"column":45}},"731":{"start":{"line":1822,"column":6},"end":{"line":1822,"column":22}},"732":{"start":{"line":1834,"column":0},"end":{"line":1836,"column":2}},"733":{"start":{"line":1835,"column":2},"end":{"line":1835,"column":85}},"734":{"start":{"line":1843,"column":0},"end":{"line":1845,"column":2}},"735":{"start":{"line":1844,"column":2},"end":{"line":1844,"column":85}},"736":{"start":{"line":1853,"column":0},"end":{"line":1855,"column":2}},"737":{"start":{"line":1854,"column":2},"end":{"line":1854,"column":75}},"738":{"start":{"line":1863,"column":0},"end":{"line":1891,"column":2}},"739":{"start":{"line":1864,"column":2},"end":{"line":1864,"column":18}},"740":{"start":{"line":1865,"column":2},"end":{"line":1865,"column":46}},"741":{"start":{"line":1866,"column":2},"end":{"line":1866,"column":27}},"742":{"start":{"line":1868,"column":2},"end":{"line":1868,"column":21}},"743":{"start":{"line":1869,"column":2},"end":{"line":1869,"column":25}},"744":{"start":{"line":1871,"column":2},"end":{"line":1873,"column":3}},"745":{"start":{"line":1872,"column":4},"end":{"line":1872,"column":37}},"746":{"start":{"line":1875,"column":2},"end":{"line":1875,"column":34}},"747":{"start":{"line":1876,"column":2},"end":{"line":1876,"column":15}},"748":{"start":{"line":1878,"column":2},"end":{"line":1878,"column":50}},"749":{"start":{"line":1879,"column":2},"end":{"line":1889,"column":4}},"750":{"start":{"line":1880,"column":4},"end":{"line":1888,"column":5}},"751":{"start":{"line":1881,"column":6},"end":{"line":1881,"column":23}},"752":{"start":{"line":1883,"column":6},"end":{"line":1886,"column":9}},"753":{"start":{"line":1884,"column":8},"end":{"line":1884,"column":52}},"754":{"start":{"line":1885,"column":8},"end":{"line":1885,"column":36}},"755":{"start":{"line":1887,"column":6},"end":{"line":1887,"column":23}},"756":{"start":{"line":1890,"column":2},"end":{"line":1890,"column":30}},"757":{"start":{"line":1903,"column":0},"end":{"line":1905,"column":2}},"758":{"start":{"line":1904,"column":2},"end":{"line":1904,"column":89}},"759":{"start":{"line":1913,"column":0},"end":{"line":1927,"column":2}},"760":{"start":{"line":1914,"column":2},"end":{"line":1914,"column":18}},"761":{"start":{"line":1915,"column":2},"end":{"line":1915,"column":46}},"762":{"start":{"line":1916,"column":2},"end":{"line":1916,"column":27}},"763":{"start":{"line":1918,"column":2},"end":{"line":1920,"column":3}},"764":{"start":{"line":1919,"column":4},"end":{"line":1919,"column":37}},"765":{"start":{"line":1921,"column":2},"end":{"line":1921,"column":21}},"766":{"start":{"line":1922,"column":2},"end":{"line":1922,"column":25}},"767":{"start":{"line":1923,"column":2},"end":{"line":1923,"column":15}},"768":{"start":{"line":1925,"column":2},"end":{"line":1925,"column":54}},"769":{"start":{"line":1926,"column":2},"end":{"line":1926,"column":24}},"770":{"start":{"line":1937,"column":0},"end":{"line":1939,"column":2}},"771":{"start":{"line":1938,"column":2},"end":{"line":1938,"column":89}},"772":{"start":{"line":1947,"column":0},"end":{"line":1961,"column":2}},"773":{"start":{"line":1948,"column":2},"end":{"line":1948,"column":18}},"774":{"start":{"line":1949,"column":2},"end":{"line":1949,"column":46}},"775":{"start":{"line":1950,"column":2},"end":{"line":1950,"column":27}},"776":{"start":{"line":1952,"column":2},"end":{"line":1954,"column":3}},"777":{"start":{"line":1953,"column":4},"end":{"line":1953,"column":37}},"778":{"start":{"line":1955,"column":2},"end":{"line":1955,"column":21}},"779":{"start":{"line":1956,"column":2},"end":{"line":1956,"column":25}},"780":{"start":{"line":1957,"column":2},"end":{"line":1957,"column":15}},"781":{"start":{"line":1959,"column":2},"end":{"line":1959,"column":54}},"782":{"start":{"line":1960,"column":2},"end":{"line":1960,"column":24}},"783":{"start":{"line":1973,"column":0},"end":{"line":1976,"column":2}},"784":{"start":{"line":1974,"column":2},"end":{"line":1975,"column":20}},"785":{"start":{"line":1984,"column":0},"end":{"line":1998,"column":2}},"786":{"start":{"line":1985,"column":2},"end":{"line":1985,"column":18}},"787":{"start":{"line":1986,"column":2},"end":{"line":1986,"column":46}},"788":{"start":{"line":1987,"column":2},"end":{"line":1987,"column":27}},"789":{"start":{"line":1989,"column":2},"end":{"line":1991,"column":3}},"790":{"start":{"line":1990,"column":4},"end":{"line":1990,"column":37}},"791":{"start":{"line":1992,"column":2},"end":{"line":1992,"column":21}},"792":{"start":{"line":1993,"column":2},"end":{"line":1993,"column":25}},"793":{"start":{"line":1994,"column":2},"end":{"line":1994,"column":15}},"794":{"start":{"line":1996,"column":2},"end":{"line":1996,"column":62}},"795":{"start":{"line":1997,"column":2},"end":{"line":1997,"column":24}},"796":{"start":{"line":2004,"column":0},"end":{"line":2007,"column":2}},"797":{"start":{"line":2005,"column":2},"end":{"line":2006,"column":20}},"798":{"start":{"line":2013,"column":0},"end":{"line":2016,"column":2}},"799":{"start":{"line":2014,"column":2},"end":{"line":2015,"column":20}},"800":{"start":{"line":2022,"column":0},"end":{"line":2025,"column":2}},"801":{"start":{"line":2023,"column":2},"end":{"line":2024,"column":20}}},"branchMap":{"1":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"2":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":7},"end":{"line":66,"column":10}},{"start":{"line":66,"column":16},"end":{"line":66,"column":44}}]},"3":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"4":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":11},"end":{"line":75,"column":17}},{"start":{"line":75,"column":21},"end":{"line":75,"column":46}}]},"5":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"6":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":6},"end":{"line":84,"column":6}},{"start":{"line":84,"column":6},"end":{"line":84,"column":6}}]},"7":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":10},"end":{"line":84,"column":14}},{"start":{"line":84,"column":18},"end":{"line":84,"column":31}}]},"8":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"9":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":7},"end":{"line":102,"column":10}},{"start":{"line":102,"column":16},"end":{"line":102,"column":44}}]},"10":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":2},"end":{"line":107,"column":2}},{"start":{"line":107,"column":2},"end":{"line":107,"column":2}}]},"11":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":11},"end":{"line":111,"column":17}},{"start":{"line":111,"column":21},"end":{"line":111,"column":46}}]},"12":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"13":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":13},"end":{"line":122,"column":15}},{"start":{"line":122,"column":19},"end":{"line":122,"column":26}}]},"14":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":125,"column":4}},{"start":{"line":125,"column":4},"end":{"line":125,"column":4}}]},"15":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":156,"column":4}},{"start":{"line":156,"column":4},"end":{"line":156,"column":4}}]},"16":{"line":168,"type":"cond-expr","locations":[{"start":{"line":169,"column":4},"end":{"line":169,"column":6}},{"start":{"line":169,"column":9},"end":{"line":169,"column":20}}]},"17":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":16},"end":{"line":175,"column":30}},{"start":{"line":175,"column":34},"end":{"line":175,"column":57}}]},"18":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"19":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"20":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":18},"end":{"line":183,"column":32}},{"start":{"line":183,"column":36},"end":{"line":183,"column":61}},{"start":{"line":184,"column":4},"end":{"line":184,"column":15}},{"start":{"line":184,"column":19},"end":{"line":184,"column":29}}]},"21":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"22":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":6},"end":{"line":185,"column":13}},{"start":{"line":185,"column":17},"end":{"line":185,"column":26}}]},"23":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":201,"column":2}},{"start":{"line":201,"column":2},"end":{"line":201,"column":2}}]},"24":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":6},"end":{"line":205,"column":6}},{"start":{"line":205,"column":6},"end":{"line":205,"column":6}}]},"25":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":4},"end":{"line":240,"column":4}},{"start":{"line":240,"column":4},"end":{"line":240,"column":4}}]},"26":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":6},"end":{"line":244,"column":6}},{"start":{"line":244,"column":6},"end":{"line":244,"column":6}}]},"27":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":6},"end":{"line":247,"column":6}},{"start":{"line":247,"column":6},"end":{"line":247,"column":6}}]},"28":{"line":317,"type":"binary-expr","locations":[{"start":{"line":317,"column":20},"end":{"line":317,"column":26}},{"start":{"line":317,"column":31},"end":{"line":317,"column":44}},{"start":{"line":317,"column":48},"end":{"line":317,"column":65}},{"start":{"line":318,"column":5},"end":{"line":318,"column":25}},{"start":{"line":318,"column":29},"end":{"line":318,"column":53}},{"start":{"line":319,"column":4},"end":{"line":319,"column":31}}]},"29":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":2},"end":{"line":342,"column":2}},{"start":{"line":342,"column":2},"end":{"line":342,"column":2}}]},"30":{"line":343,"type":"binary-expr","locations":[{"start":{"line":343,"column":16},"end":{"line":343,"column":28}},{"start":{"line":343,"column":32},"end":{"line":343,"column":48}}]},"31":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":4},"end":{"line":344,"column":4}},{"start":{"line":344,"column":4},"end":{"line":344,"column":4}}]},"32":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":2},"end":{"line":350,"column":2}},{"start":{"line":350,"column":2},"end":{"line":350,"column":2}}]},"33":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":2},"end":{"line":377,"column":2}},{"start":{"line":377,"column":2},"end":{"line":377,"column":2}}]},"34":{"line":377,"type":"binary-expr","locations":[{"start":{"line":377,"column":6},"end":{"line":377,"column":10}},{"start":{"line":377,"column":14},"end":{"line":377,"column":29}}]},"35":{"line":378,"type":"binary-expr","locations":[{"start":{"line":378,"column":17},"end":{"line":378,"column":39}},{"start":{"line":378,"column":43},"end":{"line":378,"column":69}}]},"36":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":4},"end":{"line":379,"column":4}},{"start":{"line":379,"column":4},"end":{"line":379,"column":4}}]},"37":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":2},"end":{"line":385,"column":2}},{"start":{"line":385,"column":2},"end":{"line":385,"column":2}}]},"38":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":4},"end":{"line":410,"column":4}},{"start":{"line":410,"column":4},"end":{"line":410,"column":4}}]},"39":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":2},"end":{"line":425,"column":2}},{"start":{"line":425,"column":2},"end":{"line":425,"column":2}}]},"40":{"line":468,"type":"binary-expr","locations":[{"start":{"line":468,"column":11},"end":{"line":468,"column":27}},{"start":{"line":468,"column":31},"end":{"line":468,"column":52}}]},"41":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":6},"end":{"line":472,"column":6}},{"start":{"line":472,"column":6},"end":{"line":472,"column":6}}]},"42":{"line":472,"type":"cond-expr","locations":[{"start":{"line":472,"column":33},"end":{"line":472,"column":37}},{"start":{"line":472,"column":40},"end":{"line":472,"column":43}}]},"43":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":2},"end":{"line":486,"column":2}},{"start":{"line":486,"column":2},"end":{"line":486,"column":2}}]},"44":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":4},"end":{"line":519,"column":4}},{"start":{"line":519,"column":4},"end":{"line":519,"column":4}}]},"45":{"line":537,"type":"if","locations":[{"start":{"line":537,"column":2},"end":{"line":537,"column":2}},{"start":{"line":537,"column":2},"end":{"line":537,"column":2}}]},"46":{"line":577,"type":"if","locations":[{"start":{"line":577,"column":2},"end":{"line":577,"column":2}},{"start":{"line":577,"column":2},"end":{"line":577,"column":2}}]},"47":{"line":585,"type":"if","locations":[{"start":{"line":585,"column":2},"end":{"line":585,"column":2}},{"start":{"line":585,"column":2},"end":{"line":585,"column":2}}]},"48":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":2},"end":{"line":601,"column":2}},{"start":{"line":601,"column":2},"end":{"line":601,"column":2}}]},"49":{"line":601,"type":"binary-expr","locations":[{"start":{"line":601,"column":6},"end":{"line":601,"column":34}},{"start":{"line":601,"column":38},"end":{"line":601,"column":59}},{"start":{"line":602,"column":4},"end":{"line":602,"column":26}}]},"50":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":9},"end":{"line":607,"column":9}},{"start":{"line":607,"column":9},"end":{"line":607,"column":9}}]},"51":{"line":607,"type":"binary-expr","locations":[{"start":{"line":607,"column":13},"end":{"line":607,"column":42}},{"start":{"line":607,"column":46},"end":{"line":607,"column":68}}]},"52":{"line":612,"type":"binary-expr","locations":[{"start":{"line":612,"column":11},"end":{"line":612,"column":17}},{"start":{"line":612,"column":21},"end":{"line":612,"column":23}}]},"53":{"line":613,"type":"binary-expr","locations":[{"start":{"line":613,"column":12},"end":{"line":613,"column":19}},{"start":{"line":613,"column":23},"end":{"line":613,"column":25}}]},"54":{"line":619,"type":"if","locations":[{"start":{"line":619,"column":2},"end":{"line":619,"column":2}},{"start":{"line":619,"column":2},"end":{"line":619,"column":2}}]},"55":{"line":634,"type":"if","locations":[{"start":{"line":634,"column":6},"end":{"line":634,"column":6}},{"start":{"line":634,"column":6},"end":{"line":634,"column":6}}]},"56":{"line":638,"type":"if","locations":[{"start":{"line":638,"column":6},"end":{"line":638,"column":6}},{"start":{"line":638,"column":6},"end":{"line":638,"column":6}}]},"57":{"line":638,"type":"binary-expr","locations":[{"start":{"line":638,"column":10},"end":{"line":638,"column":14}},{"start":{"line":638,"column":18},"end":{"line":638,"column":30}}]},"58":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":4},"end":{"line":659,"column":4}},{"start":{"line":659,"column":4},"end":{"line":659,"column":4}}]},"59":{"line":679,"type":"if","locations":[{"start":{"line":679,"column":2},"end":{"line":679,"column":2}},{"start":{"line":679,"column":2},"end":{"line":679,"column":2}}]},"60":{"line":693,"type":"if","locations":[{"start":{"line":693,"column":6},"end":{"line":693,"column":6}},{"start":{"line":693,"column":6},"end":{"line":693,"column":6}}]},"61":{"line":705,"type":"if","locations":[{"start":{"line":705,"column":2},"end":{"line":705,"column":2}},{"start":{"line":705,"column":2},"end":{"line":705,"column":2}}]},"62":{"line":724,"type":"if","locations":[{"start":{"line":724,"column":4},"end":{"line":724,"column":4}},{"start":{"line":724,"column":4},"end":{"line":724,"column":4}}]},"63":{"line":725,"type":"if","locations":[{"start":{"line":725,"column":4},"end":{"line":725,"column":4}},{"start":{"line":725,"column":4},"end":{"line":725,"column":4}}]},"64":{"line":746,"type":"if","locations":[{"start":{"line":746,"column":2},"end":{"line":746,"column":2}},{"start":{"line":746,"column":2},"end":{"line":746,"column":2}}]},"65":{"line":783,"type":"binary-expr","locations":[{"start":{"line":783,"column":68},"end":{"line":783,"column":70}},{"start":{"line":783,"column":74},"end":{"line":783,"column":78}}]},"66":{"line":804,"type":"if","locations":[{"start":{"line":804,"column":2},"end":{"line":804,"column":2}},{"start":{"line":804,"column":2},"end":{"line":804,"column":2}}]},"67":{"line":820,"type":"if","locations":[{"start":{"line":820,"column":2},"end":{"line":820,"column":2}},{"start":{"line":820,"column":2},"end":{"line":820,"column":2}}]},"68":{"line":893,"type":"binary-expr","locations":[{"start":{"line":893,"column":68},"end":{"line":893,"column":70}},{"start":{"line":893,"column":74},"end":{"line":893,"column":78}}]},"69":{"line":909,"type":"if","locations":[{"start":{"line":909,"column":4},"end":{"line":909,"column":4}},{"start":{"line":909,"column":4},"end":{"line":909,"column":4}}]},"70":{"line":911,"type":"cond-expr","locations":[{"start":{"line":912,"column":6},"end":{"line":912,"column":18}},{"start":{"line":912,"column":21},"end":{"line":912,"column":38}}]},"71":{"line":913,"type":"if","locations":[{"start":{"line":913,"column":4},"end":{"line":913,"column":4}},{"start":{"line":913,"column":4},"end":{"line":913,"column":4}}]},"72":{"line":948,"type":"if","locations":[{"start":{"line":948,"column":2},"end":{"line":948,"column":2}},{"start":{"line":948,"column":2},"end":{"line":948,"column":2}}]},"73":{"line":967,"type":"if","locations":[{"start":{"line":967,"column":6},"end":{"line":967,"column":6}},{"start":{"line":967,"column":6},"end":{"line":967,"column":6}}]},"74":{"line":973,"type":"binary-expr","locations":[{"start":{"line":973,"column":16},"end":{"line":973,"column":25}},{"start":{"line":973,"column":29},"end":{"line":973,"column":32}}]},"75":{"line":975,"type":"if","locations":[{"start":{"line":975,"column":4},"end":{"line":975,"column":4}},{"start":{"line":975,"column":4},"end":{"line":975,"column":4}}]},"76":{"line":983,"type":"if","locations":[{"start":{"line":983,"column":2},"end":{"line":983,"column":2}},{"start":{"line":983,"column":2},"end":{"line":983,"column":2}}]},"77":{"line":988,"type":"switch","locations":[{"start":{"line":989,"column":4},"end":{"line":991,"column":12}},{"start":{"line":992,"column":4},"end":{"line":994,"column":12}},{"start":{"line":995,"column":4},"end":{"line":997,"column":12}},{"start":{"line":998,"column":4},"end":{"line":1000,"column":12}},{"start":{"line":1001,"column":4},"end":{"line":1004,"column":12}},{"start":{"line":1005,"column":4},"end":{"line":1008,"column":12}},{"start":{"line":1009,"column":4},"end":{"line":1012,"column":12}},{"start":{"line":1013,"column":4},"end":{"line":1018,"column":12}},{"start":{"line":1019,"column":4},"end":{"line":1021,"column":12}},{"start":{"line":1022,"column":4},"end":{"line":1024,"column":12}},{"start":{"line":1027,"column":4},"end":{"line":1029,"column":12}}]},"78":{"line":1014,"type":"if","locations":[{"start":{"line":1014,"column":6},"end":{"line":1014,"column":6}},{"start":{"line":1014,"column":6},"end":{"line":1014,"column":6}}]},"79":{"line":1042,"type":"if","locations":[{"start":{"line":1042,"column":2},"end":{"line":1042,"column":2}},{"start":{"line":1042,"column":2},"end":{"line":1042,"column":2}}]},"80":{"line":1045,"type":"if","locations":[{"start":{"line":1045,"column":2},"end":{"line":1045,"column":2}},{"start":{"line":1045,"column":2},"end":{"line":1045,"column":2}}]},"81":{"line":1045,"type":"binary-expr","locations":[{"start":{"line":1045,"column":6},"end":{"line":1045,"column":31}},{"start":{"line":1045,"column":35},"end":{"line":1045,"column":55}}]},"82":{"line":1056,"type":"if","locations":[{"start":{"line":1056,"column":4},"end":{"line":1056,"column":4}},{"start":{"line":1056,"column":4},"end":{"line":1056,"column":4}}]},"83":{"line":1056,"type":"binary-expr","locations":[{"start":{"line":1056,"column":8},"end":{"line":1056,"column":21}},{"start":{"line":1056,"column":25},"end":{"line":1056,"column":37}}]},"84":{"line":1060,"type":"if","locations":[{"start":{"line":1060,"column":6},"end":{"line":1060,"column":6}},{"start":{"line":1060,"column":6},"end":{"line":1060,"column":6}}]},"85":{"line":1063,"type":"if","locations":[{"start":{"line":1063,"column":10},"end":{"line":1063,"column":10}},{"start":{"line":1063,"column":10},"end":{"line":1063,"column":10}}]},"86":{"line":1079,"type":"if","locations":[{"start":{"line":1079,"column":4},"end":{"line":1079,"column":4}},{"start":{"line":1079,"column":4},"end":{"line":1079,"column":4}}]},"87":{"line":1090,"type":"if","locations":[{"start":{"line":1090,"column":4},"end":{"line":1090,"column":4}},{"start":{"line":1090,"column":4},"end":{"line":1090,"column":4}}]},"88":{"line":1090,"type":"binary-expr","locations":[{"start":{"line":1090,"column":8},"end":{"line":1090,"column":27}},{"start":{"line":1090,"column":31},"end":{"line":1090,"column":55}}]},"89":{"line":1092,"type":"if","locations":[{"start":{"line":1092,"column":11},"end":{"line":1092,"column":11}},{"start":{"line":1092,"column":11},"end":{"line":1092,"column":11}}]},"90":{"line":1092,"type":"binary-expr","locations":[{"start":{"line":1092,"column":15},"end":{"line":1092,"column":25}},{"start":{"line":1092,"column":29},"end":{"line":1092,"column":62}}]},"91":{"line":1096,"type":"if","locations":[{"start":{"line":1096,"column":6},"end":{"line":1096,"column":6}},{"start":{"line":1096,"column":6},"end":{"line":1096,"column":6}}]},"92":{"line":1096,"type":"binary-expr","locations":[{"start":{"line":1096,"column":10},"end":{"line":1096,"column":28}},{"start":{"line":1096,"column":32},"end":{"line":1096,"column":50}},{"start":{"line":1096,"column":54},"end":{"line":1096,"column":76}}]},"93":{"line":1098,"type":"if","locations":[{"start":{"line":1098,"column":8},"end":{"line":1098,"column":8}},{"start":{"line":1098,"column":8},"end":{"line":1098,"column":8}}]},"94":{"line":1106,"type":"if","locations":[{"start":{"line":1106,"column":8},"end":{"line":1106,"column":8}},{"start":{"line":1106,"column":8},"end":{"line":1106,"column":8}}]},"95":{"line":1108,"type":"cond-expr","locations":[{"start":{"line":1108,"column":50},"end":{"line":1108,"column":54}},{"start":{"line":1108,"column":57},"end":{"line":1108,"column":71}}]},"96":{"line":1109,"type":"cond-expr","locations":[{"start":{"line":1109,"column":50},"end":{"line":1109,"column":54}},{"start":{"line":1109,"column":57},"end":{"line":1109,"column":71}}]},"97":{"line":1113,"type":"if","locations":[{"start":{"line":1113,"column":10},"end":{"line":1113,"column":10}},{"start":{"line":1113,"column":10},"end":{"line":1113,"column":10}}]},"98":{"line":1114,"type":"if","locations":[{"start":{"line":1114,"column":12},"end":{"line":1114,"column":12}},{"start":{"line":1114,"column":12},"end":{"line":1114,"column":12}}]},"99":{"line":1122,"type":"if","locations":[{"start":{"line":1122,"column":13},"end":{"line":1122,"column":13}},{"start":{"line":1122,"column":13},"end":{"line":1122,"column":13}}]},"100":{"line":1122,"type":"binary-expr","locations":[{"start":{"line":1122,"column":17},"end":{"line":1122,"column":38}},{"start":{"line":1122,"column":42},"end":{"line":1122,"column":70}}]},"101":{"line":1134,"type":"if","locations":[{"start":{"line":1134,"column":6},"end":{"line":1134,"column":6}},{"start":{"line":1134,"column":6},"end":{"line":1134,"column":6}}]},"102":{"line":1137,"type":"if","locations":[{"start":{"line":1137,"column":8},"end":{"line":1137,"column":8}},{"start":{"line":1137,"column":8},"end":{"line":1137,"column":8}}]},"103":{"line":1169,"type":"if","locations":[{"start":{"line":1169,"column":2},"end":{"line":1169,"column":2}},{"start":{"line":1169,"column":2},"end":{"line":1169,"column":2}}]},"104":{"line":1173,"type":"if","locations":[{"start":{"line":1173,"column":2},"end":{"line":1173,"column":2}},{"start":{"line":1173,"column":2},"end":{"line":1173,"column":2}}]},"105":{"line":1179,"type":"if","locations":[{"start":{"line":1179,"column":4},"end":{"line":1179,"column":4}},{"start":{"line":1179,"column":4},"end":{"line":1179,"column":4}}]},"106":{"line":1230,"type":"if","locations":[{"start":{"line":1230,"column":4},"end":{"line":1230,"column":4}},{"start":{"line":1230,"column":4},"end":{"line":1230,"column":4}}]},"107":{"line":1236,"type":"if","locations":[{"start":{"line":1236,"column":4},"end":{"line":1236,"column":4}},{"start":{"line":1236,"column":4},"end":{"line":1236,"column":4}}]},"108":{"line":1236,"type":"binary-expr","locations":[{"start":{"line":1236,"column":8},"end":{"line":1236,"column":18}},{"start":{"line":1236,"column":22},"end":{"line":1236,"column":26}}]},"109":{"line":1241,"type":"if","locations":[{"start":{"line":1241,"column":4},"end":{"line":1241,"column":4}},{"start":{"line":1241,"column":4},"end":{"line":1241,"column":4}}]},"110":{"line":1243,"type":"if","locations":[{"start":{"line":1243,"column":6},"end":{"line":1243,"column":6}},{"start":{"line":1243,"column":6},"end":{"line":1243,"column":6}}]},"111":{"line":1262,"type":"if","locations":[{"start":{"line":1262,"column":2},"end":{"line":1262,"column":2}},{"start":{"line":1262,"column":2},"end":{"line":1262,"column":2}}]},"112":{"line":1277,"type":"if","locations":[{"start":{"line":1277,"column":2},"end":{"line":1277,"column":2}},{"start":{"line":1277,"column":2},"end":{"line":1277,"column":2}}]},"113":{"line":1307,"type":"binary-expr","locations":[{"start":{"line":1307,"column":21},"end":{"line":1307,"column":27}},{"start":{"line":1307,"column":31},"end":{"line":1307,"column":44}}]},"114":{"line":1309,"type":"if","locations":[{"start":{"line":1309,"column":2},"end":{"line":1309,"column":2}},{"start":{"line":1309,"column":2},"end":{"line":1309,"column":2}}]},"115":{"line":1314,"type":"if","locations":[{"start":{"line":1314,"column":2},"end":{"line":1314,"column":2}},{"start":{"line":1314,"column":2},"end":{"line":1314,"column":2}}]},"116":{"line":1314,"type":"binary-expr","locations":[{"start":{"line":1314,"column":6},"end":{"line":1314,"column":33}},{"start":{"line":1314,"column":37},"end":{"line":1314,"column":60}}]},"117":{"line":1319,"type":"if","locations":[{"start":{"line":1319,"column":9},"end":{"line":1319,"column":9}},{"start":{"line":1319,"column":9},"end":{"line":1319,"column":9}}]},"118":{"line":1319,"type":"binary-expr","locations":[{"start":{"line":1319,"column":13},"end":{"line":1319,"column":45}},{"start":{"line":1320,"column":4},"end":{"line":1320,"column":40}}]},"119":{"line":1325,"type":"if","locations":[{"start":{"line":1325,"column":6},"end":{"line":1325,"column":6}},{"start":{"line":1325,"column":6},"end":{"line":1325,"column":6}}]},"120":{"line":1327,"type":"if","locations":[{"start":{"line":1327,"column":13},"end":{"line":1327,"column":13}},{"start":{"line":1327,"column":13},"end":{"line":1327,"column":13}}]},"121":{"line":1327,"type":"binary-expr","locations":[{"start":{"line":1327,"column":18},"end":{"line":1327,"column":35}},{"start":{"line":1327,"column":40},"end":{"line":1327,"column":56}}]},"122":{"line":1331,"type":"if","locations":[{"start":{"line":1331,"column":4},"end":{"line":1331,"column":4}},{"start":{"line":1331,"column":4},"end":{"line":1331,"column":4}}]},"123":{"line":1333,"type":"if","locations":[{"start":{"line":1333,"column":11},"end":{"line":1333,"column":11}},{"start":{"line":1333,"column":11},"end":{"line":1333,"column":11}}]},"124":{"line":1354,"type":"if","locations":[{"start":{"line":1354,"column":2},"end":{"line":1354,"column":2}},{"start":{"line":1354,"column":2},"end":{"line":1354,"column":2}}]},"125":{"line":1356,"type":"if","locations":[{"start":{"line":1356,"column":4},"end":{"line":1356,"column":4}},{"start":{"line":1356,"column":4},"end":{"line":1356,"column":4}}]},"126":{"line":1356,"type":"binary-expr","locations":[{"start":{"line":1356,"column":8},"end":{"line":1356,"column":15}},{"start":{"line":1356,"column":19},"end":{"line":1356,"column":33}}]},"127":{"line":1366,"type":"if","locations":[{"start":{"line":1366,"column":2},"end":{"line":1366,"column":2}},{"start":{"line":1366,"column":2},"end":{"line":1366,"column":2}}]},"128":{"line":1367,"type":"if","locations":[{"start":{"line":1367,"column":4},"end":{"line":1367,"column":4}},{"start":{"line":1367,"column":4},"end":{"line":1367,"column":4}}]},"129":{"line":1372,"type":"if","locations":[{"start":{"line":1372,"column":4},"end":{"line":1372,"column":4}},{"start":{"line":1372,"column":4},"end":{"line":1372,"column":4}}]},"130":{"line":1376,"type":"if","locations":[{"start":{"line":1376,"column":4},"end":{"line":1376,"column":4}},{"start":{"line":1376,"column":4},"end":{"line":1376,"column":4}}]},"131":{"line":1376,"type":"binary-expr","locations":[{"start":{"line":1376,"column":8},"end":{"line":1376,"column":20}},{"start":{"line":1376,"column":24},"end":{"line":1376,"column":35}},{"start":{"line":1376,"column":39},"end":{"line":1376,"column":52}}]},"132":{"line":1392,"type":"if","locations":[{"start":{"line":1392,"column":2},"end":{"line":1392,"column":2}},{"start":{"line":1392,"column":2},"end":{"line":1392,"column":2}}]},"133":{"line":1401,"type":"if","locations":[{"start":{"line":1401,"column":4},"end":{"line":1401,"column":4}},{"start":{"line":1401,"column":4},"end":{"line":1401,"column":4}}]},"134":{"line":1424,"type":"binary-expr","locations":[{"start":{"line":1424,"column":11},"end":{"line":1424,"column":17}},{"start":{"line":1424,"column":21},"end":{"line":1424,"column":23}}]},"135":{"line":1427,"type":"if","locations":[{"start":{"line":1427,"column":4},"end":{"line":1427,"column":4}},{"start":{"line":1427,"column":4},"end":{"line":1427,"column":4}}]},"136":{"line":1434,"type":"if","locations":[{"start":{"line":1434,"column":4},"end":{"line":1434,"column":4}},{"start":{"line":1434,"column":4},"end":{"line":1434,"column":4}}]},"137":{"line":1434,"type":"binary-expr","locations":[{"start":{"line":1434,"column":8},"end":{"line":1434,"column":14}},{"start":{"line":1434,"column":18},"end":{"line":1434,"column":32}}]},"138":{"line":1465,"type":"if","locations":[{"start":{"line":1465,"column":2},"end":{"line":1465,"column":2}},{"start":{"line":1465,"column":2},"end":{"line":1465,"column":2}}]},"139":{"line":1468,"type":"if","locations":[{"start":{"line":1468,"column":6},"end":{"line":1468,"column":6}},{"start":{"line":1468,"column":6},"end":{"line":1468,"column":6}}]},"140":{"line":1480,"type":"binary-expr","locations":[{"start":{"line":1480,"column":13},"end":{"line":1480,"column":20}},{"start":{"line":1480,"column":24},"end":{"line":1480,"column":34}},{"start":{"line":1480,"column":39},"end":{"line":1480,"column":43}}]},"141":{"line":1495,"type":"if","locations":[{"start":{"line":1495,"column":2},"end":{"line":1495,"column":2}},{"start":{"line":1495,"column":2},"end":{"line":1495,"column":2}}]},"142":{"line":1509,"type":"if","locations":[{"start":{"line":1509,"column":6},"end":{"line":1509,"column":6}},{"start":{"line":1509,"column":6},"end":{"line":1509,"column":6}}]},"143":{"line":1512,"type":"binary-expr","locations":[{"start":{"line":1512,"column":15},"end":{"line":1512,"column":18}},{"start":{"line":1512,"column":22},"end":{"line":1512,"column":28}},{"start":{"line":1512,"column":32},"end":{"line":1512,"column":42}},{"start":{"line":1512,"column":47},"end":{"line":1512,"column":48}}]},"144":{"line":1548,"type":"if","locations":[{"start":{"line":1548,"column":2},"end":{"line":1548,"column":2}},{"start":{"line":1548,"column":2},"end":{"line":1548,"column":2}}]},"145":{"line":1548,"type":"binary-expr","locations":[{"start":{"line":1548,"column":7},"end":{"line":1548,"column":10}},{"start":{"line":1548,"column":16},"end":{"line":1548,"column":44}}]},"146":{"line":1553,"type":"if","locations":[{"start":{"line":1553,"column":2},"end":{"line":1553,"column":2}},{"start":{"line":1553,"column":2},"end":{"line":1553,"column":2}}]},"147":{"line":1557,"type":"binary-expr","locations":[{"start":{"line":1557,"column":11},"end":{"line":1557,"column":17}},{"start":{"line":1557,"column":21},"end":{"line":1557,"column":46}}]},"148":{"line":1558,"type":"if","locations":[{"start":{"line":1558,"column":2},"end":{"line":1558,"column":2}},{"start":{"line":1558,"column":2},"end":{"line":1558,"column":2}}]},"149":{"line":1565,"type":"if","locations":[{"start":{"line":1565,"column":2},"end":{"line":1565,"column":2}},{"start":{"line":1565,"column":2},"end":{"line":1565,"column":2}}]},"150":{"line":1574,"type":"if","locations":[{"start":{"line":1574,"column":6},"end":{"line":1574,"column":6}},{"start":{"line":1574,"column":6},"end":{"line":1574,"column":6}}]},"151":{"line":1580,"type":"if","locations":[{"start":{"line":1580,"column":8},"end":{"line":1580,"column":8}},{"start":{"line":1580,"column":8},"end":{"line":1580,"column":8}}]},"152":{"line":1597,"type":"if","locations":[{"start":{"line":1597,"column":2},"end":{"line":1597,"column":2}},{"start":{"line":1597,"column":2},"end":{"line":1597,"column":2}}]},"153":{"line":1597,"type":"binary-expr","locations":[{"start":{"line":1597,"column":6},"end":{"line":1597,"column":9}},{"start":{"line":1597,"column":13},"end":{"line":1597,"column":45}}]},"154":{"line":1600,"type":"if","locations":[{"start":{"line":1600,"column":2},"end":{"line":1600,"column":2}},{"start":{"line":1600,"column":2},"end":{"line":1600,"column":2}}]},"155":{"line":1759,"type":"if","locations":[{"start":{"line":1759,"column":2},"end":{"line":1759,"column":2}},{"start":{"line":1759,"column":2},"end":{"line":1759,"column":2}}]},"156":{"line":1759,"type":"binary-expr","locations":[{"start":{"line":1759,"column":6},"end":{"line":1759,"column":9}},{"start":{"line":1759,"column":13},"end":{"line":1759,"column":42}}]},"157":{"line":1763,"type":"binary-expr","locations":[{"start":{"line":1763,"column":12},"end":{"line":1763,"column":19}},{"start":{"line":1763,"column":23},"end":{"line":1763,"column":25}}]},"158":{"line":1797,"type":"if","locations":[{"start":{"line":1797,"column":2},"end":{"line":1797,"column":2}},{"start":{"line":1797,"column":2},"end":{"line":1797,"column":2}}]},"159":{"line":1797,"type":"binary-expr","locations":[{"start":{"line":1797,"column":6},"end":{"line":1797,"column":9}},{"start":{"line":1797,"column":13},"end":{"line":1797,"column":42}}]},"160":{"line":1801,"type":"binary-expr","locations":[{"start":{"line":1801,"column":12},"end":{"line":1801,"column":19}},{"start":{"line":1801,"column":23},"end":{"line":1801,"column":25}}]},"161":{"line":1808,"type":"if","locations":[{"start":{"line":1808,"column":2},"end":{"line":1808,"column":2}},{"start":{"line":1808,"column":2},"end":{"line":1808,"column":2}}]},"162":{"line":1814,"type":"if","locations":[{"start":{"line":1814,"column":4},"end":{"line":1814,"column":4}},{"start":{"line":1814,"column":4},"end":{"line":1814,"column":4}}]},"163":{"line":1819,"type":"if","locations":[{"start":{"line":1819,"column":6},"end":{"line":1819,"column":6}},{"start":{"line":1819,"column":6},"end":{"line":1819,"column":6}}]},"164":{"line":1871,"type":"if","locations":[{"start":{"line":1871,"column":2},"end":{"line":1871,"column":2}},{"start":{"line":1871,"column":2},"end":{"line":1871,"column":2}}]},"165":{"line":1880,"type":"if","locations":[{"start":{"line":1880,"column":4},"end":{"line":1880,"column":4}},{"start":{"line":1880,"column":4},"end":{"line":1880,"column":4}}]},"166":{"line":1918,"type":"if","locations":[{"start":{"line":1918,"column":2},"end":{"line":1918,"column":2}},{"start":{"line":1918,"column":2},"end":{"line":1918,"column":2}}]},"167":{"line":1918,"type":"binary-expr","locations":[{"start":{"line":1918,"column":6},"end":{"line":1918,"column":50}},{"start":{"line":1918,"column":54},"end":{"line":1918,"column":61}}]},"168":{"line":1952,"type":"if","locations":[{"start":{"line":1952,"column":2},"end":{"line":1952,"column":2}},{"start":{"line":1952,"column":2},"end":{"line":1952,"column":2}}]},"169":{"line":1952,"type":"binary-expr","locations":[{"start":{"line":1952,"column":6},"end":{"line":1952,"column":50}},{"start":{"line":1952,"column":54},"end":{"line":1952,"column":61}}]},"170":{"line":1989,"type":"if","locations":[{"start":{"line":1989,"column":2},"end":{"line":1989,"column":2}},{"start":{"line":1989,"column":2},"end":{"line":1989,"column":2}}]},"171":{"line":1989,"type":"binary-expr","locations":[{"start":{"line":1989,"column":6},"end":{"line":1989,"column":50}},{"start":{"line":1989,"column":54},"end":{"line":1989,"column":61}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback-connector","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var SG = require('strong-globalize');","var g = SG();","","var util = require('util');","var async = require('async');","var assert = require('assert');","var Connector = require('./connector');","var debug = require('debug')('loopback:connector:sql');","var ParameterizedSQL = require('./parameterized-sql');","var Transaction = require('./transaction');","","module.exports = SQLConnector;","","function NOOP() {}","","/**"," * Base class for connectors that connect to relational databases using SQL"," * @class"," */","function SQLConnector() {","  // Call the super constructor","  Connector.apply(this, [].slice.call(arguments));","}","","// Inherit from the base Connector","util.inherits(SQLConnector, Connector);","","// Export ParameterizedSQL","SQLConnector.ParameterizedSQL = ParameterizedSQL;","","// The generic placeholder","var PLACEHOLDER = SQLConnector.PLACEHOLDER = ParameterizedSQL.PLACEHOLDER;","","SQLConnector.Transaction = Transaction;","","/**"," * Set the relational property to indicate the backend is a relational DB"," * @type {boolean}"," */","SQLConnector.prototype.relational = true;","","/**"," * Invoke a prototype method on the super class"," * @param {String} methodName Method name"," */","SQLConnector.prototype.invokeSuper = function(methodName) {","  var args = [].slice.call(arguments, 1);","  var superMethod = this.constructor.super_.prototype[methodName];","  return superMethod.apply(this, args);","};","","/**"," * Perform autoupdate for the given models"," * @param {String[]} [models] A model name or an array of model names."," * If not present, apply to all models"," * @param {Function} [cb] The callback function"," */","SQLConnector.prototype.autoupdate = function(models, cb) {","  var self = this;","  if ((!cb) && ('function' === typeof models)) {","    cb = models;","    models = undefined;","  }","  // First argument is a model name","  if ('string' === typeof models) {","    models = [models];","  }","","  models = models || Object.keys(this._models);","","  async.each(models, function(model, done) {","    if (!(model in self._models)) {","      return process.nextTick(function() {","        done(new Error(g.f('Model not found: %s', model)));","      });","    }","    self.getTableStatus(model, function(err, fields, indexes, FKs) {","      if (!err && fields.length) {","        self.alterTable(model, fields, indexes, done);","      } else {","        self.createTable(model, done);","      }","    });","  }, cb);","};","","/**"," * Check if the models exist"," * @param {String[]} [models] A model name or an array of model names."," * If not present, apply to all models"," * @param {Function} [cb] The callback function"," */","SQLConnector.prototype.isActual = function(models, cb) {","  var self = this;","","  if ((!cb) && ('function' === typeof models)) {","    cb = models;","    models = undefined;","  }","  // First argument is a model name","  if ('string' === typeof models) {","    models = [models];","  }","","  models = models || Object.keys(this._models);","","  var changes = [];","  async.each(models, function(model, done) {","    self.getTableStatus(model, function(err, fields) {","      changes = changes.concat(self.getAddModifyColumns(model, fields));","      changes = changes.concat(self.getDropColumns(model, fields));","      done(err);","    });","  }, function done(err) {","    if (err) {","      return cb && cb(err);","    }","    var actual = (changes.length === 0);","    if (cb) cb(null, actual);","  });","};","","SQLConnector.prototype.getAddModifyColumns = function(model, fields) {","  var sql = [];","  var self = this;","  sql = sql.concat(self.getColumnsToAdd(model, fields));","  return sql;","};","","SQLConnector.prototype.getColumnsToAdd = function(model, fields) {","  throw new Error(g.f('{{getColumnsToAdd()}} must be implemented by the connector'));","};","","SQLConnector.prototype.getDropColumns = function(model, fields) {","  var sql = [];","  var self = this;","  sql = sql.concat(self.getColumnsToDrop(model, fields));","  return sql;","};","","SQLConnector.prototype.getColumnsToDrop = function(model, fields) {","  throw new Error(g.f('{{getColumnsToDrop()}} must be implemented by the connector'));","};","","SQLConnector.prototype.searchForPropertyInActual = function(model, propName,","  actualFields) {","  var self = this;","  var found = false;","  actualFields.forEach(function(f) {","    if (f.column === self.column(model, propName)) {","      found = f;","      return;","    }","  });","  return found;","};","","SQLConnector.prototype.addPropertyToActual = function(model, propName) {","  var self = this;","  var sqlCommand = self.columnEscaped(model, propName) +","    ' ' + self.columnDataType(model, propName) +","    (self.isNullable(self.getPropertyDefinition(model, propName)) ?","    '' : ' NOT NULL');","  return sqlCommand;","};","","SQLConnector.prototype.columnDataType = function(model, property) {","  var columnMetadata = this.columnMetadata(model, property);","  var colType = columnMetadata && columnMetadata.dataType;","  if (colType) {","    colType = colType.toUpperCase();","  }","  var prop = this.getModelDefinition(model).properties[property];","  if (!prop) {","    return null;","  }","  var colLength = columnMetadata && columnMetadata.dataLength ||","    prop.length || prop.limit;","  if (colType && colLength) {","    return colType + '(' + colLength + ')';","  }","  return this.buildColumnType(prop);","};","","SQLConnector.prototype.buildColumnType = function(property) {","  throw new Error(g.f('{{buildColumnType()}} must be implemented by the connector'));","};","","SQLConnector.prototype.propertyHasNotBeenDeleted = function(model, propName) {","  return !!this.getModelDefinition(model).properties[propName];","};","","SQLConnector.prototype.applySqlChanges = function(model, pendingChanges, cb) {","  var self = this;","  if (pendingChanges.length) {","    var thisQuery = 'ALTER TABLE ' + self.tableEscaped(model);","    var ranOnce = false;","    pendingChanges.forEach(function(change) {","      if (ranOnce) {","        thisQuery = thisQuery + ' ';","      }","      thisQuery = thisQuery + ' ' + change;","      ranOnce = true;","    });","    self.execute(thisQuery, cb);","  }","};","","/**"," * Alters a table"," * @param {String} model The model name"," * @param {Object} fields Fields of the table"," * @param {Object} indexes Indexes of the table"," * @param {Function} cb The callback function"," */","SQLConnector.prototype.alterTable = function(model, fields, indexes, cb) {","  throw new Error(g.f('{{alterTable()}} must be implemented by the connector'));","};","","SQLConnector.prototype.checkFieldAndIndex = function(fields, indexes) {","  return true;","};","","/**"," * Get the status of a table"," * @param {String} model The model name"," * @param {Function} cb The callback function"," */","SQLConnector.prototype.getTableStatus = function(model, cb) {","  var fields, indexes;","  var self = this;","","  this.showFields(model, function(err, data) {","    if (err) return cb(err);","    fields = data;","","    self.showIndexes(model, function(err, data) {","      if (err) return cb(err);","      indexes = data;","","      if (self.checkFieldAndIndex(fields, indexes))","        return cb(null, fields, indexes);","    });","  });","};","","/**"," * Get fields from a table"," * @param {String} model The model name"," * @param {Function} cb The callback function"," */","SQLConnector.prototype.showFields = function(model, cb) {","  throw new Error(g.f('{{showFields()}} must be implemented by the connector'));","};","","/**"," * Get indexes from a table"," * @param {String} model The model name"," * @param {Function} cb The callback function"," */","SQLConnector.prototype.showIndexes = function(model, cb) {","  throw new Error(g.f('{{showIndexes()}} must be implemented by the connector'));","};","","/**"," * Get types associated with the connector"," * Returns {String[]} The types for the connector"," */","SQLConnector.prototype.getTypes = function() {","  return ['db', 'rdbms', 'sql'];","};","","/**"," * Get the default data type for ID"," * @param prop Property definition"," * Returns {Function}"," */","SQLConnector.prototype.getDefaultIdType = function(prop) {","  return Number;","};","","/**"," * Get the default database schema name"," * @returns {string} The default schema name, such as 'public' or 'dbo'"," */","SQLConnector.prototype.getDefaultSchemaName = function() {","  return '';","};","","/**"," * Get the database schema name for the given model. The schema name can be"," * customized at model settings or connector configuration level as `schema` or"," * `schemaName`. For example,"," *"," * ```json"," * \"Customer\": {"," *   \"name\": \"Customer\","," *   \"mysql\": {"," *     \"schema\": \"MYDB\","," *     \"table\": \"CUSTOMER\""," *   }"," * }"," * ```"," *"," * @param {String} model The model name"," * @returns {String} The database schema name"," */","SQLConnector.prototype.schema = function(model) {","  // Check if there is a 'schema' property for connector","  var dbMeta = this.getConnectorSpecificSettings(model);","  var schemaName = (dbMeta && (dbMeta.schema || dbMeta.schemaName)) ||","    (this.settings.schema || this.settings.schemaName) ||","    this.getDefaultSchemaName();","  return schemaName;","};","","/**"," * Get the table name for the given model. The table name can be customized"," * at model settings as `table` or `tableName`. For example,"," *"," * ```json"," * \"Customer\": {"," *   \"name\": \"Customer\","," *   \"mysql\": {"," *     \"table\": \"CUSTOMER\""," *   }"," * }"," * ```"," *"," * Returns the table name (String)."," * @param {String} model The model name"," */","SQLConnector.prototype.table = function(model) {","  var dbMeta = this.getConnectorSpecificSettings(model);","  var tableName;","  if (dbMeta) {","    tableName = dbMeta.table || dbMeta.tableName;","    if (tableName) {","      // Explicit table name, return as-is","      return tableName;","    }","  }","  tableName = model;","  if (typeof this.dbName === 'function') {","    tableName = this.dbName(tableName);","  }","  return tableName;","};","","/**"," * Get the column name for the given model property. The column name can be"," * customized at the model property definition level as `column` or"," * `columnName`. For example,"," *"," * ```json"," * \"name\": {"," *   \"type\": \"string\","," *   \"mysql\": {"," *     \"column\": \"NAME\""," *   }"," * }"," * ```"," *"," * @param {String} model The model name"," * @param {String} property The property name"," * @returns {String} The column name"," */","SQLConnector.prototype.column = function(model, property) {","  var prop = this.getPropertyDefinition(model, property);","  var columnName;","  if (prop && prop[this.name]) {","    columnName = prop[this.name].column || prop[this.name].columnName;","    if (columnName) {","      // Explicit column name, return as-is","      return columnName;","    }","  }","  columnName = property;","  if (typeof this.dbName === 'function') {","    columnName = this.dbName(columnName);","  }","  return columnName;","};","","/**"," * Get the column metadata for the given model property"," * @param {String} model The model name"," * @param {String} property The property name"," * @returns {Object} The column metadata"," */","SQLConnector.prototype.columnMetadata = function(model, property) {","  return this.getDataSource(model).columnMetadata(model, property);","};","","/**"," * Get the corresponding property name for the given column name"," * @param {String} model The model name"," * @param {String} column The column name"," * @returns {String} The property name for a given column"," */","SQLConnector.prototype.propertyName = function(model, column) {","  var props = this.getModelDefinition(model).properties;","  for (var p in props) {","    if (this.column(model, p) === column) {","      return p;","    }","  }","  return null;","};","","/**"," * Get the id column name"," * @param {String} model The model name"," * @returns {String} The id column name"," */","SQLConnector.prototype.idColumn = function(model) {","  var name = this.getDataSource(model).idColumnName(model);","  var dbName = this.dbName;","  if (typeof dbName === 'function') {","    name = dbName(name);","  }","  return name;","};","","/**"," * Get the escaped id column name"," * @param {String} model The model name"," * @returns {String} the escaped id column name"," */","SQLConnector.prototype.idColumnEscaped = function(model) {","  return this.escapeName(this.idColumn(model));","};","","/**"," * Get the escaped table name"," * @param {String} model The model name"," * @returns {String} the escaped table name"," */","SQLConnector.prototype.tableEscaped = function(model) {","  return this.escapeName(this.table(model));","};","","/**"," * Get the escaped column name for a given model property"," * @param {String} model The model name"," * @param {String} property The property name"," * @returns {String} The escaped column name"," */","SQLConnector.prototype.columnEscaped = function(model, property) {","  return this.escapeName(this.column(model, property));","};","","/*!"," * Check if id value is set"," * @param idValue"," * @param cb"," * @param returningNull"," * @returns {boolean}"," */","function isIdValuePresent(idValue, cb, returningNull) {","  try {","    assert(idValue !== null && idValue !== undefined, 'id value is required');","    return true;","  } catch (err) {","    process.nextTick(function() {","      if (cb) cb(returningNull ? null : err);","    });","    return false;","  }","}","","/**"," * Convert the id value to the form required by database column"," * @param {String} model The model name"," * @param {*} idValue The id property value"," * @returns {*} The escaped id column value"," */","SQLConnector.prototype.idColumnValue = function(model, idValue) {","  var idProp = this.getDataSource(model).idProperty(model);","  if (typeof this.toColumnValue === 'function') {","    return this.toColumnValue(idProp, idValue);","  } else {","    return idValue;","  }","};","","/**"," * Replace `?` with connector specific placeholders. For example,"," *"," * ```"," * {sql: 'SELECT * FROM CUSTOMER WHERE NAME=?', params: ['John']}"," * ==>"," * {sql: 'SELECT * FROM CUSTOMER WHERE NAME=:1', params: ['John']}"," * ```"," * *LIMITATION*: We don't handle the ? inside escaped values, for example,"," * `SELECT * FROM CUSTOMER WHERE NAME='J?hn'` will not be parameterized"," * correctly."," *"," * @param {ParameterizedSQL|Object} ps Parameterized SQL"," * @returns {ParameterizedSQL} Parameterized SQL with the connector specific"," * placeholders"," */","SQLConnector.prototype.parameterize = function(ps) {","  ps = new ParameterizedSQL(ps);","","  // The value is parameterized, for example","  // {sql: 'to_point(?,?)', values: [1, 2]}","  var parts = ps.sql.split(PLACEHOLDER);","  var clause = [];","  for (var j = 0, m = parts.length; j < m; j++) {","    // Replace ? with the keyed placeholder, such as :5","    clause.push(parts[j]);","    if (j !== parts.length - 1) {","      clause.push(this.getPlaceholderForValue(j + 1));","    }","  }","  ps.sql = clause.join('');","  return ps;","};","","/**"," * Build the the `INSERT INTO` statement"," * @param {String} model The model name"," * @param {Object} fields Fields to be inserted"," * @param {Object} options Options object"," * @returns {ParameterizedSQL}"," */","SQLConnector.prototype.buildInsertInto = function(model, fields, options) {","  var stmt = new ParameterizedSQL('INSERT INTO ' + this.tableEscaped(model));","  var columnNames = fields.names.join(',');","  if (columnNames) {","    stmt.merge('(' + columnNames + ')', '');","  }","  return stmt;","};","","/**"," * Build the clause to return id values after insert"," * @param {String} model The model name"," * @param {Object} data The model data object"," * @param {Object} options Options object"," * @returns {string}"," */","SQLConnector.prototype.buildInsertReturning = function(model, data, options) {","  return '';","};","","/**"," * Build the clause for default values if the fields is empty"," * @param {String} model The model name"," * @param {Object} data The model data object"," * @param {Object} options Options object"," * @returns {string} 'DEFAULT VALUES'"," */","SQLConnector.prototype.buildInsertDefaultValues = function(model, data, options) {","  return 'VALUES()';","};","","/**"," * Build INSERT SQL statement"," * @param {String} model The model name"," * @param {Object} data The model data object"," * @param {Object} options The options object"," * @returns {string} The INSERT SQL statement"," */","SQLConnector.prototype.buildInsert = function(model, data, options) {","  var fields = this.buildFields(model, data);","  var insertStmt = this.buildInsertInto(model, fields, options);","  var columnValues = fields.columnValues;","  var fieldNames = fields.names;","  if (fieldNames.length) {","    var values = ParameterizedSQL.join(columnValues, ',');","    values.sql = 'VALUES(' + values.sql + ')';","    insertStmt.merge(values);","  } else {","    insertStmt.merge(this.buildInsertDefaultValues(model, data, options));","  }","  var returning = this.buildInsertReturning(model, data, options);","  if (returning) {","    insertStmt.merge(returning);","  }","  return this.parameterize(insertStmt);","};","","/**"," * Execute a SQL statement with given parameters."," *"," * @param {String} sql The SQL statement"," * @param {*[]} [params] An array of parameter values"," * @param {Object} [options] Options object"," * @param {Function} [callback] The callback function"," */","SQLConnector.prototype.execute = function(sql, params, options, callback) {","  assert(typeof sql === 'string', 'sql must be a string');","  if (typeof params === 'function' && options === undefined &&","    callback === undefined) {","    // execute(sql, callback)","    options = {};","    callback = params;","    params = [];","  } else if (typeof options === 'function' && callback === undefined) {","    // execute(sql, params, callback)","    callback = options;","    options = {};","  }","  params = params || [];","  options = options || {};","  assert(Array.isArray(params), 'params must be an array');","  assert(typeof options === 'object', 'options must be an object');","  assert(typeof callback === 'function', 'callback must be a function');","","  var self = this;","  if (!this.dataSource.connected) {","    return this.dataSource.once('connected', function() {","      self.execute(sql, params, options, callback);","    });","  }","  var context = {","    req: {","      sql: sql,","      params: params,","    },","    options: options,","  };","  this.notifyObserversAround('execute', context, function(context, done) {","    self.executeSQL(context.req.sql, context.req.params, context.options,","    function(err, info) {","      if (err) {","        debug('Error: %j %j %j', err, context.req.sql, context.req.params);","      }","","      if (!err && info != null) {","        context.res = info;","      }","      // Don't pass more than one args as it will confuse async.waterfall","      done(err, info);","    });","  }, callback);","};","","/**"," * Create the data model in MySQL"," *"," * @param {String} model The model name"," * @param {Object} data The model instance data"," * @param {Object} options Options object"," * @param {Function} [callback] The callback function"," */","SQLConnector.prototype.create = function(model, data, options, callback) {","  var self = this;","  var stmt = this.buildInsert(model, data, options);","  this.execute(stmt.sql, stmt.params, options, function(err, info) {","    if (err) {","      callback(err);","    } else {","      var insertedId = self.getInsertedId(model, info);","      callback(err, insertedId);","    }","  });","};","","/**"," * Save the model instance into the database"," * @param {String} model The model name"," * @param {Object} data The model instance data"," * @param {Object} options Options object"," * @param {Function} cb The callback function"," */","SQLConnector.prototype.save = function(model, data, options, cb) {","  var idName = this.idName(model);","  var idValue = data[idName];","","  if (!isIdValuePresent(idValue, cb)) {","    return;","  }","","  var where = {};","  where[idName] = idValue;","","  var updateStmt = new ParameterizedSQL('UPDATE ' + this.tableEscaped(model));","  updateStmt.merge(this.buildFieldsForUpdate(model, data));","  var whereStmt = this.buildWhere(model, where);","  updateStmt.merge(whereStmt);","  updateStmt = this.parameterize(updateStmt);","  this.execute(updateStmt.sql, updateStmt.params, options,","    function(err, result) {","      if (cb) cb(err, result);","    });","};","","/**"," * Check if a model instance exists for the given id value"," * @param {String} model The model name"," * @param {*} id The id value"," * @param {Object} options Options object"," * @param {Function} cb The callback function"," */","SQLConnector.prototype.exists = function(model, id, options, cb) {","  if (!isIdValuePresent(id, cb, true)) {","    return;","  }","  var idName = this.idName(model);","  var where = {};","  where[idName] = id;","  var selectStmt = new ParameterizedSQL(","    'SELECT 1 FROM ' + this.tableEscaped(model) +","    ' WHERE ' + this.idColumnEscaped(model)","  );","  selectStmt.merge(this.buildWhere(model, where));","  selectStmt = this.applyPagination(model, selectStmt, {","    limit: 1,","    offset: 0,","    order: [idName],","  });","  selectStmt = this.parameterize(selectStmt);","","  this.execute(selectStmt.sql, selectStmt.params, options, function(err, data) {","    if (!cb) return;","    if (err) {","      cb(err);","    } else {","      cb(null, data.length >= 1);","    }","  });","};","","/**"," * ATM, this method is not used by loopback-datasource-juggler dao, which"," * maps `destroy` to `destroyAll` with a `where` filter that includes the `id`"," * instead."," *"," * Delete a model instance by id value"," * @param {String} model The model name"," * @param {*} id The id value"," * @param {Object} options Options object"," * @param {Function} cb The callback function"," * @private"," */","SQLConnector.prototype.destroy = function(model, id, options, cb) {","  if (!isIdValuePresent(id, cb, true)) {","    return;","  }","  var idName = this.idName(model);","  var where = {};","  where[idName] = id;","  this.destroyAll(model, where, options, cb);","};","","// Alias to `destroy`. Juggler checks `destroy` only.","Connector.defineAliases(SQLConnector.prototype, 'destroy',","  ['delete', 'deleteById', 'destroyById']);","","/**"," * Build the `DELETE FROM` SQL statement"," * @param {String} model The model name"," * @param {Object} where The where object"," * @param {Object} options Options object"," * @returns {ParameterizedSQL} The SQL DELETE FROM statement"," */","SQLConnector.prototype.buildDelete = function(model, where, options) {","  var deleteStmt = new ParameterizedSQL('DELETE FROM ' +","    this.tableEscaped(model));","  deleteStmt.merge(this.buildWhere(model, where));","  return this.parameterize(deleteStmt);","};","","/**"," * Delete all matching model instances"," *"," * @param {String} model The model name"," * @param {Object} where The where object"," * @param {Object} options The options object"," * @param {Function} cb The callback function"," */","SQLConnector.prototype.destroyAll = function(model, where, options, cb) {","  var stmt = this.buildDelete(model, where, options);","  this._executeAlteringQuery(model, stmt.sql, stmt.params, options, cb || NOOP);","};","","// Alias to `destroyAll`. Juggler checks `destroyAll` only.","Connector.defineAliases(SQLConnector.prototype, 'destroyAll', ['deleteAll']);","","/**"," * ATM, this method is not used by loopback-datasource-juggler dao, which"," * maps `updateAttributes` to `update` with a `where` filter that includes the"," * `id` instead."," *"," * Update attributes for a given model instance"," * @param {String} model The model name"," * @param {*} id The id value"," * @param {Object} data The model data instance containing all properties to"," * be updated"," * @param {Object} options Options object"," * @param {Function} cb The callback function"," * @private"," */","SQLConnector.prototype.updateAttributes = function(model, id, data, options, cb) {","  if (!isIdValuePresent(id, cb)) return;","  var where = this._buildWhereObjById(model, id, data);","  this.updateAll(model, where, data, options, cb);","};","","/**"," * Replace attributes for a given model instance"," * @param {String} model The model name"," * @param {*} id The id value"," * @param {Object} data The model data instance containing all properties to"," * be replaced"," * @param {Object} options Options object"," * @param {Function} cb The callback function"," * @private"," */","SQLConnector.prototype.replaceById = function(model, id, data, options, cb) {","  if (!isIdValuePresent(id, cb)) return;","  var where = this._buildWhereObjById(model, id, data);","  this._replace(model, where, data, options, cb);","};","","/*"," * @param model The model name."," * @param id The instance ID."," * @param {Object} data The data Object."," * @returns {Object} where The where object for a spcific instance."," * @private"," */","SQLConnector.prototype._buildWhereObjById = function(model, id, data) {","  var idName = this.idName(model);","  delete data[idName];","  var where = {};","  where[idName] = id;","  return where;","};","","/**"," * Build the UPDATE statement"," * @param {String} model The model name"," * @param {Object} where The where object"," * @param {Object} data The data to be changed"," * @param {Object} options The options object"," * @param {Function} cb The callback function"," * @returns {ParameterizedSQL} The UPDATE SQL statement"," */","SQLConnector.prototype.buildUpdate = function(model, where, data, options) {","  var fields = this.buildFieldsForUpdate(model, data);","  return this._constructUpdateQuery(model, where, fields);","};","","/**"," * Build the UPDATE statement for replacing"," * @param {String} model The model name"," * @param {Object} where The where object"," * @param {Object} data The data to be changed"," * @param {Object} options The options object"," * @param {Function} cb The callback function"," * @returns {ParameterizedSQL} The UPDATE SQL statement for replacing fields"," */","SQLConnector.prototype.buildReplace = function(model, where, data, options) {","  var fields = this.buildFieldsForReplace(model, data);","  return this._constructUpdateQuery(model, where, fields);","};","","/*"," * @param model The model name."," * @param {} where The where object."," * @param {Object} field The parameterizedSQL fileds."," * @returns {Object} update query Constructed update query."," * @private"," */","SQLConnector.prototype._constructUpdateQuery = function(model, where, fields) {","  var updateClause = new ParameterizedSQL('UPDATE ' + this.tableEscaped(model));","  var whereClause = this.buildWhere(model, where);","  updateClause.merge([fields, whereClause]);","  return this.parameterize(updateClause);","};","","/**"," * Update all instances that match the where clause with the given data"," * @param {String} model The model name"," * @param {Object} where The where object"," * @param {Object} data The property/value object representing changes"," * to be made"," * @param {Object} options The options object"," * @param {Function} cb The callback function"," */","SQLConnector.prototype.update = function(model, where, data, options, cb) {","  var stmt = this.buildUpdate(model, where, data, options);","  this._executeAlteringQuery(model, stmt.sql, stmt.params, options, cb || NOOP);","};","","/**"," * Replace all instances that match the where clause with the given data"," * @param {String} model The model name"," * @param {Object} where The where object"," * @param {Object} data The property/value object representing changes"," * to be made"," * @param {Object} options The options object"," * @param {Function} cb The callback function"," */","SQLConnector.prototype._replace = function(model, where, data, options, cb) {","  var self = this;","  var stmt = this.buildReplace(model, where, data, options);","  this.execute(stmt.sql, stmt.params, options, function(err, info) {","    if (err) return cb(err);","    var affectedRows = self.getCountForAffectedRows(model, info);","    var rowCount = typeof (affectedRows) === 'number' ?","      affectedRows : info.affectedRows;","    if (rowCount === 0) {","      return cb(errorIdNotFoundForReplace(where.id));","    } else {","      return cb(null, info);","    }","  });","};","","function errorIdNotFoundForReplace(idValue) {","  var msg = g.f('Could not replace. Object with id %s does not exist!', idValue);","  var error = new Error(msg);","  error.statusCode = error.status = 404;","  return error;","}","","SQLConnector.prototype._executeAlteringQuery = function(model, sql, params, options, cb) {","  var self = this;","  this.execute(sql, params, options, function(err, info) {","    var affectedRows = self.getCountForAffectedRows(model, info);","    cb(err, {count: affectedRows});","  });","};","","// Alias to `update` and `replace`. Juggler checks `update` and `replace` only.","Connector.defineAliases(SQLConnector.prototype, 'update', ['updateAll']);","Connector.defineAliases(SQLConnector.prototype, 'replace', ['replaceAll']);","","/**"," * Build the SQL WHERE clause for the where object"," * @param {string} model Model name"," * @param {object} where An object for the where conditions"," * @returns {ParameterizedSQL} The SQL WHERE clause"," */","SQLConnector.prototype.buildWhere = function(model, where) {","  var whereClause = this._buildWhere(model, where);","  if (whereClause.sql) {","    whereClause.sql = 'WHERE ' + whereClause.sql;","  }","  return whereClause;","};","","/**"," * Build SQL expression"," * @param {String} columnName Escaped column name"," * @param {String} operator SQL operator"," * @param {*} columnValue Column value"," * @param {*} propertyValue Property value"," * @returns {ParameterizedSQL} The SQL expression"," */","SQLConnector.prototype.buildExpression =","function(columnName, operator, columnValue, propertyValue) {","  function buildClause(columnValue, separator, grouping) {","    var values = [];","    for (var i = 0, n = columnValue.length; i < n; i++) {","      if (columnValue[i] instanceof ParameterizedSQL) {","        values.push(columnValue[i]);","      } else {","        values.push(new ParameterizedSQL(PLACEHOLDER, [columnValue[i]]));","      }","    }","    separator = separator || ',';","    var clause = ParameterizedSQL.join(values, separator);","    if (grouping) {","      clause.sql = '(' + clause.sql + ')';","    }","    return clause;","  }","","  var sqlExp = columnName;","  var clause;","  if (columnValue instanceof ParameterizedSQL) {","    clause = columnValue;","  } else {","    clause = new ParameterizedSQL(PLACEHOLDER, [columnValue]);","  }","  switch (operator) {","    case 'gt':","      sqlExp += '>';","      break;","    case 'gte':","      sqlExp += '>=';","      break;","    case 'lt':","      sqlExp += '<';","      break;","    case 'lte':","      sqlExp += '<=';","      break;","    case 'between':","      sqlExp += ' BETWEEN ';","      clause = buildClause(columnValue, ' AND ', false);","      break;","    case 'inq':","      sqlExp += ' IN ';","      clause = buildClause(columnValue, ',', true);","      break;","    case 'nin':","      sqlExp += ' NOT IN ';","      clause = buildClause(columnValue, ',', true);","      break;","    case 'neq':","      if (columnValue == null) {","        return new ParameterizedSQL(sqlExp + ' IS NOT NULL');","      }","      sqlExp += '!=';","      break;","    case 'like':","      sqlExp += ' LIKE ';","      break;","    case 'nlike':","      sqlExp += ' NOT LIKE ';","      break;","    // this case not needed since each database has its own regex syntax, but","    // we leave the MySQL syntax here as a placeholder","    case 'regexp':","      sqlExp += ' REGEXP ';","      break;","  }","  var stmt = ParameterizedSQL.join([sqlExp, clause], '');","  return stmt;","};","","/*!"," * @param model"," * @param where"," * @returns {ParameterizedSQL}"," * @private"," */","SQLConnector.prototype._buildWhere = function(model, where) {","  if (!where) {","    return new ParameterizedSQL('');","  }","  if (typeof where !== 'object' || Array.isArray(where)) {","    debug('Invalid value for where: %j', where);","    return new ParameterizedSQL('');","  }","  var self = this;","  var props = self.getModelDefinition(model).properties;","","  var whereStmts = [];","  for (var key in where) {","    var stmt = new ParameterizedSQL('', []);","    // Handle and/or operators","    if (key === 'and' || key === 'or') {","      var branches = [];","      var branchParams = [];","      var clauses = where[key];","      if (Array.isArray(clauses)) {","        for (var i = 0, n = clauses.length; i < n; i++) {","          var stmtForClause = self._buildWhere(model, clauses[i]);","          if (stmtForClause.sql) {","            stmtForClause.sql = '(' + stmtForClause.sql + ')';","            branchParams = branchParams.concat(stmtForClause.params);","            branches.push(stmtForClause.sql);","          }","        }","        stmt.merge({","          sql: branches.join(' ' + key.toUpperCase() + ' '),","          params: branchParams,","        });","        whereStmts.push(stmt);","        continue;","      }","      // The value is not an array, fall back to regular fields","    }","    var p = props[key];","    if (p == null) {","      // Unknown property, ignore it","      debug('Unknown property %s is skipped for model %s', key, model);","      continue;","    }","    /* eslint-disable one-var */","    var columnName = self.columnEscaped(model, key);","    var expression = where[key];","    var columnValue;","    var sqlExp;","    /* eslint-enable one-var */","    if (expression === null || expression === undefined) {","      stmt.merge(columnName + ' IS NULL');","    } else if (expression && expression.constructor === Object) {","      var operator = Object.keys(expression)[0];","      // Get the expression without the operator","      expression = expression[operator];","      if (operator === 'inq' || operator === 'nin' || operator === 'between') {","        columnValue = [];","        if (Array.isArray(expression)) {","          // Column value is a list","          for (var j = 0, m = expression.length; j < m; j++) {","            columnValue.push(this.toColumnValue(p, expression[j]));","          }","        } else {","          columnValue.push(this.toColumnValue(p, expression));","        }","        if (operator === 'between') {","          // BETWEEN v1 AND v2","          var v1 = columnValue[0] === undefined ? null : columnValue[0];","          var v2 = columnValue[1] === undefined ? null : columnValue[1];","          columnValue = [v1, v2];","        } else {","          // IN (v1,v2,v3) or NOT IN (v1,v2,v3)","          if (columnValue.length === 0) {","            if (operator === 'inq') {","              columnValue = [null];","            } else {","              // nin () is true","              continue;","            }","          }","        }","      } else if (operator === 'regexp' && expression instanceof RegExp) {","        // do not coerce RegExp based on property definitions","        columnValue = expression;","      } else {","        columnValue = this.toColumnValue(p, expression);","      }","      sqlExp = self.buildExpression(","        columnName, operator, columnValue, p);","      stmt.merge(sqlExp);","    } else {","      // The expression is the field value, not a condition","      columnValue = self.toColumnValue(p, expression);","      if (columnValue === null) {","        stmt.merge(columnName + ' IS NULL');","      } else {","        if (columnValue instanceof ParameterizedSQL) {","          stmt.merge(columnName + '=').merge(columnValue);","        } else {","          stmt.merge({","            sql: columnName + '=?',","            params: [columnValue],","          });","        }","      }","    }","    whereStmts.push(stmt);","  }","  var params = [];","  var sqls = [];","  for (var k = 0, s = whereStmts.length; k < s; k++) {","    sqls.push(whereStmts[k].sql);","    params = params.concat(whereStmts[k].params);","  }","  var whereStmt = new ParameterizedSQL({","    sql: sqls.join(' AND '),","    params: params,","  });","  return whereStmt;","};","","/**"," * Build the ORDER BY clause"," * @param {string} model Model name"," * @param {string[]} order An array of sorting criteria"," * @returns {string} The ORDER BY clause"," */","SQLConnector.prototype.buildOrderBy = function(model, order) {","  if (!order) {","    return '';","  }","  var self = this;","  if (typeof order === 'string') {","    order = [order];","  }","  var clauses = [];","  for (var i = 0, n = order.length; i < n; i++) {","    var t = order[i].split(/[\\s,]+/);","    if (t.length === 1) {","      clauses.push(self.columnEscaped(model, order[i]));","    } else {","      clauses.push(self.columnEscaped(model, t[0]) + ' ' + t[1]);","    }","  }","  return 'ORDER BY ' + clauses.join(',');","};","","/**"," * Build an array of fields for the database operation"," * @param {String} model Model name"," * @param {Object} data Model data object"," * @param {Boolean} excludeIds Exclude id properties or not, default to false"," * @returns {{names: Array, values: Array, properties: Array}}"," */","SQLConnector.prototype.buildFields = function(model, data, excludeIds) {","  var keys = Object.keys(data);","  return this._buildFieldsForKeys(model, data, keys, excludeIds);","};","","/**"," * Build an array of fields for the replace database operation"," * @param {String} model Model name"," * @param {Object} data Model data object"," * @param {Boolean} excludeIds Exclude id properties or not, default to false"," * @returns {{names: Array, values: Array, properties: Array}}"," */","SQLConnector.prototype.buildReplaceFields = function(model, data, excludeIds) {","  var props = this.getModelDefinition(model).properties;","  var keys = Object.keys(props);","  return this._buildFieldsForKeys(model, data, keys, excludeIds);","};","","/*"," * @param {String} model The model name."," * @returns {Object} data The model data object."," * @returns {Array} keys The key fields for which need to be built."," * @param {Boolean} excludeIds Exclude id properties or not, default to false"," * @private"," */","SQLConnector.prototype._buildFieldsForKeys = function(model, data, keys, excludeIds) {","  var props = this.getModelDefinition(model).properties;","  var fields = {","    names: [], // field names","    columnValues: [], // an array of ParameterizedSQL","    properties: [], // model properties","  };","  for (var i = 0, n = keys.length; i < n; i++) {","    var key = keys[i];","    var p = props[key];","    if (p == null) {","      // Unknown property, ignore it","      debug('Unknown property %s is skipped for model %s', key, model);","      continue;","    }","","    if (excludeIds && p.id) {","      continue;","    }","    var k = this.columnEscaped(model, key);","    var v = this.toColumnValue(p, data[key]);","    if (v !== undefined) {","      fields.names.push(k);","      if (v instanceof ParameterizedSQL) {","        fields.columnValues.push(v);","      } else {","        fields.columnValues.push(new ParameterizedSQL(PLACEHOLDER, [v]));","      }","      fields.properties.push(p);","    }","  }","  return fields;","};","","/**"," * Build the SET clause for database update."," * @param {String} model Model name."," * @param {Object} data The model data object."," * @param {Boolean} excludeIds Exclude id properties or not, default to true."," * @returns {string} The list of fields for update query."," */","SQLConnector.prototype.buildFieldsForUpdate = function(model, data, excludeIds) {","  if (excludeIds === undefined) {","    excludeIds = true;","  }","  var fields = this.buildFields(model, data, excludeIds);","  return this._constructUpdateParameterizedSQL(fields);","};","","/**"," * Build the SET clause for database replace through update query."," * @param {String} model Model name."," * @param {Object} data The model data object."," * @param {Boolean} excludeIds Exclude id properties or not, default to true."," * @returns {string} The list of fields for update query."," */","SQLConnector.prototype.buildFieldsForReplace = function(model, data, excludeIds) {","  if (excludeIds === undefined) {","    excludeIds = true;","  }","  var fields = this.buildReplaceFields(model, data, excludeIds);","  return this._constructUpdateParameterizedSQL(fields);","};","","/*"," * @param {Object} field The fileds."," * @returns {Object} parameterizedSQL."," * @private"," */","SQLConnector.prototype._constructUpdateParameterizedSQL = function(fields) {","  var columns = new ParameterizedSQL('');","  for (var i = 0, n = fields.names.length; i < n; i++) {","    var clause = ParameterizedSQL.append(fields.names[i],","      fields.columnValues[i], '=');","    columns.merge(clause, ',');","  }","  columns.sql = 'SET ' + columns.sql;","  return columns;","};","","/**"," * Build a list of escaped column names for the given model and fields filter"," * @param {string} model Model name"," * @param {object} filter The filter object"," * @returns {string} Comma separated string of escaped column names"," */","SQLConnector.prototype.buildColumnNames = function(model, filter) {","  var fieldsFilter = filter && filter.fields;","  var cols = this.getModelDefinition(model).properties;","  if (!cols) {","    return '*';","  }","  var self = this;","  var keys = Object.keys(cols);","  if (Array.isArray(fieldsFilter) && fieldsFilter.length > 0) {","    // Not empty array, including all the fields that are valid properties","    keys = fieldsFilter.filter(function(f) {","      return cols[f];","    });","  } else if ('object' === typeof fieldsFilter &&","    Object.keys(fieldsFilter).length > 0) {","    // { field1: boolean, field2: boolean ... }","    var included = [];","    var excluded = [];","    keys.forEach(function(k) {","      if (fieldsFilter[k]) {","        included.push(k);","      } else if ((k in fieldsFilter) && !fieldsFilter[k]) {","        excluded.push(k);","      }","    });","    if (included.length > 0) {","      keys = included;","    } else if (excluded.length > 0) {","      excluded.forEach(function(e) {","        var index = keys.indexOf(e);","        keys.splice(index, 1);","      });","    }","  }","  var names = keys.map(function(c) {","    return self.columnEscaped(model, c);","  });","  return names.join(',');","};","","/**"," * Build a SQL SELECT statement"," * @param {String} model Model name"," * @param {Object} filter Filter object"," * @param {Object} options Options object"," * @returns {ParameterizedSQL} Statement object {sql: ..., params: [...]}"," */","SQLConnector.prototype.buildSelect = function(model, filter, options) {","  if (!filter.order) {","    var idNames = this.idNames(model);","    if (idNames && idNames.length) {","      filter.order = idNames;","    }","  }","","  var selectStmt = new ParameterizedSQL('SELECT ' +","    this.buildColumnNames(model, filter) +","    ' FROM ' + this.tableEscaped(model)","  );","","  if (filter) {","    if (filter.where) {","      var whereStmt = this.buildWhere(model, filter.where);","      selectStmt.merge(whereStmt);","    }","","    if (filter.order) {","      selectStmt.merge(this.buildOrderBy(model, filter.order));","    }","","    if (filter.limit || filter.skip || filter.offset) {","      selectStmt = this.applyPagination(","        model, selectStmt, filter);","    }","  }","  return this.parameterize(selectStmt);","};","","/**"," * Transform the row data into a model data object"," * @param {string} model Model name"," * @param {object} rowData An object representing the row data from DB"," * @returns {object} Model data object"," */","SQLConnector.prototype.fromRow = SQLConnector.prototype.fromDatabase =","function(model, rowData) {","  if (rowData == null) {","    return rowData;","  }","  var props = this.getModelDefinition(model).properties;","  var data = {};","  for (var p in props) {","    var columnName = this.column(model, p);","    // Load properties from the row","    var columnValue = this.fromColumnValue(props[p], rowData[columnName]);","    if (columnValue !== undefined) {","      data[p] = columnValue;","    }","  }","  return data;","};","","/**"," * Find matching model instances by the filter"," *"," * Please also note the name `all` is confusing. `Model.find` is to find all"," * matching instances while `Model.findById` is to find an instance by id. On"," * the other hand, `Connector.prototype.all` implements `Model.find` while"," * `Connector.prototype.find` implements `Model.findById` due to the `bad`"," * naming convention we inherited from juggling-db."," *"," * @param {String} model The model name"," * @param {Object} filter The filter"," * @param {Function} [cb] The cb function"," */","SQLConnector.prototype.all = function find(model, filter, options, cb) {","  var self = this;","  // Order by id if no order is specified","  filter = filter || {};","  var stmt = this.buildSelect(model, filter, options);","  this.execute(stmt.sql, stmt.params, options, function(err, data) {","    if (err) {","      return cb(err, []);","    }","","    var objs = data.map(function(obj) {","      return self.fromRow(model, obj);","    });","    if (filter && filter.include) {","      self.getModelDefinition(model).model.include(","        objs, filter.include, options, cb);","    } else {","      cb(null, objs);","    }","  });","};","","// Alias to `all`. Juggler checks `all` only.","Connector.defineAliases(SQLConnector.prototype, 'all', ['findAll']);","","/**"," * ATM, this method is not used by loopback-datasource-juggler dao, which"," * maps `findById` to `find` with a `where` filter that includes the `id`"," * instead."," *"," * Please also note the name `find` is confusing. `Model.find` is to find all"," * matching instances while `Model.findById` is to find an instance by id. On"," * the other hand, `Connector.prototype.find` is for `findById` and"," * `Connector.prototype.all` is for `find` due the `bad` convention used by"," * juggling-db."," *"," * Find by id"," * @param {String} model The Model name"," * @param {*} id The id value"," * @param {Object} options The options object"," * @param {Function} cb The callback function"," * @private"," */","SQLConnector.prototype.find = function(model, id, options, cb) {","  if (id == null) {","    process.nextTick(function() {","      var err = new Error(g.f('id value is required'));","      if (cb) {","        cb(err);","      }","    });","    return;","  }","  var where = {};","  var idName = this.idName(model);","  where[idName] = id;","","  var filter = {limit: 1, offset: 0, order: idName, where: where};","  return this.all(model, filter, options, function(err, results) {","    cb(err, (results && results[0]) || null);","  });","};","// Alias to `find`. Juggler checks `findById` only.","Connector.defineAliases(SQLConnector.prototype, 'find', ['findById']);","","/**"," * Count all model instances by the where filter"," *"," * @param {String} model The model name"," * @param {Object} where The where object"," * @param {Object} options The options object"," * @param {Function} cb The callback function"," */","SQLConnector.prototype.count = function(model, where, options, cb) {","  if (typeof where === 'function') {","    // Backward compatibility for 1.x style signature:","    // count(model, cb, where)","    var tmp = options;","    cb = where;","    where = tmp;","  }","","  var stmt = new ParameterizedSQL('SELECT count(*) as \"cnt\" FROM ' +","    this.tableEscaped(model));","  stmt = stmt.merge(this.buildWhere(model, where));","  stmt = this.parameterize(stmt);","  this.execute(stmt.sql, stmt.params,","    function(err, res) {","      if (err) {","        return cb(err);","      }","      var c = (res && res[0] && res[0].cnt) || 0;","      // Some drivers return count as a string to contain bigint","      // See https://github.com/brianc/node-postgres/pull/427","      cb(err, Number(c));","    });","};","","/**"," * Drop the table for the given model from the database"," * @param {String} model The model name"," * @param {Function} [cb] The callback function"," */","SQLConnector.prototype.dropTable = function(model, cb) {","  this.execute('DROP TABLE IF EXISTS ' + this.tableEscaped(model), cb);","};","","/**"," * Create the table for the given model"," * @param {String} model The model name"," * @param {Function} [cb] The callback function"," */","SQLConnector.prototype.createTable = function(model, cb) {","  var sql = 'CREATE TABLE ' + this.tableEscaped(model) +","    ' (\\n  ' + this.buildColumnDefinitions(model) + '\\n)';","  this.execute(sql, cb);","};","","/**"," * Recreate the tables for the given models"," * @param {[String]|String} [models] A model name or an array of model names,"," * if not present, apply to all models defined in the connector"," * @param {Function} [cb] The callback function"," */","SQLConnector.prototype.automigrate = function(models, cb) {","  var self = this;","","  if ((!cb) && ('function' === typeof models)) {","    cb = models;","    models = undefined;","  }","  // First argument is a model name","  if ('string' === typeof models) {","    models = [models];","  }","","  models = models || Object.keys(self._models);","  if (models.length === 0) {","    return process.nextTick(cb);","  }","","  var invalidModels = models.filter(function(m) {","    return !(m in self._models);","  });","  if (invalidModels.length) {","    return process.nextTick(function() {","      cb(new Error(g.f('Cannot migrate models not attached to this datasource: %s',","        invalidModels.join(' '))));","    });","  }","","  async.each(models, function(model, done) {","    self.dropTable(model, function(err) {","      if (err) {","        // TODO(bajtos) should we abort here and call cb(err)?","        // The original code in juggler ignored the error completely","        console.error(err);","      }","      self.createTable(model, function(err, result) {","        if (err) {","          console.error(err);","        }","        done(err, result);","      });","    });","  }, cb);","};","","/**"," * Serialize an object into JSON string or other primitive types so that it"," * can be saved into a RDB column"," * @param {Object} obj The object value"," * @returns {*}"," */","SQLConnector.prototype.serializeObject = function(obj) {","  var val;","  if (obj && typeof obj.toJSON === 'function') {","    obj = obj.toJSON();","  }","  if (typeof obj !== 'string') {","    val = JSON.stringify(obj);","  } else {","    val = obj;","  }","  return val;","};","","/*!"," * @param obj"," */","SQLConnector.prototype.escapeObject = function(obj) {","  var val = this.serializeObject(obj);","  return this.escapeValue(val);","};","","/**"," * The following _abstract_ methods have to be implemented by connectors that"," * extend from SQLConnector to reuse the base implementations of CRUD methods"," * from SQLConnector"," */","","/**"," * Converts a model property value into the form required by the"," * database column. The result should be one of following forms:"," *"," * - {sql: \"point(?,?)\", params:[10,20]}"," * - {sql: \"'John'\", params: []}"," * - \"John\""," *"," * @param {Object} propertyDef Model property definition"," * @param {*} value Model property value"," * @returns {ParameterizedSQL|*} Database column value."," *"," */","SQLConnector.prototype.toColumnValue = function(propertyDef, value) {","  throw new Error(g.f('{{toColumnValue()}} must be implemented by the connector'));","};","","/**"," * Convert the data from database column to model property"," * @param {object} propertyDef Model property definition"," * @param {*) value Column value"," * @returns {*} Model property value"," */","SQLConnector.prototype.fromColumnValue = function(propertyDef, value) {","  throw new Error(g.f('{{fromColumnValue()}} must be implemented by the connector'));","};","","/**"," * Escape the name for the underlying database"," * @param {String} name The name"," * @returns {String} An escaped name for SQL"," */","SQLConnector.prototype.escapeName = function(name) {","  throw new Error(g.f('{{escapeName()}} must be implemented by the connector'));","};","","/**"," * Escape the name for the underlying database"," * @param {String} value The value to be escaped"," * @returns {*} An escaped value for SQL"," */","SQLConnector.prototype.escapeValue = function(value) {","  throw new Error(g.f('{{escapeValue()}} must be implemented by the connector'));","};","","/**"," * Get the place holder in SQL for identifiers, such as ??"," * @param {String} key Optional key, such as 1 or id"," * @returns {String} The place holder"," */","SQLConnector.prototype.getPlaceholderForIdentifier = function(key) {","  throw new Error(g.f('{{getPlaceholderForIdentifier()}} must be implemented by ' +","    'the connector'));","};","","/**"," * Get the place holder in SQL for values, such as :1 or ?"," * @param {String} key Optional key, such as 1 or id"," * @returns {String} The place holder"," */","SQLConnector.prototype.getPlaceholderForValue = function(key) {","  throw new Error(g.f('{{getPlaceholderForValue()}} must be implemented by ' +","    'the connector'));","};","","/**"," * Build a new SQL statement with pagination support by wrapping the given sql"," * @param {String} model The model name"," * @param {ParameterizedSQL} stmt The sql statement"," * @param {Object} filter The filter object from the query"," */","SQLConnector.prototype.applyPagination = function(model, stmt, filter) {","  throw new Error(g.f('{{applyPagination()}} must be implemented by the connector'));","};","","/**"," * Parse the result for SQL UPDATE/DELETE/INSERT for the number of rows"," * affected"," * @param {String} model Model name"," * @param {Object} info Status object"," * @returns {Number} Number of rows affected"," */","SQLConnector.prototype.getCountForAffectedRows = function(model, info) {","  throw new Error(g.f('{{getCountForAffectedRows()}} must be implemented by ' +","    'the connector'));","};","","/**"," * Parse the result for SQL INSERT for newly inserted id"," * @param {String} model Model name"," * @param {Object} info The status object from driver"," * @returns {*} The inserted id value"," */","SQLConnector.prototype.getInsertedId = function(model, info) {","  throw new Error(g.f('{{getInsertedId()}} must be implemented by the connector'));","};","","/**"," * Execute a SQL statement with given parameters"," * @param {String} sql The SQL statement"," * @param {*[]} [params] An array of parameter values"," * @param {Object} [options] Options object"," * @param {Function} [callback] The callback function"," */","SQLConnector.prototype.executeSQL = function(sql, params, options, callback) {","  throw new Error(g.f('{{executeSQL()}} must be implemented by the connector'));","};","","// Refactored Discovery methods","","/**"," * Build sql for listing schemas"," * @param {Object} options Options for discoverDatabaseSchemas"," */","SQLConnector.prototype.buildQuerySchemas = function(options) {","  var sql = 'SELECT catalog_name as \"catalog\",' +","   ' schema_name as \"schema\"' +","   ' FROM information_schema.schemata';","  return this.paginateSQL(sql, 'schema_name', options);","};","","/**"," * Paginate the results returned from database"," * @param {String} sql The sql to execute"," * @param {Object} orderBy The property name by which results are ordered"," * @param {Object} options Options for discoverDatabaseSchemas"," */","SQLConnector.prototype.paginateSQL = function(sql, orderBy, options) {","  throw new Error(g.f('{{paginateSQL}} must be implemented by the connector'));","};","/**"," * Discover database schemas"," *"," // * @param {Object} options Options for discovery"," * @param {Function} [cb] The callback function"," */","SQLConnector.prototype.discoverDatabaseSchemas = function(options, cb) {","  if (!cb && typeof options === 'function') {","    cb = options;","    options = {};","  }","  options = options || {};","  var self = this;","  this.execute(self.buildQuerySchemas(options), cb);","};","","/*!"," * Build sql for listing tables"," * @param options {all: for all owners, owner: for a given owner}"," * @returns {string} The sql statement"," */"," // Due to the different implementation structure of information_schema across"," // connectors, each connector will have to generate its own query","SQLConnector.prototype.buildQueryTables = function(options) {","  throw new Error(g.f('{{buildQueryTables}} must be implemented by the connector'));","};","","/*!"," * Build sql for listing views"," * @param options {all: for all owners, owner: for a given owner}"," * @returns {string} The sql statement"," */"," // Due to the different implementation structure of information_schema across"," // connectors, each connector will have to generate its own query","SQLConnector.prototype.buildQueryViews = function(options) {","  throw new Error(g.f('{{buildQueryViews}} must be implemented by the connector'));","};","","/**"," * Discover model definitions"," *"," * @param {Object} options Options for discovery"," * @param {Function} [cb] The callback function"," */","SQLConnector.prototype.discoverModelDefinitions = function(options, cb) {","  if (!cb && typeof options === 'function') {","    cb = options;","    options = {};","  }","  options = options || {};","","  var self = this;","  var calls = [function(callback) {","    self.execute(self.buildQueryTables(options), callback);","  }];","","  if (options.views) {","    calls.push(function(callback) {","      self.execute(self.buildQueryViews(options), callback);","    });","  }","  async.parallel(calls, function(err, data) {","    if (err) {","      cb(err, data);","    } else {","      var merged = [];","      merged = merged.concat(data.shift());","      if (data.length) {","        merged = merged.concat(data.shift());","      }","      cb(err, merged);","    }","  });","};","","/**"," * Build sql for listing columns"," * @param {String} schema The schema name"," * @param {String} table The table name"," */","// Due to the different implementation structure of information_schema across","// connectors, each connector will have to generate its own query","SQLConnector.prototype.buildQueryColumns = function(schema, table) {","  throw new Error(g.f('{{buildQueryColumns}} must be implemented by the connector'));","};","","/**"," * Map the property type from database to loopback"," * @param {Object} columnDefinition The columnDefinition of the table/schema"," * @param {Object} options The options for the connector"," */","SQLConnector.prototype.buildPropertyType = function(columnDefinition, options) {","  throw new Error(g.f('{{buildPropertyType}} must be implemented by the connector'));","};","","/*!"," * Normalize the arguments"," * @param table string, required"," * @param options object, optional"," * @param cb function, optional"," */","SQLConnector.prototype.getArgs = function(table, options, cb) {","  throw new Error(g.f('{{getArgs}} must be implemented by the connector'));","};","","/**"," * Discover model properties from a table"," * @param {String} table The table name"," * @param {Object} options The options for discovery"," * @param {Function} [cb] The callback function"," */","SQLConnector.prototype.discoverModelProperties = function(table, options, cb) {","  var self = this;","  var args = self.getArgs(table, options, cb);","  var schema = args.schema;","","  table = args.table;","  options = args.options;","","  if (!schema) {","    schema = self.getDefaultSchema();","  }","","  self.setDefaultOptions(options);","  cb = args.cb;","","  var sql = self.buildQueryColumns(schema, table);","  var callback = function(err, results) {","    if (err) {","      cb(err, results);","    } else {","      results.map(function(r) {","        r.type = self.buildPropertyType(r, options);","        self.setNullableProperty(r);","      });","      cb(err, results);","    }","  };","  this.execute(sql, callback);","};","","/*!"," * Build the sql statement for querying primary keys of a given table"," * @param schema"," * @param table"," * @returns {string}"," */","// http://docs.oracle.com/javase/6/docs/api/java/sql/DatabaseMetaData.html","// #getPrimaryKeys(java.lang.String, java.lang.String, java.lang.String)","// Due to the different implementation structure of information_schema across","// connectors, each connector will have to generate its own query","SQLConnector.prototype.buildQueryPrimaryKeys = function(schema, table) {","  throw new Error(g.f('{{buildQueryPrimaryKeys}} must be implemented by the connector'));","};","","/**"," * Discover primary keys for a given table"," * @param {String} table The table name"," * @param {Object} options The options for discovery"," * @param {Function} [cb] The callback function"," */","SQLConnector.prototype.discoverPrimaryKeys = function(table, options, cb) {","  var self = this;","  var args = self.getArgs(table, options, cb);","  var schema = args.schema;","","  if (typeof(self.getDefaultSchema) === 'function' && !schema) {","    schema = self.getDefaultSchema();","  }","  table = args.table;","  options = args.options;","  cb = args.cb;","","  var sql = self.buildQueryPrimaryKeys(schema, table);","  this.execute(sql, cb);","};","","/*!"," * Build the sql statement for querying foreign keys of a given table"," * @param schema"," * @param table"," * @returns {string}"," */"," // Due to the different implementation structure of information_schema across"," // connectors, each connector will have to generate its own query","SQLConnector.prototype.buildQueryForeignKeys = function(schema, table) {","  throw new Error(g.f('{{buildQueryForeignKeys}} must be implemented by the connector'));","};","","/**"," * Discover foreign keys for a given table"," * @param {String} table The table name"," * @param {Object} options The options for discovery"," * @param {Function} [cb] The callback function"," */","SQLConnector.prototype.discoverForeignKeys = function(table, options, cb) {","  var self = this;","  var args = self.getArgs(table, options, cb);","  var schema = args.schema;","","  if (typeof(self.getDefaultSchema) === 'function' && !schema) {","    schema = self.getDefaultSchema();","  }","  table = args.table;","  options = args.options;","  cb = args.cb;","","  var sql = self.buildQueryForeignKeys(schema, table);","  this.execute(sql, cb);","};","","/*!"," * Retrieves a description of the foreign key columns that reference the"," * given table's primary key columns (the foreign keys exported by a table)."," * They are ordered by fkTableOwner, fkTableName, and keySeq."," * @param schema"," * @param table"," * @returns {string}"," */"," // Due to the different implementation structure of information_schema across"," // connectors, each connector will have to generate its own query","SQLConnector.prototype.buildQueryExportedForeignKeys = function(schema, table) {","  throw new Error(g.f('{{buildQueryExportedForeignKeys}} must be implemented by' +","  'the connector'));","};","","/**"," * Discover foreign keys that reference to the primary key of this table"," * @param {String} table The table name"," * @param {Object} options The options for discovery"," * @param {Function} [cb] The callback function"," */","SQLConnector.prototype.discoverExportedForeignKeys = function(table, options, cb) {","  var self = this;","  var args = self.getArgs(table, options, cb);","  var schema = args.schema;","","  if (typeof(self.getDefaultSchema) === 'function' && !schema) {","    schema = self.getDefaultSchema();","  }","  table = args.table;","  options = args.options;","  cb = args.cb;","","  var sql = self.buildQueryExportedForeignKeys(schema, table);","  this.execute(sql, cb);","};","","/**"," * Discover default schema of a database"," * @param {Object} options The options for discovery"," */","SQLConnector.prototype.getDefaultSchema = function(options) {","  throw new Error(g.f('{{getDefaultSchema}} must be implemented by' +","  'the connector'));","};","","/**"," * Set default options for the connector"," * @param {Object} options The options for discovery"," */","SQLConnector.prototype.setDefaultOptions = function(options) {","  throw new Error(g.f('{{setDefaultOptions}} must be implemented by' +","  'the connector'));","};","","/**"," * Set the nullable value for the property"," * @param {Object} property The property to set nullable"," */","SQLConnector.prototype.setNullableProperty = function(property) {","  throw new Error(g.f('{{setNullableProperty}} must be implemented by' +","  'the connector'));","};",""],"l":{"7":1,"8":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"18":1,"20":1,"26":1,"28":0,"32":1,"35":1,"38":1,"40":1,"46":1,"52":1,"53":0,"54":0,"55":0,"64":1,"65":0,"66":0,"67":0,"68":0,"71":0,"72":0,"75":0,"77":0,"78":0,"79":0,"80":0,"83":0,"84":0,"85":0,"87":0,"99":1,"100":0,"102":0,"103":0,"104":0,"107":0,"108":0,"111":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"121":0,"122":0,"124":0,"125":0,"129":1,"130":0,"131":0,"132":0,"133":0,"136":1,"137":0,"140":1,"141":0,"142":0,"143":0,"144":0,"147":1,"148":0,"151":1,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"161":0,"164":1,"165":0,"166":0,"170":0,"173":1,"174":0,"175":0,"176":0,"177":0,"179":0,"180":0,"181":0,"183":0,"185":0,"186":0,"188":0,"191":1,"192":0,"195":1,"196":0,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"208":0,"209":0,"211":0,"222":1,"223":0,"226":1,"227":0,"235":1,"236":0,"237":0,"239":0,"240":0,"241":0,"243":0,"244":0,"245":0,"247":0,"248":0,"258":1,"259":0,"267":1,"268":0,"275":1,"276":0,"284":1,"285":0,"292":1,"293":0,"314":1,"316":0,"317":0,"320":0,"339":1,"340":0,"341":0,"342":0,"343":0,"344":0,"346":0,"349":0,"350":0,"351":0,"353":0,"374":1,"375":0,"376":0,"377":0,"378":0,"379":0,"381":0,"384":0,"385":0,"386":0,"388":0,"397":1,"398":0,"407":1,"408":0,"409":0,"410":0,"411":0,"414":0,"422":1,"423":0,"424":0,"425":0,"426":0,"428":0,"436":1,"437":0,"445":1,"446":0,"455":1,"456":0,"466":1,"467":0,"468":0,"469":0,"471":0,"472":0,"474":0,"484":1,"485":0,"486":0,"487":0,"489":0,"509":1,"510":0,"514":0,"515":0,"516":0,"518":0,"519":0,"520":0,"523":0,"524":0,"534":1,"535":0,"536":0,"537":0,"538":0,"540":0,"550":1,"551":0,"561":1,"562":0,"572":1,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"582":0,"584":0,"585":0,"586":0,"588":0,"599":1,"600":0,"601":0,"604":0,"605":0,"606":0,"607":0,"609":0,"610":0,"612":0,"613":0,"614":0,"615":0,"616":0,"618":0,"619":0,"620":0,"621":0,"624":0,"631":0,"632":0,"634":0,"635":0,"638":0,"639":0,"642":0,"655":1,"656":0,"657":0,"658":0,"659":0,"660":0,"662":0,"663":0,"675":1,"676":0,"677":0,"679":0,"680":0,"683":0,"684":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"693":0,"704":1,"705":0,"706":0,"708":0,"709":0,"710":0,"711":0,"715":0,"716":0,"721":0,"723":0,"724":0,"725":0,"726":0,"728":0,"745":1,"746":0,"747":0,"749":0,"750":0,"751":0,"752":0,"756":1,"766":1,"767":0,"769":0,"770":0,"781":1,"782":0,"783":0,"787":1,"803":1,"804":0,"805":0,"806":0,"819":1,"820":0,"821":0,"822":0,"832":1,"833":0,"834":0,"835":0,"836":0,"837":0,"849":1,"850":0,"851":0,"863":1,"864":0,"865":0,"875":1,"876":0,"877":0,"878":0,"879":0,"891":1,"892":0,"893":0,"905":1,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"913":0,"914":0,"916":0,"921":1,"922":0,"923":0,"924":0,"925":0,"928":1,"929":0,"930":0,"931":0,"932":0,"937":1,"938":1,"946":1,"947":0,"948":0,"949":0,"951":0,"962":1,"964":1,"965":0,"966":0,"967":0,"968":0,"970":0,"973":0,"974":0,"975":0,"976":0,"978":0,"981":0,"982":0,"983":0,"984":0,"986":0,"988":0,"990":0,"991":0,"993":0,"994":0,"996":0,"997":0,"999":0,"1000":0,"1002":0,"1003":0,"1004":0,"1006":0,"1007":0,"1008":0,"1010":0,"1011":0,"1012":0,"1014":0,"1015":0,"1017":0,"1018":0,"1020":0,"1021":0,"1023":0,"1024":0,"1028":0,"1029":0,"1031":0,"1032":0,"1041":1,"1042":0,"1043":0,"1045":0,"1046":0,"1047":0,"1049":0,"1050":0,"1052":0,"1053":0,"1054":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1069":0,"1073":0,"1074":0,"1078":0,"1079":0,"1081":0,"1082":0,"1085":0,"1086":0,"1087":0,"1088":0,"1090":0,"1091":0,"1092":0,"1093":0,"1095":0,"1096":0,"1097":0,"1098":0,"1100":0,"1101":0,"1104":0,"1106":0,"1108":0,"1109":0,"1110":0,"1113":0,"1114":0,"1115":0,"1118":0,"1122":0,"1124":0,"1126":0,"1128":0,"1130":0,"1133":0,"1134":0,"1135":0,"1137":0,"1138":0,"1140":0,"1147":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1155":0,"1159":0,"1168":1,"1169":0,"1170":0,"1172":0,"1173":0,"1174":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1182":0,"1185":0,"1195":1,"1196":0,"1197":0,"1207":1,"1208":0,"1209":0,"1210":0,"1220":1,"1221":0,"1222":0,"1227":0,"1228":0,"1229":0,"1230":0,"1232":0,"1233":0,"1236":0,"1237":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1246":0,"1248":0,"1251":0,"1261":1,"1262":0,"1263":0,"1265":0,"1266":0,"1276":1,"1277":0,"1278":0,"1280":0,"1281":0,"1289":1,"1290":0,"1291":0,"1292":0,"1294":0,"1296":0,"1297":0,"1306":1,"1307":0,"1308":0,"1309":0,"1310":0,"1312":0,"1313":0,"1314":0,"1316":0,"1317":0,"1319":0,"1322":0,"1323":0,"1324":0,"1325":0,"1326":0,"1327":0,"1328":0,"1331":0,"1332":0,"1333":0,"1334":0,"1335":0,"1336":0,"1340":0,"1341":0,"1343":0,"1353":1,"1354":0,"1355":0,"1356":0,"1357":0,"1361":0,"1366":0,"1367":0,"1368":0,"1369":0,"1372":0,"1373":0,"1376":0,"1377":0,"1381":0,"1390":1,"1392":0,"1393":0,"1395":0,"1396":0,"1397":0,"1398":0,"1400":0,"1401":0,"1402":0,"1405":0,"1421":1,"1422":0,"1424":0,"1425":0,"1426":0,"1427":0,"1428":0,"1431":0,"1432":0,"1434":0,"1435":0,"1438":0,"1444":1,"1464":1,"1465":0,"1466":0,"1467":0,"1468":0,"1469":0,"1472":0,"1474":0,"1475":0,"1476":0,"1478":0,"1479":0,"1480":0,"1484":1,"1494":1,"1495":0,"1498":0,"1499":0,"1500":0,"1503":0,"1505":0,"1506":0,"1507":0,"1509":0,"1510":0,"1512":0,"1515":0,"1524":1,"1525":0,"1533":1,"1534":0,"1536":0,"1545":1,"1546":0,"1548":0,"1549":0,"1550":0,"1553":0,"1554":0,"1557":0,"1558":0,"1559":0,"1562":0,"1563":0,"1565":0,"1566":0,"1567":0,"1572":0,"1573":0,"1574":0,"1577":0,"1579":0,"1580":0,"1581":0,"1583":0,"1595":1,"1596":0,"1597":0,"1598":0,"1600":0,"1601":0,"1603":0,"1605":0,"1611":1,"1612":0,"1613":0,"1635":1,"1636":0,"1645":1,"1646":0,"1654":1,"1655":0,"1663":1,"1664":0,"1672":1,"1673":0,"1682":1,"1683":0,"1693":1,"1694":0,"1704":1,"1705":0,"1715":1,"1716":0,"1726":1,"1727":0,"1736":1,"1737":0,"1740":0,"1749":1,"1750":0,"1758":1,"1759":0,"1760":0,"1761":0,"1763":0,"1764":0,"1765":0,"1775":1,"1776":0,"1786":1,"1787":0,"1796":1,"1797":0,"1798":0,"1799":0,"1801":0,"1803":0,"1804":0,"1805":0,"1808":0,"1809":0,"1810":0,"1813":0,"1814":0,"1815":0,"1817":0,"1818":0,"1819":0,"1820":0,"1822":0,"1834":1,"1835":0,"1843":1,"1844":0,"1853":1,"1854":0,"1863":1,"1864":0,"1865":0,"1866":0,"1868":0,"1869":0,"1871":0,"1872":0,"1875":0,"1876":0,"1878":0,"1879":0,"1880":0,"1881":0,"1883":0,"1884":0,"1885":0,"1887":0,"1890":0,"1903":1,"1904":0,"1913":1,"1914":0,"1915":0,"1916":0,"1918":0,"1919":0,"1921":0,"1922":0,"1923":0,"1925":0,"1926":0,"1937":1,"1938":0,"1947":1,"1948":0,"1949":0,"1950":0,"1952":0,"1953":0,"1955":0,"1956":0,"1957":0,"1959":0,"1960":0,"1973":1,"1974":0,"1984":1,"1985":0,"1986":0,"1987":0,"1989":0,"1990":0,"1992":0,"1993":0,"1994":0,"1996":0,"1997":0,"2004":1,"2005":0,"2013":1,"2014":0,"2022":1,"2023":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/parameterized-sql.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/parameterized-sql.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"ParameterizedSQL","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":39}}},"2":{"name":"(anonymous_2)","line":52,"loc":{"start":{"line":52,"column":35},"end":{"line":52,"column":59}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":36},"end":{"line":61,"column":47}}},"4":{"name":"(anonymous_4)","line":75,"loc":{"start":{"line":75,"column":26},"end":{"line":75,"column":65}}},"5":{"name":"(anonymous_5)","line":97,"loc":{"start":{"line":97,"column":24},"end":{"line":97,"column":50}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":22}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}},"4":{"start":{"line":22,"column":0},"end":{"line":43,"column":1}},"5":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":45}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":18}},"8":{"start":{"line":27,"column":2},"end":{"line":33,"column":3}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":23}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":35}},"11":{"start":{"line":31,"column":4},"end":{"line":31,"column":19}},"12":{"start":{"line":32,"column":4},"end":{"line":32,"column":31}},"13":{"start":{"line":34,"column":2},"end":{"line":34,"column":63}},"14":{"start":{"line":35,"column":2},"end":{"line":35,"column":64}},"15":{"start":{"line":37,"column":2},"end":{"line":37,"column":42}},"16":{"start":{"line":38,"column":2},"end":{"line":42,"column":24}},"17":{"start":{"line":52,"column":0},"end":{"line":59,"column":2}},"18":{"start":{"line":53,"column":2},"end":{"line":58,"column":3}},"19":{"start":{"line":54,"column":4},"end":{"line":55,"column":55}},"20":{"start":{"line":57,"column":4},"end":{"line":57,"column":56}},"21":{"start":{"line":61,"column":0},"end":{"line":66,"column":2}},"22":{"start":{"line":62,"column":2},"end":{"line":65,"column":4}},"23":{"start":{"line":75,"column":0},"end":{"line":89,"column":2}},"24":{"start":{"line":76,"column":2},"end":{"line":77,"column":52}},"25":{"start":{"line":78,"column":2},"end":{"line":79,"column":31}},"26":{"start":{"line":80,"column":2},"end":{"line":80,"column":62}},"27":{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},"28":{"start":{"line":82,"column":4},"end":{"line":82,"column":33}},"29":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"30":{"start":{"line":85,"column":4},"end":{"line":85,"column":32}},"31":{"start":{"line":87,"column":2},"end":{"line":87,"column":62}},"32":{"start":{"line":88,"column":2},"end":{"line":88,"column":21}},"33":{"start":{"line":97,"column":0},"end":{"line":104,"column":2}},"34":{"start":{"line":98,"column":2},"end":{"line":98,"column":55}},"35":{"start":{"line":99,"column":2},"end":{"line":99,"column":40}},"36":{"start":{"line":100,"column":2},"end":{"line":102,"column":3}},"37":{"start":{"line":101,"column":4},"end":{"line":101,"column":40}},"38":{"start":{"line":103,"column":2},"end":{"line":103,"column":12}},"39":{"start":{"line":106,"column":0},"end":{"line":106,"column":43}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":11}},{"start":{"line":26,"column":15},"end":{"line":26,"column":17}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"4":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":6},"end":{"line":27,"column":28}},{"start":{"line":27,"column":32},"end":{"line":27,"column":55}}]},"5":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":18},"end":{"line":29,"column":28}},{"start":{"line":29,"column":32},"end":{"line":29,"column":34}}]},"6":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":18},"end":{"line":32,"column":24}},{"start":{"line":32,"column":28},"end":{"line":32,"column":30}}]},"7":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"8":{"line":76,"type":"cond-expr","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":15}},{"start":{"line":77,"column":18},"end":{"line":77,"column":51}}]},"9":{"line":78,"type":"cond-expr","locations":[{"start":{"line":78,"column":46},"end":{"line":78,"column":50}},{"start":{"line":79,"column":4},"end":{"line":79,"column":30}}]},"10":{"line":80,"type":"cond-expr","locations":[{"start":{"line":80,"column":46},"end":{"line":80,"column":55}},{"start":{"line":80,"column":58},"end":{"line":80,"column":61}}]},"11":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"12":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]}},"code":["// Copyright IBM Corp. 2015,2016. All Rights Reserved.","// Node module: loopback-connector","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var assert = require('assert');","var PLACEHOLDER = '?';","","module.exports = ParameterizedSQL;","","/**"," * A class for parameterized SQL clauses"," * @param {String|Object} sql The SQL clause. If the value is a string, treat"," * it as the template using `?` as the placeholder, for example, `(?,?)`. If"," * the value is an object, treat it as {sql: '...', params: [...]}"," * @param {*[]} params An array of parameter values. The length should match the"," * number of placeholders in the template"," * @returns {ParameterizedSQL} A new instance of ParameterizedSQL"," * @constructor"," */","function ParameterizedSQL(sql, params) {","  if (!(this instanceof ParameterizedSQL)) {","    return new ParameterizedSQL(sql, params);","  }","  sql = sql || '';","  if (arguments.length === 1 && typeof sql === 'object') {","    this.sql = sql.sql;","    this.params = sql.params || [];","  } else {","    this.sql = sql;","    this.params = params || [];","  }","  assert(typeof this.sql === 'string', 'sql must be a string');","  assert(Array.isArray(this.params), 'params must be an array');","","  var parts = this.sql.split(PLACEHOLDER);","  assert(parts.length - 1 === this.params.length,","    'The number of ? (' + (parts.length - 1) +","    ') in the sql (' + this.sql + ') must match the number of params (' +","    this.params.length +","    ') ' + this.params);","}","","/**"," * Merge the parameterized sqls into the current instance"," * @param {Object|Object[]} ps A parametered SQL or an array of parameterized"," * SQLs"," * @param {String} [separator] Separator, default to ` `"," * @returns {ParameterizedSQL} The current instance"," */","ParameterizedSQL.prototype.merge = function(ps, separator) {","  if (Array.isArray(ps)) {","    return this.constructor.append(this,","      this.constructor.join(ps, separator), separator);","  } else {","    return this.constructor.append(this, ps, separator);","  }","};","","ParameterizedSQL.prototype.toJSON = function() {","  return {","    sql: this.sql,","    params: this.params,","  };","};","","/**"," * Append the statement into the current statement"," * @param {Object} currentStmt The current SQL statement"," * @param {Object} stmt The statement to be appended"," * @param {String} [separator] Separator, default to ` `"," * @returns {*} The merged statement"," */","ParameterizedSQL.append = function(currentStmt, stmt, separator) {","  currentStmt = (currentStmt instanceof ParameterizedSQL) ?","    currentStmt : new ParameterizedSQL(currentStmt);","  stmt = (stmt instanceof ParameterizedSQL) ? stmt :","    new ParameterizedSQL(stmt);","  separator = typeof separator === 'string' ? separator : ' ';","  if (currentStmt.sql) {","    currentStmt.sql += separator;","  }","  if (stmt.sql) {","    currentStmt.sql += stmt.sql;","  }","  currentStmt.params = currentStmt.params.concat(stmt.params);","  return currentStmt;","};","","/**"," * Join multiple parameterized SQLs into one"," * @param {Object[]} sqls An array of parameterized SQLs"," * @param {String} [separator] Separator, default to ` `"," * @returns {ParameterizedSQL}"," */","ParameterizedSQL.join = function(sqls, separator) {","  assert(Array.isArray(sqls), 'sqls must be an array');","  var ps = new ParameterizedSQL('', []);","  for (var i = 0, n = sqls.length; i < n; i++) {","    this.append(ps, sqls[i], separator);","  }","  return ps;","};","","ParameterizedSQL.PLACEHOLDER = PLACEHOLDER;","",""],"l":{"7":1,"8":1,"10":1,"22":1,"23":0,"24":0,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"37":0,"38":0,"52":1,"53":0,"54":0,"57":0,"61":1,"62":0,"75":1,"76":0,"78":0,"80":0,"81":0,"82":0,"84":0,"85":0,"87":0,"88":0,"97":1,"98":0,"99":0,"100":0,"101":0,"103":0,"106":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/transaction.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/transaction.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":1,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"Transaction","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":44}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":31},"end":{"line":47,"column":44}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":33},"end":{"line":56,"column":46}}},"4":{"name":"(anonymous_4)","line":66,"loc":{"start":{"line":66,"column":20},"end":{"line":66,"column":53}}},"5":{"name":"(anonymous_5)","line":83,"loc":{"start":{"line":83,"column":45},"end":{"line":83,"column":71}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":63}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":29}},"6":{"start":{"line":20,"column":0},"end":{"line":24,"column":1}},"7":{"start":{"line":21,"column":2},"end":{"line":21,"column":29}},"8":{"start":{"line":22,"column":2},"end":{"line":22,"column":31}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":26}},"10":{"start":{"line":26,"column":0},"end":{"line":26,"column":41}},"11":{"start":{"line":29,"column":0},"end":{"line":29,"column":42}},"12":{"start":{"line":30,"column":0},"end":{"line":30,"column":48}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":46}},"14":{"start":{"line":32,"column":0},"end":{"line":32,"column":50}},"15":{"start":{"line":34,"column":0},"end":{"line":40,"column":2}},"16":{"start":{"line":47,"column":0},"end":{"line":49,"column":2}},"17":{"start":{"line":48,"column":2},"end":{"line":48,"column":52}},"18":{"start":{"line":56,"column":0},"end":{"line":58,"column":2}},"19":{"start":{"line":57,"column":2},"end":{"line":57,"column":54}},"20":{"start":{"line":66,"column":0},"end":{"line":93,"column":2}},"21":{"start":{"line":67,"column":2},"end":{"line":70,"column":3}},"22":{"start":{"line":68,"column":4},"end":{"line":68,"column":17}},"23":{"start":{"line":69,"column":4},"end":{"line":69,"column":17}},"24":{"start":{"line":71,"column":2},"end":{"line":73,"column":3}},"25":{"start":{"line":72,"column":4},"end":{"line":72,"column":40}},"26":{"start":{"line":74,"column":2},"end":{"line":74,"column":76}},"27":{"start":{"line":75,"column":2},"end":{"line":78,"column":79}},"28":{"start":{"line":80,"column":2},"end":{"line":80,"column":60}},"29":{"start":{"line":81,"column":2},"end":{"line":82,"column":70}},"30":{"start":{"line":83,"column":2},"end":{"line":92,"column":5}},"31":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"32":{"start":{"line":85,"column":6},"end":{"line":85,"column":21}},"33":{"start":{"line":87,"column":4},"end":{"line":87,"column":24}},"34":{"start":{"line":88,"column":4},"end":{"line":90,"column":5}},"35":{"start":{"line":89,"column":6},"end":{"line":89,"column":50}},"36":{"start":{"line":91,"column":4},"end":{"line":91,"column":16}}},"branchMap":{"1":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"2":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":35}},{"start":{"line":67,"column":39},"end":{"line":67,"column":55}}]},"3":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"4":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":23},"end":{"line":74,"column":45}},{"start":{"line":74,"column":49},"end":{"line":74,"column":75}}]},"5":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":9},"end":{"line":75,"column":52}},{"start":{"line":76,"column":4},"end":{"line":76,"column":50}},{"start":{"line":77,"column":4},"end":{"line":77,"column":49}},{"start":{"line":78,"column":4},"end":{"line":78,"column":51}}]},"6":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"7":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":4}},{"start":{"line":88,"column":4},"end":{"line":88,"column":4}}]}},"code":["// Copyright IBM Corp. 2015,2016. All Rights Reserved.","// Node module: loopback-connector","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var assert = require('assert');","var util = require('util');","var EventEmitter = require('events').EventEmitter;","var debug = require('debug')('loopback:connector:transaction');","","module.exports = Transaction;","","/**"," * Create a new Transaction object"," * @param {Connector} connector The connector instance"," * @param {*} connection A connection to the DB"," * @constructor"," */","function Transaction(connector, connection) {","  this.connector = connector;","  this.connection = connection;","  EventEmitter.call(this);","}","","util.inherits(Transaction, EventEmitter);","","// Isolation levels","Transaction.SERIALIZABLE = 'SERIALIZABLE';","Transaction.REPEATABLE_READ = 'REPEATABLE READ';","Transaction.READ_COMMITTED = 'READ COMMITTED';","Transaction.READ_UNCOMMITTED = 'READ UNCOMMITTED';","","Transaction.hookTypes = {","  BEFORE_COMMIT: 'before commit',","  AFTER_COMMIT: 'after commit',","  BEFORE_ROLLBACK: 'before rollback',","  AFTER_ROLLBACK: 'after rollback',","  TIMEOUT: 'timeout',","};","","/**"," * Commit a transaction and release it back to the pool"," * @param cb"," * @returns {*}"," */","Transaction.prototype.commit = function(cb) {","  return this.connector.commit(this.connection, cb);","};","","/**"," * Rollback a transaction and release it back to the pool"," * @param cb"," * @returns {*|boolean}"," */","Transaction.prototype.rollback = function(cb) {","  return this.connector.rollback(this.connection, cb);","};","","/**"," * Begin a new transaction"," * @param {Connector} connector The connector instance"," * @param {Object} [options] Options {isolationLevel: '...', timeout: 1000}"," * @param cb"," */","Transaction.begin = function(connector, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","  if (typeof options === 'string') {","    options = {isolationLevel: options};","  }","  var isolationLevel = options.isolationLevel || Transaction.READ_COMMITTED;","  assert(isolationLevel === Transaction.SERIALIZABLE ||","    isolationLevel === Transaction.REPEATABLE_READ ||","    isolationLevel === Transaction.READ_COMMITTED ||","    isolationLevel === Transaction.READ_UNCOMMITTED, 'Invalid isolationLevel');","","  debug('Starting a transaction with options: %j', options);","  assert(typeof connector.beginTransaction === 'function',","    'beginTransaction must be function implemented by the connector');","  connector.beginTransaction(isolationLevel, function(err, connection) {","    if (err) {","      return cb(err);","    }","    var tx = connection;","    if (!(connection instanceof Transaction)) {","      tx = new Transaction(connector, connection);","    }","    cb(err, tx);","  });","};",""],"l":{"7":1,"8":1,"9":1,"10":1,"12":1,"20":1,"21":0,"22":0,"23":0,"26":1,"29":1,"30":1,"31":1,"32":1,"34":1,"47":1,"48":0,"56":1,"57":0,"66":1,"67":0,"68":0,"69":0,"71":0,"72":0,"74":0,"75":0,"80":0,"81":0,"83":0,"84":0,"85":0,"87":0,"88":0,"89":0,"91":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/utils.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"createPromiseCallback","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":33}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":28},"end":{"line":13,"column":54}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":9},"end":{"line":14,"column":29}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":54}},"3":{"start":{"line":11,"column":0},"end":{"line":21,"column":1}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":9}},"5":{"start":{"line":13,"column":2},"end":{"line":18,"column":5}},"6":{"start":{"line":14,"column":4},"end":{"line":17,"column":6}},"7":{"start":{"line":15,"column":6},"end":{"line":15,"column":34}},"8":{"start":{"line":15,"column":15},"end":{"line":15,"column":34}},"9":{"start":{"line":16,"column":6},"end":{"line":16,"column":27}},"10":{"start":{"line":19,"column":2},"end":{"line":19,"column":23}},"11":{"start":{"line":20,"column":2},"end":{"line":20,"column":12}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":6},"end":{"line":15,"column":6}},{"start":{"line":15,"column":6},"end":{"line":15,"column":6}}]}},"code":["// Copyright IBM Corp. 2012,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var Promise = require('bluebird');","","exports.createPromiseCallback = createPromiseCallback;","","function createPromiseCallback() {","  var cb;","  var promise = new Promise(function(resolve, reject) {","    cb = function(err, data) {","      if (err) return reject(err);","      return resolve(data);","    };","  });","  cb.promise = promise;","  return cb;","}",""],"l":{"7":1,"9":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"19":0,"20":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/model-key-composer.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/model-key-composer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"composeKeyFromModelNameAndKey","line":25,"loc":{"start":{"line":25,"column":18},"end":{"line":25,"column":77}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":15},"end":{"line":32,"column":26}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":16},"end":{"line":53,"column":39}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":17},"end":{"line":62,"column":28}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":17},"end":{"line":71,"column":28}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":69}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":70}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":38}},"4":{"start":{"line":25,"column":0},"end":{"line":36,"column":2}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":37}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":56}},"7":{"start":{"line":32,"column":2},"end":{"line":34,"column":5}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":20}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":20}},"10":{"start":{"line":38,"column":0},"end":{"line":38,"column":38}},"11":{"start":{"line":53,"column":0},"end":{"line":76,"column":2}},"12":{"start":{"line":54,"column":2},"end":{"line":54,"column":37}},"13":{"start":{"line":56,"column":2},"end":{"line":56,"column":52}},"14":{"start":{"line":57,"column":2},"end":{"line":74,"column":3}},"15":{"start":{"line":58,"column":4},"end":{"line":61,"column":6}},"16":{"start":{"line":62,"column":4},"end":{"line":64,"column":7}},"17":{"start":{"line":63,"column":6},"end":{"line":63,"column":23}},"18":{"start":{"line":66,"column":4},"end":{"line":66,"column":67}},"19":{"start":{"line":67,"column":4},"end":{"line":69,"column":17}},"20":{"start":{"line":70,"column":4},"end":{"line":70,"column":33}},"21":{"start":{"line":71,"column":4},"end":{"line":73,"column":7}},"22":{"start":{"line":72,"column":6},"end":{"line":72,"column":14}},"23":{"start":{"line":75,"column":2},"end":{"line":75,"column":20}}},"branchMap":{"1":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":7},"end":{"line":26,"column":9}},{"start":{"line":26,"column":13},"end":{"line":26,"column":36}}]},"2":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":7},"end":{"line":54,"column":9}},{"start":{"line":54,"column":13},"end":{"line":54,"column":36}}]},"3":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]}},"code":["// Copyright IBM Corp. 2016. All Rights Reserved.","// Node module: loopback-connector","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","var createPromiseCallback = require('./utils').createPromiseCallback;","var debug = require('debug')('loopback:connector:model-key-composer');","var g = require('strong-globalize')();","","/**"," * Build a single key string from a tuple (modelName, key)."," *"," * This method is typically used by KeyValue connectors to build a single"," * key string for a given modelName+key tuple."," *"," * @param {String} modelName"," * @param {String} key"," * @callback {Function} cb The callback to receive the composed value."," * @param {Error} err"," * @param {String} composedKey"," * @promise"," */","exports.compose = function composeKeyFromModelNameAndKey(modelName, key, cb) {","  cb = cb || createPromiseCallback();","","  // Escape model name to prevent collision","  //   'model' + 'foo:bar' --vs-- 'model:foo' + 'bar'","  var value = encodeURIComponent(modelName) + ':' + key;","","  setImmediate(function() {","    cb(null, value);","  });","  return cb.promise;","};","","var PARSE_KEY_REGEX = /^([^:]*):(.*)/;","","/**"," * Parse a composed key string into a tuple (modelName, key)."," *"," * This method is typically used by KeyValue connectors to parse a composed"," * key string returned by SCAN/ITERATE method back to the expected"," * modelName+tuple key."," *"," * @param {String} composed The composed key as returned by `composeKey`"," * @callback {Function} cb The callback to receive the parsed result."," * @param {Error} err"," * @param {Object} result The result with properties `modelName` and `key`."," * @promise"," */","exports.parse = function(composed, cb) {","  cb = cb || createPromiseCallback();","","  var matchResult = composed.match(PARSE_KEY_REGEX);","  if (matchResult) {","    var result = {","      modelName: matchResult[1],","      key: matchResult[2],","    };","    setImmediate(function() {","      cb(null, result);","    });","  } else {","    debug('Invalid key - missing model-name prefix: %s', composed);","    var err = new Error(g.f(","      'Invalid key %j - missing model-name prefix',","      composed));","    err.code = 'NO_MODEL_PREFIX';","    setImmediate(function() {","      cb(err);","    });","  }","  return cb.promise;","};",""],"l":{"8":1,"9":1,"10":1,"25":1,"26":0,"30":0,"32":0,"33":0,"35":0,"38":1,"53":1,"54":0,"56":0,"57":0,"58":0,"62":0,"63":0,"66":0,"67":0,"70":0,"71":0,"72":0,"75":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/binary-packer.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/binary-packer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":1,"28":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"BinaryPacker","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":24}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":32},"end":{"line":34,"column":52}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":17},"end":{"line":40,"column":28}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":17},"end":{"line":44,"column":28}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":32},"end":{"line":59,"column":53}}},"6":{"name":"(anonymous_6)","line":63,"loc":{"start":{"line":63,"column":17},"end":{"line":63,"column":28}}},"7":{"name":"(anonymous_7)","line":67,"loc":{"start":{"line":67,"column":17},"end":{"line":67,"column":28}}},"8":{"name":"encodeDate","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":25}}},"9":{"name":"decodeDate","line":78,"loc":{"start":{"line":78,"column":0},"end":{"line":78,"column":25}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":69}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}},"4":{"start":{"line":20,"column":0},"end":{"line":23,"column":1}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":47}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":57}},"7":{"start":{"line":34,"column":0},"end":{"line":49,"column":2}},"8":{"start":{"line":35,"column":2},"end":{"line":35,"column":37}},"9":{"start":{"line":36,"column":2},"end":{"line":47,"column":3}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":50}},"11":{"start":{"line":40,"column":4},"end":{"line":42,"column":7}},"12":{"start":{"line":41,"column":6},"end":{"line":41,"column":21}},"13":{"start":{"line":44,"column":4},"end":{"line":46,"column":7}},"14":{"start":{"line":45,"column":6},"end":{"line":45,"column":14}},"15":{"start":{"line":48,"column":2},"end":{"line":48,"column":20}},"16":{"start":{"line":59,"column":0},"end":{"line":72,"column":2}},"17":{"start":{"line":60,"column":2},"end":{"line":60,"column":37}},"18":{"start":{"line":61,"column":2},"end":{"line":70,"column":3}},"19":{"start":{"line":62,"column":4},"end":{"line":62,"column":44}},"20":{"start":{"line":63,"column":4},"end":{"line":65,"column":7}},"21":{"start":{"line":64,"column":6},"end":{"line":64,"column":22}},"22":{"start":{"line":67,"column":4},"end":{"line":69,"column":7}},"23":{"start":{"line":68,"column":6},"end":{"line":68,"column":14}},"24":{"start":{"line":71,"column":2},"end":{"line":71,"column":20}},"25":{"start":{"line":74,"column":0},"end":{"line":76,"column":1}},"26":{"start":{"line":75,"column":2},"end":{"line":75,"column":47}},"27":{"start":{"line":78,"column":0},"end":{"line":80,"column":1}},"28":{"start":{"line":79,"column":2},"end":{"line":79,"column":40}}},"branchMap":{"1":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":7},"end":{"line":35,"column":9}},{"start":{"line":35,"column":13},"end":{"line":35,"column":36}}]},"2":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":7},"end":{"line":60,"column":9}},{"start":{"line":60,"column":13},"end":{"line":60,"column":36}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback-connector","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","var createPromiseCallback = require('./utils').createPromiseCallback;","var msgpack = require('msgpack5');","","module.exports = BinaryPacker;","","/**"," * Create a new Packer instance that can be used to convert between JavaScript"," * objects and a binary representation in a Buffer."," *"," * Compared to JSON, this encoding preserves the following JavaScript types:"," *  - Date"," */","function BinaryPacker() {","  this._packer = msgpack({forceFloat64: true});","  this._packer.register(1, Date, encodeDate, decodeDate);","}","","/**"," * Encode the provided value to a `Buffer`."," *"," * @param {*} value Any value (string, number, object)"," * @callback {Function} cb The callback to receive the parsed result."," * @param {Error} err"," * @param {Buffer} data The encoded value"," * @promise"," */","BinaryPacker.prototype.encode = function(value, cb) {","  cb = cb || createPromiseCallback();","  try {","    // msgpack5 returns https://www.npmjs.com/package/bl instead of Buffer","    // use .slice() to convert to a Buffer","    var data = this._packer.encode(value).slice();","    setImmediate(function() {","      cb(null, data);","    });","  } catch (err) {","    setImmediate(function() {","      cb(err);","    });","  }","  return cb.promise;","};","","/**"," * Decode the binary value back to a JavaScript value."," * @param {Buffer} binary The binary input."," * @callback {Function} cb The callback to receive the composed value."," * @param {Error} err"," * @param {*} value Decoded value."," * @promise"," */","BinaryPacker.prototype.decode = function(binary, cb) {","  cb = cb || createPromiseCallback();","  try {","    var value = this._packer.decode(binary);","    setImmediate(function() {","      cb(null, value);","    });","  } catch (err) {","    setImmediate(function() {","      cb(err);","    });","  }","  return cb.promise;","};","","function encodeDate(obj) {","  return new Buffer(obj.toISOString(), 'utf8');","}","","function decodeDate(buf) {","  return new Date(buf.toString('utf8'));","}",""],"l":{"8":1,"9":1,"11":1,"20":1,"21":0,"22":0,"34":1,"35":0,"36":0,"39":0,"40":0,"41":0,"44":0,"45":0,"48":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"67":0,"68":0,"71":0,"74":1,"75":0,"78":1,"79":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/json-string-packer.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector/lib/json-string-packer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"JSONStringPacker","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":36},"end":{"line":33,"column":56}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":37},"end":{"line":38,"column":58}}},"4":{"name":"(anonymous_4)","line":49,"loc":{"start":{"line":49,"column":17},"end":{"line":49,"column":28}}},"5":{"name":"(anonymous_5)","line":53,"loc":{"start":{"line":53,"column":17},"end":{"line":53,"column":28}}},"6":{"name":"(anonymous_6)","line":68,"loc":{"start":{"line":68,"column":36},"end":{"line":68,"column":61}}},"7":{"name":"(anonymous_7)","line":73,"loc":{"start":{"line":73,"column":39},"end":{"line":73,"column":54}}},"8":{"name":"(anonymous_8)","line":85,"loc":{"start":{"line":85,"column":17},"end":{"line":85,"column":28}}},"9":{"name":"(anonymous_9)","line":89,"loc":{"start":{"line":89,"column":17},"end":{"line":89,"column":28}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":69}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":105}},"4":{"start":{"line":20,"column":0},"end":{"line":22,"column":1}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":39}},"6":{"start":{"line":33,"column":0},"end":{"line":58,"column":2}},"7":{"start":{"line":34,"column":2},"end":{"line":34,"column":31}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":37}},"9":{"start":{"line":37,"column":2},"end":{"line":56,"column":3}},"10":{"start":{"line":38,"column":4},"end":{"line":47,"column":7}},"11":{"start":{"line":39,"column":6},"end":{"line":46,"column":7}},"12":{"start":{"line":40,"column":8},"end":{"line":43,"column":10}},"13":{"start":{"line":45,"column":8},"end":{"line":45,"column":21}},"14":{"start":{"line":49,"column":4},"end":{"line":51,"column":7}},"15":{"start":{"line":50,"column":6},"end":{"line":50,"column":21}},"16":{"start":{"line":53,"column":4},"end":{"line":55,"column":7}},"17":{"start":{"line":54,"column":6},"end":{"line":54,"column":14}},"18":{"start":{"line":57,"column":2},"end":{"line":57,"column":20}},"19":{"start":{"line":68,"column":0},"end":{"line":94,"column":2}},"20":{"start":{"line":69,"column":2},"end":{"line":69,"column":31}},"21":{"start":{"line":71,"column":2},"end":{"line":71,"column":37}},"22":{"start":{"line":72,"column":2},"end":{"line":92,"column":3}},"23":{"start":{"line":73,"column":4},"end":{"line":83,"column":7}},"24":{"start":{"line":74,"column":6},"end":{"line":76,"column":7}},"25":{"start":{"line":75,"column":8},"end":{"line":75,"column":44}},"26":{"start":{"line":78,"column":6},"end":{"line":80,"column":7}},"27":{"start":{"line":79,"column":8},"end":{"line":79,"column":27}},"28":{"start":{"line":82,"column":6},"end":{"line":82,"column":15}},"29":{"start":{"line":85,"column":4},"end":{"line":87,"column":7}},"30":{"start":{"line":86,"column":6},"end":{"line":86,"column":22}},"31":{"start":{"line":89,"column":4},"end":{"line":91,"column":7}},"32":{"start":{"line":90,"column":6},"end":{"line":90,"column":14}},"33":{"start":{"line":93,"column":2},"end":{"line":93,"column":20}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":18},"end":{"line":21,"column":26}},{"start":{"line":21,"column":30},"end":{"line":21,"column":38}}]},"2":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":7},"end":{"line":36,"column":9}},{"start":{"line":36,"column":13},"end":{"line":36,"column":36}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":6}},{"start":{"line":39,"column":6},"end":{"line":39,"column":6}}]},"4":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":7},"end":{"line":71,"column":9}},{"start":{"line":71,"column":13},"end":{"line":71,"column":36}}]},"5":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":6}},{"start":{"line":74,"column":6},"end":{"line":74,"column":6}}]},"6":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":10},"end":{"line":74,"column":11}},{"start":{"line":74,"column":15},"end":{"line":74,"column":21}},{"start":{"line":74,"column":25},"end":{"line":74,"column":44}}]},"7":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":6},"end":{"line":78,"column":6}},{"start":{"line":78,"column":6},"end":{"line":78,"column":6}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback-connector","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","var createPromiseCallback = require('./utils').createPromiseCallback;","","module.exports = JSONStringPacker;","","var ISO_DATE_REGEXP = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/;","","/**"," * Create a new Packer instance that can be used to convert between JavaScript"," * objects and a JsonString representation in a String."," *"," * @param {String} encoding Buffer encoding refer to https://nodejs.org/api/buffer.html#buffer_buffers_and_character_encodings"," */","function JSONStringPacker(encoding) {","  this.encoding = encoding || 'base64';","}","","/**"," * Encode the provided value to a `JsonString`."," *"," * @param {*} value Any value (string, number, object)"," * @callback {Function} cb The callback to receive the parsed result."," * @param {Error} err"," * @param {Buffer} data The encoded value"," * @promise"," */","JSONStringPacker.prototype.encode = function(value, cb) {","  var encoding = this.encoding;","","  cb = cb || createPromiseCallback();","  try {","    var data = JSON.stringify(value, function(key, value) {","      if (Buffer.isBuffer(this[key])) {","        return {","          type: 'Buffer',","          data: this[key].toString(encoding),","        };","      } else {","        return value;","      }","    });","","    setImmediate(function() {","      cb(null, data);","    });","  } catch (err) {","    setImmediate(function() {","      cb(err);","    });","  }","  return cb.promise;","};","","/**"," * Decode the JsonString value back to a JavaScript value."," * @param {String} jsonString The JsonString input."," * @callback {Function} cb The callback to receive the composed value."," * @param {Error} err"," * @param {*} value Decoded value."," * @promise"," */","JSONStringPacker.prototype.decode = function(jsonString, cb) {","  var encoding = this.encoding;","","  cb = cb || createPromiseCallback();","  try {","    var value = JSON.parse(jsonString, function(k, v) {","      if (v && v.type && v.type === 'Buffer') {","        return new Buffer(v.data, encoding);","      }","","      if (ISO_DATE_REGEXP.exec(v)) {","        return new Date(v);","      }","","      return v;","    });","","    setImmediate(function() {","      cb(null, value);","    });","  } catch (err) {","    setImmediate(function() {","      cb(err);","    });","  }","  return cb.promise;","};",""],"l":{"8":1,"10":1,"12":1,"20":1,"21":0,"33":1,"34":0,"36":0,"37":0,"38":0,"39":0,"40":0,"45":0,"49":0,"50":0,"53":0,"54":0,"57":0,"68":1,"69":0,"71":0,"72":0,"73":0,"74":0,"75":0,"78":0,"79":0,"82":0,"85":0,"86":0,"89":0,"90":0,"93":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/dao.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/dao.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":1,"30":0,"31":1,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":1,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":1,"181":0,"182":0,"183":0,"184":0,"185":0,"186":1,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":1,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":1,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":1,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":1,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":1,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":1,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":1,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":1,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":1,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":1,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":1,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":1,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":1,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":1,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":1,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":1,"564":0,"565":1,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":1,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":1,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":1,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":1,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":1,"729":0,"730":1,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":1,"739":1,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":1,"795":0,"796":0,"797":0,"798":0,"799":1,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":1,"808":0,"809":0,"810":1,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":1,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":1,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":1,"956":0,"957":0,"958":0,"959":0,"960":0,"961":1,"962":1,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":1,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":1,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":1,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":1,"1046":0,"1047":1,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":1,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":1,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1122":1,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":1,"1132":0,"1133":1,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":1,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":1,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":1,"1248":0,"1249":0,"1250":0,"1251":1,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":1,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1297":0,"1298":0,"1299":0,"1300":0,"1301":0,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":1,"1316":0,"1317":0,"1318":0,"1319":0,"1320":0,"1321":0,"1322":0,"1323":1,"1324":0,"1325":0,"1326":0,"1327":0,"1328":0,"1329":0,"1330":0,"1331":0,"1332":0,"1333":0,"1334":0,"1335":0,"1336":0,"1337":1,"1338":0,"1339":1,"1340":0,"1341":1,"1342":0,"1343":0,"1344":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1355":0,"1356":0,"1357":0,"1358":0,"1359":0,"1360":0,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1366":0,"1367":0,"1368":1,"1369":0,"1370":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":0,"1376":0,"1377":0,"1378":0,"1379":0,"1380":0,"1381":0,"1382":0,"1383":0,"1384":1,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":0,"1391":0,"1392":0,"1393":0,"1394":0,"1395":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":1,"1402":0,"1403":1,"1404":0,"1405":0,"1406":0,"1407":1,"1408":0,"1409":0,"1410":0,"1411":0,"1412":0,"1413":0,"1414":0,"1415":0,"1416":1,"1417":0,"1418":0,"1419":0,"1420":0,"1421":1,"1422":0,"1423":0,"1424":0,"1425":1,"1426":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":0,"1432":0,"1433":0,"1434":0,"1435":0,"1436":0,"1437":0,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":0,"1450":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":0,"1459":0,"1460":0,"1461":0,"1462":0,"1463":0,"1464":0,"1465":0,"1466":0,"1467":0,"1468":0,"1469":0,"1470":0,"1471":0,"1472":0,"1473":0,"1474":0,"1475":0,"1476":1,"1477":0,"1478":0,"1479":0,"1480":0,"1481":0,"1482":0,"1483":0,"1484":0,"1485":0,"1486":0,"1487":0,"1488":0,"1489":0,"1490":0,"1491":0,"1492":1,"1493":0,"1494":0,"1495":0,"1496":1,"1497":0,"1498":0,"1499":0,"1500":0,"1501":0,"1502":0,"1503":0,"1504":0,"1505":0,"1506":0,"1507":0,"1508":0,"1509":0,"1510":0,"1511":0,"1512":0,"1513":0,"1514":0,"1515":0,"1516":1,"1517":0,"1518":0,"1519":0,"1520":0,"1521":0,"1522":0,"1523":0,"1524":0,"1525":0,"1526":0,"1527":0,"1528":0,"1529":0,"1530":0,"1531":0,"1532":0,"1533":0,"1534":0,"1535":0,"1536":0,"1537":0,"1538":0,"1539":0,"1540":0,"1541":0,"1542":0,"1543":0,"1544":0,"1545":0,"1546":0,"1547":0,"1548":0,"1549":0,"1550":0,"1551":0,"1552":0,"1553":0,"1554":0,"1555":0,"1556":0,"1557":0,"1558":0,"1559":0,"1560":0,"1561":0,"1562":0,"1563":0,"1564":1,"1565":0,"1566":0,"1567":0,"1568":0,"1569":0,"1570":0,"1571":0,"1572":0,"1573":0,"1574":0,"1575":0,"1576":0,"1577":0,"1578":0,"1579":0,"1580":0,"1581":0,"1582":0,"1583":1,"1584":0,"1585":0,"1586":0,"1587":0,"1588":0,"1589":1,"1590":0,"1591":0,"1592":0,"1593":0,"1594":0,"1595":0,"1596":0,"1597":0,"1598":0,"1599":0,"1600":0,"1601":0,"1602":0,"1603":0,"1604":0,"1605":0,"1606":0,"1607":0,"1608":0,"1609":0,"1610":0,"1611":0,"1612":1,"1613":0,"1614":0,"1615":0,"1616":0,"1617":1,"1618":0,"1619":1,"1620":1,"1621":0,"1622":0,"1623":0,"1624":0,"1625":1,"1626":1,"1627":1,"1628":1,"1629":0,"1630":0,"1631":1,"1632":1,"1633":0,"1634":0,"1635":0,"1636":0,"1637":0,"1638":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0,0],"236":[0,0],"237":[0,0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0,0],"243":[0,0],"244":[0,0,0],"245":[0,0],"246":[0,0,0],"247":[0,0],"248":[0,0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0,0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0,0,0,0,0,0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0],"298":[0,0],"299":[0,0],"300":[0,0],"301":[0,0],"302":[0,0],"303":[0,0],"304":[0,0],"305":[0,0,0,0,0],"306":[0,0],"307":[0,0],"308":[0,0],"309":[0,0],"310":[0,0],"311":[0,0],"312":[0,0],"313":[0,0],"314":[0,0],"315":[0,0],"316":[0,0],"317":[0,0],"318":[0,0],"319":[0,0],"320":[0,0],"321":[0,0],"322":[0,0],"323":[0,0],"324":[0,0],"325":[0,0],"326":[0,0],"327":[0,0],"328":[0,0],"329":[0,0],"330":[0,0],"331":[0,0],"332":[0,0],"333":[0,0],"334":[0,0],"335":[0,0],"336":[0,0],"337":[0,0],"338":[0,0],"339":[0,0],"340":[0,0],"341":[0,0],"342":[0,0],"343":[0,0],"344":[0,0],"345":[0,0],"346":[0,0],"347":[0,0],"348":[0,0],"349":[0,0],"350":[0,0],"351":[0,0],"352":[0,0],"353":[0,0],"354":[0,0],"355":[0,0],"356":[0,0],"357":[0,0],"358":[0,0],"359":[0,0],"360":[0,0],"361":[0,0],"362":[0,0],"363":[0,0],"364":[0,0,0],"365":[0,0],"366":[0,0],"367":[0,0],"368":[0,0],"369":[0,0],"370":[0,0],"371":[0,0],"372":[0,0],"373":[0,0],"374":[0,0],"375":[0,0],"376":[0,0],"377":[0,0],"378":[0,0],"379":[0,0],"380":[0,0],"381":[0,0],"382":[0,0],"383":[0,0],"384":[0,0,0],"385":[0,0],"386":[0,0],"387":[0,0],"388":[0,0],"389":[0,0],"390":[0,0],"391":[0,0],"392":[0,0],"393":[0,0],"394":[0,0],"395":[0,0],"396":[0,0],"397":[0,0],"398":[0,0],"399":[0,0],"400":[0,0],"401":[0,0],"402":[0,0],"403":[0,0],"404":[0,0],"405":[0,0],"406":[0,0],"407":[0,0],"408":[0,0],"409":[0,0],"410":[0,0],"411":[0,0],"412":[0,0],"413":[0,0],"414":[0,0],"415":[0,0],"416":[0,0],"417":[0,0],"418":[0,0],"419":[0,0],"420":[0,0],"421":[0,0],"422":[0,0],"423":[0,0],"424":[0,0],"425":[0,0],"426":[0,0],"427":[0,0],"428":[0,0],"429":[0,0],"430":[0,0,0,0],"431":[0,0],"432":[0,0],"433":[0,0],"434":[0,0],"435":[0,0],"436":[0,0],"437":[0,0],"438":[0,0],"439":[0,0],"440":[0,0],"441":[0,0],"442":[0,0],"443":[0,0],"444":[0,0],"445":[0,0],"446":[0,0],"447":[0,0],"448":[0,0],"449":[0,0],"450":[0,0],"451":[0,0],"452":[0,0],"453":[0,0],"454":[0,0],"455":[0,0],"456":[0,0],"457":[0,0],"458":[0,0],"459":[0,0],"460":[0,0],"461":[0,0],"462":[0,0],"463":[0,0],"464":[0,0],"465":[0,0],"466":[0,0],"467":[0,0],"468":[0,0],"469":[0,0],"470":[0,0],"471":[0,0],"472":[0,0],"473":[0,0],"474":[0,0],"475":[0,0],"476":[0,0],"477":[0,0],"478":[0,0],"479":[0,0],"480":[0,0],"481":[0,0],"482":[0,0],"483":[0,0],"484":[0,0],"485":[0,0],"486":[0,0],"487":[0,0],"488":[0,0],"489":[0,0],"490":[0,0],"491":[0,0],"492":[0,0],"493":[0,0],"494":[0,0],"495":[0,0],"496":[0,0],"497":[0,0],"498":[0,0],"499":[0,0],"500":[0,0],"501":[0,0],"502":[0,0],"503":[0,0],"504":[0,0],"505":[0,0],"506":[0,0],"507":[0,0],"508":[0,0],"509":[0,0],"510":[0,0],"511":[0,0],"512":[0,0],"513":[0,0],"514":[0,0],"515":[0,0],"516":[0,0],"517":[0,0],"518":[0,0],"519":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0},"fnMap":{"1":{"name":"DataAccessObject","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":28}}},"2":{"name":"(anonymous_2)","line":50,"loc":{"start":{"line":50,"column":37},"end":{"line":50,"column":49}}},"3":{"name":"idName","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":19}}},"4":{"name":"getIdValue","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":29}}},"5":{"name":"copyData","line":64,"loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":28}}},"6":{"name":"convertSubsetOfPropertiesByType","line":70,"loc":{"start":{"line":70,"column":0},"end":{"line":70,"column":53}}},"7":{"name":"applyStrictCheck","line":88,"loc":{"start":{"line":88,"column":0},"end":{"line":88,"column":57}}},"8":{"name":"setIdValue","line":103,"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":36}}},"9":{"name":"byIdQuery","line":109,"loc":{"start":{"line":109,"column":0},"end":{"line":109,"column":26}}},"10":{"name":"isWhereByGivenId","line":116,"loc":{"start":{"line":116,"column":0},"end":{"line":116,"column":49}}},"11":{"name":"(anonymous_11)","line":126,"loc":{"start":{"line":126,"column":26},"end":{"line":126,"column":41}}},"12":{"name":"(anonymous_12)","line":142,"loc":{"start":{"line":142,"column":32},"end":{"line":142,"column":55}}},"13":{"name":"(anonymous_13)","line":150,"loc":{"start":{"line":150,"column":30},"end":{"line":150,"column":52}}},"14":{"name":"(anonymous_14)","line":157,"loc":{"start":{"line":157,"column":35},"end":{"line":157,"column":56}}},"15":{"name":"(anonymous_15)","line":172,"loc":{"start":{"line":172,"column":31},"end":{"line":172,"column":46}}},"16":{"name":"(anonymous_16)","line":180,"loc":{"start":{"line":180,"column":32},"end":{"line":180,"column":43}}},"17":{"name":"(anonymous_17)","line":190,"loc":{"start":{"line":190,"column":43},"end":{"line":190,"column":61}}},"18":{"name":"noCallback","line":210,"loc":{"start":{"line":210,"column":0},"end":{"line":210,"column":33}}},"19":{"name":"(anonymous_19)","line":232,"loc":{"start":{"line":232,"column":26},"end":{"line":232,"column":54}}},"20":{"name":"(anonymous_20)","line":278,"loc":{"start":{"line":278,"column":20},"end":{"line":278,"column":41}}},"21":{"name":"(anonymous_21)","line":279,"loc":{"start":{"line":279,"column":33},"end":{"line":279,"column":55}}},"22":{"name":"(anonymous_22)","line":283,"loc":{"start":{"line":283,"column":7},"end":{"line":283,"column":30}}},"23":{"name":"(anonymous_23)","line":328,"loc":{"start":{"line":328,"column":50},"end":{"line":328,"column":64}}},"24":{"name":"(anonymous_24)","line":344,"loc":{"start":{"line":344,"column":16},"end":{"line":344,"column":32}}},"25":{"name":"create","line":353,"loc":{"start":{"line":353,"column":2},"end":{"line":353,"column":20}}},"26":{"name":"(anonymous_26)","line":354,"loc":{"start":{"line":354,"column":26},"end":{"line":354,"column":47}}},"27":{"name":"(anonymous_27)","line":355,"loc":{"start":{"line":355,"column":26},"end":{"line":355,"column":45}}},"28":{"name":"createCallback","line":359,"loc":{"start":{"line":359,"column":8},"end":{"line":359,"column":46}}},"29":{"name":"(anonymous_29)","line":379,"loc":{"start":{"line":379,"column":53},"end":{"line":379,"column":67}}},"30":{"name":"(anonymous_30)","line":389,"loc":{"start":{"line":389,"column":31},"end":{"line":389,"column":42}}},"31":{"name":"(anonymous_31)","line":390,"loc":{"start":{"line":390,"column":35},"end":{"line":390,"column":46}}},"32":{"name":"(anonymous_32)","line":402,"loc":{"start":{"line":402,"column":65},"end":{"line":402,"column":79}}},"33":{"name":"(anonymous_33)","line":421,"loc":{"start":{"line":421,"column":52},"end":{"line":421,"column":66}}},"34":{"name":"stillConnecting","line":437,"loc":{"start":{"line":437,"column":0},"end":{"line":437,"column":48}}},"35":{"name":"(anonymous_35)","line":469,"loc":{"start":{"line":469,"column":26},"end":{"line":469,"column":54}}},"36":{"name":"doUpdateOrCreate","line":521,"loc":{"start":{"line":521,"column":2},"end":{"line":521,"column":38}}},"37":{"name":"(anonymous_37)","line":533,"loc":{"start":{"line":533,"column":54},"end":{"line":533,"column":73}}},"38":{"name":"(anonymous_38)","line":565,"loc":{"start":{"line":565,"column":23},"end":{"line":565,"column":39}}},"39":{"name":"callConnector","line":580,"loc":{"start":{"line":580,"column":8},"end":{"line":580,"column":33}}},"40":{"name":"(anonymous_40)","line":590,"loc":{"start":{"line":590,"column":54},"end":{"line":590,"column":68}}},"41":{"name":"done","line":599,"loc":{"start":{"line":599,"column":8},"end":{"line":599,"column":39}}},"42":{"name":"(anonymous_42)","line":608,"loc":{"start":{"line":608,"column":53},"end":{"line":608,"column":67}}},"43":{"name":"(anonymous_43)","line":630,"loc":{"start":{"line":630,"column":63},"end":{"line":630,"column":77}}},"44":{"name":"(anonymous_44)","line":645,"loc":{"start":{"line":645,"column":52},"end":{"line":645,"column":72}}},"45":{"name":"(anonymous_45)","line":683,"loc":{"start":{"line":683,"column":35},"end":{"line":683,"column":70}}},"46":{"name":"(anonymous_46)","line":702,"loc":{"start":{"line":702,"column":21},"end":{"line":702,"column":32}}},"47":{"name":"doUpsertWithWhere","line":718,"loc":{"start":{"line":718,"column":2},"end":{"line":718,"column":39}}},"48":{"name":"(anonymous_48)","line":729,"loc":{"start":{"line":729,"column":54},"end":{"line":729,"column":73}}},"49":{"name":"(anonymous_49)","line":747,"loc":{"start":{"line":747,"column":21},"end":{"line":747,"column":37}}},"50":{"name":"callConnector","line":752,"loc":{"start":{"line":752,"column":8},"end":{"line":752,"column":33}}},"51":{"name":"(anonymous_51)","line":759,"loc":{"start":{"line":759,"column":36},"end":{"line":759,"column":47}}},"52":{"name":"(anonymous_52)","line":771,"loc":{"start":{"line":771,"column":54},"end":{"line":771,"column":68}}},"53":{"name":"done","line":776,"loc":{"start":{"line":776,"column":8},"end":{"line":776,"column":39}}},"54":{"name":"(anonymous_54)","line":785,"loc":{"start":{"line":785,"column":52},"end":{"line":785,"column":66}}},"55":{"name":"(anonymous_55)","line":801,"loc":{"start":{"line":801,"column":59},"end":{"line":801,"column":73}}},"56":{"name":"(anonymous_56)","line":812,"loc":{"start":{"line":812,"column":48},"end":{"line":812,"column":73}}},"57":{"name":"(anonymous_57)","line":821,"loc":{"start":{"line":821,"column":27},"end":{"line":821,"column":38}}},"58":{"name":"replaceOrCreate","line":842,"loc":{"start":{"line":842,"column":35},"end":{"line":842,"column":79}}},"59":{"name":"doReplaceOrCreate","line":896,"loc":{"start":{"line":896,"column":2},"end":{"line":896,"column":39}}},"60":{"name":"(anonymous_60)","line":908,"loc":{"start":{"line":908,"column":54},"end":{"line":908,"column":73}}},"61":{"name":"validateAndCallConnector","line":917,"loc":{"start":{"line":917,"column":8},"end":{"line":917,"column":47}}},"62":{"name":"(anonymous_62)","line":933,"loc":{"start":{"line":933,"column":23},"end":{"line":933,"column":39}}},"63":{"name":"callConnector","line":938,"loc":{"start":{"line":938,"column":10},"end":{"line":938,"column":35}}},"64":{"name":"(anonymous_64)","line":948,"loc":{"start":{"line":948,"column":56},"end":{"line":948,"column":70}}},"65":{"name":"done","line":953,"loc":{"start":{"line":953,"column":10},"end":{"line":953,"column":41}}},"66":{"name":"(anonymous_66)","line":962,"loc":{"start":{"line":962,"column":55},"end":{"line":962,"column":69}}},"67":{"name":"(anonymous_67)","line":983,"loc":{"start":{"line":983,"column":63},"end":{"line":983,"column":77}}},"68":{"name":"(anonymous_68)","line":996,"loc":{"start":{"line":996,"column":52},"end":{"line":996,"column":73}}},"69":{"name":"findOrCreate","line":1029,"loc":{"start":{"line":1029,"column":32},"end":{"line":1029,"column":80}}},"70":{"name":"_findOrCreate","line":1074,"loc":{"start":{"line":1074,"column":2},"end":{"line":1074,"column":55}}},"71":{"name":"findOrCreateCallback","line":1076,"loc":{"start":{"line":1076,"column":4},"end":{"line":1076,"column":54}}},"72":{"name":"(anonymous_72)","line":1085,"loc":{"start":{"line":1085,"column":49},"end":{"line":1085,"column":63}}},"73":{"name":"(anonymous_73)","line":1103,"loc":{"start":{"line":1103,"column":57},"end":{"line":1103,"column":71}}},"74":{"name":"(anonymous_74)","line":1131,"loc":{"start":{"line":1131,"column":48},"end":{"line":1131,"column":62}}},"75":{"name":"(anonymous_75)","line":1148,"loc":{"start":{"line":1148,"column":23},"end":{"line":1148,"column":34}}},"76":{"name":"(anonymous_76)","line":1162,"loc":{"start":{"line":1162,"column":47},"end":{"line":1162,"column":66}}},"77":{"name":"(anonymous_77)","line":1181,"loc":{"start":{"line":1181,"column":54},"end":{"line":1181,"column":73}}},"78":{"name":"(anonymous_78)","line":1198,"loc":{"start":{"line":1198,"column":20},"end":{"line":1198,"column":36}}},"79":{"name":"(anonymous_79)","line":1208,"loc":{"start":{"line":1208,"column":34},"end":{"line":1208,"column":56}}},"80":{"name":"(anonymous_80)","line":1217,"loc":{"start":{"line":1217,"column":34},"end":{"line":1217,"column":56}}},"81":{"name":"exists","line":1236,"loc":{"start":{"line":1236,"column":26},"end":{"line":1236,"column":59}}},"82":{"name":"(anonymous_82)","line":1258,"loc":{"start":{"line":1258,"column":51},"end":{"line":1258,"column":72}}},"83":{"name":"(anonymous_83)","line":1262,"loc":{"start":{"line":1262,"column":21},"end":{"line":1262,"column":32}}},"84":{"name":"findById","line":1286,"loc":{"start":{"line":1286,"column":28},"end":{"line":1286,"column":71}}},"85":{"name":"(anonymous_85)","line":1324,"loc":{"start":{"line":1324,"column":21},"end":{"line":1324,"column":32}}},"86":{"name":"(anonymous_86)","line":1347,"loc":{"start":{"line":1347,"column":29},"end":{"line":1347,"column":63}}},"87":{"name":"(anonymous_87)","line":1374,"loc":{"start":{"line":1374,"column":21},"end":{"line":1374,"column":32}}},"88":{"name":"(anonymous_88)","line":1387,"loc":{"start":{"line":1387,"column":29},"end":{"line":1387,"column":52}}},"89":{"name":"convertNullToNotFoundError","line":1393,"loc":{"start":{"line":1393,"column":0},"end":{"line":1393,"column":45}}},"90":{"name":"(anonymous_90)","line":1405,"loc":{"start":{"line":1405,"column":23},"end":{"line":1405,"column":34}}},"91":{"name":"(anonymous_91)","line":1414,"loc":{"start":{"line":1414,"column":31},"end":{"line":1414,"column":45}}},"92":{"name":"(anonymous_92)","line":1454,"loc":{"start":{"line":1454,"column":30},"end":{"line":1454,"column":56}}},"93":{"name":"DateType","line":1539,"loc":{"start":{"line":1539,"column":0},"end":{"line":1539,"column":23}}},"94":{"name":"BooleanType","line":1547,"loc":{"start":{"line":1547,"column":0},"end":{"line":1547,"column":26}}},"95":{"name":"NumberType","line":1564,"loc":{"start":{"line":1564,"column":0},"end":{"line":1564,"column":25}}},"96":{"name":"coerceArray","line":1569,"loc":{"start":{"line":1569,"column":0},"end":{"line":1569,"column":26}}},"97":{"name":"(anonymous_97)","line":1605,"loc":{"start":{"line":1605,"column":27},"end":{"line":1605,"column":52}}},"98":{"name":"find","line":1845,"loc":{"start":{"line":1845,"column":24},"end":{"line":1845,"column":58}}},"99":{"name":"(anonymous_99)","line":1883,"loc":{"start":{"line":1883,"column":21},"end":{"line":1883,"column":32}}},"100":{"name":"withNotifyGeo","line":1908,"loc":{"start":{"line":1908,"column":6},"end":{"line":1908,"column":31}}},"101":{"name":"(anonymous_101)","line":1915,"loc":{"start":{"line":1915,"column":50},"end":{"line":1915,"column":69}}},"102":{"name":"queryGeo","line":1921,"loc":{"start":{"line":1921,"column":6},"end":{"line":1921,"column":31}}},"103":{"name":"geoCallbackWithoutNotify","line":1922,"loc":{"start":{"line":1922,"column":8},"end":{"line":1922,"column":53}}},"104":{"name":"(anonymous_104)","line":1935,"loc":{"start":{"line":1935,"column":25},"end":{"line":1935,"column":39}}},"105":{"name":"(anonymous_105)","line":1936,"loc":{"start":{"line":1936,"column":53},"end":{"line":1936,"column":64}}},"106":{"name":"geoCallbackWithNotify","line":1948,"loc":{"start":{"line":1948,"column":8},"end":{"line":1948,"column":50}}},"107":{"name":"(anonymous_107)","line":1951,"loc":{"start":{"line":1951,"column":26},"end":{"line":1951,"column":47}}},"108":{"name":"(anonymous_108)","line":1960,"loc":{"start":{"line":1960,"column":54},"end":{"line":1960,"column":68}}},"109":{"name":"(anonymous_109)","line":1964,"loc":{"start":{"line":1964,"column":13},"end":{"line":1964,"column":36}}},"110":{"name":"(anonymous_110)","line":1982,"loc":{"start":{"line":1982,"column":14},"end":{"line":1982,"column":34}}},"111":{"name":"(anonymous_111)","line":1984,"loc":{"start":{"line":1984,"column":22},"end":{"line":1984,"column":43}}},"112":{"name":"buildResult","line":1992,"loc":{"start":{"line":1992,"column":8},"end":{"line":1992,"column":45}}},"113":{"name":"(anonymous_113)","line":2019,"loc":{"start":{"line":2019,"column":31},"end":{"line":2019,"column":45}}},"114":{"name":"withNotify","line":2039,"loc":{"start":{"line":2039,"column":8},"end":{"line":2039,"column":44}}},"115":{"name":"(anonymous_115)","line":2048,"loc":{"start":{"line":2048,"column":53},"end":{"line":2048,"column":67}}},"116":{"name":"(anonymous_116)","line":2054,"loc":{"start":{"line":2054,"column":6},"end":{"line":2054,"column":29}}},"117":{"name":"(anonymous_117)","line":2090,"loc":{"start":{"line":2090,"column":46},"end":{"line":2090,"column":65}}},"118":{"name":"isDefined","line":2101,"loc":{"start":{"line":2101,"column":0},"end":{"line":2101,"column":26}}},"119":{"name":"findOne","line":2113,"loc":{"start":{"line":2113,"column":27},"end":{"line":2113,"column":64}}},"120":{"name":"(anonymous_120)","line":2140,"loc":{"start":{"line":2140,"column":28},"end":{"line":2140,"column":54}}},"121":{"name":"destroyAll","line":2163,"loc":{"start":{"line":2163,"column":30},"end":{"line":2163,"column":70}}},"122":{"name":"(anonymous_122)","line":2211,"loc":{"start":{"line":2211,"column":47},"end":{"line":2211,"column":66}}},"123":{"name":"(anonymous_123)","line":2219,"loc":{"start":{"line":2219,"column":56},"end":{"line":2219,"column":75}}},"124":{"name":"doDelete","line":2226,"loc":{"start":{"line":2226,"column":2},"end":{"line":2226,"column":27}}},"125":{"name":"(anonymous_125)","line":2246,"loc":{"start":{"line":2246,"column":32},"end":{"line":2246,"column":43}}},"126":{"name":"done","line":2258,"loc":{"start":{"line":2258,"column":4},"end":{"line":2258,"column":29}}},"127":{"name":"(anonymous_127)","line":2272,"loc":{"start":{"line":2272,"column":55},"end":{"line":2272,"column":69}}},"128":{"name":"whereIsEmpty","line":2280,"loc":{"start":{"line":2280,"column":0},"end":{"line":2280,"column":29}}},"129":{"name":"deleteById","line":2297,"loc":{"start":{"line":2297,"column":30},"end":{"line":2297,"column":67}}},"130":{"name":"(anonymous_130)","line":2321,"loc":{"start":{"line":2321,"column":21},"end":{"line":2321,"column":32}}},"131":{"name":"(anonymous_131)","line":2329,"loc":{"start":{"line":2329,"column":50},"end":{"line":2329,"column":70}}},"132":{"name":"(anonymous_132)","line":2358,"loc":{"start":{"line":2358,"column":25},"end":{"line":2358,"column":54}}},"133":{"name":"(anonymous_133)","line":2403,"loc":{"start":{"line":2403,"column":21},"end":{"line":2403,"column":32}}},"134":{"name":"(anonymous_134)","line":2415,"loc":{"start":{"line":2415,"column":44},"end":{"line":2415,"column":63}}},"135":{"name":"(anonymous_135)","line":2440,"loc":{"start":{"line":2440,"column":34},"end":{"line":2440,"column":56}}},"136":{"name":"(anonymous_136)","line":2488,"loc":{"start":{"line":2488,"column":50},"end":{"line":2488,"column":64}}},"137":{"name":"(anonymous_137)","line":2500,"loc":{"start":{"line":2500,"column":17},"end":{"line":2500,"column":33}}},"138":{"name":"save","line":2514,"loc":{"start":{"line":2514,"column":4},"end":{"line":2514,"column":20}}},"139":{"name":"(anonymous_139)","line":2515,"loc":{"start":{"line":2515,"column":27},"end":{"line":2515,"column":46}}},"140":{"name":"(anonymous_140)","line":2516,"loc":{"start":{"line":2516,"column":31},"end":{"line":2516,"column":52}}},"141":{"name":"saveCallback","line":2518,"loc":{"start":{"line":2518,"column":10},"end":{"line":2518,"column":57}}},"142":{"name":"(anonymous_142)","line":2530,"loc":{"start":{"line":2530,"column":55},"end":{"line":2530,"column":69}}},"143":{"name":"(anonymous_143)","line":2542,"loc":{"start":{"line":2542,"column":61},"end":{"line":2542,"column":75}}},"144":{"name":"(anonymous_144)","line":2544,"loc":{"start":{"line":2544,"column":38},"end":{"line":2544,"column":49}}},"145":{"name":"(anonymous_145)","line":2545,"loc":{"start":{"line":2545,"column":38},"end":{"line":2545,"column":49}}},"146":{"name":"(anonymous_146)","line":2562,"loc":{"start":{"line":2562,"column":54},"end":{"line":2562,"column":68}}},"147":{"name":"(anonymous_147)","line":2595,"loc":{"start":{"line":2595,"column":29},"end":{"line":2595,"column":64}}},"148":{"name":"(anonymous_148)","line":2653,"loc":{"start":{"line":2653,"column":45},"end":{"line":2653,"column":64}}},"149":{"name":"(anonymous_149)","line":2663,"loc":{"start":{"line":2663,"column":6},"end":{"line":2663,"column":25}}},"150":{"name":"doUpdate","line":2669,"loc":{"start":{"line":2669,"column":2},"end":{"line":2669,"column":33}}},"151":{"name":"(anonymous_151)","line":2676,"loc":{"start":{"line":2676,"column":30},"end":{"line":2676,"column":41}}},"152":{"name":"updateCallback","line":2681,"loc":{"start":{"line":2681,"column":4},"end":{"line":2681,"column":39}}},"153":{"name":"(anonymous_153)","line":2692,"loc":{"start":{"line":2692,"column":53},"end":{"line":2692,"column":72}}},"154":{"name":"(anonymous_154)","line":2704,"loc":{"start":{"line":2704,"column":48},"end":{"line":2704,"column":67}}},"155":{"name":"(anonymous_155)","line":2717,"loc":{"start":{"line":2717,"column":41},"end":{"line":2717,"column":52}}},"156":{"name":"(anonymous_156)","line":2725,"loc":{"start":{"line":2725,"column":42},"end":{"line":2725,"column":53}}},"157":{"name":"(anonymous_157)","line":2739,"loc":{"start":{"line":2739,"column":41},"end":{"line":2739,"column":63}}},"158":{"name":"(anonymous_158)","line":2773,"loc":{"start":{"line":2773,"column":49},"end":{"line":2773,"column":68}}},"159":{"name":"(anonymous_159)","line":2782,"loc":{"start":{"line":2782,"column":58},"end":{"line":2782,"column":77}}},"160":{"name":"doDeleteInstance","line":2788,"loc":{"start":{"line":2788,"column":6},"end":{"line":2788,"column":39}}},"161":{"name":"(anonymous_161)","line":2793,"loc":{"start":{"line":2793,"column":50},"end":{"line":2793,"column":70}}},"162":{"name":"(anonymous_162)","line":2810,"loc":{"start":{"line":2810,"column":61},"end":{"line":2810,"column":75}}},"163":{"name":"(anonymous_163)","line":2817,"loc":{"start":{"line":2817,"column":32},"end":{"line":2817,"column":52}}},"164":{"name":"destroyCallback","line":2818,"loc":{"start":{"line":2818,"column":10},"end":{"line":2818,"column":46}}},"165":{"name":"(anonymous_165)","line":2828,"loc":{"start":{"line":2828,"column":22},"end":{"line":2828,"column":33}}},"166":{"name":"(anonymous_166)","line":2837,"loc":{"start":{"line":2837,"column":63},"end":{"line":2837,"column":77}}},"167":{"name":"setAttribute","line":2860,"loc":{"start":{"line":2860,"column":42},"end":{"line":2860,"column":77}}},"168":{"name":"updateAttribute","line":2872,"loc":{"start":{"line":2872,"column":45},"end":{"line":2872,"column":96}}},"169":{"name":"setAttributes","line":2884,"loc":{"start":{"line":2884,"column":43},"end":{"line":2884,"column":72}}},"170":{"name":"unsetAttribute","line":2900,"loc":{"start":{"line":2900,"column":44},"end":{"line":2900,"column":83}}},"171":{"name":"(anonymous_171)","line":2918,"loc":{"start":{"line":2918,"column":47},"end":{"line":2918,"column":75}}},"172":{"name":"(anonymous_172)","line":2924,"loc":{"start":{"line":2924,"column":31},"end":{"line":2924,"column":63}}},"173":{"name":"(anonymous_173)","line":2978,"loc":{"start":{"line":2978,"column":21},"end":{"line":2978,"column":32}}},"174":{"name":"(anonymous_174)","line":2990,"loc":{"start":{"line":2990,"column":50},"end":{"line":2990,"column":69}}},"175":{"name":"validateAndCallConnector","line":3007,"loc":{"start":{"line":3007,"column":4},"end":{"line":3007,"column":49}}},"176":{"name":"(anonymous_176)","line":3023,"loc":{"start":{"line":3023,"column":21},"end":{"line":3023,"column":37}}},"177":{"name":"callConnector","line":3032,"loc":{"start":{"line":3032,"column":6},"end":{"line":3032,"column":31}}},"178":{"name":"replaceCallback","line":3037,"loc":{"start":{"line":3037,"column":8},"end":{"line":3037,"column":44}}},"179":{"name":"(anonymous_179)","line":3047,"loc":{"start":{"line":3047,"column":49},"end":{"line":3047,"column":63}}},"180":{"name":"(anonymous_180)","line":3068,"loc":{"start":{"line":3068,"column":59},"end":{"line":3068,"column":73}}},"181":{"name":"(anonymous_181)","line":3083,"loc":{"start":{"line":3083,"column":48},"end":{"line":3083,"column":62}}},"182":{"name":"(anonymous_182)","line":3105,"loc":{"start":{"line":3105,"column":0},"end":{"line":3105,"column":28}}},"183":{"name":"(anonymous_183)","line":3163,"loc":{"start":{"line":3163,"column":23},"end":{"line":3163,"column":34}}},"184":{"name":"(anonymous_184)","line":3179,"loc":{"start":{"line":3179,"column":50},"end":{"line":3179,"column":69}}},"185":{"name":"validateAndSave","line":3189,"loc":{"start":{"line":3189,"column":4},"end":{"line":3189,"column":40}}},"186":{"name":"(anonymous_186)","line":3209,"loc":{"start":{"line":3209,"column":21},"end":{"line":3209,"column":37}}},"187":{"name":"triggerSave","line":3221,"loc":{"start":{"line":3221,"column":6},"end":{"line":3221,"column":29}}},"188":{"name":"(anonymous_188)","line":3222,"loc":{"start":{"line":3222,"column":29},"end":{"line":3222,"column":48}}},"189":{"name":"(anonymous_189)","line":3223,"loc":{"start":{"line":3223,"column":33},"end":{"line":3223,"column":48}}},"190":{"name":"updateAttributesCallback","line":3228,"loc":{"start":{"line":3228,"column":12},"end":{"line":3228,"column":51}}},"191":{"name":"(anonymous_191)","line":3237,"loc":{"start":{"line":3237,"column":53},"end":{"line":3237,"column":67}}},"192":{"name":"(anonymous_192)","line":3249,"loc":{"start":{"line":3249,"column":32},"end":{"line":3249,"column":43}}},"193":{"name":"(anonymous_193)","line":3250,"loc":{"start":{"line":3250,"column":38},"end":{"line":3250,"column":49}}},"194":{"name":"(anonymous_194)","line":3260,"loc":{"start":{"line":3260,"column":67},"end":{"line":3260,"column":81}}},"195":{"name":"(anonymous_195)","line":3277,"loc":{"start":{"line":3277,"column":52},"end":{"line":3277,"column":66}}},"196":{"name":"reload","line":3300,"loc":{"start":{"line":3300,"column":36},"end":{"line":3300,"column":56}}},"197":{"name":"defineReadonlyProp","line":3317,"loc":{"start":{"line":3317,"column":0},"end":{"line":3317,"column":45}}},"198":{"name":"(anonymous_198)","line":3337,"loc":{"start":{"line":3337,"column":25},"end":{"line":3337,"column":78}}},"199":{"name":"PKMissingError","line":3360,"loc":{"start":{"line":3360,"column":0},"end":{"line":3360,"column":35}}},"200":{"name":"isPKMissing","line":3366,"loc":{"start":{"line":3366,"column":0},"end":{"line":3366,"column":37}}},"201":{"name":"(anonymous_201)","line":3369,"loc":{"start":{"line":3369,"column":19},"end":{"line":3369,"column":30}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":38}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":29}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":31}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":63}},"6":{"start":{"line":22,"column":0},"end":{"line":22,"column":41}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":40}},"8":{"start":{"line":24,"column":0},"end":{"line":24,"column":32}},"9":{"start":{"line":25,"column":0},"end":{"line":25,"column":27}},"10":{"start":{"line":26,"column":0},"end":{"line":26,"column":51}},"11":{"start":{"line":27,"column":0},"end":{"line":27,"column":31}},"12":{"start":{"line":28,"column":0},"end":{"line":28,"column":40}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":44}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":60}},"15":{"start":{"line":31,"column":0},"end":{"line":31,"column":30}},"16":{"start":{"line":32,"column":0},"end":{"line":32,"column":34}},"17":{"start":{"line":33,"column":0},"end":{"line":33,"column":27}},"18":{"start":{"line":34,"column":0},"end":{"line":34,"column":31}},"19":{"start":{"line":35,"column":0},"end":{"line":35,"column":35}},"20":{"start":{"line":36,"column":0},"end":{"line":36,"column":45}},"21":{"start":{"line":46,"column":0},"end":{"line":54,"column":1}},"22":{"start":{"line":47,"column":2},"end":{"line":53,"column":3}},"23":{"start":{"line":48,"column":4},"end":{"line":48,"column":20}},"24":{"start":{"line":49,"column":4},"end":{"line":49,"column":25}},"25":{"start":{"line":50,"column":4},"end":{"line":52,"column":7}},"26":{"start":{"line":51,"column":6},"end":{"line":51,"column":25}},"27":{"start":{"line":56,"column":0},"end":{"line":58,"column":1}},"28":{"start":{"line":57,"column":2},"end":{"line":57,"column":39}},"29":{"start":{"line":60,"column":0},"end":{"line":62,"column":1}},"30":{"start":{"line":61,"column":2},"end":{"line":61,"column":33}},"31":{"start":{"line":64,"column":0},"end":{"line":68,"column":1}},"32":{"start":{"line":65,"column":2},"end":{"line":67,"column":3}},"33":{"start":{"line":66,"column":4},"end":{"line":66,"column":24}},"34":{"start":{"line":70,"column":0},"end":{"line":82,"column":1}},"35":{"start":{"line":71,"column":2},"end":{"line":71,"column":21}},"36":{"start":{"line":72,"column":2},"end":{"line":80,"column":3}},"37":{"start":{"line":74,"column":4},"end":{"line":74,"column":31}},"38":{"start":{"line":75,"column":4},"end":{"line":79,"column":5}},"39":{"start":{"line":78,"column":6},"end":{"line":78,"column":49}},"40":{"start":{"line":81,"column":2},"end":{"line":81,"column":19}},"41":{"start":{"line":88,"column":0},"end":{"line":101,"column":1}},"42":{"start":{"line":89,"column":2},"end":{"line":89,"column":42}},"43":{"start":{"line":90,"column":2},"end":{"line":90,"column":31}},"44":{"start":{"line":91,"column":2},"end":{"line":91,"column":23}},"45":{"start":{"line":92,"column":2},"end":{"line":99,"column":3}},"46":{"start":{"line":93,"column":4},"end":{"line":93,"column":18}},"47":{"start":{"line":94,"column":4},"end":{"line":98,"column":5}},"48":{"start":{"line":95,"column":6},"end":{"line":95,"column":30}},"49":{"start":{"line":96,"column":11},"end":{"line":98,"column":5}},"50":{"start":{"line":97,"column":6},"end":{"line":97,"column":41}},"51":{"start":{"line":100,"column":2},"end":{"line":100,"column":19}},"52":{"start":{"line":103,"column":0},"end":{"line":107,"column":1}},"53":{"start":{"line":104,"column":2},"end":{"line":106,"column":3}},"54":{"start":{"line":105,"column":4},"end":{"line":105,"column":28}},"55":{"start":{"line":109,"column":0},"end":{"line":114,"column":1}},"56":{"start":{"line":110,"column":2},"end":{"line":110,"column":21}},"57":{"start":{"line":111,"column":2},"end":{"line":111,"column":26}},"58":{"start":{"line":112,"column":2},"end":{"line":112,"column":23}},"59":{"start":{"line":113,"column":2},"end":{"line":113,"column":15}},"60":{"start":{"line":116,"column":0},"end":{"line":124,"column":1}},"61":{"start":{"line":117,"column":2},"end":{"line":117,"column":32}},"62":{"start":{"line":118,"column":2},"end":{"line":118,"column":37}},"63":{"start":{"line":118,"column":24},"end":{"line":118,"column":37}},"64":{"start":{"line":120,"column":2},"end":{"line":120,"column":25}},"65":{"start":{"line":121,"column":2},"end":{"line":121,"column":35}},"66":{"start":{"line":121,"column":22},"end":{"line":121,"column":35}},"67":{"start":{"line":123,"column":2},"end":{"line":123,"column":31}},"68":{"start":{"line":126,"column":0},"end":{"line":140,"column":2}},"69":{"start":{"line":127,"column":2},"end":{"line":129,"column":3}},"70":{"start":{"line":128,"column":4},"end":{"line":128,"column":16}},"71":{"start":{"line":130,"column":2},"end":{"line":130,"column":15}},"72":{"start":{"line":131,"column":2},"end":{"line":138,"column":3}},"73":{"start":{"line":132,"column":4},"end":{"line":132,"column":46}},"74":{"start":{"line":133,"column":4},"end":{"line":137,"column":5}},"75":{"start":{"line":134,"column":6},"end":{"line":134,"column":53}},"76":{"start":{"line":136,"column":6},"end":{"line":136,"column":37}},"77":{"start":{"line":139,"column":2},"end":{"line":139,"column":13}},"78":{"start":{"line":142,"column":0},"end":{"line":148,"column":2}},"79":{"start":{"line":143,"column":2},"end":{"line":143,"column":45}},"80":{"start":{"line":144,"column":2},"end":{"line":146,"column":3}},"81":{"start":{"line":145,"column":4},"end":{"line":145,"column":68}},"82":{"start":{"line":147,"column":2},"end":{"line":147,"column":15}},"83":{"start":{"line":150,"column":0},"end":{"line":155,"column":2}},"84":{"start":{"line":151,"column":2},"end":{"line":151,"column":51}},"85":{"start":{"line":152,"column":2},"end":{"line":154,"column":3}},"86":{"start":{"line":153,"column":4},"end":{"line":153,"column":67}},"87":{"start":{"line":157,"column":0},"end":{"line":170,"column":2}},"88":{"start":{"line":158,"column":2},"end":{"line":158,"column":55}},"89":{"start":{"line":159,"column":2},"end":{"line":159,"column":65}},"90":{"start":{"line":160,"column":2},"end":{"line":169,"column":3}},"91":{"start":{"line":161,"column":4},"end":{"line":161,"column":35}},"92":{"start":{"line":162,"column":9},"end":{"line":169,"column":3}},"93":{"start":{"line":163,"column":4},"end":{"line":163,"column":64}},"94":{"start":{"line":164,"column":9},"end":{"line":169,"column":3}},"95":{"start":{"line":165,"column":4},"end":{"line":165,"column":52}},"96":{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},"97":{"start":{"line":167,"column":6},"end":{"line":167,"column":55}},"98":{"start":{"line":172,"column":0},"end":{"line":174,"column":2}},"99":{"start":{"line":173,"column":2},"end":{"line":173,"column":14}},"100":{"start":{"line":180,"column":0},"end":{"line":182,"column":2}},"101":{"start":{"line":181,"column":2},"end":{"line":181,"column":40}},"102":{"start":{"line":190,"column":0},"end":{"line":207,"column":2}},"103":{"start":{"line":191,"column":2},"end":{"line":191,"column":26}},"104":{"start":{"line":193,"column":2},"end":{"line":193,"column":19}},"105":{"start":{"line":194,"column":2},"end":{"line":194,"column":49}},"106":{"start":{"line":195,"column":2},"end":{"line":195,"column":65}},"107":{"start":{"line":201,"column":2},"end":{"line":205,"column":3}},"108":{"start":{"line":202,"column":4},"end":{"line":202,"column":69}},"109":{"start":{"line":203,"column":9},"end":{"line":205,"column":3}},"110":{"start":{"line":204,"column":4},"end":{"line":204,"column":76}},"111":{"start":{"line":206,"column":2},"end":{"line":206,"column":32}},"112":{"start":{"line":210,"column":0},"end":{"line":213,"column":1}},"113":{"start":{"line":212,"column":2},"end":{"line":212,"column":63}},"114":{"start":{"line":232,"column":0},"end":{"line":435,"column":2}},"115":{"start":{"line":233,"column":2},"end":{"line":233,"column":81}},"116":{"start":{"line":234,"column":2},"end":{"line":236,"column":3}},"117":{"start":{"line":235,"column":4},"end":{"line":235,"column":29}},"118":{"start":{"line":238,"column":2},"end":{"line":238,"column":19}},"119":{"start":{"line":239,"column":2},"end":{"line":239,"column":39}},"120":{"start":{"line":240,"column":2},"end":{"line":241,"column":53}},"121":{"start":{"line":243,"column":2},"end":{"line":243,"column":18}},"122":{"start":{"line":245,"column":2},"end":{"line":257,"column":3}},"123":{"start":{"line":246,"column":4},"end":{"line":250,"column":5}},"124":{"start":{"line":248,"column":6},"end":{"line":248,"column":16}},"125":{"start":{"line":249,"column":6},"end":{"line":249,"column":16}},"126":{"start":{"line":251,"column":9},"end":{"line":257,"column":3}},"127":{"start":{"line":252,"column":4},"end":{"line":256,"column":5}},"128":{"start":{"line":254,"column":6},"end":{"line":254,"column":19}},"129":{"start":{"line":255,"column":6},"end":{"line":255,"column":19}},"130":{"start":{"line":259,"column":2},"end":{"line":259,"column":20}},"131":{"start":{"line":260,"column":2},"end":{"line":260,"column":26}},"132":{"start":{"line":261,"column":2},"end":{"line":261,"column":80}},"133":{"start":{"line":263,"column":2},"end":{"line":263,"column":83}},"134":{"start":{"line":264,"column":2},"end":{"line":264,"column":80}},"135":{"start":{"line":265,"column":2},"end":{"line":265,"column":73}},"136":{"start":{"line":267,"column":2},"end":{"line":267,"column":21}},"137":{"start":{"line":269,"column":2},"end":{"line":302,"column":3}},"138":{"start":{"line":273,"column":4},"end":{"line":277,"column":5}},"139":{"start":{"line":274,"column":6},"end":{"line":276,"column":7}},"140":{"start":{"line":275,"column":8},"end":{"line":275,"column":21}},"141":{"start":{"line":278,"column":4},"end":{"line":300,"column":7}},"142":{"start":{"line":279,"column":6},"end":{"line":282,"column":9}},"143":{"start":{"line":281,"column":8},"end":{"line":281,"column":55}},"144":{"start":{"line":284,"column":6},"end":{"line":286,"column":7}},"145":{"start":{"line":285,"column":8},"end":{"line":285,"column":32}},"146":{"start":{"line":288,"column":6},"end":{"line":288,"column":24}},"147":{"start":{"line":289,"column":6},"end":{"line":289,"column":20}},"148":{"start":{"line":290,"column":6},"end":{"line":298,"column":7}},"149":{"start":{"line":291,"column":8},"end":{"line":296,"column":9}},"150":{"start":{"line":292,"column":10},"end":{"line":294,"column":11}},"151":{"start":{"line":293,"column":12},"end":{"line":293,"column":24}},"152":{"start":{"line":295,"column":10},"end":{"line":295,"column":37}},"153":{"start":{"line":297,"column":8},"end":{"line":297,"column":36}},"154":{"start":{"line":299,"column":6},"end":{"line":299,"column":23}},"155":{"start":{"line":301,"column":4},"end":{"line":301,"column":11}},"156":{"start":{"line":304,"column":2},"end":{"line":304,"column":20}},"157":{"start":{"line":305,"column":2},"end":{"line":305,"column":10}},"158":{"start":{"line":306,"column":2},"end":{"line":306,"column":39}},"159":{"start":{"line":309,"column":2},"end":{"line":313,"column":3}},"160":{"start":{"line":310,"column":4},"end":{"line":310,"column":15}},"161":{"start":{"line":312,"column":4},"end":{"line":312,"column":26}},"162":{"start":{"line":315,"column":2},"end":{"line":315,"column":38}},"163":{"start":{"line":316,"column":2},"end":{"line":316,"column":30}},"164":{"start":{"line":318,"column":2},"end":{"line":318,"column":33}},"165":{"start":{"line":319,"column":2},"end":{"line":319,"column":55}},"166":{"start":{"line":319,"column":33},"end":{"line":319,"column":55}},"167":{"start":{"line":321,"column":2},"end":{"line":327,"column":4}},"168":{"start":{"line":328,"column":2},"end":{"line":351,"column":5}},"169":{"start":{"line":329,"column":4},"end":{"line":329,"column":28}},"170":{"start":{"line":329,"column":13},"end":{"line":329,"column":28}},"171":{"start":{"line":331,"column":4},"end":{"line":331,"column":30}},"172":{"start":{"line":334,"column":4},"end":{"line":336,"column":5}},"173":{"start":{"line":335,"column":6},"end":{"line":335,"column":22}},"174":{"start":{"line":339,"column":4},"end":{"line":341,"column":5}},"175":{"start":{"line":340,"column":6},"end":{"line":340,"column":22}},"176":{"start":{"line":344,"column":4},"end":{"line":350,"column":22}},"177":{"start":{"line":345,"column":6},"end":{"line":349,"column":7}},"178":{"start":{"line":346,"column":8},"end":{"line":346,"column":17}},"179":{"start":{"line":348,"column":8},"end":{"line":348,"column":42}},"180":{"start":{"line":353,"column":2},"end":{"line":432,"column":3}},"181":{"start":{"line":354,"column":4},"end":{"line":431,"column":16}},"182":{"start":{"line":355,"column":6},"end":{"line":430,"column":18}},"183":{"start":{"line":356,"column":8},"end":{"line":356,"column":36}},"184":{"start":{"line":357,"column":8},"end":{"line":357,"column":40}},"185":{"start":{"line":358,"column":8},"end":{"line":358,"column":54}},"186":{"start":{"line":359,"column":8},"end":{"line":411,"column":9}},"187":{"start":{"line":360,"column":10},"end":{"line":363,"column":11}},"188":{"start":{"line":361,"column":12},"end":{"line":361,"column":37}},"189":{"start":{"line":362,"column":12},"end":{"line":362,"column":49}},"190":{"start":{"line":364,"column":10},"end":{"line":366,"column":11}},"191":{"start":{"line":365,"column":12},"end":{"line":365,"column":27}},"192":{"start":{"line":367,"column":10},"end":{"line":369,"column":11}},"193":{"start":{"line":368,"column":12},"end":{"line":368,"column":32}},"194":{"start":{"line":370,"column":10},"end":{"line":370,"column":33}},"195":{"start":{"line":372,"column":10},"end":{"line":378,"column":12}},"196":{"start":{"line":379,"column":10},"end":{"line":410,"column":13}},"197":{"start":{"line":380,"column":12},"end":{"line":380,"column":36}},"198":{"start":{"line":380,"column":21},"end":{"line":380,"column":36}},"199":{"start":{"line":386,"column":12},"end":{"line":388,"column":13}},"200":{"start":{"line":387,"column":14},"end":{"line":387,"column":46}},"201":{"start":{"line":389,"column":12},"end":{"line":409,"column":15}},"202":{"start":{"line":390,"column":14},"end":{"line":408,"column":17}},"203":{"start":{"line":391,"column":16},"end":{"line":393,"column":17}},"204":{"start":{"line":392,"column":18},"end":{"line":392,"column":38}},"205":{"start":{"line":394,"column":16},"end":{"line":400,"column":18}},"206":{"start":{"line":401,"column":16},"end":{"line":407,"column":17}},"207":{"start":{"line":402,"column":18},"end":{"line":404,"column":21}},"208":{"start":{"line":403,"column":20},"end":{"line":403,"column":33}},"209":{"start":{"line":406,"column":18},"end":{"line":406,"column":32}},"210":{"start":{"line":413,"column":8},"end":{"line":420,"column":10}},"211":{"start":{"line":421,"column":8},"end":{"line":429,"column":11}},"212":{"start":{"line":422,"column":10},"end":{"line":422,"column":34}},"213":{"start":{"line":422,"column":19},"end":{"line":422,"column":34}},"214":{"start":{"line":424,"column":10},"end":{"line":428,"column":11}},"215":{"start":{"line":425,"column":12},"end":{"line":425,"column":103}},"216":{"start":{"line":427,"column":12},"end":{"line":427,"column":94}},"217":{"start":{"line":434,"column":2},"end":{"line":434,"column":20}},"218":{"start":{"line":437,"column":0},"end":{"line":452,"column":1}},"219":{"start":{"line":438,"column":2},"end":{"line":440,"column":3}},"220":{"start":{"line":439,"column":4},"end":{"line":439,"column":39}},"221":{"start":{"line":443,"column":2},"end":{"line":443,"column":53}},"222":{"start":{"line":444,"column":2},"end":{"line":444,"column":35}},"223":{"start":{"line":445,"column":2},"end":{"line":445,"column":42}},"224":{"start":{"line":446,"column":2},"end":{"line":446,"column":23}},"225":{"start":{"line":447,"column":2},"end":{"line":451,"column":3}},"226":{"start":{"line":448,"column":4},"end":{"line":448,"column":22}},"227":{"start":{"line":450,"column":4},"end":{"line":450,"column":17}},"228":{"start":{"line":467,"column":0},"end":{"line":665,"column":2}},"229":{"start":{"line":470,"column":2},"end":{"line":470,"column":81}},"230":{"start":{"line":471,"column":2},"end":{"line":473,"column":3}},"231":{"start":{"line":472,"column":4},"end":{"line":472,"column":29}},"232":{"start":{"line":475,"column":2},"end":{"line":487,"column":3}},"233":{"start":{"line":476,"column":4},"end":{"line":480,"column":5}},"234":{"start":{"line":478,"column":6},"end":{"line":478,"column":16}},"235":{"start":{"line":479,"column":6},"end":{"line":479,"column":16}},"236":{"start":{"line":481,"column":9},"end":{"line":487,"column":3}},"237":{"start":{"line":482,"column":4},"end":{"line":486,"column":5}},"238":{"start":{"line":484,"column":6},"end":{"line":484,"column":19}},"239":{"start":{"line":485,"column":6},"end":{"line":485,"column":19}},"240":{"start":{"line":489,"column":2},"end":{"line":489,"column":43}},"241":{"start":{"line":490,"column":2},"end":{"line":490,"column":20}},"242":{"start":{"line":491,"column":2},"end":{"line":491,"column":26}},"243":{"start":{"line":493,"column":2},"end":{"line":493,"column":74}},"244":{"start":{"line":494,"column":2},"end":{"line":494,"column":80}},"245":{"start":{"line":495,"column":2},"end":{"line":495,"column":73}},"246":{"start":{"line":497,"column":2},"end":{"line":500,"column":3}},"247":{"start":{"line":498,"column":4},"end":{"line":498,"column":82}},"248":{"start":{"line":499,"column":4},"end":{"line":499,"column":22}},"249":{"start":{"line":502,"column":2},"end":{"line":502,"column":21}},"250":{"start":{"line":504,"column":2},"end":{"line":504,"column":18}},"251":{"start":{"line":505,"column":2},"end":{"line":505,"column":19}},"252":{"start":{"line":506,"column":2},"end":{"line":506,"column":39}},"253":{"start":{"line":508,"column":2},"end":{"line":508,"column":34}},"254":{"start":{"line":509,"column":2},"end":{"line":511,"column":3}},"255":{"start":{"line":510,"column":4},"end":{"line":510,"column":42}},"256":{"start":{"line":513,"column":2},"end":{"line":518,"column":4}},"257":{"start":{"line":519,"column":2},"end":{"line":519,"column":63}},"258":{"start":{"line":521,"column":2},"end":{"line":663,"column":3}},"259":{"start":{"line":522,"column":4},"end":{"line":522,"column":28}},"260":{"start":{"line":522,"column":13},"end":{"line":522,"column":28}},"261":{"start":{"line":524,"column":4},"end":{"line":524,"column":71}},"262":{"start":{"line":525,"column":4},"end":{"line":662,"column":5}},"263":{"start":{"line":526,"column":6},"end":{"line":532,"column":8}},"264":{"start":{"line":533,"column":6},"end":{"line":639,"column":9}},"265":{"start":{"line":534,"column":8},"end":{"line":534,"column":32}},"266":{"start":{"line":534,"column":17},"end":{"line":534,"column":32}},"267":{"start":{"line":536,"column":8},"end":{"line":536,"column":24}},"268":{"start":{"line":537,"column":8},"end":{"line":537,"column":26}},"269":{"start":{"line":538,"column":8},"end":{"line":538,"column":24}},"270":{"start":{"line":539,"column":8},"end":{"line":541,"column":9}},"271":{"start":{"line":540,"column":10},"end":{"line":540,"column":62}},"272":{"start":{"line":542,"column":8},"end":{"line":542,"column":38}},"273":{"start":{"line":544,"column":8},"end":{"line":544,"column":44}},"274":{"start":{"line":545,"column":8},"end":{"line":545,"column":42}},"275":{"start":{"line":547,"column":8},"end":{"line":547,"column":44}},"276":{"start":{"line":549,"column":8},"end":{"line":549,"column":35}},"277":{"start":{"line":550,"column":8},"end":{"line":560,"column":9}},"278":{"start":{"line":551,"column":10},"end":{"line":557,"column":11}},"279":{"start":{"line":552,"column":12},"end":{"line":554,"column":13}},"280":{"start":{"line":553,"column":14},"end":{"line":553,"column":62}},"281":{"start":{"line":556,"column":12},"end":{"line":556,"column":55}},"282":{"start":{"line":559,"column":10},"end":{"line":559,"column":40}},"283":{"start":{"line":562,"column":8},"end":{"line":578,"column":9}},"284":{"start":{"line":563,"column":10},"end":{"line":563,"column":26}},"285":{"start":{"line":565,"column":10},"end":{"line":577,"column":30}},"286":{"start":{"line":566,"column":12},"end":{"line":575,"column":13}},"287":{"start":{"line":567,"column":14},"end":{"line":574,"column":15}},"288":{"start":{"line":568,"column":16},"end":{"line":568,"column":59}},"289":{"start":{"line":571,"column":16},"end":{"line":571,"column":78}},"290":{"start":{"line":572,"column":16},"end":{"line":572,"column":66}},"291":{"start":{"line":576,"column":12},"end":{"line":576,"column":28}},"292":{"start":{"line":580,"column":8},"end":{"line":598,"column":9}},"293":{"start":{"line":581,"column":10},"end":{"line":581,"column":43}},"294":{"start":{"line":582,"column":10},"end":{"line":589,"column":12}},"295":{"start":{"line":590,"column":10},"end":{"line":597,"column":13}},"296":{"start":{"line":591,"column":12},"end":{"line":591,"column":38}},"297":{"start":{"line":591,"column":21},"end":{"line":591,"column":38}},"298":{"start":{"line":592,"column":12},"end":{"line":596,"column":13}},"299":{"start":{"line":593,"column":14},"end":{"line":593,"column":79}},"300":{"start":{"line":595,"column":14},"end":{"line":595,"column":70}},"301":{"start":{"line":599,"column":8},"end":{"line":638,"column":9}},"302":{"start":{"line":600,"column":10},"end":{"line":600,"column":34}},"303":{"start":{"line":600,"column":19},"end":{"line":600,"column":34}},"304":{"start":{"line":601,"column":10},"end":{"line":607,"column":12}},"305":{"start":{"line":608,"column":10},"end":{"line":637,"column":13}},"306":{"start":{"line":609,"column":12},"end":{"line":609,"column":36}},"307":{"start":{"line":609,"column":21},"end":{"line":609,"column":36}},"308":{"start":{"line":611,"column":12},"end":{"line":611,"column":20}},"309":{"start":{"line":612,"column":12},"end":{"line":617,"column":13}},"310":{"start":{"line":613,"column":14},"end":{"line":613,"column":60}},"311":{"start":{"line":614,"column":14},"end":{"line":614,"column":25}},"312":{"start":{"line":616,"column":14},"end":{"line":616,"column":25}},"313":{"start":{"line":618,"column":12},"end":{"line":636,"column":13}},"314":{"start":{"line":619,"column":14},"end":{"line":619,"column":27}},"315":{"start":{"line":621,"column":14},"end":{"line":627,"column":16}},"316":{"start":{"line":629,"column":14},"end":{"line":635,"column":15}},"317":{"start":{"line":630,"column":16},"end":{"line":632,"column":19}},"318":{"start":{"line":631,"column":18},"end":{"line":631,"column":31}},"319":{"start":{"line":634,"column":16},"end":{"line":634,"column":30}},"320":{"start":{"line":641,"column":6},"end":{"line":641,"column":33}},"321":{"start":{"line":642,"column":6},"end":{"line":644,"column":7}},"322":{"start":{"line":643,"column":8},"end":{"line":643,"column":51}},"323":{"start":{"line":645,"column":6},"end":{"line":661,"column":9}},"324":{"start":{"line":646,"column":8},"end":{"line":648,"column":9}},"325":{"start":{"line":647,"column":10},"end":{"line":647,"column":25}},"326":{"start":{"line":649,"column":8},"end":{"line":653,"column":9}},"327":{"start":{"line":652,"column":10},"end":{"line":652,"column":37}},"328":{"start":{"line":654,"column":8},"end":{"line":660,"column":9}},"329":{"start":{"line":655,"column":10},"end":{"line":655,"column":51}},"330":{"start":{"line":657,"column":10},"end":{"line":657,"column":41}},"331":{"start":{"line":658,"column":10},"end":{"line":658,"column":36}},"332":{"start":{"line":659,"column":10},"end":{"line":659,"column":32}},"333":{"start":{"line":664,"column":2},"end":{"line":664,"column":20}},"334":{"start":{"line":682,"column":0},"end":{"line":832,"column":2}},"335":{"start":{"line":684,"column":2},"end":{"line":684,"column":81}},"336":{"start":{"line":685,"column":2},"end":{"line":685,"column":54}},"337":{"start":{"line":685,"column":27},"end":{"line":685,"column":52}},"338":{"start":{"line":686,"column":2},"end":{"line":692,"column":3}},"339":{"start":{"line":687,"column":4},"end":{"line":691,"column":5}},"340":{"start":{"line":689,"column":6},"end":{"line":689,"column":19}},"341":{"start":{"line":690,"column":6},"end":{"line":690,"column":19}},"342":{"start":{"line":693,"column":2},"end":{"line":693,"column":43}},"343":{"start":{"line":694,"column":2},"end":{"line":694,"column":26}},"344":{"start":{"line":695,"column":2},"end":{"line":695,"column":76}},"345":{"start":{"line":696,"column":2},"end":{"line":696,"column":74}},"346":{"start":{"line":697,"column":2},"end":{"line":697,"column":80}},"347":{"start":{"line":698,"column":2},"end":{"line":698,"column":73}},"348":{"start":{"line":699,"column":2},"end":{"line":704,"column":3}},"349":{"start":{"line":700,"column":4},"end":{"line":700,"column":56}},"350":{"start":{"line":701,"column":4},"end":{"line":701,"column":25}},"351":{"start":{"line":702,"column":4},"end":{"line":702,"column":46}},"352":{"start":{"line":702,"column":34},"end":{"line":702,"column":42}},"353":{"start":{"line":703,"column":4},"end":{"line":703,"column":22}},"354":{"start":{"line":705,"column":2},"end":{"line":705,"column":21}},"355":{"start":{"line":706,"column":2},"end":{"line":706,"column":18}},"356":{"start":{"line":707,"column":2},"end":{"line":707,"column":19}},"357":{"start":{"line":708,"column":2},"end":{"line":708,"column":39}},"358":{"start":{"line":709,"column":2},"end":{"line":709,"column":34}},"359":{"start":{"line":710,"column":2},"end":{"line":710,"column":29}},"360":{"start":{"line":711,"column":2},"end":{"line":716,"column":4}},"361":{"start":{"line":717,"column":2},"end":{"line":717,"column":64}},"362":{"start":{"line":718,"column":2},"end":{"line":830,"column":3}},"363":{"start":{"line":719,"column":4},"end":{"line":719,"column":28}},"364":{"start":{"line":719,"column":13},"end":{"line":719,"column":28}},"365":{"start":{"line":720,"column":4},"end":{"line":720,"column":20}},"366":{"start":{"line":721,"column":4},"end":{"line":829,"column":5}},"367":{"start":{"line":722,"column":6},"end":{"line":728,"column":8}},"368":{"start":{"line":729,"column":6},"end":{"line":806,"column":9}},"369":{"start":{"line":730,"column":8},"end":{"line":730,"column":32}},"370":{"start":{"line":730,"column":17},"end":{"line":730,"column":32}},"371":{"start":{"line":731,"column":8},"end":{"line":731,"column":24}},"372":{"start":{"line":732,"column":8},"end":{"line":732,"column":26}},"373":{"start":{"line":733,"column":8},"end":{"line":733,"column":24}},"374":{"start":{"line":734,"column":8},"end":{"line":736,"column":9}},"375":{"start":{"line":735,"column":10},"end":{"line":735,"column":62}},"376":{"start":{"line":737,"column":8},"end":{"line":737,"column":38}},"377":{"start":{"line":738,"column":8},"end":{"line":738,"column":32}},"378":{"start":{"line":739,"column":8},"end":{"line":739,"column":44}},"379":{"start":{"line":740,"column":8},"end":{"line":740,"column":42}},"380":{"start":{"line":741,"column":8},"end":{"line":743,"column":9}},"381":{"start":{"line":742,"column":10},"end":{"line":742,"column":33}},"382":{"start":{"line":744,"column":8},"end":{"line":746,"column":9}},"383":{"start":{"line":745,"column":10},"end":{"line":745,"column":33}},"384":{"start":{"line":747,"column":8},"end":{"line":750,"column":28}},"385":{"start":{"line":748,"column":10},"end":{"line":748,"column":65}},"386":{"start":{"line":748,"column":22},"end":{"line":748,"column":65}},"387":{"start":{"line":749,"column":10},"end":{"line":749,"column":26}},"388":{"start":{"line":752,"column":8},"end":{"line":775,"column":9}},"389":{"start":{"line":753,"column":10},"end":{"line":762,"column":11}},"390":{"start":{"line":754,"column":12},"end":{"line":754,"column":51}},"391":{"start":{"line":755,"column":12},"end":{"line":755,"column":58}},"392":{"start":{"line":756,"column":12},"end":{"line":756,"column":45}},"393":{"start":{"line":757,"column":12},"end":{"line":757,"column":52}},"394":{"start":{"line":759,"column":12},"end":{"line":761,"column":15}},"395":{"start":{"line":760,"column":14},"end":{"line":760,"column":22}},"396":{"start":{"line":763,"column":10},"end":{"line":770,"column":12}},"397":{"start":{"line":771,"column":10},"end":{"line":774,"column":13}},"398":{"start":{"line":772,"column":12},"end":{"line":772,"column":38}},"399":{"start":{"line":772,"column":21},"end":{"line":772,"column":38}},"400":{"start":{"line":773,"column":12},"end":{"line":773,"column":83}},"401":{"start":{"line":776,"column":8},"end":{"line":805,"column":9}},"402":{"start":{"line":777,"column":10},"end":{"line":777,"column":34}},"403":{"start":{"line":777,"column":19},"end":{"line":777,"column":34}},"404":{"start":{"line":778,"column":10},"end":{"line":784,"column":12}},"405":{"start":{"line":785,"column":10},"end":{"line":804,"column":13}},"406":{"start":{"line":786,"column":12},"end":{"line":786,"column":36}},"407":{"start":{"line":786,"column":21},"end":{"line":786,"column":36}},"408":{"start":{"line":787,"column":12},"end":{"line":787,"column":20}},"409":{"start":{"line":788,"column":12},"end":{"line":793,"column":13}},"410":{"start":{"line":789,"column":14},"end":{"line":789,"column":67}},"411":{"start":{"line":790,"column":14},"end":{"line":790,"column":25}},"412":{"start":{"line":792,"column":14},"end":{"line":792,"column":32}},"413":{"start":{"line":794,"column":12},"end":{"line":800,"column":14}},"414":{"start":{"line":801,"column":12},"end":{"line":803,"column":15}},"415":{"start":{"line":802,"column":14},"end":{"line":802,"column":27}},"416":{"start":{"line":808,"column":6},"end":{"line":808,"column":33}},"417":{"start":{"line":809,"column":6},"end":{"line":811,"column":7}},"418":{"start":{"line":810,"column":8},"end":{"line":810,"column":51}},"419":{"start":{"line":812,"column":6},"end":{"line":828,"column":9}},"420":{"start":{"line":813,"column":8},"end":{"line":813,"column":32}},"421":{"start":{"line":813,"column":17},"end":{"line":813,"column":32}},"422":{"start":{"line":814,"column":8},"end":{"line":814,"column":44}},"423":{"start":{"line":815,"column":8},"end":{"line":827,"column":9}},"424":{"start":{"line":816,"column":10},"end":{"line":816,"column":41}},"425":{"start":{"line":817,"column":15},"end":{"line":827,"column":9}},"426":{"start":{"line":818,"column":10},"end":{"line":818,"column":39}},"427":{"start":{"line":819,"column":10},"end":{"line":819,"column":56}},"428":{"start":{"line":821,"column":10},"end":{"line":826,"column":13}},"429":{"start":{"line":822,"column":12},"end":{"line":823,"column":59}},"430":{"start":{"line":824,"column":12},"end":{"line":824,"column":35}},"431":{"start":{"line":825,"column":12},"end":{"line":825,"column":22}},"432":{"start":{"line":831,"column":2},"end":{"line":831,"column":20}},"433":{"start":{"line":842,"column":0},"end":{"line":1016,"column":2}},"434":{"start":{"line":843,"column":2},"end":{"line":843,"column":81}},"435":{"start":{"line":844,"column":2},"end":{"line":846,"column":3}},"436":{"start":{"line":845,"column":4},"end":{"line":845,"column":29}},"437":{"start":{"line":848,"column":2},"end":{"line":854,"column":3}},"438":{"start":{"line":849,"column":4},"end":{"line":853,"column":5}},"439":{"start":{"line":851,"column":6},"end":{"line":851,"column":19}},"440":{"start":{"line":852,"column":6},"end":{"line":852,"column":19}},"441":{"start":{"line":856,"column":2},"end":{"line":856,"column":43}},"442":{"start":{"line":857,"column":2},"end":{"line":857,"column":20}},"443":{"start":{"line":858,"column":2},"end":{"line":858,"column":26}},"444":{"start":{"line":860,"column":2},"end":{"line":860,"column":74}},"445":{"start":{"line":861,"column":2},"end":{"line":861,"column":80}},"446":{"start":{"line":862,"column":2},"end":{"line":862,"column":73}},"447":{"start":{"line":864,"column":2},"end":{"line":864,"column":21}},"448":{"start":{"line":866,"column":2},"end":{"line":866,"column":18}},"449":{"start":{"line":867,"column":2},"end":{"line":867,"column":19}},"450":{"start":{"line":868,"column":2},"end":{"line":868,"column":39}},"451":{"start":{"line":870,"column":2},"end":{"line":870,"column":34}},"452":{"start":{"line":871,"column":2},"end":{"line":873,"column":3}},"453":{"start":{"line":872,"column":4},"end":{"line":872,"column":42}},"454":{"start":{"line":875,"column":2},"end":{"line":875,"column":38}},"455":{"start":{"line":876,"column":2},"end":{"line":878,"column":3}},"456":{"start":{"line":877,"column":4},"end":{"line":877,"column":52}},"457":{"start":{"line":880,"column":2},"end":{"line":880,"column":11}},"458":{"start":{"line":881,"column":2},"end":{"line":885,"column":3}},"459":{"start":{"line":882,"column":4},"end":{"line":882,"column":16}},"460":{"start":{"line":884,"column":4},"end":{"line":884,"column":27}},"461":{"start":{"line":887,"column":2},"end":{"line":887,"column":29}},"462":{"start":{"line":888,"column":2},"end":{"line":893,"column":4}},"463":{"start":{"line":894,"column":2},"end":{"line":894,"column":64}},"464":{"start":{"line":896,"column":2},"end":{"line":1014,"column":3}},"465":{"start":{"line":897,"column":4},"end":{"line":897,"column":28}},"466":{"start":{"line":897,"column":13},"end":{"line":897,"column":28}},"467":{"start":{"line":899,"column":4},"end":{"line":899,"column":71}},"468":{"start":{"line":900,"column":4},"end":{"line":900,"column":32}},"469":{"start":{"line":901,"column":4},"end":{"line":1013,"column":5}},"470":{"start":{"line":902,"column":6},"end":{"line":907,"column":8}},"471":{"start":{"line":908,"column":6},"end":{"line":990,"column":9}},"472":{"start":{"line":909,"column":8},"end":{"line":909,"column":32}},"473":{"start":{"line":909,"column":17},"end":{"line":909,"column":32}},"474":{"start":{"line":910,"column":8},"end":{"line":910,"column":42}},"475":{"start":{"line":911,"column":8},"end":{"line":915,"column":9}},"476":{"start":{"line":912,"column":10},"end":{"line":912,"column":82}},"477":{"start":{"line":914,"column":10},"end":{"line":914,"column":37}},"478":{"start":{"line":917,"column":8},"end":{"line":989,"column":9}},"479":{"start":{"line":918,"column":10},"end":{"line":918,"column":34}},"480":{"start":{"line":918,"column":19},"end":{"line":918,"column":34}},"481":{"start":{"line":919,"column":10},"end":{"line":919,"column":46}},"482":{"start":{"line":920,"column":10},"end":{"line":920,"column":44}},"483":{"start":{"line":922,"column":10},"end":{"line":922,"column":46}},"484":{"start":{"line":924,"column":10},"end":{"line":926,"column":11}},"485":{"start":{"line":925,"column":12},"end":{"line":925,"column":35}},"486":{"start":{"line":929,"column":10},"end":{"line":931,"column":11}},"487":{"start":{"line":930,"column":12},"end":{"line":930,"column":35}},"488":{"start":{"line":933,"column":10},"end":{"line":936,"column":30}},"489":{"start":{"line":934,"column":12},"end":{"line":934,"column":67}},"490":{"start":{"line":934,"column":24},"end":{"line":934,"column":67}},"491":{"start":{"line":935,"column":12},"end":{"line":935,"column":28}},"492":{"start":{"line":938,"column":10},"end":{"line":952,"column":11}},"493":{"start":{"line":939,"column":12},"end":{"line":939,"column":45}},"494":{"start":{"line":940,"column":12},"end":{"line":947,"column":14}},"495":{"start":{"line":948,"column":12},"end":{"line":951,"column":15}},"496":{"start":{"line":949,"column":14},"end":{"line":949,"column":40}},"497":{"start":{"line":949,"column":23},"end":{"line":949,"column":40}},"498":{"start":{"line":950,"column":14},"end":{"line":950,"column":86}},"499":{"start":{"line":953,"column":10},"end":{"line":988,"column":11}},"500":{"start":{"line":954,"column":12},"end":{"line":954,"column":36}},"501":{"start":{"line":954,"column":21},"end":{"line":954,"column":36}},"502":{"start":{"line":955,"column":12},"end":{"line":961,"column":14}},"503":{"start":{"line":962,"column":12},"end":{"line":987,"column":15}},"504":{"start":{"line":963,"column":14},"end":{"line":963,"column":38}},"505":{"start":{"line":963,"column":23},"end":{"line":963,"column":38}},"506":{"start":{"line":965,"column":14},"end":{"line":965,"column":22}},"507":{"start":{"line":966,"column":14},"end":{"line":971,"column":15}},"508":{"start":{"line":967,"column":16},"end":{"line":967,"column":62}},"509":{"start":{"line":968,"column":16},"end":{"line":968,"column":27}},"510":{"start":{"line":970,"column":16},"end":{"line":970,"column":27}},"511":{"start":{"line":972,"column":14},"end":{"line":986,"column":15}},"512":{"start":{"line":973,"column":16},"end":{"line":973,"column":29}},"513":{"start":{"line":975,"column":16},"end":{"line":981,"column":18}},"514":{"start":{"line":983,"column":16},"end":{"line":985,"column":19}},"515":{"start":{"line":984,"column":18},"end":{"line":984,"column":37}},"516":{"start":{"line":992,"column":6},"end":{"line":992,"column":33}},"517":{"start":{"line":993,"column":6},"end":{"line":995,"column":7}},"518":{"start":{"line":994,"column":8},"end":{"line":994,"column":51}},"519":{"start":{"line":996,"column":6},"end":{"line":1012,"column":9}},"520":{"start":{"line":997,"column":8},"end":{"line":997,"column":32}},"521":{"start":{"line":997,"column":17},"end":{"line":997,"column":32}},"522":{"start":{"line":998,"column":8},"end":{"line":1004,"column":9}},"523":{"start":{"line":1001,"column":10},"end":{"line":1001,"column":37}},"524":{"start":{"line":1002,"column":10},"end":{"line":1002,"column":30}},"525":{"start":{"line":1003,"column":10},"end":{"line":1003,"column":40}},"526":{"start":{"line":1003,"column":21},"end":{"line":1003,"column":40}},"527":{"start":{"line":1005,"column":8},"end":{"line":1011,"column":9}},"528":{"start":{"line":1006,"column":10},"end":{"line":1006,"column":50}},"529":{"start":{"line":1008,"column":10},"end":{"line":1008,"column":41}},"530":{"start":{"line":1009,"column":10},"end":{"line":1009,"column":36}},"531":{"start":{"line":1010,"column":10},"end":{"line":1010,"column":32}},"532":{"start":{"line":1015,"column":2},"end":{"line":1015,"column":20}},"533":{"start":{"line":1029,"column":0},"end":{"line":1227,"column":2}},"534":{"start":{"line":1030,"column":2},"end":{"line":1030,"column":81}},"535":{"start":{"line":1031,"column":2},"end":{"line":1033,"column":3}},"536":{"start":{"line":1032,"column":4},"end":{"line":1032,"column":29}},"537":{"start":{"line":1035,"column":2},"end":{"line":1035,"column":69}},"538":{"start":{"line":1036,"column":2},"end":{"line":1056,"column":3}},"539":{"start":{"line":1037,"column":4},"end":{"line":1037,"column":77}},"540":{"start":{"line":1040,"column":4},"end":{"line":1040,"column":17}},"541":{"start":{"line":1041,"column":4},"end":{"line":1041,"column":26}},"542":{"start":{"line":1042,"column":10},"end":{"line":1056,"column":3}},"543":{"start":{"line":1043,"column":4},"end":{"line":1049,"column":5}},"544":{"start":{"line":1046,"column":6},"end":{"line":1046,"column":16}},"545":{"start":{"line":1047,"column":6},"end":{"line":1047,"column":19}},"546":{"start":{"line":1048,"column":6},"end":{"line":1048,"column":28}},"547":{"start":{"line":1050,"column":9},"end":{"line":1056,"column":3}},"548":{"start":{"line":1051,"column":4},"end":{"line":1055,"column":5}},"549":{"start":{"line":1053,"column":6},"end":{"line":1053,"column":19}},"550":{"start":{"line":1054,"column":6},"end":{"line":1054,"column":19}},"551":{"start":{"line":1058,"column":2},"end":{"line":1058,"column":43}},"552":{"start":{"line":1059,"column":2},"end":{"line":1059,"column":31}},"553":{"start":{"line":1060,"column":2},"end":{"line":1060,"column":20}},"554":{"start":{"line":1061,"column":2},"end":{"line":1061,"column":26}},"555":{"start":{"line":1063,"column":2},"end":{"line":1063,"column":76}},"556":{"start":{"line":1064,"column":2},"end":{"line":1064,"column":74}},"557":{"start":{"line":1065,"column":2},"end":{"line":1065,"column":80}},"558":{"start":{"line":1066,"column":2},"end":{"line":1066,"column":73}},"559":{"start":{"line":1068,"column":2},"end":{"line":1068,"column":21}},"560":{"start":{"line":1070,"column":2},"end":{"line":1070,"column":19}},"561":{"start":{"line":1071,"column":2},"end":{"line":1071,"column":18}},"562":{"start":{"line":1072,"column":2},"end":{"line":1072,"column":39}},"563":{"start":{"line":1074,"column":2},"end":{"line":1140,"column":3}},"564":{"start":{"line":1075,"column":4},"end":{"line":1075,"column":35}},"565":{"start":{"line":1076,"column":4},"end":{"line":1118,"column":5}},"566":{"start":{"line":1077,"column":6},"end":{"line":1077,"column":30}},"567":{"start":{"line":1077,"column":15},"end":{"line":1077,"column":30}},"568":{"start":{"line":1078,"column":6},"end":{"line":1084,"column":8}},"569":{"start":{"line":1085,"column":6},"end":{"line":1117,"column":9}},"570":{"start":{"line":1086,"column":8},"end":{"line":1086,"column":32}},"571":{"start":{"line":1086,"column":17},"end":{"line":1086,"column":32}},"572":{"start":{"line":1088,"column":8},"end":{"line":1088,"column":48}},"573":{"start":{"line":1090,"column":8},"end":{"line":1093,"column":9}},"574":{"start":{"line":1091,"column":10},"end":{"line":1092,"column":30}},"575":{"start":{"line":1095,"column":8},"end":{"line":1116,"column":9}},"576":{"start":{"line":1096,"column":10},"end":{"line":1102,"column":12}},"577":{"start":{"line":1103,"column":10},"end":{"line":1109,"column":13}},"578":{"start":{"line":1104,"column":12},"end":{"line":1108,"column":13}},"579":{"start":{"line":1105,"column":14},"end":{"line":1105,"column":38}},"580":{"start":{"line":1107,"column":14},"end":{"line":1107,"column":36}},"581":{"start":{"line":1111,"column":10},"end":{"line":1115,"column":11}},"582":{"start":{"line":1112,"column":12},"end":{"line":1112,"column":36}},"583":{"start":{"line":1114,"column":12},"end":{"line":1114,"column":34}},"584":{"start":{"line":1120,"column":4},"end":{"line":1120,"column":33}},"585":{"start":{"line":1121,"column":4},"end":{"line":1129,"column":6}},"586":{"start":{"line":1131,"column":4},"end":{"line":1139,"column":7}},"587":{"start":{"line":1132,"column":6},"end":{"line":1132,"column":30}},"588":{"start":{"line":1132,"column":15},"end":{"line":1132,"column":30}},"589":{"start":{"line":1134,"column":6},"end":{"line":1138,"column":7}},"590":{"start":{"line":1135,"column":8},"end":{"line":1135,"column":107}},"591":{"start":{"line":1137,"column":8},"end":{"line":1137,"column":98}},"592":{"start":{"line":1142,"column":2},"end":{"line":1225,"column":3}},"593":{"start":{"line":1143,"column":4},"end":{"line":1143,"column":20}},"594":{"start":{"line":1145,"column":4},"end":{"line":1152,"column":5}},"595":{"start":{"line":1146,"column":6},"end":{"line":1146,"column":38}},"596":{"start":{"line":1148,"column":6},"end":{"line":1150,"column":9}},"597":{"start":{"line":1149,"column":8},"end":{"line":1149,"column":16}},"598":{"start":{"line":1151,"column":6},"end":{"line":1151,"column":24}},"599":{"start":{"line":1154,"column":4},"end":{"line":1154,"column":27}},"600":{"start":{"line":1156,"column":4},"end":{"line":1161,"column":6}},"601":{"start":{"line":1162,"column":4},"end":{"line":1206,"column":7}},"602":{"start":{"line":1163,"column":6},"end":{"line":1163,"column":30}},"603":{"start":{"line":1163,"column":15},"end":{"line":1163,"column":30}},"604":{"start":{"line":1165,"column":6},"end":{"line":1165,"column":28}},"605":{"start":{"line":1167,"column":6},"end":{"line":1167,"column":24}},"606":{"start":{"line":1168,"column":6},"end":{"line":1168,"column":41}},"607":{"start":{"line":1169,"column":6},"end":{"line":1169,"column":63}},"608":{"start":{"line":1171,"column":6},"end":{"line":1171,"column":43}},"609":{"start":{"line":1172,"column":6},"end":{"line":1172,"column":34}},"610":{"start":{"line":1174,"column":6},"end":{"line":1180,"column":8}},"611":{"start":{"line":1181,"column":6},"end":{"line":1205,"column":9}},"612":{"start":{"line":1182,"column":8},"end":{"line":1182,"column":32}},"613":{"start":{"line":1182,"column":17},"end":{"line":1182,"column":32}},"614":{"start":{"line":1184,"column":8},"end":{"line":1184,"column":31}},"615":{"start":{"line":1185,"column":8},"end":{"line":1185,"column":38}},"616":{"start":{"line":1188,"column":8},"end":{"line":1190,"column":9}},"617":{"start":{"line":1189,"column":10},"end":{"line":1189,"column":49}},"618":{"start":{"line":1193,"column":8},"end":{"line":1195,"column":9}},"619":{"start":{"line":1194,"column":10},"end":{"line":1194,"column":49}},"620":{"start":{"line":1198,"column":8},"end":{"line":1204,"column":26}},"621":{"start":{"line":1199,"column":10},"end":{"line":1203,"column":11}},"622":{"start":{"line":1200,"column":12},"end":{"line":1200,"column":44}},"623":{"start":{"line":1202,"column":12},"end":{"line":1202,"column":46}},"624":{"start":{"line":1208,"column":4},"end":{"line":1224,"column":7}},"625":{"start":{"line":1209,"column":6},"end":{"line":1209,"column":30}},"626":{"start":{"line":1209,"column":15},"end":{"line":1209,"column":30}},"627":{"start":{"line":1210,"column":6},"end":{"line":1216,"column":7}},"628":{"start":{"line":1211,"column":8},"end":{"line":1215,"column":9}},"629":{"start":{"line":1212,"column":10},"end":{"line":1212,"column":43}},"630":{"start":{"line":1214,"column":10},"end":{"line":1214,"column":41}},"631":{"start":{"line":1217,"column":6},"end":{"line":1223,"column":9}},"632":{"start":{"line":1218,"column":8},"end":{"line":1222,"column":9}},"633":{"start":{"line":1219,"column":10},"end":{"line":1219,"column":44}},"634":{"start":{"line":1221,"column":10},"end":{"line":1221,"column":42}},"635":{"start":{"line":1226,"column":2},"end":{"line":1226,"column":20}},"636":{"start":{"line":1236,"column":0},"end":{"line":1267,"column":2}},"637":{"start":{"line":1237,"column":2},"end":{"line":1237,"column":81}},"638":{"start":{"line":1238,"column":2},"end":{"line":1240,"column":3}},"639":{"start":{"line":1239,"column":4},"end":{"line":1239,"column":29}},"640":{"start":{"line":1242,"column":2},"end":{"line":1242,"column":63}},"641":{"start":{"line":1243,"column":2},"end":{"line":1249,"column":3}},"642":{"start":{"line":1244,"column":4},"end":{"line":1248,"column":5}},"643":{"start":{"line":1246,"column":6},"end":{"line":1246,"column":19}},"644":{"start":{"line":1247,"column":6},"end":{"line":1247,"column":19}},"645":{"start":{"line":1251,"column":2},"end":{"line":1251,"column":43}},"646":{"start":{"line":1252,"column":2},"end":{"line":1252,"column":26}},"647":{"start":{"line":1254,"column":2},"end":{"line":1254,"column":80}},"648":{"start":{"line":1255,"column":2},"end":{"line":1255,"column":73}},"649":{"start":{"line":1257,"column":2},"end":{"line":1265,"column":3}},"650":{"start":{"line":1258,"column":4},"end":{"line":1260,"column":7}},"651":{"start":{"line":1259,"column":6},"end":{"line":1259,"column":41}},"652":{"start":{"line":1262,"column":4},"end":{"line":1264,"column":7}},"653":{"start":{"line":1263,"column":6},"end":{"line":1263,"column":75}},"654":{"start":{"line":1266,"column":2},"end":{"line":1266,"column":20}},"655":{"start":{"line":1286,"column":0},"end":{"line":1338,"column":2}},"656":{"start":{"line":1287,"column":2},"end":{"line":1287,"column":81}},"657":{"start":{"line":1288,"column":2},"end":{"line":1290,"column":3}},"658":{"start":{"line":1289,"column":4},"end":{"line":1289,"column":29}},"659":{"start":{"line":1292,"column":2},"end":{"line":1292,"column":63}},"660":{"start":{"line":1294,"column":2},"end":{"line":1311,"column":3}},"661":{"start":{"line":1295,"column":4},"end":{"line":1299,"column":5}},"662":{"start":{"line":1297,"column":6},"end":{"line":1297,"column":18}},"663":{"start":{"line":1298,"column":6},"end":{"line":1298,"column":18}},"664":{"start":{"line":1300,"column":9},"end":{"line":1311,"column":3}},"665":{"start":{"line":1301,"column":4},"end":{"line":1310,"column":5}},"666":{"start":{"line":1303,"column":6},"end":{"line":1303,"column":19}},"667":{"start":{"line":1304,"column":6},"end":{"line":1304,"column":19}},"668":{"start":{"line":1305,"column":6},"end":{"line":1309,"column":7}},"669":{"start":{"line":1307,"column":8},"end":{"line":1307,"column":25}},"670":{"start":{"line":1308,"column":8},"end":{"line":1308,"column":20}},"671":{"start":{"line":1313,"column":2},"end":{"line":1313,"column":43}},"672":{"start":{"line":1314,"column":2},"end":{"line":1314,"column":26}},"673":{"start":{"line":1315,"column":2},"end":{"line":1315,"column":24}},"674":{"start":{"line":1317,"column":2},"end":{"line":1317,"column":78}},"675":{"start":{"line":1318,"column":2},"end":{"line":1318,"column":80}},"676":{"start":{"line":1319,"column":2},"end":{"line":1319,"column":73}},"677":{"start":{"line":1321,"column":2},"end":{"line":1336,"column":3}},"678":{"start":{"line":1322,"column":4},"end":{"line":1322,"column":22}},"679":{"start":{"line":1323,"column":9},"end":{"line":1336,"column":3}},"680":{"start":{"line":1324,"column":4},"end":{"line":1326,"column":7}},"681":{"start":{"line":1325,"column":6},"end":{"line":1325,"column":77}},"682":{"start":{"line":1328,"column":4},"end":{"line":1328,"column":36}},"683":{"start":{"line":1329,"column":4},"end":{"line":1331,"column":5}},"684":{"start":{"line":1330,"column":6},"end":{"line":1330,"column":37}},"685":{"start":{"line":1332,"column":4},"end":{"line":1334,"column":5}},"686":{"start":{"line":1333,"column":6},"end":{"line":1333,"column":35}},"687":{"start":{"line":1335,"column":4},"end":{"line":1335,"column":37}},"688":{"start":{"line":1337,"column":2},"end":{"line":1337,"column":20}},"689":{"start":{"line":1347,"column":0},"end":{"line":1391,"column":2}},"690":{"start":{"line":1348,"column":2},"end":{"line":1360,"column":3}},"691":{"start":{"line":1349,"column":4},"end":{"line":1353,"column":5}},"692":{"start":{"line":1351,"column":6},"end":{"line":1351,"column":17}},"693":{"start":{"line":1352,"column":6},"end":{"line":1352,"column":17}},"694":{"start":{"line":1354,"column":9},"end":{"line":1360,"column":3}},"695":{"start":{"line":1355,"column":4},"end":{"line":1359,"column":5}},"696":{"start":{"line":1357,"column":6},"end":{"line":1357,"column":19}},"697":{"start":{"line":1358,"column":6},"end":{"line":1358,"column":19}},"698":{"start":{"line":1362,"column":2},"end":{"line":1362,"column":43}},"699":{"start":{"line":1363,"column":2},"end":{"line":1363,"column":26}},"700":{"start":{"line":1364,"column":2},"end":{"line":1364,"column":22}},"701":{"start":{"line":1366,"column":2},"end":{"line":1366,"column":66}},"702":{"start":{"line":1367,"column":2},"end":{"line":1367,"column":76}},"703":{"start":{"line":1368,"column":2},"end":{"line":1368,"column":80}},"704":{"start":{"line":1369,"column":2},"end":{"line":1369,"column":73}},"705":{"start":{"line":1371,"column":2},"end":{"line":1376,"column":3}},"706":{"start":{"line":1372,"column":4},"end":{"line":1372,"column":22}},"707":{"start":{"line":1373,"column":9},"end":{"line":1376,"column":3}},"708":{"start":{"line":1374,"column":4},"end":{"line":1374,"column":51}},"709":{"start":{"line":1374,"column":34},"end":{"line":1374,"column":47}},"710":{"start":{"line":1375,"column":4},"end":{"line":1375,"column":22}},"711":{"start":{"line":1378,"column":2},"end":{"line":1378,"column":27}},"712":{"start":{"line":1379,"column":2},"end":{"line":1379,"column":24}},"713":{"start":{"line":1380,"column":2},"end":{"line":1380,"column":43}},"714":{"start":{"line":1381,"column":2},"end":{"line":1381,"column":34}},"715":{"start":{"line":1385,"column":2},"end":{"line":1385,"column":55}},"716":{"start":{"line":1387,"column":2},"end":{"line":1389,"column":5}},"717":{"start":{"line":1388,"column":4},"end":{"line":1388,"column":85}},"718":{"start":{"line":1390,"column":2},"end":{"line":1390,"column":20}},"719":{"start":{"line":1393,"column":0},"end":{"line":1402,"column":1}},"720":{"start":{"line":1394,"column":2},"end":{"line":1394,"column":39}},"721":{"start":{"line":1394,"column":27},"end":{"line":1394,"column":39}},"722":{"start":{"line":1396,"column":2},"end":{"line":1396,"column":46}},"723":{"start":{"line":1397,"column":2},"end":{"line":1397,"column":34}},"724":{"start":{"line":1398,"column":2},"end":{"line":1398,"column":60}},"725":{"start":{"line":1399,"column":2},"end":{"line":1399,"column":29}},"726":{"start":{"line":1400,"column":2},"end":{"line":1400,"column":40}},"727":{"start":{"line":1401,"column":2},"end":{"line":1401,"column":12}},"728":{"start":{"line":1405,"column":0},"end":{"line":1407,"column":2}},"729":{"start":{"line":1406,"column":2},"end":{"line":1406,"column":54}},"730":{"start":{"line":1414,"column":0},"end":{"line":1428,"column":2}},"731":{"start":{"line":1416,"column":2},"end":{"line":1416,"column":26}},"732":{"start":{"line":1417,"column":2},"end":{"line":1419,"column":3}},"733":{"start":{"line":1418,"column":4},"end":{"line":1418,"column":27}},"734":{"start":{"line":1422,"column":2},"end":{"line":1422,"column":32}},"735":{"start":{"line":1423,"column":2},"end":{"line":1425,"column":3}},"736":{"start":{"line":1424,"column":4},"end":{"line":1424,"column":28}},"737":{"start":{"line":1427,"column":2},"end":{"line":1427,"column":9}},"738":{"start":{"line":1430,"column":0},"end":{"line":1444,"column":2}},"739":{"start":{"line":1454,"column":0},"end":{"line":1537,"column":2}},"740":{"start":{"line":1455,"column":2},"end":{"line":1457,"column":3}},"741":{"start":{"line":1456,"column":4},"end":{"line":1456,"column":21}},"742":{"start":{"line":1458,"column":2},"end":{"line":1458,"column":17}},"743":{"start":{"line":1459,"column":2},"end":{"line":1463,"column":3}},"744":{"start":{"line":1460,"column":4},"end":{"line":1460,"column":77}},"745":{"start":{"line":1461,"column":4},"end":{"line":1461,"column":25}},"746":{"start":{"line":1462,"column":4},"end":{"line":1462,"column":14}},"747":{"start":{"line":1464,"column":2},"end":{"line":1482,"column":3}},"748":{"start":{"line":1465,"column":4},"end":{"line":1465,"column":44}},"749":{"start":{"line":1466,"column":4},"end":{"line":1466,"column":59}},"750":{"start":{"line":1467,"column":4},"end":{"line":1472,"column":5}},"751":{"start":{"line":1468,"column":6},"end":{"line":1469,"column":23}},"752":{"start":{"line":1470,"column":6},"end":{"line":1470,"column":27}},"753":{"start":{"line":1471,"column":6},"end":{"line":1471,"column":16}},"754":{"start":{"line":1473,"column":4},"end":{"line":1478,"column":5}},"755":{"start":{"line":1474,"column":6},"end":{"line":1475,"column":41}},"756":{"start":{"line":1476,"column":6},"end":{"line":1476,"column":27}},"757":{"start":{"line":1477,"column":6},"end":{"line":1477,"column":16}},"758":{"start":{"line":1479,"column":4},"end":{"line":1479,"column":25}},"759":{"start":{"line":1480,"column":4},"end":{"line":1480,"column":27}},"760":{"start":{"line":1481,"column":4},"end":{"line":1481,"column":25}},"761":{"start":{"line":1484,"column":2},"end":{"line":1524,"column":3}},"762":{"start":{"line":1485,"column":4},"end":{"line":1485,"column":29}},"763":{"start":{"line":1486,"column":4},"end":{"line":1488,"column":5}},"764":{"start":{"line":1487,"column":6},"end":{"line":1487,"column":22}},"765":{"start":{"line":1489,"column":4},"end":{"line":1489,"column":20}},"766":{"start":{"line":1490,"column":4},"end":{"line":1518,"column":5}},"767":{"start":{"line":1491,"column":6},"end":{"line":1517,"column":7}},"768":{"start":{"line":1493,"column":8},"end":{"line":1493,"column":52}},"769":{"start":{"line":1494,"column":8},"end":{"line":1512,"column":9}},"770":{"start":{"line":1495,"column":10},"end":{"line":1495,"column":32}},"771":{"start":{"line":1496,"column":10},"end":{"line":1499,"column":11}},"772":{"start":{"line":1498,"column":12},"end":{"line":1498,"column":21}},"773":{"start":{"line":1500,"column":10},"end":{"line":1500,"column":41}},"774":{"start":{"line":1501,"column":10},"end":{"line":1510,"column":11}},"775":{"start":{"line":1502,"column":12},"end":{"line":1502,"column":45}},"776":{"start":{"line":1503,"column":12},"end":{"line":1509,"column":13}},"777":{"start":{"line":1504,"column":14},"end":{"line":1504,"column":43}},"778":{"start":{"line":1506,"column":14},"end":{"line":1506,"column":84}},"779":{"start":{"line":1507,"column":14},"end":{"line":1507,"column":35}},"780":{"start":{"line":1508,"column":14},"end":{"line":1508,"column":24}},"781":{"start":{"line":1511,"column":10},"end":{"line":1511,"column":29}},"782":{"start":{"line":1514,"column":8},"end":{"line":1514,"column":68}},"783":{"start":{"line":1515,"column":8},"end":{"line":1515,"column":29}},"784":{"start":{"line":1516,"column":8},"end":{"line":1516,"column":18}},"785":{"start":{"line":1519,"column":4},"end":{"line":1523,"column":5}},"786":{"start":{"line":1520,"column":6},"end":{"line":1520,"column":31}},"787":{"start":{"line":1522,"column":6},"end":{"line":1522,"column":28}},"788":{"start":{"line":1527,"column":2},"end":{"line":1530,"column":3}},"789":{"start":{"line":1528,"column":4},"end":{"line":1529,"column":69}},"790":{"start":{"line":1532,"column":2},"end":{"line":1532,"column":71}},"791":{"start":{"line":1534,"column":2},"end":{"line":1534,"column":52}},"792":{"start":{"line":1535,"column":2},"end":{"line":1535,"column":38}},"793":{"start":{"line":1536,"column":2},"end":{"line":1536,"column":16}},"794":{"start":{"line":1539,"column":0},"end":{"line":1545,"column":1}},"795":{"start":{"line":1540,"column":2},"end":{"line":1540,"column":24}},"796":{"start":{"line":1541,"column":2},"end":{"line":1543,"column":3}},"797":{"start":{"line":1542,"column":4},"end":{"line":1542,"column":50}},"798":{"start":{"line":1544,"column":2},"end":{"line":1544,"column":11}},"799":{"start":{"line":1547,"column":0},"end":{"line":1562,"column":1}},"800":{"start":{"line":1548,"column":2},"end":{"line":1557,"column":3}},"801":{"start":{"line":1549,"column":4},"end":{"line":1556,"column":5}},"802":{"start":{"line":1552,"column":8},"end":{"line":1552,"column":20}},"803":{"start":{"line":1555,"column":8},"end":{"line":1555,"column":21}},"804":{"start":{"line":1558,"column":2},"end":{"line":1560,"column":3}},"805":{"start":{"line":1559,"column":4},"end":{"line":1559,"column":16}},"806":{"start":{"line":1561,"column":2},"end":{"line":1561,"column":22}},"807":{"start":{"line":1564,"column":0},"end":{"line":1567,"column":1}},"808":{"start":{"line":1565,"column":2},"end":{"line":1565,"column":24}},"809":{"start":{"line":1566,"column":2},"end":{"line":1566,"column":33}},"810":{"start":{"line":1569,"column":0},"end":{"line":1595,"column":1}},"811":{"start":{"line":1570,"column":2},"end":{"line":1572,"column":3}},"812":{"start":{"line":1571,"column":4},"end":{"line":1571,"column":15}},"813":{"start":{"line":1574,"column":2},"end":{"line":1576,"column":3}},"814":{"start":{"line":1575,"column":4},"end":{"line":1575,"column":100}},"815":{"start":{"line":1579,"column":2},"end":{"line":1579,"column":31}},"816":{"start":{"line":1581,"column":2},"end":{"line":1583,"column":3}},"817":{"start":{"line":1582,"column":4},"end":{"line":1582,"column":57}},"818":{"start":{"line":1585,"column":2},"end":{"line":1585,"column":41}},"819":{"start":{"line":1586,"column":2},"end":{"line":1592,"column":3}},"820":{"start":{"line":1587,"column":4},"end":{"line":1589,"column":5}},"821":{"start":{"line":1588,"column":6},"end":{"line":1588,"column":102}},"822":{"start":{"line":1591,"column":4},"end":{"line":1591,"column":25}},"823":{"start":{"line":1594,"column":2},"end":{"line":1594,"column":18}},"824":{"start":{"line":1605,"column":0},"end":{"line":1783,"column":2}},"825":{"start":{"line":1606,"column":2},"end":{"line":1606,"column":18}},"826":{"start":{"line":1607,"column":2},"end":{"line":1609,"column":3}},"827":{"start":{"line":1608,"column":4},"end":{"line":1608,"column":17}},"828":{"start":{"line":1611,"column":2},"end":{"line":1611,"column":26}},"829":{"start":{"line":1613,"column":2},"end":{"line":1613,"column":10}},"830":{"start":{"line":1614,"column":2},"end":{"line":1618,"column":3}},"831":{"start":{"line":1615,"column":4},"end":{"line":1615,"column":76}},"832":{"start":{"line":1616,"column":4},"end":{"line":1616,"column":25}},"833":{"start":{"line":1617,"column":4},"end":{"line":1617,"column":14}},"834":{"start":{"line":1620,"column":2},"end":{"line":1620,"column":41}},"835":{"start":{"line":1621,"column":2},"end":{"line":1781,"column":3}},"836":{"start":{"line":1623,"column":4},"end":{"line":1638,"column":5}},"837":{"start":{"line":1624,"column":6},"end":{"line":1624,"column":29}},"838":{"start":{"line":1625,"column":6},"end":{"line":1631,"column":7}},"839":{"start":{"line":1626,"column":8},"end":{"line":1626,"column":39}},"840":{"start":{"line":1628,"column":8},"end":{"line":1628,"column":98}},"841":{"start":{"line":1629,"column":8},"end":{"line":1629,"column":29}},"842":{"start":{"line":1630,"column":8},"end":{"line":1630,"column":18}},"843":{"start":{"line":1633,"column":6},"end":{"line":1635,"column":7}},"844":{"start":{"line":1634,"column":8},"end":{"line":1634,"column":42}},"845":{"start":{"line":1637,"column":6},"end":{"line":1637,"column":15}},"846":{"start":{"line":1639,"column":4},"end":{"line":1639,"column":45}},"847":{"start":{"line":1640,"column":4},"end":{"line":1642,"column":5}},"848":{"start":{"line":1641,"column":6},"end":{"line":1641,"column":15}},"849":{"start":{"line":1643,"column":4},"end":{"line":1645,"column":5}},"850":{"start":{"line":1644,"column":6},"end":{"line":1644,"column":29}},"851":{"start":{"line":1646,"column":4},"end":{"line":1657,"column":5}},"852":{"start":{"line":1647,"column":6},"end":{"line":1647,"column":26}},"853":{"start":{"line":1648,"column":11},"end":{"line":1657,"column":5}},"854":{"start":{"line":1649,"column":6},"end":{"line":1649,"column":29}},"855":{"start":{"line":1650,"column":11},"end":{"line":1657,"column":5}},"856":{"start":{"line":1656,"column":6},"end":{"line":1656,"column":28}},"857":{"start":{"line":1659,"column":4},"end":{"line":1661,"column":5}},"858":{"start":{"line":1660,"column":6},"end":{"line":1660,"column":15}},"859":{"start":{"line":1663,"column":4},"end":{"line":1665,"column":5}},"860":{"start":{"line":1664,"column":6},"end":{"line":1664,"column":15}},"861":{"start":{"line":1667,"column":4},"end":{"line":1674,"column":5}},"862":{"start":{"line":1673,"column":6},"end":{"line":1673,"column":15}},"863":{"start":{"line":1676,"column":4},"end":{"line":1676,"column":23}},"864":{"start":{"line":1677,"column":4},"end":{"line":1679,"column":5}},"865":{"start":{"line":1678,"column":6},"end":{"line":1678,"column":15}},"866":{"start":{"line":1681,"column":4},"end":{"line":1681,"column":24}},"867":{"start":{"line":1682,"column":4},"end":{"line":1682,"column":18}},"868":{"start":{"line":1683,"column":4},"end":{"line":1734,"column":5}},"869":{"start":{"line":1684,"column":6},"end":{"line":1733,"column":7}},"870":{"start":{"line":1685,"column":8},"end":{"line":1732,"column":9}},"871":{"start":{"line":1686,"column":10},"end":{"line":1686,"column":24}},"872":{"start":{"line":1687,"column":10},"end":{"line":1687,"column":24}},"873":{"start":{"line":1688,"column":10},"end":{"line":1730,"column":11}},"874":{"start":{"line":1692,"column":14},"end":{"line":1698,"column":15}},"875":{"start":{"line":1693,"column":16},"end":{"line":1693,"column":39}},"876":{"start":{"line":1695,"column":16},"end":{"line":1695,"column":98}},"877":{"start":{"line":1696,"column":16},"end":{"line":1696,"column":37}},"878":{"start":{"line":1697,"column":16},"end":{"line":1697,"column":26}},"879":{"start":{"line":1700,"column":14},"end":{"line":1708,"column":15}},"880":{"start":{"line":1701,"column":16},"end":{"line":1705,"column":31}},"881":{"start":{"line":1706,"column":16},"end":{"line":1706,"column":37}},"882":{"start":{"line":1707,"column":16},"end":{"line":1707,"column":26}},"883":{"start":{"line":1709,"column":14},"end":{"line":1709,"column":20}},"884":{"start":{"line":1714,"column":14},"end":{"line":1721,"column":15}},"885":{"start":{"line":1715,"column":16},"end":{"line":1718,"column":29}},"886":{"start":{"line":1719,"column":16},"end":{"line":1719,"column":37}},"887":{"start":{"line":1720,"column":16},"end":{"line":1720,"column":26}},"888":{"start":{"line":1722,"column":14},"end":{"line":1722,"column":20}},"889":{"start":{"line":1724,"column":14},"end":{"line":1724,"column":40}},"890":{"start":{"line":1725,"column":14},"end":{"line":1728,"column":15}},"891":{"start":{"line":1726,"column":16},"end":{"line":1726,"column":37}},"892":{"start":{"line":1727,"column":16},"end":{"line":1727,"column":26}},"893":{"start":{"line":1729,"column":14},"end":{"line":1729,"column":20}},"894":{"start":{"line":1731,"column":10},"end":{"line":1731,"column":16}},"895":{"start":{"line":1736,"column":4},"end":{"line":1741,"column":5}},"896":{"start":{"line":1738,"column":6},"end":{"line":1738,"column":29}},"897":{"start":{"line":1744,"column":4},"end":{"line":1769,"column":5}},"898":{"start":{"line":1745,"column":6},"end":{"line":1751,"column":7}},"899":{"start":{"line":1746,"column":8},"end":{"line":1750,"column":9}},"900":{"start":{"line":1747,"column":10},"end":{"line":1749,"column":11}},"901":{"start":{"line":1748,"column":12},"end":{"line":1748,"column":38}},"902":{"start":{"line":1753,"column":6},"end":{"line":1768,"column":7}},"903":{"start":{"line":1754,"column":8},"end":{"line":1754,"column":77}},"904":{"start":{"line":1755,"column":8},"end":{"line":1767,"column":9}},"905":{"start":{"line":1757,"column":10},"end":{"line":1757,"column":30}},"906":{"start":{"line":1758,"column":15},"end":{"line":1767,"column":9}},"907":{"start":{"line":1760,"column":15},"end":{"line":1767,"column":9}},"908":{"start":{"line":1763,"column":15},"end":{"line":1767,"column":9}},"909":{"start":{"line":1766,"column":10},"end":{"line":1766,"column":30}},"910":{"start":{"line":1771,"column":4},"end":{"line":1779,"column":5}},"911":{"start":{"line":1772,"column":6},"end":{"line":1772,"column":21}},"912":{"start":{"line":1773,"column":6},"end":{"line":1773,"column":28}},"913":{"start":{"line":1774,"column":6},"end":{"line":1777,"column":7}},"914":{"start":{"line":1776,"column":8},"end":{"line":1776,"column":36}},"915":{"start":{"line":1778,"column":6},"end":{"line":1778,"column":18}},"916":{"start":{"line":1780,"column":4},"end":{"line":1780,"column":19}},"917":{"start":{"line":1782,"column":2},"end":{"line":1782,"column":15}},"918":{"start":{"line":1845,"column":0},"end":{"line":2099,"column":2}},"919":{"start":{"line":1846,"column":2},"end":{"line":1846,"column":81}},"920":{"start":{"line":1847,"column":2},"end":{"line":1849,"column":3}},"921":{"start":{"line":1848,"column":4},"end":{"line":1848,"column":29}},"922":{"start":{"line":1851,"column":2},"end":{"line":1863,"column":3}},"923":{"start":{"line":1852,"column":4},"end":{"line":1856,"column":5}},"924":{"start":{"line":1854,"column":6},"end":{"line":1854,"column":17}},"925":{"start":{"line":1855,"column":6},"end":{"line":1855,"column":17}},"926":{"start":{"line":1857,"column":9},"end":{"line":1863,"column":3}},"927":{"start":{"line":1858,"column":4},"end":{"line":1862,"column":5}},"928":{"start":{"line":1860,"column":6},"end":{"line":1860,"column":19}},"929":{"start":{"line":1861,"column":6},"end":{"line":1861,"column":19}},"930":{"start":{"line":1865,"column":2},"end":{"line":1865,"column":43}},"931":{"start":{"line":1866,"column":2},"end":{"line":1866,"column":22}},"932":{"start":{"line":1867,"column":2},"end":{"line":1867,"column":26}},"933":{"start":{"line":1869,"column":2},"end":{"line":1869,"column":76}},"934":{"start":{"line":1870,"column":2},"end":{"line":1870,"column":80}},"935":{"start":{"line":1871,"column":2},"end":{"line":1871,"column":73}},"936":{"start":{"line":1873,"column":2},"end":{"line":1873,"column":21}},"937":{"start":{"line":1874,"column":2},"end":{"line":1874,"column":18}},"938":{"start":{"line":1875,"column":2},"end":{"line":1875,"column":38}},"939":{"start":{"line":1877,"column":2},"end":{"line":1878,"column":50}},"940":{"start":{"line":1880,"column":2},"end":{"line":1887,"column":3}},"941":{"start":{"line":1881,"column":4},"end":{"line":1881,"column":36}},"942":{"start":{"line":1883,"column":4},"end":{"line":1885,"column":7}},"943":{"start":{"line":1884,"column":6},"end":{"line":1884,"column":14}},"944":{"start":{"line":1886,"column":4},"end":{"line":1886,"column":22}},"945":{"start":{"line":1889,"column":2},"end":{"line":1889,"column":25}},"946":{"start":{"line":1891,"column":2},"end":{"line":1891,"column":50}},"947":{"start":{"line":1892,"column":2},"end":{"line":1892,"column":48}},"948":{"start":{"line":1894,"column":2},"end":{"line":1980,"column":3}},"949":{"start":{"line":1895,"column":4},"end":{"line":1979,"column":5}},"950":{"start":{"line":1897,"column":6},"end":{"line":1897,"column":45}},"951":{"start":{"line":1898,"column":11},"end":{"line":1979,"column":5}},"952":{"start":{"line":1902,"column":6},"end":{"line":1906,"column":7}},"953":{"start":{"line":1903,"column":8},"end":{"line":1903,"column":24}},"954":{"start":{"line":1905,"column":8},"end":{"line":1905,"column":24}},"955":{"start":{"line":1908,"column":6},"end":{"line":1919,"column":7}},"956":{"start":{"line":1909,"column":8},"end":{"line":1914,"column":10}},"957":{"start":{"line":1915,"column":8},"end":{"line":1918,"column":11}},"958":{"start":{"line":1916,"column":10},"end":{"line":1916,"column":34}},"959":{"start":{"line":1916,"column":19},"end":{"line":1916,"column":34}},"960":{"start":{"line":1917,"column":10},"end":{"line":1917,"column":30}},"961":{"start":{"line":1921,"column":6},"end":{"line":1976,"column":7}},"962":{"start":{"line":1922,"column":8},"end":{"line":1946,"column":9}},"963":{"start":{"line":1923,"column":10},"end":{"line":1923,"column":36}},"964":{"start":{"line":1924,"column":10},"end":{"line":1924,"column":41}},"965":{"start":{"line":1926,"column":10},"end":{"line":1945,"column":11}},"966":{"start":{"line":1927,"column":12},"end":{"line":1927,"column":20}},"967":{"start":{"line":1928,"column":17},"end":{"line":1945,"column":11}},"968":{"start":{"line":1929,"column":12},"end":{"line":1933,"column":15}},"969":{"start":{"line":1935,"column":12},"end":{"line":1939,"column":15}},"970":{"start":{"line":1936,"column":14},"end":{"line":1938,"column":17}},"971":{"start":{"line":1942,"column":12},"end":{"line":1942,"column":54}},"972":{"start":{"line":1944,"column":12},"end":{"line":1944,"column":25}},"973":{"start":{"line":1948,"column":8},"end":{"line":1968,"column":9}},"974":{"start":{"line":1949,"column":10},"end":{"line":1949,"column":34}},"975":{"start":{"line":1949,"column":19},"end":{"line":1949,"column":34}},"976":{"start":{"line":1951,"column":10},"end":{"line":1967,"column":13}},"977":{"start":{"line":1952,"column":12},"end":{"line":1958,"column":14}},"978":{"start":{"line":1960,"column":12},"end":{"line":1963,"column":15}},"979":{"start":{"line":1961,"column":14},"end":{"line":1961,"column":40}},"980":{"start":{"line":1961,"column":23},"end":{"line":1961,"column":40}},"981":{"start":{"line":1962,"column":14},"end":{"line":1962,"column":39}},"982":{"start":{"line":1965,"column":12},"end":{"line":1965,"column":36}},"983":{"start":{"line":1965,"column":21},"end":{"line":1965,"column":36}},"984":{"start":{"line":1966,"column":12},"end":{"line":1966,"column":52}},"985":{"start":{"line":1970,"column":8},"end":{"line":1970,"column":102}},"986":{"start":{"line":1971,"column":8},"end":{"line":1975,"column":9}},"987":{"start":{"line":1972,"column":10},"end":{"line":1972,"column":66}},"988":{"start":{"line":1974,"column":10},"end":{"line":1974,"column":57}},"989":{"start":{"line":1978,"column":6},"end":{"line":1978,"column":24}},"990":{"start":{"line":1982,"column":2},"end":{"line":2075,"column":4}},"991":{"start":{"line":1983,"column":4},"end":{"line":2074,"column":5}},"992":{"start":{"line":1984,"column":6},"end":{"line":2071,"column":9}},"993":{"start":{"line":1985,"column":8},"end":{"line":1985,"column":43}},"994":{"start":{"line":1986,"column":8},"end":{"line":1990,"column":9}},"995":{"start":{"line":1987,"column":10},"end":{"line":1987,"column":34}},"996":{"start":{"line":1989,"column":10},"end":{"line":1989,"column":33}},"997":{"start":{"line":1992,"column":8},"end":{"line":2037,"column":9}},"998":{"start":{"line":1993,"column":10},"end":{"line":1997,"column":12}},"999":{"start":{"line":1998,"column":10},"end":{"line":1998,"column":18}},"1000":{"start":{"line":1999,"column":10},"end":{"line":2003,"column":11}},"1001":{"start":{"line":2000,"column":12},"end":{"line":2000,"column":44}},"1002":{"start":{"line":2002,"column":12},"end":{"line":2002,"column":33}},"1003":{"start":{"line":2005,"column":10},"end":{"line":2034,"column":11}},"1004":{"start":{"line":2006,"column":12},"end":{"line":2033,"column":13}},"1005":{"start":{"line":2010,"column":14},"end":{"line":2010,"column":57}},"1006":{"start":{"line":2011,"column":14},"end":{"line":2013,"column":15}},"1007":{"start":{"line":2012,"column":16},"end":{"line":2012,"column":32}},"1008":{"start":{"line":2018,"column":14},"end":{"line":2018,"column":77}},"1009":{"start":{"line":2019,"column":14},"end":{"line":2031,"column":17}},"1010":{"start":{"line":2020,"column":16},"end":{"line":2020,"column":39}},"1011":{"start":{"line":2021,"column":16},"end":{"line":2023,"column":17}},"1012":{"start":{"line":2022,"column":18},"end":{"line":2022,"column":53}},"1013":{"start":{"line":2026,"column":16},"end":{"line":2026,"column":67}},"1014":{"start":{"line":2027,"column":16},"end":{"line":2029,"column":17}},"1015":{"start":{"line":2028,"column":18},"end":{"line":2028,"column":59}},"1016":{"start":{"line":2030,"column":16},"end":{"line":2030,"column":66}},"1017":{"start":{"line":2030,"column":30},"end":{"line":2030,"column":66}},"1018":{"start":{"line":2032,"column":14},"end":{"line":2032,"column":50}},"1019":{"start":{"line":2036,"column":10},"end":{"line":2036,"column":30}},"1020":{"start":{"line":2039,"column":8},"end":{"line":2052,"column":9}},"1021":{"start":{"line":2040,"column":10},"end":{"line":2046,"column":12}},"1022":{"start":{"line":2048,"column":10},"end":{"line":2051,"column":13}},"1023":{"start":{"line":2049,"column":12},"end":{"line":2049,"column":42}},"1024":{"start":{"line":2049,"column":21},"end":{"line":2049,"column":42}},"1025":{"start":{"line":2050,"column":12},"end":{"line":2050,"column":48}},"1026":{"start":{"line":2055,"column":8},"end":{"line":2055,"column":32}},"1027":{"start":{"line":2055,"column":17},"end":{"line":2055,"column":32}},"1028":{"start":{"line":2061,"column":8},"end":{"line":2061,"column":44}},"1029":{"start":{"line":2063,"column":8},"end":{"line":2065,"column":9}},"1030":{"start":{"line":2064,"column":10},"end":{"line":2064,"column":59}},"1031":{"start":{"line":2066,"column":8},"end":{"line":2068,"column":9}},"1032":{"start":{"line":2067,"column":10},"end":{"line":2067,"column":46}},"1033":{"start":{"line":2070,"column":8},"end":{"line":2070,"column":25}},"1034":{"start":{"line":2073,"column":6},"end":{"line":2073,"column":26}},"1035":{"start":{"line":2077,"column":2},"end":{"line":2097,"column":3}},"1036":{"start":{"line":2078,"column":4},"end":{"line":2082,"column":5}},"1037":{"start":{"line":2079,"column":6},"end":{"line":2079,"column":59}},"1038":{"start":{"line":2081,"column":6},"end":{"line":2081,"column":50}},"1039":{"start":{"line":2084,"column":4},"end":{"line":2089,"column":6}},"1040":{"start":{"line":2090,"column":4},"end":{"line":2096,"column":7}},"1041":{"start":{"line":2091,"column":6},"end":{"line":2091,"column":30}},"1042":{"start":{"line":2091,"column":15},"end":{"line":2091,"column":30}},"1043":{"start":{"line":2093,"column":6},"end":{"line":2095,"column":56}},"1044":{"start":{"line":2098,"column":2},"end":{"line":2098,"column":20}},"1045":{"start":{"line":2101,"column":0},"end":{"line":2103,"column":1}},"1046":{"start":{"line":2102,"column":2},"end":{"line":2102,"column":29}},"1047":{"start":{"line":2113,"column":0},"end":{"line":2145,"column":2}},"1048":{"start":{"line":2114,"column":2},"end":{"line":2114,"column":81}},"1049":{"start":{"line":2115,"column":2},"end":{"line":2117,"column":3}},"1050":{"start":{"line":2116,"column":4},"end":{"line":2116,"column":29}},"1051":{"start":{"line":2119,"column":2},"end":{"line":2129,"column":3}},"1052":{"start":{"line":2120,"column":4},"end":{"line":2123,"column":5}},"1053":{"start":{"line":2121,"column":6},"end":{"line":2121,"column":17}},"1054":{"start":{"line":2122,"column":6},"end":{"line":2122,"column":17}},"1055":{"start":{"line":2124,"column":9},"end":{"line":2129,"column":3}},"1056":{"start":{"line":2125,"column":4},"end":{"line":2128,"column":5}},"1057":{"start":{"line":2126,"column":6},"end":{"line":2126,"column":19}},"1058":{"start":{"line":2127,"column":6},"end":{"line":2127,"column":19}},"1059":{"start":{"line":2131,"column":2},"end":{"line":2131,"column":43}},"1060":{"start":{"line":2132,"column":2},"end":{"line":2132,"column":22}},"1061":{"start":{"line":2133,"column":2},"end":{"line":2133,"column":26}},"1062":{"start":{"line":2135,"column":2},"end":{"line":2135,"column":76}},"1063":{"start":{"line":2136,"column":2},"end":{"line":2136,"column":80}},"1064":{"start":{"line":2137,"column":2},"end":{"line":2137,"column":73}},"1065":{"start":{"line":2139,"column":2},"end":{"line":2139,"column":18}},"1066":{"start":{"line":2140,"column":2},"end":{"line":2143,"column":5}},"1067":{"start":{"line":2141,"column":4},"end":{"line":2141,"column":75}},"1068":{"start":{"line":2141,"column":54},"end":{"line":2141,"column":75}},"1069":{"start":{"line":2142,"column":4},"end":{"line":2142,"column":27}},"1070":{"start":{"line":2144,"column":2},"end":{"line":2144,"column":20}},"1071":{"start":{"line":2161,"column":0},"end":{"line":2278,"column":2}},"1072":{"start":{"line":2164,"column":2},"end":{"line":2164,"column":81}},"1073":{"start":{"line":2165,"column":2},"end":{"line":2167,"column":3}},"1074":{"start":{"line":2166,"column":4},"end":{"line":2166,"column":29}},"1075":{"start":{"line":2169,"column":2},"end":{"line":2169,"column":19}},"1076":{"start":{"line":2170,"column":2},"end":{"line":2170,"column":39}},"1077":{"start":{"line":2172,"column":2},"end":{"line":2173,"column":57}},"1078":{"start":{"line":2175,"column":2},"end":{"line":2185,"column":3}},"1079":{"start":{"line":2176,"column":4},"end":{"line":2179,"column":5}},"1080":{"start":{"line":2177,"column":6},"end":{"line":2177,"column":17}},"1081":{"start":{"line":2178,"column":6},"end":{"line":2178,"column":17}},"1082":{"start":{"line":2180,"column":9},"end":{"line":2185,"column":3}},"1083":{"start":{"line":2181,"column":4},"end":{"line":2184,"column":5}},"1084":{"start":{"line":2182,"column":6},"end":{"line":2182,"column":19}},"1085":{"start":{"line":2183,"column":6},"end":{"line":2183,"column":19}},"1086":{"start":{"line":2187,"column":2},"end":{"line":2187,"column":43}},"1087":{"start":{"line":2188,"column":2},"end":{"line":2188,"column":22}},"1088":{"start":{"line":2189,"column":2},"end":{"line":2189,"column":26}},"1089":{"start":{"line":2191,"column":2},"end":{"line":2191,"column":76}},"1090":{"start":{"line":2192,"column":2},"end":{"line":2192,"column":80}},"1091":{"start":{"line":2193,"column":2},"end":{"line":2193,"column":73}},"1092":{"start":{"line":2195,"column":2},"end":{"line":2195,"column":21}},"1093":{"start":{"line":2197,"column":2},"end":{"line":2197,"column":29}},"1094":{"start":{"line":2198,"column":2},"end":{"line":2198,"column":25}},"1095":{"start":{"line":2199,"column":2},"end":{"line":2199,"column":22}},"1096":{"start":{"line":2201,"column":2},"end":{"line":2224,"column":3}},"1097":{"start":{"line":2202,"column":4},"end":{"line":2202,"column":20}},"1098":{"start":{"line":2204,"column":4},"end":{"line":2204,"column":54}},"1099":{"start":{"line":2205,"column":4},"end":{"line":2210,"column":6}},"1100":{"start":{"line":2211,"column":4},"end":{"line":2223,"column":7}},"1101":{"start":{"line":2212,"column":6},"end":{"line":2212,"column":30}},"1102":{"start":{"line":2212,"column":15},"end":{"line":2212,"column":30}},"1103":{"start":{"line":2213,"column":6},"end":{"line":2218,"column":8}},"1104":{"start":{"line":2219,"column":6},"end":{"line":2222,"column":9}},"1105":{"start":{"line":2220,"column":8},"end":{"line":2220,"column":32}},"1106":{"start":{"line":2220,"column":17},"end":{"line":2220,"column":32}},"1107":{"start":{"line":2221,"column":8},"end":{"line":2221,"column":28}},"1108":{"start":{"line":2226,"column":2},"end":{"line":2276,"column":3}},"1109":{"start":{"line":2227,"column":4},"end":{"line":2232,"column":6}},"1110":{"start":{"line":2234,"column":4},"end":{"line":2256,"column":5}},"1111":{"start":{"line":2235,"column":6},"end":{"line":2239,"column":7}},"1112":{"start":{"line":2236,"column":8},"end":{"line":2236,"column":65}},"1113":{"start":{"line":2238,"column":8},"end":{"line":2238,"column":56}},"1114":{"start":{"line":2241,"column":6},"end":{"line":2249,"column":7}},"1115":{"start":{"line":2243,"column":8},"end":{"line":2243,"column":39}},"1116":{"start":{"line":2244,"column":8},"end":{"line":2244,"column":46}},"1117":{"start":{"line":2246,"column":8},"end":{"line":2248,"column":11}},"1118":{"start":{"line":2247,"column":10},"end":{"line":2247,"column":18}},"1119":{"start":{"line":2251,"column":6},"end":{"line":2255,"column":7}},"1120":{"start":{"line":2252,"column":8},"end":{"line":2252,"column":68}},"1121":{"start":{"line":2254,"column":8},"end":{"line":2254,"column":59}},"1122":{"start":{"line":2258,"column":4},"end":{"line":2275,"column":5}},"1123":{"start":{"line":2259,"column":6},"end":{"line":2259,"column":30}},"1124":{"start":{"line":2259,"column":15},"end":{"line":2259,"column":30}},"1125":{"start":{"line":2261,"column":6},"end":{"line":2263,"column":7}},"1126":{"start":{"line":2262,"column":8},"end":{"line":2262,"column":29}},"1127":{"start":{"line":2265,"column":6},"end":{"line":2271,"column":8}},"1128":{"start":{"line":2272,"column":6},"end":{"line":2274,"column":9}},"1129":{"start":{"line":2273,"column":8},"end":{"line":2273,"column":22}},"1130":{"start":{"line":2277,"column":2},"end":{"line":2277,"column":20}},"1131":{"start":{"line":2280,"column":0},"end":{"line":2283,"column":1}},"1132":{"start":{"line":2281,"column":2},"end":{"line":2282,"column":68}},"1133":{"start":{"line":2295,"column":0},"end":{"line":2342,"column":2}},"1134":{"start":{"line":2298,"column":2},"end":{"line":2298,"column":81}},"1135":{"start":{"line":2299,"column":2},"end":{"line":2301,"column":3}},"1136":{"start":{"line":2300,"column":4},"end":{"line":2300,"column":29}},"1137":{"start":{"line":2303,"column":2},"end":{"line":2303,"column":63}},"1138":{"start":{"line":2304,"column":2},"end":{"line":2310,"column":3}},"1139":{"start":{"line":2305,"column":4},"end":{"line":2309,"column":5}},"1140":{"start":{"line":2307,"column":6},"end":{"line":2307,"column":19}},"1141":{"start":{"line":2308,"column":6},"end":{"line":2308,"column":19}},"1142":{"start":{"line":2312,"column":2},"end":{"line":2312,"column":26}},"1143":{"start":{"line":2313,"column":2},"end":{"line":2313,"column":43}},"1144":{"start":{"line":2315,"column":2},"end":{"line":2315,"column":80}},"1145":{"start":{"line":2316,"column":2},"end":{"line":2316,"column":73}},"1146":{"start":{"line":2318,"column":2},"end":{"line":2325,"column":3}},"1147":{"start":{"line":2319,"column":4},"end":{"line":2319,"column":22}},"1148":{"start":{"line":2320,"column":9},"end":{"line":2325,"column":3}},"1149":{"start":{"line":2321,"column":4},"end":{"line":2323,"column":7}},"1150":{"start":{"line":2322,"column":6},"end":{"line":2322,"column":79}},"1151":{"start":{"line":2324,"column":4},"end":{"line":2324,"column":22}},"1152":{"start":{"line":2327,"column":2},"end":{"line":2327,"column":19}},"1153":{"start":{"line":2329,"column":2},"end":{"line":2340,"column":5}},"1154":{"start":{"line":2330,"column":4},"end":{"line":2330,"column":28}},"1155":{"start":{"line":2330,"column":13},"end":{"line":2330,"column":28}},"1156":{"start":{"line":2331,"column":4},"end":{"line":2331,"column":41}},"1157":{"start":{"line":2332,"column":4},"end":{"line":2337,"column":5}},"1158":{"start":{"line":2333,"column":6},"end":{"line":2333,"column":91}},"1159":{"start":{"line":2334,"column":6},"end":{"line":2334,"column":29}},"1160":{"start":{"line":2335,"column":6},"end":{"line":2335,"column":27}},"1161":{"start":{"line":2336,"column":6},"end":{"line":2336,"column":21}},"1162":{"start":{"line":2339,"column":4},"end":{"line":2339,"column":19}},"1163":{"start":{"line":2341,"column":2},"end":{"line":2341,"column":20}},"1164":{"start":{"line":2358,"column":0},"end":{"line":2430,"column":2}},"1165":{"start":{"line":2359,"column":2},"end":{"line":2359,"column":81}},"1166":{"start":{"line":2360,"column":2},"end":{"line":2362,"column":3}},"1167":{"start":{"line":2361,"column":4},"end":{"line":2361,"column":29}},"1168":{"start":{"line":2364,"column":2},"end":{"line":2376,"column":3}},"1169":{"start":{"line":2365,"column":4},"end":{"line":2369,"column":5}},"1170":{"start":{"line":2367,"column":6},"end":{"line":2367,"column":17}},"1171":{"start":{"line":2368,"column":6},"end":{"line":2368,"column":17}},"1172":{"start":{"line":2370,"column":9},"end":{"line":2376,"column":3}},"1173":{"start":{"line":2371,"column":4},"end":{"line":2375,"column":5}},"1174":{"start":{"line":2373,"column":6},"end":{"line":2373,"column":19}},"1175":{"start":{"line":2374,"column":6},"end":{"line":2374,"column":19}},"1176":{"start":{"line":2378,"column":2},"end":{"line":2378,"column":43}},"1177":{"start":{"line":2379,"column":2},"end":{"line":2379,"column":22}},"1178":{"start":{"line":2380,"column":2},"end":{"line":2380,"column":26}},"1179":{"start":{"line":2382,"column":2},"end":{"line":2382,"column":76}},"1180":{"start":{"line":2383,"column":2},"end":{"line":2383,"column":80}},"1181":{"start":{"line":2384,"column":2},"end":{"line":2384,"column":73}},"1182":{"start":{"line":2386,"column":2},"end":{"line":2386,"column":19}},"1183":{"start":{"line":2387,"column":2},"end":{"line":2387,"column":39}},"1184":{"start":{"line":2388,"column":2},"end":{"line":2389,"column":52}},"1185":{"start":{"line":2390,"column":2},"end":{"line":2391,"column":46}},"1186":{"start":{"line":2393,"column":2},"end":{"line":2393,"column":21}},"1187":{"start":{"line":2395,"column":2},"end":{"line":2395,"column":29}},"1188":{"start":{"line":2396,"column":2},"end":{"line":2396,"column":25}},"1189":{"start":{"line":2397,"column":2},"end":{"line":2397,"column":22}},"1190":{"start":{"line":2399,"column":2},"end":{"line":2407,"column":3}},"1191":{"start":{"line":2400,"column":4},"end":{"line":2400,"column":35}},"1192":{"start":{"line":2401,"column":4},"end":{"line":2401,"column":41}},"1193":{"start":{"line":2403,"column":4},"end":{"line":2405,"column":7}},"1194":{"start":{"line":2404,"column":6},"end":{"line":2404,"column":14}},"1195":{"start":{"line":2406,"column":4},"end":{"line":2406,"column":22}},"1196":{"start":{"line":2409,"column":2},"end":{"line":2414,"column":4}},"1197":{"start":{"line":2415,"column":2},"end":{"line":2428,"column":5}},"1198":{"start":{"line":2416,"column":4},"end":{"line":2416,"column":28}},"1199":{"start":{"line":2416,"column":13},"end":{"line":2416,"column":28}},"1200":{"start":{"line":2417,"column":4},"end":{"line":2417,"column":28}},"1201":{"start":{"line":2419,"column":4},"end":{"line":2427,"column":5}},"1202":{"start":{"line":2422,"column":6},"end":{"line":2422,"column":50}},"1203":{"start":{"line":2426,"column":6},"end":{"line":2426,"column":59}},"1204":{"start":{"line":2429,"column":2},"end":{"line":2429,"column":20}},"1205":{"start":{"line":2440,"column":0},"end":{"line":2576,"column":2}},"1206":{"start":{"line":2441,"column":2},"end":{"line":2441,"column":81}},"1207":{"start":{"line":2442,"column":2},"end":{"line":2444,"column":3}},"1208":{"start":{"line":2443,"column":4},"end":{"line":2443,"column":29}},"1209":{"start":{"line":2445,"column":2},"end":{"line":2445,"column":31}},"1210":{"start":{"line":2447,"column":2},"end":{"line":2450,"column":3}},"1211":{"start":{"line":2448,"column":4},"end":{"line":2448,"column":17}},"1212":{"start":{"line":2449,"column":4},"end":{"line":2449,"column":17}},"1213":{"start":{"line":2452,"column":2},"end":{"line":2452,"column":43}},"1214":{"start":{"line":2453,"column":2},"end":{"line":2453,"column":26}},"1215":{"start":{"line":2455,"column":2},"end":{"line":2455,"column":82}},"1216":{"start":{"line":2456,"column":2},"end":{"line":2456,"column":75}},"1217":{"start":{"line":2458,"column":2},"end":{"line":2462,"column":3}},"1218":{"start":{"line":2459,"column":4},"end":{"line":2459,"column":22}},"1219":{"start":{"line":2460,"column":10},"end":{"line":2462,"column":3}},"1220":{"start":{"line":2461,"column":4},"end":{"line":2461,"column":43}},"1221":{"start":{"line":2464,"column":2},"end":{"line":2464,"column":21}},"1222":{"start":{"line":2466,"column":2},"end":{"line":2472,"column":3}},"1223":{"start":{"line":2467,"column":4},"end":{"line":2471,"column":5}},"1224":{"start":{"line":2468,"column":6},"end":{"line":2468,"column":30}},"1225":{"start":{"line":2470,"column":6},"end":{"line":2470,"column":60}},"1226":{"start":{"line":2474,"column":2},"end":{"line":2476,"column":3}},"1227":{"start":{"line":2475,"column":4},"end":{"line":2475,"column":27}},"1228":{"start":{"line":2478,"column":2},"end":{"line":2478,"column":18}},"1229":{"start":{"line":2479,"column":2},"end":{"line":2479,"column":38}},"1230":{"start":{"line":2480,"column":2},"end":{"line":2480,"column":34}},"1231":{"start":{"line":2482,"column":2},"end":{"line":2487,"column":4}},"1232":{"start":{"line":2488,"column":2},"end":{"line":2574,"column":5}},"1233":{"start":{"line":2489,"column":4},"end":{"line":2489,"column":28}},"1234":{"start":{"line":2489,"column":13},"end":{"line":2489,"column":28}},"1235":{"start":{"line":2491,"column":4},"end":{"line":2491,"column":35}},"1236":{"start":{"line":2492,"column":4},"end":{"line":2492,"column":38}},"1237":{"start":{"line":2493,"column":4},"end":{"line":2493,"column":29}},"1238":{"start":{"line":2496,"column":4},"end":{"line":2498,"column":5}},"1239":{"start":{"line":2497,"column":6},"end":{"line":2497,"column":20}},"1240":{"start":{"line":2500,"column":4},"end":{"line":2511,"column":22}},"1241":{"start":{"line":2501,"column":6},"end":{"line":2510,"column":7}},"1242":{"start":{"line":2502,"column":8},"end":{"line":2502,"column":15}},"1243":{"start":{"line":2504,"column":8},"end":{"line":2504,"column":44}},"1244":{"start":{"line":2506,"column":8},"end":{"line":2508,"column":9}},"1245":{"start":{"line":2507,"column":10},"end":{"line":2507,"column":20}},"1246":{"start":{"line":2509,"column":8},"end":{"line":2509,"column":22}},"1247":{"start":{"line":2514,"column":4},"end":{"line":2573,"column":5}},"1248":{"start":{"line":2515,"column":6},"end":{"line":2572,"column":19}},"1249":{"start":{"line":2516,"column":8},"end":{"line":2571,"column":21}},"1250":{"start":{"line":2517,"column":10},"end":{"line":2517,"column":39}},"1251":{"start":{"line":2518,"column":10},"end":{"line":2551,"column":11}},"1252":{"start":{"line":2519,"column":12},"end":{"line":2521,"column":13}},"1253":{"start":{"line":2520,"column":14},"end":{"line":2520,"column":35}},"1254":{"start":{"line":2523,"column":12},"end":{"line":2529,"column":14}},"1255":{"start":{"line":2530,"column":12},"end":{"line":2550,"column":15}},"1256":{"start":{"line":2531,"column":14},"end":{"line":2531,"column":38}},"1257":{"start":{"line":2531,"column":23},"end":{"line":2531,"column":38}},"1258":{"start":{"line":2533,"column":14},"end":{"line":2533,"column":60}},"1259":{"start":{"line":2535,"column":14},"end":{"line":2541,"column":16}},"1260":{"start":{"line":2542,"column":14},"end":{"line":2549,"column":17}},"1261":{"start":{"line":2543,"column":16},"end":{"line":2543,"column":46}},"1262":{"start":{"line":2543,"column":25},"end":{"line":2543,"column":46}},"1263":{"start":{"line":2544,"column":16},"end":{"line":2548,"column":19}},"1264":{"start":{"line":2545,"column":18},"end":{"line":2547,"column":21}},"1265":{"start":{"line":2546,"column":20},"end":{"line":2546,"column":34}},"1266":{"start":{"line":2553,"column":10},"end":{"line":2560,"column":12}},"1267":{"start":{"line":2562,"column":10},"end":{"line":2570,"column":13}},"1268":{"start":{"line":2563,"column":12},"end":{"line":2563,"column":36}},"1269":{"start":{"line":2563,"column":21},"end":{"line":2563,"column":36}},"1270":{"start":{"line":2565,"column":12},"end":{"line":2569,"column":13}},"1271":{"start":{"line":2566,"column":14},"end":{"line":2566,"column":94}},"1272":{"start":{"line":2568,"column":14},"end":{"line":2568,"column":85}},"1273":{"start":{"line":2575,"column":2},"end":{"line":2575,"column":20}},"1274":{"start":{"line":2594,"column":0},"end":{"line":2715,"column":2}},"1275":{"start":{"line":2596,"column":2},"end":{"line":2596,"column":81}},"1276":{"start":{"line":2597,"column":2},"end":{"line":2599,"column":3}},"1277":{"start":{"line":2598,"column":4},"end":{"line":2598,"column":29}},"1278":{"start":{"line":2601,"column":2},"end":{"line":2601,"column":69}},"1279":{"start":{"line":2603,"column":2},"end":{"line":2623,"column":3}},"1280":{"start":{"line":2604,"column":4},"end":{"line":2604,"column":17}},"1281":{"start":{"line":2605,"column":4},"end":{"line":2605,"column":15}},"1282":{"start":{"line":2606,"column":9},"end":{"line":2623,"column":3}},"1283":{"start":{"line":2610,"column":4},"end":{"line":2614,"column":5}},"1284":{"start":{"line":2611,"column":6},"end":{"line":2611,"column":16}},"1285":{"start":{"line":2612,"column":6},"end":{"line":2612,"column":19}},"1286":{"start":{"line":2613,"column":6},"end":{"line":2613,"column":17}},"1287":{"start":{"line":2615,"column":9},"end":{"line":2623,"column":3}},"1288":{"start":{"line":2619,"column":4},"end":{"line":2622,"column":5}},"1289":{"start":{"line":2620,"column":6},"end":{"line":2620,"column":19}},"1290":{"start":{"line":2621,"column":6},"end":{"line":2621,"column":19}},"1291":{"start":{"line":2625,"column":2},"end":{"line":2625,"column":20}},"1292":{"start":{"line":2626,"column":2},"end":{"line":2626,"column":26}},"1293":{"start":{"line":2627,"column":2},"end":{"line":2627,"column":43}},"1294":{"start":{"line":2629,"column":2},"end":{"line":2629,"column":76}},"1295":{"start":{"line":2630,"column":2},"end":{"line":2630,"column":74}},"1296":{"start":{"line":2631,"column":2},"end":{"line":2631,"column":80}},"1297":{"start":{"line":2632,"column":2},"end":{"line":2632,"column":73}},"1298":{"start":{"line":2634,"column":2},"end":{"line":2634,"column":19}},"1299":{"start":{"line":2635,"column":2},"end":{"line":2635,"column":50}},"1300":{"start":{"line":2636,"column":2},"end":{"line":2637,"column":53}},"1301":{"start":{"line":2639,"column":2},"end":{"line":2639,"column":21}},"1302":{"start":{"line":2641,"column":2},"end":{"line":2641,"column":29}},"1303":{"start":{"line":2642,"column":2},"end":{"line":2642,"column":25}},"1304":{"start":{"line":2643,"column":2},"end":{"line":2643,"column":29}},"1305":{"start":{"line":2645,"column":2},"end":{"line":2645,"column":22}},"1306":{"start":{"line":2647,"column":2},"end":{"line":2652,"column":4}},"1307":{"start":{"line":2653,"column":2},"end":{"line":2667,"column":5}},"1308":{"start":{"line":2654,"column":4},"end":{"line":2654,"column":28}},"1309":{"start":{"line":2654,"column":13},"end":{"line":2654,"column":28}},"1310":{"start":{"line":2655,"column":4},"end":{"line":2661,"column":6}},"1311":{"start":{"line":2662,"column":4},"end":{"line":2666,"column":9}},"1312":{"start":{"line":2664,"column":8},"end":{"line":2664,"column":32}},"1313":{"start":{"line":2664,"column":17},"end":{"line":2664,"column":32}},"1314":{"start":{"line":2665,"column":8},"end":{"line":2665,"column":38}},"1315":{"start":{"line":2669,"column":2},"end":{"line":2713,"column":3}},"1316":{"start":{"line":2670,"column":4},"end":{"line":2679,"column":5}},"1317":{"start":{"line":2671,"column":6},"end":{"line":2671,"column":37}},"1318":{"start":{"line":2672,"column":6},"end":{"line":2672,"column":44}},"1319":{"start":{"line":2673,"column":6},"end":{"line":2673,"column":35}},"1320":{"start":{"line":2674,"column":6},"end":{"line":2674,"column":42}},"1321":{"start":{"line":2676,"column":6},"end":{"line":2678,"column":9}},"1322":{"start":{"line":2677,"column":8},"end":{"line":2677,"column":16}},"1323":{"start":{"line":2681,"column":4},"end":{"line":2695,"column":5}},"1324":{"start":{"line":2682,"column":6},"end":{"line":2682,"column":30}},"1325":{"start":{"line":2682,"column":15},"end":{"line":2682,"column":30}},"1326":{"start":{"line":2684,"column":6},"end":{"line":2691,"column":8}},"1327":{"start":{"line":2692,"column":6},"end":{"line":2694,"column":9}},"1328":{"start":{"line":2693,"column":8},"end":{"line":2693,"column":29}},"1329":{"start":{"line":2697,"column":4},"end":{"line":2703,"column":6}},"1330":{"start":{"line":2704,"column":4},"end":{"line":2712,"column":7}},"1331":{"start":{"line":2705,"column":6},"end":{"line":2705,"column":30}},"1332":{"start":{"line":2705,"column":15},"end":{"line":2705,"column":30}},"1333":{"start":{"line":2707,"column":6},"end":{"line":2711,"column":7}},"1334":{"start":{"line":2708,"column":8},"end":{"line":2708,"column":80}},"1335":{"start":{"line":2710,"column":8},"end":{"line":2710,"column":71}},"1336":{"start":{"line":2714,"column":2},"end":{"line":2714,"column":20}},"1337":{"start":{"line":2717,"column":0},"end":{"line":2719,"column":2}},"1338":{"start":{"line":2718,"column":2},"end":{"line":2718,"column":27}},"1339":{"start":{"line":2725,"column":0},"end":{"line":2727,"column":2}},"1340":{"start":{"line":2726,"column":2},"end":{"line":2726,"column":40}},"1341":{"start":{"line":2737,"column":0},"end":{"line":2851,"column":6}},"1342":{"start":{"line":2740,"column":6},"end":{"line":2740,"column":85}},"1343":{"start":{"line":2741,"column":6},"end":{"line":2743,"column":7}},"1344":{"start":{"line":2742,"column":8},"end":{"line":2742,"column":33}},"1345":{"start":{"line":2745,"column":6},"end":{"line":2748,"column":7}},"1346":{"start":{"line":2746,"column":8},"end":{"line":2746,"column":21}},"1347":{"start":{"line":2747,"column":8},"end":{"line":2747,"column":21}},"1348":{"start":{"line":2750,"column":6},"end":{"line":2750,"column":47}},"1349":{"start":{"line":2751,"column":6},"end":{"line":2751,"column":30}},"1350":{"start":{"line":2753,"column":6},"end":{"line":2753,"column":86}},"1351":{"start":{"line":2754,"column":6},"end":{"line":2754,"column":79}},"1352":{"start":{"line":2756,"column":6},"end":{"line":2756,"column":22}},"1353":{"start":{"line":2757,"column":6},"end":{"line":2757,"column":42}},"1354":{"start":{"line":2759,"column":6},"end":{"line":2759,"column":35}},"1355":{"start":{"line":2760,"column":6},"end":{"line":2760,"column":50}},"1356":{"start":{"line":2761,"column":6},"end":{"line":2761,"column":25}},"1357":{"start":{"line":2763,"column":6},"end":{"line":2764,"column":26}},"1358":{"start":{"line":2764,"column":8},"end":{"line":2764,"column":26}},"1359":{"start":{"line":2766,"column":6},"end":{"line":2771,"column":8}},"1360":{"start":{"line":2773,"column":6},"end":{"line":2786,"column":9}},"1361":{"start":{"line":2774,"column":8},"end":{"line":2774,"column":32}},"1362":{"start":{"line":2774,"column":17},"end":{"line":2774,"column":32}},"1363":{"start":{"line":2775,"column":8},"end":{"line":2781,"column":10}},"1364":{"start":{"line":2782,"column":8},"end":{"line":2785,"column":11}},"1365":{"start":{"line":2783,"column":10},"end":{"line":2783,"column":34}},"1366":{"start":{"line":2783,"column":19},"end":{"line":2783,"column":34}},"1367":{"start":{"line":2784,"column":10},"end":{"line":2784,"column":38}},"1368":{"start":{"line":2788,"column":6},"end":{"line":2849,"column":7}},"1369":{"start":{"line":2789,"column":8},"end":{"line":2815,"column":9}},"1370":{"start":{"line":2793,"column":10},"end":{"line":2813,"column":13}},"1371":{"start":{"line":2794,"column":12},"end":{"line":2794,"column":43}},"1372":{"start":{"line":2794,"column":21},"end":{"line":2794,"column":43}},"1373":{"start":{"line":2795,"column":12},"end":{"line":2795,"column":49}},"1374":{"start":{"line":2796,"column":12},"end":{"line":2801,"column":13}},"1375":{"start":{"line":2797,"column":14},"end":{"line":2797,"column":99}},"1376":{"start":{"line":2798,"column":14},"end":{"line":2798,"column":37}},"1377":{"start":{"line":2799,"column":14},"end":{"line":2799,"column":35}},"1378":{"start":{"line":2800,"column":14},"end":{"line":2800,"column":36}},"1379":{"start":{"line":2802,"column":12},"end":{"line":2809,"column":14}},"1380":{"start":{"line":2810,"column":12},"end":{"line":2812,"column":15}},"1381":{"start":{"line":2811,"column":14},"end":{"line":2811,"column":28}},"1382":{"start":{"line":2814,"column":10},"end":{"line":2814,"column":17}},"1383":{"start":{"line":2817,"column":8},"end":{"line":2848,"column":21}},"1384":{"start":{"line":2818,"column":10},"end":{"line":2841,"column":11}},"1385":{"start":{"line":2819,"column":12},"end":{"line":2819,"column":36}},"1386":{"start":{"line":2819,"column":21},"end":{"line":2819,"column":36}},"1387":{"start":{"line":2820,"column":12},"end":{"line":2820,"column":49}},"1388":{"start":{"line":2821,"column":12},"end":{"line":2826,"column":13}},"1389":{"start":{"line":2822,"column":14},"end":{"line":2822,"column":99}},"1390":{"start":{"line":2823,"column":14},"end":{"line":2823,"column":37}},"1391":{"start":{"line":2824,"column":14},"end":{"line":2824,"column":35}},"1392":{"start":{"line":2825,"column":14},"end":{"line":2825,"column":29}},"1393":{"start":{"line":2828,"column":12},"end":{"line":2840,"column":15}},"1394":{"start":{"line":2829,"column":14},"end":{"line":2836,"column":16}},"1395":{"start":{"line":2837,"column":14},"end":{"line":2839,"column":17}},"1396":{"start":{"line":2838,"column":16},"end":{"line":2838,"column":30}},"1397":{"start":{"line":2843,"column":10},"end":{"line":2847,"column":11}},"1398":{"start":{"line":2844,"column":12},"end":{"line":2844,"column":88}},"1399":{"start":{"line":2846,"column":12},"end":{"line":2846,"column":79}},"1400":{"start":{"line":2850,"column":6},"end":{"line":2850,"column":24}},"1401":{"start":{"line":2860,"column":0},"end":{"line":2862,"column":2}},"1402":{"start":{"line":2861,"column":2},"end":{"line":2861,"column":21}},"1403":{"start":{"line":2872,"column":0},"end":{"line":2876,"column":2}},"1404":{"start":{"line":2873,"column":2},"end":{"line":2873,"column":16}},"1405":{"start":{"line":2874,"column":2},"end":{"line":2874,"column":21}},"1406":{"start":{"line":2875,"column":2},"end":{"line":2875,"column":50}},"1407":{"start":{"line":2884,"column":0},"end":{"line":2898,"column":2}},"1408":{"start":{"line":2885,"column":2},"end":{"line":2885,"column":39}},"1409":{"start":{"line":2885,"column":32},"end":{"line":2885,"column":39}},"1410":{"start":{"line":2887,"column":2},"end":{"line":2887,"column":47}},"1411":{"start":{"line":2889,"column":2},"end":{"line":2889,"column":31}},"1412":{"start":{"line":2890,"column":2},"end":{"line":2890,"column":18}},"1413":{"start":{"line":2893,"column":2},"end":{"line":2895,"column":3}},"1414":{"start":{"line":2894,"column":4},"end":{"line":2894,"column":38}},"1415":{"start":{"line":2897,"column":2},"end":{"line":2897,"column":26}},"1416":{"start":{"line":2900,"column":0},"end":{"line":2907,"column":2}},"1417":{"start":{"line":2901,"column":2},"end":{"line":2906,"column":3}},"1418":{"start":{"line":2902,"column":4},"end":{"line":2902,"column":42}},"1419":{"start":{"line":2904,"column":4},"end":{"line":2904,"column":22}},"1420":{"start":{"line":2905,"column":4},"end":{"line":2905,"column":29}},"1421":{"start":{"line":2918,"column":0},"end":{"line":2922,"column":2}},"1422":{"start":{"line":2919,"column":2},"end":{"line":2919,"column":31}},"1423":{"start":{"line":2920,"column":2},"end":{"line":2920,"column":46}},"1424":{"start":{"line":2921,"column":2},"end":{"line":2921,"column":50}},"1425":{"start":{"line":2924,"column":0},"end":{"line":3091,"column":2}},"1426":{"start":{"line":2925,"column":2},"end":{"line":2925,"column":81}},"1427":{"start":{"line":2926,"column":2},"end":{"line":2928,"column":3}},"1428":{"start":{"line":2927,"column":4},"end":{"line":2927,"column":29}},"1429":{"start":{"line":2930,"column":2},"end":{"line":2935,"column":3}},"1430":{"start":{"line":2931,"column":4},"end":{"line":2934,"column":5}},"1431":{"start":{"line":2932,"column":6},"end":{"line":2932,"column":19}},"1432":{"start":{"line":2933,"column":6},"end":{"line":2933,"column":19}},"1433":{"start":{"line":2937,"column":2},"end":{"line":2937,"column":43}},"1434":{"start":{"line":2938,"column":2},"end":{"line":2938,"column":26}},"1435":{"start":{"line":2940,"column":2},"end":{"line":2941,"column":49}},"1436":{"start":{"line":2942,"column":2},"end":{"line":2942,"column":80}},"1437":{"start":{"line":2943,"column":2},"end":{"line":2943,"column":73}},"1438":{"start":{"line":2945,"column":2},"end":{"line":2945,"column":38}},"1439":{"start":{"line":2947,"column":2},"end":{"line":2947,"column":10}},"1440":{"start":{"line":2948,"column":2},"end":{"line":2954,"column":3}},"1441":{"start":{"line":2949,"column":4},"end":{"line":2952,"column":23}},"1442":{"start":{"line":2953,"column":4},"end":{"line":2953,"column":19}},"1443":{"start":{"line":2956,"column":2},"end":{"line":2956,"column":28}},"1444":{"start":{"line":2957,"column":2},"end":{"line":2957,"column":39}},"1445":{"start":{"line":2957,"column":21},"end":{"line":2957,"column":39}},"1446":{"start":{"line":2959,"column":2},"end":{"line":2959,"column":19}},"1447":{"start":{"line":2960,"column":2},"end":{"line":2960,"column":48}},"1448":{"start":{"line":2961,"column":2},"end":{"line":2961,"column":20}},"1449":{"start":{"line":2962,"column":2},"end":{"line":2962,"column":39}},"1450":{"start":{"line":2963,"column":2},"end":{"line":2963,"column":31}},"1451":{"start":{"line":2964,"column":2},"end":{"line":2964,"column":33}},"1452":{"start":{"line":2965,"column":2},"end":{"line":2965,"column":57}},"1453":{"start":{"line":2965,"column":34},"end":{"line":2965,"column":57}},"1454":{"start":{"line":2966,"column":2},"end":{"line":2966,"column":29}},"1455":{"start":{"line":2968,"column":2},"end":{"line":2969,"column":22}},"1456":{"start":{"line":2969,"column":4},"end":{"line":2969,"column":22}},"1457":{"start":{"line":2971,"column":2},"end":{"line":2971,"column":30}},"1458":{"start":{"line":2972,"column":2},"end":{"line":2972,"column":21}},"1459":{"start":{"line":2974,"column":2},"end":{"line":2980,"column":3}},"1460":{"start":{"line":2975,"column":4},"end":{"line":2976,"column":74}},"1461":{"start":{"line":2977,"column":4},"end":{"line":2977,"column":25}},"1462":{"start":{"line":2978,"column":4},"end":{"line":2978,"column":46}},"1463":{"start":{"line":2978,"column":34},"end":{"line":2978,"column":42}},"1464":{"start":{"line":2979,"column":4},"end":{"line":2979,"column":22}},"1465":{"start":{"line":2982,"column":2},"end":{"line":2988,"column":4}},"1466":{"start":{"line":2990,"column":2},"end":{"line":3089,"column":5}},"1467":{"start":{"line":2991,"column":4},"end":{"line":2991,"column":28}},"1468":{"start":{"line":2991,"column":13},"end":{"line":2991,"column":28}},"1469":{"start":{"line":2993,"column":4},"end":{"line":2997,"column":5}},"1470":{"start":{"line":2994,"column":6},"end":{"line":2994,"column":61}},"1471":{"start":{"line":2995,"column":6},"end":{"line":2996,"column":84}},"1472":{"start":{"line":2999,"column":4},"end":{"line":2999,"column":32}},"1473":{"start":{"line":3001,"column":4},"end":{"line":3005,"column":5}},"1474":{"start":{"line":3002,"column":6},"end":{"line":3002,"column":76}},"1475":{"start":{"line":3004,"column":6},"end":{"line":3004,"column":43}},"1476":{"start":{"line":3007,"column":4},"end":{"line":3088,"column":5}},"1477":{"start":{"line":3008,"column":6},"end":{"line":3008,"column":30}},"1478":{"start":{"line":3008,"column":15},"end":{"line":3008,"column":30}},"1479":{"start":{"line":3009,"column":6},"end":{"line":3009,"column":35}},"1480":{"start":{"line":3011,"column":6},"end":{"line":3011,"column":31}},"1481":{"start":{"line":3013,"column":6},"end":{"line":3013,"column":28}},"1482":{"start":{"line":3014,"column":6},"end":{"line":3020,"column":7}},"1483":{"start":{"line":3015,"column":8},"end":{"line":3017,"column":9}},"1484":{"start":{"line":3016,"column":10},"end":{"line":3016,"column":58}},"1485":{"start":{"line":3019,"column":8},"end":{"line":3019,"column":38}},"1486":{"start":{"line":3022,"column":6},"end":{"line":3030,"column":7}},"1487":{"start":{"line":3023,"column":8},"end":{"line":3027,"column":26}},"1488":{"start":{"line":3024,"column":10},"end":{"line":3024,"column":65}},"1489":{"start":{"line":3024,"column":22},"end":{"line":3024,"column":65}},"1490":{"start":{"line":3026,"column":10},"end":{"line":3026,"column":26}},"1491":{"start":{"line":3029,"column":8},"end":{"line":3029,"column":24}},"1492":{"start":{"line":3032,"column":6},"end":{"line":3087,"column":7}},"1493":{"start":{"line":3033,"column":8},"end":{"line":3033,"column":29}},"1494":{"start":{"line":3034,"column":8},"end":{"line":3034,"column":68}},"1495":{"start":{"line":3035,"column":8},"end":{"line":3035,"column":33}},"1496":{"start":{"line":3037,"column":8},"end":{"line":3072,"column":9}},"1497":{"start":{"line":3038,"column":10},"end":{"line":3038,"column":34}},"1498":{"start":{"line":3038,"column":19},"end":{"line":3038,"column":34}},"1499":{"start":{"line":3040,"column":10},"end":{"line":3046,"column":12}},"1500":{"start":{"line":3047,"column":10},"end":{"line":3071,"column":13}},"1501":{"start":{"line":3048,"column":12},"end":{"line":3048,"column":36}},"1502":{"start":{"line":3048,"column":21},"end":{"line":3048,"column":36}},"1503":{"start":{"line":3050,"column":12},"end":{"line":3055,"column":13}},"1504":{"start":{"line":3051,"column":14},"end":{"line":3051,"column":65}},"1505":{"start":{"line":3052,"column":14},"end":{"line":3054,"column":55}},"1506":{"start":{"line":3057,"column":12},"end":{"line":3057,"column":36}},"1507":{"start":{"line":3058,"column":12},"end":{"line":3058,"column":34}},"1508":{"start":{"line":3059,"column":12},"end":{"line":3059,"column":41}},"1509":{"start":{"line":3061,"column":12},"end":{"line":3067,"column":14}},"1510":{"start":{"line":3068,"column":12},"end":{"line":3070,"column":15}},"1511":{"start":{"line":3069,"column":14},"end":{"line":3069,"column":28}},"1512":{"start":{"line":3074,"column":8},"end":{"line":3082,"column":10}},"1513":{"start":{"line":3083,"column":8},"end":{"line":3086,"column":11}},"1514":{"start":{"line":3084,"column":10},"end":{"line":3085,"column":77}},"1515":{"start":{"line":3090,"column":2},"end":{"line":3090,"column":20}},"1516":{"start":{"line":3103,"column":0},"end":{"line":3292,"column":2}},"1517":{"start":{"line":3106,"column":2},"end":{"line":3106,"column":18}},"1518":{"start":{"line":3107,"column":2},"end":{"line":3107,"column":81}},"1519":{"start":{"line":3108,"column":2},"end":{"line":3110,"column":3}},"1520":{"start":{"line":3109,"column":4},"end":{"line":3109,"column":29}},"1521":{"start":{"line":3112,"column":2},"end":{"line":3124,"column":3}},"1522":{"start":{"line":3113,"column":4},"end":{"line":3117,"column":5}},"1523":{"start":{"line":3115,"column":6},"end":{"line":3115,"column":16}},"1524":{"start":{"line":3116,"column":6},"end":{"line":3116,"column":23}},"1525":{"start":{"line":3118,"column":9},"end":{"line":3124,"column":3}},"1526":{"start":{"line":3119,"column":4},"end":{"line":3123,"column":5}},"1527":{"start":{"line":3121,"column":6},"end":{"line":3121,"column":19}},"1528":{"start":{"line":3122,"column":6},"end":{"line":3122,"column":19}},"1529":{"start":{"line":3126,"column":2},"end":{"line":3126,"column":43}},"1530":{"start":{"line":3127,"column":2},"end":{"line":3127,"column":26}},"1531":{"start":{"line":3129,"column":2},"end":{"line":3130,"column":43}},"1532":{"start":{"line":3131,"column":2},"end":{"line":3131,"column":80}},"1533":{"start":{"line":3132,"column":2},"end":{"line":3132,"column":73}},"1534":{"start":{"line":3134,"column":2},"end":{"line":3134,"column":18}},"1535":{"start":{"line":3135,"column":2},"end":{"line":3135,"column":31}},"1536":{"start":{"line":3136,"column":2},"end":{"line":3136,"column":38}},"1537":{"start":{"line":3137,"column":2},"end":{"line":3138,"column":63}},"1538":{"start":{"line":3140,"column":2},"end":{"line":3141,"column":22}},"1539":{"start":{"line":3141,"column":4},"end":{"line":3141,"column":22}},"1540":{"start":{"line":3143,"column":2},"end":{"line":3143,"column":70}},"1541":{"start":{"line":3144,"column":2},"end":{"line":3144,"column":29}},"1542":{"start":{"line":3145,"column":2},"end":{"line":3145,"column":30}},"1543":{"start":{"line":3146,"column":2},"end":{"line":3146,"column":21}},"1544":{"start":{"line":3149,"column":2},"end":{"line":3151,"column":3}},"1545":{"start":{"line":3150,"column":4},"end":{"line":3150,"column":32}},"1546":{"start":{"line":3152,"column":2},"end":{"line":3152,"column":31}},"1547":{"start":{"line":3155,"column":2},"end":{"line":3155,"column":43}},"1548":{"start":{"line":3156,"column":2},"end":{"line":3168,"column":3}},"1549":{"start":{"line":3157,"column":4},"end":{"line":3157,"column":28}},"1550":{"start":{"line":3158,"column":4},"end":{"line":3167,"column":5}},"1551":{"start":{"line":3159,"column":6},"end":{"line":3161,"column":37}},"1552":{"start":{"line":3162,"column":6},"end":{"line":3162,"column":27}},"1553":{"start":{"line":3163,"column":6},"end":{"line":3165,"column":9}},"1554":{"start":{"line":3164,"column":8},"end":{"line":3164,"column":16}},"1555":{"start":{"line":3166,"column":6},"end":{"line":3166,"column":24}},"1556":{"start":{"line":3170,"column":2},"end":{"line":3177,"column":4}},"1557":{"start":{"line":3179,"column":2},"end":{"line":3290,"column":5}},"1558":{"start":{"line":3180,"column":4},"end":{"line":3180,"column":28}},"1559":{"start":{"line":3180,"column":13},"end":{"line":3180,"column":28}},"1560":{"start":{"line":3181,"column":4},"end":{"line":3181,"column":20}},"1561":{"start":{"line":3183,"column":4},"end":{"line":3187,"column":5}},"1562":{"start":{"line":3184,"column":6},"end":{"line":3184,"column":78}},"1563":{"start":{"line":3186,"column":6},"end":{"line":3186,"column":34}},"1564":{"start":{"line":3189,"column":4},"end":{"line":3289,"column":5}},"1565":{"start":{"line":3190,"column":6},"end":{"line":3190,"column":30}},"1566":{"start":{"line":3190,"column":15},"end":{"line":3190,"column":30}},"1567":{"start":{"line":3191,"column":6},"end":{"line":3191,"column":35}},"1568":{"start":{"line":3192,"column":6},"end":{"line":3192,"column":28}},"1569":{"start":{"line":3193,"column":6},"end":{"line":3199,"column":7}},"1570":{"start":{"line":3194,"column":8},"end":{"line":3196,"column":9}},"1571":{"start":{"line":3195,"column":10},"end":{"line":3195,"column":58}},"1572":{"start":{"line":3198,"column":8},"end":{"line":3198,"column":38}},"1573":{"start":{"line":3202,"column":6},"end":{"line":3206,"column":7}},"1574":{"start":{"line":3203,"column":8},"end":{"line":3203,"column":33}},"1575":{"start":{"line":3205,"column":8},"end":{"line":3205,"column":23}},"1576":{"start":{"line":3208,"column":6},"end":{"line":3219,"column":7}},"1577":{"start":{"line":3209,"column":8},"end":{"line":3216,"column":26}},"1578":{"start":{"line":3210,"column":10},"end":{"line":3213,"column":11}},"1579":{"start":{"line":3211,"column":12},"end":{"line":3211,"column":48}},"1580":{"start":{"line":3212,"column":12},"end":{"line":3212,"column":19}},"1581":{"start":{"line":3215,"column":10},"end":{"line":3215,"column":24}},"1582":{"start":{"line":3218,"column":8},"end":{"line":3218,"column":22}},"1583":{"start":{"line":3221,"column":6},"end":{"line":3288,"column":7}},"1584":{"start":{"line":3222,"column":8},"end":{"line":3287,"column":21}},"1585":{"start":{"line":3223,"column":10},"end":{"line":3286,"column":23}},"1586":{"start":{"line":3224,"column":12},"end":{"line":3224,"column":33}},"1587":{"start":{"line":3225,"column":12},"end":{"line":3225,"column":72}},"1588":{"start":{"line":3226,"column":12},"end":{"line":3226,"column":37}},"1589":{"start":{"line":3228,"column":12},"end":{"line":3266,"column":13}},"1590":{"start":{"line":3229,"column":14},"end":{"line":3229,"column":38}},"1591":{"start":{"line":3229,"column":23},"end":{"line":3229,"column":38}},"1592":{"start":{"line":3230,"column":14},"end":{"line":3236,"column":16}},"1593":{"start":{"line":3237,"column":14},"end":{"line":3265,"column":17}},"1594":{"start":{"line":3238,"column":16},"end":{"line":3238,"column":40}},"1595":{"start":{"line":3238,"column":25},"end":{"line":3238,"column":40}},"1596":{"start":{"line":3240,"column":16},"end":{"line":3240,"column":40}},"1597":{"start":{"line":3246,"column":16},"end":{"line":3248,"column":17}},"1598":{"start":{"line":3247,"column":18},"end":{"line":3247,"column":47}},"1599":{"start":{"line":3249,"column":16},"end":{"line":3264,"column":19}},"1600":{"start":{"line":3250,"column":18},"end":{"line":3263,"column":21}},"1601":{"start":{"line":3251,"column":20},"end":{"line":3251,"column":50}},"1602":{"start":{"line":3251,"column":29},"end":{"line":3251,"column":50}},"1603":{"start":{"line":3253,"column":20},"end":{"line":3259,"column":22}},"1604":{"start":{"line":3260,"column":20},"end":{"line":3262,"column":23}},"1605":{"start":{"line":3261,"column":22},"end":{"line":3261,"column":36}},"1606":{"start":{"line":3268,"column":12},"end":{"line":3276,"column":14}},"1607":{"start":{"line":3277,"column":12},"end":{"line":3285,"column":15}},"1608":{"start":{"line":3278,"column":14},"end":{"line":3284,"column":15}},"1609":{"start":{"line":3279,"column":16},"end":{"line":3280,"column":92}},"1610":{"start":{"line":3282,"column":16},"end":{"line":3283,"column":83}},"1611":{"start":{"line":3291,"column":2},"end":{"line":3291,"column":20}},"1612":{"start":{"line":3300,"column":0},"end":{"line":3307,"column":2}},"1613":{"start":{"line":3301,"column":2},"end":{"line":3301,"column":81}},"1614":{"start":{"line":3302,"column":2},"end":{"line":3304,"column":3}},"1615":{"start":{"line":3303,"column":4},"end":{"line":3303,"column":29}},"1616":{"start":{"line":3306,"column":2},"end":{"line":3306,"column":75}},"1617":{"start":{"line":3317,"column":0},"end":{"line":3324,"column":1}},"1618":{"start":{"line":3318,"column":2},"end":{"line":3323,"column":5}},"1619":{"start":{"line":3326,"column":0},"end":{"line":3326,"column":52}},"1620":{"start":{"line":3337,"column":0},"end":{"line":3343,"column":2}},"1621":{"start":{"line":3338,"column":2},"end":{"line":3338,"column":17}},"1622":{"start":{"line":3339,"column":2},"end":{"line":3341,"column":3}},"1623":{"start":{"line":3340,"column":4},"end":{"line":3340,"column":24}},"1624":{"start":{"line":3342,"column":2},"end":{"line":3342,"column":77}},"1625":{"start":{"line":3348,"column":0},"end":{"line":3348,"column":41}},"1626":{"start":{"line":3353,"column":0},"end":{"line":3353,"column":40}},"1627":{"start":{"line":3358,"column":0},"end":{"line":3358,"column":56}},"1628":{"start":{"line":3360,"column":0},"end":{"line":3363,"column":1}},"1629":{"start":{"line":3361,"column":2},"end":{"line":3361,"column":31}},"1630":{"start":{"line":3362,"column":2},"end":{"line":3362,"column":74}},"1631":{"start":{"line":3364,"column":0},"end":{"line":3364,"column":39}},"1632":{"start":{"line":3366,"column":0},"end":{"line":3373,"column":1}},"1633":{"start":{"line":3367,"column":2},"end":{"line":3367,"column":44}},"1634":{"start":{"line":3368,"column":2},"end":{"line":3368,"column":26}},"1635":{"start":{"line":3368,"column":13},"end":{"line":3368,"column":26}},"1636":{"start":{"line":3369,"column":2},"end":{"line":3371,"column":5}},"1637":{"start":{"line":3370,"column":4},"end":{"line":3370,"column":49}},"1638":{"start":{"line":3372,"column":2},"end":{"line":3372,"column":14}}},"branchMap":{"1":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"2":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":9},"end":{"line":57,"column":30}},{"start":{"line":57,"column":34},"end":{"line":57,"column":38}}]},"3":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":9},"end":{"line":61,"column":13}},{"start":{"line":61,"column":17},"end":{"line":61,"column":32}}]},"4":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"5":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":42}},{"start":{"line":76,"column":12},"end":{"line":76,"column":35}},{"start":{"line":77,"column":12},"end":{"line":77,"column":57}}]},"6":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"7":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":11},"end":{"line":96,"column":11}},{"start":{"line":96,"column":11},"end":{"line":96,"column":11}}]},"8":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"9":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"10":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"11":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"12":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":8},"end":{"line":127,"column":41}},{"start":{"line":127,"column":45},"end":{"line":127,"column":80}}]},"13":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":4}},{"start":{"line":133,"column":4},"end":{"line":133,"column":4}}]},"14":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":8},"end":{"line":133,"column":23}},{"start":{"line":133,"column":27},"end":{"line":133,"column":41}},{"start":{"line":133,"column":45},"end":{"line":133,"column":62}},{"start":{"line":133,"column":66},"end":{"line":133,"column":97}}]},"15":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":2},"end":{"line":144,"column":2}},{"start":{"line":144,"column":2},"end":{"line":144,"column":2}}]},"16":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":14},"end":{"line":151,"column":44}},{"start":{"line":151,"column":48},"end":{"line":151,"column":50}}]},"17":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":2},"end":{"line":152,"column":2}},{"start":{"line":152,"column":2},"end":{"line":152,"column":2}}]},"18":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":22},"end":{"line":153,"column":27}},{"start":{"line":153,"column":31},"end":{"line":153,"column":33}}]},"19":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":15},"end":{"line":159,"column":25}},{"start":{"line":159,"column":29},"end":{"line":159,"column":64}}]},"20":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":2},"end":{"line":160,"column":2}},{"start":{"line":160,"column":2},"end":{"line":160,"column":2}}]},"21":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":9},"end":{"line":162,"column":9}},{"start":{"line":162,"column":9},"end":{"line":162,"column":9}}]},"22":{"line":163,"type":"binary-expr","locations":[{"start":{"line":163,"column":23},"end":{"line":163,"column":56}},{"start":{"line":163,"column":60},"end":{"line":163,"column":62}}]},"23":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":9},"end":{"line":164,"column":9}},{"start":{"line":164,"column":9},"end":{"line":164,"column":9}}]},"24":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":16},"end":{"line":165,"column":45}},{"start":{"line":165,"column":49},"end":{"line":165,"column":51}}]},"25":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"26":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":12},"end":{"line":191,"column":19}},{"start":{"line":191,"column":23},"end":{"line":191,"column":25}}]},"27":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":201,"column":2}},{"start":{"line":201,"column":2},"end":{"line":201,"column":2}}]},"28":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":9},"end":{"line":203,"column":9}},{"start":{"line":203,"column":9},"end":{"line":203,"column":9}}]},"29":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":13},"end":{"line":203,"column":27}},{"start":{"line":203,"column":31},"end":{"line":203,"column":86}}]},"30":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":2},"end":{"line":234,"column":2}},{"start":{"line":234,"column":2},"end":{"line":234,"column":2}}]},"31":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":2},"end":{"line":245,"column":2}},{"start":{"line":245,"column":2},"end":{"line":245,"column":2}}]},"32":{"line":245,"type":"binary-expr","locations":[{"start":{"line":245,"column":6},"end":{"line":245,"column":27}},{"start":{"line":245,"column":31},"end":{"line":245,"column":47}}]},"33":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":4},"end":{"line":246,"column":4}},{"start":{"line":246,"column":4},"end":{"line":246,"column":4}}]},"34":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":9},"end":{"line":251,"column":9}},{"start":{"line":251,"column":9},"end":{"line":251,"column":9}}]},"35":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":4},"end":{"line":252,"column":4}},{"start":{"line":252,"column":4},"end":{"line":252,"column":4}}]},"36":{"line":259,"type":"binary-expr","locations":[{"start":{"line":259,"column":9},"end":{"line":259,"column":13}},{"start":{"line":259,"column":17},"end":{"line":259,"column":19}}]},"37":{"line":260,"type":"binary-expr","locations":[{"start":{"line":260,"column":12},"end":{"line":260,"column":19}},{"start":{"line":260,"column":23},"end":{"line":260,"column":25}}]},"38":{"line":261,"type":"binary-expr","locations":[{"start":{"line":261,"column":7},"end":{"line":261,"column":9}},{"start":{"line":261,"column":14},"end":{"line":261,"column":78}}]},"39":{"line":261,"type":"cond-expr","locations":[{"start":{"line":261,"column":36},"end":{"line":261,"column":46}},{"start":{"line":261,"column":49},"end":{"line":261,"column":78}}]},"40":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":2},"end":{"line":269,"column":2}},{"start":{"line":269,"column":2},"end":{"line":269,"column":2}}]},"41":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":6},"end":{"line":274,"column":6}},{"start":{"line":274,"column":6},"end":{"line":274,"column":6}}]},"42":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":38},"end":{"line":281,"column":44}},{"start":{"line":281,"column":48},"end":{"line":281,"column":52}}]},"43":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":6},"end":{"line":284,"column":6}},{"start":{"line":284,"column":6},"end":{"line":284,"column":6}}]},"44":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":8},"end":{"line":291,"column":8}},{"start":{"line":291,"column":8},"end":{"line":291,"column":8}}]},"45":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":10},"end":{"line":292,"column":10}},{"start":{"line":292,"column":10},"end":{"line":292,"column":10}}]},"46":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":2},"end":{"line":309,"column":2}},{"start":{"line":309,"column":2},"end":{"line":309,"column":2}}]},"47":{"line":309,"type":"binary-expr","locations":[{"start":{"line":309,"column":6},"end":{"line":309,"column":27}},{"start":{"line":309,"column":31},"end":{"line":309,"column":39}}]},"48":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":2},"end":{"line":319,"column":2}},{"start":{"line":319,"column":2},"end":{"line":319,"column":2}}]},"49":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":4},"end":{"line":329,"column":4}},{"start":{"line":329,"column":4},"end":{"line":329,"column":4}}]},"50":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":4},"end":{"line":334,"column":4}},{"start":{"line":334,"column":4},"end":{"line":334,"column":4}}]},"51":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":4},"end":{"line":339,"column":4}},{"start":{"line":339,"column":4},"end":{"line":339,"column":4}}]},"52":{"line":339,"type":"binary-expr","locations":[{"start":{"line":339,"column":8},"end":{"line":339,"column":38}},{"start":{"line":339,"column":42},"end":{"line":339,"column":86}}]},"53":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":6},"end":{"line":345,"column":6}},{"start":{"line":345,"column":6},"end":{"line":345,"column":6}}]},"54":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":10},"end":{"line":360,"column":10}},{"start":{"line":360,"column":10},"end":{"line":360,"column":10}}]},"55":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":10},"end":{"line":364,"column":10}},{"start":{"line":364,"column":10},"end":{"line":364,"column":10}}]},"56":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":10},"end":{"line":367,"column":10}},{"start":{"line":367,"column":10},"end":{"line":367,"column":10}}]},"57":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":12},"end":{"line":380,"column":12}},{"start":{"line":380,"column":12},"end":{"line":380,"column":12}}]},"58":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":12},"end":{"line":386,"column":12}},{"start":{"line":386,"column":12},"end":{"line":386,"column":12}}]},"59":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":16},"end":{"line":391,"column":16}},{"start":{"line":391,"column":16},"end":{"line":391,"column":16}}]},"60":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":16},"end":{"line":401,"column":16}},{"start":{"line":401,"column":16},"end":{"line":401,"column":16}}]},"61":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":10},"end":{"line":422,"column":10}},{"start":{"line":422,"column":10},"end":{"line":422,"column":10}}]},"62":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":10},"end":{"line":424,"column":10}},{"start":{"line":424,"column":10},"end":{"line":424,"column":10}}]},"63":{"line":438,"type":"if","locations":[{"start":{"line":438,"column":2},"end":{"line":438,"column":2}},{"start":{"line":438,"column":2},"end":{"line":438,"column":2}}]},"64":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":2},"end":{"line":447,"column":2}},{"start":{"line":447,"column":2},"end":{"line":447,"column":2}}]},"65":{"line":471,"type":"if","locations":[{"start":{"line":471,"column":2},"end":{"line":471,"column":2}},{"start":{"line":471,"column":2},"end":{"line":471,"column":2}}]},"66":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":2},"end":{"line":475,"column":2}},{"start":{"line":475,"column":2},"end":{"line":475,"column":2}}]},"67":{"line":475,"type":"binary-expr","locations":[{"start":{"line":475,"column":6},"end":{"line":475,"column":27}},{"start":{"line":475,"column":31},"end":{"line":475,"column":47}}]},"68":{"line":476,"type":"if","locations":[{"start":{"line":476,"column":4},"end":{"line":476,"column":4}},{"start":{"line":476,"column":4},"end":{"line":476,"column":4}}]},"69":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":9},"end":{"line":481,"column":9}},{"start":{"line":481,"column":9},"end":{"line":481,"column":9}}]},"70":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":4},"end":{"line":482,"column":4}},{"start":{"line":482,"column":4},"end":{"line":482,"column":4}}]},"71":{"line":489,"type":"binary-expr","locations":[{"start":{"line":489,"column":7},"end":{"line":489,"column":9}},{"start":{"line":489,"column":13},"end":{"line":489,"column":42}}]},"72":{"line":490,"type":"binary-expr","locations":[{"start":{"line":490,"column":9},"end":{"line":490,"column":13}},{"start":{"line":490,"column":17},"end":{"line":490,"column":19}}]},"73":{"line":491,"type":"binary-expr","locations":[{"start":{"line":491,"column":12},"end":{"line":491,"column":19}},{"start":{"line":491,"column":23},"end":{"line":491,"column":25}}]},"74":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":2},"end":{"line":497,"column":2}},{"start":{"line":497,"column":2},"end":{"line":497,"column":2}}]},"75":{"line":509,"type":"if","locations":[{"start":{"line":509,"column":2},"end":{"line":509,"column":2}},{"start":{"line":509,"column":2},"end":{"line":509,"column":2}}]},"76":{"line":509,"type":"binary-expr","locations":[{"start":{"line":509,"column":6},"end":{"line":509,"column":22}},{"start":{"line":509,"column":26},"end":{"line":509,"column":37}}]},"77":{"line":522,"type":"if","locations":[{"start":{"line":522,"column":4},"end":{"line":522,"column":4}},{"start":{"line":522,"column":4},"end":{"line":522,"column":4}}]},"78":{"line":525,"type":"if","locations":[{"start":{"line":525,"column":4},"end":{"line":525,"column":4}},{"start":{"line":525,"column":4},"end":{"line":525,"column":4}}]},"79":{"line":525,"type":"binary-expr","locations":[{"start":{"line":525,"column":8},"end":{"line":525,"column":32}},{"start":{"line":525,"column":36},"end":{"line":525,"column":51}}]},"80":{"line":534,"type":"if","locations":[{"start":{"line":534,"column":8},"end":{"line":534,"column":8}},{"start":{"line":534,"column":8},"end":{"line":534,"column":8}}]},"81":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":8},"end":{"line":539,"column":8}},{"start":{"line":539,"column":8},"end":{"line":539,"column":8}}]},"82":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":8},"end":{"line":550,"column":8}},{"start":{"line":550,"column":8},"end":{"line":550,"column":8}}]},"83":{"line":551,"type":"if","locations":[{"start":{"line":551,"column":10},"end":{"line":551,"column":10}},{"start":{"line":551,"column":10},"end":{"line":551,"column":10}}]},"84":{"line":552,"type":"if","locations":[{"start":{"line":552,"column":12},"end":{"line":552,"column":12}},{"start":{"line":552,"column":12},"end":{"line":552,"column":12}}]},"85":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":8},"end":{"line":562,"column":8}},{"start":{"line":562,"column":8},"end":{"line":562,"column":8}}]},"86":{"line":566,"type":"if","locations":[{"start":{"line":566,"column":12},"end":{"line":566,"column":12}},{"start":{"line":566,"column":12},"end":{"line":566,"column":12}}]},"87":{"line":567,"type":"if","locations":[{"start":{"line":567,"column":14},"end":{"line":567,"column":14}},{"start":{"line":567,"column":14},"end":{"line":567,"column":14}}]},"88":{"line":591,"type":"if","locations":[{"start":{"line":591,"column":12},"end":{"line":591,"column":12}},{"start":{"line":591,"column":12},"end":{"line":591,"column":12}}]},"89":{"line":592,"type":"if","locations":[{"start":{"line":592,"column":12},"end":{"line":592,"column":12}},{"start":{"line":592,"column":12},"end":{"line":592,"column":12}}]},"90":{"line":600,"type":"if","locations":[{"start":{"line":600,"column":10},"end":{"line":600,"column":10}},{"start":{"line":600,"column":10},"end":{"line":600,"column":10}}]},"91":{"line":604,"type":"binary-expr","locations":[{"start":{"line":604,"column":27},"end":{"line":604,"column":31}},{"start":{"line":604,"column":35},"end":{"line":604,"column":53}}]},"92":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":12},"end":{"line":609,"column":12}},{"start":{"line":609,"column":12},"end":{"line":609,"column":12}}]},"93":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":12},"end":{"line":612,"column":12}},{"start":{"line":612,"column":12},"end":{"line":612,"column":12}}]},"94":{"line":612,"type":"binary-expr","locations":[{"start":{"line":612,"column":16},"end":{"line":612,"column":20}},{"start":{"line":612,"column":24},"end":{"line":612,"column":48}}]},"95":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":12},"end":{"line":618,"column":12}},{"start":{"line":618,"column":12},"end":{"line":618,"column":12}}]},"96":{"line":624,"type":"cond-expr","locations":[{"start":{"line":624,"column":38},"end":{"line":624,"column":56}},{"start":{"line":624,"column":59},"end":{"line":624,"column":68}}]},"97":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":14},"end":{"line":629,"column":14}},{"start":{"line":629,"column":14},"end":{"line":629,"column":14}}]},"98":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":6},"end":{"line":642,"column":6}},{"start":{"line":642,"column":6},"end":{"line":642,"column":6}}]},"99":{"line":642,"type":"binary-expr","locations":[{"start":{"line":642,"column":10},"end":{"line":642,"column":21}},{"start":{"line":642,"column":25},"end":{"line":642,"column":48}}]},"100":{"line":646,"type":"if","locations":[{"start":{"line":646,"column":8},"end":{"line":646,"column":8}},{"start":{"line":646,"column":8},"end":{"line":646,"column":8}}]},"101":{"line":649,"type":"if","locations":[{"start":{"line":649,"column":8},"end":{"line":649,"column":8}},{"start":{"line":649,"column":8},"end":{"line":649,"column":8}}]},"102":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":8},"end":{"line":654,"column":8}},{"start":{"line":654,"column":8},"end":{"line":654,"column":8}}]},"103":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":2},"end":{"line":685,"column":2}},{"start":{"line":685,"column":2},"end":{"line":685,"column":2}}]},"104":{"line":686,"type":"if","locations":[{"start":{"line":686,"column":2},"end":{"line":686,"column":2}},{"start":{"line":686,"column":2},"end":{"line":686,"column":2}}]},"105":{"line":687,"type":"if","locations":[{"start":{"line":687,"column":4},"end":{"line":687,"column":4}},{"start":{"line":687,"column":4},"end":{"line":687,"column":4}}]},"106":{"line":693,"type":"binary-expr","locations":[{"start":{"line":693,"column":7},"end":{"line":693,"column":9}},{"start":{"line":693,"column":13},"end":{"line":693,"column":42}}]},"107":{"line":694,"type":"binary-expr","locations":[{"start":{"line":694,"column":12},"end":{"line":694,"column":19}},{"start":{"line":694,"column":23},"end":{"line":694,"column":25}}]},"108":{"line":699,"type":"if","locations":[{"start":{"line":699,"column":2},"end":{"line":699,"column":2}},{"start":{"line":699,"column":2},"end":{"line":699,"column":2}}]},"109":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":4},"end":{"line":719,"column":4}},{"start":{"line":719,"column":4},"end":{"line":719,"column":4}}]},"110":{"line":721,"type":"if","locations":[{"start":{"line":721,"column":4},"end":{"line":721,"column":4}},{"start":{"line":721,"column":4},"end":{"line":721,"column":4}}]},"111":{"line":730,"type":"if","locations":[{"start":{"line":730,"column":8},"end":{"line":730,"column":8}},{"start":{"line":730,"column":8},"end":{"line":730,"column":8}}]},"112":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":8},"end":{"line":734,"column":8}},{"start":{"line":734,"column":8},"end":{"line":734,"column":8}}]},"113":{"line":741,"type":"if","locations":[{"start":{"line":741,"column":8},"end":{"line":741,"column":8}},{"start":{"line":741,"column":8},"end":{"line":741,"column":8}}]},"114":{"line":744,"type":"if","locations":[{"start":{"line":744,"column":8},"end":{"line":744,"column":8}},{"start":{"line":744,"column":8},"end":{"line":744,"column":8}}]},"115":{"line":744,"type":"binary-expr","locations":[{"start":{"line":744,"column":12},"end":{"line":744,"column":42}},{"start":{"line":744,"column":46},"end":{"line":744,"column":90}}]},"116":{"line":748,"type":"if","locations":[{"start":{"line":748,"column":10},"end":{"line":748,"column":10}},{"start":{"line":748,"column":10},"end":{"line":748,"column":10}}]},"117":{"line":772,"type":"if","locations":[{"start":{"line":772,"column":12},"end":{"line":772,"column":12}},{"start":{"line":772,"column":12},"end":{"line":772,"column":12}}]},"118":{"line":777,"type":"if","locations":[{"start":{"line":777,"column":10},"end":{"line":777,"column":10}},{"start":{"line":777,"column":10},"end":{"line":777,"column":10}}]},"119":{"line":781,"type":"binary-expr","locations":[{"start":{"line":781,"column":27},"end":{"line":781,"column":31}},{"start":{"line":781,"column":35},"end":{"line":781,"column":53}}]},"120":{"line":786,"type":"if","locations":[{"start":{"line":786,"column":12},"end":{"line":786,"column":12}},{"start":{"line":786,"column":12},"end":{"line":786,"column":12}}]},"121":{"line":788,"type":"if","locations":[{"start":{"line":788,"column":12},"end":{"line":788,"column":12}},{"start":{"line":788,"column":12},"end":{"line":788,"column":12}}]},"122":{"line":788,"type":"binary-expr","locations":[{"start":{"line":788,"column":16},"end":{"line":788,"column":27}},{"start":{"line":788,"column":31},"end":{"line":788,"column":62}}]},"123":{"line":797,"type":"cond-expr","locations":[{"start":{"line":797,"column":36},"end":{"line":797,"column":54}},{"start":{"line":797,"column":57},"end":{"line":797,"column":66}}]},"124":{"line":809,"type":"if","locations":[{"start":{"line":809,"column":6},"end":{"line":809,"column":6}},{"start":{"line":809,"column":6},"end":{"line":809,"column":6}}]},"125":{"line":809,"type":"binary-expr","locations":[{"start":{"line":809,"column":10},"end":{"line":809,"column":21}},{"start":{"line":809,"column":25},"end":{"line":809,"column":48}}]},"126":{"line":813,"type":"if","locations":[{"start":{"line":813,"column":8},"end":{"line":813,"column":8}},{"start":{"line":813,"column":8},"end":{"line":813,"column":8}}]},"127":{"line":815,"type":"if","locations":[{"start":{"line":815,"column":8},"end":{"line":815,"column":8}},{"start":{"line":815,"column":8},"end":{"line":815,"column":8}}]},"128":{"line":817,"type":"if","locations":[{"start":{"line":817,"column":15},"end":{"line":817,"column":15}},{"start":{"line":817,"column":15},"end":{"line":817,"column":15}}]},"129":{"line":844,"type":"if","locations":[{"start":{"line":844,"column":2},"end":{"line":844,"column":2}},{"start":{"line":844,"column":2},"end":{"line":844,"column":2}}]},"130":{"line":848,"type":"if","locations":[{"start":{"line":848,"column":2},"end":{"line":848,"column":2}},{"start":{"line":848,"column":2},"end":{"line":848,"column":2}}]},"131":{"line":849,"type":"if","locations":[{"start":{"line":849,"column":4},"end":{"line":849,"column":4}},{"start":{"line":849,"column":4},"end":{"line":849,"column":4}}]},"132":{"line":856,"type":"binary-expr","locations":[{"start":{"line":856,"column":7},"end":{"line":856,"column":9}},{"start":{"line":856,"column":13},"end":{"line":856,"column":42}}]},"133":{"line":857,"type":"binary-expr","locations":[{"start":{"line":857,"column":9},"end":{"line":857,"column":13}},{"start":{"line":857,"column":17},"end":{"line":857,"column":19}}]},"134":{"line":858,"type":"binary-expr","locations":[{"start":{"line":858,"column":12},"end":{"line":858,"column":19}},{"start":{"line":858,"column":23},"end":{"line":858,"column":25}}]},"135":{"line":871,"type":"if","locations":[{"start":{"line":871,"column":2},"end":{"line":871,"column":2}},{"start":{"line":871,"column":2},"end":{"line":871,"column":2}}]},"136":{"line":871,"type":"binary-expr","locations":[{"start":{"line":871,"column":6},"end":{"line":871,"column":22}},{"start":{"line":871,"column":26},"end":{"line":871,"column":37}}]},"137":{"line":876,"type":"if","locations":[{"start":{"line":876,"column":2},"end":{"line":876,"column":2}},{"start":{"line":876,"column":2},"end":{"line":876,"column":2}}]},"138":{"line":881,"type":"if","locations":[{"start":{"line":881,"column":2},"end":{"line":881,"column":2}},{"start":{"line":881,"column":2},"end":{"line":881,"column":2}}]},"139":{"line":897,"type":"if","locations":[{"start":{"line":897,"column":4},"end":{"line":897,"column":4}},{"start":{"line":897,"column":4},"end":{"line":897,"column":4}}]},"140":{"line":901,"type":"if","locations":[{"start":{"line":901,"column":4},"end":{"line":901,"column":4}},{"start":{"line":901,"column":4},"end":{"line":901,"column":4}}]},"141":{"line":901,"type":"binary-expr","locations":[{"start":{"line":901,"column":8},"end":{"line":901,"column":33}},{"start":{"line":901,"column":37},"end":{"line":901,"column":52}}]},"142":{"line":909,"type":"if","locations":[{"start":{"line":909,"column":8},"end":{"line":909,"column":8}},{"start":{"line":909,"column":8},"end":{"line":909,"column":8}}]},"143":{"line":911,"type":"if","locations":[{"start":{"line":911,"column":8},"end":{"line":911,"column":8}},{"start":{"line":911,"column":8},"end":{"line":911,"column":8}}]},"144":{"line":918,"type":"if","locations":[{"start":{"line":918,"column":10},"end":{"line":918,"column":10}},{"start":{"line":918,"column":10},"end":{"line":918,"column":10}}]},"145":{"line":924,"type":"if","locations":[{"start":{"line":924,"column":10},"end":{"line":924,"column":10}},{"start":{"line":924,"column":10},"end":{"line":924,"column":10}}]},"146":{"line":929,"type":"if","locations":[{"start":{"line":929,"column":10},"end":{"line":929,"column":10}},{"start":{"line":929,"column":10},"end":{"line":929,"column":10}}]},"147":{"line":929,"type":"binary-expr","locations":[{"start":{"line":929,"column":14},"end":{"line":929,"column":44}},{"start":{"line":929,"column":48},"end":{"line":929,"column":92}}]},"148":{"line":934,"type":"if","locations":[{"start":{"line":934,"column":12},"end":{"line":934,"column":12}},{"start":{"line":934,"column":12},"end":{"line":934,"column":12}}]},"149":{"line":949,"type":"if","locations":[{"start":{"line":949,"column":14},"end":{"line":949,"column":14}},{"start":{"line":949,"column":14},"end":{"line":949,"column":14}}]},"150":{"line":954,"type":"if","locations":[{"start":{"line":954,"column":12},"end":{"line":954,"column":12}},{"start":{"line":954,"column":12},"end":{"line":954,"column":12}}]},"151":{"line":958,"type":"cond-expr","locations":[{"start":{"line":958,"column":36},"end":{"line":958,"column":54}},{"start":{"line":958,"column":57},"end":{"line":958,"column":66}}]},"152":{"line":963,"type":"if","locations":[{"start":{"line":963,"column":14},"end":{"line":963,"column":14}},{"start":{"line":963,"column":14},"end":{"line":963,"column":14}}]},"153":{"line":966,"type":"if","locations":[{"start":{"line":966,"column":14},"end":{"line":966,"column":14}},{"start":{"line":966,"column":14},"end":{"line":966,"column":14}}]},"154":{"line":966,"type":"binary-expr","locations":[{"start":{"line":966,"column":18},"end":{"line":966,"column":22}},{"start":{"line":966,"column":26},"end":{"line":966,"column":50}}]},"155":{"line":972,"type":"if","locations":[{"start":{"line":972,"column":14},"end":{"line":972,"column":14}},{"start":{"line":972,"column":14},"end":{"line":972,"column":14}}]},"156":{"line":978,"type":"cond-expr","locations":[{"start":{"line":978,"column":40},"end":{"line":978,"column":58}},{"start":{"line":978,"column":61},"end":{"line":978,"column":70}}]},"157":{"line":993,"type":"if","locations":[{"start":{"line":993,"column":6},"end":{"line":993,"column":6}},{"start":{"line":993,"column":6},"end":{"line":993,"column":6}}]},"158":{"line":993,"type":"binary-expr","locations":[{"start":{"line":993,"column":10},"end":{"line":993,"column":21}},{"start":{"line":993,"column":25},"end":{"line":993,"column":48}}]},"159":{"line":997,"type":"if","locations":[{"start":{"line":997,"column":8},"end":{"line":997,"column":8}},{"start":{"line":997,"column":8},"end":{"line":997,"column":8}}]},"160":{"line":998,"type":"if","locations":[{"start":{"line":998,"column":8},"end":{"line":998,"column":8}},{"start":{"line":998,"column":8},"end":{"line":998,"column":8}}]},"161":{"line":1003,"type":"if","locations":[{"start":{"line":1003,"column":10},"end":{"line":1003,"column":10}},{"start":{"line":1003,"column":10},"end":{"line":1003,"column":10}}]},"162":{"line":1005,"type":"if","locations":[{"start":{"line":1005,"column":8},"end":{"line":1005,"column":8}},{"start":{"line":1005,"column":8},"end":{"line":1005,"column":8}}]},"163":{"line":1031,"type":"if","locations":[{"start":{"line":1031,"column":2},"end":{"line":1031,"column":2}},{"start":{"line":1031,"column":2},"end":{"line":1031,"column":2}}]},"164":{"line":1036,"type":"if","locations":[{"start":{"line":1036,"column":2},"end":{"line":1036,"column":2}},{"start":{"line":1036,"column":2},"end":{"line":1036,"column":2}}]},"165":{"line":1036,"type":"binary-expr","locations":[{"start":{"line":1036,"column":6},"end":{"line":1036,"column":24}},{"start":{"line":1036,"column":28},"end":{"line":1036,"column":49}},{"start":{"line":1036,"column":53},"end":{"line":1036,"column":69}}]},"166":{"line":1042,"type":"if","locations":[{"start":{"line":1042,"column":10},"end":{"line":1042,"column":10}},{"start":{"line":1042,"column":10},"end":{"line":1042,"column":10}}]},"167":{"line":1042,"type":"binary-expr","locations":[{"start":{"line":1042,"column":14},"end":{"line":1042,"column":35}},{"start":{"line":1042,"column":39},"end":{"line":1042,"column":55}}]},"168":{"line":1043,"type":"if","locations":[{"start":{"line":1043,"column":4},"end":{"line":1043,"column":4}},{"start":{"line":1043,"column":4},"end":{"line":1043,"column":4}}]},"169":{"line":1050,"type":"if","locations":[{"start":{"line":1050,"column":9},"end":{"line":1050,"column":9}},{"start":{"line":1050,"column":9},"end":{"line":1050,"column":9}}]},"170":{"line":1051,"type":"if","locations":[{"start":{"line":1051,"column":4},"end":{"line":1051,"column":4}},{"start":{"line":1051,"column":4},"end":{"line":1051,"column":4}}]},"171":{"line":1058,"type":"binary-expr","locations":[{"start":{"line":1058,"column":7},"end":{"line":1058,"column":9}},{"start":{"line":1058,"column":13},"end":{"line":1058,"column":42}}]},"172":{"line":1059,"type":"binary-expr","locations":[{"start":{"line":1059,"column":10},"end":{"line":1059,"column":15}},{"start":{"line":1059,"column":19},"end":{"line":1059,"column":30}}]},"173":{"line":1060,"type":"binary-expr","locations":[{"start":{"line":1060,"column":9},"end":{"line":1060,"column":13}},{"start":{"line":1060,"column":17},"end":{"line":1060,"column":19}}]},"174":{"line":1061,"type":"binary-expr","locations":[{"start":{"line":1061,"column":12},"end":{"line":1061,"column":19}},{"start":{"line":1061,"column":23},"end":{"line":1061,"column":25}}]},"175":{"line":1077,"type":"if","locations":[{"start":{"line":1077,"column":6},"end":{"line":1077,"column":6}},{"start":{"line":1077,"column":6},"end":{"line":1077,"column":6}}]},"176":{"line":1086,"type":"if","locations":[{"start":{"line":1086,"column":8},"end":{"line":1086,"column":8}},{"start":{"line":1086,"column":8},"end":{"line":1086,"column":8}}]},"177":{"line":1090,"type":"if","locations":[{"start":{"line":1090,"column":8},"end":{"line":1090,"column":8}},{"start":{"line":1090,"column":8},"end":{"line":1090,"column":8}}]},"178":{"line":1095,"type":"if","locations":[{"start":{"line":1095,"column":8},"end":{"line":1095,"column":8}},{"start":{"line":1095,"column":8},"end":{"line":1095,"column":8}}]},"179":{"line":1104,"type":"if","locations":[{"start":{"line":1104,"column":12},"end":{"line":1104,"column":12}},{"start":{"line":1104,"column":12},"end":{"line":1104,"column":12}}]},"180":{"line":1111,"type":"if","locations":[{"start":{"line":1111,"column":10},"end":{"line":1111,"column":10}},{"start":{"line":1111,"column":10},"end":{"line":1111,"column":10}}]},"181":{"line":1132,"type":"if","locations":[{"start":{"line":1132,"column":6},"end":{"line":1132,"column":6}},{"start":{"line":1132,"column":6},"end":{"line":1132,"column":6}}]},"182":{"line":1134,"type":"if","locations":[{"start":{"line":1134,"column":6},"end":{"line":1134,"column":6}},{"start":{"line":1134,"column":6},"end":{"line":1134,"column":6}}]},"183":{"line":1142,"type":"if","locations":[{"start":{"line":1142,"column":2},"end":{"line":1142,"column":2}},{"start":{"line":1142,"column":2},"end":{"line":1142,"column":2}}]},"184":{"line":1163,"type":"if","locations":[{"start":{"line":1163,"column":6},"end":{"line":1163,"column":6}},{"start":{"line":1163,"column":6},"end":{"line":1163,"column":6}}]},"185":{"line":1169,"type":"cond-expr","locations":[{"start":{"line":1169,"column":40},"end":{"line":1169,"column":44}},{"start":{"line":1169,"column":47},"end":{"line":1169,"column":62}}]},"186":{"line":1182,"type":"if","locations":[{"start":{"line":1182,"column":8},"end":{"line":1182,"column":8}},{"start":{"line":1182,"column":8},"end":{"line":1182,"column":8}}]},"187":{"line":1188,"type":"if","locations":[{"start":{"line":1188,"column":8},"end":{"line":1188,"column":8}},{"start":{"line":1188,"column":8},"end":{"line":1188,"column":8}}]},"188":{"line":1193,"type":"if","locations":[{"start":{"line":1193,"column":8},"end":{"line":1193,"column":8}},{"start":{"line":1193,"column":8},"end":{"line":1193,"column":8}}]},"189":{"line":1193,"type":"binary-expr","locations":[{"start":{"line":1193,"column":12},"end":{"line":1193,"column":42}},{"start":{"line":1193,"column":46},"end":{"line":1193,"column":90}}]},"190":{"line":1199,"type":"if","locations":[{"start":{"line":1199,"column":10},"end":{"line":1199,"column":10}},{"start":{"line":1199,"column":10},"end":{"line":1199,"column":10}}]},"191":{"line":1209,"type":"if","locations":[{"start":{"line":1209,"column":6},"end":{"line":1209,"column":6}},{"start":{"line":1209,"column":6},"end":{"line":1209,"column":6}}]},"192":{"line":1210,"type":"if","locations":[{"start":{"line":1210,"column":6},"end":{"line":1210,"column":6}},{"start":{"line":1210,"column":6},"end":{"line":1210,"column":6}}]},"193":{"line":1211,"type":"if","locations":[{"start":{"line":1211,"column":8},"end":{"line":1211,"column":8}},{"start":{"line":1211,"column":8},"end":{"line":1211,"column":8}}]},"194":{"line":1218,"type":"if","locations":[{"start":{"line":1218,"column":8},"end":{"line":1218,"column":8}},{"start":{"line":1218,"column":8},"end":{"line":1218,"column":8}}]},"195":{"line":1238,"type":"if","locations":[{"start":{"line":1238,"column":2},"end":{"line":1238,"column":2}},{"start":{"line":1238,"column":2},"end":{"line":1238,"column":2}}]},"196":{"line":1243,"type":"if","locations":[{"start":{"line":1243,"column":2},"end":{"line":1243,"column":2}},{"start":{"line":1243,"column":2},"end":{"line":1243,"column":2}}]},"197":{"line":1244,"type":"if","locations":[{"start":{"line":1244,"column":4},"end":{"line":1244,"column":4}},{"start":{"line":1244,"column":4},"end":{"line":1244,"column":4}}]},"198":{"line":1251,"type":"binary-expr","locations":[{"start":{"line":1251,"column":7},"end":{"line":1251,"column":9}},{"start":{"line":1251,"column":13},"end":{"line":1251,"column":42}}]},"199":{"line":1252,"type":"binary-expr","locations":[{"start":{"line":1252,"column":12},"end":{"line":1252,"column":19}},{"start":{"line":1252,"column":23},"end":{"line":1252,"column":25}}]},"200":{"line":1257,"type":"if","locations":[{"start":{"line":1257,"column":2},"end":{"line":1257,"column":2}},{"start":{"line":1257,"column":2},"end":{"line":1257,"column":2}}]},"201":{"line":1257,"type":"binary-expr","locations":[{"start":{"line":1257,"column":6},"end":{"line":1257,"column":22}},{"start":{"line":1257,"column":26},"end":{"line":1257,"column":37}},{"start":{"line":1257,"column":41},"end":{"line":1257,"column":50}}]},"202":{"line":1259,"type":"cond-expr","locations":[{"start":{"line":1259,"column":20},"end":{"line":1259,"column":25}},{"start":{"line":1259,"column":28},"end":{"line":1259,"column":39}}]},"203":{"line":1288,"type":"if","locations":[{"start":{"line":1288,"column":2},"end":{"line":1288,"column":2}},{"start":{"line":1288,"column":2},"end":{"line":1288,"column":2}}]},"204":{"line":1294,"type":"if","locations":[{"start":{"line":1294,"column":2},"end":{"line":1294,"column":2}},{"start":{"line":1294,"column":2},"end":{"line":1294,"column":2}}]},"205":{"line":1294,"type":"binary-expr","locations":[{"start":{"line":1294,"column":6},"end":{"line":1294,"column":27}},{"start":{"line":1294,"column":31},"end":{"line":1294,"column":47}}]},"206":{"line":1295,"type":"if","locations":[{"start":{"line":1295,"column":4},"end":{"line":1295,"column":4}},{"start":{"line":1295,"column":4},"end":{"line":1295,"column":4}}]},"207":{"line":1300,"type":"if","locations":[{"start":{"line":1300,"column":9},"end":{"line":1300,"column":9}},{"start":{"line":1300,"column":9},"end":{"line":1300,"column":9}}]},"208":{"line":1301,"type":"if","locations":[{"start":{"line":1301,"column":4},"end":{"line":1301,"column":4}},{"start":{"line":1301,"column":4},"end":{"line":1301,"column":4}}]},"209":{"line":1305,"type":"if","locations":[{"start":{"line":1305,"column":6},"end":{"line":1305,"column":6}},{"start":{"line":1305,"column":6},"end":{"line":1305,"column":6}}]},"210":{"line":1305,"type":"binary-expr","locations":[{"start":{"line":1305,"column":10},"end":{"line":1305,"column":36}},{"start":{"line":1305,"column":40},"end":{"line":1305,"column":74}}]},"211":{"line":1305,"type":"binary-expr","locations":[{"start":{"line":1305,"column":42},"end":{"line":1305,"column":56}},{"start":{"line":1305,"column":60},"end":{"line":1305,"column":73}}]},"212":{"line":1313,"type":"binary-expr","locations":[{"start":{"line":1313,"column":7},"end":{"line":1313,"column":9}},{"start":{"line":1313,"column":13},"end":{"line":1313,"column":42}}]},"213":{"line":1314,"type":"binary-expr","locations":[{"start":{"line":1314,"column":12},"end":{"line":1314,"column":19}},{"start":{"line":1314,"column":23},"end":{"line":1314,"column":25}}]},"214":{"line":1315,"type":"binary-expr","locations":[{"start":{"line":1315,"column":11},"end":{"line":1315,"column":17}},{"start":{"line":1315,"column":21},"end":{"line":1315,"column":23}}]},"215":{"line":1321,"type":"if","locations":[{"start":{"line":1321,"column":2},"end":{"line":1321,"column":2}},{"start":{"line":1321,"column":2},"end":{"line":1321,"column":2}}]},"216":{"line":1323,"type":"if","locations":[{"start":{"line":1323,"column":9},"end":{"line":1323,"column":9}},{"start":{"line":1323,"column":9},"end":{"line":1323,"column":9}}]},"217":{"line":1323,"type":"binary-expr","locations":[{"start":{"line":1323,"column":13},"end":{"line":1323,"column":23}},{"start":{"line":1323,"column":27},"end":{"line":1323,"column":36}}]},"218":{"line":1329,"type":"if","locations":[{"start":{"line":1329,"column":4},"end":{"line":1329,"column":4}},{"start":{"line":1329,"column":4},"end":{"line":1329,"column":4}}]},"219":{"line":1332,"type":"if","locations":[{"start":{"line":1332,"column":4},"end":{"line":1332,"column":4}},{"start":{"line":1332,"column":4},"end":{"line":1332,"column":4}}]},"220":{"line":1348,"type":"if","locations":[{"start":{"line":1348,"column":2},"end":{"line":1348,"column":2}},{"start":{"line":1348,"column":2},"end":{"line":1348,"column":2}}]},"221":{"line":1348,"type":"binary-expr","locations":[{"start":{"line":1348,"column":6},"end":{"line":1348,"column":27}},{"start":{"line":1348,"column":31},"end":{"line":1348,"column":47}}]},"222":{"line":1349,"type":"if","locations":[{"start":{"line":1349,"column":4},"end":{"line":1349,"column":4}},{"start":{"line":1349,"column":4},"end":{"line":1349,"column":4}}]},"223":{"line":1354,"type":"if","locations":[{"start":{"line":1354,"column":9},"end":{"line":1354,"column":9}},{"start":{"line":1354,"column":9},"end":{"line":1354,"column":9}}]},"224":{"line":1355,"type":"if","locations":[{"start":{"line":1355,"column":4},"end":{"line":1355,"column":4}},{"start":{"line":1355,"column":4},"end":{"line":1355,"column":4}}]},"225":{"line":1362,"type":"binary-expr","locations":[{"start":{"line":1362,"column":7},"end":{"line":1362,"column":9}},{"start":{"line":1362,"column":13},"end":{"line":1362,"column":42}}]},"226":{"line":1363,"type":"binary-expr","locations":[{"start":{"line":1363,"column":12},"end":{"line":1363,"column":19}},{"start":{"line":1363,"column":23},"end":{"line":1363,"column":25}}]},"227":{"line":1364,"type":"binary-expr","locations":[{"start":{"line":1364,"column":10},"end":{"line":1364,"column":15}},{"start":{"line":1364,"column":19},"end":{"line":1364,"column":21}}]},"228":{"line":1371,"type":"if","locations":[{"start":{"line":1371,"column":2},"end":{"line":1371,"column":2}},{"start":{"line":1371,"column":2},"end":{"line":1371,"column":2}}]},"229":{"line":1373,"type":"if","locations":[{"start":{"line":1373,"column":9},"end":{"line":1373,"column":9}},{"start":{"line":1373,"column":9},"end":{"line":1373,"column":9}}]},"230":{"line":1381,"type":"binary-expr","locations":[{"start":{"line":1381,"column":21},"end":{"line":1381,"column":26}},{"start":{"line":1381,"column":30},"end":{"line":1381,"column":32}}]},"231":{"line":1385,"type":"cond-expr","locations":[{"start":{"line":1385,"column":42},"end":{"line":1385,"column":47}},{"start":{"line":1385,"column":50},"end":{"line":1385,"column":54}}]},"232":{"line":1388,"type":"cond-expr","locations":[{"start":{"line":1388,"column":33},"end":{"line":1388,"column":73}},{"start":{"line":1388,"column":76},"end":{"line":1388,"column":83}}]},"233":{"line":1394,"type":"if","locations":[{"start":{"line":1394,"column":2},"end":{"line":1394,"column":2}},{"start":{"line":1394,"column":2},"end":{"line":1394,"column":2}}]},"234":{"line":1417,"type":"if","locations":[{"start":{"line":1417,"column":2},"end":{"line":1417,"column":2}},{"start":{"line":1417,"column":2},"end":{"line":1417,"column":2}}]},"235":{"line":1417,"type":"binary-expr","locations":[{"start":{"line":1417,"column":6},"end":{"line":1417,"column":7}},{"start":{"line":1417,"column":11},"end":{"line":1417,"column":21}},{"start":{"line":1417,"column":25},"end":{"line":1417,"column":40}}]},"236":{"line":1423,"type":"if","locations":[{"start":{"line":1423,"column":2},"end":{"line":1423,"column":2}},{"start":{"line":1423,"column":2},"end":{"line":1423,"column":2}}]},"237":{"line":1423,"type":"binary-expr","locations":[{"start":{"line":1423,"column":6},"end":{"line":1423,"column":8}},{"start":{"line":1423,"column":12},"end":{"line":1423,"column":23}},{"start":{"line":1423,"column":27},"end":{"line":1423,"column":43}}]},"238":{"line":1455,"type":"if","locations":[{"start":{"line":1455,"column":2},"end":{"line":1455,"column":2}},{"start":{"line":1455,"column":2},"end":{"line":1455,"column":2}}]},"239":{"line":1459,"type":"if","locations":[{"start":{"line":1459,"column":2},"end":{"line":1459,"column":2}},{"start":{"line":1459,"column":2},"end":{"line":1459,"column":2}}]},"240":{"line":1459,"type":"binary-expr","locations":[{"start":{"line":1459,"column":7},"end":{"line":1459,"column":33}},{"start":{"line":1459,"column":38},"end":{"line":1459,"column":59}}]},"241":{"line":1464,"type":"if","locations":[{"start":{"line":1464,"column":2},"end":{"line":1464,"column":2}},{"start":{"line":1464,"column":2},"end":{"line":1464,"column":2}}]},"242":{"line":1464,"type":"binary-expr","locations":[{"start":{"line":1464,"column":6},"end":{"line":1464,"column":18}},{"start":{"line":1464,"column":22},"end":{"line":1464,"column":33}},{"start":{"line":1464,"column":37},"end":{"line":1464,"column":50}}]},"243":{"line":1465,"type":"binary-expr","locations":[{"start":{"line":1465,"column":23},"end":{"line":1465,"column":35}},{"start":{"line":1465,"column":39},"end":{"line":1465,"column":42}}]},"244":{"line":1466,"type":"binary-expr","locations":[{"start":{"line":1466,"column":24},"end":{"line":1466,"column":35}},{"start":{"line":1466,"column":39},"end":{"line":1466,"column":52}},{"start":{"line":1466,"column":56},"end":{"line":1466,"column":57}}]},"245":{"line":1467,"type":"if","locations":[{"start":{"line":1467,"column":4},"end":{"line":1467,"column":4}},{"start":{"line":1467,"column":4},"end":{"line":1467,"column":4}}]},"246":{"line":1467,"type":"binary-expr","locations":[{"start":{"line":1467,"column":8},"end":{"line":1467,"column":20}},{"start":{"line":1467,"column":24},"end":{"line":1467,"column":34}},{"start":{"line":1467,"column":38},"end":{"line":1467,"column":64}}]},"247":{"line":1473,"type":"if","locations":[{"start":{"line":1473,"column":4},"end":{"line":1473,"column":4}},{"start":{"line":1473,"column":4},"end":{"line":1473,"column":4}}]},"248":{"line":1473,"type":"binary-expr","locations":[{"start":{"line":1473,"column":8},"end":{"line":1473,"column":21}},{"start":{"line":1473,"column":25},"end":{"line":1473,"column":35}},{"start":{"line":1473,"column":39},"end":{"line":1473,"column":67}}]},"249":{"line":1475,"type":"binary-expr","locations":[{"start":{"line":1475,"column":10},"end":{"line":1475,"column":21}},{"start":{"line":1475,"column":25},"end":{"line":1475,"column":38}}]},"250":{"line":1484,"type":"if","locations":[{"start":{"line":1484,"column":2},"end":{"line":1484,"column":2}},{"start":{"line":1484,"column":2},"end":{"line":1484,"column":2}}]},"251":{"line":1486,"type":"if","locations":[{"start":{"line":1486,"column":4},"end":{"line":1486,"column":4}},{"start":{"line":1486,"column":4},"end":{"line":1486,"column":4}}]},"252":{"line":1491,"type":"if","locations":[{"start":{"line":1491,"column":6},"end":{"line":1491,"column":6}},{"start":{"line":1491,"column":6},"end":{"line":1491,"column":6}}]},"253":{"line":1496,"type":"if","locations":[{"start":{"line":1496,"column":10},"end":{"line":1496,"column":10}},{"start":{"line":1496,"column":10},"end":{"line":1496,"column":10}}]},"254":{"line":1501,"type":"if","locations":[{"start":{"line":1501,"column":10},"end":{"line":1501,"column":10}},{"start":{"line":1501,"column":10},"end":{"line":1501,"column":10}}]},"255":{"line":1503,"type":"if","locations":[{"start":{"line":1503,"column":12},"end":{"line":1503,"column":12}},{"start":{"line":1503,"column":12},"end":{"line":1503,"column":12}}]},"256":{"line":1503,"type":"binary-expr","locations":[{"start":{"line":1503,"column":16},"end":{"line":1503,"column":29}},{"start":{"line":1503,"column":33},"end":{"line":1503,"column":47}}]},"257":{"line":1519,"type":"if","locations":[{"start":{"line":1519,"column":4},"end":{"line":1519,"column":4}},{"start":{"line":1519,"column":4},"end":{"line":1519,"column":4}}]},"258":{"line":1519,"type":"binary-expr","locations":[{"start":{"line":1519,"column":8},"end":{"line":1519,"column":27}},{"start":{"line":1519,"column":31},"end":{"line":1519,"column":63}}]},"259":{"line":1527,"type":"if","locations":[{"start":{"line":1527,"column":2},"end":{"line":1527,"column":2}},{"start":{"line":1527,"column":2},"end":{"line":1527,"column":2}}]},"260":{"line":1541,"type":"if","locations":[{"start":{"line":1541,"column":2},"end":{"line":1541,"column":2}},{"start":{"line":1541,"column":2},"end":{"line":1541,"column":2}}]},"261":{"line":1548,"type":"if","locations":[{"start":{"line":1548,"column":2},"end":{"line":1548,"column":2}},{"start":{"line":1548,"column":2},"end":{"line":1548,"column":2}}]},"262":{"line":1549,"type":"switch","locations":[{"start":{"line":1550,"column":6},"end":{"line":1550,"column":18}},{"start":{"line":1551,"column":6},"end":{"line":1552,"column":20}},{"start":{"line":1553,"column":6},"end":{"line":1553,"column":19}},{"start":{"line":1554,"column":6},"end":{"line":1555,"column":21}}]},"263":{"line":1558,"type":"if","locations":[{"start":{"line":1558,"column":2},"end":{"line":1558,"column":2}},{"start":{"line":1558,"column":2},"end":{"line":1558,"column":2}}]},"264":{"line":1566,"type":"cond-expr","locations":[{"start":{"line":1566,"column":23},"end":{"line":1566,"column":26}},{"start":{"line":1566,"column":29},"end":{"line":1566,"column":32}}]},"265":{"line":1570,"type":"if","locations":[{"start":{"line":1570,"column":2},"end":{"line":1570,"column":2}},{"start":{"line":1570,"column":2},"end":{"line":1570,"column":2}}]},"266":{"line":1574,"type":"if","locations":[{"start":{"line":1574,"column":2},"end":{"line":1574,"column":2}},{"start":{"line":1574,"column":2},"end":{"line":1574,"column":2}}]},"267":{"line":1581,"type":"if","locations":[{"start":{"line":1581,"column":2},"end":{"line":1581,"column":2}},{"start":{"line":1581,"column":2},"end":{"line":1581,"column":2}}]},"268":{"line":1587,"type":"if","locations":[{"start":{"line":1587,"column":4},"end":{"line":1587,"column":4}},{"start":{"line":1587,"column":4},"end":{"line":1587,"column":4}}]},"269":{"line":1607,"type":"if","locations":[{"start":{"line":1607,"column":2},"end":{"line":1607,"column":2}},{"start":{"line":1607,"column":2},"end":{"line":1607,"column":2}}]},"270":{"line":1611,"type":"binary-expr","locations":[{"start":{"line":1611,"column":12},"end":{"line":1611,"column":19}},{"start":{"line":1611,"column":23},"end":{"line":1611,"column":25}}]},"271":{"line":1614,"type":"if","locations":[{"start":{"line":1614,"column":2},"end":{"line":1614,"column":2}},{"start":{"line":1614,"column":2},"end":{"line":1614,"column":2}}]},"272":{"line":1614,"type":"binary-expr","locations":[{"start":{"line":1614,"column":6},"end":{"line":1614,"column":31}},{"start":{"line":1614,"column":35},"end":{"line":1614,"column":55}}]},"273":{"line":1623,"type":"if","locations":[{"start":{"line":1623,"column":4},"end":{"line":1623,"column":4}},{"start":{"line":1623,"column":4},"end":{"line":1623,"column":4}}]},"274":{"line":1623,"type":"binary-expr","locations":[{"start":{"line":1623,"column":8},"end":{"line":1623,"column":19}},{"start":{"line":1623,"column":23},"end":{"line":1623,"column":33}},{"start":{"line":1623,"column":37},"end":{"line":1623,"column":48}}]},"275":{"line":1639,"type":"binary-expr","locations":[{"start":{"line":1639,"column":19},"end":{"line":1639,"column":27}},{"start":{"line":1639,"column":31},"end":{"line":1639,"column":44}}]},"276":{"line":1640,"type":"if","locations":[{"start":{"line":1640,"column":4},"end":{"line":1640,"column":4}},{"start":{"line":1640,"column":4},"end":{"line":1640,"column":4}}]},"277":{"line":1643,"type":"if","locations":[{"start":{"line":1643,"column":4},"end":{"line":1643,"column":4}},{"start":{"line":1643,"column":4},"end":{"line":1643,"column":4}}]},"278":{"line":1643,"type":"binary-expr","locations":[{"start":{"line":1643,"column":8},"end":{"line":1643,"column":31}},{"start":{"line":1643,"column":35},"end":{"line":1643,"column":53}}]},"279":{"line":1646,"type":"if","locations":[{"start":{"line":1646,"column":4},"end":{"line":1646,"column":4}},{"start":{"line":1646,"column":4},"end":{"line":1646,"column":4}}]},"280":{"line":1648,"type":"if","locations":[{"start":{"line":1648,"column":11},"end":{"line":1648,"column":11}},{"start":{"line":1648,"column":11},"end":{"line":1648,"column":11}}]},"281":{"line":1650,"type":"if","locations":[{"start":{"line":1650,"column":11},"end":{"line":1650,"column":11}},{"start":{"line":1650,"column":11},"end":{"line":1650,"column":11}}]},"282":{"line":1659,"type":"if","locations":[{"start":{"line":1659,"column":4},"end":{"line":1659,"column":4}},{"start":{"line":1659,"column":4},"end":{"line":1659,"column":4}}]},"283":{"line":1663,"type":"if","locations":[{"start":{"line":1663,"column":4},"end":{"line":1663,"column":4}},{"start":{"line":1663,"column":4},"end":{"line":1663,"column":4}}]},"284":{"line":1667,"type":"if","locations":[{"start":{"line":1667,"column":4},"end":{"line":1667,"column":4}},{"start":{"line":1667,"column":4},"end":{"line":1667,"column":4}}]},"285":{"line":1677,"type":"if","locations":[{"start":{"line":1677,"column":4},"end":{"line":1677,"column":4}},{"start":{"line":1677,"column":4},"end":{"line":1677,"column":4}}]},"286":{"line":1677,"type":"binary-expr","locations":[{"start":{"line":1677,"column":8},"end":{"line":1677,"column":20}},{"start":{"line":1677,"column":24},"end":{"line":1677,"column":41}}]},"287":{"line":1683,"type":"if","locations":[{"start":{"line":1683,"column":4},"end":{"line":1683,"column":4}},{"start":{"line":1683,"column":4},"end":{"line":1683,"column":4}}]},"288":{"line":1685,"type":"if","locations":[{"start":{"line":1685,"column":8},"end":{"line":1685,"column":8}},{"start":{"line":1685,"column":8},"end":{"line":1685,"column":8}}]},"289":{"line":1688,"type":"switch","locations":[{"start":{"line":1689,"column":12},"end":{"line":1689,"column":23}},{"start":{"line":1690,"column":12},"end":{"line":1690,"column":23}},{"start":{"line":1691,"column":12},"end":{"line":1709,"column":20}},{"start":{"line":1710,"column":12},"end":{"line":1710,"column":24}},{"start":{"line":1711,"column":12},"end":{"line":1711,"column":25}},{"start":{"line":1712,"column":12},"end":{"line":1712,"column":25}},{"start":{"line":1713,"column":12},"end":{"line":1722,"column":20}},{"start":{"line":1723,"column":12},"end":{"line":1729,"column":20}}]},"290":{"line":1700,"type":"if","locations":[{"start":{"line":1700,"column":14},"end":{"line":1700,"column":14}},{"start":{"line":1700,"column":14},"end":{"line":1700,"column":14}}]},"291":{"line":1700,"type":"binary-expr","locations":[{"start":{"line":1700,"column":18},"end":{"line":1700,"column":40}},{"start":{"line":1700,"column":44},"end":{"line":1700,"column":60}}]},"292":{"line":1714,"type":"if","locations":[{"start":{"line":1714,"column":14},"end":{"line":1714,"column":14}},{"start":{"line":1714,"column":14},"end":{"line":1714,"column":14}}]},"293":{"line":1714,"type":"binary-expr","locations":[{"start":{"line":1714,"column":20},"end":{"line":1714,"column":43}},{"start":{"line":1714,"column":47},"end":{"line":1714,"column":68}}]},"294":{"line":1725,"type":"if","locations":[{"start":{"line":1725,"column":14},"end":{"line":1725,"column":14}},{"start":{"line":1725,"column":14},"end":{"line":1725,"column":14}}]},"295":{"line":1744,"type":"if","locations":[{"start":{"line":1744,"column":4},"end":{"line":1744,"column":4}},{"start":{"line":1744,"column":4},"end":{"line":1744,"column":4}}]},"296":{"line":1746,"type":"if","locations":[{"start":{"line":1746,"column":8},"end":{"line":1746,"column":8}},{"start":{"line":1746,"column":8},"end":{"line":1746,"column":8}}]},"297":{"line":1746,"type":"binary-expr","locations":[{"start":{"line":1746,"column":12},"end":{"line":1746,"column":27}},{"start":{"line":1746,"column":31},"end":{"line":1746,"column":51}}]},"298":{"line":1747,"type":"if","locations":[{"start":{"line":1747,"column":10},"end":{"line":1747,"column":10}},{"start":{"line":1747,"column":10},"end":{"line":1747,"column":10}}]},"299":{"line":1753,"type":"if","locations":[{"start":{"line":1753,"column":6},"end":{"line":1753,"column":6}},{"start":{"line":1753,"column":6},"end":{"line":1753,"column":6}}]},"300":{"line":1755,"type":"if","locations":[{"start":{"line":1755,"column":8},"end":{"line":1755,"column":8}},{"start":{"line":1755,"column":8},"end":{"line":1755,"column":8}}]},"301":{"line":1755,"type":"binary-expr","locations":[{"start":{"line":1755,"column":12},"end":{"line":1755,"column":29}},{"start":{"line":1755,"column":33},"end":{"line":1755,"column":54}}]},"302":{"line":1758,"type":"if","locations":[{"start":{"line":1758,"column":15},"end":{"line":1758,"column":15}},{"start":{"line":1758,"column":15},"end":{"line":1758,"column":15}}]},"303":{"line":1758,"type":"binary-expr","locations":[{"start":{"line":1758,"column":19},"end":{"line":1758,"column":40}},{"start":{"line":1758,"column":44},"end":{"line":1758,"column":65}}]},"304":{"line":1760,"type":"if","locations":[{"start":{"line":1760,"column":15},"end":{"line":1760,"column":15}},{"start":{"line":1760,"column":15},"end":{"line":1760,"column":15}}]},"305":{"line":1760,"type":"binary-expr","locations":[{"start":{"line":1760,"column":20},"end":{"line":1760,"column":39}},{"start":{"line":1760,"column":43},"end":{"line":1760,"column":63}},{"start":{"line":1761,"column":12},"end":{"line":1761,"column":32}},{"start":{"line":1761,"column":36},"end":{"line":1761,"column":57}},{"start":{"line":1761,"column":62},"end":{"line":1761,"column":83}}]},"306":{"line":1763,"type":"if","locations":[{"start":{"line":1763,"column":15},"end":{"line":1763,"column":15}},{"start":{"line":1763,"column":15},"end":{"line":1763,"column":15}}]},"307":{"line":1763,"type":"binary-expr","locations":[{"start":{"line":1763,"column":19},"end":{"line":1763,"column":41}},{"start":{"line":1763,"column":45},"end":{"line":1763,"column":68}}]},"308":{"line":1771,"type":"if","locations":[{"start":{"line":1771,"column":4},"end":{"line":1771,"column":4}},{"start":{"line":1771,"column":4},"end":{"line":1771,"column":4}}]},"309":{"line":1774,"type":"if","locations":[{"start":{"line":1774,"column":6},"end":{"line":1774,"column":6}},{"start":{"line":1774,"column":6},"end":{"line":1774,"column":6}}]},"310":{"line":1847,"type":"if","locations":[{"start":{"line":1847,"column":2},"end":{"line":1847,"column":2}},{"start":{"line":1847,"column":2},"end":{"line":1847,"column":2}}]},"311":{"line":1851,"type":"if","locations":[{"start":{"line":1851,"column":2},"end":{"line":1851,"column":2}},{"start":{"line":1851,"column":2},"end":{"line":1851,"column":2}}]},"312":{"line":1851,"type":"binary-expr","locations":[{"start":{"line":1851,"column":6},"end":{"line":1851,"column":27}},{"start":{"line":1851,"column":31},"end":{"line":1851,"column":47}}]},"313":{"line":1852,"type":"if","locations":[{"start":{"line":1852,"column":4},"end":{"line":1852,"column":4}},{"start":{"line":1852,"column":4},"end":{"line":1852,"column":4}}]},"314":{"line":1857,"type":"if","locations":[{"start":{"line":1857,"column":9},"end":{"line":1857,"column":9}},{"start":{"line":1857,"column":9},"end":{"line":1857,"column":9}}]},"315":{"line":1858,"type":"if","locations":[{"start":{"line":1858,"column":4},"end":{"line":1858,"column":4}},{"start":{"line":1858,"column":4},"end":{"line":1858,"column":4}}]},"316":{"line":1865,"type":"binary-expr","locations":[{"start":{"line":1865,"column":7},"end":{"line":1865,"column":9}},{"start":{"line":1865,"column":13},"end":{"line":1865,"column":42}}]},"317":{"line":1866,"type":"binary-expr","locations":[{"start":{"line":1866,"column":10},"end":{"line":1866,"column":15}},{"start":{"line":1866,"column":19},"end":{"line":1866,"column":21}}]},"318":{"line":1867,"type":"binary-expr","locations":[{"start":{"line":1867,"column":12},"end":{"line":1867,"column":19}},{"start":{"line":1867,"column":23},"end":{"line":1867,"column":25}}]},"319":{"line":1891,"type":"binary-expr","locations":[{"start":{"line":1891,"column":13},"end":{"line":1891,"column":18}},{"start":{"line":1891,"column":22},"end":{"line":1891,"column":49}}]},"320":{"line":1894,"type":"if","locations":[{"start":{"line":1894,"column":2},"end":{"line":1894,"column":2}},{"start":{"line":1894,"column":2},"end":{"line":1894,"column":2}}]},"321":{"line":1895,"type":"if","locations":[{"start":{"line":1895,"column":4},"end":{"line":1895,"column":4}},{"start":{"line":1895,"column":4},"end":{"line":1895,"column":4}}]},"322":{"line":1898,"type":"if","locations":[{"start":{"line":1898,"column":11},"end":{"line":1898,"column":11}},{"start":{"line":1898,"column":11},"end":{"line":1898,"column":11}}]},"323":{"line":1902,"type":"if","locations":[{"start":{"line":1902,"column":6},"end":{"line":1902,"column":6}},{"start":{"line":1902,"column":6},"end":{"line":1902,"column":6}}]},"324":{"line":1916,"type":"if","locations":[{"start":{"line":1916,"column":10},"end":{"line":1916,"column":10}},{"start":{"line":1916,"column":10},"end":{"line":1916,"column":10}}]},"325":{"line":1926,"type":"if","locations":[{"start":{"line":1926,"column":10},"end":{"line":1926,"column":10}},{"start":{"line":1926,"column":10},"end":{"line":1926,"column":10}}]},"326":{"line":1928,"type":"if","locations":[{"start":{"line":1928,"column":17},"end":{"line":1928,"column":17}},{"start":{"line":1928,"column":17},"end":{"line":1928,"column":17}}]},"327":{"line":1949,"type":"if","locations":[{"start":{"line":1949,"column":10},"end":{"line":1949,"column":10}},{"start":{"line":1949,"column":10},"end":{"line":1949,"column":10}}]},"328":{"line":1961,"type":"if","locations":[{"start":{"line":1961,"column":14},"end":{"line":1961,"column":14}},{"start":{"line":1961,"column":14},"end":{"line":1961,"column":14}}]},"329":{"line":1965,"type":"if","locations":[{"start":{"line":1965,"column":12},"end":{"line":1965,"column":12}},{"start":{"line":1965,"column":12},"end":{"line":1965,"column":12}}]},"330":{"line":1970,"type":"cond-expr","locations":[{"start":{"line":1970,"column":53},"end":{"line":1970,"column":77}},{"start":{"line":1970,"column":80},"end":{"line":1970,"column":101}}]},"331":{"line":1971,"type":"if","locations":[{"start":{"line":1971,"column":8},"end":{"line":1971,"column":8}},{"start":{"line":1971,"column":8},"end":{"line":1971,"column":8}}]},"332":{"line":1983,"type":"if","locations":[{"start":{"line":1983,"column":4},"end":{"line":1983,"column":4}},{"start":{"line":1983,"column":4},"end":{"line":1983,"column":4}}]},"333":{"line":1983,"type":"binary-expr","locations":[{"start":{"line":1983,"column":8},"end":{"line":1983,"column":12}},{"start":{"line":1983,"column":16},"end":{"line":1983,"column":35}}]},"334":{"line":1986,"type":"if","locations":[{"start":{"line":1986,"column":8},"end":{"line":1986,"column":8}},{"start":{"line":1986,"column":8},"end":{"line":1986,"column":8}}]},"335":{"line":2005,"type":"if","locations":[{"start":{"line":2005,"column":10},"end":{"line":2005,"column":10}},{"start":{"line":2005,"column":10},"end":{"line":2005,"column":10}}]},"336":{"line":2005,"type":"binary-expr","locations":[{"start":{"line":2005,"column":14},"end":{"line":2005,"column":19}},{"start":{"line":2005,"column":23},"end":{"line":2005,"column":36}}]},"337":{"line":2006,"type":"if","locations":[{"start":{"line":2006,"column":12},"end":{"line":2006,"column":12}},{"start":{"line":2006,"column":12},"end":{"line":2006,"column":12}}]},"338":{"line":2011,"type":"if","locations":[{"start":{"line":2011,"column":14},"end":{"line":2011,"column":14}},{"start":{"line":2011,"column":14},"end":{"line":2011,"column":14}}]},"339":{"line":2018,"type":"binary-expr","locations":[{"start":{"line":2018,"column":56},"end":{"line":2018,"column":69}},{"start":{"line":2018,"column":73},"end":{"line":2018,"column":75}}]},"340":{"line":2021,"type":"if","locations":[{"start":{"line":2021,"column":16},"end":{"line":2021,"column":16}},{"start":{"line":2021,"column":16},"end":{"line":2021,"column":16}}]},"341":{"line":2027,"type":"if","locations":[{"start":{"line":2027,"column":16},"end":{"line":2027,"column":16}},{"start":{"line":2027,"column":16},"end":{"line":2027,"column":16}}]},"342":{"line":2030,"type":"if","locations":[{"start":{"line":2030,"column":16},"end":{"line":2030,"column":16}},{"start":{"line":2030,"column":16},"end":{"line":2030,"column":16}}]},"343":{"line":2049,"type":"if","locations":[{"start":{"line":2049,"column":12},"end":{"line":2049,"column":12}},{"start":{"line":2049,"column":12},"end":{"line":2049,"column":12}}]},"344":{"line":2055,"type":"if","locations":[{"start":{"line":2055,"column":8},"end":{"line":2055,"column":8}},{"start":{"line":2055,"column":8},"end":{"line":2055,"column":8}}]},"345":{"line":2063,"type":"if","locations":[{"start":{"line":2063,"column":8},"end":{"line":2063,"column":8}},{"start":{"line":2063,"column":8},"end":{"line":2063,"column":8}}]},"346":{"line":2063,"type":"binary-expr","locations":[{"start":{"line":2063,"column":12},"end":{"line":2063,"column":16}},{"start":{"line":2063,"column":20},"end":{"line":2063,"column":41}}]},"347":{"line":2066,"type":"if","locations":[{"start":{"line":2066,"column":8},"end":{"line":2066,"column":8}},{"start":{"line":2066,"column":8},"end":{"line":2066,"column":8}}]},"348":{"line":2066,"type":"binary-expr","locations":[{"start":{"line":2066,"column":12},"end":{"line":2066,"column":24}},{"start":{"line":2066,"column":28},"end":{"line":2066,"column":32}}]},"349":{"line":2073,"type":"binary-expr","locations":[{"start":{"line":2073,"column":14},"end":{"line":2073,"column":18}},{"start":{"line":2073,"column":22},"end":{"line":2073,"column":24}}]},"350":{"line":2077,"type":"if","locations":[{"start":{"line":2077,"column":2},"end":{"line":2077,"column":2}},{"start":{"line":2077,"column":2},"end":{"line":2077,"column":2}}]},"351":{"line":2078,"type":"if","locations":[{"start":{"line":2078,"column":4},"end":{"line":2078,"column":4}},{"start":{"line":2078,"column":4},"end":{"line":2078,"column":4}}]},"352":{"line":2091,"type":"if","locations":[{"start":{"line":2091,"column":6},"end":{"line":2091,"column":6}},{"start":{"line":2091,"column":6},"end":{"line":2091,"column":6}}]},"353":{"line":2093,"type":"cond-expr","locations":[{"start":{"line":2094,"column":8},"end":{"line":2094,"column":64}},{"start":{"line":2095,"column":8},"end":{"line":2095,"column":55}}]},"354":{"line":2115,"type":"if","locations":[{"start":{"line":2115,"column":2},"end":{"line":2115,"column":2}},{"start":{"line":2115,"column":2},"end":{"line":2115,"column":2}}]},"355":{"line":2119,"type":"if","locations":[{"start":{"line":2119,"column":2},"end":{"line":2119,"column":2}},{"start":{"line":2119,"column":2},"end":{"line":2119,"column":2}}]},"356":{"line":2119,"type":"binary-expr","locations":[{"start":{"line":2119,"column":6},"end":{"line":2119,"column":27}},{"start":{"line":2119,"column":31},"end":{"line":2119,"column":47}}]},"357":{"line":2120,"type":"if","locations":[{"start":{"line":2120,"column":4},"end":{"line":2120,"column":4}},{"start":{"line":2120,"column":4},"end":{"line":2120,"column":4}}]},"358":{"line":2124,"type":"if","locations":[{"start":{"line":2124,"column":9},"end":{"line":2124,"column":9}},{"start":{"line":2124,"column":9},"end":{"line":2124,"column":9}}]},"359":{"line":2125,"type":"if","locations":[{"start":{"line":2125,"column":4},"end":{"line":2125,"column":4}},{"start":{"line":2125,"column":4},"end":{"line":2125,"column":4}}]},"360":{"line":2131,"type":"binary-expr","locations":[{"start":{"line":2131,"column":7},"end":{"line":2131,"column":9}},{"start":{"line":2131,"column":13},"end":{"line":2131,"column":42}}]},"361":{"line":2132,"type":"binary-expr","locations":[{"start":{"line":2132,"column":10},"end":{"line":2132,"column":15}},{"start":{"line":2132,"column":19},"end":{"line":2132,"column":21}}]},"362":{"line":2133,"type":"binary-expr","locations":[{"start":{"line":2133,"column":12},"end":{"line":2133,"column":19}},{"start":{"line":2133,"column":23},"end":{"line":2133,"column":25}}]},"363":{"line":2141,"type":"if","locations":[{"start":{"line":2141,"column":4},"end":{"line":2141,"column":4}},{"start":{"line":2141,"column":4},"end":{"line":2141,"column":4}}]},"364":{"line":2141,"type":"binary-expr","locations":[{"start":{"line":2141,"column":8},"end":{"line":2141,"column":11}},{"start":{"line":2141,"column":15},"end":{"line":2141,"column":26}},{"start":{"line":2141,"column":30},"end":{"line":2141,"column":52}}]},"365":{"line":2165,"type":"if","locations":[{"start":{"line":2165,"column":2},"end":{"line":2165,"column":2}},{"start":{"line":2165,"column":2},"end":{"line":2165,"column":2}}]},"366":{"line":2175,"type":"if","locations":[{"start":{"line":2175,"column":2},"end":{"line":2175,"column":2}},{"start":{"line":2175,"column":2},"end":{"line":2175,"column":2}}]},"367":{"line":2175,"type":"binary-expr","locations":[{"start":{"line":2175,"column":6},"end":{"line":2175,"column":27}},{"start":{"line":2175,"column":31},"end":{"line":2175,"column":47}}]},"368":{"line":2176,"type":"if","locations":[{"start":{"line":2176,"column":4},"end":{"line":2176,"column":4}},{"start":{"line":2176,"column":4},"end":{"line":2176,"column":4}}]},"369":{"line":2180,"type":"if","locations":[{"start":{"line":2180,"column":9},"end":{"line":2180,"column":9}},{"start":{"line":2180,"column":9},"end":{"line":2180,"column":9}}]},"370":{"line":2181,"type":"if","locations":[{"start":{"line":2181,"column":4},"end":{"line":2181,"column":4}},{"start":{"line":2181,"column":4},"end":{"line":2181,"column":4}}]},"371":{"line":2187,"type":"binary-expr","locations":[{"start":{"line":2187,"column":7},"end":{"line":2187,"column":9}},{"start":{"line":2187,"column":13},"end":{"line":2187,"column":42}}]},"372":{"line":2188,"type":"binary-expr","locations":[{"start":{"line":2188,"column":10},"end":{"line":2188,"column":15}},{"start":{"line":2188,"column":19},"end":{"line":2188,"column":21}}]},"373":{"line":2189,"type":"binary-expr","locations":[{"start":{"line":2189,"column":12},"end":{"line":2189,"column":19}},{"start":{"line":2189,"column":23},"end":{"line":2189,"column":25}}]},"374":{"line":2201,"type":"if","locations":[{"start":{"line":2201,"column":2},"end":{"line":2201,"column":2}},{"start":{"line":2201,"column":2},"end":{"line":2201,"column":2}}]},"375":{"line":2204,"type":"cond-expr","locations":[{"start":{"line":2204,"column":42},"end":{"line":2204,"column":44}},{"start":{"line":2204,"column":47},"end":{"line":2204,"column":52}}]},"376":{"line":2212,"type":"if","locations":[{"start":{"line":2212,"column":6},"end":{"line":2212,"column":6}},{"start":{"line":2212,"column":6},"end":{"line":2212,"column":6}}]},"377":{"line":2220,"type":"if","locations":[{"start":{"line":2220,"column":8},"end":{"line":2220,"column":8}},{"start":{"line":2220,"column":8},"end":{"line":2220,"column":8}}]},"378":{"line":2229,"type":"cond-expr","locations":[{"start":{"line":2229,"column":35},"end":{"line":2229,"column":37}},{"start":{"line":2229,"column":40},"end":{"line":2229,"column":45}}]},"379":{"line":2234,"type":"if","locations":[{"start":{"line":2234,"column":4},"end":{"line":2234,"column":4}},{"start":{"line":2234,"column":4},"end":{"line":2234,"column":4}}]},"380":{"line":2235,"type":"if","locations":[{"start":{"line":2235,"column":6},"end":{"line":2235,"column":6}},{"start":{"line":2235,"column":6},"end":{"line":2235,"column":6}}]},"381":{"line":2251,"type":"if","locations":[{"start":{"line":2251,"column":6},"end":{"line":2251,"column":6}},{"start":{"line":2251,"column":6},"end":{"line":2251,"column":6}}]},"382":{"line":2259,"type":"if","locations":[{"start":{"line":2259,"column":6},"end":{"line":2259,"column":6}},{"start":{"line":2259,"column":6},"end":{"line":2259,"column":6}}]},"383":{"line":2261,"type":"if","locations":[{"start":{"line":2261,"column":6},"end":{"line":2261,"column":6}},{"start":{"line":2261,"column":6},"end":{"line":2261,"column":6}}]},"384":{"line":2281,"type":"binary-expr","locations":[{"start":{"line":2281,"column":9},"end":{"line":2281,"column":15}},{"start":{"line":2282,"column":6},"end":{"line":2282,"column":31}},{"start":{"line":2282,"column":35},"end":{"line":2282,"column":66}}]},"385":{"line":2299,"type":"if","locations":[{"start":{"line":2299,"column":2},"end":{"line":2299,"column":2}},{"start":{"line":2299,"column":2},"end":{"line":2299,"column":2}}]},"386":{"line":2304,"type":"if","locations":[{"start":{"line":2304,"column":2},"end":{"line":2304,"column":2}},{"start":{"line":2304,"column":2},"end":{"line":2304,"column":2}}]},"387":{"line":2305,"type":"if","locations":[{"start":{"line":2305,"column":4},"end":{"line":2305,"column":4}},{"start":{"line":2305,"column":4},"end":{"line":2305,"column":4}}]},"388":{"line":2312,"type":"binary-expr","locations":[{"start":{"line":2312,"column":12},"end":{"line":2312,"column":19}},{"start":{"line":2312,"column":23},"end":{"line":2312,"column":25}}]},"389":{"line":2313,"type":"binary-expr","locations":[{"start":{"line":2313,"column":7},"end":{"line":2313,"column":9}},{"start":{"line":2313,"column":13},"end":{"line":2313,"column":42}}]},"390":{"line":2318,"type":"if","locations":[{"start":{"line":2318,"column":2},"end":{"line":2318,"column":2}},{"start":{"line":2318,"column":2},"end":{"line":2318,"column":2}}]},"391":{"line":2320,"type":"if","locations":[{"start":{"line":2320,"column":9},"end":{"line":2320,"column":9}},{"start":{"line":2320,"column":9},"end":{"line":2320,"column":9}}]},"392":{"line":2320,"type":"binary-expr","locations":[{"start":{"line":2320,"column":13},"end":{"line":2320,"column":23}},{"start":{"line":2320,"column":27},"end":{"line":2320,"column":36}}]},"393":{"line":2330,"type":"if","locations":[{"start":{"line":2330,"column":4},"end":{"line":2330,"column":4}},{"start":{"line":2330,"column":4},"end":{"line":2330,"column":4}}]},"394":{"line":2331,"type":"binary-expr","locations":[{"start":{"line":2331,"column":18},"end":{"line":2331,"column":22}},{"start":{"line":2331,"column":26},"end":{"line":2331,"column":40}}]},"395":{"line":2332,"type":"if","locations":[{"start":{"line":2332,"column":4},"end":{"line":2332,"column":4}},{"start":{"line":2332,"column":4},"end":{"line":2332,"column":4}}]},"396":{"line":2332,"type":"binary-expr","locations":[{"start":{"line":2332,"column":8},"end":{"line":2332,"column":35}},{"start":{"line":2332,"column":39},"end":{"line":2332,"column":47}}]},"397":{"line":2360,"type":"if","locations":[{"start":{"line":2360,"column":2},"end":{"line":2360,"column":2}},{"start":{"line":2360,"column":2},"end":{"line":2360,"column":2}}]},"398":{"line":2364,"type":"if","locations":[{"start":{"line":2364,"column":2},"end":{"line":2364,"column":2}},{"start":{"line":2364,"column":2},"end":{"line":2364,"column":2}}]},"399":{"line":2364,"type":"binary-expr","locations":[{"start":{"line":2364,"column":6},"end":{"line":2364,"column":27}},{"start":{"line":2364,"column":31},"end":{"line":2364,"column":47}}]},"400":{"line":2365,"type":"if","locations":[{"start":{"line":2365,"column":4},"end":{"line":2365,"column":4}},{"start":{"line":2365,"column":4},"end":{"line":2365,"column":4}}]},"401":{"line":2370,"type":"if","locations":[{"start":{"line":2370,"column":9},"end":{"line":2370,"column":9}},{"start":{"line":2370,"column":9},"end":{"line":2370,"column":9}}]},"402":{"line":2371,"type":"if","locations":[{"start":{"line":2371,"column":4},"end":{"line":2371,"column":4}},{"start":{"line":2371,"column":4},"end":{"line":2371,"column":4}}]},"403":{"line":2378,"type":"binary-expr","locations":[{"start":{"line":2378,"column":7},"end":{"line":2378,"column":9}},{"start":{"line":2378,"column":13},"end":{"line":2378,"column":42}}]},"404":{"line":2379,"type":"binary-expr","locations":[{"start":{"line":2379,"column":10},"end":{"line":2379,"column":15}},{"start":{"line":2379,"column":19},"end":{"line":2379,"column":21}}]},"405":{"line":2380,"type":"binary-expr","locations":[{"start":{"line":2380,"column":12},"end":{"line":2380,"column":19}},{"start":{"line":2380,"column":23},"end":{"line":2380,"column":25}}]},"406":{"line":2416,"type":"if","locations":[{"start":{"line":2416,"column":4},"end":{"line":2416,"column":4}},{"start":{"line":2416,"column":4},"end":{"line":2416,"column":4}}]},"407":{"line":2419,"type":"if","locations":[{"start":{"line":2419,"column":4},"end":{"line":2419,"column":4}},{"start":{"line":2419,"column":4},"end":{"line":2419,"column":4}}]},"408":{"line":2442,"type":"if","locations":[{"start":{"line":2442,"column":2},"end":{"line":2442,"column":2}},{"start":{"line":2442,"column":2},"end":{"line":2442,"column":2}}]},"409":{"line":2447,"type":"if","locations":[{"start":{"line":2447,"column":2},"end":{"line":2447,"column":2}},{"start":{"line":2447,"column":2},"end":{"line":2447,"column":2}}]},"410":{"line":2452,"type":"binary-expr","locations":[{"start":{"line":2452,"column":7},"end":{"line":2452,"column":9}},{"start":{"line":2452,"column":13},"end":{"line":2452,"column":42}}]},"411":{"line":2453,"type":"binary-expr","locations":[{"start":{"line":2453,"column":12},"end":{"line":2453,"column":19}},{"start":{"line":2453,"column":23},"end":{"line":2453,"column":25}}]},"412":{"line":2458,"type":"if","locations":[{"start":{"line":2458,"column":2},"end":{"line":2458,"column":2}},{"start":{"line":2458,"column":2},"end":{"line":2458,"column":2}}]},"413":{"line":2460,"type":"if","locations":[{"start":{"line":2460,"column":10},"end":{"line":2460,"column":10}},{"start":{"line":2460,"column":10},"end":{"line":2460,"column":10}}]},"414":{"line":2466,"type":"if","locations":[{"start":{"line":2466,"column":2},"end":{"line":2466,"column":2}},{"start":{"line":2466,"column":2},"end":{"line":2466,"column":2}}]},"415":{"line":2467,"type":"if","locations":[{"start":{"line":2467,"column":4},"end":{"line":2467,"column":4}},{"start":{"line":2467,"column":4},"end":{"line":2467,"column":4}}]},"416":{"line":2474,"type":"if","locations":[{"start":{"line":2474,"column":2},"end":{"line":2474,"column":2}},{"start":{"line":2474,"column":2},"end":{"line":2474,"column":2}}]},"417":{"line":2489,"type":"if","locations":[{"start":{"line":2489,"column":4},"end":{"line":2489,"column":4}},{"start":{"line":2489,"column":4},"end":{"line":2489,"column":4}}]},"418":{"line":2496,"type":"if","locations":[{"start":{"line":2496,"column":4},"end":{"line":2496,"column":4}},{"start":{"line":2496,"column":4},"end":{"line":2496,"column":4}}]},"419":{"line":2501,"type":"if","locations":[{"start":{"line":2501,"column":6},"end":{"line":2501,"column":6}},{"start":{"line":2501,"column":6},"end":{"line":2501,"column":6}}]},"420":{"line":2506,"type":"if","locations":[{"start":{"line":2506,"column":8},"end":{"line":2506,"column":8}},{"start":{"line":2506,"column":8},"end":{"line":2506,"column":8}}]},"421":{"line":2519,"type":"if","locations":[{"start":{"line":2519,"column":12},"end":{"line":2519,"column":12}},{"start":{"line":2519,"column":12},"end":{"line":2519,"column":12}}]},"422":{"line":2526,"type":"binary-expr","locations":[{"start":{"line":2526,"column":29},"end":{"line":2526,"column":35}},{"start":{"line":2526,"column":39},"end":{"line":2526,"column":59}}]},"423":{"line":2531,"type":"if","locations":[{"start":{"line":2531,"column":14},"end":{"line":2531,"column":14}},{"start":{"line":2531,"column":14},"end":{"line":2531,"column":14}}]},"424":{"line":2538,"type":"binary-expr","locations":[{"start":{"line":2538,"column":31},"end":{"line":2538,"column":37}},{"start":{"line":2538,"column":41},"end":{"line":2538,"column":61}}]},"425":{"line":2543,"type":"if","locations":[{"start":{"line":2543,"column":16},"end":{"line":2543,"column":16}},{"start":{"line":2543,"column":16},"end":{"line":2543,"column":16}}]},"426":{"line":2563,"type":"if","locations":[{"start":{"line":2563,"column":12},"end":{"line":2563,"column":12}},{"start":{"line":2563,"column":12},"end":{"line":2563,"column":12}}]},"427":{"line":2565,"type":"if","locations":[{"start":{"line":2565,"column":12},"end":{"line":2565,"column":12}},{"start":{"line":2565,"column":12},"end":{"line":2565,"column":12}}]},"428":{"line":2597,"type":"if","locations":[{"start":{"line":2597,"column":2},"end":{"line":2597,"column":2}},{"start":{"line":2597,"column":2},"end":{"line":2597,"column":2}}]},"429":{"line":2603,"type":"if","locations":[{"start":{"line":2603,"column":2},"end":{"line":2603,"column":2}},{"start":{"line":2603,"column":2},"end":{"line":2603,"column":2}}]},"430":{"line":2603,"type":"binary-expr","locations":[{"start":{"line":2603,"column":6},"end":{"line":2603,"column":24}},{"start":{"line":2603,"column":28},"end":{"line":2603,"column":49}},{"start":{"line":2603,"column":53},"end":{"line":2603,"column":69}},{"start":{"line":2603,"column":73},"end":{"line":2603,"column":95}}]},"431":{"line":2606,"type":"if","locations":[{"start":{"line":2606,"column":9},"end":{"line":2606,"column":9}},{"start":{"line":2606,"column":9},"end":{"line":2606,"column":9}}]},"432":{"line":2606,"type":"binary-expr","locations":[{"start":{"line":2606,"column":13},"end":{"line":2606,"column":34}},{"start":{"line":2606,"column":38},"end":{"line":2606,"column":54}}]},"433":{"line":2610,"type":"if","locations":[{"start":{"line":2610,"column":4},"end":{"line":2610,"column":4}},{"start":{"line":2610,"column":4},"end":{"line":2610,"column":4}}]},"434":{"line":2615,"type":"if","locations":[{"start":{"line":2615,"column":9},"end":{"line":2615,"column":9}},{"start":{"line":2615,"column":9},"end":{"line":2615,"column":9}}]},"435":{"line":2619,"type":"if","locations":[{"start":{"line":2619,"column":4},"end":{"line":2619,"column":4}},{"start":{"line":2619,"column":4},"end":{"line":2619,"column":4}}]},"436":{"line":2625,"type":"binary-expr","locations":[{"start":{"line":2625,"column":9},"end":{"line":2625,"column":13}},{"start":{"line":2625,"column":17},"end":{"line":2625,"column":19}}]},"437":{"line":2626,"type":"binary-expr","locations":[{"start":{"line":2626,"column":12},"end":{"line":2626,"column":19}},{"start":{"line":2626,"column":23},"end":{"line":2626,"column":25}}]},"438":{"line":2627,"type":"binary-expr","locations":[{"start":{"line":2627,"column":7},"end":{"line":2627,"column":9}},{"start":{"line":2627,"column":13},"end":{"line":2627,"column":42}}]},"439":{"line":2654,"type":"if","locations":[{"start":{"line":2654,"column":4},"end":{"line":2654,"column":4}},{"start":{"line":2654,"column":4},"end":{"line":2654,"column":4}}]},"440":{"line":2664,"type":"if","locations":[{"start":{"line":2664,"column":8},"end":{"line":2664,"column":8}},{"start":{"line":2664,"column":8},"end":{"line":2664,"column":8}}]},"441":{"line":2682,"type":"if","locations":[{"start":{"line":2682,"column":6},"end":{"line":2682,"column":6}},{"start":{"line":2682,"column":6},"end":{"line":2682,"column":6}}]},"442":{"line":2705,"type":"if","locations":[{"start":{"line":2705,"column":6},"end":{"line":2705,"column":6}},{"start":{"line":2705,"column":6},"end":{"line":2705,"column":6}}]},"443":{"line":2707,"type":"if","locations":[{"start":{"line":2707,"column":6},"end":{"line":2707,"column":6}},{"start":{"line":2707,"column":6},"end":{"line":2707,"column":6}}]},"444":{"line":2741,"type":"if","locations":[{"start":{"line":2741,"column":6},"end":{"line":2741,"column":6}},{"start":{"line":2741,"column":6},"end":{"line":2741,"column":6}}]},"445":{"line":2745,"type":"if","locations":[{"start":{"line":2745,"column":6},"end":{"line":2745,"column":6}},{"start":{"line":2745,"column":6},"end":{"line":2745,"column":6}}]},"446":{"line":2745,"type":"binary-expr","locations":[{"start":{"line":2745,"column":10},"end":{"line":2745,"column":26}},{"start":{"line":2745,"column":30},"end":{"line":2745,"column":59}}]},"447":{"line":2750,"type":"binary-expr","locations":[{"start":{"line":2750,"column":11},"end":{"line":2750,"column":13}},{"start":{"line":2750,"column":17},"end":{"line":2750,"column":46}}]},"448":{"line":2751,"type":"binary-expr","locations":[{"start":{"line":2751,"column":16},"end":{"line":2751,"column":23}},{"start":{"line":2751,"column":27},"end":{"line":2751,"column":29}}]},"449":{"line":2763,"type":"if","locations":[{"start":{"line":2763,"column":6},"end":{"line":2763,"column":6}},{"start":{"line":2763,"column":6},"end":{"line":2763,"column":6}}]},"450":{"line":2774,"type":"if","locations":[{"start":{"line":2774,"column":8},"end":{"line":2774,"column":8}},{"start":{"line":2774,"column":8},"end":{"line":2774,"column":8}}]},"451":{"line":2783,"type":"if","locations":[{"start":{"line":2783,"column":10},"end":{"line":2783,"column":10}},{"start":{"line":2783,"column":10},"end":{"line":2783,"column":10}}]},"452":{"line":2789,"type":"if","locations":[{"start":{"line":2789,"column":8},"end":{"line":2789,"column":8}},{"start":{"line":2789,"column":8},"end":{"line":2789,"column":8}}]},"453":{"line":2794,"type":"if","locations":[{"start":{"line":2794,"column":12},"end":{"line":2794,"column":12}},{"start":{"line":2794,"column":12},"end":{"line":2794,"column":12}}]},"454":{"line":2795,"type":"binary-expr","locations":[{"start":{"line":2795,"column":26},"end":{"line":2795,"column":30}},{"start":{"line":2795,"column":34},"end":{"line":2795,"column":48}}]},"455":{"line":2796,"type":"if","locations":[{"start":{"line":2796,"column":12},"end":{"line":2796,"column":12}},{"start":{"line":2796,"column":12},"end":{"line":2796,"column":12}}]},"456":{"line":2796,"type":"binary-expr","locations":[{"start":{"line":2796,"column":16},"end":{"line":2796,"column":43}},{"start":{"line":2796,"column":47},"end":{"line":2796,"column":55}}]},"457":{"line":2819,"type":"if","locations":[{"start":{"line":2819,"column":12},"end":{"line":2819,"column":12}},{"start":{"line":2819,"column":12},"end":{"line":2819,"column":12}}]},"458":{"line":2820,"type":"binary-expr","locations":[{"start":{"line":2820,"column":26},"end":{"line":2820,"column":30}},{"start":{"line":2820,"column":34},"end":{"line":2820,"column":48}}]},"459":{"line":2821,"type":"if","locations":[{"start":{"line":2821,"column":12},"end":{"line":2821,"column":12}},{"start":{"line":2821,"column":12},"end":{"line":2821,"column":12}}]},"460":{"line":2821,"type":"binary-expr","locations":[{"start":{"line":2821,"column":16},"end":{"line":2821,"column":43}},{"start":{"line":2821,"column":47},"end":{"line":2821,"column":55}}]},"461":{"line":2843,"type":"if","locations":[{"start":{"line":2843,"column":10},"end":{"line":2843,"column":10}},{"start":{"line":2843,"column":10},"end":{"line":2843,"column":10}}]},"462":{"line":2885,"type":"if","locations":[{"start":{"line":2885,"column":2},"end":{"line":2885,"column":2}},{"start":{"line":2885,"column":2},"end":{"line":2885,"column":2}}]},"463":{"line":2901,"type":"if","locations":[{"start":{"line":2901,"column":2},"end":{"line":2901,"column":2}},{"start":{"line":2901,"column":2},"end":{"line":2901,"column":2}}]},"464":{"line":2901,"type":"binary-expr","locations":[{"start":{"line":2901,"column":6},"end":{"line":2901,"column":13}},{"start":{"line":2901,"column":17},"end":{"line":2901,"column":76}}]},"465":{"line":2926,"type":"if","locations":[{"start":{"line":2926,"column":2},"end":{"line":2926,"column":2}},{"start":{"line":2926,"column":2},"end":{"line":2926,"column":2}}]},"466":{"line":2930,"type":"if","locations":[{"start":{"line":2930,"column":2},"end":{"line":2930,"column":2}},{"start":{"line":2930,"column":2},"end":{"line":2930,"column":2}}]},"467":{"line":2931,"type":"if","locations":[{"start":{"line":2931,"column":4},"end":{"line":2931,"column":4}},{"start":{"line":2931,"column":4},"end":{"line":2931,"column":4}}]},"468":{"line":2937,"type":"binary-expr","locations":[{"start":{"line":2937,"column":7},"end":{"line":2937,"column":9}},{"start":{"line":2937,"column":13},"end":{"line":2937,"column":42}}]},"469":{"line":2938,"type":"binary-expr","locations":[{"start":{"line":2938,"column":12},"end":{"line":2938,"column":19}},{"start":{"line":2938,"column":23},"end":{"line":2938,"column":25}}]},"470":{"line":2940,"type":"binary-expr","locations":[{"start":{"line":2940,"column":10},"end":{"line":2940,"column":34}},{"start":{"line":2940,"column":40},"end":{"line":2940,"column":53}}]},"471":{"line":2948,"type":"if","locations":[{"start":{"line":2948,"column":2},"end":{"line":2948,"column":2}},{"start":{"line":2948,"column":2},"end":{"line":2948,"column":2}}]},"472":{"line":2957,"type":"if","locations":[{"start":{"line":2957,"column":2},"end":{"line":2957,"column":2}},{"start":{"line":2957,"column":2},"end":{"line":2957,"column":2}}]},"473":{"line":2965,"type":"if","locations":[{"start":{"line":2965,"column":2},"end":{"line":2965,"column":2}},{"start":{"line":2965,"column":2},"end":{"line":2965,"column":2}}]},"474":{"line":2968,"type":"if","locations":[{"start":{"line":2968,"column":2},"end":{"line":2968,"column":2}},{"start":{"line":2968,"column":2},"end":{"line":2968,"column":2}}]},"475":{"line":2974,"type":"if","locations":[{"start":{"line":2974,"column":2},"end":{"line":2974,"column":2}},{"start":{"line":2974,"column":2},"end":{"line":2974,"column":2}}]},"476":{"line":2991,"type":"if","locations":[{"start":{"line":2991,"column":4},"end":{"line":2991,"column":4}},{"start":{"line":2991,"column":4},"end":{"line":2991,"column":4}}]},"477":{"line":2993,"type":"if","locations":[{"start":{"line":2993,"column":4},"end":{"line":2993,"column":4}},{"start":{"line":2993,"column":4},"end":{"line":2993,"column":4}}]},"478":{"line":2993,"type":"binary-expr","locations":[{"start":{"line":2993,"column":8},"end":{"line":2993,"column":35}},{"start":{"line":2993,"column":39},"end":{"line":2993,"column":87}}]},"479":{"line":3001,"type":"if","locations":[{"start":{"line":3001,"column":4},"end":{"line":3001,"column":4}},{"start":{"line":3001,"column":4},"end":{"line":3001,"column":4}}]},"480":{"line":3008,"type":"if","locations":[{"start":{"line":3008,"column":6},"end":{"line":3008,"column":6}},{"start":{"line":3008,"column":6},"end":{"line":3008,"column":6}}]},"481":{"line":3014,"type":"if","locations":[{"start":{"line":3014,"column":6},"end":{"line":3014,"column":6}},{"start":{"line":3014,"column":6},"end":{"line":3014,"column":6}}]},"482":{"line":3015,"type":"if","locations":[{"start":{"line":3015,"column":8},"end":{"line":3015,"column":8}},{"start":{"line":3015,"column":8},"end":{"line":3015,"column":8}}]},"483":{"line":3022,"type":"if","locations":[{"start":{"line":3022,"column":6},"end":{"line":3022,"column":6}},{"start":{"line":3022,"column":6},"end":{"line":3022,"column":6}}]},"484":{"line":3024,"type":"if","locations":[{"start":{"line":3024,"column":10},"end":{"line":3024,"column":10}},{"start":{"line":3024,"column":10},"end":{"line":3024,"column":10}}]},"485":{"line":3038,"type":"if","locations":[{"start":{"line":3038,"column":10},"end":{"line":3038,"column":10}},{"start":{"line":3038,"column":10},"end":{"line":3038,"column":10}}]},"486":{"line":3048,"type":"if","locations":[{"start":{"line":3048,"column":12},"end":{"line":3048,"column":12}},{"start":{"line":3048,"column":12},"end":{"line":3048,"column":12}}]},"487":{"line":3050,"type":"if","locations":[{"start":{"line":3050,"column":12},"end":{"line":3050,"column":12}},{"start":{"line":3050,"column":12},"end":{"line":3050,"column":12}}]},"488":{"line":3050,"type":"binary-expr","locations":[{"start":{"line":3050,"column":16},"end":{"line":3050,"column":39}},{"start":{"line":3050,"column":43},"end":{"line":3050,"column":87}}]},"489":{"line":3108,"type":"if","locations":[{"start":{"line":3108,"column":2},"end":{"line":3108,"column":2}},{"start":{"line":3108,"column":2},"end":{"line":3108,"column":2}}]},"490":{"line":3112,"type":"if","locations":[{"start":{"line":3112,"column":2},"end":{"line":3112,"column":2}},{"start":{"line":3112,"column":2},"end":{"line":3112,"column":2}}]},"491":{"line":3112,"type":"binary-expr","locations":[{"start":{"line":3112,"column":6},"end":{"line":3112,"column":27}},{"start":{"line":3112,"column":31},"end":{"line":3112,"column":47}}]},"492":{"line":3113,"type":"if","locations":[{"start":{"line":3113,"column":4},"end":{"line":3113,"column":4}},{"start":{"line":3113,"column":4},"end":{"line":3113,"column":4}}]},"493":{"line":3118,"type":"if","locations":[{"start":{"line":3118,"column":9},"end":{"line":3118,"column":9}},{"start":{"line":3118,"column":9},"end":{"line":3118,"column":9}}]},"494":{"line":3119,"type":"if","locations":[{"start":{"line":3119,"column":4},"end":{"line":3119,"column":4}},{"start":{"line":3119,"column":4},"end":{"line":3119,"column":4}}]},"495":{"line":3126,"type":"binary-expr","locations":[{"start":{"line":3126,"column":7},"end":{"line":3126,"column":9}},{"start":{"line":3126,"column":13},"end":{"line":3126,"column":42}}]},"496":{"line":3127,"type":"binary-expr","locations":[{"start":{"line":3127,"column":12},"end":{"line":3127,"column":19}},{"start":{"line":3127,"column":23},"end":{"line":3127,"column":25}}]},"497":{"line":3129,"type":"binary-expr","locations":[{"start":{"line":3129,"column":10},"end":{"line":3129,"column":34}},{"start":{"line":3129,"column":40},"end":{"line":3129,"column":53}}]},"498":{"line":3140,"type":"if","locations":[{"start":{"line":3140,"column":2},"end":{"line":3140,"column":2}},{"start":{"line":3140,"column":2},"end":{"line":3140,"column":2}}]},"499":{"line":3149,"type":"if","locations":[{"start":{"line":3149,"column":2},"end":{"line":3149,"column":2}},{"start":{"line":3149,"column":2},"end":{"line":3149,"column":2}}]},"500":{"line":3158,"type":"if","locations":[{"start":{"line":3158,"column":4},"end":{"line":3158,"column":4}},{"start":{"line":3158,"column":4},"end":{"line":3158,"column":4}}]},"501":{"line":3158,"type":"binary-expr","locations":[{"start":{"line":3158,"column":8},"end":{"line":3158,"column":34}},{"start":{"line":3158,"column":38},"end":{"line":3158,"column":75}}]},"502":{"line":3180,"type":"if","locations":[{"start":{"line":3180,"column":4},"end":{"line":3180,"column":4}},{"start":{"line":3180,"column":4},"end":{"line":3180,"column":4}}]},"503":{"line":3183,"type":"if","locations":[{"start":{"line":3183,"column":4},"end":{"line":3183,"column":4}},{"start":{"line":3183,"column":4},"end":{"line":3183,"column":4}}]},"504":{"line":3183,"type":"binary-expr","locations":[{"start":{"line":3183,"column":8},"end":{"line":3183,"column":14}},{"start":{"line":3183,"column":18},"end":{"line":3183,"column":41}}]},"505":{"line":3190,"type":"if","locations":[{"start":{"line":3190,"column":6},"end":{"line":3190,"column":6}},{"start":{"line":3190,"column":6},"end":{"line":3190,"column":6}}]},"506":{"line":3193,"type":"if","locations":[{"start":{"line":3193,"column":6},"end":{"line":3193,"column":6}},{"start":{"line":3193,"column":6},"end":{"line":3193,"column":6}}]},"507":{"line":3194,"type":"if","locations":[{"start":{"line":3194,"column":8},"end":{"line":3194,"column":8}},{"start":{"line":3194,"column":8},"end":{"line":3194,"column":8}}]},"508":{"line":3208,"type":"if","locations":[{"start":{"line":3208,"column":6},"end":{"line":3208,"column":6}},{"start":{"line":3208,"column":6},"end":{"line":3208,"column":6}}]},"509":{"line":3210,"type":"if","locations":[{"start":{"line":3210,"column":10},"end":{"line":3210,"column":10}},{"start":{"line":3210,"column":10},"end":{"line":3210,"column":10}}]},"510":{"line":3229,"type":"if","locations":[{"start":{"line":3229,"column":14},"end":{"line":3229,"column":14}},{"start":{"line":3229,"column":14},"end":{"line":3229,"column":14}}]},"511":{"line":3238,"type":"if","locations":[{"start":{"line":3238,"column":16},"end":{"line":3238,"column":16}},{"start":{"line":3238,"column":16},"end":{"line":3238,"column":16}}]},"512":{"line":3246,"type":"if","locations":[{"start":{"line":3246,"column":16},"end":{"line":3246,"column":16}},{"start":{"line":3246,"column":16},"end":{"line":3246,"column":16}}]},"513":{"line":3251,"type":"if","locations":[{"start":{"line":3251,"column":20},"end":{"line":3251,"column":20}},{"start":{"line":3251,"column":20},"end":{"line":3251,"column":20}}]},"514":{"line":3278,"type":"if","locations":[{"start":{"line":3278,"column":14},"end":{"line":3278,"column":14}},{"start":{"line":3278,"column":14},"end":{"line":3278,"column":14}}]},"515":{"line":3302,"type":"if","locations":[{"start":{"line":3302,"column":2},"end":{"line":3302,"column":2}},{"start":{"line":3302,"column":2},"end":{"line":3302,"column":2}}]},"516":{"line":3339,"type":"if","locations":[{"start":{"line":3339,"column":2},"end":{"line":3339,"column":2}},{"start":{"line":3339,"column":2},"end":{"line":3339,"column":2}}]},"517":{"line":3339,"type":"binary-expr","locations":[{"start":{"line":3339,"column":6},"end":{"line":3339,"column":13}},{"start":{"line":3339,"column":17},"end":{"line":3339,"column":43}}]},"518":{"line":3342,"type":"binary-expr","locations":[{"start":{"line":3342,"column":26},"end":{"line":3342,"column":37}},{"start":{"line":3342,"column":41},"end":{"line":3342,"column":44}}]},"519":{"line":3368,"type":"if","locations":[{"start":{"line":3368,"column":2},"end":{"line":3368,"column":2}},{"start":{"line":3368,"column":2},"end":{"line":3368,"column":2}}]}},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","// Turning on strict for this file breaks lots of test cases;","// disabling strict for this file","/* eslint-disable strict */","","/*!"," * Module exports class Model"," */","module.exports = DataAccessObject;","","/*!"," * Module dependencies"," */","var g = require('strong-globalize')();","var async = require('async');","var jutil = require('./jutil');","var ValidationError = require('./validations').ValidationError;","var Relation = require('./relations.js');","var Inclusion = require('./include.js');","var List = require('./list.js');","var geo = require('./geo');","var Memory = require('./connectors/memory').Memory;","var utils = require('./utils');","var fieldsToArray = utils.fieldsToArray;","var removeUndefined = utils.removeUndefined;","var setScopeValuesFromWhere = utils.setScopeValuesFromWhere;","var idEquals = utils.idEquals;","var mergeQuery = utils.mergeQuery;","var util = require('util');","var assert = require('assert');","var BaseModel = require('./model');","var debug = require('debug')('loopback:dao');","","/**"," * Base class for all persistent objects."," * Provides a common API to access any database connector."," * This class describes only abstract behavior.  Refer to the specific connector for additional details."," *"," * `DataAccessObject` mixes `Inclusion` classes methods."," * @class DataAccessObject"," */","function DataAccessObject() {","  if (DataAccessObject._mixins) {","    var self = this;","    var args = arguments;","    DataAccessObject._mixins.forEach(function(m) {","      m.call(self, args);","    });","  }","}","","function idName(m) {","  return m.definition.idName() || 'id';","}","","function getIdValue(m, data) {","  return data && data[idName(m)];","}","","function copyData(from, to) {","  for (var key in from) {","    to[key] = from[key];","  }","}","","function convertSubsetOfPropertiesByType(inst, data) {","  var typedData = {};","  for (var key in data) {","    // Convert the properties by type","    typedData[key] = inst[key];","    if (typeof typedData[key] === 'object' &&","            typedData[key] !== null &&","            typeof typedData[key].toObject === 'function') {","      typedData[key] = typedData[key].toObject();","    }","  }","  return typedData;","}","","/**"," * Apply strict check for model's data."," * Notice: Please note this method modifies `inst` when `strict` is `validate`."," */","function applyStrictCheck(model, strict, data, inst, cb) {","  var props = model.definition.properties;","  var keys = Object.keys(data);","  var result = {}, key;","  for (var i = 0; i < keys.length; i++) {","    key = keys[i];","    if (props[key]) {","      result[key] = data[key];","    } else if (strict) {","      inst.__unknownProperties.push(key);","    }","  }","  cb(null, result);","}","","function setIdValue(m, data, value) {","  if (data) {","    data[idName(m)] = value;","  }","}","","function byIdQuery(m, id) {","  var pk = idName(m);","  var query = {where: {}};","  query.where[pk] = id;","  return query;","}","","function isWhereByGivenId(Model, where, idValue) {","  var keys = Object.keys(where);","  if (keys.length != 1) return false;","","  var pk = idName(Model);","  if (keys[0] !== pk) return false;","","  return where[pk] === idValue;","}","","DataAccessObject._forDB = function(data) {","  if (!(this.getDataSource().isRelational && this.getDataSource().isRelational())) {","    return data;","  }","  var res = {};","  for (var propName in data) {","    var type = this.getPropertyType(propName);","    if (type === 'JSON' || type === 'Any' || type === 'Object' || data[propName] instanceof Array) {","      res[propName] = JSON.stringify(data[propName]);","    } else {","      res[propName] = data[propName];","    }","  }","  return res;","};","","DataAccessObject.defaultScope = function(target, inst) {","  var scope = this.definition.settings.scope;","  if (typeof scope === 'function') {","    scope = this.definition.settings.scope.call(this, target, inst);","  }","  return scope;","};","","DataAccessObject.applyScope = function(query, inst) {","  var scope = this.defaultScope(query, inst) || {};","  if (typeof scope === 'object') {","    mergeQuery(query, scope || {}, this.definition.settings.scope);","  }","};","","DataAccessObject.applyProperties = function(data, inst) {","  var properties = this.definition.settings.properties;","  properties = properties || this.definition.settings.attributes;","  if (typeof properties === 'object') {","    util._extend(data, properties);","  } else if (typeof properties === 'function') {","    util._extend(data, properties.call(this, data, inst) || {});","  } else if (properties !== false) {","    var scope = this.defaultScope(data, inst) || {};","    if (typeof scope.where === 'object') {","      setScopeValuesFromWhere(data, scope.where, this);","    }","  }","};","","DataAccessObject.lookupModel = function(data) {","  return this;","};","","/**"," * Get the connector instance for the given model class"," * @returns {Connector} The connector instance"," */","DataAccessObject.getConnector = function() {","  return this.getDataSource().connector;","};","","/**"," * Verify if allowExtendedOperators is enabled"," * @options {Object} [options] Optional options to use."," * @property {Boolean} allowExtendedOperators."," * @returns {Boolean} Returns `true` if allowExtendedOperators is enabled, else `false`."," */","DataAccessObject._allowExtendedOperators = function(options) {","  options = options || {};","","  var Model = this;","  var dsSettings = this.getDataSource().settings;","  var allowExtendedOperators = dsSettings.allowExtendedOperators;","  // options settings enable allowExtendedOperators per request (for example if","  // enable allowExtendedOperators only server side);","  // model settings enable allowExtendedOperators only for specific model.","  // dataSource settings enable allowExtendedOperators globally (all models);","  // options -> model -> dataSource (connector)","  if (options.hasOwnProperty('allowExtendedOperators')) {","    allowExtendedOperators = options.allowExtendedOperators === true;","  } else if (Model.settings && Model.settings.hasOwnProperty('allowExtendedOperators')) {","    allowExtendedOperators = Model.settings.allowExtendedOperators === true;","  }","  return allowExtendedOperators;","};","","// Empty callback function","function noCallback(err, result) {","  // NOOP","  debug('callback is ignored: err=%j, result=%j', err, result);","}","","/**"," * Create an instance of Model with given data and save to the attached data source. Callback is optional."," * Example:"," *```js"," * User.create({first: 'Joe', last: 'Bob'}, function(err, user) {"," *  console.log(user instanceof User); // true"," * });"," * ```"," * Note: You must include a callback and use the created model provided in the callback if your code depends on your model being"," * saved or having an ID."," *"," * @param {Object} [data] Optional data object"," * @param {Object} [options] Options for create"," * @param {Function} [cb]  Callback function called with these arguments:"," *   - err (null or Error)"," *   - instance (null or Model)"," */","DataAccessObject.create = function(data, options, cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","","  var Model = this;","  var connector = Model.getConnector();","  assert(typeof connector.create === 'function',","    'create() must be implemented by the connector');","","  var self = this;","","  if (options === undefined && cb === undefined) {","    if (typeof data === 'function') {","      // create(cb)","      cb = data;","      data = {};","    }","  } else if (cb === undefined) {","    if (typeof options === 'function') {","      // create(data, cb);","      cb = options;","      options = {};","    }","  }","","  data = data || {};","  options = options || {};","  cb = cb || (Array.isArray(data) ? noCallback : utils.createPromiseCallback());","","  assert(typeof data === 'object', 'The data argument must be an object or array');","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","","  var hookState = {};","","  if (Array.isArray(data)) {","    // Undefined item will be skipped by async.map() which internally uses","    // Array.prototype.map(). The following loop makes sure all items are","    // iterated","    for (var i = 0, n = data.length; i < n; i++) {","      if (data[i] === undefined) {","        data[i] = {};","      }","    }","    async.map(data, function(item, done) {","      self.create(item, options, function(err, result) {","        // Collect all errors and results","        done(null, {err: err, result: result || item});","      });","    }, function(err, results) {","      if (err) {","        return cb(err, results);","      }","      // Convert the results into two arrays","      var errors = null;","      var data = [];","      for (var i = 0, n = results.length; i < n; i++) {","        if (results[i].err) {","          if (!errors) {","            errors = [];","          }","          errors[i] = results[i].err;","        }","        data[i] = results[i].result;","      }","      cb(errors, data);","    });","    return;","  }","","  var enforced = {};","  var obj;","  var idValue = getIdValue(this, data);","","  // if we come from save","  if (data instanceof Model && !idValue) {","    obj = data;","  } else {","    obj = new Model(data);","  }","","  this.applyProperties(enforced, obj);","  obj.setAttributes(enforced);","","  Model = this.lookupModel(data); // data-specific","  if (Model !== obj.constructor) obj = new Model(data);","","  var context = {","    Model: Model,","    instance: obj,","    isNewInstance: true,","    hookState: hookState,","    options: options,","  };","  Model.notifyObserversOf('before save', context, function(err) {","    if (err) return cb(err);","","    data = obj.toObject(true);","","    // options has precedence on model-setting","    if (options.validate === false) {","      return create();","    }","","    // only when options.validate is not set, take model-setting into consideration","    if (options.validate === undefined && Model.settings.automaticValidation === false) {","      return create();","    }","","    // validation required","    obj.isValid(function(valid) {","      if (valid) {","        create();","      } else {","        cb(new ValidationError(obj), obj);","      }","    }, data, options);","  });","","  function create() {","    obj.trigger('create', function(createDone) {","      obj.trigger('save', function(saveDone) {","        var _idName = idName(Model);","        var modelName = Model.modelName;","        var val = removeUndefined(obj.toObject(true));","        function createCallback(err, id, rev) {","          if (id) {","            obj.__data[_idName] = id;","            defineReadonlyProp(obj, _idName, id);","          }","          if (rev) {","            obj._rev = rev;","          }","          if (err) {","            return cb(err, obj);","          }","          obj.__persisted = true;","","          var context = {","            Model: Model,","            data: val,","            isNewInstance: true,","            hookState: hookState,","            options: options,","          };","          Model.notifyObserversOf('loaded', context, function(err) {","            if (err) return cb(err);","","            // By default, the instance passed to create callback is NOT updated","            // with the changes made through persist/loaded hooks. To preserve","            // backwards compatibility, we introduced a new setting updateOnLoad,","            // which if set, will apply these changes to the model instance too.","            if (Model.settings.updateOnLoad) {","              obj.setAttributes(context.data);","            }","            saveDone.call(obj, function() {","              createDone.call(obj, function() {","                if (err) {","                  return cb(err, obj);","                }","                var context = {","                  Model: Model,","                  instance: obj,","                  isNewInstance: true,","                  hookState: hookState,","                  options: options,","                };","                if (options.notify !== false) {","                  Model.notifyObserversOf('after save', context, function(err) {","                    cb(err, obj);","                  });","                } else {","                  cb(null, obj);","                }","              });","            });","          });","        }","","        context = {","          Model: Model,","          data: val,","          isNewInstance: true,","          currentInstance: obj,","          hookState: hookState,","          options: options,","        };","        Model.notifyObserversOf('persist', context, function(err) {","          if (err) return cb(err);","","          if (connector.create.length === 4) {","            connector.create(modelName, obj.constructor._forDB(context.data), options, createCallback);","          } else {","            connector.create(modelName, obj.constructor._forDB(context.data), createCallback);","          }","        });","      }, obj, cb);","    }, obj, cb);","  }","","  return cb.promise;","};","","function stillConnecting(dataSource, obj, args) {","  if (typeof args[args.length - 1] === 'function') {","    return dataSource.ready(obj, args);","  }","","  // promise variant","  var promiseArgs = Array.prototype.slice.call(args);","  promiseArgs.callee = args.callee;","  var cb =  utils.createPromiseCallback();","  promiseArgs.push(cb);","  if (dataSource.ready(obj, promiseArgs)) {","    return cb.promise;","  } else {","    return false;","  }","}","","/**"," * Update or insert a model instance: update exiting record if one is found, such that parameter `data.id` matches `id` of model instance;"," * otherwise, insert a new record."," *"," * NOTE: No setters, validations, or hooks are applied when using upsert."," * `updateOrCreate` and `patchOrCreate` are aliases"," * @param {Object} data The model instance data"," * @param {Object} [options] Options for upsert"," * @param {Function} cb The callback function (optional)."," */","// [FIXME] rfeng: This is a hack to set up 'upsert' first so that","// 'upsert' will be used as the name for strong-remoting to keep it backward","// compatible for angular SDK","DataAccessObject.updateOrCreate =","DataAccessObject.patchOrCreate =","DataAccessObject.upsert = function(data, options, cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","","  if (options === undefined && cb === undefined) {","    if (typeof data === 'function') {","      // upsert(cb)","      cb = data;","      data = {};","    }","  } else if (cb === undefined) {","    if (typeof options === 'function') {","      // upsert(data, cb)","      cb = options;","      options = {};","    }","  }","","  cb = cb || utils.createPromiseCallback();","  data = data || {};","  options = options || {};","","  assert(typeof data === 'object', 'The data argument must be an object');","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","","  if (Array.isArray(data)) {","    cb(new Error('updateOrCreate does not support bulk mode or any array input'));","    return cb.promise;","  }","","  var hookState = {};","","  var self = this;","  var Model = this;","  var connector = Model.getConnector();","","  var id = getIdValue(this, data);","  if (id === undefined || id === null) {","    return this.create(data, options, cb);","  }","","  var context = {","    Model: Model,","    query: byIdQuery(Model, id),","    hookState: hookState,","    options: options,","  };","  Model.notifyObserversOf('access', context, doUpdateOrCreate);","","  function doUpdateOrCreate(err, ctx) {","    if (err) return cb(err);","","    var isOriginalQuery = isWhereByGivenId(Model, ctx.query.where, id);","    if (connector.updateOrCreate && isOriginalQuery) {","      var context = {","        Model: Model,","        where: ctx.query.where,","        data: data,","        hookState: hookState,","        options: options,","      };","      Model.notifyObserversOf('before save', context, function(err, ctx) {","        if (err) return cb(err);","","        data = ctx.data;","        var update = data;","        var inst = data;","        if (!(data instanceof Model)) {","          inst = new Model(data, {applyDefaultValues: false});","        }","        update = inst.toObject(false);","","        Model.applyProperties(update, inst);","        Model = Model.lookupModel(update);","","        var connector = self.getConnector();","","        var doValidate = undefined;","        if (options.validate === undefined) {","          if (Model.settings.validateUpsert === undefined) {","            if (Model.settings.automaticValidation !== undefined) {","              doValidate = Model.settings.automaticValidation;","            }","          } else {","            doValidate = Model.settings.validateUpsert;","          }","        } else {","          doValidate = options.validate;","        }","","        if (doValidate === false) {","          callConnector();","        } else {","          inst.isValid(function(valid) {","            if (!valid) {","              if (doValidate) { // backwards compatibility with validateUpsert:undefined","                return cb(new ValidationError(inst), inst);","              } else {","                // TODO(bajtos) Remove validateUpsert:undefined in v3.0","                g.warn('Ignoring validation errors in {{updateOrCreate()}}:');","                g.warn('  %s', new ValidationError(inst).message);","                // continue with updateOrCreate","              }","            }","            callConnector();","          }, update, options);","        }","","        function callConnector() {","          update = removeUndefined(update);","          context = {","            Model: Model,","            where: ctx.where,","            data: update,","            currentInstance: inst,","            hookState: ctx.hookState,","            options: options,","          };","          Model.notifyObserversOf('persist', context, function(err) {","            if (err) return done(err);","            if (connector.updateOrCreate.length === 4) {","              connector.updateOrCreate(Model.modelName, update, options, done);","            } else {","              connector.updateOrCreate(Model.modelName, update, done);","            }","          });","        }","        function done(err, data, info) {","          if (err) return cb(err);","          var context = {","            Model: Model,","            data: data,","            isNewInstance: info && info.isNewInstance,","            hookState: ctx.hookState,","            options: options,","          };","          Model.notifyObserversOf('loaded', context, function(err) {","            if (err) return cb(err);","","            var obj;","            if (data && !(data instanceof Model)) {","              inst._initProperties(data, {persisted: true});","              obj = inst;","            } else {","              obj = data;","            }","            if (err) {","              cb(err, obj);","            } else {","              var context = {","                Model: Model,","                instance: obj,","                isNewInstance: info ? info.isNewInstance : undefined,","                hookState: hookState,","                options: options,","              };","","              if (options.notify !== false) {","                Model.notifyObserversOf('after save', context, function(err) {","                  cb(err, obj);","                });","              } else {","                cb(null, obj);","              }","            }","          });","        }","      });","    } else {","      var opts = {notify: false};","      if (ctx.options && ctx.options.transaction) {","        opts.transaction = ctx.options.transaction;","      }","      Model.findOne({where: ctx.query.where}, opts, function(err, inst) {","        if (err) {","          return cb(err);","        }","        if (!isOriginalQuery) {","          // The custom query returned from a hook may hide the fact that","          // there is already a model with `id` value `data[idName(Model)]`","          delete data[idName(Model)];","        }","        if (inst) {","          inst.updateAttributes(data, options, cb);","        } else {","          Model = self.lookupModel(data);","          var obj = new Model(data);","          obj.save(options, cb);","        }","      });","    }","  }","  return cb.promise;","};","/**"," * Update or insert a model instance based on the search criteria."," * If there is a single instance retrieved, update the retrieved model."," * Creates a new model if no model instances were found."," * Returns an error if multiple instances are found."," * @param {Object} [where]  `where` filter, like"," * ```"," * { key: val, key2: {gt: 'val2'}, ...}"," * ```"," * <br/>see"," * [Where filter](https://docs.strongloop.com/display/LB/Where+filter#Wherefilter-Whereclauseforothermethods)."," * @param {Object} data The model instance data to insert."," * @callback {Function} callback Callback function called with `cb(err, obj)` signature."," * @param {Error} err Error object; see [Error object](http://docs.strongloop.com/display/LB/Error+object)."," * @param {Object} model Updated model instance."," */","DataAccessObject.patchOrCreateWithWhere =","DataAccessObject.upsertWithWhere = function(where, data, options, cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) { return connectionPromise; }","  if (cb === undefined) {","    if (typeof options === 'function') {","      // upsertWithWhere(where, data, cb)","      cb = options;","      options = {};","    }","  }","  cb = cb || utils.createPromiseCallback();","  options = options || {};","  assert(typeof where === 'object', 'The where argument must be an object');","  assert(typeof data === 'object', 'The data argument must be an object');","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","  if (Object.keys(data).length === 0) {","    var err = new Error('data object cannot be empty!');","    err.statusCode = 400;","    process.nextTick(function() { cb(err); });","    return cb.promise;","  }","  var hookState = {};","  var self = this;","  var Model = this;","  var connector = Model.getConnector();","  var modelName = Model.modelName;","  var query = {where: where};","  var context = {","    Model: Model,","    query: query,","    hookState: hookState,","    options: options,","  };","  Model.notifyObserversOf('access', context, doUpsertWithWhere);","  function doUpsertWithWhere(err, ctx) {","    if (err) return cb(err);","    ctx.data = data;","    if (connector.upsertWithWhere) {","      var context = {","        Model: Model,","        where: ctx.query.where,","        data: ctx.data,","        hookState: hookState,","        options: options,","      };","      Model.notifyObserversOf('before save', context, function(err, ctx) {","        if (err) return cb(err);","        data = ctx.data;","        var update = data;","        var inst = data;","        if (!(data instanceof Model)) {","          inst = new Model(data, {applyDefaultValues: false});","        }","        update = inst.toObject(false);","        Model.applyScope(query);","        Model.applyProperties(update, inst);","        Model = Model.lookupModel(update);","        if (options.validate === false) {","          return callConnector();","        }","        if (options.validate === undefined && Model.settings.automaticValidation === false) {","          return callConnector();","        }","        inst.isValid(function(valid) {","          if (!valid) return cb(new ValidationError(inst), inst);","          callConnector();","        }, update, options);","","        function callConnector() {","          try {","            ctx.where = removeUndefined(ctx.where);","            ctx.where = Model._coerce(ctx.where, options);","            update = removeUndefined(update);","            update = Model._coerce(update, options);","          } catch (err) {","            return process.nextTick(function() {","              cb(err);","            });","          }","          context = {","            Model: Model,","            where: ctx.where,","            data: update,","            currentInstance: inst,","            hookState: ctx.hookState,","            options: options,","          };","          Model.notifyObserversOf('persist', context, function(err) {","            if (err) return done(err);","            connector.upsertWithWhere(modelName, ctx.where, update, options, done);","          });","        }","        function done(err, data, info) {","          if (err) return cb(err);","          var contxt = {","            Model: Model,","            data: data,","            isNewInstance: info && info.isNewInstance,","            hookState: ctx.hookState,","            options: options,","          };","          Model.notifyObserversOf('loaded', contxt, function(err) {","            if (err) return cb(err);","            var obj;","            if (contxt.data && !(contxt.data instanceof Model)) {","              inst._initProperties(contxt.data, {persisted: true});","              obj = inst;","            } else {","              obj = contxt.data;","            }","            var context = {","              Model: Model,","              instance: obj,","              isNewInstance: info ? info.isNewInstance : undefined,","              hookState: hookState,","              options: options,","            };","            Model.notifyObserversOf('after save', context, function(err) {","              cb(err, obj);","            });","          });","        }","      });","    } else {","      var opts = {notify: false};","      if (ctx.options && ctx.options.transaction) {","        opts.transaction = ctx.options.transaction;","      }","      self.find({where: ctx.query.where}, opts, function(err, instances) {","        if (err) return cb(err);","        var modelsLength = instances.length;","        if (modelsLength === 0)  {","          self.create(data, options, cb);","        } else if (modelsLength === 1) {","          var modelInst = instances[0];","          modelInst.updateAttributes(data, options, cb);","        } else {","          process.nextTick(function() {","            var error = new Error('There are multiple instances found.' +","                'Upsert Operation will not be performed!');","            error.statusCode = 400;","            cb(error);","          });","        }","      });","    }","  }","  return cb.promise;","};","/**"," * Replace or insert a model instance: replace exiting record if one is found, such that parameter `data.id` matches `id` of model instance;"," * otherwise, insert a new record."," *"," * @param {Object} data The model instance data"," * @param {Object} [options] Options for replaceOrCreate"," * @param {Function} cb The callback function (optional)."," */","","DataAccessObject.replaceOrCreate = function replaceOrCreate(data, options, cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","","  if (cb === undefined) {","    if (typeof options === 'function') {","      // replaceOrCreta(data,cb)","      cb = options;","      options = {};","    }","  }","","  cb = cb || utils.createPromiseCallback();","  data = data || {};","  options = options || {};","","  assert(typeof data === 'object', 'The data argument must be an object');","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","","  var hookState = {};","","  var self = this;","  var Model = this;","  var connector = Model.getConnector();","","  var id = getIdValue(this, data);","  if (id === undefined || id === null) {","    return this.create(data, options, cb);","  }","","  var forceId = this.settings.forceId;","  if (forceId) {","    return Model.replaceById(id, data, options, cb);","  }","","  var inst;","  if (data instanceof Model) {","    inst = data;","  } else {","    inst = new Model(data);","  }","","  var strict = inst.__strict;","  var context = {","    Model: Model,","    query: byIdQuery(Model, id),","    hookState: hookState,","    options: options,","  };","  Model.notifyObserversOf('access', context, doReplaceOrCreate);","","  function doReplaceOrCreate(err, ctx) {","    if (err) return cb(err);","","    var isOriginalQuery = isWhereByGivenId(Model, ctx.query.where, id);","    var where = ctx.query.where;","    if (connector.replaceOrCreate && isOriginalQuery) {","      var context = {","        Model: Model,","        instance: inst,","        hookState: hookState,","        options: options,","      };","      Model.notifyObserversOf('before save', context, function(err, ctx) {","        if (err) return cb(err);","        var update = inst.toObject(false);","        if (strict) {","          applyStrictCheck(Model, strict, update, inst, validateAndCallConnector);","        } else {","          validateAndCallConnector();","        }","","        function validateAndCallConnector(err) {","          if (err) return cb(err);","          Model.applyProperties(update, inst);","          Model = Model.lookupModel(update);","","          var connector = self.getConnector();","","          if (options.validate === false) {","            return callConnector();","          }","","          // only when options.validate is not set, take model-setting into consideration","          if (options.validate === undefined && Model.settings.automaticValidation === false) {","            return callConnector();","          }","","          inst.isValid(function(valid) {","            if (!valid) return cb(new ValidationError(inst), inst);","            callConnector();","          }, update, options);","","          function callConnector() {","            update = removeUndefined(update);","            context = {","              Model: Model,","              where: where,","              data: update,","              currentInstance: inst,","              hookState: ctx.hookState,","              options: options,","            };","            Model.notifyObserversOf('persist', context, function(err) {","              if (err) return done(err);","              connector.replaceOrCreate(Model.modelName, context.data, options, done);","            });","          }","          function done(err, data, info) {","            if (err) return cb(err);","            var context = {","              Model: Model,","              data: data,","              isNewInstance: info ? info.isNewInstance : undefined,","              hookState: ctx.hookState,","              options: options,","            };","            Model.notifyObserversOf('loaded', context, function(err) {","              if (err) return cb(err);","","              var obj;","              if (data && !(data instanceof Model)) {","                inst._initProperties(data, {persisted: true});","                obj = inst;","              } else {","                obj = data;","              }","              if (err) {","                cb(err, obj);","              } else {","                var context = {","                  Model: Model,","                  instance: obj,","                  isNewInstance: info ? info.isNewInstance : undefined,","                  hookState: hookState,","                  options: options,","                };","","                Model.notifyObserversOf('after save', context, function(err) {","                  cb(err, obj, info);","                });","              }","            });","          }","        }","      });","    } else {","      var opts = {notify: false};","      if (ctx.options && ctx.options.transaction) {","        opts.transaction = ctx.options.transaction;","      }","      Model.findOne({where: ctx.query.where}, opts, function(err, found) {","        if (err) return cb(err);","        if (!isOriginalQuery) {","          // The custom query returned from a hook may hide the fact that","          // there is already a model with `id` value `data[idName(Model)]`","          var pkName = idName(Model);","          delete data[pkName];","          if (found) id = found[pkName];","        }","        if (found) {","          self.replaceById(id, data, options, cb);","        } else {","          Model = self.lookupModel(data);","          var obj = new Model(data);","          obj.save(options, cb);","        }","      });","    }","  }","  return cb.promise;","};","","/**"," * Find one record that matches specified query criteria.  Same as `find`, but limited to one record, and this function returns an"," * object, not a collection."," * If the specified instance is not found, then create it using data provided as second argument."," *"," * @param {Object} query Search conditions. See [find](#dataaccessobjectfindquery-callback) for query format."," * For example: `{where: {test: 'me'}}`."," * @param {Object} data Object to create."," * @param {Object} [options] Option for findOrCreate"," * @param {Function} cb Callback called with (err, instance, created)"," */","DataAccessObject.findOrCreate = function findOrCreate(query, data, options, cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","","  assert(arguments.length >= 1, 'At least one argument is required');","  if (data === undefined && options === undefined && cb === undefined) {","    assert(typeof query === 'object', 'Single argument must be data object');","    // findOrCreate(data);","    // query will be built from data, and method will return Promise","    data = query;","    query = {where: data};","  } else  if (options === undefined && cb === undefined) {","    if (typeof data === 'function') {","      // findOrCreate(data, cb);","      // query will be built from data","      cb = data;","      data = query;","      query = {where: data};","    }","  } else if (cb === undefined) {","    if (typeof options === 'function') {","      // findOrCreate(query, data, cb)","      cb = options;","      options = {};","    }","  }","","  cb = cb || utils.createPromiseCallback();","  query = query || {where: {}};","  data = data || {};","  options = options || {};","","  assert(typeof query === 'object', 'The query argument must be an object');","  assert(typeof data === 'object', 'The data argument must be an object');","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","","  var hookState = {};","","  var Model = this;","  var self = this;","  var connector = Model.getConnector();","","  function _findOrCreate(query, data, currentInstance) {","    var modelName = self.modelName;","    function findOrCreateCallback(err, data, created) {","      if (err) return cb(err);","      var context = {","        Model: Model,","        data: data,","        isNewInstance: created,","        hookState: hookState,","        options: options,","      };","      Model.notifyObserversOf('loaded', context, function(err) {","        if (err) return cb(err);","","        var obj, Model = self.lookupModel(data);","","        if (data) {","          obj = new Model(data, {fields: query.fields, applySetters: false,","            persisted: true});","        }","","        if (created) {","          var context = {","            Model: Model,","            instance: obj,","            isNewInstance: true,","            hookState: hookState,","            options: options,","          };","          Model.notifyObserversOf('after save', context, function(err) {","            if (cb.promise) {","              cb(err, [obj, created]);","            } else {","              cb(err, obj, created);","            }","          });","        } else {","          if (cb.promise) {","            cb(err, [obj, created]);","          } else {","            cb(err, obj, created);","          }","        }","      });","    }","","    data = removeUndefined(data);","    var context = {","      Model: Model,","      where: query.where,","      data: data,","      isNewInstance: true,","      currentInstance: currentInstance,","      hookState: hookState,","      options: options,","    };","","    Model.notifyObserversOf('persist', context, function(err) {","      if (err) return cb(err);","","      if (connector.findOrCreate.length === 5) {","        connector.findOrCreate(modelName, query, self._forDB(context.data), options, findOrCreateCallback);","      } else {","        connector.findOrCreate(modelName, query, self._forDB(context.data), findOrCreateCallback);","      }","    });","  }","","  if (connector.findOrCreate) {","    query.limit = 1;","","    try {","      this._normalize(query, options);","    } catch (err) {","      process.nextTick(function() {","        cb(err);","      });","      return cb.promise;","    }","","    this.applyScope(query);","","    var context = {","      Model: Model,","      query: query,","      hookState: hookState,","      options: options,","    };","    Model.notifyObserversOf('access', context, function(err, ctx) {","      if (err) return cb(err);","","      var query = ctx.query;","","      var enforced = {};","      var Model = self.lookupModel(data);","      var obj = data instanceof Model ? data : new Model(data);","","      Model.applyProperties(enforced, obj);","      obj.setAttributes(enforced);","","      var context = {","        Model: Model,","        instance: obj,","        isNewInstance: true,","        hookState: hookState,","        options: options,","      };","      Model.notifyObserversOf('before save', context, function(err, ctx) {","        if (err) return cb(err);","","        var obj = ctx.instance;","        var data = obj.toObject(true);","","        // options has precedence on model-setting","        if (options.validate === false) {","          return _findOrCreate(query, data, obj);","        }","","        // only when options.validate is not set, take model-setting into consideration","        if (options.validate === undefined && Model.settings.automaticValidation === false) {","          return _findOrCreate(query, data, obj);","        }","","        // validation required","        obj.isValid(function(valid) {","          if (valid) {","            _findOrCreate(query, data, obj);","          } else {","            cb(new ValidationError(obj), obj);","          }","        }, data, options);","      });","    });","  } else {","    Model.findOne(query, options, function(err, record) {","      if (err) return cb(err);","      if (record) {","        if (cb.promise) {","          return cb(null, [record, false]);","        } else {","          return cb(null, record, false);","        }","      }","      Model.create(data, options, function(err, record) {","        if (cb.promise) {","          cb(err, [record, record != null]);","        } else {","          cb(err, record, record != null);","        }","      });","    });","  }","  return cb.promise;","};","","/**"," * Check whether a model instance exists in database"," *"," * @param {id} id Identifier of object (primary key value)"," * @param {Object} [options] Options"," * @param {Function} cb Callback function called with (err, exists: Bool)"," */","DataAccessObject.exists = function exists(id, options, cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","","  assert(arguments.length >= 1, 'The id argument is required');","  if (cb === undefined) {","    if (typeof options === 'function') {","      // exists(id, cb)","      cb = options;","      options = {};","    }","  }","","  cb = cb || utils.createPromiseCallback();","  options = options || {};","","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","","  if (id !== undefined && id !== null && id !== '') {","    this.count(byIdQuery(this, id).where, options, function(err, count) {","      cb(err, err ? false : count === 1);","    });","  } else {","    process.nextTick(function() {","      cb(new Error(g.f('{{Model::exists}} requires the {{id}} argument')));","    });","  }","  return cb.promise;","};","","/**"," * Find model instance by ID."," *"," * Example:"," * ```js"," * User.findById(23, function(err, user) {"," *   console.info(user.id); // 23"," * });"," * ```"," *"," * @param {*} id Primary key value"," * @param {Object} [filter] The filter that contains `include` or `fields`."," * Other settings such as `where`, `order`, `limit`, or `offset` will be"," * ignored."," * @param {Object} [options] Options"," * @param {Function} cb Callback called with (err, instance)"," */","DataAccessObject.findById = function findById(id, filter, options, cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","","  assert(arguments.length >= 1, 'The id argument is required');","","  if (options === undefined && cb === undefined) {","    if (typeof filter === 'function') {","      // findById(id, cb)","      cb = filter;","      filter = {};","    }","  } else if (cb === undefined) {","    if (typeof options === 'function') {","      // findById(id, query, cb)","      cb = options;","      options = {};","      if (typeof filter === 'object' && !(filter.include || filter.fields)) {","        // If filter doesn't have include or fields, assuming it's options","        options = filter;","        filter = {};","      }","    }","  }","","  cb = cb || utils.createPromiseCallback();","  options = options || {};","  filter = filter || {};","","  assert(typeof filter === 'object', 'The filter argument must be an object');","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","","  if (isPKMissing(this, cb)) {","    return cb.promise;","  } else if (id == null || id === '') {","    process.nextTick(function() {","      cb(new Error(g.f('{{Model::findById}} requires the {{id}} argument')));","    });","  } else {","    var query = byIdQuery(this, id);","    if (filter.include) {","      query.include = filter.include;","    }","    if (filter.fields) {","      query.fields = filter.fields;","    }","    this.findOne(query, options, cb);","  }","  return cb.promise;","};","","/**"," * Find model instances by ids"," * @param {Array} ids An array of ids"," * @param {Object} query Query filter"," * @param {Object} [options] Options"," * @param {Function} cb Callback called with (err, instance)"," */","DataAccessObject.findByIds = function(ids, query, options, cb) {","  if (options === undefined && cb === undefined) {","    if (typeof query === 'function') {","      // findByIds(ids, cb)","      cb = query;","      query = {};","    }","  } else if (cb === undefined) {","    if (typeof options === 'function') {","      // findByIds(ids, query, cb)","      cb = options;","      options = {};","    }","  }","","  cb = cb || utils.createPromiseCallback();","  options = options || {};","  query = query || {};","","  assert(Array.isArray(ids), 'The ids argument must be an array');","  assert(typeof query === 'object', 'The query argument must be an object');","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","","  if (isPKMissing(this, cb)) {","    return cb.promise;","  } else if (ids.length === 0) {","    process.nextTick(function() { cb(null, []); });","    return cb.promise;","  }","","  var filter = {where: {}};","  var pk = idName(this);","  filter.where[pk] = {inq: [].concat(ids)};","  mergeQuery(filter, query || {});","","  // to know if the result need to be sorted by ids or not","  // this variable need to be initialized before the call to find, because filter is updated during the call with an order","  var toSortObjectsByIds = filter.order ? false : true;","","  this.find(filter, options, function(err, results) {","    cb(err, toSortObjectsByIds ? utils.sortObjectsByIds(pk, ids, results) : results);","  });","  return cb.promise;","};","","function convertNullToNotFoundError(ctx, cb) {","  if (ctx.result !== null) return cb();","","  var modelName = ctx.method.sharedClass.name;","  var id = ctx.getArgByName('id');","  var msg = g.f('Unknown \"%s\" {{id}} \"%s\".', modelName, id);","  var error = new Error(msg);","  error.statusCode = error.status = 404;","  cb(error);","}","","// alias function for backwards compat.","DataAccessObject.all = function() {","  return DataAccessObject.find.apply(this, arguments);","};","","/**"," * Get settings via hiarchical determiniation"," *"," * @param {String} key The setting key"," */","DataAccessObject._getSetting = function(key) {","  // Check for settings in model","  var m = this.definition;","  if (m && m.settings && m.settings[key]) {","    return m.settings[key];","  }","","  // Check for settings in connector","  var ds = this.getDataSource();","  if (ds && ds.settings && ds.settings[key]) {","    return ds.settings[key];","  }","","  return;","};","","var operators = {","  gt: '>',","  gte: '>=',","  lt: '<',","  lte: '<=',","  between: 'BETWEEN',","  inq: 'IN',","  nin: 'NOT IN',","  neq: '!=',","  like: 'LIKE',","  nlike: 'NOT LIKE',","  ilike: 'ILIKE',","  nilike: 'NOT ILIKE',","  regexp: 'REGEXP',","};","","/*"," * Normalize the filter object and throw errors if invalid values are detected"," * @param {Object} filter The query filter object"," * @options {Object} [options] Optional options to use."," * @property {Boolean} allowExtendedOperators."," * @returns {Object} The normalized filter object"," * @private"," */","DataAccessObject._normalize = function(filter, options) {","  if (!filter) {","    return undefined;","  }","  var err = null;","  if ((typeof filter !== 'object') || Array.isArray(filter)) {","    err = new Error(g.f('The query filter %j is not an {{object}}', filter));","    err.statusCode = 400;","    throw err;","  }","  if (filter.limit || filter.skip || filter.offset) {","    var limit = Number(filter.limit || 100);","    var offset = Number(filter.skip || filter.offset || 0);","    if (isNaN(limit) || limit <= 0 || Math.ceil(limit) !== limit) {","      err = new Error(g.f('The {{limit}} parameter %j is not valid',","        filter.limit));","      err.statusCode = 400;","      throw err;","    }","    if (isNaN(offset) || offset < 0 || Math.ceil(offset) !== offset) {","      err = new Error(g.f('The {{offset/skip}} parameter %j is not valid',","          filter.skip || filter.offset));","      err.statusCode = 400;","      throw err;","    }","    filter.limit = limit;","    filter.offset = offset;","    filter.skip = offset;","  }","","  if (filter.order) {","    var order = filter.order;","    if (!Array.isArray(order)) {","      order = [order];","    }","    var fields = [];","    for (var i = 0, m = order.length; i < m; i++) {","      if (typeof order[i] === 'string') {","        // Normalize 'f1 ASC, f2 DESC, f3' to ['f1 ASC', 'f2 DESC', 'f3']","        var tokens = order[i].split(/(?:\\s*,\\s*)+/);","        for (var t = 0, n = tokens.length; t < n; t++) {","          var token = tokens[t];","          if (token.length === 0) {","            // Skip empty token","            continue;","          }","          var parts = token.split(/\\s+/);","          if (parts.length >= 2) {","            var dir = parts[1].toUpperCase();","            if (dir === 'ASC' || dir === 'DESC') {","              token = parts[0] + ' ' + dir;","            } else {","              err = new Error(g.f('The {{order}} %j has invalid direction', token));","              err.statusCode = 400;","              throw err;","            }","          }","          fields.push(token);","        }","      } else {","        err = new Error(g.f('The order %j is not valid', order[i]));","        err.statusCode = 400;","        throw err;","      }","    }","    if (fields.length === 1 && typeof filter.order === 'string') {","      filter.order = fields[0];","    } else {","      filter.order = fields;","    }","  }","","  // normalize fields as array of included property names","  if (filter.fields) {","    filter.fields = fieldsToArray(filter.fields,","      Object.keys(this.definition.properties), this.settings.strict);","  }","","  var handleUndefined =  this._getSetting('normalizeUndefinedInQuery');","  // alter configuration of how removeUndefined handles undefined values","  filter = removeUndefined(filter, handleUndefined);","  this._coerce(filter.where, options);","  return filter;","};","","function DateType(arg) {","  var d = new Date(arg);","  if (isNaN(d.getTime())) {","    throw new Error(g.f('Invalid date: %s', arg));","  }","  return d;","}","","function BooleanType(arg) {","  if (typeof arg === 'string') {","    switch (arg) {","      case 'true':","      case '1':","        return true;","      case 'false':","      case '0':","        return false;","    }","  }","  if (arg == null) {","    return null;","  }","  return Boolean(arg);","}","","function NumberType(val) {","  var num = Number(val);","  return !isNaN(num) ? num : val;","}","","function coerceArray(val) {","  if (Array.isArray(val)) {","    return val;","  }","","  if (!utils.isPlainObject(val)) {","    throw new Error(g.f('Value is not an {{array}} or {{object}} with sequential numeric indices'));","  }","","  // It is an object, check if empty","  var props = Object.keys(val);","","  if (props.length === 0) {","    throw new Error(g.f('Value is an empty {{object}}'));","  }","","  var arrayVal = new Array(props.length);","  for (var i = 0; i < arrayVal.length; ++i) {","    if (!val.hasOwnProperty(i)) {","      throw new Error(g.f('Value is not an {{array}} or {{object}} with sequential numeric indices'));","    }","","    arrayVal[i] = val[i];","  }","","  return arrayVal;","}","","/*"," * Coerce values based the property types"," * @param {Object} where The where clause"," * @options {Object} [options] Optional options to use."," * @property {Boolean} allowExtendedOperators."," * @returns {Object} The coerced where clause"," * @private"," */","DataAccessObject._coerce = function(where, options) {","  var self = this;","  if (!where) {","    return where;","  }","","  options = options || {};","","  var err;","  if (typeof where !== 'object' || Array.isArray(where)) {","    err = new Error(g.f('The where clause %j is not an {{object}}', where));","    err.statusCode = 400;","    throw err;","  }","","  var props = self.definition.properties;","  for (var p in where) {","    // Handle logical operators","    if (p === 'and' || p === 'or' || p === 'nor') {","      var clauses = where[p];","      try {","        clauses = coerceArray(clauses);","      } catch (e) {","        err = new Error(g.f('The %s operator has invalid clauses %j: %s', p, clauses, e.message));","        err.statusCode = 400;","        throw err;","      }","","      for (var k = 0; k < clauses.length; k++) {","        self._coerce(clauses[k], options);","      }","","      continue;","    }","    var DataType = props[p] && props[p].type;","    if (!DataType) {","      continue;","    }","    if (Array.isArray(DataType) || DataType === Array) {","      DataType = DataType[0];","    }","    if (DataType === Date) {","      DataType = DateType;","    } else if (DataType === Boolean) {","      DataType = BooleanType;","    } else if (DataType === Number) {","      // This fixes a regression in mongodb connector","      // For numbers, only convert it produces a valid number","      // LoopBack by default injects a number id. We should fix it based","      // on the connector's input, for example, MongoDB should use string","      // while RDBs typically use number","      DataType = NumberType;","    }","","    if (!DataType) {","      continue;","    }","","    if (DataType.prototype instanceof BaseModel) {","      continue;","    }","","    if (DataType === geo.GeoPoint) {","      // Skip the GeoPoint as the near operator breaks the assumption that","      // an operation has only one property","      // We should probably fix it based on","      // http://docs.mongodb.org/manual/reference/operator/query/near/","      // The other option is to make operators start with $","      continue;","    }","","    var val = where[p];","    if (val === null || val === undefined) {","      continue;","    }","    // Check there is an operator","    var operator = null;","    var exp = val;","    if (val.constructor === Object) {","      for (var op in operators) {","        if (op in val) {","          val = val[op];","          operator = op;","          switch (operator) {","            case 'inq':","            case 'nin':","            case 'between':","              try {","                val = coerceArray(val);","              } catch (e) {","                err = new Error(g.f('The %s property has invalid clause %j: %s', p, where[p], e));","                err.statusCode = 400;","                throw err;","              }","","              if (operator === 'between' && val.length !== 2) {","                err = new Error(g.f(","                  'The %s property has invalid clause %j: Expected precisely 2 values, received %d',","                  p,","                  where[p],","                  val.length));","                err.statusCode = 400;","                throw err;","              }","              break;","            case 'like':","            case 'nlike':","            case 'ilike':","            case 'nilike':","              if (!(typeof val === 'string' || val instanceof RegExp)) {","                err = new Error(g.f(","                  'The %s property has invalid clause %j: Expected a string or RegExp',","                  p,","                  where[p]));","                err.statusCode = 400;","                throw err;","              }","              break;","            case 'regexp':","              val = utils.toRegExp(val);","              if (val instanceof Error) {","                val.statusCode = 400;","                throw err;","              }","              break;","          }","          break;","        }","      }","    }","","    try {","      // Coerce val into an array if it resembles an array-like object","      val = coerceArray(val);","    } catch (e) {","      // NOOP when not coercable into an array.","    }","","    // Coerce the array items","    if (Array.isArray(val)) {","      for (var i = 0; i < val.length; i++) {","        if (val[i] !== null && val[i] !== undefined) {","          if (!(val[i] instanceof RegExp)) {","            val[i] = DataType(val[i]);","          }","        }","      }","    } else {","      if (val != null) {","        const allowExtendedOperators = self._allowExtendedOperators(options);","        if (operator === null && val instanceof RegExp) {","          // Normalize {name: /A/} to {name: {regexp: /A/}}","          operator = 'regexp';","        } else if (operator === 'regexp' && val instanceof RegExp) {","          // Do not coerce regex literals/objects","        } else if ((operator === 'like' || operator === 'nlike' ||","            operator === 'ilike' || operator === 'nilike') && val instanceof RegExp) {","          // Do not coerce RegExp operator value","        } else if (allowExtendedOperators && typeof val === 'object') {","          // Do not coerce object values when extended operators are allowed","        } else {","          val = DataType(val);","        }","      }","    }","    // Rebuild {property: {operator: value}}","    if (operator) {","      var value = {};","      value[operator] = val;","      if (exp.options) {","        // Keep options for operators","        value.options = exp.options;","      }","      val = value;","    }","    where[p] = val;","  }","  return where;","};","","/**"," * Find all instances of Model that match the specified query."," * Fields used for filter and sort should be declared with `{index: true}` in model definition."," * See [Querying models](http://docs.strongloop.com/display/DOC/Querying+models) for more information."," *"," * For example, find the second page of ten users over age 21 in descending order exluding the password property."," *"," * ```js"," * User.find({"," *   where: {"," *     age: {gt: 21}},"," *     order: 'age DESC',"," *     limit: 10,"," *     skip: 10,"," *     fields: {password: false}"," *   },"," *   console.log"," * );"," * ```"," *"," * @options {Object} [query] Optional JSON object that specifies query criteria and parameters."," * @property {Object} where Search criteria in JSON format `{ key: val, key2: {gt: 'val2'}}`."," * Operations:"," * - gt: >"," * - gte: >="," * - lt: <"," * - lte: <="," * - between"," * - inq: IN"," * - nin: NOT IN"," * - neq: !="," * - like: LIKE"," * - nlike: NOT LIKE"," * - ilike: ILIKE"," * - nilike: NOT ILIKE"," * - regexp: REGEXP"," *"," * You can also use `and` and `or` operations.  See [Querying models](http://docs.strongloop.com/display/DOC/Querying+models) for more information."," * @property {String|Object|Array} include Allows you to load relations of several objects and optimize numbers of requests."," * Format examples;"," * - `'posts'`: Load posts"," * - `['posts', 'passports']`: Load posts and passports"," * - `{'owner': 'posts'}`: Load owner and owner's posts"," * - `{'owner': ['posts', 'passports']}`: Load owner, owner's posts, and owner's passports"," * - `{'owner': [{posts: 'images'}, 'passports']}`: Load owner, owner's posts, owner's posts' images, and owner's passports"," * See `DataAccessObject.include()`."," * @property {String} order Sort order.  Format: `'key1 ASC, key2 DESC'`"," * @property {Number} limit Maximum number of instances to return."," * @property {Number} skip Number of instances to skip."," * @property {Number} offset Alias for `skip`."," * @property {Object|Array|String} fields Included/excluded fields."," * - `['foo']` or `'foo'` - include only the foo property"," *  - `['foo', 'bar']` - include the foo and bar properties.  Format:"," *  - `{foo: true}` - include only foo"," * - `{bat: false}` - include all properties, exclude bat"," *"," * @param {Function} cb Optional callback function.  Call this function with two arguments: `err` (null or Error) and an array of instances."," * @return {Promise} results If no callback function is provided, a promise (which resolves to an array of instances) is returned"," */","","DataAccessObject.find = function find(query, options, cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","","  if (options === undefined && cb === undefined) {","    if (typeof query === 'function') {","      // find(cb);","      cb = query;","      query = {};","    }","  } else if (cb === undefined) {","    if (typeof options === 'function') {","      // find(query, cb);","      cb = options;","      options = {};","    }","  }","","  cb = cb || utils.createPromiseCallback();","  query = query || {};","  options = options || {};","","  assert(typeof query === 'object', 'The query argument must be an object');","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","","  var hookState = {};","  var self = this;","  var connector = self.getConnector();","","  assert(typeof connector.all === 'function',","    'all() must be implemented by the connector');","","  try {","    this._normalize(query, options);","  } catch (err) {","    process.nextTick(function() {","      cb(err);","    });","    return cb.promise;","  }","","  this.applyScope(query);","","  var near = query && geo.nearFilter(query.where);","  var supportsGeo = !!connector.buildNearFilter;","","  if (near) {","    if (supportsGeo) {","      // convert it","      connector.buildNearFilter(query, near);","    } else if (query.where) {","      // do in memory query","      // using all documents","      // TODO [fabien] use default scope here?","      if (options.notify === false) {","        queryGeo(query);","      } else {","        withNotifyGeo();","      }","","      function withNotifyGeo() {","        var context = {","          Model: self,","          query: query,","          hookState: hookState,","          options: options,","        };","        self.notifyObserversOf('access', context, function(err, ctx) {","          if (err) return cb(err);","          queryGeo(ctx.query);","        });","      }","","      function queryGeo(query) {","        function geoCallbackWithoutNotify(err, data) {","          var memory = new Memory();","          var modelName = self.modelName;","","          if (err) {","            cb(err);","          } else if (Array.isArray(data)) {","            memory.define({","              properties: self.dataSource.definitions[self.modelName].properties,","              settings: self.dataSource.definitions[self.modelName].settings,","              model: self,","            });","","            data.forEach(function(obj) {","              memory.create(modelName, obj, options, function() {","                // noop","              });","            });","","            // FIXME: apply \"includes\" and other transforms - see allCb below","            memory.all(modelName, query, options, cb);","          } else {","            cb(null, []);","          }","        }","","        function geoCallbackWithNotify(err, data) {","          if (err) return cb(err);","","          async.map(data, function(item, next) {","            var context = {","              Model: self,","              data: item,","              isNewInstance: false,","              hookState: hookState,","              options: options,","            };","","            self.notifyObserversOf('loaded', context, function(err) {","              if (err) return next(err);","              next(null, context.data);","            });","          }, function(err, results) {","            if (err) return cb(err);","            geoCallbackWithoutNotify(null, results);","          });","        }","","        var geoCallback = options.notify === false ? geoCallbackWithoutNotify : geoCallbackWithNotify;","        if (connector.all.length === 4) {","          connector.all(self.modelName, {}, options, geoCallback);","        } else {","          connector.all(self.modelName, {}, geoCallback);","        }","      }","      // already handled","      return cb.promise;","    }","  }","","  var allCb = function(err, data) {","    if (!err && Array.isArray(data)) {","      async.map(data, function(item, next) {","        var Model = self.lookupModel(item);","        if (options.notify === false) {","          buildResult(item, next);","        } else {","          withNotify(item, next);","        }","","        function buildResult(data, callback) {","          var ctorOpts = {","            fields: query.fields,","            applySetters: false,","            persisted: true,","          };","          var obj;","          try {","            obj = new Model(data, ctorOpts);","          } catch (err) {","            return callback(err);","          }","","          if (query && query.include) {","            if (query.collect) {","              // The collect property indicates that the query is to return the","              // standalone items for a related model, not as child of the parent object","              // For example, article.tags","              obj = obj.__cachedRelations[query.collect];","              if (obj === null) {","                obj = undefined;","              }","            } else {","              // This handles the case to return parent items including the related","              // models. For example, Article.find({include: 'tags'}, ...);","              // Try to normalize the include","              var includes = Inclusion.normalizeInclude(query.include || []);","              includes.forEach(function(inc) {","                var relationName = inc;","                if (utils.isPlainObject(inc)) {","                  relationName = Object.keys(inc)[0];","                }","","                // Promote the included model as a direct property","                var included = obj.__cachedRelations[relationName];","                if (Array.isArray(included)) {","                  included = new List(included, null, obj);","                }","                if (included) obj.__data[relationName] = included;","              });","              delete obj.__data.__cachedRelations;","            }","          }","","          callback(null, obj);","        }","","        function withNotify(data, callback) {","          var context = {","            Model: Model,","            data: data,","            isNewInstance: false,","            hookState: hookState,","            options: options,","          };","","          Model.notifyObserversOf('loaded', context, function(err) {","            if (err) return callback(err);","            buildResult(context.data, callback);","          });","        }","      },","      function(err, results) {","        if (err) return cb(err);","","        // When applying query.collect, some root items may not have","        // any related/linked item. We store `undefined` in the results","        // array in such case, which is not desirable from API consumer's","        // point of view.","        results = results.filter(isDefined);","","        if (data && data.countBeforeLimit) {","          results.countBeforeLimit = data.countBeforeLimit;","        }","        if (!supportsGeo && near) {","          results = geo.filter(results, near);","        }","","        cb(err, results);","      });","    } else {","      cb(err, data || []);","    }","  };","","  if (options.notify === false) {","    if (connector.all.length === 4) {","      connector.all(self.modelName, query, options, allCb);","    } else {","      connector.all(self.modelName, query, allCb);","    }","  } else {","    var context =  {","      Model: this,","      query: query,","      hookState: hookState,","      options: options,","    };","    this.notifyObserversOf('access', context, function(err, ctx) {","      if (err) return cb(err);","","      connector.all.length === 4 ?","        connector.all(self.modelName, ctx.query, options, allCb) :","        connector.all(self.modelName, ctx.query, allCb);","    });","  }","  return cb.promise;","};","","function isDefined(value) {","  return value !== undefined;","}","","/**"," * Find one record, same as `find`, but limited to one result. This function returns an object, not a collection."," *"," * @param {Object} query Search conditions.  See [find](#dataaccessobjectfindquery-callback) for query format."," * For example: `{where: {test: 'me'}}`."," * @param {Object} [options] Options"," * @param {Function} cb Callback function called with (err, instance)"," */","DataAccessObject.findOne = function findOne(query, options, cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","","  if (options === undefined && cb === undefined) {","    if (typeof query === 'function') {","      cb = query;","      query = {};","    }","  } else if (cb === undefined) {","    if (typeof options === 'function') {","      cb = options;","      options = {};","    }","  }","","  cb = cb || utils.createPromiseCallback();","  query = query || {};","  options = options || {};","","  assert(typeof query === 'object', 'The query argument must be an object');","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","","  query.limit = 1;","  this.find(query, options, function(err, collection) {","    if (err || !collection || !collection.length > 0) return cb(err, null);","    cb(err, collection[0]);","  });","  return cb.promise;","};","","/**"," * Destroy all matching records."," * Delete all model instances from data source. Note: destroyAll method does not destroy hooks."," * Example:"," *````js"," * Product.destroyAll({price: {gt: 99}}, function(err) {","   // removed matching products"," * });"," * ````"," *"," * @param {Object} [where] Optional object that defines the criteria.  This is a \"where\" object. Do NOT pass a filter object."," * @param {Object) [options] Options"," * @param {Function} [cb] Callback called with (err, info)"," */","DataAccessObject.remove =","DataAccessObject.deleteAll =","DataAccessObject.destroyAll = function destroyAll(where, options, cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","","  var Model = this;","  var connector = Model.getConnector();","","  assert(typeof connector.destroyAll === 'function',","    'destroyAll() must be implemented by the connector');","","  if (options === undefined && cb === undefined) {","    if (typeof where === 'function') {","      cb = where;","      where = {};","    }","  } else if (cb === undefined) {","    if (typeof options === 'function') {","      cb = options;","      options = {};","    }","  }","","  cb = cb || utils.createPromiseCallback();","  where = where || {};","  options = options || {};","","  assert(typeof where === 'object', 'The where argument must be an object');","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","","  var hookState = {};","","  var query = {where: where};","  this.applyScope(query);","  where = query.where;","","  if (options.notify === false) {","    doDelete(where);","  } else {","    query = {where: whereIsEmpty(where) ? {} : where};","    var context = {","      Model: Model,","      query: query,","      hookState: hookState,","      options: options,","    };","    Model.notifyObserversOf('access', context, function(err, ctx) {","      if (err) return cb(err);","      var context = {","        Model: Model,","        where: ctx.query.where,","        hookState: hookState,","        options: options,","      };","      Model.notifyObserversOf('before delete', context, function(err, ctx) {","        if (err) return cb(err);","        doDelete(ctx.where);","      });","    });","  }","","  function doDelete(where) {","    var context = {","      Model: Model,","      where: whereIsEmpty(where) ? {} : where,","      hookState: hookState,","      options: options,","    };","","    if (whereIsEmpty(where)) {","      if (connector.destroyAll.length === 4) {","        connector.destroyAll(Model.modelName, {}, options, done);","      } else {","        connector.destroyAll(Model.modelName, {}, done);","      }","    } else {","      try {","        // Support an optional where object","        where = removeUndefined(where);","        where = Model._coerce(where, options);","      } catch (err) {","        return process.nextTick(function() {","          cb(err);","        });","      }","","      if (connector.destroyAll.length === 4) {","        connector.destroyAll(Model.modelName, where, options, done);","      } else {","        connector.destroyAll(Model.modelName, where, done);","      }","    }","","    function done(err, info) {","      if (err) return cb(err);","","      if (options.notify === false) {","        return cb(err, info);","      }","","      var context = {","        Model: Model,","        where: where,","        hookState: hookState,","        options: options,","        info: info,","      };","      Model.notifyObserversOf('after delete', context, function(err) {","        cb(err, info);","      });","    }","  }","  return cb.promise;","};","","function whereIsEmpty(where) {","  return !where ||","     (typeof where === 'object' && Object.keys(where).length === 0);","}","","/**"," * Delete the record with the specified ID."," * Aliases are `destroyById` and `deleteById`."," * @param {*} id The id value"," * @param {Function} cb Callback called with (err)"," */","","// [FIXME] rfeng: This is a hack to set up 'deleteById' first so that","// 'deleteById' will be used as the name for strong-remoting to keep it backward","// compatible for angular SDK","DataAccessObject.removeById =","DataAccessObject.destroyById =","DataAccessObject.deleteById = function deleteById(id, options, cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","","  assert(arguments.length >= 1, 'The id argument is required');","  if (cb === undefined) {","    if (typeof options === 'function') {","      // destroyById(id, cb)","      cb = options;","      options = {};","    }","  }","","  options = options || {};","  cb = cb || utils.createPromiseCallback();","","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","","  if (isPKMissing(this, cb)) {","    return cb.promise;","  } else if (id == null || id === '') {","    process.nextTick(function() {","      cb(new Error(g.f('{{Model::deleteById}} requires the {{id}} argument')));","    });","    return cb.promise;","  }","","  var Model = this;","","  this.remove(byIdQuery(this, id).where, options, function(err, info) {","    if (err) return cb(err);","    var deleted = info && info.count > 0;","    if (Model.settings.strictDelete && !deleted) {","      err = new Error(g.f('No instance with {{id}} %s found for %s', id, Model.modelName));","      err.code = 'NOT_FOUND';","      err.statusCode = 404;","      return cb(err);","    }","","    cb(null, info);","  });","  return cb.promise;","};","","/**"," * Return count of matched records. Optional query parameter allows you to count filtered set of model instances."," * Example:"," *"," *```js"," * User.count({approved: true}, function(err, count) {"," *     console.log(count); // 2081"," * });"," * ```"," *"," * @param {Object} [where] Search conditions (optional)"," * @param {Object} [options] Options"," * @param {Function} cb Callback, called with (err, count)"," */","DataAccessObject.count = function(where, options, cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","","  if (options === undefined && cb === undefined) {","    if (typeof where === 'function') {","      // count(cb)","      cb = where;","      where = {};","    }","  } else if (cb === undefined) {","    if (typeof options === 'function') {","      // count(where, cb)","      cb = options;","      options = {};","    }","  }","","  cb = cb || utils.createPromiseCallback();","  where = where || {};","  options = options || {};","","  assert(typeof where === 'object', 'The where argument must be an object');","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","","  var Model = this;","  var connector = Model.getConnector();","  assert(typeof connector.count === 'function',","    'count() must be implemented by the connector');","  assert(connector.count.length >= 3,","    'count() must take at least 3 arguments');","","  var hookState = {};","","  var query = {where: where};","  this.applyScope(query);","  where = query.where;","","  try {","    where = removeUndefined(where);","    where = this._coerce(where, options);","  } catch (err) {","    process.nextTick(function() {","      cb(err);","    });","    return cb.promise;","  }","","  var context = {","    Model: Model,","    query: {where: where},","    hookState: hookState,","    options: options,","  };","  this.notifyObserversOf('access', context, function(err, ctx) {","    if (err) return cb(err);","    where = ctx.query.where;","","    if (connector.count.length <= 3) {","      // Old signature, please note where is the last","      // count(model, cb, where)","      connector.count(Model.modelName, cb, where);","    } else {","      // New signature","      // count(model, where, options, cb)","      connector.count(Model.modelName, where, options, cb);","    }","  });","  return cb.promise;","};","","/**"," * Save instance. If the instance does not have an ID, call `create` instead."," * Triggers: validate, save, update or create."," * @options {Object} options Optional options to use."," * @property {Boolean} validate Default is true."," * @property {Boolean} throws  Default is false."," * @param {Function} cb Callback function with err and object arguments"," */","DataAccessObject.prototype.save = function(options, cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","  var Model = this.constructor;","","  if (typeof options === 'function') {","    cb = options;","    options = {};","  }","","  cb = cb || utils.createPromiseCallback();","  options = options || {};","","  assert(typeof options === 'object', 'The options argument should be an object');","  assert(typeof cb === 'function', 'The cb argument should be a function');","","  if (isPKMissing(Model, cb)) {","    return cb.promise;","  }  else if (this.isNewRecord()) {","    return Model.create(this, options, cb);","  }","","  var hookState = {};","","  if (options.validate === undefined) {","    if (Model.settings.automaticValidation === undefined) {","      options.validate = true;","    } else {","      options.validate = Model.settings.automaticValidation;","    }","  }","","  if (options.throws === undefined) {","    options.throws = false;","  }","","  var inst = this;","  var connector = inst.getConnector();","  var modelName = Model.modelName;","","  var context = {","    Model: Model,","    instance: inst,","    hookState: hookState,","    options: options,","  };","  Model.notifyObserversOf('before save', context, function(err) {","    if (err) return cb(err);","","    var data = inst.toObject(true);","    Model.applyProperties(data, inst);","    inst.setAttributes(data);","","    // validate first","    if (!options.validate) {","      return save();","    }","","    inst.isValid(function(valid) {","      if (valid) {","        save();","      } else {","        var err = new ValidationError(inst);","        // throws option is dangerous for async usage","        if (options.throws) {","          throw err;","        }","        cb(err, inst);","      }","    }, data, options);","","    // then save","    function save() {","      inst.trigger('save', function(saveDone) {","        inst.trigger('update', function(updateDone) {","          data = removeUndefined(data);","          function saveCallback(err, unusedData, result) {","            if (err) {","              return cb(err, inst);","            }","","            var context = {","              Model: Model,","              data: data,","              isNewInstance: result && result.isNewInstance,","              hookState: hookState,","              options: options,","            };","            Model.notifyObserversOf('loaded', context, function(err) {","              if (err) return cb(err);","","              inst._initProperties(data, {persisted: true});","","              var context = {","                Model: Model,","                instance: inst,","                isNewInstance: result && result.isNewInstance,","                hookState: hookState,","                options: options,","              };","              Model.notifyObserversOf('after save', context, function(err) {","                if (err) return cb(err, inst);","                updateDone.call(inst, function() {","                  saveDone.call(inst, function() {","                    cb(err, inst);","                  });","                });","              });","            });","          }","","          context = {","            Model: Model,","            data: data,","            where: byIdQuery(Model, getIdValue(Model, inst)).where,","            currentInstance: inst,","            hookState: hookState,","            options: options,","          };","","          Model.notifyObserversOf('persist', context, function(err) {","            if (err) return cb(err);","","            if (connector.save.length === 4) {","              connector.save(modelName, inst.constructor._forDB(data), options, saveCallback);","            } else {","              connector.save(modelName, inst.constructor._forDB(data), saveCallback);","            }","          });","        }, data, cb);","      }, data, cb);","    }","  });","  return cb.promise;","};","","/**"," * Update multiple instances that match the where clause"," *"," * Example:"," *"," *```js"," * Employee.update({managerId: 'x001'}, {managerId: 'x002'}, function(err) {"," *     ..."," * });"," * ```"," *"," * @param {Object} [where] Search conditions (optional)"," * @param {Object} data Changes to be made"," * @param {Object} [options] Options for update"," * @param {Function} cb Callback, called with (err, info)"," */","DataAccessObject.update =","DataAccessObject.updateAll = function(where, data, options, cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","","  assert(arguments.length >= 1, 'At least one argument is required');","","  if (data === undefined && options === undefined && cb === undefined && arguments.length === 1) {","    data = where;","    where = {};","  } else if (options === undefined && cb === undefined) {","    // One of:","    // updateAll(data, cb)","    // updateAll(where, data) -> Promise","    if (typeof data === 'function') {","      cb = data;","      data = where;","      where = {};","    }","  } else if (cb === undefined) {","    // One of:","    // updateAll(where, data, options) -> Promise","    // updateAll(where, data, cb)","    if (typeof options === 'function') {","      cb = options;","      options = {};","    }","  }","","  data = data || {};","  options = options || {};","  cb = cb || utils.createPromiseCallback();","","  assert(typeof where === 'object', 'The where argument must be an object');","  assert(typeof data === 'object', 'The data argument must be an object');","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","","  var Model = this;","  var connector = Model.getDataSource().connector;","  assert(typeof connector.update === 'function',","    'update() must be implemented by the connector');","","  var hookState = {};","","  var query = {where: where};","  this.applyScope(query);","  this.applyProperties(data);","","  where = query.where;","","  var context = {","    Model: Model,","    query: {where: where},","    hookState: hookState,","    options: options,","  };","  Model.notifyObserversOf('access', context, function(err, ctx) {","    if (err) return cb(err);","    var context = {","      Model: Model,","      where: ctx.query.where,","      data: data,","      hookState: hookState,","      options: options,","    };","    Model.notifyObserversOf('before save', context,","      function(err, ctx) {","        if (err) return cb(err);","        doUpdate(ctx.where, ctx.data);","      });","  });","","  function doUpdate(where, data) {","    try {","      where = removeUndefined(where);","      where = Model._coerce(where, options);","      data = removeUndefined(data);","      data = Model._coerce(data, options);","    } catch (err) {","      return process.nextTick(function() {","        cb(err);","      });","    }","","    function updateCallback(err, info) {","      if (err) return cb(err);","","      var context = {","        Model: Model,","        where: where,","        data: data,","        hookState: hookState,","        options: options,","        info: info,","      };","      Model.notifyObserversOf('after save', context, function(err, ctx) {","        return cb(err, info);","      });","    }","","    var context = {","      Model: Model,","      where: where,","      data: data,","      hookState: hookState,","      options: options,","    };","    Model.notifyObserversOf('persist', context, function(err, ctx) {","      if (err) return cb(err);","","      if (connector.update.length === 5) {","        connector.update(Model.modelName, where, data, options, updateCallback);","      } else {","        connector.update(Model.modelName, where, data, updateCallback);","      }","    });","  }","  return cb.promise;","};","","DataAccessObject.prototype.isNewRecord = function() {","  return !this.__persisted;","};","","/**"," * Return connector of current record"," * @private"," */","DataAccessObject.prototype.getConnector = function() {","  return this.getDataSource().connector;","};","","/**"," * Delete object from persistence"," *"," * Triggers `destroy` hook (async) before and after destroying object"," *"," * @param {Object} [options] Options for delete"," * @param {Function} cb Callback"," */","DataAccessObject.prototype.remove =","  DataAccessObject.prototype.delete =","    DataAccessObject.prototype.destroy = function(options, cb) {","      var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","      if (connectionPromise) {","        return connectionPromise;","      }","","      if (cb === undefined && typeof options === 'function') {","        cb = options;","        options = {};","      }","","      cb = cb || utils.createPromiseCallback();","      options = options || {};","","      assert(typeof options === 'object', 'The options argument should be an object');","      assert(typeof cb === 'function', 'The cb argument should be a function');","","      var inst = this;","      var connector = this.getConnector();","","      var Model = this.constructor;","      var id = getIdValue(this.constructor, this);","      var hookState = {};","","      if (isPKMissing(Model, cb))","        return cb.promise;","","      var context = {","        Model: Model,","        query: byIdQuery(Model, id),","        hookState: hookState,","        options: options,","      };","","      Model.notifyObserversOf('access', context, function(err, ctx) {","        if (err) return cb(err);","        var context = {","          Model: Model,","          where: ctx.query.where,","          instance: inst,","          hookState: hookState,","          options: options,","        };","        Model.notifyObserversOf('before delete', context, function(err, ctx) {","          if (err) return cb(err);","          doDeleteInstance(ctx.where);","        });","      });","","      function doDeleteInstance(where) {","        if (!isWhereByGivenId(Model, where, id)) {","          // A hook modified the query, it is no longer","          // a simple 'delete model with the given id'.","          // We must switch to full query-based delete.","          Model.deleteAll(where, {notify: false}, function(err, info) {","            if (err) return cb(err, false);","            var deleted = info && info.count > 0;","            if (Model.settings.strictDelete && !deleted) {","              err = new Error(g.f('No instance with {{id}} %s found for %s', id, Model.modelName));","              err.code = 'NOT_FOUND';","              err.statusCode = 404;","              return cb(err, false);","            }","            var context = {","              Model: Model,","              where: where,","              instance: inst,","              hookState: hookState,","              options: options,","              info: info,","            };","            Model.notifyObserversOf('after delete', context, function(err) {","              cb(err, info);","            });","          });","          return;","        }","","        inst.trigger('destroy', function(destroyed) {","          function destroyCallback(err, info) {","            if (err) return cb(err);","            var deleted = info && info.count > 0;","            if (Model.settings.strictDelete && !deleted) {","              err = new Error(g.f('No instance with {{id}} %s found for %s', id, Model.modelName));","              err.code = 'NOT_FOUND';","              err.statusCode = 404;","              return cb(err);","            }","","            destroyed(function() {","              var context = {","                Model: Model,","                where: where,","                instance: inst,","                hookState: hookState,","                options: options,","                info: info,","              };","              Model.notifyObserversOf('after delete', context, function(err) {","                cb(err, info);","              });","            });","          }","","          if (connector.destroy.length === 4) {","            connector.destroy(inst.constructor.modelName, id, options, destroyCallback);","          } else {","            connector.destroy(inst.constructor.modelName, id, destroyCallback);","          }","        }, null, cb);","      }","      return cb.promise;","    };","","/**"," * Set a single attribute."," * Equivalent to `setAttributes({name: value})`"," *"," * @param {String} name Name of property"," * @param {Mixed} value Value of property"," */","DataAccessObject.prototype.setAttribute = function setAttribute(name, value) {","  this[name] = value; // TODO [fabien] - currently not protected by applyProperties","};","","/**"," * Update a single attribute."," * Equivalent to `updateAttributes({name: value}, cb)`"," *"," * @param {String} name Name of property"," * @param {Mixed} value Value of property"," * @param {Function} cb Callback function called with (err, instance)"," */","DataAccessObject.prototype.updateAttribute = function updateAttribute(name, value, options, cb) {","  var data = {};","  data[name] = value;","  return this.updateAttributes(data, options, cb);","};","","/**"," * Update set of attributes."," *"," * @trigger `change` hook"," * @param {Object} data Data to update"," */","DataAccessObject.prototype.setAttributes = function setAttributes(data) {","  if (typeof data !== 'object') return;","","  this.constructor.applyProperties(data, this);","","  var Model = this.constructor;","  var inst = this;","","  // update instance's properties","  for (var key in data) {","    inst.setAttribute(key, data[key]);","  }","","  Model.emit('set', inst);","};","","DataAccessObject.prototype.unsetAttribute = function unsetAttribute(name, nullify) {","  if (nullify || this.constructor.definition.settings.persistUndefinedAsNull) {","    this[name] = this.__data[name] = null;","  } else {","    delete this[name];","    delete this.__data[name];","  }","};","","/**"," * Replace set of attributes."," * Performs validation before replacing."," *"," * @trigger `validation`, `save` and `update` hooks"," * @param {Object} data Data to replace"," * @param {Object} [options] Options for replace"," * @param {Function} cb Callback function called with (err, instance)"," */","DataAccessObject.prototype.replaceAttributes = function(data, options, cb) {","  var Model = this.constructor;","  var id = getIdValue(this.constructor, this);","  return Model.replaceById(id, data, options, cb);","};","","DataAccessObject.replaceById = function(id, data, options, cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","","  if (cb === undefined) {","    if (typeof options === 'function') {","      cb = options;","      options = {};","    }","  }","","  cb = cb || utils.createPromiseCallback();","  options = options || {};","","  assert((typeof data === 'object') && (data !== null),","          'The data argument must be an object');","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","","  var connector = this.getConnector();","","  var err;","  if (typeof connector.replaceById !== 'function') {","    err = new Error(g.f(","      'The connector %s does not support {{replaceById}} operation. This is not a bug in LoopBack. ' +","      'Please contact the authors of the connector, preferably via GitHub issues.',","      connector.name));","    return cb(err);","  }","","  var pkName = idName(this);","  if (!data[pkName]) data[pkName] = id;","","  var Model = this;","  var inst = new Model(data, {persisted: true});","  var enforced = {};","  this.applyProperties(enforced, inst);","  inst.setAttributes(enforced);","  Model = this.lookupModel(data); // data-specific","  if (Model !== inst.constructor) inst = new Model(data);","  var strict = inst.__strict;","","  if (isPKMissing(Model, cb))","    return cb.promise;","","  var model = Model.modelName;","  var hookState = {};","","  if (id !== data[pkName]) {","    err = new Error(g.f('{{id}} property (%s) ' +","            'cannot be updated from %s to %s', pkName, id, data[pkName]));","    err.statusCode = 400;","    process.nextTick(function() { cb(err); });","    return cb.promise;","  }","","  var context = {","    Model: Model,","    instance: inst,","    isNewInstance: false,","    hookState: hookState,","    options: options,","  };","","  Model.notifyObserversOf('before save', context, function(err, ctx) {","    if (err) return cb(err);","","    if (ctx.instance[pkName] !== id && !Model._warned.cannotOverwritePKInBeforeSaveHook) {","      Model._warned.cannotOverwritePKInBeforeSaveHook = true;","      g.warn('WARNING: {{id}} property cannot be changed from %s to %s for model:%s ' +","        'in {{\\'before save\\'}} operation hook', id, inst[pkName], Model.modelName);","    }","","    data = inst.toObject(false);","","    if (strict) {","      applyStrictCheck(Model, strict, data, inst, validateAndCallConnector);","    } else {","      validateAndCallConnector(null, data);","    }","","    function validateAndCallConnector(err, data) {","      if (err) return cb(err);","      data = removeUndefined(data);","      // update instance's properties","      inst.setAttributes(data);","","      var doValidate = true;","      if (options.validate === undefined) {","        if (Model.settings.automaticValidation !== undefined) {","          doValidate = Model.settings.automaticValidation;","        }","      } else {","        doValidate = options.validate;","      }","","      if (doValidate) {","        inst.isValid(function(valid) {","          if (!valid) return cb(new ValidationError(inst), inst);","","          callConnector();","        }, data, options);","      } else {","        callConnector();","      }","","      function callConnector() {","        copyData(data, inst);","        var typedData = convertSubsetOfPropertiesByType(inst, data);","        context.data = typedData;","","        function replaceCallback(err, data) {","          if (err) return cb(err);","","          var ctx = {","            Model: Model,","            hookState: hookState,","            data: context.data,","            isNewInstance: false,","            options: options,","          };","          Model.notifyObserversOf('loaded', ctx, function(err) {","            if (err) return cb(err);","","            if (ctx.data[pkName] !== id && !Model._warned.cannotOverwritePKInLoadedHook) {","              Model._warned.cannotOverwritePKInLoadedHook = true;","              g.warn('WARNING: {{id}} property cannot be changed from %s to %s for model:%s in ' +","                '{{\\'loaded\\'}} operation hook',","                id, ctx.data[pkName], Model.modelName);","            }","","            inst.__persisted = true;","            ctx.data[pkName] = id;","            inst.setAttributes(ctx.data);","","            var context = {","              Model: Model,","              instance: inst,","              isNewInstance: false,","              hookState: hookState,","              options: options,","            };","            Model.notifyObserversOf('after save', context, function(err) {","              cb(err, inst);","            });","          });","        }","","        var ctx = {","          Model: Model,","          where: byIdQuery(Model, id).where,","          data: context.data,","          isNewInstance: false,","          currentInstance: inst,","          hookState: hookState,","          options: options,","        };","        Model.notifyObserversOf('persist', ctx, function(err) {","          connector.replaceById(model, id,","            inst.constructor._forDB(context.data), options, replaceCallback);","        });","      }","    }","  });","  return cb.promise;","};","","/**"," * Update set of attributes."," * Performs validation before updating."," * NOTE: `patchOrCreate` is an alias."," *"," * @trigger `validation`, `save` and `update` hooks"," * @param {Object} data Data to update"," * @param {Object} [options] Options for updateAttributes"," * @param {Function} cb Callback function called with (err, instance)"," */","DataAccessObject.prototype.updateAttributes =","DataAccessObject.prototype.patchAttributes =","function(data, options, cb) {","  var self = this;","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","","  if (options === undefined && cb === undefined) {","    if (typeof data === 'function') {","      // updateAttributes(cb)","      cb = data;","      data = undefined;","    }","  } else if (cb === undefined) {","    if (typeof options === 'function') {","      // updateAttributes(data, cb)","      cb = options;","      options = {};","    }","  }","","  cb = cb || utils.createPromiseCallback();","  options = options || {};","","  assert((typeof data === 'object') && (data !== null),","    'The data argument must be an object');","  assert(typeof options === 'object', 'The options argument must be an object');","  assert(typeof cb === 'function', 'The cb argument must be a function');","","  var inst = this;","  var Model = this.constructor;","  var connector = inst.getConnector();","  assert(typeof connector.updateAttributes === 'function',","    'updateAttributes() must be implemented by the connector');","","  if (isPKMissing(Model, cb))","    return cb.promise;","","  var allowExtendedOperators = Model._allowExtendedOperators(options);","  var strict = this.__strict;","  var model = Model.modelName;","  var hookState = {};","","  // Convert the data to be plain object so that update won't be confused","  if (data instanceof Model) {","    data = data.toObject(false);","  }","  data = removeUndefined(data);","","  // Make sure id(s) cannot be changed","  var idNames = Model.definition.idNames();","  for (var i = 0, n = idNames.length; i < n; i++) {","    var idName = idNames[i];","    if (data[idName] !== undefined && !idEquals(data[idName], inst[idName])) {","      var err = new Error(g.f('{{id}} cannot be updated from ' +","        '%s to %s when {{forceId}} is set to true',","        inst[idName], data[idName]));","      err.statusCode = 400;","      process.nextTick(function() {","        cb(err);","      });","      return cb.promise;","    }","  }","","  var context = {","    Model: Model,","    where: byIdQuery(Model, getIdValue(Model, inst)).where,","    data: data,","    currentInstance: inst,","    hookState: hookState,","    options: options,","  };","","  Model.notifyObserversOf('before save', context, function(err, ctx) {","    if (err) return cb(err);","    data = ctx.data;","","    if (strict && !allowExtendedOperators) {","      applyStrictCheck(self.constructor, strict, data, inst, validateAndSave);","    } else {","      validateAndSave(null, data);","    }","","    function validateAndSave(err, data) {","      if (err) return cb(err);","      data = removeUndefined(data);","      var doValidate = true;","      if (options.validate === undefined) {","        if (Model.settings.automaticValidation !== undefined) {","          doValidate = Model.settings.automaticValidation;","        }","      } else {","        doValidate = options.validate;","      }","","      // update instance's properties","      try {","        inst.setAttributes(data);","      } catch (err) {","        return cb(err);","      }","","      if (doValidate) {","        inst.isValid(function(valid) {","          if (!valid) {","            cb(new ValidationError(inst), inst);","            return;","          }","","          triggerSave();","        }, data, options);","      } else {","        triggerSave();","      }","","      function triggerSave() {","        inst.trigger('save', function(saveDone) {","          inst.trigger('update', function(done) {","            copyData(data, inst);","            var typedData = convertSubsetOfPropertiesByType(inst, data);","            context.data = typedData;","","            function updateAttributesCallback(err) {","              if (err) return cb(err);","              var ctx = {","                Model: Model,","                data: context.data,","                hookState: hookState,","                options: options,","                isNewInstance: false,","              };","              Model.notifyObserversOf('loaded', ctx, function(err) {","                if (err) return cb(err);","","                inst.__persisted = true;","","                // By default, the instance passed to updateAttributes callback is NOT updated","                // with the changes made through persist/loaded hooks. To preserve","                // backwards compatibility, we introduced a new setting updateOnLoad,","                // which if set, will apply these changes to the model instance too.","                if (Model.settings.updateOnLoad) {","                  inst.setAttributes(ctx.data);","                }","                done.call(inst, function() {","                  saveDone.call(inst, function() {","                    if (err) return cb(err, inst);","","                    var context = {","                      Model: Model,","                      instance: inst,","                      isNewInstance: false,","                      hookState: hookState,","                      options: options,","                    };","                    Model.notifyObserversOf('after save', context, function(err) {","                      cb(err, inst);","                    });","                  });","                });","              });","            }","","            var ctx = {","              Model: Model,","              where: byIdQuery(Model, getIdValue(Model, inst)).where,","              data: context.data,","              currentInstance: inst,","              isNewInstance: false,","              hookState: hookState,","              options: options,","            };","            Model.notifyObserversOf('persist', ctx, function(err) {","              if (connector.updateAttributes.length === 5) {","                connector.updateAttributes(model, getIdValue(inst.constructor, inst),","                  inst.constructor._forDB(context.data), options, updateAttributesCallback);","              } else {","                connector.updateAttributes(model, getIdValue(inst.constructor, inst),","                  inst.constructor._forDB(context.data), updateAttributesCallback);","              }","            });","          }, data, cb);","        }, data, cb);","      }","    }","  });","  return cb.promise;","};","","/**"," * Reload object from persistence"," * Requires `id` member of `object` to be able to call `find`"," * @param {Function} cb Called with (err, instance) arguments"," * @private"," */","DataAccessObject.prototype.reload = function reload(cb) {","  var connectionPromise = stillConnecting(this.getDataSource(), this, arguments);","  if (connectionPromise) {","    return connectionPromise;","  }","","  return this.constructor.findById(getIdValue(this.constructor, this), cb);","};","","/*"," * Define readonly property on object"," *"," * @param {Object} obj"," * @param {String} key"," * @param {Mixed} value"," * @private"," */","function defineReadonlyProp(obj, key, value) {","  Object.defineProperty(obj, key, {","    writable: false,","    enumerable: true,","    configurable: true,","    value: value,","  });","}","","var defineScope = require('./scope.js').defineScope;","","/**"," * Define a scope for the model class. Scopes enable you to specify commonly-used"," * queries that you can reference as method calls on a model."," *"," * @param {String} name The scope name"," * @param {Object} query The query object for DataAccessObject.find()"," * @param {ModelClass} [targetClass] The model class for the query, default to"," * the declaring model"," */","DataAccessObject.scope = function(name, query, targetClass, methods, options) {","  var cls = this;","  if (options && options.isStatic === false) {","    cls = cls.prototype;","  }","  return defineScope(cls, targetClass || cls, name, query, methods, options);","};","","/*"," * Add 'include'"," */","jutil.mixin(DataAccessObject, Inclusion);","","/*"," * Add 'relation'"," */","jutil.mixin(DataAccessObject, Relation);","","/*"," * Add 'transaction'"," */","jutil.mixin(DataAccessObject, require('./transaction'));","","function PKMissingError(modelName) {","  this.name = 'PKMissingError';","  this.message = 'Primary key is missing for the ' + modelName + ' model';","}","PKMissingError.prototype = new Error();","","function isPKMissing(modelClass, cb) {","  var hasPK = modelClass.definition.hasPK();","  if (hasPK) return false;","  process.nextTick(function() {","    cb(new PKMissingError(modelClass.modelName));","  });","  return true;","}",""],"l":{"13":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"56":1,"57":0,"60":1,"61":0,"64":1,"65":0,"66":0,"70":1,"71":0,"72":0,"74":0,"75":0,"78":0,"81":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"100":0,"103":1,"104":0,"105":0,"109":1,"110":0,"111":0,"112":0,"113":0,"116":1,"117":0,"118":0,"120":0,"121":0,"123":0,"126":1,"127":0,"128":0,"130":0,"131":0,"132":0,"133":0,"134":0,"136":0,"139":0,"142":1,"143":0,"144":0,"145":0,"147":0,"150":1,"151":0,"152":0,"153":0,"157":1,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"172":1,"173":0,"180":1,"181":0,"190":1,"191":0,"193":0,"194":0,"195":0,"201":0,"202":0,"203":0,"204":0,"206":0,"210":1,"212":0,"232":1,"233":0,"234":0,"235":0,"238":0,"239":0,"240":0,"243":0,"245":0,"246":0,"248":0,"249":0,"251":0,"252":0,"254":0,"255":0,"259":0,"260":0,"261":0,"263":0,"264":0,"265":0,"267":0,"269":0,"273":0,"274":0,"275":0,"278":0,"279":0,"281":0,"284":0,"285":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"295":0,"297":0,"299":0,"301":0,"304":0,"305":0,"306":0,"309":0,"310":0,"312":0,"315":0,"316":0,"318":0,"319":0,"321":0,"328":0,"329":0,"331":0,"334":0,"335":0,"339":0,"340":0,"344":0,"345":0,"346":0,"348":0,"353":1,"354":0,"355":0,"356":0,"357":0,"358":0,"359":1,"360":0,"361":0,"362":0,"364":0,"365":0,"367":0,"368":0,"370":0,"372":0,"379":0,"380":0,"386":0,"387":0,"389":0,"390":0,"391":0,"392":0,"394":0,"401":0,"402":0,"403":0,"406":0,"413":0,"421":0,"422":0,"424":0,"425":0,"427":0,"434":0,"437":1,"438":0,"439":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"450":0,"467":1,"470":0,"471":0,"472":0,"475":0,"476":0,"478":0,"479":0,"481":0,"482":0,"484":0,"485":0,"489":0,"490":0,"491":0,"493":0,"494":0,"495":0,"497":0,"498":0,"499":0,"502":0,"504":0,"505":0,"506":0,"508":0,"509":0,"510":0,"513":0,"519":0,"521":1,"522":0,"524":0,"525":0,"526":0,"533":0,"534":0,"536":0,"537":0,"538":0,"539":0,"540":0,"542":0,"544":0,"545":0,"547":0,"549":0,"550":0,"551":0,"552":0,"553":0,"556":0,"559":0,"562":0,"563":0,"565":0,"566":0,"567":0,"568":0,"571":0,"572":0,"576":0,"580":1,"581":0,"582":0,"590":0,"591":0,"592":0,"593":0,"595":0,"599":1,"600":0,"601":0,"608":0,"609":0,"611":0,"612":0,"613":0,"614":0,"616":0,"618":0,"619":0,"621":0,"629":0,"630":0,"631":0,"634":0,"641":0,"642":0,"643":0,"645":0,"646":0,"647":0,"649":0,"652":0,"654":0,"655":0,"657":0,"658":0,"659":0,"664":0,"682":1,"684":0,"685":0,"686":0,"687":0,"689":0,"690":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"717":0,"718":1,"719":0,"720":0,"721":0,"722":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"744":0,"745":0,"747":0,"748":0,"749":0,"752":1,"753":0,"754":0,"755":0,"756":0,"757":0,"759":0,"760":0,"763":0,"771":0,"772":0,"773":0,"776":1,"777":0,"778":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"792":0,"794":0,"801":0,"802":0,"808":0,"809":0,"810":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"821":0,"822":0,"824":0,"825":0,"831":0,"842":1,"843":0,"844":0,"845":0,"848":0,"849":0,"851":0,"852":0,"856":0,"857":0,"858":0,"860":0,"861":0,"862":0,"864":0,"866":0,"867":0,"868":0,"870":0,"871":0,"872":0,"875":0,"876":0,"877":0,"880":0,"881":0,"882":0,"884":0,"887":0,"888":0,"894":0,"896":1,"897":0,"899":0,"900":0,"901":0,"902":0,"908":0,"909":0,"910":0,"911":0,"912":0,"914":0,"917":1,"918":0,"919":0,"920":0,"922":0,"924":0,"925":0,"929":0,"930":0,"933":0,"934":0,"935":0,"938":1,"939":0,"940":0,"948":0,"949":0,"950":0,"953":1,"954":0,"955":0,"962":0,"963":0,"965":0,"966":0,"967":0,"968":0,"970":0,"972":0,"973":0,"975":0,"983":0,"984":0,"992":0,"993":0,"994":0,"996":0,"997":0,"998":0,"1001":0,"1002":0,"1003":0,"1005":0,"1006":0,"1008":0,"1009":0,"1010":0,"1015":0,"1029":1,"1030":0,"1031":0,"1032":0,"1035":0,"1036":0,"1037":0,"1040":0,"1041":0,"1042":0,"1043":0,"1046":0,"1047":0,"1048":0,"1050":0,"1051":0,"1053":0,"1054":0,"1058":0,"1059":0,"1060":0,"1061":0,"1063":0,"1064":0,"1065":0,"1066":0,"1068":0,"1070":0,"1071":0,"1072":0,"1074":1,"1075":0,"1076":1,"1077":0,"1078":0,"1085":0,"1086":0,"1088":0,"1090":0,"1091":0,"1095":0,"1096":0,"1103":0,"1104":0,"1105":0,"1107":0,"1111":0,"1112":0,"1114":0,"1120":0,"1121":0,"1131":0,"1132":0,"1134":0,"1135":0,"1137":0,"1142":0,"1143":0,"1145":0,"1146":0,"1148":0,"1149":0,"1151":0,"1154":0,"1156":0,"1162":0,"1163":0,"1165":0,"1167":0,"1168":0,"1169":0,"1171":0,"1172":0,"1174":0,"1181":0,"1182":0,"1184":0,"1185":0,"1188":0,"1189":0,"1193":0,"1194":0,"1198":0,"1199":0,"1200":0,"1202":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1214":0,"1217":0,"1218":0,"1219":0,"1221":0,"1226":0,"1236":1,"1237":0,"1238":0,"1239":0,"1242":0,"1243":0,"1244":0,"1246":0,"1247":0,"1251":0,"1252":0,"1254":0,"1255":0,"1257":0,"1258":0,"1259":0,"1262":0,"1263":0,"1266":0,"1286":1,"1287":0,"1288":0,"1289":0,"1292":0,"1294":0,"1295":0,"1297":0,"1298":0,"1300":0,"1301":0,"1303":0,"1304":0,"1305":0,"1307":0,"1308":0,"1313":0,"1314":0,"1315":0,"1317":0,"1318":0,"1319":0,"1321":0,"1322":0,"1323":0,"1324":0,"1325":0,"1328":0,"1329":0,"1330":0,"1332":0,"1333":0,"1335":0,"1337":0,"1347":1,"1348":0,"1349":0,"1351":0,"1352":0,"1354":0,"1355":0,"1357":0,"1358":0,"1362":0,"1363":0,"1364":0,"1366":0,"1367":0,"1368":0,"1369":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":0,"1378":0,"1379":0,"1380":0,"1381":0,"1385":0,"1387":0,"1388":0,"1390":0,"1393":1,"1394":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":0,"1405":1,"1406":0,"1414":1,"1416":0,"1417":0,"1418":0,"1422":0,"1423":0,"1424":0,"1427":0,"1430":1,"1454":1,"1455":0,"1456":0,"1458":0,"1459":0,"1460":0,"1461":0,"1462":0,"1464":0,"1465":0,"1466":0,"1467":0,"1468":0,"1470":0,"1471":0,"1473":0,"1474":0,"1476":0,"1477":0,"1479":0,"1480":0,"1481":0,"1484":0,"1485":0,"1486":0,"1487":0,"1489":0,"1490":0,"1491":0,"1493":0,"1494":0,"1495":0,"1496":0,"1498":0,"1500":0,"1501":0,"1502":0,"1503":0,"1504":0,"1506":0,"1507":0,"1508":0,"1511":0,"1514":0,"1515":0,"1516":0,"1519":0,"1520":0,"1522":0,"1527":0,"1528":0,"1532":0,"1534":0,"1535":0,"1536":0,"1539":1,"1540":0,"1541":0,"1542":0,"1544":0,"1547":1,"1548":0,"1549":0,"1552":0,"1555":0,"1558":0,"1559":0,"1561":0,"1564":1,"1565":0,"1566":0,"1569":1,"1570":0,"1571":0,"1574":0,"1575":0,"1579":0,"1581":0,"1582":0,"1585":0,"1586":0,"1587":0,"1588":0,"1591":0,"1594":0,"1605":1,"1606":0,"1607":0,"1608":0,"1611":0,"1613":0,"1614":0,"1615":0,"1616":0,"1617":0,"1620":0,"1621":0,"1623":0,"1624":0,"1625":0,"1626":0,"1628":0,"1629":0,"1630":0,"1633":0,"1634":0,"1637":0,"1639":0,"1640":0,"1641":0,"1643":0,"1644":0,"1646":0,"1647":0,"1648":0,"1649":0,"1650":0,"1656":0,"1659":0,"1660":0,"1663":0,"1664":0,"1667":0,"1673":0,"1676":0,"1677":0,"1678":0,"1681":0,"1682":0,"1683":0,"1684":0,"1685":0,"1686":0,"1687":0,"1688":0,"1692":0,"1693":0,"1695":0,"1696":0,"1697":0,"1700":0,"1701":0,"1706":0,"1707":0,"1709":0,"1714":0,"1715":0,"1719":0,"1720":0,"1722":0,"1724":0,"1725":0,"1726":0,"1727":0,"1729":0,"1731":0,"1736":0,"1738":0,"1744":0,"1745":0,"1746":0,"1747":0,"1748":0,"1753":0,"1754":0,"1755":0,"1757":0,"1758":0,"1760":0,"1763":0,"1766":0,"1771":0,"1772":0,"1773":0,"1774":0,"1776":0,"1778":0,"1780":0,"1782":0,"1845":1,"1846":0,"1847":0,"1848":0,"1851":0,"1852":0,"1854":0,"1855":0,"1857":0,"1858":0,"1860":0,"1861":0,"1865":0,"1866":0,"1867":0,"1869":0,"1870":0,"1871":0,"1873":0,"1874":0,"1875":0,"1877":0,"1880":0,"1881":0,"1883":0,"1884":0,"1886":0,"1889":0,"1891":0,"1892":0,"1894":0,"1895":0,"1897":0,"1898":0,"1902":0,"1903":0,"1905":0,"1908":1,"1909":0,"1915":0,"1916":0,"1917":0,"1921":1,"1922":1,"1923":0,"1924":0,"1926":0,"1927":0,"1928":0,"1929":0,"1935":0,"1936":0,"1942":0,"1944":0,"1948":1,"1949":0,"1951":0,"1952":0,"1960":0,"1961":0,"1962":0,"1965":0,"1966":0,"1970":0,"1971":0,"1972":0,"1974":0,"1978":0,"1982":0,"1983":0,"1984":0,"1985":0,"1986":0,"1987":0,"1989":0,"1992":1,"1993":0,"1998":0,"1999":0,"2000":0,"2002":0,"2005":0,"2006":0,"2010":0,"2011":0,"2012":0,"2018":0,"2019":0,"2020":0,"2021":0,"2022":0,"2026":0,"2027":0,"2028":0,"2030":0,"2032":0,"2036":0,"2039":1,"2040":0,"2048":0,"2049":0,"2050":0,"2055":0,"2061":0,"2063":0,"2064":0,"2066":0,"2067":0,"2070":0,"2073":0,"2077":0,"2078":0,"2079":0,"2081":0,"2084":0,"2090":0,"2091":0,"2093":0,"2098":0,"2101":1,"2102":0,"2113":1,"2114":0,"2115":0,"2116":0,"2119":0,"2120":0,"2121":0,"2122":0,"2124":0,"2125":0,"2126":0,"2127":0,"2131":0,"2132":0,"2133":0,"2135":0,"2136":0,"2137":0,"2139":0,"2140":0,"2141":0,"2142":0,"2144":0,"2161":1,"2164":0,"2165":0,"2166":0,"2169":0,"2170":0,"2172":0,"2175":0,"2176":0,"2177":0,"2178":0,"2180":0,"2181":0,"2182":0,"2183":0,"2187":0,"2188":0,"2189":0,"2191":0,"2192":0,"2193":0,"2195":0,"2197":0,"2198":0,"2199":0,"2201":0,"2202":0,"2204":0,"2205":0,"2211":0,"2212":0,"2213":0,"2219":0,"2220":0,"2221":0,"2226":1,"2227":0,"2234":0,"2235":0,"2236":0,"2238":0,"2241":0,"2243":0,"2244":0,"2246":0,"2247":0,"2251":0,"2252":0,"2254":0,"2258":1,"2259":0,"2261":0,"2262":0,"2265":0,"2272":0,"2273":0,"2277":0,"2280":1,"2281":0,"2295":1,"2298":0,"2299":0,"2300":0,"2303":0,"2304":0,"2305":0,"2307":0,"2308":0,"2312":0,"2313":0,"2315":0,"2316":0,"2318":0,"2319":0,"2320":0,"2321":0,"2322":0,"2324":0,"2327":0,"2329":0,"2330":0,"2331":0,"2332":0,"2333":0,"2334":0,"2335":0,"2336":0,"2339":0,"2341":0,"2358":1,"2359":0,"2360":0,"2361":0,"2364":0,"2365":0,"2367":0,"2368":0,"2370":0,"2371":0,"2373":0,"2374":0,"2378":0,"2379":0,"2380":0,"2382":0,"2383":0,"2384":0,"2386":0,"2387":0,"2388":0,"2390":0,"2393":0,"2395":0,"2396":0,"2397":0,"2399":0,"2400":0,"2401":0,"2403":0,"2404":0,"2406":0,"2409":0,"2415":0,"2416":0,"2417":0,"2419":0,"2422":0,"2426":0,"2429":0,"2440":1,"2441":0,"2442":0,"2443":0,"2445":0,"2447":0,"2448":0,"2449":0,"2452":0,"2453":0,"2455":0,"2456":0,"2458":0,"2459":0,"2460":0,"2461":0,"2464":0,"2466":0,"2467":0,"2468":0,"2470":0,"2474":0,"2475":0,"2478":0,"2479":0,"2480":0,"2482":0,"2488":0,"2489":0,"2491":0,"2492":0,"2493":0,"2496":0,"2497":0,"2500":0,"2501":0,"2502":0,"2504":0,"2506":0,"2507":0,"2509":0,"2514":1,"2515":0,"2516":0,"2517":0,"2518":1,"2519":0,"2520":0,"2523":0,"2530":0,"2531":0,"2533":0,"2535":0,"2542":0,"2543":0,"2544":0,"2545":0,"2546":0,"2553":0,"2562":0,"2563":0,"2565":0,"2566":0,"2568":0,"2575":0,"2594":1,"2596":0,"2597":0,"2598":0,"2601":0,"2603":0,"2604":0,"2605":0,"2606":0,"2610":0,"2611":0,"2612":0,"2613":0,"2615":0,"2619":0,"2620":0,"2621":0,"2625":0,"2626":0,"2627":0,"2629":0,"2630":0,"2631":0,"2632":0,"2634":0,"2635":0,"2636":0,"2639":0,"2641":0,"2642":0,"2643":0,"2645":0,"2647":0,"2653":0,"2654":0,"2655":0,"2662":0,"2664":0,"2665":0,"2669":1,"2670":0,"2671":0,"2672":0,"2673":0,"2674":0,"2676":0,"2677":0,"2681":1,"2682":0,"2684":0,"2692":0,"2693":0,"2697":0,"2704":0,"2705":0,"2707":0,"2708":0,"2710":0,"2714":0,"2717":1,"2718":0,"2725":1,"2726":0,"2737":1,"2740":0,"2741":0,"2742":0,"2745":0,"2746":0,"2747":0,"2750":0,"2751":0,"2753":0,"2754":0,"2756":0,"2757":0,"2759":0,"2760":0,"2761":0,"2763":0,"2764":0,"2766":0,"2773":0,"2774":0,"2775":0,"2782":0,"2783":0,"2784":0,"2788":1,"2789":0,"2793":0,"2794":0,"2795":0,"2796":0,"2797":0,"2798":0,"2799":0,"2800":0,"2802":0,"2810":0,"2811":0,"2814":0,"2817":0,"2818":1,"2819":0,"2820":0,"2821":0,"2822":0,"2823":0,"2824":0,"2825":0,"2828":0,"2829":0,"2837":0,"2838":0,"2843":0,"2844":0,"2846":0,"2850":0,"2860":1,"2861":0,"2872":1,"2873":0,"2874":0,"2875":0,"2884":1,"2885":0,"2887":0,"2889":0,"2890":0,"2893":0,"2894":0,"2897":0,"2900":1,"2901":0,"2902":0,"2904":0,"2905":0,"2918":1,"2919":0,"2920":0,"2921":0,"2924":1,"2925":0,"2926":0,"2927":0,"2930":0,"2931":0,"2932":0,"2933":0,"2937":0,"2938":0,"2940":0,"2942":0,"2943":0,"2945":0,"2947":0,"2948":0,"2949":0,"2953":0,"2956":0,"2957":0,"2959":0,"2960":0,"2961":0,"2962":0,"2963":0,"2964":0,"2965":0,"2966":0,"2968":0,"2969":0,"2971":0,"2972":0,"2974":0,"2975":0,"2977":0,"2978":0,"2979":0,"2982":0,"2990":0,"2991":0,"2993":0,"2994":0,"2995":0,"2999":0,"3001":0,"3002":0,"3004":0,"3007":1,"3008":0,"3009":0,"3011":0,"3013":0,"3014":0,"3015":0,"3016":0,"3019":0,"3022":0,"3023":0,"3024":0,"3026":0,"3029":0,"3032":1,"3033":0,"3034":0,"3035":0,"3037":1,"3038":0,"3040":0,"3047":0,"3048":0,"3050":0,"3051":0,"3052":0,"3057":0,"3058":0,"3059":0,"3061":0,"3068":0,"3069":0,"3074":0,"3083":0,"3084":0,"3090":0,"3103":1,"3106":0,"3107":0,"3108":0,"3109":0,"3112":0,"3113":0,"3115":0,"3116":0,"3118":0,"3119":0,"3121":0,"3122":0,"3126":0,"3127":0,"3129":0,"3131":0,"3132":0,"3134":0,"3135":0,"3136":0,"3137":0,"3140":0,"3141":0,"3143":0,"3144":0,"3145":0,"3146":0,"3149":0,"3150":0,"3152":0,"3155":0,"3156":0,"3157":0,"3158":0,"3159":0,"3162":0,"3163":0,"3164":0,"3166":0,"3170":0,"3179":0,"3180":0,"3181":0,"3183":0,"3184":0,"3186":0,"3189":1,"3190":0,"3191":0,"3192":0,"3193":0,"3194":0,"3195":0,"3198":0,"3202":0,"3203":0,"3205":0,"3208":0,"3209":0,"3210":0,"3211":0,"3212":0,"3215":0,"3218":0,"3221":1,"3222":0,"3223":0,"3224":0,"3225":0,"3226":0,"3228":1,"3229":0,"3230":0,"3237":0,"3238":0,"3240":0,"3246":0,"3247":0,"3249":0,"3250":0,"3251":0,"3253":0,"3260":0,"3261":0,"3268":0,"3277":0,"3278":0,"3279":0,"3282":0,"3291":0,"3300":1,"3301":0,"3302":0,"3303":0,"3306":0,"3317":1,"3318":0,"3326":1,"3337":1,"3338":0,"3339":0,"3340":0,"3342":0,"3348":1,"3353":1,"3358":1,"3360":1,"3361":0,"3362":0,"3364":1,"3366":1,"3367":0,"3368":0,"3369":0,"3370":0,"3372":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/relations.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/relations.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"RelationMixin","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":25}}},"2":{"name":"hasMany","line":73,"loc":{"start":{"line":73,"column":24},"end":{"line":73,"column":58}}},"3":{"name":"(anonymous_3)","line":129,"loc":{"start":{"line":129,"column":26},"end":{"line":129,"column":52}}},"4":{"name":"hasAndBelongsToMany","line":164,"loc":{"start":{"line":164,"column":36},"end":{"line":164,"column":82}}},"5":{"name":"hasOne","line":168,"loc":{"start":{"line":168,"column":23},"end":{"line":168,"column":56}}},"6":{"name":"referencesMany","line":172,"loc":{"start":{"line":172,"column":31},"end":{"line":172,"column":72}}},"7":{"name":"embedsOne","line":176,"loc":{"start":{"line":176,"column":26},"end":{"line":176,"column":62}}},"8":{"name":"embedsMany","line":180,"loc":{"start":{"line":180,"column":27},"end":{"line":180,"column":64}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":48}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":53}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":31}},"4":{"start":{"line":20,"column":0},"end":{"line":21,"column":1}},"5":{"start":{"line":73,"column":0},"end":{"line":75,"column":2}},"6":{"start":{"line":74,"column":2},"end":{"line":74,"column":59}},"7":{"start":{"line":129,"column":0},"end":{"line":131,"column":2}},"8":{"start":{"line":130,"column":2},"end":{"line":130,"column":61}},"9":{"start":{"line":164,"column":0},"end":{"line":166,"column":2}},"10":{"start":{"line":165,"column":2},"end":{"line":165,"column":71}},"11":{"start":{"line":168,"column":0},"end":{"line":170,"column":2}},"12":{"start":{"line":169,"column":2},"end":{"line":169,"column":58}},"13":{"start":{"line":172,"column":0},"end":{"line":174,"column":2}},"14":{"start":{"line":173,"column":2},"end":{"line":173,"column":66}},"15":{"start":{"line":176,"column":0},"end":{"line":178,"column":2}},"16":{"start":{"line":177,"column":2},"end":{"line":177,"column":61}},"17":{"start":{"line":180,"column":0},"end":{"line":182,"column":2}},"18":{"start":{"line":181,"column":2},"end":{"line":181,"column":62}}},"branchMap":{},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","'use strict';","","/*!"," * Dependencies"," */","var relation = require('./relation-definition');","var RelationDefinition = relation.RelationDefinition;","","module.exports = RelationMixin;","","/**"," * RelationMixin class.  Use to define relationships between models."," *"," * @class RelationMixin"," */","function RelationMixin() {","}","","/**"," * Define a \"one to many\" relationship by specifying the model name"," *"," * Examples:"," * ```"," * User.hasMany(Post, {as: 'posts', foreignKey: 'authorId'});"," * ```"," *"," * ```"," * Book.hasMany(Chapter);"," * ```"," * Or, equivalently:"," * ```"," * Book.hasMany('chapters', {model: Chapter});"," * ```"," *"," * Query and create related models:"," *"," * ```js"," * Book.create(function(err, book) {"," *"," *   // Create a chapter instance ready to be saved in the data source."," *   var chapter = book.chapters.build({name: 'Chapter 1'});"," *"," *   // Save the new chapter"," *   chapter.save();"," *"," *  // you can also call the Chapter.create method with the `chapters` property which will build a chapter"," *  // instance and save the it in the data source."," *  book.chapters.create({name: 'Chapter 2'}, function(err, savedChapter) {"," *  // this callback is optional"," *  });"," *"," *   // Query chapters for the book"," *   book.chapters(function(err, chapters) {  // all chapters with bookId = book.id"," *     console.log(chapters);"," *   });"," *"," *   book.chapters({where: {name: 'test'}, function(err, chapters) {"," *    // All chapters with bookId = book.id and name = 'test'"," *     console.log(chapters);"," *   });"," * });"," *```"," * @param {Object|String} modelTo Model object (or String name of model) to which you are creating the relationship."," * @options {Object} parameters Configuration parameters; see below."," * @property {String} as Name of the property in the referring model that corresponds to the foreign key field in the related model."," * @property {String} foreignKey Property name of foreign key field."," * @property {Object} model Model object"," */","RelationMixin.hasMany = function hasMany(modelTo, params) {","  return RelationDefinition.hasMany(this, modelTo, params);","};","","/**"," * Declare \"belongsTo\" relation that sets up a one-to-one connection with another model, such that each"," * instance of the declaring model \"belongs to\" one instance of the other model."," *"," * For example, if an application includes users and posts, and each post can be written by exactly one user."," * The following code specifies that `Post` has a reference called `author` to the `User` model via the `userId` property of `Post`"," * as the foreign key."," * ```"," * Post.belongsTo(User, {as: 'author', foreignKey: 'userId'});"," * ```"," * You can then access the author in one of the following styles."," * Get the User object for the post author asynchronously:"," * ```"," * post.author(callback);"," * ```"," * Get the User object for the post author synchronously:"," * ```"," * post.author();"," * ```"," * Set the author to be the given user:"," * ```"," * post.author(user)"," * ```"," * Examples:"," *"," * Suppose the model Post has a *belongsTo* relationship with User (the author of the post). You could declare it this way:"," * ```js"," * Post.belongsTo(User, {as: 'author', foreignKey: 'userId'});"," * ```"," *"," * When a post is loaded, you can load the related author with:"," * ```js"," * post.author(function(err, user) {"," *     // the user variable is your user object"," * });"," * ```"," *"," * The related object is cached, so if later you try to get again the author, no additional request will be made."," * But there is an optional boolean parameter in first position that set whether or not you want to reload the cache:"," * ```js"," * post.author(true, function(err, user) {"," *     // The user is reloaded, even if it was already cached."," * });"," * ```"," * This optional parameter default value is false, so the related object will be loaded from cache if available."," *"," * @param {Class|String} modelTo Model object (or String name of model) to which you are creating the relationship."," * @options {Object} params Configuration parameters; see below."," * @property {String} as Name of the property in the referring model that corresponds to the foreign key field in the related model."," * @property {String} foreignKey Name of foreign key property."," *"," */","RelationMixin.belongsTo = function(modelTo, params) {","  return RelationDefinition.belongsTo(this, modelTo, params);","};","","/**"," * A hasAndBelongsToMany relation creates a direct many-to-many connection with another model, with no intervening model."," * For example, if your application includes users and groups, with each group having many users and each user appearing"," * in many groups, you could declare the models this way:"," * ```"," *  User.hasAndBelongsToMany('groups', {model: Group, foreignKey: 'groupId'});"," * ```"," *  Then, to get the groups to which the user belongs:"," * ```"," *  user.groups(callback);"," * ```"," *  Create a new group and connect it with the user:"," * ```"," *  user.groups.create(data, callback);"," * ```"," *  Connect an existing group with the user:"," * ```"," *  user.groups.add(group, callback);"," * ```"," *  Remove the user from the group:"," * ```"," *  user.groups.remove(group, callback);"," * ```"," *"," * @param {String|Object} modelTo Model object (or String name of model) to which you are creating the relationship."," * the relation"," * @options {Object} params Configuration parameters; see below."," * @property {String} as Name of the property in the referring model that corresponds to the foreign key field in the related model."," * @property {String} foreignKey Property name of foreign key field."," * @property {Object} model Model object"," */","RelationMixin.hasAndBelongsToMany = function hasAndBelongsToMany(modelTo, params) {","  return RelationDefinition.hasAndBelongsToMany(this, modelTo, params);","};","","RelationMixin.hasOne = function hasOne(modelTo, params) {","  return RelationDefinition.hasOne(this, modelTo, params);","};","","RelationMixin.referencesMany = function referencesMany(modelTo, params) {","  return RelationDefinition.referencesMany(this, modelTo, params);","};","","RelationMixin.embedsOne = function embedsOne(modelTo, params) {","  return RelationDefinition.embedsOne(this, modelTo, params);","};","","RelationMixin.embedsMany = function embedsMany(modelTo, params) {","  return RelationDefinition.embedsMany(this, modelTo, params);","};",""],"l":{"10":1,"11":1,"13":1,"20":1,"73":1,"74":0,"129":1,"130":0,"164":1,"165":0,"168":1,"169":0,"172":1,"173":0,"176":1,"177":0,"180":1,"181":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/include.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/include.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":1,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":1,"58":1,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":1,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":1,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":1,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":1,"224":0,"225":1,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":1,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":1,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":1,"268":0,"269":1,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":1,"278":0,"279":0,"280":0,"281":0,"282":1,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":1,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":1,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":1,"315":0,"316":0,"317":0,"318":0,"319":1,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":1,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":1,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":1,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":1,"376":0,"377":0,"378":1,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":1,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":1,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":1,"409":0,"410":1,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":1,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":1,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":1,"450":0,"451":1,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":1,"461":0,"462":0,"463":1,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":1,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0],"40":[0,0],"41":[0,0,0],"42":[0,0],"43":[0,0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0,0],"127":[0,0],"128":[0,0,0],"129":[0,0],"130":[0,0],"131":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0},"fnMap":{"1":{"name":"normalizeInclude","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":35}}},"2":{"name":"IncludeScope","line":54,"loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":29}}},"3":{"name":"(anonymous_3)","line":64,"loc":{"start":{"line":64,"column":36},"end":{"line":64,"column":47}}},"4":{"name":"(anonymous_4)","line":68,"loc":{"start":{"line":68,"column":33},"end":{"line":68,"column":44}}},"5":{"name":"lookupModel","line":78,"loc":{"start":{"line":78,"column":0},"end":{"line":78,"column":40}}},"6":{"name":"execTasksWithInterLeave","line":95,"loc":{"start":{"line":95,"column":0},"end":{"line":95,"column":50}}},"7":{"name":"(anonymous_7)","line":98,"loc":{"start":{"line":98,"column":19},"end":{"line":98,"column":30}}},"8":{"name":"(anonymous_8)","line":101,"loc":{"start":{"line":101,"column":28},"end":{"line":101,"column":48}}},"9":{"name":"(anonymous_9)","line":103,"loc":{"start":{"line":103,"column":25},"end":{"line":103,"column":36}}},"10":{"name":"Inclusion","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":124,"column":21}}},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":20},"end":{"line":158,"column":60}}},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":28},"end":{"line":169,"column":39}}},"13":{"name":"(anonymous_13)","line":183,"loc":{"start":{"line":183,"column":22},"end":{"line":183,"column":47}}},"14":{"name":"(anonymous_14)","line":185,"loc":{"start":{"line":185,"column":5},"end":{"line":185,"column":19}}},"15":{"name":"findWithForeignKeysByPage","line":198,"loc":{"start":{"line":198,"column":2},"end":{"line":198,"column":83}}},"16":{"name":"(anonymous_16)","line":240,"loc":{"start":{"line":240,"column":33},"end":{"line":240,"column":48}}},"17":{"name":"(anonymous_17)","line":243,"loc":{"start":{"line":243,"column":26},"end":{"line":243,"column":54}}},"18":{"name":"(anonymous_18)","line":257,"loc":{"start":{"line":257,"column":37},"end":{"line":257,"column":60}}},"19":{"name":"(anonymous_19)","line":262,"loc":{"start":{"line":262,"column":7},"end":{"line":262,"column":21}}},"20":{"name":"processIncludeItem","line":268,"loc":{"start":{"line":268,"column":2},"end":{"line":268,"column":58}}},"21":{"name":"(anonymous_21)","line":322,"loc":{"start":{"line":322,"column":27},"end":{"line":322,"column":42}}},"22":{"name":"includeHasManyThrough","line":389,"loc":{"start":{"line":389,"column":4},"end":{"line":389,"column":45}}},"23":{"name":"throughFetchHandler","line":432,"loc":{"start":{"line":432,"column":6},"end":{"line":432,"column":53}}},"24":{"name":"targetsFetchHandler","line":474,"loc":{"start":{"line":474,"column":8},"end":{"line":474,"column":51}}},"25":{"name":"subIncludesTask","line":482,"loc":{"start":{"line":482,"column":23},"end":{"line":482,"column":54}}},"26":{"name":"targetLinkingTask","line":488,"loc":{"start":{"line":488,"column":10},"end":{"line":488,"column":43}}},"27":{"name":"linkManyToMany","line":490,"loc":{"start":{"line":490,"column":12},"end":{"line":490,"column":50}}},"28":{"name":"(anonymous_28)","line":498,"loc":{"start":{"line":498,"column":34},"end":{"line":498,"column":54}}},"29":{"name":"includeReferencesMany","line":515,"loc":{"start":{"line":515,"column":4},"end":{"line":515,"column":45}}},"30":{"name":"targetFetchHandler","line":561,"loc":{"start":{"line":561,"column":6},"end":{"line":561,"column":48}}},"31":{"name":"subIncludesTask","line":568,"loc":{"start":{"line":568,"column":21},"end":{"line":568,"column":52}}},"32":{"name":"targetLinkingTask","line":575,"loc":{"start":{"line":575,"column":8},"end":{"line":575,"column":41}}},"33":{"name":"linkManyToMany","line":577,"loc":{"start":{"line":577,"column":10},"end":{"line":577,"column":48}}},"34":{"name":"(anonymous_34)","line":579,"loc":{"start":{"line":579,"column":32},"end":{"line":579,"column":52}}},"35":{"name":"includeHasManySimple","line":595,"loc":{"start":{"line":595,"column":4},"end":{"line":595,"column":44}}},"36":{"name":"targetFetchHandler","line":608,"loc":{"start":{"line":608,"column":6},"end":{"line":608,"column":48}}},"37":{"name":"(anonymous_37)","line":613,"loc":{"start":{"line":613,"column":51},"end":{"line":613,"column":82}}},"38":{"name":"(anonymous_38)","line":616,"loc":{"start":{"line":616,"column":33},"end":{"line":616,"column":44}}},"39":{"name":"includeHasMany","line":626,"loc":{"start":{"line":626,"column":4},"end":{"line":626,"column":38}}},"40":{"name":"targetFetchHandler","line":658,"loc":{"start":{"line":658,"column":6},"end":{"line":658,"column":48}}},"41":{"name":"subIncludesTask","line":665,"loc":{"start":{"line":665,"column":21},"end":{"line":665,"column":52}}},"42":{"name":"targetLinkingTask","line":671,"loc":{"start":{"line":671,"column":8},"end":{"line":671,"column":41}}},"43":{"name":"(anonymous_43)","line":673,"loc":{"start":{"line":673,"column":36},"end":{"line":673,"column":56}}},"44":{"name":"linkManyToOne","line":679,"loc":{"start":{"line":679,"column":10},"end":{"line":679,"column":47}}},"45":{"name":"(anonymous_45)","line":682,"loc":{"start":{"line":682,"column":34},"end":{"line":682,"column":59}}},"46":{"name":"(anonymous_46)","line":687,"loc":{"start":{"line":687,"column":15},"end":{"line":687,"column":47}}},"47":{"name":"(anonymous_47)","line":692,"loc":{"start":{"line":692,"column":54},"end":{"line":692,"column":68}}},"48":{"name":"(anonymous_48)","line":695,"loc":{"start":{"line":695,"column":48},"end":{"line":695,"column":68}}},"49":{"name":"(anonymous_49)","line":697,"loc":{"start":{"line":697,"column":17},"end":{"line":697,"column":31}}},"50":{"name":"includePolymorphicBelongsTo","line":712,"loc":{"start":{"line":712,"column":4},"end":{"line":712,"column":51}}},"51":{"name":"processPolymorphicType","line":745,"loc":{"start":{"line":745,"column":6},"end":{"line":745,"column":59}}},"52":{"name":"targetFetchHandler","line":770,"loc":{"start":{"line":770,"column":8},"end":{"line":770,"column":50}}},"53":{"name":"subIncludesTask","line":778,"loc":{"start":{"line":778,"column":23},"end":{"line":778,"column":54}}},"54":{"name":"targetLinkingTask","line":784,"loc":{"start":{"line":784,"column":10},"end":{"line":784,"column":43}}},"55":{"name":"linkOneToMany","line":787,"loc":{"start":{"line":787,"column":12},"end":{"line":787,"column":49}}},"56":{"name":"(anonymous_56)","line":789,"loc":{"start":{"line":789,"column":34},"end":{"line":789,"column":54}}},"57":{"name":"includePolymorphicHasOne","line":806,"loc":{"start":{"line":806,"column":4},"end":{"line":806,"column":48}}},"58":{"name":"targetFetchHandler","line":837,"loc":{"start":{"line":837,"column":6},"end":{"line":837,"column":48}}},"59":{"name":"subIncludesTask","line":844,"loc":{"start":{"line":844,"column":21},"end":{"line":844,"column":52}}},"60":{"name":"targetLinkingTask","line":850,"loc":{"start":{"line":850,"column":8},"end":{"line":850,"column":41}}},"61":{"name":"linkOneToOne","line":852,"loc":{"start":{"line":852,"column":10},"end":{"line":852,"column":46}}},"62":{"name":"includeOneToOne","line":870,"loc":{"start":{"line":870,"column":4},"end":{"line":870,"column":39}}},"63":{"name":"targetFetchHandler","line":907,"loc":{"start":{"line":907,"column":6},"end":{"line":907,"column":48}}},"64":{"name":"subIncludesTask","line":914,"loc":{"start":{"line":914,"column":21},"end":{"line":914,"column":52}}},"65":{"name":"targetLinkingTask","line":920,"loc":{"start":{"line":920,"column":8},"end":{"line":920,"column":41}}},"66":{"name":"linkOneToMany","line":922,"loc":{"start":{"line":922,"column":10},"end":{"line":922,"column":47}}},"67":{"name":"(anonymous_67)","line":925,"loc":{"start":{"line":925,"column":32},"end":{"line":925,"column":52}}},"68":{"name":"includeEmbeds","line":946,"loc":{"start":{"line":946,"column":4},"end":{"line":946,"column":37}}},"69":{"name":"(anonymous_69)","line":947,"loc":{"start":{"line":947,"column":23},"end":{"line":947,"column":43}}},"70":{"name":"processTargetObj","line":958,"loc":{"start":{"line":958,"column":4},"end":{"line":958,"column":45}}},"71":{"name":"setIncludeData","line":981,"loc":{"start":{"line":981,"column":6},"end":{"line":981,"column":42}}},"72":{"name":"(anonymous_72)","line":1014,"loc":{"start":{"line":1014,"column":29},"end":{"line":1014,"column":44}}},"73":{"name":"(anonymous_73)","line":1029,"loc":{"start":{"line":1029,"column":23},"end":{"line":1029,"column":45}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":40}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":56}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":22}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":26}},"10":{"start":{"line":23,"column":0},"end":{"line":52,"column":1}},"11":{"start":{"line":24,"column":2},"end":{"line":24,"column":17}},"12":{"start":{"line":25,"column":2},"end":{"line":51,"column":3}},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":21}},"14":{"start":{"line":27,"column":9},"end":{"line":51,"column":3}},"15":{"start":{"line":29,"column":4},"end":{"line":29,"column":20}},"16":{"start":{"line":30,"column":4},"end":{"line":30,"column":46}},"17":{"start":{"line":31,"column":4},"end":{"line":31,"column":17}},"18":{"start":{"line":32,"column":4},"end":{"line":40,"column":5}},"19":{"start":{"line":33,"column":6},"end":{"line":33,"column":49}},"20":{"start":{"line":34,"column":6},"end":{"line":34,"column":27}},"21":{"start":{"line":36,"column":6},"end":{"line":39,"column":7}},"22":{"start":{"line":37,"column":8},"end":{"line":37,"column":32}},"23":{"start":{"line":38,"column":8},"end":{"line":38,"column":29}},"24":{"start":{"line":41,"column":4},"end":{"line":41,"column":22}},"25":{"start":{"line":42,"column":9},"end":{"line":51,"column":3}},"26":{"start":{"line":43,"column":4},"end":{"line":43,"column":20}},"27":{"start":{"line":44,"column":4},"end":{"line":47,"column":5}},"28":{"start":{"line":45,"column":6},"end":{"line":45,"column":53}},"29":{"start":{"line":46,"column":6},"end":{"line":46,"column":50}},"30":{"start":{"line":48,"column":4},"end":{"line":48,"column":22}},"31":{"start":{"line":50,"column":4},"end":{"line":50,"column":19}},"32":{"start":{"line":54,"column":0},"end":{"line":62,"column":1}},"33":{"start":{"line":55,"column":2},"end":{"line":55,"column":49}},"34":{"start":{"line":56,"column":2},"end":{"line":61,"column":3}},"35":{"start":{"line":57,"column":4},"end":{"line":57,"column":58}},"36":{"start":{"line":58,"column":4},"end":{"line":58,"column":31}},"37":{"start":{"line":60,"column":4},"end":{"line":60,"column":25}},"38":{"start":{"line":64,"column":0},"end":{"line":66,"column":2}},"39":{"start":{"line":65,"column":2},"end":{"line":65,"column":42}},"40":{"start":{"line":68,"column":0},"end":{"line":70,"column":2}},"41":{"start":{"line":69,"column":2},"end":{"line":69,"column":23}},"42":{"start":{"line":78,"column":0},"end":{"line":88,"column":1}},"43":{"start":{"line":79,"column":2},"end":{"line":81,"column":3}},"44":{"start":{"line":80,"column":4},"end":{"line":80,"column":29}},"45":{"start":{"line":82,"column":2},"end":{"line":82,"column":48}},"46":{"start":{"line":83,"column":2},"end":{"line":87,"column":3}},"47":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"48":{"start":{"line":85,"column":6},"end":{"line":85,"column":26}},"49":{"start":{"line":95,"column":0},"end":{"line":111,"column":1}},"50":{"start":{"line":98,"column":2},"end":{"line":110,"column":5}},"51":{"start":{"line":100,"column":4},"end":{"line":109,"column":5}},"52":{"start":{"line":101,"column":6},"end":{"line":106,"column":9}},"53":{"start":{"line":103,"column":8},"end":{"line":105,"column":11}},"54":{"start":{"line":104,"column":10},"end":{"line":104,"column":30}},"55":{"start":{"line":108,"column":6},"end":{"line":108,"column":20}},"56":{"start":{"line":116,"column":0},"end":{"line":116,"column":27}},"57":{"start":{"line":124,"column":0},"end":{"line":125,"column":1}},"58":{"start":{"line":132,"column":0},"end":{"line":132,"column":46}},"59":{"start":{"line":158,"column":0},"end":{"line":1041,"column":2}},"60":{"start":{"line":159,"column":2},"end":{"line":162,"column":3}},"61":{"start":{"line":160,"column":4},"end":{"line":160,"column":17}},"62":{"start":{"line":161,"column":4},"end":{"line":161,"column":17}},"63":{"start":{"line":163,"column":2},"end":{"line":163,"column":18}},"64":{"start":{"line":165,"column":2},"end":{"line":172,"column":3}},"65":{"start":{"line":169,"column":4},"end":{"line":171,"column":7}},"66":{"start":{"line":170,"column":6},"end":{"line":170,"column":30}},"67":{"start":{"line":174,"column":2},"end":{"line":174,"column":38}},"68":{"start":{"line":177,"column":2},"end":{"line":177,"column":21}},"69":{"start":{"line":178,"column":2},"end":{"line":181,"column":3}},"70":{"start":{"line":180,"column":4},"end":{"line":180,"column":49}},"71":{"start":{"line":183,"column":2},"end":{"line":187,"column":5}},"72":{"start":{"line":184,"column":4},"end":{"line":184,"column":57}},"73":{"start":{"line":186,"column":4},"end":{"line":186,"column":27}},"74":{"start":{"line":198,"column":2},"end":{"line":266,"column":3}},"75":{"start":{"line":199,"column":4},"end":{"line":199,"column":25}},"76":{"start":{"line":200,"column":4},"end":{"line":212,"column":5}},"77":{"start":{"line":201,"column":6},"end":{"line":201,"column":45}},"78":{"start":{"line":202,"column":11},"end":{"line":212,"column":5}},"79":{"start":{"line":205,"column":6},"end":{"line":211,"column":7}},"80":{"start":{"line":206,"column":8},"end":{"line":210,"column":9}},"81":{"start":{"line":208,"column":10},"end":{"line":208,"column":56}},"82":{"start":{"line":209,"column":10},"end":{"line":209,"column":16}},"83":{"start":{"line":213,"column":4},"end":{"line":215,"column":5}},"84":{"start":{"line":214,"column":6},"end":{"line":214,"column":26}},"85":{"start":{"line":216,"column":4},"end":{"line":219,"column":5}},"86":{"start":{"line":218,"column":6},"end":{"line":218,"column":19}},"87":{"start":{"line":220,"column":4},"end":{"line":220,"column":34}},"88":{"start":{"line":221,"column":4},"end":{"line":223,"column":5}},"89":{"start":{"line":222,"column":6},"end":{"line":222,"column":26}},"90":{"start":{"line":224,"column":4},"end":{"line":226,"column":5}},"91":{"start":{"line":225,"column":6},"end":{"line":225,"column":45}},"92":{"start":{"line":228,"column":4},"end":{"line":228,"column":23}},"93":{"start":{"line":230,"column":4},"end":{"line":236,"column":5}},"94":{"start":{"line":231,"column":6},"end":{"line":231,"column":29}},"95":{"start":{"line":232,"column":6},"end":{"line":234,"column":7}},"96":{"start":{"line":233,"column":8},"end":{"line":233,"column":19}},"97":{"start":{"line":235,"column":6},"end":{"line":235,"column":48}},"98":{"start":{"line":238,"column":4},"end":{"line":238,"column":19}},"99":{"start":{"line":240,"column":4},"end":{"line":242,"column":7}},"100":{"start":{"line":241,"column":6},"end":{"line":241,"column":29}},"101":{"start":{"line":243,"column":4},"end":{"line":265,"column":7}},"102":{"start":{"line":244,"column":6},"end":{"line":244,"column":25}},"103":{"start":{"line":245,"column":6},"end":{"line":247,"column":7}},"104":{"start":{"line":246,"column":8},"end":{"line":246,"column":33}},"105":{"start":{"line":248,"column":6},"end":{"line":253,"column":7}},"106":{"start":{"line":249,"column":8},"end":{"line":249,"column":29}},"107":{"start":{"line":250,"column":8},"end":{"line":252,"column":9}},"108":{"start":{"line":251,"column":10},"end":{"line":251,"column":47}},"109":{"start":{"line":254,"column":6},"end":{"line":256,"column":8}},"110":{"start":{"line":257,"column":6},"end":{"line":261,"column":9}},"111":{"start":{"line":258,"column":8},"end":{"line":258,"column":34}},"112":{"start":{"line":258,"column":17},"end":{"line":258,"column":34}},"113":{"start":{"line":259,"column":8},"end":{"line":259,"column":38}},"114":{"start":{"line":260,"column":8},"end":{"line":260,"column":15}},"115":{"start":{"line":263,"column":6},"end":{"line":263,"column":30}},"116":{"start":{"line":263,"column":15},"end":{"line":263,"column":30}},"117":{"start":{"line":264,"column":6},"end":{"line":264,"column":22}},"118":{"start":{"line":268,"column":2},"end":{"line":1040,"column":3}},"119":{"start":{"line":269,"column":4},"end":{"line":269,"column":35}},"120":{"start":{"line":271,"column":4},"end":{"line":271,"column":21}},"121":{"start":{"line":272,"column":4},"end":{"line":272,"column":40}},"122":{"start":{"line":274,"column":4},"end":{"line":289,"column":5}},"123":{"start":{"line":275,"column":6},"end":{"line":275,"column":45}},"124":{"start":{"line":276,"column":6},"end":{"line":285,"column":7}},"125":{"start":{"line":277,"column":8},"end":{"line":277,"column":38}},"126":{"start":{"line":278,"column":8},"end":{"line":278,"column":37}},"127":{"start":{"line":280,"column":8},"end":{"line":280,"column":43}},"128":{"start":{"line":282,"column":8},"end":{"line":284,"column":9}},"129":{"start":{"line":283,"column":10},"end":{"line":283,"column":28}},"130":{"start":{"line":287,"column":6},"end":{"line":287,"column":29}},"131":{"start":{"line":288,"column":6},"end":{"line":288,"column":24}},"132":{"start":{"line":291,"column":4},"end":{"line":291,"column":43}},"133":{"start":{"line":292,"column":4},"end":{"line":295,"column":5}},"134":{"start":{"line":293,"column":6},"end":{"line":293,"column":100}},"135":{"start":{"line":294,"column":6},"end":{"line":294,"column":13}},"136":{"start":{"line":296,"column":4},"end":{"line":296,"column":43}},"137":{"start":{"line":302,"column":4},"end":{"line":308,"column":5}},"138":{"start":{"line":303,"column":6},"end":{"line":307,"column":7}},"139":{"start":{"line":304,"column":8},"end":{"line":305,"column":26}},"140":{"start":{"line":306,"column":8},"end":{"line":306,"column":15}},"141":{"start":{"line":311,"column":4},"end":{"line":313,"column":5}},"142":{"start":{"line":312,"column":6},"end":{"line":312,"column":18}},"143":{"start":{"line":315,"column":4},"end":{"line":315,"column":53}},"144":{"start":{"line":316,"column":4},"end":{"line":330,"column":5}},"145":{"start":{"line":317,"column":6},"end":{"line":317,"column":28}},"146":{"start":{"line":319,"column":6},"end":{"line":328,"column":7}},"147":{"start":{"line":321,"column":8},"end":{"line":321,"column":33}},"148":{"start":{"line":322,"column":8},"end":{"line":327,"column":11}},"149":{"start":{"line":323,"column":10},"end":{"line":323,"column":53}},"150":{"start":{"line":324,"column":10},"end":{"line":326,"column":11}},"151":{"start":{"line":325,"column":12},"end":{"line":325,"column":50}},"152":{"start":{"line":329,"column":6},"end":{"line":329,"column":62}},"153":{"start":{"line":332,"column":4},"end":{"line":332,"column":38}},"154":{"start":{"line":334,"column":4},"end":{"line":334,"column":31}},"155":{"start":{"line":335,"column":4},"end":{"line":338,"column":5}},"156":{"start":{"line":337,"column":6},"end":{"line":337,"column":40}},"157":{"start":{"line":339,"column":4},"end":{"line":343,"column":5}},"158":{"start":{"line":340,"column":6},"end":{"line":340,"column":34}},"159":{"start":{"line":341,"column":11},"end":{"line":343,"column":5}},"160":{"start":{"line":342,"column":6},"end":{"line":342,"column":36}},"161":{"start":{"line":348,"column":4},"end":{"line":382,"column":5}},"162":{"start":{"line":349,"column":6},"end":{"line":352,"column":7}},"163":{"start":{"line":351,"column":8},"end":{"line":351,"column":41}},"164":{"start":{"line":355,"column":6},"end":{"line":359,"column":7}},"165":{"start":{"line":358,"column":8},"end":{"line":358,"column":33}},"166":{"start":{"line":360,"column":6},"end":{"line":362,"column":7}},"167":{"start":{"line":361,"column":8},"end":{"line":361,"column":41}},"168":{"start":{"line":365,"column":6},"end":{"line":367,"column":7}},"169":{"start":{"line":366,"column":8},"end":{"line":366,"column":40}},"170":{"start":{"line":369,"column":6},"end":{"line":369,"column":32}},"171":{"start":{"line":371,"column":6},"end":{"line":376,"column":7}},"172":{"start":{"line":372,"column":8},"end":{"line":374,"column":9}},"173":{"start":{"line":373,"column":10},"end":{"line":373,"column":46}},"174":{"start":{"line":375,"column":8},"end":{"line":375,"column":47}},"175":{"start":{"line":377,"column":6},"end":{"line":379,"column":7}},"176":{"start":{"line":378,"column":8},"end":{"line":378,"column":33}},"177":{"start":{"line":381,"column":6},"end":{"line":381,"column":33}},"178":{"start":{"line":389,"column":4},"end":{"line":509,"column":5}},"179":{"start":{"line":390,"column":6},"end":{"line":390,"column":25}},"180":{"start":{"line":392,"column":6},"end":{"line":392,"column":24}},"181":{"start":{"line":393,"column":6},"end":{"line":405,"column":7}},"182":{"start":{"line":394,"column":8},"end":{"line":394,"column":26}},"183":{"start":{"line":397,"column":8},"end":{"line":397,"column":45}},"184":{"start":{"line":398,"column":8},"end":{"line":401,"column":9}},"185":{"start":{"line":399,"column":10},"end":{"line":399,"column":35}},"186":{"start":{"line":400,"column":10},"end":{"line":400,"column":46}},"187":{"start":{"line":403,"column":8},"end":{"line":403,"column":35}},"188":{"start":{"line":404,"column":8},"end":{"line":404,"column":49}},"189":{"start":{"line":408,"column":6},"end":{"line":410,"column":8}},"190":{"start":{"line":411,"column":6},"end":{"line":413,"column":8}},"191":{"start":{"line":414,"column":6},"end":{"line":419,"column":7}},"192":{"start":{"line":417,"column":8},"end":{"line":418,"column":45}},"193":{"start":{"line":423,"column":6},"end":{"line":424,"column":57}},"194":{"start":{"line":432,"column":6},"end":{"line":508,"column":7}},"195":{"start":{"line":433,"column":8},"end":{"line":435,"column":9}},"196":{"start":{"line":434,"column":10},"end":{"line":434,"column":31}},"197":{"start":{"line":437,"column":8},"end":{"line":437,"column":27}},"198":{"start":{"line":438,"column":8},"end":{"line":438,"column":31}},"199":{"start":{"line":439,"column":8},"end":{"line":453,"column":9}},"200":{"start":{"line":440,"column":10},"end":{"line":440,"column":42}},"201":{"start":{"line":441,"column":10},"end":{"line":441,"column":57}},"202":{"start":{"line":442,"column":10},"end":{"line":452,"column":11}},"203":{"start":{"line":444,"column":12},"end":{"line":444,"column":37}},"204":{"start":{"line":445,"column":12},"end":{"line":445,"column":65}},"205":{"start":{"line":446,"column":12},"end":{"line":446,"column":50}},"206":{"start":{"line":449,"column":12},"end":{"line":450,"column":47}},"207":{"start":{"line":451,"column":12},"end":{"line":451,"column":36}},"208":{"start":{"line":455,"column":8},"end":{"line":455,"column":53}},"209":{"start":{"line":456,"column":8},"end":{"line":458,"column":10}},"210":{"start":{"line":461,"column":8},"end":{"line":465,"column":9}},"211":{"start":{"line":462,"column":10},"end":{"line":462,"column":37}},"212":{"start":{"line":463,"column":15},"end":{"line":465,"column":9}},"213":{"start":{"line":464,"column":10},"end":{"line":464,"column":39}},"214":{"start":{"line":470,"column":8},"end":{"line":471,"column":58}},"215":{"start":{"line":474,"column":8},"end":{"line":507,"column":9}},"216":{"start":{"line":475,"column":10},"end":{"line":477,"column":11}},"217":{"start":{"line":476,"column":12},"end":{"line":476,"column":33}},"218":{"start":{"line":478,"column":10},"end":{"line":478,"column":25}},"219":{"start":{"line":481,"column":10},"end":{"line":485,"column":11}},"220":{"start":{"line":482,"column":12},"end":{"line":484,"column":15}},"221":{"start":{"line":483,"column":14},"end":{"line":483,"column":75}},"222":{"start":{"line":487,"column":10},"end":{"line":487,"column":40}},"223":{"start":{"line":488,"column":10},"end":{"line":504,"column":11}},"224":{"start":{"line":489,"column":12},"end":{"line":489,"column":54}},"225":{"start":{"line":490,"column":12},"end":{"line":503,"column":13}},"226":{"start":{"line":491,"column":14},"end":{"line":491,"column":51}},"227":{"start":{"line":492,"column":14},"end":{"line":496,"column":15}},"228":{"start":{"line":493,"column":16},"end":{"line":494,"column":34}},"229":{"start":{"line":495,"column":16},"end":{"line":495,"column":33}},"230":{"start":{"line":497,"column":14},"end":{"line":497,"column":63}},"231":{"start":{"line":498,"column":14},"end":{"line":502,"column":23}},"232":{"start":{"line":499,"column":16},"end":{"line":499,"column":40}},"233":{"start":{"line":499,"column":26},"end":{"line":499,"column":40}},"234":{"start":{"line":500,"column":16},"end":{"line":500,"column":65}},"235":{"start":{"line":501,"column":16},"end":{"line":501,"column":44}},"236":{"start":{"line":506,"column":10},"end":{"line":506,"column":51}},"237":{"start":{"line":515,"column":4},"end":{"line":589,"column":5}},"238":{"start":{"line":516,"column":6},"end":{"line":516,"column":51}},"239":{"start":{"line":517,"column":6},"end":{"line":517,"column":28}},"240":{"start":{"line":519,"column":6},"end":{"line":519,"column":29}},"241":{"start":{"line":520,"column":6},"end":{"line":545,"column":7}},"242":{"start":{"line":521,"column":8},"end":{"line":521,"column":26}},"243":{"start":{"line":524,"column":8},"end":{"line":524,"column":46}},"244":{"start":{"line":525,"column":8},"end":{"line":541,"column":9}},"245":{"start":{"line":526,"column":10},"end":{"line":530,"column":11}},"246":{"start":{"line":529,"column":12},"end":{"line":529,"column":46}},"247":{"start":{"line":533,"column":10},"end":{"line":533,"column":56}},"248":{"start":{"line":534,"column":10},"end":{"line":540,"column":11}},"249":{"start":{"line":535,"column":12},"end":{"line":535,"column":40}},"250":{"start":{"line":536,"column":12},"end":{"line":536,"column":50}},"251":{"start":{"line":537,"column":12},"end":{"line":538,"column":47}},"252":{"start":{"line":539,"column":12},"end":{"line":539,"column":30}},"253":{"start":{"line":543,"column":8},"end":{"line":543,"column":35}},"254":{"start":{"line":544,"column":8},"end":{"line":544,"column":49}},"255":{"start":{"line":546,"column":6},"end":{"line":548,"column":8}},"256":{"start":{"line":549,"column":6},"end":{"line":549,"column":40}},"257":{"start":{"line":553,"column":6},"end":{"line":554,"column":56}},"258":{"start":{"line":561,"column":6},"end":{"line":588,"column":7}},"259":{"start":{"line":562,"column":8},"end":{"line":564,"column":9}},"260":{"start":{"line":563,"column":10},"end":{"line":563,"column":31}},"261":{"start":{"line":565,"column":8},"end":{"line":565,"column":23}},"262":{"start":{"line":567,"column":8},"end":{"line":571,"column":9}},"263":{"start":{"line":568,"column":10},"end":{"line":570,"column":13}},"264":{"start":{"line":569,"column":12},"end":{"line":569,"column":73}},"265":{"start":{"line":572,"column":8},"end":{"line":572,"column":79}},"266":{"start":{"line":574,"column":8},"end":{"line":574,"column":38}},"267":{"start":{"line":575,"column":8},"end":{"line":585,"column":9}},"268":{"start":{"line":576,"column":10},"end":{"line":576,"column":52}},"269":{"start":{"line":577,"column":10},"end":{"line":584,"column":11}},"270":{"start":{"line":578,"column":12},"end":{"line":578,"column":75}},"271":{"start":{"line":579,"column":12},"end":{"line":583,"column":21}},"272":{"start":{"line":580,"column":14},"end":{"line":580,"column":38}},"273":{"start":{"line":580,"column":24},"end":{"line":580,"column":38}},"274":{"start":{"line":581,"column":14},"end":{"line":581,"column":63}},"275":{"start":{"line":582,"column":14},"end":{"line":582,"column":42}},"276":{"start":{"line":587,"column":8},"end":{"line":587,"column":49}},"277":{"start":{"line":595,"column":4},"end":{"line":620,"column":5}},"278":{"start":{"line":597,"column":6},"end":{"line":597,"column":96}},"279":{"start":{"line":599,"column":6},"end":{"line":601,"column":8}},"280":{"start":{"line":603,"column":6},"end":{"line":603,"column":40}},"281":{"start":{"line":605,"column":6},"end":{"line":606,"column":56}},"282":{"start":{"line":608,"column":6},"end":{"line":619,"column":7}},"283":{"start":{"line":609,"column":8},"end":{"line":611,"column":9}},"284":{"start":{"line":610,"column":10},"end":{"line":610,"column":31}},"285":{"start":{"line":612,"column":8},"end":{"line":612,"column":103}},"286":{"start":{"line":613,"column":8},"end":{"line":617,"column":11}},"287":{"start":{"line":614,"column":10},"end":{"line":614,"column":38}},"288":{"start":{"line":615,"column":10},"end":{"line":615,"column":64}},"289":{"start":{"line":616,"column":10},"end":{"line":616,"column":48}},"290":{"start":{"line":618,"column":8},"end":{"line":618,"column":28}},"291":{"start":{"line":626,"column":4},"end":{"line":706,"column":5}},"292":{"start":{"line":627,"column":6},"end":{"line":627,"column":25}},"293":{"start":{"line":629,"column":6},"end":{"line":629,"column":24}},"294":{"start":{"line":630,"column":6},"end":{"line":642,"column":7}},"295":{"start":{"line":631,"column":8},"end":{"line":631,"column":26}},"296":{"start":{"line":634,"column":8},"end":{"line":634,"column":45}},"297":{"start":{"line":635,"column":8},"end":{"line":638,"column":9}},"298":{"start":{"line":636,"column":10},"end":{"line":636,"column":35}},"299":{"start":{"line":637,"column":10},"end":{"line":637,"column":46}},"300":{"start":{"line":640,"column":8},"end":{"line":640,"column":35}},"301":{"start":{"line":641,"column":8},"end":{"line":641,"column":49}},"302":{"start":{"line":643,"column":6},"end":{"line":645,"column":8}},"303":{"start":{"line":646,"column":6},"end":{"line":646,"column":40}},"304":{"start":{"line":647,"column":6},"end":{"line":647,"column":43}},"305":{"start":{"line":649,"column":6},"end":{"line":650,"column":56}},"306":{"start":{"line":658,"column":6},"end":{"line":705,"column":7}},"307":{"start":{"line":659,"column":8},"end":{"line":661,"column":9}},"308":{"start":{"line":660,"column":10},"end":{"line":660,"column":31}},"309":{"start":{"line":662,"column":8},"end":{"line":662,"column":23}},"310":{"start":{"line":664,"column":8},"end":{"line":668,"column":9}},"311":{"start":{"line":665,"column":10},"end":{"line":667,"column":13}},"312":{"start":{"line":666,"column":12},"end":{"line":666,"column":73}},"313":{"start":{"line":670,"column":8},"end":{"line":670,"column":38}},"314":{"start":{"line":671,"column":8},"end":{"line":702,"column":9}},"315":{"start":{"line":672,"column":10},"end":{"line":676,"column":11}},"316":{"start":{"line":673,"column":12},"end":{"line":675,"column":21}},"317":{"start":{"line":674,"column":14},"end":{"line":674,"column":42}},"318":{"start":{"line":678,"column":10},"end":{"line":678,"column":51}},"319":{"start":{"line":679,"column":10},"end":{"line":701,"column":11}},"320":{"start":{"line":681,"column":12},"end":{"line":681,"column":62}},"321":{"start":{"line":682,"column":12},"end":{"line":700,"column":15}},"322":{"start":{"line":683,"column":14},"end":{"line":683,"column":54}},"323":{"start":{"line":684,"column":14},"end":{"line":684,"column":38}},"324":{"start":{"line":684,"column":24},"end":{"line":684,"column":38}},"325":{"start":{"line":685,"column":14},"end":{"line":685,"column":63}},"326":{"start":{"line":686,"column":14},"end":{"line":686,"column":42}},"327":{"start":{"line":688,"column":14},"end":{"line":690,"column":15}},"328":{"start":{"line":689,"column":16},"end":{"line":689,"column":33}},"329":{"start":{"line":692,"column":14},"end":{"line":694,"column":17}},"330":{"start":{"line":693,"column":16},"end":{"line":693,"column":72}},"331":{"start":{"line":695,"column":14},"end":{"line":699,"column":17}},"332":{"start":{"line":696,"column":16},"end":{"line":696,"column":44}},"333":{"start":{"line":698,"column":16},"end":{"line":698,"column":44}},"334":{"start":{"line":704,"column":8},"end":{"line":704,"column":49}},"335":{"start":{"line":712,"column":4},"end":{"line":800,"column":5}},"336":{"start":{"line":713,"column":6},"end":{"line":713,"column":31}},"337":{"start":{"line":715,"column":6},"end":{"line":715,"column":34}},"338":{"start":{"line":716,"column":6},"end":{"line":737,"column":7}},"339":{"start":{"line":717,"column":8},"end":{"line":717,"column":26}},"340":{"start":{"line":718,"column":8},"end":{"line":718,"column":54}},"341":{"start":{"line":719,"column":8},"end":{"line":719,"column":43}},"342":{"start":{"line":720,"column":8},"end":{"line":734,"column":9}},"343":{"start":{"line":721,"column":10},"end":{"line":721,"column":72}},"344":{"start":{"line":722,"column":10},"end":{"line":722,"column":78}},"345":{"start":{"line":723,"column":10},"end":{"line":723,"column":53}},"346":{"start":{"line":724,"column":10},"end":{"line":724,"column":60}},"347":{"start":{"line":725,"column":10},"end":{"line":725,"column":47}},"348":{"start":{"line":726,"column":10},"end":{"line":733,"column":11}},"349":{"start":{"line":727,"column":12},"end":{"line":727,"column":37}},"350":{"start":{"line":728,"column":12},"end":{"line":728,"column":50}},"351":{"start":{"line":729,"column":12},"end":{"line":729,"column":74}},"352":{"start":{"line":732,"column":12},"end":{"line":732,"column":49}},"353":{"start":{"line":735,"column":8},"end":{"line":735,"column":35}},"354":{"start":{"line":736,"column":8},"end":{"line":736,"column":51}},"355":{"start":{"line":738,"column":6},"end":{"line":739,"column":18}},"356":{"start":{"line":745,"column":6},"end":{"line":799,"column":7}},"357":{"start":{"line":746,"column":8},"end":{"line":746,"column":37}},"358":{"start":{"line":747,"column":8},"end":{"line":747,"column":45}},"359":{"start":{"line":748,"column":8},"end":{"line":748,"column":51}},"360":{"start":{"line":749,"column":8},"end":{"line":751,"column":10}},"361":{"start":{"line":752,"column":8},"end":{"line":753,"column":29}},"362":{"start":{"line":754,"column":8},"end":{"line":758,"column":9}},"363":{"start":{"line":755,"column":10},"end":{"line":756,"column":25}},"364":{"start":{"line":757,"column":10},"end":{"line":757,"column":17}},"365":{"start":{"line":759,"column":8},"end":{"line":759,"column":46}},"366":{"start":{"line":761,"column":8},"end":{"line":762,"column":58}},"367":{"start":{"line":770,"column":8},"end":{"line":798,"column":9}},"368":{"start":{"line":771,"column":10},"end":{"line":773,"column":11}},"369":{"start":{"line":772,"column":12},"end":{"line":772,"column":33}},"370":{"start":{"line":774,"column":10},"end":{"line":774,"column":25}},"371":{"start":{"line":777,"column":10},"end":{"line":781,"column":11}},"372":{"start":{"line":778,"column":12},"end":{"line":780,"column":15}},"373":{"start":{"line":779,"column":14},"end":{"line":779,"column":64}},"374":{"start":{"line":783,"column":10},"end":{"line":783,"column":40}},"375":{"start":{"line":784,"column":10},"end":{"line":795,"column":11}},"376":{"start":{"line":785,"column":12},"end":{"line":785,"column":62}},"377":{"start":{"line":786,"column":12},"end":{"line":786,"column":53}},"378":{"start":{"line":787,"column":12},"end":{"line":794,"column":13}},"379":{"start":{"line":788,"column":14},"end":{"line":788,"column":77}},"380":{"start":{"line":789,"column":14},"end":{"line":793,"column":23}},"381":{"start":{"line":790,"column":16},"end":{"line":790,"column":40}},"382":{"start":{"line":790,"column":26},"end":{"line":790,"column":40}},"383":{"start":{"line":791,"column":16},"end":{"line":791,"column":61}},"384":{"start":{"line":792,"column":16},"end":{"line":792,"column":44}},"385":{"start":{"line":797,"column":10},"end":{"line":797,"column":51}},"386":{"start":{"line":806,"column":4},"end":{"line":864,"column":5}},"387":{"start":{"line":807,"column":6},"end":{"line":807,"column":25}},"388":{"start":{"line":809,"column":6},"end":{"line":809,"column":24}},"389":{"start":{"line":810,"column":6},"end":{"line":822,"column":7}},"390":{"start":{"line":811,"column":8},"end":{"line":811,"column":26}},"391":{"start":{"line":814,"column":8},"end":{"line":814,"column":45}},"392":{"start":{"line":815,"column":8},"end":{"line":818,"column":9}},"393":{"start":{"line":816,"column":10},"end":{"line":816,"column":35}},"394":{"start":{"line":817,"column":10},"end":{"line":817,"column":46}},"395":{"start":{"line":820,"column":8},"end":{"line":820,"column":35}},"396":{"start":{"line":821,"column":8},"end":{"line":821,"column":51}},"397":{"start":{"line":823,"column":6},"end":{"line":825,"column":8}},"398":{"start":{"line":826,"column":6},"end":{"line":826,"column":40}},"399":{"start":{"line":828,"column":6},"end":{"line":829,"column":56}},"400":{"start":{"line":837,"column":6},"end":{"line":863,"column":7}},"401":{"start":{"line":838,"column":8},"end":{"line":840,"column":9}},"402":{"start":{"line":839,"column":10},"end":{"line":839,"column":31}},"403":{"start":{"line":841,"column":8},"end":{"line":841,"column":23}},"404":{"start":{"line":843,"column":8},"end":{"line":847,"column":9}},"405":{"start":{"line":844,"column":10},"end":{"line":846,"column":13}},"406":{"start":{"line":845,"column":12},"end":{"line":845,"column":73}},"407":{"start":{"line":849,"column":8},"end":{"line":849,"column":38}},"408":{"start":{"line":850,"column":8},"end":{"line":860,"column":9}},"409":{"start":{"line":851,"column":10},"end":{"line":851,"column":50}},"410":{"start":{"line":852,"column":10},"end":{"line":859,"column":11}},"411":{"start":{"line":853,"column":12},"end":{"line":853,"column":50}},"412":{"start":{"line":854,"column":12},"end":{"line":854,"column":41}},"413":{"start":{"line":854,"column":27},"end":{"line":854,"column":41}},"414":{"start":{"line":855,"column":12},"end":{"line":855,"column":52}},"415":{"start":{"line":856,"column":12},"end":{"line":856,"column":36}},"416":{"start":{"line":856,"column":22},"end":{"line":856,"column":36}},"417":{"start":{"line":857,"column":12},"end":{"line":857,"column":57}},"418":{"start":{"line":858,"column":12},"end":{"line":858,"column":40}},"419":{"start":{"line":862,"column":8},"end":{"line":862,"column":49}},"420":{"start":{"line":870,"column":4},"end":{"line":935,"column":5}},"421":{"start":{"line":871,"column":6},"end":{"line":871,"column":25}},"422":{"start":{"line":872,"column":6},"end":{"line":872,"column":30}},"423":{"start":{"line":873,"column":6},"end":{"line":892,"column":7}},"424":{"start":{"line":874,"column":8},"end":{"line":874,"column":26}},"425":{"start":{"line":875,"column":8},"end":{"line":882,"column":9}},"426":{"start":{"line":876,"column":10},"end":{"line":881,"column":11}},"427":{"start":{"line":878,"column":12},"end":{"line":878,"column":39}},"428":{"start":{"line":879,"column":12},"end":{"line":879,"column":55}},"429":{"start":{"line":880,"column":12},"end":{"line":880,"column":21}},"430":{"start":{"line":883,"column":8},"end":{"line":883,"column":45}},"431":{"start":{"line":884,"column":8},"end":{"line":889,"column":9}},"432":{"start":{"line":885,"column":10},"end":{"line":885,"column":35}},"433":{"start":{"line":886,"column":10},"end":{"line":886,"column":48}},"434":{"start":{"line":887,"column":10},"end":{"line":887,"column":74}},"435":{"start":{"line":888,"column":10},"end":{"line":888,"column":48}},"436":{"start":{"line":890,"column":8},"end":{"line":890,"column":35}},"437":{"start":{"line":891,"column":8},"end":{"line":891,"column":51}},"438":{"start":{"line":893,"column":6},"end":{"line":895,"column":8}},"439":{"start":{"line":896,"column":6},"end":{"line":896,"column":40}},"440":{"start":{"line":898,"column":6},"end":{"line":899,"column":56}},"441":{"start":{"line":907,"column":6},"end":{"line":934,"column":7}},"442":{"start":{"line":908,"column":8},"end":{"line":910,"column":9}},"443":{"start":{"line":909,"column":10},"end":{"line":909,"column":31}},"444":{"start":{"line":911,"column":8},"end":{"line":911,"column":23}},"445":{"start":{"line":913,"column":8},"end":{"line":917,"column":9}},"446":{"start":{"line":914,"column":10},"end":{"line":916,"column":13}},"447":{"start":{"line":915,"column":12},"end":{"line":915,"column":73}},"448":{"start":{"line":919,"column":8},"end":{"line":919,"column":38}},"449":{"start":{"line":920,"column":8},"end":{"line":931,"column":9}},"450":{"start":{"line":921,"column":10},"end":{"line":921,"column":51}},"451":{"start":{"line":922,"column":10},"end":{"line":930,"column":11}},"452":{"start":{"line":923,"column":12},"end":{"line":923,"column":50}},"453":{"start":{"line":924,"column":12},"end":{"line":924,"column":62}},"454":{"start":{"line":925,"column":12},"end":{"line":929,"column":21}},"455":{"start":{"line":926,"column":14},"end":{"line":926,"column":38}},"456":{"start":{"line":926,"column":24},"end":{"line":926,"column":38}},"457":{"start":{"line":927,"column":14},"end":{"line":927,"column":59}},"458":{"start":{"line":928,"column":14},"end":{"line":928,"column":42}},"459":{"start":{"line":933,"column":8},"end":{"line":933,"column":49}},"460":{"start":{"line":946,"column":4},"end":{"line":950,"column":5}},"461":{"start":{"line":947,"column":6},"end":{"line":949,"column":19}},"462":{"start":{"line":948,"column":8},"end":{"line":948,"column":36}},"463":{"start":{"line":958,"column":4},"end":{"line":1039,"column":5}},"464":{"start":{"line":959,"column":6},"end":{"line":959,"column":39}},"465":{"start":{"line":962,"column":6},"end":{"line":975,"column":7}},"466":{"start":{"line":964,"column":8},"end":{"line":974,"column":9}},"467":{"start":{"line":965,"column":10},"end":{"line":965,"column":37}},"468":{"start":{"line":967,"column":10},"end":{"line":967,"column":53}},"469":{"start":{"line":968,"column":10},"end":{"line":972,"column":11}},"470":{"start":{"line":969,"column":12},"end":{"line":969,"column":44}},"471":{"start":{"line":971,"column":12},"end":{"line":971,"column":37}},"472":{"start":{"line":973,"column":10},"end":{"line":973,"column":28}},"473":{"start":{"line":981,"column":6},"end":{"line":992,"column":7}},"474":{"start":{"line":982,"column":8},"end":{"line":990,"column":9}},"475":{"start":{"line":983,"column":10},"end":{"line":985,"column":11}},"476":{"start":{"line":984,"column":12},"end":{"line":984,"column":56}},"477":{"start":{"line":986,"column":10},"end":{"line":986,"column":44}},"478":{"start":{"line":989,"column":10},"end":{"line":989,"column":37}},"479":{"start":{"line":991,"column":8},"end":{"line":991,"column":25}},"480":{"start":{"line":995,"column":6},"end":{"line":999,"column":7}},"481":{"start":{"line":997,"column":8},"end":{"line":998,"column":20}},"482":{"start":{"line":1001,"column":6},"end":{"line":1001,"column":61}},"483":{"start":{"line":1005,"column":6},"end":{"line":1005,"column":18}},"484":{"start":{"line":1007,"column":6},"end":{"line":1027,"column":7}},"485":{"start":{"line":1008,"column":8},"end":{"line":1008,"column":30}},"486":{"start":{"line":1009,"column":8},"end":{"line":1009,"column":40}},"487":{"start":{"line":1012,"column":8},"end":{"line":1020,"column":9}},"488":{"start":{"line":1013,"column":10},"end":{"line":1013,"column":35}},"489":{"start":{"line":1014,"column":10},"end":{"line":1019,"column":13}},"490":{"start":{"line":1015,"column":12},"end":{"line":1015,"column":55}},"491":{"start":{"line":1016,"column":12},"end":{"line":1018,"column":13}},"492":{"start":{"line":1017,"column":14},"end":{"line":1017,"column":52}},"493":{"start":{"line":1022,"column":8},"end":{"line":1022,"column":64}},"494":{"start":{"line":1024,"column":8},"end":{"line":1024,"column":56}},"495":{"start":{"line":1026,"column":8},"end":{"line":1026,"column":59}},"496":{"start":{"line":1029,"column":6},"end":{"line":1038,"column":9}},"497":{"start":{"line":1030,"column":8},"end":{"line":1037,"column":9}},"498":{"start":{"line":1031,"column":10},"end":{"line":1031,"column":31}},"499":{"start":{"line":1033,"column":10},"end":{"line":1033,"column":37}},"500":{"start":{"line":1034,"column":10},"end":{"line":1034,"column":55}},"501":{"start":{"line":1036,"column":10},"end":{"line":1036,"column":50}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":9},"end":{"line":27,"column":9}},{"start":{"line":27,"column":9},"end":{"line":27,"column":9}}]},"3":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":14},"end":{"line":30,"column":25}},{"start":{"line":30,"column":29},"end":{"line":30,"column":45}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":9},"end":{"line":42,"column":9}},{"start":{"line":42,"column":9},"end":{"line":42,"column":9}}]},"6":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":36},"end":{"line":55,"column":41}},{"start":{"line":55,"column":45},"end":{"line":55,"column":47}}]},"7":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"8":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"9":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"10":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":2},"end":{"line":159,"column":2}},{"start":{"line":159,"column":2},"end":{"line":159,"column":2}}]},"11":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":6},"end":{"line":159,"column":35}},{"start":{"line":159,"column":39},"end":{"line":159,"column":55}}]},"12":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":2},"end":{"line":165,"column":2}},{"start":{"line":165,"column":2},"end":{"line":165,"column":2}}]},"13":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":6},"end":{"line":165,"column":14}},{"start":{"line":165,"column":19},"end":{"line":165,"column":41}},{"start":{"line":165,"column":45},"end":{"line":165,"column":65}},{"start":{"line":166,"column":7},"end":{"line":166,"column":29}},{"start":{"line":166,"column":33},"end":{"line":166,"column":53}},{"start":{"line":167,"column":7},"end":{"line":167,"column":29}},{"start":{"line":167,"column":33},"end":{"line":167,"column":66}}]},"14":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":6},"end":{"line":170,"column":8}},{"start":{"line":170,"column":12},"end":{"line":170,"column":29}}]},"15":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"16":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":6},"end":{"line":178,"column":21}},{"start":{"line":178,"column":25},"end":{"line":178,"column":49}},{"start":{"line":179,"column":4},"end":{"line":179,"column":37}}]},"17":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":4},"end":{"line":186,"column":6}},{"start":{"line":186,"column":10},"end":{"line":186,"column":26}}]},"18":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":4},"end":{"line":200,"column":4}},{"start":{"line":200,"column":4},"end":{"line":200,"column":4}}]},"19":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":11},"end":{"line":202,"column":11}},{"start":{"line":202,"column":11},"end":{"line":202,"column":11}}]},"20":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":8},"end":{"line":206,"column":8}},{"start":{"line":206,"column":8},"end":{"line":206,"column":8}}]},"21":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":12},"end":{"line":206,"column":39}},{"start":{"line":207,"column":10},"end":{"line":207,"column":56}}]},"22":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":4},"end":{"line":213,"column":4}},{"start":{"line":213,"column":4},"end":{"line":213,"column":4}}]},"23":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"24":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":8},"end":{"line":216,"column":20}},{"start":{"line":216,"column":24},"end":{"line":216,"column":35}},{"start":{"line":216,"column":39},"end":{"line":216,"column":52}}]},"25":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":4},"end":{"line":221,"column":4}},{"start":{"line":221,"column":4},"end":{"line":221,"column":4}}]},"26":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":8},"end":{"line":221,"column":23}},{"start":{"line":221,"column":27},"end":{"line":221,"column":40}}]},"27":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":224,"column":4}},{"start":{"line":224,"column":4},"end":{"line":224,"column":4}}]},"28":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":6},"end":{"line":232,"column":6}},{"start":{"line":232,"column":6},"end":{"line":232,"column":6}}]},"29":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":6},"end":{"line":248,"column":6}},{"start":{"line":248,"column":6},"end":{"line":248,"column":6}}]},"30":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8}},{"start":{"line":258,"column":8},"end":{"line":258,"column":8}}]},"31":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":6},"end":{"line":263,"column":6}},{"start":{"line":263,"column":6},"end":{"line":263,"column":6}}]},"32":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":4},"end":{"line":274,"column":4}},{"start":{"line":274,"column":4},"end":{"line":274,"column":4}}]},"33":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":6},"end":{"line":276,"column":6}},{"start":{"line":276,"column":6},"end":{"line":276,"column":6}}]},"34":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":8},"end":{"line":282,"column":8}},{"start":{"line":282,"column":8},"end":{"line":282,"column":8}}]},"35":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":4},"end":{"line":292,"column":4}},{"start":{"line":292,"column":4},"end":{"line":292,"column":4}}]},"36":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":4},"end":{"line":302,"column":4}},{"start":{"line":302,"column":4},"end":{"line":302,"column":4}}]},"37":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":6},"end":{"line":303,"column":6}},{"start":{"line":303,"column":6},"end":{"line":303,"column":6}}]},"38":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":4},"end":{"line":311,"column":4}},{"start":{"line":311,"column":4},"end":{"line":311,"column":4}}]},"39":{"line":315,"type":"binary-expr","locations":[{"start":{"line":315,"column":18},"end":{"line":315,"column":23}},{"start":{"line":315,"column":27},"end":{"line":315,"column":45}},{"start":{"line":315,"column":50},"end":{"line":315,"column":52}}]},"40":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":4},"end":{"line":316,"column":4}},{"start":{"line":316,"column":4},"end":{"line":316,"column":4}}]},"41":{"line":316,"type":"binary-expr","locations":[{"start":{"line":316,"column":9},"end":{"line":316,"column":26}},{"start":{"line":316,"column":30},"end":{"line":316,"column":59}},{"start":{"line":316,"column":64},"end":{"line":316,"column":69}}]},"42":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":6},"end":{"line":319,"column":6}},{"start":{"line":319,"column":6},"end":{"line":319,"column":6}}]},"43":{"line":319,"type":"binary-expr","locations":[{"start":{"line":319,"column":10},"end":{"line":319,"column":23}},{"start":{"line":319,"column":27},"end":{"line":319,"column":52}},{"start":{"line":320,"column":8},"end":{"line":320,"column":34}}]},"44":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":10},"end":{"line":324,"column":10}},{"start":{"line":324,"column":10},"end":{"line":324,"column":10}}]},"45":{"line":324,"type":"binary-expr","locations":[{"start":{"line":324,"column":14},"end":{"line":324,"column":17}},{"start":{"line":324,"column":21},"end":{"line":324,"column":45}}]},"46":{"line":332,"type":"binary-expr","locations":[{"start":{"line":332,"column":19},"end":{"line":332,"column":31}},{"start":{"line":332,"column":35},"end":{"line":332,"column":37}}]},"47":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":4},"end":{"line":335,"column":4}},{"start":{"line":335,"column":4},"end":{"line":335,"column":4}}]},"48":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":4},"end":{"line":339,"column":4}},{"start":{"line":339,"column":4},"end":{"line":339,"column":4}}]},"49":{"line":339,"type":"binary-expr","locations":[{"start":{"line":339,"column":8},"end":{"line":339,"column":29}},{"start":{"line":339,"column":33},"end":{"line":339,"column":70}}]},"50":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":11},"end":{"line":341,"column":11}},{"start":{"line":341,"column":11},"end":{"line":341,"column":11}}]},"51":{"line":341,"type":"binary-expr","locations":[{"start":{"line":341,"column":15},"end":{"line":341,"column":36}},{"start":{"line":341,"column":40},"end":{"line":341,"column":63}}]},"52":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":4},"end":{"line":348,"column":4}},{"start":{"line":348,"column":4},"end":{"line":348,"column":4}}]},"53":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":6},"end":{"line":349,"column":6}},{"start":{"line":349,"column":6},"end":{"line":349,"column":6}}]},"54":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":6},"end":{"line":355,"column":6}},{"start":{"line":355,"column":6},"end":{"line":355,"column":6}}]},"55":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":6},"end":{"line":360,"column":6}},{"start":{"line":360,"column":6},"end":{"line":360,"column":6}}]},"56":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":6},"end":{"line":365,"column":6}},{"start":{"line":365,"column":6},"end":{"line":365,"column":6}}]},"57":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":10},"end":{"line":365,"column":37}},{"start":{"line":365,"column":41},"end":{"line":365,"column":58}},{"start":{"line":365,"column":62},"end":{"line":365,"column":73}}]},"58":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":6},"end":{"line":371,"column":6}},{"start":{"line":371,"column":6},"end":{"line":371,"column":6}}]},"59":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":8},"end":{"line":372,"column":8}},{"start":{"line":372,"column":8},"end":{"line":372,"column":8}}]},"60":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":6},"end":{"line":377,"column":6}},{"start":{"line":377,"column":6},"end":{"line":377,"column":6}}]},"61":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":8},"end":{"line":398,"column":8}},{"start":{"line":398,"column":8},"end":{"line":398,"column":8}}]},"62":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":6},"end":{"line":414,"column":6}},{"start":{"line":414,"column":6},"end":{"line":414,"column":6}}]},"63":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":8},"end":{"line":433,"column":8}},{"start":{"line":433,"column":8},"end":{"line":433,"column":8}}]},"64":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":10},"end":{"line":442,"column":10}},{"start":{"line":442,"column":10},"end":{"line":442,"column":10}}]},"65":{"line":450,"type":"binary-expr","locations":[{"start":{"line":450,"column":14},"end":{"line":450,"column":40}},{"start":{"line":450,"column":44},"end":{"line":450,"column":46}}]},"66":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":8},"end":{"line":461,"column":8}},{"start":{"line":461,"column":8},"end":{"line":461,"column":8}}]},"67":{"line":461,"type":"binary-expr","locations":[{"start":{"line":461,"column":12},"end":{"line":461,"column":33}},{"start":{"line":461,"column":37},"end":{"line":461,"column":73}}]},"68":{"line":463,"type":"if","locations":[{"start":{"line":463,"column":15},"end":{"line":463,"column":15}},{"start":{"line":463,"column":15},"end":{"line":463,"column":15}}]},"69":{"line":463,"type":"binary-expr","locations":[{"start":{"line":463,"column":19},"end":{"line":463,"column":40}},{"start":{"line":463,"column":44},"end":{"line":463,"column":66}}]},"70":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":10},"end":{"line":475,"column":10}},{"start":{"line":475,"column":10},"end":{"line":475,"column":10}}]},"71":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":10},"end":{"line":481,"column":10}},{"start":{"line":481,"column":10},"end":{"line":481,"column":10}}]},"72":{"line":481,"type":"binary-expr","locations":[{"start":{"line":481,"column":14},"end":{"line":481,"column":24}},{"start":{"line":481,"column":28},"end":{"line":481,"column":35}}]},"73":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":14},"end":{"line":492,"column":14}},{"start":{"line":492,"column":14},"end":{"line":492,"column":14}}]},"74":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":16},"end":{"line":499,"column":16}},{"start":{"line":499,"column":16},"end":{"line":499,"column":16}}]},"75":{"line":525,"type":"if","locations":[{"start":{"line":525,"column":8},"end":{"line":525,"column":8}},{"start":{"line":525,"column":8},"end":{"line":525,"column":8}}]},"76":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":10},"end":{"line":526,"column":10}},{"start":{"line":526,"column":10},"end":{"line":526,"column":10}}]},"77":{"line":538,"type":"binary-expr","locations":[{"start":{"line":538,"column":14},"end":{"line":538,"column":40}},{"start":{"line":538,"column":44},"end":{"line":538,"column":46}}]},"78":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":8},"end":{"line":562,"column":8}},{"start":{"line":562,"column":8},"end":{"line":562,"column":8}}]},"79":{"line":567,"type":"if","locations":[{"start":{"line":567,"column":8},"end":{"line":567,"column":8}},{"start":{"line":567,"column":8},"end":{"line":567,"column":8}}]},"80":{"line":567,"type":"binary-expr","locations":[{"start":{"line":567,"column":12},"end":{"line":567,"column":22}},{"start":{"line":567,"column":26},"end":{"line":567,"column":33}}]},"81":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":14},"end":{"line":580,"column":14}},{"start":{"line":580,"column":14},"end":{"line":580,"column":14}}]},"82":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":8},"end":{"line":609,"column":8}},{"start":{"line":609,"column":8},"end":{"line":609,"column":8}}]},"83":{"line":635,"type":"if","locations":[{"start":{"line":635,"column":8},"end":{"line":635,"column":8}},{"start":{"line":635,"column":8},"end":{"line":635,"column":8}}]},"84":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":8},"end":{"line":659,"column":8}},{"start":{"line":659,"column":8},"end":{"line":659,"column":8}}]},"85":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":8},"end":{"line":664,"column":8}},{"start":{"line":664,"column":8},"end":{"line":664,"column":8}}]},"86":{"line":664,"type":"binary-expr","locations":[{"start":{"line":664,"column":12},"end":{"line":664,"column":22}},{"start":{"line":664,"column":26},"end":{"line":664,"column":33}}]},"87":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":10},"end":{"line":672,"column":10}},{"start":{"line":672,"column":10},"end":{"line":672,"column":10}}]},"88":{"line":684,"type":"if","locations":[{"start":{"line":684,"column":14},"end":{"line":684,"column":14}},{"start":{"line":684,"column":14},"end":{"line":684,"column":14}}]},"89":{"line":688,"type":"if","locations":[{"start":{"line":688,"column":14},"end":{"line":688,"column":14}},{"start":{"line":688,"column":14},"end":{"line":688,"column":14}}]},"90":{"line":720,"type":"if","locations":[{"start":{"line":720,"column":8},"end":{"line":720,"column":8}},{"start":{"line":720,"column":8},"end":{"line":720,"column":8}}]},"91":{"line":721,"type":"binary-expr","locations":[{"start":{"line":721,"column":39},"end":{"line":721,"column":65}},{"start":{"line":721,"column":69},"end":{"line":721,"column":71}}]},"92":{"line":722,"type":"binary-expr","locations":[{"start":{"line":722,"column":42},"end":{"line":722,"column":71}},{"start":{"line":722,"column":75},"end":{"line":722,"column":77}}]},"93":{"line":726,"type":"if","locations":[{"start":{"line":726,"column":10},"end":{"line":726,"column":10}},{"start":{"line":726,"column":10},"end":{"line":726,"column":10}}]},"94":{"line":729,"type":"binary-expr","locations":[{"start":{"line":729,"column":41},"end":{"line":729,"column":67}},{"start":{"line":729,"column":71},"end":{"line":729,"column":73}}]},"95":{"line":754,"type":"if","locations":[{"start":{"line":754,"column":8},"end":{"line":754,"column":8}},{"start":{"line":754,"column":8},"end":{"line":754,"column":8}}]},"96":{"line":771,"type":"if","locations":[{"start":{"line":771,"column":10},"end":{"line":771,"column":10}},{"start":{"line":771,"column":10},"end":{"line":771,"column":10}}]},"97":{"line":777,"type":"if","locations":[{"start":{"line":777,"column":10},"end":{"line":777,"column":10}},{"start":{"line":777,"column":10},"end":{"line":777,"column":10}}]},"98":{"line":777,"type":"binary-expr","locations":[{"start":{"line":777,"column":14},"end":{"line":777,"column":24}},{"start":{"line":777,"column":28},"end":{"line":777,"column":35}}]},"99":{"line":790,"type":"if","locations":[{"start":{"line":790,"column":16},"end":{"line":790,"column":16}},{"start":{"line":790,"column":16},"end":{"line":790,"column":16}}]},"100":{"line":815,"type":"if","locations":[{"start":{"line":815,"column":8},"end":{"line":815,"column":8}},{"start":{"line":815,"column":8},"end":{"line":815,"column":8}}]},"101":{"line":838,"type":"if","locations":[{"start":{"line":838,"column":8},"end":{"line":838,"column":8}},{"start":{"line":838,"column":8},"end":{"line":838,"column":8}}]},"102":{"line":843,"type":"if","locations":[{"start":{"line":843,"column":8},"end":{"line":843,"column":8}},{"start":{"line":843,"column":8},"end":{"line":843,"column":8}}]},"103":{"line":843,"type":"binary-expr","locations":[{"start":{"line":843,"column":12},"end":{"line":843,"column":22}},{"start":{"line":843,"column":26},"end":{"line":843,"column":33}}]},"104":{"line":854,"type":"if","locations":[{"start":{"line":854,"column":12},"end":{"line":854,"column":12}},{"start":{"line":854,"column":12},"end":{"line":854,"column":12}}]},"105":{"line":856,"type":"if","locations":[{"start":{"line":856,"column":12},"end":{"line":856,"column":12}},{"start":{"line":856,"column":12},"end":{"line":856,"column":12}}]},"106":{"line":875,"type":"if","locations":[{"start":{"line":875,"column":8},"end":{"line":875,"column":8}},{"start":{"line":875,"column":8},"end":{"line":875,"column":8}}]},"107":{"line":876,"type":"if","locations":[{"start":{"line":876,"column":10},"end":{"line":876,"column":10}},{"start":{"line":876,"column":10},"end":{"line":876,"column":10}}]},"108":{"line":876,"type":"binary-expr","locations":[{"start":{"line":876,"column":14},"end":{"line":876,"column":44}},{"start":{"line":877,"column":12},"end":{"line":877,"column":47}}]},"109":{"line":884,"type":"if","locations":[{"start":{"line":884,"column":8},"end":{"line":884,"column":8}},{"start":{"line":884,"column":8},"end":{"line":884,"column":8}}]},"110":{"line":887,"type":"binary-expr","locations":[{"start":{"line":887,"column":40},"end":{"line":887,"column":67}},{"start":{"line":887,"column":71},"end":{"line":887,"column":73}}]},"111":{"line":908,"type":"if","locations":[{"start":{"line":908,"column":8},"end":{"line":908,"column":8}},{"start":{"line":908,"column":8},"end":{"line":908,"column":8}}]},"112":{"line":913,"type":"if","locations":[{"start":{"line":913,"column":8},"end":{"line":913,"column":8}},{"start":{"line":913,"column":8},"end":{"line":913,"column":8}}]},"113":{"line":913,"type":"binary-expr","locations":[{"start":{"line":913,"column":12},"end":{"line":913,"column":22}},{"start":{"line":913,"column":26},"end":{"line":913,"column":33}}]},"114":{"line":926,"type":"if","locations":[{"start":{"line":926,"column":14},"end":{"line":926,"column":14}},{"start":{"line":926,"column":14},"end":{"line":926,"column":14}}]},"115":{"line":962,"type":"if","locations":[{"start":{"line":962,"column":6},"end":{"line":962,"column":6}},{"start":{"line":962,"column":6},"end":{"line":962,"column":6}}]},"116":{"line":964,"type":"if","locations":[{"start":{"line":964,"column":8},"end":{"line":964,"column":8}},{"start":{"line":964,"column":8},"end":{"line":964,"column":8}}]},"117":{"line":964,"type":"binary-expr","locations":[{"start":{"line":964,"column":12},"end":{"line":964,"column":42}},{"start":{"line":964,"column":46},"end":{"line":964,"column":81}}]},"118":{"line":968,"type":"if","locations":[{"start":{"line":968,"column":10},"end":{"line":968,"column":10}},{"start":{"line":968,"column":10},"end":{"line":968,"column":10}}]},"119":{"line":982,"type":"if","locations":[{"start":{"line":982,"column":8},"end":{"line":982,"column":8}},{"start":{"line":982,"column":8},"end":{"line":982,"column":8}}]},"120":{"line":983,"type":"if","locations":[{"start":{"line":983,"column":10},"end":{"line":983,"column":10}},{"start":{"line":983,"column":10},"end":{"line":983,"column":10}}]},"121":{"line":983,"type":"binary-expr","locations":[{"start":{"line":983,"column":14},"end":{"line":983,"column":35}},{"start":{"line":983,"column":39},"end":{"line":983,"column":64}}]},"122":{"line":995,"type":"if","locations":[{"start":{"line":995,"column":6},"end":{"line":995,"column":6}},{"start":{"line":995,"column":6},"end":{"line":995,"column":6}}]},"123":{"line":995,"type":"binary-expr","locations":[{"start":{"line":995,"column":10},"end":{"line":995,"column":31}},{"start":{"line":996,"column":8},"end":{"line":996,"column":57}}]},"124":{"line":1001,"type":"cond-expr","locations":[{"start":{"line":1001,"column":41},"end":{"line":1001,"column":44}},{"start":{"line":1001,"column":47},"end":{"line":1001,"column":60}}]},"125":{"line":1007,"type":"if","locations":[{"start":{"line":1007,"column":6},"end":{"line":1007,"column":6}},{"start":{"line":1007,"column":6},"end":{"line":1007,"column":6}}]},"126":{"line":1007,"type":"binary-expr","locations":[{"start":{"line":1007,"column":11},"end":{"line":1007,"column":28}},{"start":{"line":1007,"column":32},"end":{"line":1007,"column":61}},{"start":{"line":1007,"column":66},"end":{"line":1007,"column":71}}]},"127":{"line":1012,"type":"if","locations":[{"start":{"line":1012,"column":8},"end":{"line":1012,"column":8}},{"start":{"line":1012,"column":8},"end":{"line":1012,"column":8}}]},"128":{"line":1012,"type":"binary-expr","locations":[{"start":{"line":1012,"column":12},"end":{"line":1012,"column":25}},{"start":{"line":1012,"column":29},"end":{"line":1012,"column":54}},{"start":{"line":1012,"column":58},"end":{"line":1012,"column":84}}]},"129":{"line":1016,"type":"if","locations":[{"start":{"line":1016,"column":12},"end":{"line":1016,"column":12}},{"start":{"line":1016,"column":12},"end":{"line":1016,"column":12}}]},"130":{"line":1016,"type":"binary-expr","locations":[{"start":{"line":1016,"column":16},"end":{"line":1016,"column":19}},{"start":{"line":1016,"column":23},"end":{"line":1016,"column":47}}]},"131":{"line":1030,"type":"if","locations":[{"start":{"line":1030,"column":8},"end":{"line":1030,"column":8}},{"start":{"line":1030,"column":8},"end":{"line":1030,"column":8}}]}},"code":["// Copyright IBM Corp. 2013,2015. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","var async = require('async');","var g = require('strong-globalize')();","var utils = require('./utils');","var List = require('./list');","var includeUtils = require('./include_utils');","var isPlainObject = utils.isPlainObject;","var defineCachedRelations = utils.defineCachedRelations;","var uniq = utils.uniq;","var idName = utils.idName;","","/*!"," * Normalize the include to be an array"," * @param include"," * @returns {*}"," */","function normalizeInclude(include) {","  var newInclude;","  if (typeof include === 'string') {","    return [include];","  } else if (isPlainObject(include)) {","    // Build an array of key/value pairs","    newInclude = [];","    var rel = include.rel || include.relation;","    var obj = {};","    if (typeof rel === 'string') {","      obj[rel] = new IncludeScope(include.scope);","      newInclude.push(obj);","    } else {","      for (var key in include) {","        obj[key] = include[key];","        newInclude.push(obj);","      }","    }","    return newInclude;","  } else if (Array.isArray(include)) {","    newInclude = [];","    for (var i = 0, n = include.length; i < n; i++) {","      var subIncludes = normalizeInclude(include[i]);","      newInclude = newInclude.concat(subIncludes);","    }","    return newInclude;","  } else {","    return include;","  }","}","","function IncludeScope(scope) {","  this._scope = utils.deepMerge({}, scope || {});","  if (this._scope.include) {","    this._include = normalizeInclude(this._scope.include);","    delete this._scope.include;","  } else {","    this._include = null;","  }","}","","IncludeScope.prototype.conditions = function() {","  return utils.deepMerge({}, this._scope);","};","","IncludeScope.prototype.include = function() {","  return this._include;","};","","/*!"," * Look up a model by name from the list of given models"," * @param {Object} models Models keyed by name"," * @param {String} modelName The model name"," * @returns {*} The matching model class"," */","function lookupModel(models, modelName) {","  if (models[modelName]) {","    return models[modelName];","  }","  var lookupClassName = modelName.toLowerCase();","  for (var name in models) {","    if (name.toLowerCase() === lookupClassName) {","      return models[name];","    }","  }","}","","/**"," * Utility Function to allow interleave before and after high computation tasks"," * @param tasks"," * @param callback"," */","function execTasksWithInterLeave(tasks, callback) {","  // let's give others some time to process.","  // Context Switch BEFORE Heavy Computation","  process.nextTick(function() {","    // Heavy Computation","    try {","      async.parallel(tasks, function(err, info) {","        // Context Switch AFTER Heavy Computation","        process.nextTick(function() {","          callback(err, info);","        });","      });","    } catch (err) {","      callback(err);","    }","  });","}","","/*!"," * Include mixin for ./model.js"," */","module.exports = Inclusion;","","/**"," * Inclusion - Model mixin."," *"," * @class"," */","","function Inclusion() {","}","","/**"," * Normalize includes - used in DataAccessObject"," *"," */","","Inclusion.normalizeInclude = normalizeInclude;","","/**"," * Enables you to load relations of several objects and optimize numbers of requests."," *"," * Examples:"," *"," * Load all users' posts with only one additional request:"," * `User.include(users, 'posts', function() {});`"," * Or"," * `User.include(users, ['posts'], function() {});`"," *"," * Load all users posts and passports with two additional requests:"," * `User.include(users, ['posts', 'passports'], function() {});`"," *"," * Load all passports owner (users), and all posts of each owner loaded:"," *```Passport.include(passports, {owner: 'posts'}, function() {});"," *``` Passport.include(passports, {owner: ['posts', 'passports']});"," *``` Passport.include(passports, {owner: [{posts: 'images'}, 'passports']});"," *"," * @param {Array} objects Array of instances"," * @param {String|Object|Array} include Which relations to load."," * @param {Object} [options] Options for CRUD"," * @param {Function} cb Callback called when relations are loaded"," *"," */","Inclusion.include = function(objects, include, options, cb) {","  if (typeof options === 'function' && cb === undefined) {","    cb = options;","    options = {};","  }","  var self = this;","","  if (!include || (Array.isArray(include) && include.length === 0) ||","      (Array.isArray(objects) && objects.length === 0) ||","      (isPlainObject(include) && Object.keys(include).length === 0)) {","    // The objects are empty","    return process.nextTick(function() {","      cb && cb(null, objects);","    });","  }","","  include = normalizeInclude(include);","","  // Find the limit of items for `inq`","  var inqLimit = 256;","  if (self.dataSource && self.dataSource.settings &&","    self.dataSource.settings.inqLimit) {","    inqLimit = self.dataSource.settings.inqLimit;","  }","","  async.each(include, function(item, callback) {","    processIncludeItem(objects, item, options, callback);","  }, function(err) {","    cb && cb(err, objects);","  });","","  /**","   * Find related items with an array of foreign keys by page","   * @param model The model class","   * @param filter The query filter","   * @param fkName The name of the foreign key property","   * @param pageSize The size of page","   * @param options Options","   * @param cb","   */","  function findWithForeignKeysByPage(model, filter, fkName, pageSize, options, cb) {","    var foreignKeys = [];","    if (filter.where[fkName]) {","      foreignKeys = filter.where[fkName].inq;","    } else if (filter.where.and) {","      // The inq can be embedded inside 'and: []'. No or: [] is needed as","      // include only uses and. We only deal with the generated inq for include.","      for (var j in filter.where.and) {","        if (filter.where.and[j][fkName] &&","          Array.isArray(filter.where.and[j][fkName].inq)) {","          foreignKeys = filter.where.and[j][fkName].inq;","          break;","        }","      }","    }","    if (!foreignKeys.length) {","      return cb(null, []);","    }","    if (filter.limit || filter.skip || filter.offset) {","      // Force the find to be performed per FK to honor the pagination","      pageSize = 1;","    }","    var size = foreignKeys.length;","    if (size > inqLimit && pageSize <= 0) {","      pageSize = inqLimit;","    }","    if (pageSize <= 0) {","      return model.find(filter, options, cb);","    }","","    var listOfFKs = [];","","    for (var i = 0; i < size; i += pageSize) {","      var end = i + pageSize;","      if (end > size) {","        end = size;","      }","      listOfFKs.push(foreignKeys.slice(i, end));","    }","","    var items = [];","    // Optimization: no need to resolve keys that are an empty array","    listOfFKs = listOfFKs.filter(function(keys) {","      return keys.length > 0;","    });","    async.each(listOfFKs, function(foreignKeys, done) {","      var newFilter = {};","      for (var f in filter) {","        newFilter[f] = filter[f];","      }","      if (filter.where) {","        newFilter.where = {};","        for (var w in filter.where) {","          newFilter.where[w] = filter.where[w];","        }","      }","      newFilter.where[fkName] = {","        inq: foreignKeys,","      };","      model.find(newFilter, options, function(err, results) {","        if (err) return done(err);","        items = items.concat(results);","        done();","      });","    }, function(err) {","      if (err) return cb(err);","      cb(null, items);","    });","  }","","  function processIncludeItem(objs, include, options, cb) {","    var relations = self.relations;","","    var relationName;","    var subInclude = null, scope = null;","","    if (isPlainObject(include)) {","      relationName = Object.keys(include)[0];","      if (include[relationName] instanceof IncludeScope) {","        scope = include[relationName];","        subInclude = scope.include();","      } else {","        subInclude = include[relationName];","        // when include = {user:true}, it does not have subInclude","        if (subInclude === true) {","          subInclude = null;","        }","      }","    } else {","      relationName = include;","      subInclude = null;","    }","","    var relation = relations[relationName];","    if (!relation) {","      cb(new Error(g.f('Relation \"%s\" is not defined for %s model', relationName, self.modelName)));","      return;","    }","    var polymorphic = relation.polymorphic;","    // if (polymorphic && !polymorphic.discriminator) {","    //  cb(new Error('Relation \"' + relationName + '\" is polymorphic but ' +","    //    'discriminator is not present'));","    //  return;","    // }","    if (!relation.modelTo) {","      if (!relation.polymorphic) {","        cb(new Error(g.f('{{Relation.modelTo}} is not defined for relation %s and is no {{polymorphic}}',","          relationName)));","        return;","      }","    }","","    // Just skip if inclusion is disabled","    if (relation.options.disableInclude) {","      return cb();","    }","    // prepare filter and fields for making DB Call","    var filter = (scope && scope.conditions()) || {};","    if ((relation.multiple || relation.type === 'belongsTo') && scope) {","      var includeScope = {};","      // make sure not to miss any fields for sub includes","      if (filter.fields && Array.isArray(subInclude) &&","        relation.modelTo.relations) {","        includeScope.fields = [];","        subInclude.forEach(function(name) {","          var rel = relation.modelTo.relations[name];","          if (rel && rel.type === 'belongsTo') {","            includeScope.fields.push(rel.keyFrom);","          }","        });","      }","      utils.mergeQuery(filter, includeScope, {fields: false});","    }","    // Let's add a placeholder where query","    filter.where = filter.where || {};","    // if fields are specified, make sure target foreign key is present","    var fields = filter.fields;","    if (typeof fields === 'string') {","      // transform string into array containing this string","      filter.fields = fields = [fields];","    }","    if (Array.isArray(fields) && fields.indexOf(relation.keyTo) === -1) {","      fields.push(relation.keyTo);","    } else if (isPlainObject(fields) && !fields[relation.keyTo]) {","      fields[relation.keyTo] = true;","    }","","    //","    // call relation specific include functions","    //","    if (relation.multiple) {","      if (relation.modelThrough) {","        // hasManyThrough needs separate handling","        return includeHasManyThrough(cb);","      }","      // This will also include embedsMany with belongsTo.","      // Might need to optimize db calls for this.","      if (relation.type === 'embedsMany') {","        // embedded docs are part of the objects, no need to make db call.","        // proceed as implemented earlier.","        return includeEmbeds(cb);","      }","      if (relation.type === 'referencesMany') {","        return includeReferencesMany(cb);","      }","","      // This handles exactly hasMany. Fast and straightforward. Without parallel, each and other boilerplate.","      if (relation.type === 'hasMany' && relation.multiple && !subInclude) {","        return includeHasManySimple(cb);","      }","      // assuming all other relations with multiple=true as hasMany","      return includeHasMany(cb);","    } else {","      if (polymorphic) {","        if (relation.type === 'hasOne') {","          return includePolymorphicHasOne(cb);","        }","        return includePolymorphicBelongsTo(cb);","      }","      if (relation.type === 'embedsOne') {","        return includeEmbeds(cb);","      }","      // hasOne or belongsTo","      return includeOneToOne(cb);","    }","","    /**","     * Handle inclusion of HasManyThrough/HasAndBelongsToMany/Polymorphic","     * HasManyThrough relations","     * @param callback","     */","    function includeHasManyThrough(callback) {","      var sourceIds = [];","      // Map for Indexing objects by their id for faster retrieval","      var objIdMap = {};","      for (var i = 0; i < objs.length; i++) {","        var obj = objs[i];","        // one-to-many: foreign key reference is modelTo -> modelFrom.","        // use modelFrom.keyFrom in where filter later","        var sourceId = obj[relation.keyFrom];","        if (sourceId) {","          sourceIds.push(sourceId);","          objIdMap[sourceId.toString()] = obj;","        }","        // sourceId can be null. but cache empty data as result","        defineCachedRelations(obj);","        obj.__cachedRelations[relationName] = [];","      }","      // default filters are not applicable on through model. should be applied","      // on modelTo later in 2nd DB call.","      var throughFilter = {","        where: {},","      };","      throughFilter.where[relation.keyTo] = {","        inq: uniq(sourceIds),","      };","      if (polymorphic) {","        // handle polymorphic hasMany (reverse) in which case we need to filter","        // by discriminator to filter other types","        throughFilter.where[polymorphic.discriminator] =","          relation.modelFrom.definition.name;","      }","      /**","       * 1st DB Call of 2 step process. Get through model objects first","       */","      findWithForeignKeysByPage(relation.modelThrough, throughFilter,","        relation.keyTo, 0, options, throughFetchHandler);","","      /**","       * Handle the results of Through model objects and fetch the modelTo items","       * @param err","       * @param {Array<Model>} throughObjs","       * @returns {*}","       */","      function throughFetchHandler(err, throughObjs) {","        if (err) {","          return callback(err);","        }","        // start preparing for 2nd DB call.","        var targetIds = [];","        var targetObjsMap = {};","        for (var i = 0; i < throughObjs.length; i++) {","          var throughObj = throughObjs[i];","          var targetId = throughObj[relation.keyThrough];","          if (targetId) {","            // save targetIds for 2nd DB Call","            targetIds.push(targetId);","            var sourceObj = objIdMap[throughObj[relation.keyTo]];","            var targetIdStr = targetId.toString();","            // Since targetId can be duplicates, multiple source objs are put","            // into buckets.","            var objList = targetObjsMap[targetIdStr] =","              targetObjsMap[targetIdStr] || [];","            objList.push(sourceObj);","          }","        }","        // Polymorphic relation does not have idKey of modelTo. Find it manually","        var modelToIdName = idName(relation.modelTo);","        filter.where[modelToIdName] = {","          inq: uniq(targetIds),","        };","","        // make sure that the modelToIdName is included if fields are specified","        if (Array.isArray(fields) && fields.indexOf(modelToIdName) === -1) {","          fields.push(modelToIdName);","        } else if (isPlainObject(fields) && !fields[modelToIdName]) {","          fields[modelToIdName] = true;","        }","","        /**","         * 2nd DB Call of 2 step process. Get modelTo (target) objects","         */","        findWithForeignKeysByPage(relation.modelTo, filter,","          modelToIdName, 0, options, targetsFetchHandler);","","        // relation.modelTo.find(filter, options, targetsFetchHandler);","        function targetsFetchHandler(err, targets) {","          if (err) {","            return callback(err);","          }","          var tasks = [];","          // simultaneously process subIncludes. Call it first as it is an async","          // process.","          if (subInclude && targets) {","            tasks.push(function subIncludesTask(next) {","              relation.modelTo.include(targets, subInclude, options, next);","            });","          }","          // process & link each target with object","          tasks.push(targetLinkingTask);","          function targetLinkingTask(next) {","            async.each(targets, linkManyToMany, next);","            function linkManyToMany(target, next) {","              var targetId = target[modelToIdName];","              if (!targetId) {","                var err = new Error(g.f('LinkManyToMany received target that doesn\\'t contain required \"%s\"',","                  modelToIdName));","                return next(err);","              }","              var objList = targetObjsMap[targetId.toString()];","              async.each(objList, function(obj, next) {","                if (!obj) return next();","                obj.__cachedRelations[relationName].push(target);","                processTargetObj(obj, next);","              }, next);","            }","          }","","          execTasksWithInterLeave(tasks, callback);","        }","      }","    }","","    /**","     * Handle inclusion of ReferencesMany relation","     * @param callback","     */","    function includeReferencesMany(callback) {","      var modelToIdName = idName(relation.modelTo);","      var allTargetIds = [];","      // Map for Indexing objects by their id for faster retrieval","      var targetObjsMap = {};","      for (var i = 0; i < objs.length; i++) {","        var obj = objs[i];","        // one-to-many: foreign key reference is modelTo -> modelFrom.","        // use modelFrom.keyFrom in where filter later","        var targetIds = obj[relation.keyFrom];","        if (targetIds) {","          if (typeof targetIds === 'string') {","            // For relational DBs, the array is stored as stringified json","            // Please note obj is a plain object at this point","            targetIds = JSON.parse(targetIds);","          }","          // referencesMany has multiple targetIds per obj. We need to concat","          // them into allTargetIds before DB Call","          allTargetIds = allTargetIds.concat(targetIds);","          for (var j = 0; j < targetIds.length; j++) {","            var targetId = targetIds[j];","            var targetIdStr = targetId.toString();","            var objList = targetObjsMap[targetIdStr] =","              targetObjsMap[targetIdStr] || [];","            objList.push(obj);","          }","        }","        // sourceId can be null. but cache empty data as result","        defineCachedRelations(obj);","        obj.__cachedRelations[relationName] = [];","      }","      filter.where[relation.keyTo] = {","        inq: uniq(allTargetIds),","      };","      relation.applyScope(null, filter);","      /**","       * Make the DB Call, fetch all target objects","       */","      findWithForeignKeysByPage(relation.modelTo, filter,","        relation.keyTo, 0, options, targetFetchHandler);","      /**","       * Handle the fetched target objects","       * @param err","       * @param {Array<Model>}targets","       * @returns {*}","       */","      function targetFetchHandler(err, targets) {","        if (err) {","          return callback(err);","        }","        var tasks = [];","        // simultaneously process subIncludes","        if (subInclude && targets) {","          tasks.push(function subIncludesTask(next) {","            relation.modelTo.include(targets, subInclude, options, next);","          });","        }","        targets = utils.sortObjectsByIds(modelToIdName, allTargetIds, targets);","        // process each target object","        tasks.push(targetLinkingTask);","        function targetLinkingTask(next) {","          async.each(targets, linkManyToMany, next);","          function linkManyToMany(target, next) {","            var objList = targetObjsMap[target[relation.keyTo].toString()];","            async.each(objList, function(obj, next) {","              if (!obj) return next();","              obj.__cachedRelations[relationName].push(target);","              processTargetObj(obj, next);","            }, next);","          }","        }","","        execTasksWithInterLeave(tasks, callback);","      }","    }","","    /**","     * Handle inclusion of HasMany relation","     * @param callback","     */","    function includeHasManySimple(callback) {","      // Map for Indexing objects by their id for faster retrieval","      var objIdMap2 = includeUtils.buildOneToOneIdentityMapWithOrigKeys(objs, relation.keyFrom);","","      filter.where[relation.keyTo] = {","        inq: uniq(objIdMap2.getKeys()),","      };","","      relation.applyScope(null, filter);","","      findWithForeignKeysByPage(relation.modelTo, filter,","        relation.keyTo, 0, options, targetFetchHandler);","","      function targetFetchHandler(err, targets) {","        if (err) {","          return callback(err);","        }","        var targetsIdMap = includeUtils.buildOneToManyIdentityMapWithOrigKeys(targets, relation.keyTo);","        includeUtils.join(objIdMap2, targetsIdMap, function(obj1, valueToMergeIn) {","          defineCachedRelations(obj1);","          obj1.__cachedRelations[relationName] = valueToMergeIn;","          processTargetObj(obj1, function() {});","        });","        callback(err, objs);","      }","    }","","    /**","     * Handle inclusion of HasMany relation","     * @param callback","     */","    function includeHasMany(callback) {","      var sourceIds = [];","      // Map for Indexing objects by their id for faster retrieval","      var objIdMap = {};","      for (var i = 0; i < objs.length; i++) {","        var obj = objs[i];","        // one-to-many: foreign key reference is modelTo -> modelFrom.","        // use modelFrom.keyFrom in where filter later","        var sourceId = obj[relation.keyFrom];","        if (sourceId) {","          sourceIds.push(sourceId);","          objIdMap[sourceId.toString()] = obj;","        }","        // sourceId can be null. but cache empty data as result","        defineCachedRelations(obj);","        obj.__cachedRelations[relationName] = [];","      }","      filter.where[relation.keyTo] = {","        inq: uniq(sourceIds),","      };","      relation.applyScope(null, filter);","      options.partitionBy = relation.keyTo;","","      findWithForeignKeysByPage(relation.modelTo, filter,","        relation.keyTo, 0, options, targetFetchHandler);","","      /**","       * Process fetched related objects","       * @param err","       * @param {Array<Model>} targets","       * @returns {*}","       */","      function targetFetchHandler(err, targets) {","        if (err) {","          return callback(err);","        }","        var tasks = [];","        // simultaneously process subIncludes","        if (subInclude && targets) {","          tasks.push(function subIncludesTask(next) {","            relation.modelTo.include(targets, subInclude, options, next);","          });","        }","        // process each target object","        tasks.push(targetLinkingTask);","        function targetLinkingTask(next) {","          if (targets.length === 0) {","            return async.each(objs, function(obj, next) {","              processTargetObj(obj, next);","            }, next);","          }","","          async.each(targets, linkManyToOne, next);","          function linkManyToOne(target, next) {","            // fix for bug in hasMany with referencesMany","            var targetIds = [].concat(target[relation.keyTo]);","            async.each(targetIds, function(targetId, next) {","              var obj = objIdMap[targetId.toString()];","              if (!obj) return next();","              obj.__cachedRelations[relationName].push(target);","              processTargetObj(obj, next);","            }, function(err, processedTargets) {","              if (err) {","                return next(err);","              }","","              var objsWithEmptyRelation = objs.filter(function(obj) {","                return obj.__cachedRelations[relationName].length === 0;","              });","              async.each(objsWithEmptyRelation, function(obj, next) {","                processTargetObj(obj, next);","              }, function(err) {","                next(err, processedTargets);","              });","            });","          }","        }","","        execTasksWithInterLeave(tasks, callback);","      }","    }","","    /**","     * Handle Inclusion of Polymorphic BelongsTo relation","     * @param callback","     */","    function includePolymorphicBelongsTo(callback) {","      var targetIdsByType = {};","      // Map for Indexing objects by their type and targetId for faster retrieval","      var targetObjMapByType = {};","      for (var i = 0; i < objs.length; i++) {","        var obj = objs[i];","        var discriminator = polymorphic.discriminator;","        var modelType = obj[discriminator];","        if (modelType) {","          targetIdsByType[modelType] = targetIdsByType[modelType] || [];","          targetObjMapByType[modelType] = targetObjMapByType[modelType] || {};","          var targetIds = targetIdsByType[modelType];","          var targetObjsMap = targetObjMapByType[modelType];","          var targetId = obj[relation.keyFrom];","          if (targetId) {","            targetIds.push(targetId);","            var targetIdStr = targetId.toString();","            targetObjsMap[targetIdStr] = targetObjsMap[targetIdStr] || [];","            // Is belongsTo. Multiple objects can have the same","            // targetId and therefore map value is an array","            targetObjsMap[targetIdStr].push(obj);","          }","        }","        defineCachedRelations(obj);","        obj.__cachedRelations[relationName] = null;","      }","      async.each(Object.keys(targetIdsByType), processPolymorphicType,","        callback);","      /**","       * Process Polymorphic objects of each type (modelType)","       * @param {String} modelType","       * @param callback","       */","      function processPolymorphicType(modelType, callback) {","        var typeFilter = {where: {}};","        utils.mergeQuery(typeFilter, filter);","        var targetIds = targetIdsByType[modelType];","        typeFilter.where[relation.keyTo] = {","          inq: uniq(targetIds),","        };","        var Model = lookupModel(relation.modelFrom.dataSource.modelBuilder.","          models, modelType);","        if (!Model) {","          callback(new Error(g.f('Discriminator type %s specified but no model exists with such name',","            modelType)));","          return;","        }","        relation.applyScope(null, typeFilter);","","        findWithForeignKeysByPage(Model, typeFilter,","          relation.keyTo, 0, options, targetFetchHandler);","","        /**","         * Process fetched related objects","         * @param err","         * @param {Array<Model>} targets","         * @returns {*}","         */","        function targetFetchHandler(err, targets) {","          if (err) {","            return callback(err);","          }","          var tasks = [];","","          // simultaneously process subIncludes","          if (subInclude && targets) {","            tasks.push(function subIncludesTask(next) {","              Model.include(targets, subInclude, options, next);","            });","          }","          // process each target object","          tasks.push(targetLinkingTask);","          function targetLinkingTask(next) {","            var targetObjsMap = targetObjMapByType[modelType];","            async.each(targets, linkOneToMany, next);","            function linkOneToMany(target, next) {","              var objList = targetObjsMap[target[relation.keyTo].toString()];","              async.each(objList, function(obj, next) {","                if (!obj) return next();","                obj.__cachedRelations[relationName] = target;","                processTargetObj(obj, next);","              }, next);","            }","          }","","          execTasksWithInterLeave(tasks, callback);","        }","      }","    }","","    /**","     * Handle Inclusion of Polymorphic HasOne relation","     * @param callback","     */","    function includePolymorphicHasOne(callback) {","      var sourceIds = [];","      // Map for Indexing objects by their id for faster retrieval","      var objIdMap = {};","      for (var i = 0; i < objs.length; i++) {","        var obj = objs[i];","        // one-to-one: foreign key reference is modelTo -> modelFrom.","        // use modelFrom.keyFrom in where filter later","        var sourceId = obj[relation.keyFrom];","        if (sourceId) {","          sourceIds.push(sourceId);","          objIdMap[sourceId.toString()] = obj;","        }","        // sourceId can be null. but cache empty data as result","        defineCachedRelations(obj);","        obj.__cachedRelations[relationName] = null;","      }","      filter.where[relation.keyTo] = {","        inq: uniq(sourceIds),","      };","      relation.applyScope(null, filter);","","      findWithForeignKeysByPage(relation.modelTo, filter,","        relation.keyTo, 0, options, targetFetchHandler);","","      /**","       * Process fetched related objects","       * @param err","       * @param {Array<Model>} targets","       * @returns {*}","       */","      function targetFetchHandler(err, targets) {","        if (err) {","          return callback(err);","        }","        var tasks = [];","        // simultaneously process subIncludes","        if (subInclude && targets) {","          tasks.push(function subIncludesTask(next) {","            relation.modelTo.include(targets, subInclude, options, next);","          });","        }","        // process each target object","        tasks.push(targetLinkingTask);","        function targetLinkingTask(next) {","          async.each(targets, linkOneToOne, next);","          function linkOneToOne(target, next) {","            var sourceId = target[relation.keyTo];","            if (!sourceId) return next();","            var obj = objIdMap[sourceId.toString()];","            if (!obj) return next();","            obj.__cachedRelations[relationName] = target;","            processTargetObj(obj, next);","          }","        }","","        execTasksWithInterLeave(tasks, callback);","      }","    }","","    /**","     * Handle Inclusion of BelongsTo/HasOne relation","     * @param callback","     */","    function includeOneToOne(callback) {","      var targetIds = [];","      var objTargetIdMap = {};","      for (var i = 0; i < objs.length; i++) {","        var obj = objs[i];","        if (relation.type === 'belongsTo') {","          if (obj[relation.keyFrom] === null ||","            obj[relation.keyFrom] === undefined) {","            defineCachedRelations(obj);","            obj.__cachedRelations[relationName] = null;","            continue;","          }","        }","        var targetId = obj[relation.keyFrom];","        if (targetId) {","          targetIds.push(targetId);","          var targetIdStr = targetId.toString();","          objTargetIdMap[targetIdStr] = objTargetIdMap[targetIdStr] || [];","          objTargetIdMap[targetIdStr].push(obj);","        }","        defineCachedRelations(obj);","        obj.__cachedRelations[relationName] = null;","      }","      filter.where[relation.keyTo] = {","        inq: uniq(targetIds),","      };","      relation.applyScope(null, filter);","","      findWithForeignKeysByPage(relation.modelTo, filter,","        relation.keyTo, 0, options, targetFetchHandler);","","      /**","       * Process fetched related objects","       * @param err","       * @param {Array<Model>} targets","       * @returns {*}","       */","      function targetFetchHandler(err, targets) {","        if (err) {","          return callback(err);","        }","        var tasks = [];","        // simultaneously process subIncludes","        if (subInclude && targets) {","          tasks.push(function subIncludesTask(next) {","            relation.modelTo.include(targets, subInclude, options, next);","          });","        }","        // process each target object","        tasks.push(targetLinkingTask);","        function targetLinkingTask(next) {","          async.each(targets, linkOneToMany, next);","          function linkOneToMany(target, next) {","            var targetId = target[relation.keyTo];","            var objList = objTargetIdMap[targetId.toString()];","            async.each(objList, function(obj, next) {","              if (!obj) return next();","              obj.__cachedRelations[relationName] = target;","              processTargetObj(obj, next);","            }, next);","          }","        }","","        execTasksWithInterLeave(tasks, callback);","      }","    }","","    /**","     * Handle Inclusion of EmbedsMany/EmbedsManyWithBelongsTo/EmbedsOne","     * Relations. Since Embedded docs are part of parents, no need to make","     * db calls. Let the related function be called for each object to fetch","     * the results from cache.","     *","     * TODO: Optimize EmbedsManyWithBelongsTo relation DB Calls","     * @param callback","     */","    function includeEmbeds(callback) {","      async.each(objs, function(obj, next) {","        processTargetObj(obj, next);","      }, callback);","    }","","    /**","     * Process Each Model Object and make sure specified relations are included","     * @param {Model} obj - Single Mode object for which inclusion is needed","     * @param callback","     * @returns {*}","     */","    function processTargetObj(obj, callback) {","      var isInst = obj instanceof self;","","      // Calling the relation method on the instance","      if (relation.type === 'belongsTo') {","        // If the belongsTo relation doesn't have an owner","        if (obj[relation.keyFrom] === null || obj[relation.keyFrom] === undefined) {","          defineCachedRelations(obj);","          // Set to null if the owner doesn't exist","          obj.__cachedRelations[relationName] = null;","          if (isInst) {","            obj.__data[relationName] = null;","          } else {","            obj[relationName] = null;","          }","          return callback();","        }","      }","      /**","       * Sets the related objects as a property of Parent Object","       * @param {Array<Model>|Model|null} result - Related Object/Objects","       * @param cb","       */","      function setIncludeData(result, cb) {","        if (isInst) {","          if (Array.isArray(result) && !(result instanceof List)) {","            result = new List(result, relation.modelTo);","          }","          obj.__data[relationName] = result;","          // obj.setStrict(false); issue #1252","        } else {","          obj[relationName] = result;","        }","        cb(null, result);","      }","","      // obj.__cachedRelations[relationName] can be null if no data was returned","      if (obj.__cachedRelations &&","        obj.__cachedRelations[relationName] !== undefined) {","        return setIncludeData(obj.__cachedRelations[relationName],","          callback);","      }","","      var inst = (obj instanceof self) ? obj : new self(obj);","","      // If related objects are not cached by include Handlers, directly call","      // related accessor function even though it is not very efficient","      var related; // relation accessor function","","      if ((relation.multiple || relation.type === 'belongsTo') && scope) {","        var includeScope = {};","        var filter = scope.conditions();","","        // make sure not to miss any fields for sub includes","        if (filter.fields && Array.isArray(subInclude) && relation.modelTo.relations) {","          includeScope.fields = [];","          subInclude.forEach(function(name) {","            var rel = relation.modelTo.relations[name];","            if (rel && rel.type === 'belongsTo') {","              includeScope.fields.push(rel.keyFrom);","            }","          });","        }","","        utils.mergeQuery(filter, includeScope, {fields: false});","","        related = inst[relationName].bind(inst, filter);","      } else {","        related = inst[relationName].bind(inst, undefined);","      }","","      related(options, function(err, result) {","        if (err) {","          return callback(err);","        } else {","          defineCachedRelations(obj);","          obj.__cachedRelations[relationName] = result;","","          return setIncludeData(result, callback);","        }","      });","    }","  }","};",""],"l":{"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"23":1,"24":0,"25":0,"26":0,"27":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"48":0,"50":0,"54":1,"55":0,"56":0,"57":0,"58":0,"60":0,"64":1,"65":0,"68":1,"69":0,"78":1,"79":0,"80":0,"82":0,"83":0,"84":0,"85":0,"95":1,"98":0,"100":0,"101":0,"103":0,"104":0,"108":0,"116":1,"124":1,"132":1,"158":1,"159":0,"160":0,"161":0,"163":0,"165":0,"169":0,"170":0,"174":0,"177":0,"178":0,"180":0,"183":0,"184":0,"186":0,"198":1,"199":0,"200":0,"201":0,"202":0,"205":0,"206":0,"208":0,"209":0,"213":0,"214":0,"216":0,"218":0,"220":0,"221":0,"222":0,"224":0,"225":0,"228":0,"230":0,"231":0,"232":0,"233":0,"235":0,"238":0,"240":0,"241":0,"243":0,"244":0,"245":0,"246":0,"248":0,"249":0,"250":0,"251":0,"254":0,"257":0,"258":0,"259":0,"260":0,"263":0,"264":0,"268":1,"269":0,"271":0,"272":0,"274":0,"275":0,"276":0,"277":0,"278":0,"280":0,"282":0,"283":0,"287":0,"288":0,"291":0,"292":0,"293":0,"294":0,"296":0,"302":0,"303":0,"304":0,"306":0,"311":0,"312":0,"315":0,"316":0,"317":0,"319":0,"321":0,"322":0,"323":0,"324":0,"325":0,"329":0,"332":0,"334":0,"335":0,"337":0,"339":0,"340":0,"341":0,"342":0,"348":0,"349":0,"351":0,"355":0,"358":0,"360":0,"361":0,"365":0,"366":0,"369":0,"371":0,"372":0,"373":0,"375":0,"377":0,"378":0,"381":0,"389":1,"390":0,"392":0,"393":0,"394":0,"397":0,"398":0,"399":0,"400":0,"403":0,"404":0,"408":0,"411":0,"414":0,"417":0,"423":0,"432":1,"433":0,"434":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"444":0,"445":0,"446":0,"449":0,"451":0,"455":0,"456":0,"461":0,"462":0,"463":0,"464":0,"470":0,"474":1,"475":0,"476":0,"478":0,"481":0,"482":0,"483":0,"487":0,"488":1,"489":0,"490":1,"491":0,"492":0,"493":0,"495":0,"497":0,"498":0,"499":0,"500":0,"501":0,"506":0,"515":1,"516":0,"517":0,"519":0,"520":0,"521":0,"524":0,"525":0,"526":0,"529":0,"533":0,"534":0,"535":0,"536":0,"537":0,"539":0,"543":0,"544":0,"546":0,"549":0,"553":0,"561":1,"562":0,"563":0,"565":0,"567":0,"568":0,"569":0,"572":0,"574":0,"575":1,"576":0,"577":1,"578":0,"579":0,"580":0,"581":0,"582":0,"587":0,"595":1,"597":0,"599":0,"603":0,"605":0,"608":1,"609":0,"610":0,"612":0,"613":0,"614":0,"615":0,"616":0,"618":0,"626":1,"627":0,"629":0,"630":0,"631":0,"634":0,"635":0,"636":0,"637":0,"640":0,"641":0,"643":0,"646":0,"647":0,"649":0,"658":1,"659":0,"660":0,"662":0,"664":0,"665":0,"666":0,"670":0,"671":1,"672":0,"673":0,"674":0,"678":0,"679":1,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"688":0,"689":0,"692":0,"693":0,"695":0,"696":0,"698":0,"704":0,"712":1,"713":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"732":0,"735":0,"736":0,"738":0,"745":1,"746":0,"747":0,"748":0,"749":0,"752":0,"754":0,"755":0,"757":0,"759":0,"761":0,"770":1,"771":0,"772":0,"774":0,"777":0,"778":0,"779":0,"783":0,"784":1,"785":0,"786":0,"787":1,"788":0,"789":0,"790":0,"791":0,"792":0,"797":0,"806":1,"807":0,"809":0,"810":0,"811":0,"814":0,"815":0,"816":0,"817":0,"820":0,"821":0,"823":0,"826":0,"828":0,"837":1,"838":0,"839":0,"841":0,"843":0,"844":0,"845":0,"849":0,"850":1,"851":0,"852":1,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"862":0,"870":1,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"878":0,"879":0,"880":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"890":0,"891":0,"893":0,"896":0,"898":0,"907":1,"908":0,"909":0,"911":0,"913":0,"914":0,"915":0,"919":0,"920":1,"921":0,"922":1,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"933":0,"946":1,"947":0,"948":0,"958":1,"959":0,"962":0,"964":0,"965":0,"967":0,"968":0,"969":0,"971":0,"973":0,"981":1,"982":0,"983":0,"984":0,"986":0,"989":0,"991":0,"995":0,"997":0,"1001":0,"1005":0,"1007":0,"1008":0,"1009":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1022":0,"1024":0,"1026":0,"1029":0,"1030":0,"1031":0,"1033":0,"1034":0,"1036":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/include_utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/include_utils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"buildOneToOneIdentityMapWithOrigKeys","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":60}}},"2":{"name":"buildOneToManyIdentityMapWithOrigKeys","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":61}}},"3":{"name":"join","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":53}}},"4":{"name":"KVMap","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":17}}},"5":{"name":"(anonymous_5)","line":69,"loc":{"start":{"line":69,"column":20},"end":{"line":69,"column":34}}},"6":{"name":"(anonymous_6)","line":71,"loc":{"start":{"line":71,"column":9},"end":{"line":71,"column":30}}},"7":{"name":"(anonymous_7)","line":78,"loc":{"start":{"line":78,"column":9},"end":{"line":78,"column":23}}},"8":{"name":"(anonymous_8)","line":86,"loc":{"start":{"line":86,"column":12},"end":{"line":86,"column":26}}},"9":{"name":"(anonymous_9)","line":90,"loc":{"start":{"line":90,"column":11},"end":{"line":90,"column":25}}},"10":{"name":"(anonymous_10)","line":94,"loc":{"start":{"line":94,"column":13},"end":{"line":94,"column":24}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":91}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":93}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}},"5":{"start":{"line":21,"column":0},"end":{"line":29,"column":1}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":26}},"7":{"start":{"line":23,"column":2},"end":{"line":27,"column":3}},"8":{"start":{"line":24,"column":4},"end":{"line":24,"column":22}},"9":{"start":{"line":25,"column":4},"end":{"line":25,"column":25}},"10":{"start":{"line":26,"column":4},"end":{"line":26,"column":23}},"11":{"start":{"line":28,"column":2},"end":{"line":28,"column":15}},"12":{"start":{"line":31,"column":0},"end":{"line":41,"column":1}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":26}},"14":{"start":{"line":33,"column":2},"end":{"line":39,"column":3}},"15":{"start":{"line":34,"column":4},"end":{"line":34,"column":22}},"16":{"start":{"line":35,"column":4},"end":{"line":35,"column":25}},"17":{"start":{"line":36,"column":4},"end":{"line":36,"column":36}},"18":{"start":{"line":37,"column":4},"end":{"line":37,"column":20}},"19":{"start":{"line":38,"column":4},"end":{"line":38,"column":25}},"20":{"start":{"line":40,"column":2},"end":{"line":40,"column":15}},"21":{"start":{"line":50,"column":0},"end":{"line":58,"column":1}},"22":{"start":{"line":51,"column":2},"end":{"line":51,"column":36}},"23":{"start":{"line":52,"column":2},"end":{"line":57,"column":3}},"24":{"start":{"line":53,"column":4},"end":{"line":53,"column":20}},"25":{"start":{"line":54,"column":4},"end":{"line":54,"column":36}},"26":{"start":{"line":55,"column":4},"end":{"line":55,"column":56}},"27":{"start":{"line":56,"column":4},"end":{"line":56,"column":34}},"28":{"start":{"line":65,"column":0},"end":{"line":104,"column":1}},"29":{"start":{"line":66,"column":2},"end":{"line":66,"column":44}},"30":{"start":{"line":67,"column":2},"end":{"line":67,"column":35}},"31":{"start":{"line":68,"column":2},"end":{"line":68,"column":17}},"32":{"start":{"line":69,"column":2},"end":{"line":69,"column":61}},"33":{"start":{"line":69,"column":36},"end":{"line":69,"column":58}},"34":{"start":{"line":70,"column":2},"end":{"line":102,"column":4}},"35":{"start":{"line":72,"column":6},"end":{"line":72,"column":25}},"36":{"start":{"line":73,"column":6},"end":{"line":73,"column":45}},"37":{"start":{"line":74,"column":6},"end":{"line":74,"column":44}},"38":{"start":{"line":75,"column":6},"end":{"line":75,"column":42}},"39":{"start":{"line":76,"column":6},"end":{"line":76,"column":18}},"40":{"start":{"line":79,"column":6},"end":{"line":79,"column":45}},"41":{"start":{"line":80,"column":6},"end":{"line":84,"column":7}},"42":{"start":{"line":81,"column":8},"end":{"line":81,"column":44}},"43":{"start":{"line":83,"column":8},"end":{"line":83,"column":25}},"44":{"start":{"line":87,"column":6},"end":{"line":87,"column":37}},"45":{"start":{"line":88,"column":6},"end":{"line":88,"column":18}},"46":{"start":{"line":91,"column":6},"end":{"line":91,"column":58}},"47":{"start":{"line":92,"column":6},"end":{"line":92,"column":20}},"48":{"start":{"line":95,"column":6},"end":{"line":95,"column":22}},"49":{"start":{"line":96,"column":6},"end":{"line":98,"column":7}},"50":{"start":{"line":97,"column":8},"end":{"line":97,"column":55}},"51":{"start":{"line":99,"column":6},"end":{"line":99,"column":20}},"52":{"start":{"line":103,"column":2},"end":{"line":103,"column":17}}},"branchMap":{"1":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":16},"end":{"line":36,"column":29}},{"start":{"line":36,"column":33},"end":{"line":36,"column":35}}]},"2":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":27},"end":{"line":55,"column":49}},{"start":{"line":55,"column":53},"end":{"line":55,"column":55}}]},"3":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":6}},{"start":{"line":80,"column":6},"end":{"line":80,"column":6}}]}},"code":["// Copyright IBM Corp. 2015,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","module.exports.buildOneToOneIdentityMapWithOrigKeys = buildOneToOneIdentityMapWithOrigKeys;","module.exports.buildOneToManyIdentityMapWithOrigKeys = buildOneToManyIdentityMapWithOrigKeys;","module.exports.join = join;","module.exports.KVMap = KVMap;","","/**"," * Effectively builds associative map on id -> object relation and stores original keys."," * Map returned in form of object with ids in keys and object as values."," * @param objs array of objects to build from"," * @param idName name of property to be used as id. Such property considered to be unique across array."," * In case of collisions last wins. For non-unique ids use buildOneToManyIdentityMap()"," * @returns {} object where keys are ids and values are objects itself"," */","function buildOneToOneIdentityMapWithOrigKeys(objs, idName) {","  var kvMap = new KVMap();","  for (var i = 0; i < objs.length; i++) {","    var obj = objs[i];","    var id = obj[idName];","    kvMap.set(id, obj);","  }","  return kvMap;","}","","function buildOneToManyIdentityMapWithOrigKeys(objs, idName) {","  var kvMap = new KVMap();","  for (var i = 0; i < objs.length; i++) {","    var obj = objs[i];","    var id = obj[idName];","    var value = kvMap.get(id) || [];","    value.push(obj);","    kvMap.set(id, value);","  }","  return kvMap;","}","","/**"," * Yeah, it joins. You need three things id -> obj1 map, id -> [obj2] map and merge function."," * This functions will take each obj1, locate all data to join in map2 and call merge function."," * @param oneToOneIdMap"," * @param oneToManyIdMap"," * @param mergeF  function(obj, objectsToMergeIn)"," */","function join(oneToOneIdMap, oneToManyIdMap, mergeF) {","  var ids = oneToOneIdMap.getKeys();","  for (var i = 0; i < ids.length; i++) {","    var id = ids[i];","    var obj = oneToOneIdMap.get(id);","    var objectsToMergeIn = oneToManyIdMap.get(id) || [];","    mergeF(obj, objectsToMergeIn);","  }","}","","/**"," * Map with arbitrary keys and values. User .set() and .get() to work with values instead of []"," * @returns {{set: Function, get: Function, remove: Function, exist: Function, getKeys: Function}}"," * @constructor"," */","function KVMap() {","  var _originalKeyFieldName = 'originalKey';","  var _valueKeyFieldName = 'value';","  var _dict = {};","  var keyToString = function(key) { return key.toString(); };","  var mapImpl = {","    set: function(key, value) {","      var recordObj = {};","      recordObj[_originalKeyFieldName] = key;","      recordObj[_valueKeyFieldName] = value;","      _dict[keyToString(key)] = recordObj;","      return true;","    },","    get: function(key) {","      var storeObj = _dict[keyToString(key)];","      if (storeObj) {","        return storeObj[_valueKeyFieldName];","      } else {","        return undefined;","      }","    },","    remove: function(key) {","      delete _dict[keyToString(key)];","      return true;","    },","    exist: function(key) {","      var result = _dict.hasOwnProperty(keyToString(key));","      return result;","    },","    getKeys: function() {","      var result = [];","      for (var key in _dict) {","        result.push(_dict[key][_originalKeyFieldName]);","      }","      return result;","    },","","  };","  return mapImpl;","}",""],"l":{"8":1,"9":1,"10":1,"11":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"28":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"40":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"72":0,"73":0,"74":0,"75":0,"76":0,"79":0,"80":0,"81":0,"83":0,"87":0,"88":0,"91":0,"92":0,"95":0,"96":0,"97":0,"99":0,"103":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/transaction.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/transaction.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":1,"64":0,"65":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[1,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"TransactionMixin","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":28}}},"2":{"name":"(anonymous_2)","line":69,"loc":{"start":{"line":69,"column":36},"end":{"line":69,"column":58}}},"3":{"name":"(anonymous_3)","line":73,"loc":{"start":{"line":73,"column":42},"end":{"line":73,"column":69}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":19},"end":{"line":80,"column":30}}},"5":{"name":"(anonymous_5)","line":85,"loc":{"start":{"line":85,"column":60},"end":{"line":85,"column":74}}},"6":{"name":"(anonymous_6)","line":87,"loc":{"start":{"line":87,"column":35},"end":{"line":87,"column":46}}},"7":{"name":"(anonymous_7)","line":98,"loc":{"start":{"line":98,"column":21},"end":{"line":98,"column":32}}},"8":{"name":"(anonymous_8)","line":114,"loc":{"start":{"line":114,"column":33},"end":{"line":114,"column":46}}},"9":{"name":"(anonymous_9)","line":119,"loc":{"start":{"line":119,"column":23},"end":{"line":119,"column":34}}},"10":{"name":"work","line":129,"loc":{"start":{"line":129,"column":4},"end":{"line":129,"column":24}}},"11":{"name":"(anonymous_11)","line":133,"loc":{"start":{"line":133,"column":56},"end":{"line":133,"column":70}}},"12":{"name":"(anonymous_12)","line":148,"loc":{"start":{"line":148,"column":35},"end":{"line":148,"column":48}}},"13":{"name":"(anonymous_13)","line":153,"loc":{"start":{"line":153,"column":23},"end":{"line":153,"column":34}}},"14":{"name":"work","line":163,"loc":{"start":{"line":163,"column":4},"end":{"line":163,"column":24}}},"15":{"name":"(anonymous_15)","line":167,"loc":{"start":{"line":167,"column":58},"end":{"line":167,"column":72}}},"16":{"name":"(anonymous_16)","line":177,"loc":{"start":{"line":177,"column":33},"end":{"line":177,"column":44}}},"17":{"name":"(anonymous_17)","line":181,"loc":{"start":{"line":181,"column":35},"end":{"line":181,"column":46}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":63}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":60}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}},"9":{"start":{"line":23,"column":0},"end":{"line":24,"column":1}},"10":{"start":{"line":69,"column":0},"end":{"line":104,"column":2}},"11":{"start":{"line":70,"column":2},"end":{"line":70,"column":43}},"12":{"start":{"line":71,"column":2},"end":{"line":102,"column":3}},"13":{"start":{"line":72,"column":4},"end":{"line":72,"column":40}},"14":{"start":{"line":73,"column":4},"end":{"line":96,"column":7}},"15":{"start":{"line":74,"column":6},"end":{"line":74,"column":30}},"16":{"start":{"line":74,"column":15},"end":{"line":74,"column":30}},"17":{"start":{"line":75,"column":6},"end":{"line":78,"column":7}},"18":{"start":{"line":77,"column":8},"end":{"line":77,"column":35}},"19":{"start":{"line":79,"column":6},"end":{"line":94,"column":7}},"20":{"start":{"line":80,"column":8},"end":{"line":93,"column":28}},"21":{"start":{"line":81,"column":10},"end":{"line":84,"column":12}},"22":{"start":{"line":85,"column":10},"end":{"line":92,"column":13}},"23":{"start":{"line":86,"column":12},"end":{"line":91,"column":13}},"24":{"start":{"line":87,"column":14},"end":{"line":90,"column":17}},"25":{"start":{"line":88,"column":16},"end":{"line":89,"column":34}},"26":{"start":{"line":95,"column":6},"end":{"line":95,"column":27}},"27":{"start":{"line":98,"column":4},"end":{"line":101,"column":7}},"28":{"start":{"line":99,"column":6},"end":{"line":99,"column":67}},"29":{"start":{"line":100,"column":6},"end":{"line":100,"column":14}},"30":{"start":{"line":103,"column":2},"end":{"line":103,"column":20}},"31":{"start":{"line":107,"column":0},"end":{"line":184,"column":1}},"32":{"start":{"line":108,"column":2},"end":{"line":108,"column":52}},"33":{"start":{"line":114,"column":2},"end":{"line":141,"column":4}},"34":{"start":{"line":115,"column":4},"end":{"line":115,"column":20}},"35":{"start":{"line":116,"column":4},"end":{"line":116,"column":45}},"36":{"start":{"line":118,"column":4},"end":{"line":123,"column":5}},"37":{"start":{"line":119,"column":6},"end":{"line":121,"column":9}},"38":{"start":{"line":120,"column":8},"end":{"line":120,"column":77}},"39":{"start":{"line":122,"column":6},"end":{"line":122,"column":24}},"40":{"start":{"line":124,"column":4},"end":{"line":127,"column":6}},"41":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"42":{"start":{"line":130,"column":6},"end":{"line":130,"column":51}},"43":{"start":{"line":133,"column":4},"end":{"line":138,"column":7}},"44":{"start":{"line":136,"column":6},"end":{"line":136,"column":29}},"45":{"start":{"line":137,"column":6},"end":{"line":137,"column":14}},"46":{"start":{"line":140,"column":4},"end":{"line":140,"column":22}},"47":{"start":{"line":148,"column":2},"end":{"line":175,"column":4}},"48":{"start":{"line":149,"column":4},"end":{"line":149,"column":20}},"49":{"start":{"line":150,"column":4},"end":{"line":150,"column":45}},"50":{"start":{"line":152,"column":4},"end":{"line":157,"column":5}},"51":{"start":{"line":153,"column":6},"end":{"line":155,"column":9}},"52":{"start":{"line":154,"column":8},"end":{"line":154,"column":77}},"53":{"start":{"line":156,"column":6},"end":{"line":156,"column":24}},"54":{"start":{"line":158,"column":4},"end":{"line":161,"column":6}},"55":{"start":{"line":163,"column":4},"end":{"line":165,"column":5}},"56":{"start":{"line":164,"column":6},"end":{"line":164,"column":53}},"57":{"start":{"line":167,"column":4},"end":{"line":172,"column":7}},"58":{"start":{"line":170,"column":6},"end":{"line":170,"column":29}},"59":{"start":{"line":171,"column":6},"end":{"line":171,"column":14}},"60":{"start":{"line":174,"column":4},"end":{"line":174,"column":22}},"61":{"start":{"line":177,"column":2},"end":{"line":179,"column":4}},"62":{"start":{"line":178,"column":4},"end":{"line":178,"column":19}},"63":{"start":{"line":181,"column":2},"end":{"line":183,"column":4}},"64":{"start":{"line":182,"column":4},"end":{"line":182,"column":19}},"65":{"start":{"line":186,"column":0},"end":{"line":186,"column":43}}},"branchMap":{"1":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":7},"end":{"line":70,"column":9}},{"start":{"line":70,"column":13},"end":{"line":70,"column":42}}]},"2":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"3":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":6}},{"start":{"line":74,"column":6},"end":{"line":74,"column":6}}]},"4":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":6}},{"start":{"line":75,"column":6},"end":{"line":75,"column":6}}]},"5":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]},"6":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":12},"end":{"line":86,"column":12}},{"start":{"line":86,"column":12},"end":{"line":86,"column":12}}]},"7":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":0},"end":{"line":107,"column":0}},{"start":{"line":107,"column":0},"end":{"line":107,"column":0}}]},"8":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":9},"end":{"line":116,"column":11}},{"start":{"line":116,"column":15},"end":{"line":116,"column":44}}]},"9":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"10":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":9},"end":{"line":150,"column":11}},{"start":{"line":150,"column":15},"end":{"line":150,"column":44}}]},"11":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]}},"code":["// Copyright IBM Corp. 2015,2016. All Rights Reserved.","// Node module: loopback-datasource-juggler","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","'use strict';","","var g = require('strong-globalize')();","var debug = require('debug')('loopback:connector:transaction');","var uuid = require('uuid');","var utils = require('./utils');","var jutil = require('./jutil');","var ObserverMixin = require('./observer');","","var Transaction = require('loopback-connector').Transaction;","","module.exports = TransactionMixin;","","/**"," * TransactionMixin class.  Use to add transaction APIs to a model class."," *"," * @class TransactionMixin"," */","function TransactionMixin() {","}","","/**"," * Begin a new transaction"," * @param {Object|String} [options] Options can be one of the forms:"," * - Object: {isolationLevel: '...', timeout: 1000}"," * - String: isolationLevel"," *"," * Valid values of `isolationLevel` are:"," *"," * - Transaction.READ_COMMITTED = 'READ COMMITTED'; // default"," * - Transaction.READ_UNCOMMITTED = 'READ UNCOMMITTED';"," * - Transaction.SERIALIZABLE = 'SERIALIZABLE';"," * - Transaction.REPEATABLE_READ = 'REPEATABLE READ';"," *"," * @param {Function} cb Callback function. It calls back with (err, transaction)."," * To pass the transaction context to one of the CRUD methods, use the `options`"," * argument with `transaction` property, for example,"," *"," * ```js"," *"," * MyModel.beginTransaction('READ COMMITTED', function(err, tx) {"," *   MyModel.create({x: 1, y: 'a'}, {transaction: tx}, function(err, inst) {"," *     MyModel.find({x: 1}, {transaction: tx}, function(err, results) {"," *       // ..."," *       tx.commit(function(err) {...});"," *     });"," *   });"," * });"," * ```"," *"," * The transaction can be committed or rolled back. If timeout happens, the"," * transaction will be rolled back. Please note a transaction is typically"," * associated with a pooled connection. Committing or rolling back a transaction"," * will release the connection back to the pool."," *"," * Once the transaction is committed or rolled back, the connection property"," * will be set to null to mark the transaction to be inactive. Trying to commit"," * or rollback an inactive transaction will receive an error from the callback."," *"," * Please also note that the transaction is only honored with the same data"," * source/connector instance. CRUD methods will not join the current transaction"," * if its model is not attached the same data source."," *"," */","TransactionMixin.beginTransaction = function(options, cb) {","  cb = cb || utils.createPromiseCallback();","  if (Transaction) {","    var connector = this.getConnector();","    Transaction.begin(connector, options, function(err, transaction) {","      if (err) return cb(err);","      if (transaction) {","        // Set an informational transaction id","        transaction.id = uuid.v1();","      }","      if (options.timeout) {","        setTimeout(function() {","          var context = {","            transaction: transaction,","            operation: 'timeout',","          };","          transaction.notifyObserversOf('timeout', context, function(err) {","            if (!err) {","              transaction.rollback(function() {","                debug('Transaction %s is rolled back due to timeout',","                  transaction.id);","              });","            }","          });","        }, options.timeout);","      }","      cb(err, transaction);","    });","  } else {","    process.nextTick(function() {","      var err = new Error(g.f('{{Transaction}} is not supported'));","      cb(err);","    });","  }","  return cb.promise;","};","","// Promisify the transaction apis","if (Transaction) {","  jutil.mixin(Transaction.prototype, ObserverMixin);","  /**","   * Commit a transaction and release it back to the pool","   * @param {Function} cb Callback function","   * @returns {Promise|undefined}","   */","  Transaction.prototype.commit = function(cb) {","    var self = this;","    cb = cb || utils.createPromiseCallback();","    // Report an error if the transaction is not active","    if (!self.connection) {","      process.nextTick(function() {","        cb(new Error(g.f('The {{transaction}} is not active: %s', self.id)));","      });","      return cb.promise;","    }","    var context = {","      transaction: self,","      operation: 'commit',","    };","","    function work(done) {","      self.connector.commit(self.connection, done);","    }","","    self.notifyObserversAround('commit', context, work, function(err) {","      // Deference the connection to mark the transaction is not active","      // The connection should have been released back the pool","      self.connection = null;","      cb(err);","    });","","    return cb.promise;","  };","","  /**","   * Rollback a transaction and release it back to the pool","   * @param {Function} cb Callback function","   * @returns {Promise|undefined}","   */","  Transaction.prototype.rollback = function(cb) {","    var self = this;","    cb = cb || utils.createPromiseCallback();","    // Report an error if the transaction is not active","    if (!self.connection) {","      process.nextTick(function() {","        cb(new Error(g.f('The {{transaction}} is not active: %s', self.id)));","      });","      return cb.promise;","    }","    var context = {","      transaction: self,","      operation: 'rollback',","    };","","    function work(done) {","      self.connector.rollback(self.connection, done);","    }","","    self.notifyObserversAround('rollback', context, work, function(err) {","      // Deference the connection to mark the transaction is not active","      // The connection should have been released back the pool","      self.connection = null;","      cb(err);","    });","","    return cb.promise;","  };","","  Transaction.prototype.toJSON = function() {","    return this.id;","  };","","  Transaction.prototype.toString = function() {","    return this.id;","  };","}","","TransactionMixin.Transaction = Transaction;",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"14":1,"16":1,"23":1,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"77":0,"79":0,"80":0,"81":0,"85":0,"86":0,"87":0,"88":0,"95":0,"98":0,"99":0,"100":0,"103":0,"107":1,"108":1,"114":1,"115":0,"116":0,"118":0,"119":0,"120":0,"122":0,"124":0,"129":1,"130":0,"133":0,"136":0,"137":0,"140":0,"148":1,"149":0,"150":0,"152":0,"153":0,"154":0,"156":0,"158":0,"163":1,"164":0,"167":0,"170":0,"171":0,"174":0,"177":1,"178":0,"181":1,"182":0,"186":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"KeyValueAccessObject","line":3,"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":36},"end":{"line":17,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":1}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":50}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":44}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":44}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":50}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":44}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":61}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":46}},"11":{"start":{"line":17,"column":0},"end":{"line":19,"column":2}},"12":{"start":{"line":18,"column":2},"end":{"line":18,"column":40}}},"branchMap":{},"code":["'use strict';","","function KeyValueAccessObject() {","};","","module.exports = KeyValueAccessObject;","","KeyValueAccessObject.delete = require('./delete');","KeyValueAccessObject.deleteAll = require('./delete-all');","KeyValueAccessObject.get = require('./get');","KeyValueAccessObject.set = require('./set');","KeyValueAccessObject.expire = require('./expire');","KeyValueAccessObject.ttl = require('./ttl');","KeyValueAccessObject.iterateKeys = require('./iterate-keys');","KeyValueAccessObject.keys = require('./keys');","","KeyValueAccessObject.getConnector = function() {","  return this.getDataSource().connector;","};","",""],"l":{"3":1,"6":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"17":1,"18":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/delete.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/delete.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"keyValueDelete","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":65}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":21},"end":{"line":37,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":53}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"4":{"start":{"line":19,"column":0},"end":{"line":45,"column":2}},"5":{"start":{"line":20,"column":2},"end":{"line":25,"column":3}},"6":{"start":{"line":21,"column":4},"end":{"line":21,"column":23}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":17}},"8":{"start":{"line":23,"column":9},"end":{"line":25,"column":3}},"9":{"start":{"line":24,"column":4},"end":{"line":24,"column":17}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":75}},"11":{"start":{"line":29,"column":2},"end":{"line":29,"column":55}},"12":{"start":{"line":31,"column":2},"end":{"line":31,"column":38}},"13":{"start":{"line":32,"column":2},"end":{"line":42,"column":3}},"14":{"start":{"line":33,"column":4},"end":{"line":33,"column":61}},"15":{"start":{"line":35,"column":4},"end":{"line":35,"column":70}},"16":{"start":{"line":36,"column":4},"end":{"line":36,"column":18}},"17":{"start":{"line":37,"column":4},"end":{"line":41,"column":7}},"18":{"start":{"line":38,"column":6},"end":{"line":38,"column":34}},"19":{"start":{"line":39,"column":6},"end":{"line":39,"column":27}},"20":{"start":{"line":40,"column":6},"end":{"line":40,"column":20}},"21":{"start":{"line":44,"column":2},"end":{"line":44,"column":26}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":27}},{"start":{"line":20,"column":31},"end":{"line":20,"column":60}}]},"3":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":9},"end":{"line":23,"column":9}},{"start":{"line":23,"column":9},"end":{"line":23,"column":9}}]},"4":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":9},"end":{"line":27,"column":32}},{"start":{"line":27,"column":36},"end":{"line":27,"column":39}}]},"5":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":13},"end":{"line":29,"column":21}},{"start":{"line":29,"column":25},"end":{"line":29,"column":54}}]},"6":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]}},"code":["'use strict';","","var assert = require('assert');","var debug = require('debug')('loopback:kvao:delete');","var utils = require('../utils');","","/**"," * Delete the key-value pair associated to the given key."," *"," * @param {String} key Key to use when searching the database."," * @options {Object} options"," * @callback {Function} callback"," * @param {Error} err Error object."," * @param {*} result Value associated with the given key."," * @promise"," *"," * @header KVAO.prototype.delete(key[, options], cb)"," */","module.exports = function keyValueDelete(key, options, callback) {","  if (callback == undefined && typeof options === 'function') {","    callback = options;","    options = {};","  } else if (!options) {","    options = {};","  }","","  assert(typeof key === 'string' && key, 'key must be a non-empty string');","","  callback = callback || utils.createPromiseCallback();","","  var connector = this.getConnector();","  if (typeof connector.delete === 'function') {","    connector.delete(this.modelName, key, options, callback);","  } else {","    var errMsg = 'Connector does not support key-value pair deletion';","    debug(errMsg);","    process.nextTick(function() {","      var err = new Error(errMsg);","      err.statusCode = 501;","      callback(err);","    });","  }","","  return callback.promise;","};",""],"l":{"3":1,"4":1,"5":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"27":0,"29":0,"31":0,"32":0,"33":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/delete-all.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/delete-all.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"deleteAll","line":18,"loc":{"start":{"line":18,"column":17},"end":{"line":18,"column":55}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":21},"end":{"line":39,"column":32}}},"3":{"name":"iterateAndDelete","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":67}}},"4":{"name":"onNextKey","line":53,"loc":{"start":{"line":53,"column":2},"end":{"line":53,"column":31}}},"5":{"name":"onDeleted","line":59,"loc":{"start":{"line":59,"column":2},"end":{"line":59,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":57}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"5":{"start":{"line":18,"column":0},"end":{"line":46,"column":2}},"6":{"start":{"line":19,"column":2},"end":{"line":24,"column":3}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":23}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":17}},"9":{"start":{"line":22,"column":9},"end":{"line":24,"column":3}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":17}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":67}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":55}},"13":{"start":{"line":30,"column":2},"end":{"line":30,"column":38}},"14":{"start":{"line":31,"column":2},"end":{"line":44,"column":3}},"15":{"start":{"line":32,"column":4},"end":{"line":32,"column":59}},"16":{"start":{"line":33,"column":9},"end":{"line":44,"column":3}},"17":{"start":{"line":34,"column":4},"end":{"line":34,"column":65}},"18":{"start":{"line":35,"column":4},"end":{"line":35,"column":67}},"19":{"start":{"line":37,"column":4},"end":{"line":37,"column":70}},"20":{"start":{"line":38,"column":4},"end":{"line":38,"column":18}},"21":{"start":{"line":39,"column":4},"end":{"line":43,"column":7}},"22":{"start":{"line":40,"column":6},"end":{"line":40,"column":34}},"23":{"start":{"line":41,"column":6},"end":{"line":41,"column":27}},"24":{"start":{"line":42,"column":6},"end":{"line":42,"column":20}},"25":{"start":{"line":45,"column":2},"end":{"line":45,"column":26}},"26":{"start":{"line":48,"column":0},"end":{"line":63,"column":1}},"27":{"start":{"line":49,"column":2},"end":{"line":49,"column":50}},"28":{"start":{"line":50,"column":2},"end":{"line":50,"column":16}},"29":{"start":{"line":51,"column":2},"end":{"line":51,"column":23}},"30":{"start":{"line":53,"column":2},"end":{"line":57,"column":3}},"31":{"start":{"line":54,"column":4},"end":{"line":54,"column":34}},"32":{"start":{"line":54,"column":13},"end":{"line":54,"column":34}},"33":{"start":{"line":55,"column":4},"end":{"line":55,"column":45}},"34":{"start":{"line":55,"column":27},"end":{"line":55,"column":45}},"35":{"start":{"line":56,"column":4},"end":{"line":56,"column":57}},"36":{"start":{"line":59,"column":2},"end":{"line":62,"column":3}},"37":{"start":{"line":60,"column":4},"end":{"line":60,"column":34}},"38":{"start":{"line":60,"column":13},"end":{"line":60,"column":34}},"39":{"start":{"line":61,"column":4},"end":{"line":61,"column":25}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":27}},{"start":{"line":19,"column":31},"end":{"line":19,"column":60}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":9},"end":{"line":22,"column":9}},{"start":{"line":22,"column":9},"end":{"line":22,"column":9}}]},"4":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":13},"end":{"line":28,"column":21}},{"start":{"line":28,"column":25},"end":{"line":28,"column":54}}]},"5":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"6":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":9},"end":{"line":33,"column":9}},{"start":{"line":33,"column":9},"end":{"line":33,"column":9}}]},"7":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"9":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]}},"code":["'use strict';","","var assert = require('assert');","var async = require('async');","var debug = require('debug')('loopback:kvao:delete-all');","var utils = require('../utils');","","/**"," * Delete all keys (and values) associated to the current model."," *"," * @options {Object} options Unused ATM, placeholder for future options."," * @callback {Function} callback"," * @param {Error} err Error object."," * @promise"," *"," * @header KVAO.prototype.deleteAll([options, ]cb)"," */","module.exports = function deleteAll(options, callback) {","  if (callback == undefined && typeof options === 'function') {","    callback = options;","    options = {};","  } else if (!options) {","    options = {};","  }","","  assert(typeof options === 'object', 'options must be an object');","","  callback = callback || utils.createPromiseCallback();","","  var connector = this.getConnector();","  if (typeof connector.deleteAll === 'function') {","    connector.deleteAll(this.modelName, options, callback);","  } else if (typeof connector.delete === 'function') {","    debug('Falling back to unoptimized key-value pair deletion');","    iterateAndDelete(connector, this.modelName, options, callback);","  } else {","    var errMsg = 'Connector does not support key-value pair deletion';","    debug(errMsg);","    process.nextTick(function() {","      var err = new Error(errMsg);","      err.statusCode = 501;","      callback(err);","    });","  }","  return callback.promise;","};","","function iterateAndDelete(connector, modelName, options, callback) {","  var iter = connector.iterateKeys(modelName, {});","  var keys = [];","  iter.next(onNextKey);","","  function onNextKey(err, key) {","    if (err) return callback(err);","    if (key === undefined) return callback();","    connector.delete(modelName, key, options, onDeleted);","  }","","  function onDeleted(err) {","    if (err) return callback(err);","    iter.next(onNextKey);","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"26":0,"28":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"45":0,"48":1,"49":0,"50":0,"51":0,"53":1,"54":0,"55":0,"56":0,"59":1,"60":0,"61":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/get.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/get.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"keyValueGet","line":18,"loc":{"start":{"line":18,"column":17},"end":{"line":18,"column":62}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":56},"end":{"line":29,"column":78}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"3":{"start":{"line":18,"column":0},"end":{"line":34,"column":2}},"4":{"start":{"line":19,"column":2},"end":{"line":24,"column":3}},"5":{"start":{"line":20,"column":4},"end":{"line":20,"column":23}},"6":{"start":{"line":21,"column":4},"end":{"line":21,"column":17}},"7":{"start":{"line":22,"column":9},"end":{"line":24,"column":3}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":17}},"9":{"start":{"line":26,"column":2},"end":{"line":26,"column":75}},"10":{"start":{"line":28,"column":2},"end":{"line":28,"column":55}},"11":{"start":{"line":29,"column":2},"end":{"line":32,"column":5}},"12":{"start":{"line":31,"column":4},"end":{"line":31,"column":26}},"13":{"start":{"line":33,"column":2},"end":{"line":33,"column":26}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":27}},{"start":{"line":19,"column":31},"end":{"line":19,"column":60}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":9},"end":{"line":22,"column":9}},{"start":{"line":22,"column":9},"end":{"line":22,"column":9}}]},"4":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":9},"end":{"line":26,"column":32}},{"start":{"line":26,"column":36},"end":{"line":26,"column":39}}]},"5":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":13},"end":{"line":28,"column":21}},{"start":{"line":28,"column":25},"end":{"line":28,"column":54}}]}},"code":["'use strict';","","var assert = require('assert');","var utils = require('../utils');","","/**"," * Return the value associated with a given key."," *"," * @param {String} key Key to use when searching the database."," * @options {Object} options"," * @callback {Function} callback"," * @param {Error} err Error object."," * @param {*} result Value associated with the given key."," * @promise"," *"," * @header KVAO.get(key, cb)"," */","module.exports = function keyValueGet(key, options, callback) {","  if (callback == undefined && typeof options === 'function') {","    callback = options;","    options = {};","  } else if (!options) {","    options = {};","  }","","  assert(typeof key === 'string' && key, 'key must be a non-empty string');","","  callback = callback || utils.createPromiseCallback();","  this.getConnector().get(this.modelName, key, options, function(err, result) {","    // TODO convert raw result to Model instance (?)","    callback(err, result);","  });","  return callback.promise;","};",""],"l":{"3":1,"4":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"26":0,"28":0,"29":0,"31":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/set.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/set.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"keyValueSet","line":21,"loc":{"start":{"line":21,"column":17},"end":{"line":21,"column":69}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"3":{"start":{"line":21,"column":0},"end":{"line":44,"column":2}},"4":{"start":{"line":22,"column":2},"end":{"line":29,"column":3}},"5":{"start":{"line":23,"column":4},"end":{"line":23,"column":23}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":17}},"7":{"start":{"line":25,"column":9},"end":{"line":29,"column":3}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":29}},"9":{"start":{"line":27,"column":9},"end":{"line":29,"column":3}},"10":{"start":{"line":28,"column":4},"end":{"line":28,"column":17}},"11":{"start":{"line":31,"column":2},"end":{"line":31,"column":75}},"12":{"start":{"line":32,"column":2},"end":{"line":32,"column":62}},"13":{"start":{"line":33,"column":2},"end":{"line":33,"column":67}},"14":{"start":{"line":34,"column":2},"end":{"line":37,"column":3}},"15":{"start":{"line":35,"column":4},"end":{"line":36,"column":47}},"16":{"start":{"line":39,"column":2},"end":{"line":39,"column":55}},"17":{"start":{"line":42,"column":2},"end":{"line":42,"column":73}},"18":{"start":{"line":43,"column":2},"end":{"line":43,"column":26}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":27}},{"start":{"line":22,"column":31},"end":{"line":22,"column":60}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":9},"end":{"line":25,"column":9}},{"start":{"line":25,"column":9},"end":{"line":25,"column":9}}]},"4":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":9},"end":{"line":27,"column":9}},{"start":{"line":27,"column":9},"end":{"line":27,"column":9}}]},"5":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":9},"end":{"line":31,"column":32}},{"start":{"line":31,"column":36},"end":{"line":31,"column":39}}]},"6":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"7":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":13}},{"start":{"line":34,"column":17},"end":{"line":34,"column":33}}]},"8":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":11},"end":{"line":35,"column":42}},{"start":{"line":35,"column":46},"end":{"line":35,"column":61}}]},"9":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":13},"end":{"line":39,"column":21}},{"start":{"line":39,"column":25},"end":{"line":39,"column":54}}]}},"code":["'use strict';","","var assert = require('assert');","var utils = require('../utils');","","/**"," * Persist a value and associate it with the given key."," *"," * @param {String} key Key to associate with the given value."," * @param {*} value Value to persist."," * @options {Number|Object} options Optional settings for the key-value"," *   pair. If a Number is provided, it is set as the TTL (time to live) in ms"," *   (milliseconds) for the key-value pair."," * @property {Number} ttl TTL for the key-value pair in ms."," * @callback {Function} callback"," * @param {Error} err Error object."," * @promise"," *"," * @header KVAO.set(key, value, cb)"," */","module.exports = function keyValueSet(key, value, options, callback) {","  if (callback == undefined && typeof options === 'function') {","    callback = options;","    options = {};","  } else if (typeof options === 'number') {","    options = {ttl: options};","  } else if (!options) {","    options = {};","  }","","  assert(typeof key === 'string' && key, 'key must be a non-empty string');","  assert(value != null, 'value must be defined and not null');","  assert(typeof options === 'object', 'options must be an object');","  if (options && 'ttl' in options) {","    assert(typeof options.ttl === 'number' && options.ttl > 0,","      'options.ttl must be a positive number');","  }","","  callback = callback || utils.createPromiseCallback();","","  // TODO convert possible model instance in \"value\" to raw data via toObect()","  this.getConnector().set(this.modelName, key, value, options, callback);","  return callback.promise;","};",""],"l":{"3":1,"4":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"31":0,"32":0,"33":0,"34":0,"35":0,"39":0,"42":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/expire.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/expire.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"keyValueExpire","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":70}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"3":{"start":{"line":19,"column":0},"end":{"line":34,"column":2}},"4":{"start":{"line":20,"column":2},"end":{"line":25,"column":3}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":23}},"6":{"start":{"line":22,"column":4},"end":{"line":22,"column":17}},"7":{"start":{"line":23,"column":9},"end":{"line":25,"column":3}},"8":{"start":{"line":24,"column":4},"end":{"line":24,"column":17}},"9":{"start":{"line":27,"column":2},"end":{"line":27,"column":75}},"10":{"start":{"line":28,"column":2},"end":{"line":28,"column":79}},"11":{"start":{"line":29,"column":2},"end":{"line":29,"column":67}},"12":{"start":{"line":31,"column":2},"end":{"line":31,"column":55}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":74}},"14":{"start":{"line":33,"column":2},"end":{"line":33,"column":26}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":27}},{"start":{"line":20,"column":31},"end":{"line":20,"column":60}}]},"3":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":9},"end":{"line":23,"column":9}},{"start":{"line":23,"column":9},"end":{"line":23,"column":9}}]},"4":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":9},"end":{"line":27,"column":32}},{"start":{"line":27,"column":36},"end":{"line":27,"column":39}}]},"5":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":9},"end":{"line":28,"column":32}},{"start":{"line":28,"column":36},"end":{"line":28,"column":43}}]},"6":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":13},"end":{"line":31,"column":21}},{"start":{"line":31,"column":25},"end":{"line":31,"column":54}}]}},"code":["'use strict';","","var assert = require('assert');","var utils = require('../utils');","","/**"," * Set the TTL (time to live) in ms (milliseconds) for a given key. TTL is the"," * remaining time before a key-value pair is discarded from the database."," *"," * @param {String} key Key to use when searching the database."," * @param {Number} ttl TTL in ms to set for the key."," * @options {Object} options"," * @callback {Function} callback"," * @param {Error} err Error object."," * @promise"," *"," * @header KVAO.expire(key, ttl, cb)"," */","module.exports = function keyValueExpire(key, ttl, options, callback) {","  if (callback == undefined && typeof options === 'function') {","    callback = options;","    options = {};","  } else if (!options) {","    options = {};","  }","","  assert(typeof key === 'string' && key, 'key must be a non-empty string');","  assert(typeof ttl === 'number' && ttl > 0, 'ttl must be a positive integer');","  assert(typeof options === 'object', 'options must be an object');","","  callback = callback || utils.createPromiseCallback();","  this.getConnector().expire(this.modelName, key, ttl, options, callback);","  return callback.promise;","};",""],"l":{"3":1,"4":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/ttl.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/ttl.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"keyValueTtl","line":20,"loc":{"start":{"line":20,"column":17},"end":{"line":20,"column":62}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"3":{"start":{"line":20,"column":0},"end":{"line":34,"column":2}},"4":{"start":{"line":21,"column":2},"end":{"line":26,"column":3}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":23}},"6":{"start":{"line":23,"column":4},"end":{"line":23,"column":17}},"7":{"start":{"line":24,"column":9},"end":{"line":26,"column":3}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":17}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":75}},"10":{"start":{"line":29,"column":2},"end":{"line":29,"column":67}},"11":{"start":{"line":31,"column":2},"end":{"line":31,"column":55}},"12":{"start":{"line":32,"column":2},"end":{"line":32,"column":66}},"13":{"start":{"line":33,"column":2},"end":{"line":33,"column":26}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":27}},{"start":{"line":21,"column":31},"end":{"line":21,"column":60}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":9},"end":{"line":24,"column":9}},{"start":{"line":24,"column":9},"end":{"line":24,"column":9}}]},"4":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":9},"end":{"line":28,"column":32}},{"start":{"line":28,"column":36},"end":{"line":28,"column":39}}]},"5":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":13},"end":{"line":31,"column":21}},{"start":{"line":31,"column":25},"end":{"line":31,"column":54}}]}},"code":["'use strict';","","var assert = require('assert');","var utils = require('../utils');","","/**"," * Return the TTL (time to live) for a given key. TTL is the remaining time"," * before a key-value pair is discarded from the database."," *"," * @param {String} key Key to use when searching the database."," * @options {Object} options"," * @callback {Function} callback"," * @param {Error} error"," * @param {Number} ttl Expiration time for the key-value pair. `undefined` if"," *   TTL was not initially set."," * @promise"," *"," * @header KVAO.ttl(key, cb)"," */","module.exports = function keyValueTtl(key, options, callback) {","  if (callback == undefined && typeof options === 'function') {","    callback = options;","    options = {};","  } else if (!options) {","    options = {};","  }","","  assert(typeof key === 'string' && key, 'key must be a non-empty string');","  assert(typeof options === 'object', 'options must be an object');","","  callback = callback || utils.createPromiseCallback();","  this.getConnector().ttl(this.modelName, key, options, callback);","  return callback.promise;","};",""],"l":{"3":1,"4":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"28":0,"29":0,"31":0,"32":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/iterate-keys.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/iterate-keys.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"keyValueIterateKeys","line":22,"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":63}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":10},"end":{"line":32,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"3":{"start":{"line":22,"column":0},"end":{"line":38,"column":2}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":24}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":26}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":65}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":67}},"8":{"start":{"line":29,"column":2},"end":{"line":29,"column":78}},"9":{"start":{"line":31,"column":2},"end":{"line":37,"column":4}},"10":{"start":{"line":33,"column":6},"end":{"line":33,"column":59}},"11":{"start":{"line":34,"column":6},"end":{"line":34,"column":26}},"12":{"start":{"line":35,"column":6},"end":{"line":35,"column":30}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":11},"end":{"line":23,"column":17}},{"start":{"line":23,"column":21},"end":{"line":23,"column":23}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":19}},{"start":{"line":24,"column":23},"end":{"line":24,"column":25}}]},"3":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":17},"end":{"line":33,"column":25}},{"start":{"line":33,"column":29},"end":{"line":33,"column":58}}]}},"code":["'use strict';","","var assert = require('assert');","var utils = require('../utils');","","/**"," * Asynchronously iterate all keys in the database. Similar to `.keys()` but"," * instead allows for iteration over large data sets without having to load"," * everything into memory at once."," *"," * @param {Object} filter An optional filter object with the following"," * @param {String} filter.match Glob string to use to filter returned"," *   keys (i.e. `userid.*`). All connectors are required to support `*` and"," *   `?`. They may also support additional special characters that are"," *   specific to the backing database."," * @param {Object} options"," * @returns {AsyncIterator} An Object implementing `next(cb) -> Promise`"," *   function that can be used to iterate all keys."," *"," * @header KVAO.iterateKeys(filter)"," */","module.exports = function keyValueIterateKeys(filter, options) {","  filter = filter || {};","  options = options || {};","","  assert(typeof filter === 'object', 'filter must be an object');","  assert(typeof options === 'object', 'options must be an object');","","  var iter = this.getConnector().iterateKeys(this.modelName, filter, options);","  // promisify the returned iterator","  return {","    next: function(callback) {","      callback = callback || utils.createPromiseCallback();","      iter.next(callback);","      return callback.promise;","    },","  };","};",""],"l":{"3":1,"4":1,"22":1,"23":0,"24":0,"26":0,"27":0,"29":0,"31":0,"33":0,"34":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/keys.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-datasource-juggler/lib/kvao/keys.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"keyValueKeys","line":25,"loc":{"start":{"line":25,"column":17},"end":{"line":25,"column":66}}},"2":{"name":"onNextKey","line":48,"loc":{"start":{"line":48,"column":2},"end":{"line":48,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"3":{"start":{"line":25,"column":0},"end":{"line":56,"column":2}},"4":{"start":{"line":26,"column":2},"end":{"line":34,"column":3}},"5":{"start":{"line":27,"column":4},"end":{"line":33,"column":5}},"6":{"start":{"line":28,"column":6},"end":{"line":28,"column":25}},"7":{"start":{"line":29,"column":6},"end":{"line":29,"column":26}},"8":{"start":{"line":30,"column":11},"end":{"line":33,"column":5}},"9":{"start":{"line":31,"column":6},"end":{"line":31,"column":24}},"10":{"start":{"line":32,"column":6},"end":{"line":32,"column":25}},"11":{"start":{"line":36,"column":2},"end":{"line":36,"column":24}},"12":{"start":{"line":37,"column":2},"end":{"line":37,"column":26}},"13":{"start":{"line":39,"column":2},"end":{"line":39,"column":65}},"14":{"start":{"line":40,"column":2},"end":{"line":40,"column":67}},"15":{"start":{"line":42,"column":2},"end":{"line":42,"column":55}},"16":{"start":{"line":44,"column":2},"end":{"line":44,"column":47}},"17":{"start":{"line":45,"column":2},"end":{"line":45,"column":16}},"18":{"start":{"line":46,"column":2},"end":{"line":46,"column":23}},"19":{"start":{"line":48,"column":2},"end":{"line":53,"column":3}},"20":{"start":{"line":49,"column":4},"end":{"line":49,"column":34}},"21":{"start":{"line":49,"column":13},"end":{"line":49,"column":34}},"22":{"start":{"line":50,"column":4},"end":{"line":50,"column":55}},"23":{"start":{"line":50,"column":27},"end":{"line":50,"column":55}},"24":{"start":{"line":51,"column":4},"end":{"line":51,"column":19}},"25":{"start":{"line":52,"column":4},"end":{"line":52,"column":25}},"26":{"start":{"line":55,"column":2},"end":{"line":55,"column":26}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":11},"end":{"line":30,"column":11}},{"start":{"line":30,"column":11},"end":{"line":30,"column":11}}]},"4":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":15},"end":{"line":30,"column":36}},{"start":{"line":30,"column":40},"end":{"line":30,"column":68}}]},"5":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":11},"end":{"line":36,"column":17}},{"start":{"line":36,"column":21},"end":{"line":36,"column":23}}]},"6":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":19}},{"start":{"line":37,"column":23},"end":{"line":37,"column":25}}]},"7":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":13},"end":{"line":42,"column":21}},{"start":{"line":42,"column":25},"end":{"line":42,"column":54}}]},"8":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"9":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]}},"code":["'use strict';","","var assert = require('assert');","var utils = require('../utils');","","/**"," * Return all keys in the database."," *"," * **WARNING**: This method is not suitable for large data sets as all"," * key-values pairs are loaded into memory at once. For large data sets,"," * use `iterateKeys()` instead."," *"," * @param {Object} filter An optional filter object with the following"," * @param {String} filter.match Glob string used to filter returned"," *   keys (i.e. `userid.*`). All connectors are required to support `*` and"," *   `?`, but may also support additional special characters specific to the"," *   database."," * @param {Object} options"," * @callback {Function} callback"," * @promise"," *"," *"," * @header KVAO.keys(filter, callback)"," */","module.exports = function keyValueKeys(filter, options, callback) {","  if (callback === undefined) {","    if (typeof options === 'function') {","      callback = options;","      options = undefined;","    } else if (options === undefined && typeof filter === 'function') {","      callback = filter;","      filter = undefined;","    }","  }","","  filter = filter || {};","  options = options || {};","","  assert(typeof filter === 'object', 'filter must be an object');","  assert(typeof options === 'object', 'options must be an object');","","  callback = callback || utils.createPromiseCallback();","","  var iter = this.iterateKeys(filter, options);","  var keys = [];","  iter.next(onNextKey);","","  function onNextKey(err, key) {","    if (err) return callback(err);","    if (key === undefined) return callback(null, keys);","    keys.push(key);","    iter.next(onNextKey);","  }","","  return callback.promise;","};",""],"l":{"3":1,"4":1,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"36":0,"37":0,"39":0,"40":0,"42":0,"44":0,"45":0,"46":0,"48":1,"49":0,"50":0,"51":0,"52":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/registry.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/registry.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":11,"18":11,"19":11,"20":11,"21":11,"22":11,"23":11,"24":11,"25":11,"26":2,"27":2,"28":2,"29":0,"30":11,"31":11,"32":11,"33":11,"34":11,"35":1,"36":11,"37":11,"38":34,"39":22,"40":12,"41":0,"42":12,"43":11,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":11,"89":11,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1,"106":15,"107":0,"108":15,"109":1,"110":13,"111":13,"112":13,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":1,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0},"b":{"1":[11,0],"2":[11,11],"3":[11,0],"4":[11,9],"5":[2,9],"6":[0,2],"7":[11,9],"8":[22,12],"9":[0,12],"10":[0,0],"11":[0,0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[11,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,15],"39":[13,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0]},"f":{"1":1,"2":11,"3":11,"4":0,"5":0,"6":0,"7":0,"8":11,"9":0,"10":15,"11":13,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"Registry","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":20}}},"2":{"name":"(anonymous_2)","line":98,"loc":{"start":{"line":98,"column":33},"end":{"line":98,"column":69}}},"3":{"name":"buildModelOptionsFromConfig","line":130,"loc":{"start":{"line":130,"column":0},"end":{"line":130,"column":45}}},"4":{"name":"addACL","line":154,"loc":{"start":{"line":154,"column":0},"end":{"line":154,"column":27}}},"5":{"name":"(anonymous_5)","line":178,"loc":{"start":{"line":178,"column":36},"end":{"line":178,"column":64}}},"6":{"name":"(anonymous_6)","line":185,"loc":{"start":{"line":185,"column":42},"end":{"line":185,"column":56}}},"7":{"name":"(anonymous_7)","line":197,"loc":{"start":{"line":197,"column":24},"end":{"line":197,"column":38}}},"8":{"name":"(anonymous_8)","line":261,"loc":{"start":{"line":261,"column":42},"end":{"line":261,"column":71}}},"9":{"name":"(anonymous_9)","line":269,"loc":{"start":{"line":269,"column":31},"end":{"line":269,"column":45}}},"10":{"name":"(anonymous_10)","line":297,"loc":{"start":{"line":297,"column":31},"end":{"line":297,"column":51}}},"11":{"name":"(anonymous_11)","line":311,"loc":{"start":{"line":311,"column":30},"end":{"line":311,"column":50}}},"12":{"name":"(anonymous_12)","line":327,"loc":{"start":{"line":327,"column":36},"end":{"line":327,"column":56}}},"13":{"name":"(anonymous_13)","line":357,"loc":{"start":{"line":357,"column":38},"end":{"line":357,"column":62}}},"14":{"name":"(anonymous_14)","line":361,"loc":{"start":{"line":361,"column":19},"end":{"line":361,"column":56}}},"15":{"name":"(anonymous_15)","line":395,"loc":{"start":{"line":395,"column":28},"end":{"line":395,"column":43}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":53}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":50}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":40}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":52}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":26}},"10":{"start":{"line":24,"column":0},"end":{"line":32,"column":1}},"11":{"start":{"line":25,"column":2},"end":{"line":25,"column":31}},"12":{"start":{"line":26,"column":2},"end":{"line":26,"column":41}},"13":{"start":{"line":27,"column":2},"end":{"line":27,"column":27}},"14":{"start":{"line":28,"column":2},"end":{"line":28,"column":37}},"15":{"start":{"line":31,"column":2},"end":{"line":31,"column":67}},"16":{"start":{"line":98,"column":0},"end":{"line":128,"column":2}},"17":{"start":{"line":99,"column":2},"end":{"line":107,"column":3}},"18":{"start":{"line":100,"column":4},"end":{"line":100,"column":22}},"19":{"start":{"line":101,"column":4},"end":{"line":101,"column":23}},"20":{"start":{"line":102,"column":4},"end":{"line":102,"column":35}},"21":{"start":{"line":103,"column":4},"end":{"line":103,"column":50}},"22":{"start":{"line":105,"column":4},"end":{"line":106,"column":59}},"23":{"start":{"line":109,"column":2},"end":{"line":109,"column":26}},"24":{"start":{"line":110,"column":2},"end":{"line":110,"column":48}},"25":{"start":{"line":112,"column":2},"end":{"line":119,"column":3}},"26":{"start":{"line":113,"column":4},"end":{"line":113,"column":29}},"27":{"start":{"line":114,"column":4},"end":{"line":114,"column":42}},"28":{"start":{"line":115,"column":4},"end":{"line":118,"column":5}},"29":{"start":{"line":116,"column":6},"end":{"line":117,"column":25}},"30":{"start":{"line":121,"column":2},"end":{"line":121,"column":59}},"31":{"start":{"line":122,"column":2},"end":{"line":122,"column":58}},"32":{"start":{"line":123,"column":2},"end":{"line":123,"column":24}},"33":{"start":{"line":125,"column":2},"end":{"line":125,"column":59}},"34":{"start":{"line":127,"column":2},"end":{"line":127,"column":15}},"35":{"start":{"line":130,"column":0},"end":{"line":147,"column":1}},"36":{"start":{"line":131,"column":2},"end":{"line":131,"column":43}},"37":{"start":{"line":132,"column":2},"end":{"line":145,"column":3}},"38":{"start":{"line":133,"column":4},"end":{"line":136,"column":5}},"39":{"start":{"line":135,"column":6},"end":{"line":135,"column":15}},"40":{"start":{"line":138,"column":4},"end":{"line":142,"column":5}},"41":{"start":{"line":141,"column":6},"end":{"line":141,"column":15}},"42":{"start":{"line":144,"column":4},"end":{"line":144,"column":31}},"43":{"start":{"line":146,"column":2},"end":{"line":146,"column":17}},"44":{"start":{"line":154,"column":0},"end":{"line":166,"column":1}},"45":{"start":{"line":155,"column":2},"end":{"line":164,"column":3}},"46":{"start":{"line":157,"column":4},"end":{"line":163,"column":5}},"47":{"start":{"line":161,"column":6},"end":{"line":161,"column":20}},"48":{"start":{"line":162,"column":6},"end":{"line":162,"column":13}},"49":{"start":{"line":165,"column":2},"end":{"line":165,"column":17}},"50":{"start":{"line":178,"column":0},"end":{"line":259,"column":2}},"51":{"start":{"line":179,"column":2},"end":{"line":179,"column":36}},"52":{"start":{"line":180,"column":2},"end":{"line":180,"column":38}},"53":{"start":{"line":183,"column":2},"end":{"line":192,"column":3}},"54":{"start":{"line":184,"column":4},"end":{"line":184,"column":66}},"55":{"start":{"line":185,"column":4},"end":{"line":188,"column":7}},"56":{"start":{"line":187,"column":6},"end":{"line":187,"column":75}},"57":{"start":{"line":189,"column":9},"end":{"line":192,"column":3}},"58":{"start":{"line":190,"column":4},"end":{"line":191,"column":38}},"59":{"start":{"line":195,"column":2},"end":{"line":203,"column":3}},"60":{"start":{"line":196,"column":4},"end":{"line":196,"column":51}},"61":{"start":{"line":197,"column":4},"end":{"line":199,"column":7}},"62":{"start":{"line":198,"column":6},"end":{"line":198,"column":24}},"63":{"start":{"line":200,"column":9},"end":{"line":203,"column":3}},"64":{"start":{"line":201,"column":4},"end":{"line":202,"column":48}},"65":{"start":{"line":206,"column":2},"end":{"line":212,"column":4}},"66":{"start":{"line":213,"column":2},"end":{"line":225,"column":3}},"67":{"start":{"line":214,"column":4},"end":{"line":221,"column":5}},"68":{"start":{"line":215,"column":6},"end":{"line":220,"column":7}},"69":{"start":{"line":216,"column":8},"end":{"line":216,"column":40}},"70":{"start":{"line":218,"column":8},"end":{"line":219,"column":24}},"71":{"start":{"line":222,"column":9},"end":{"line":225,"column":3}},"72":{"start":{"line":223,"column":4},"end":{"line":224,"column":38}},"73":{"start":{"line":229,"column":2},"end":{"line":246,"column":3}},"74":{"start":{"line":230,"column":4},"end":{"line":232,"column":65}},"75":{"start":{"line":233,"column":4},"end":{"line":233,"column":42}},"76":{"start":{"line":234,"column":4},"end":{"line":235,"column":41}},"77":{"start":{"line":236,"column":9},"end":{"line":246,"column":3}},"78":{"start":{"line":237,"column":4},"end":{"line":238,"column":17}},"79":{"start":{"line":240,"column":4},"end":{"line":241,"column":17}},"80":{"start":{"line":242,"column":4},"end":{"line":245,"column":17}},"81":{"start":{"line":248,"column":2},"end":{"line":248,"column":69}},"82":{"start":{"line":249,"column":2},"end":{"line":249,"column":62}},"83":{"start":{"line":250,"column":2},"end":{"line":250,"column":68}},"84":{"start":{"line":251,"column":2},"end":{"line":255,"column":3}},"85":{"start":{"line":252,"column":4},"end":{"line":254,"column":33}},"86":{"start":{"line":258,"column":2},"end":{"line":258,"column":55}},"87":{"start":{"line":261,"column":0},"end":{"line":287,"column":2}},"88":{"start":{"line":262,"column":2},"end":{"line":262,"column":23}},"89":{"start":{"line":262,"column":16},"end":{"line":262,"column":23}},"90":{"start":{"line":263,"column":2},"end":{"line":267,"column":3}},"91":{"start":{"line":264,"column":4},"end":{"line":265,"column":27}},"92":{"start":{"line":266,"column":4},"end":{"line":266,"column":11}},"93":{"start":{"line":269,"column":2},"end":{"line":286,"column":5}},"94":{"start":{"line":270,"column":4},"end":{"line":270,"column":28}},"95":{"start":{"line":271,"column":4},"end":{"line":271,"column":43}},"96":{"start":{"line":272,"column":4},"end":{"line":272,"column":22}},"97":{"start":{"line":274,"column":4},"end":{"line":284,"column":5}},"98":{"start":{"line":275,"column":6},"end":{"line":275,"column":34}},"99":{"start":{"line":276,"column":6},"end":{"line":276,"column":31}},"100":{"start":{"line":277,"column":11},"end":{"line":284,"column":5}},"101":{"start":{"line":278,"column":6},"end":{"line":279,"column":75}},"102":{"start":{"line":281,"column":6},"end":{"line":281,"column":34}},"103":{"start":{"line":282,"column":6},"end":{"line":283,"column":86}},"104":{"start":{"line":285,"column":4},"end":{"line":285,"column":38}},"105":{"start":{"line":297,"column":0},"end":{"line":300,"column":2}},"106":{"start":{"line":298,"column":2},"end":{"line":298,"column":56}},"107":{"start":{"line":298,"column":39},"end":{"line":298,"column":56}},"108":{"start":{"line":299,"column":2},"end":{"line":299,"column":45}},"109":{"start":{"line":311,"column":0},"end":{"line":316,"column":2}},"110":{"start":{"line":312,"column":2},"end":{"line":312,"column":40}},"111":{"start":{"line":313,"column":2},"end":{"line":313,"column":26}},"112":{"start":{"line":313,"column":13},"end":{"line":313,"column":26}},"113":{"start":{"line":315,"column":2},"end":{"line":315,"column":57}},"114":{"start":{"line":327,"column":0},"end":{"line":345,"column":2}},"115":{"start":{"line":328,"column":2},"end":{"line":328,"column":30}},"116":{"start":{"line":329,"column":2},"end":{"line":329,"column":40}},"117":{"start":{"line":331,"column":2},"end":{"line":332,"column":58}},"118":{"start":{"line":334,"column":2},"end":{"line":336,"column":3}},"119":{"start":{"line":335,"column":4},"end":{"line":335,"column":41}},"120":{"start":{"line":338,"column":2},"end":{"line":338,"column":40}},"121":{"start":{"line":339,"column":2},"end":{"line":343,"column":3}},"122":{"start":{"line":340,"column":4},"end":{"line":342,"column":5}},"123":{"start":{"line":341,"column":6},"end":{"line":341,"column":23}},"124":{"start":{"line":344,"column":2},"end":{"line":344,"column":19}},"125":{"start":{"line":357,"column":0},"end":{"line":386,"column":2}},"126":{"start":{"line":358,"column":2},"end":{"line":358,"column":18}},"127":{"start":{"line":360,"column":2},"end":{"line":360,"column":60}},"128":{"start":{"line":361,"column":2},"end":{"line":378,"column":4}},"129":{"start":{"line":362,"column":4},"end":{"line":362,"column":30}},"130":{"start":{"line":363,"column":4},"end":{"line":363,"column":52}},"131":{"start":{"line":364,"column":4},"end":{"line":374,"column":5}},"132":{"start":{"line":366,"column":6},"end":{"line":366,"column":41}},"133":{"start":{"line":367,"column":6},"end":{"line":372,"column":7}},"134":{"start":{"line":369,"column":8},"end":{"line":369,"column":40}},"135":{"start":{"line":371,"column":8},"end":{"line":371,"column":31}},"136":{"start":{"line":373,"column":6},"end":{"line":373,"column":32}},"137":{"start":{"line":375,"column":4},"end":{"line":375,"column":65}},"138":{"start":{"line":376,"column":4},"end":{"line":376,"column":27}},"139":{"start":{"line":377,"column":4},"end":{"line":377,"column":21}},"140":{"start":{"line":380,"column":2},"end":{"line":383,"column":3}},"141":{"start":{"line":381,"column":4},"end":{"line":381,"column":87}},"142":{"start":{"line":382,"column":4},"end":{"line":382,"column":25}},"143":{"start":{"line":385,"column":2},"end":{"line":385,"column":12}},"144":{"start":{"line":395,"column":0},"end":{"line":408,"column":2}},"145":{"start":{"line":396,"column":2},"end":{"line":396,"column":27}},"146":{"start":{"line":397,"column":2},"end":{"line":399,"column":12}},"147":{"start":{"line":401,"column":2},"end":{"line":405,"column":3}},"148":{"start":{"line":402,"column":4},"end":{"line":404,"column":7}},"149":{"start":{"line":407,"column":2},"end":{"line":407,"column":16}}},"branchMap":{"1":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]},"2":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":6},"end":{"line":99,"column":28}},{"start":{"line":99,"column":32},"end":{"line":99,"column":56}}]},"3":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":12},"end":{"line":109,"column":19}},{"start":{"line":109,"column":23},"end":{"line":109,"column":25}}]},"4":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":18},"end":{"line":110,"column":30}},{"start":{"line":110,"column":34},"end":{"line":110,"column":47}}]},"5":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"6":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"7":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":14},"end":{"line":121,"column":23}},{"start":{"line":121,"column":27},"end":{"line":121,"column":58}}]},"8":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":4}},{"start":{"line":133,"column":4},"end":{"line":133,"column":4}}]},"9":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"10":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"11":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":8},"end":{"line":157,"column":41}},{"start":{"line":158,"column":6},"end":{"line":158,"column":43}},{"start":{"line":159,"column":6},"end":{"line":159,"column":49}},{"start":{"line":160,"column":6},"end":{"line":160,"column":45}}]},"12":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":2},"end":{"line":183,"column":2}},{"start":{"line":183,"column":2},"end":{"line":183,"column":2}}]},"13":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":6},"end":{"line":183,"column":42}},{"start":{"line":183,"column":46},"end":{"line":183,"column":71}}]},"14":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":41},"end":{"line":184,"column":59}},{"start":{"line":184,"column":63},"end":{"line":184,"column":65}}]},"15":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":30},"end":{"line":187,"column":44}},{"start":{"line":187,"column":48},"end":{"line":187,"column":50}}]},"16":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":9},"end":{"line":189,"column":9}},{"start":{"line":189,"column":9},"end":{"line":189,"column":9}}]},"17":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"18":{"line":196,"type":"binary-expr","locations":[{"start":{"line":196,"column":31},"end":{"line":196,"column":44}},{"start":{"line":196,"column":48},"end":{"line":196,"column":50}}]},"19":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":9},"end":{"line":200,"column":9}},{"start":{"line":200,"column":9},"end":{"line":200,"column":9}}]},"20":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":2},"end":{"line":213,"column":2}},{"start":{"line":213,"column":2},"end":{"line":213,"column":2}}]},"21":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":6},"end":{"line":213,"column":40}},{"start":{"line":213,"column":44},"end":{"line":213,"column":67}}]},"22":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":6},"end":{"line":215,"column":6}},{"start":{"line":215,"column":6},"end":{"line":215,"column":6}}]},"23":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":9},"end":{"line":222,"column":9}},{"start":{"line":222,"column":9},"end":{"line":222,"column":9}}]},"24":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":2},"end":{"line":229,"column":2}},{"start":{"line":229,"column":2},"end":{"line":229,"column":2}}]},"25":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":9},"end":{"line":236,"column":9}},{"start":{"line":236,"column":9},"end":{"line":236,"column":9}}]},"26":{"line":236,"type":"binary-expr","locations":[{"start":{"line":236,"column":13},"end":{"line":236,"column":39}},{"start":{"line":236,"column":43},"end":{"line":236,"column":70}}]},"27":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":23},"end":{"line":248,"column":37}},{"start":{"line":248,"column":41},"end":{"line":248,"column":68}}]},"28":{"line":249,"type":"binary-expr","locations":[{"start":{"line":249,"column":22},"end":{"line":249,"column":36}},{"start":{"line":249,"column":40},"end":{"line":249,"column":61}}]},"29":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":2},"end":{"line":251,"column":2}},{"start":{"line":251,"column":2},"end":{"line":251,"column":2}}]},"30":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":6},"end":{"line":251,"column":19}},{"start":{"line":251,"column":23},"end":{"line":251,"column":37}}]},"31":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":2},"end":{"line":262,"column":2}},{"start":{"line":262,"column":2},"end":{"line":262,"column":2}}]},"32":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":2},"end":{"line":263,"column":2}},{"start":{"line":263,"column":2},"end":{"line":263,"column":2}}]},"33":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":4},"end":{"line":274,"column":4}},{"start":{"line":274,"column":4},"end":{"line":274,"column":4}}]},"34":{"line":275,"type":"cond-expr","locations":[{"start":{"line":275,"column":23},"end":{"line":275,"column":26}},{"start":{"line":275,"column":29},"end":{"line":275,"column":33}}]},"35":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":11},"end":{"line":277,"column":11}},{"start":{"line":277,"column":11},"end":{"line":277,"column":11}}]},"36":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":15},"end":{"line":277,"column":28}},{"start":{"line":277,"column":32},"end":{"line":277,"column":33}}]},"37":{"line":281,"type":"cond-expr","locations":[{"start":{"line":281,"column":23},"end":{"line":281,"column":26}},{"start":{"line":281,"column":29},"end":{"line":281,"column":33}}]},"38":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":2},"end":{"line":298,"column":2}},{"start":{"line":298,"column":2},"end":{"line":298,"column":2}}]},"39":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":2},"end":{"line":313,"column":2}},{"start":{"line":313,"column":2},"end":{"line":313,"column":2}}]},"40":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":2},"end":{"line":334,"column":2}},{"start":{"line":334,"column":2},"end":{"line":334,"column":2}}]},"41":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":4},"end":{"line":340,"column":4}},{"start":{"line":340,"column":4},"end":{"line":340,"column":4}}]},"42":{"line":362,"type":"binary-expr","locations":[{"start":{"line":362,"column":15},"end":{"line":362,"column":23}},{"start":{"line":362,"column":27},"end":{"line":362,"column":29}}]},"43":{"line":363,"type":"binary-expr","locations":[{"start":{"line":363,"column":20},"end":{"line":363,"column":33}},{"start":{"line":363,"column":37},"end":{"line":363,"column":51}}]},"44":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":4},"end":{"line":364,"column":4}},{"start":{"line":364,"column":4},"end":{"line":364,"column":4}}]},"45":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":6},"end":{"line":367,"column":6}},{"start":{"line":367,"column":6},"end":{"line":367,"column":6}}]},"46":{"line":367,"type":"binary-expr","locations":[{"start":{"line":367,"column":10},"end":{"line":367,"column":39}},{"start":{"line":367,"column":43},"end":{"line":367,"column":78}}]},"47":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":2},"end":{"line":380,"column":2}},{"start":{"line":380,"column":2},"end":{"line":380,"column":2}}]},"48":{"line":380,"type":"binary-expr","locations":[{"start":{"line":380,"column":6},"end":{"line":380,"column":17}},{"start":{"line":380,"column":21},"end":{"line":380,"column":47}}]},"49":{"line":396,"type":"binary-expr","locations":[{"start":{"line":396,"column":9},"end":{"line":396,"column":13}},{"start":{"line":396,"column":17},"end":{"line":396,"column":26}}]},"50":{"line":398,"type":"binary-expr","locations":[{"start":{"line":398,"column":4},"end":{"line":398,"column":27}},{"start":{"line":398,"column":32},"end":{"line":398,"column":60}}]},"51":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":2},"end":{"line":401,"column":2}},{"start":{"line":401,"column":2},"end":{"line":401,"column":2}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var g = require('./globalize');","var assert = require('assert');","var extend = require('util')._extend;","var juggler = require('loopback-datasource-juggler');","var debug = require('debug')('loopback:registry');","var DataSource = juggler.DataSource;","var ModelBuilder = juggler.ModelBuilder;","var deprecated = require('depd')('strong-remoting');","","module.exports = Registry;","","/**"," * Define and reference `Models` and `DataSources`."," *"," * @class"," */","","function Registry() {","  this.defaultDataSources = {};","  this.modelBuilder = new ModelBuilder();","  require('./model')(this);","  require('./persisted-model')(this);","","  // Set the default model base class.","  this.modelBuilder.defaultModelBaseClass = this.getModel('Model');","}","","/**"," * Create a named vanilla JavaScript class constructor with an attached"," * set of properties and options."," *"," * This function comes with two variants:"," *  * `loopback.createModel(name, properties, options)`"," *  * `loopback.createModel(config)`"," *"," * In the second variant, the parameters `name`, `properties` and `options`"," * are provided in the config object. Any additional config entries are"," * interpreted as `options`, i.e. the following two configs are identical:"," *"," * ```js"," * { name: 'Customer', base: 'User' }"," * { name: 'Customer', options: { base: 'User' } }"," * ```"," *"," * **Example**"," *"," * Create an `Author` model using the three-parameter variant:"," *"," * ```js"," * loopback.createModel("," *   'Author',"," *   {"," *     firstName: 'string',"," *     lastName: 'string'"," *   },"," *   {"," *     relations: {"," *       books: {"," *         model: 'Book',"," *         type: 'hasAndBelongsToMany'"," *       }"," *     }"," *   }"," * );"," * ```"," *"," * Create the same model using a config object:"," *"," * ```js"," * loopback.createModel({"," *   name: 'Author',"," *   properties: {"," *     firstName: 'string',"," *     lastName: 'string'"," *   },"," *   relations: {"," *     books: {"," *       model: 'Book',"," *       type: 'hasAndBelongsToMany'"," *     }"," *   }"," * });"," * ```"," *"," * @param {String} name Unique name."," * @param {Object} properties"," * @param {Object} options (optional)"," *"," * @header loopback.createModel"," */","","Registry.prototype.createModel = function(name, properties, options) {","  if (arguments.length === 1 && typeof name === 'object') {","    var config = name;","    name = config.name;","    properties = config.properties;","    options = buildModelOptionsFromConfig(config);","","    assert(typeof name === 'string',","      'The model-config property `name` must be a string');","  }","","  options = options || {};","  var BaseModel = options.base || options.super;","","  if (typeof BaseModel === 'string') {","    var baseName = BaseModel;","    BaseModel = this.findModel(BaseModel);","    if (!BaseModel) {","      throw new Error(g.f('Model not found: model `%s` is extending an unknown model `%s`.',","        name, baseName));","    }","  }","","  BaseModel = BaseModel || this.getModel('PersistedModel');","  var model = BaseModel.extend(name, properties, options);","  model.registry = this;","","  this._defineRemoteMethods(model, model.settings.methods);","","  return model;","};","","function buildModelOptionsFromConfig(config) {","  var options = extend({}, config.options);","  for (var key in config) {","    if (['name', 'properties', 'options'].indexOf(key) !== -1) {","      // Skip items which have special meaning","      continue;","    }","","    if (options[key] !== undefined) {","      // When both `config.key` and `config.options.key` are set,","      // use the latter one","      continue;","    }","","    options[key] = config[key];","  }","  return options;","}","","/*"," * Add the acl entry to the acls"," * @param {Object[]} acls"," * @param {Object} acl"," */","function addACL(acls, acl) {","  for (var i = 0, n = acls.length; i < n; i++) {","    // Check if there is a matching acl to be overriden","    if (acls[i].property === acl.property &&","      acls[i].accessType === acl.accessType &&","      acls[i].principalType === acl.principalType &&","      acls[i].principalId === acl.principalId) {","      acls[i] = acl;","      return;","    }","  }","  acls.push(acl);","}","","/**"," * Alter an existing Model class."," * @param {Model} ModelCtor The model constructor to alter."," * @options {Object} config Additional configuration to apply"," * @property {DataSource} dataSource Attach the model to a dataSource."," * @property {Object} [relations] Model relations to add/update."," *"," * @header loopback.configureModel(ModelCtor, config)"," */","","Registry.prototype.configureModel = function(ModelCtor, config) {","  var settings = ModelCtor.settings;","  var modelName = ModelCtor.modelName;","","  // Relations","  if (typeof config.relations === 'object' && config.relations !== null) {","    var relations = settings.relations = settings.relations || {};","    Object.keys(config.relations).forEach(function(key) {","      // FIXME: [rfeng] We probably should check if the relation exists","      relations[key] = extend(relations[key] || {}, config.relations[key]);","    });","  } else if (config.relations != null) {","    g.warn('The relations property of `%s` configuration ' +","      'must be an object', modelName);","  }","","  // ACLs","  if (Array.isArray(config.acls)) {","    var acls = settings.acls = settings.acls || [];","    config.acls.forEach(function(acl) {","      addACL(acls, acl);","    });","  } else if (config.acls != null) {","    g.warn('The acls property of `%s` configuration ' +","      'must be an array of objects', modelName);","  }","","  // Settings","  var excludedProperties = {","    base: true,","    'super': true,","    relations: true,","    acls: true,","    dataSource: true,","  };","  if (typeof config.options === 'object' && config.options !== null) {","    for (var p in config.options) {","      if (!(p in excludedProperties)) {","        settings[p] = config.options[p];","      } else {","        g.warn('Property `%s` cannot be reconfigured for `%s`',","          p, modelName);","      }","    }","  } else if (config.options != null) {","    g.warn('The options property of `%s` configuration ' +","      'must be an object', modelName);","  }","","  // It's important to attach the datasource after we have updated","  // configuration, so that the datasource picks up updated relations","  if (config.dataSource) {","    assert(config.dataSource instanceof DataSource,","        'Cannot configure ' + ModelCtor.modelName +","        ': config.dataSource must be an instance of DataSource');","    ModelCtor.attachTo(config.dataSource);","    debug('Attached model `%s` to dataSource `%s`',","      modelName, config.dataSource.name);","  } else if (config.dataSource === null || config.dataSource === false) {","    debug('Model `%s` is not attached to any DataSource by configuration.',","      modelName);","  } else {","    debug('Model `%s` is not attached to any DataSource, possibly by a mistake.',","      modelName);","    g.warn(","      'The configuration of `%s` is missing {{`dataSource`}} property.\\n' +","      'Use `null` or `false` to mark models not attached to any data source.',","      modelName);","  }","","  var newMethodNames = config.methods && Object.keys(config.methods);","  var hasNewMethods = newMethodNames && newMethodNames.length;","  var hasDescendants = this.getModelByType(ModelCtor) !== ModelCtor;","  if (hasNewMethods && hasDescendants) {","    g.warn(","      'Child models of `%s` will not inherit newly defined remote methods %s.',","      modelName, newMethodNames);","  }","","  // Remote methods","  this._defineRemoteMethods(ModelCtor, config.methods);","};","","Registry.prototype._defineRemoteMethods = function(ModelCtor, methods) {","  if (!methods) return;","  if (typeof methods !== 'object') {","    g.warn('Ignoring non-object \"methods\" setting of \"%s\".',","      ModelCtor.modelName);","    return;","  }","","  Object.keys(methods).forEach(function(key) {","    var meta = methods[key];","    var m = key.match(/^prototype\\.(.*)$/);","    var isStatic = !m;","","    if (typeof meta.isStatic !== 'boolean') {","      key = isStatic ? key : m[1];","      meta.isStatic = isStatic;","    } else if (meta.isStatic && m) {","      throw new Error(g.f('Remoting metadata for %s.%s {{\"isStatic\"}} does ' +","      'not match new method name-based style.', ModelCtor.modelName, key));","    } else {","      key = isStatic ? key : m[1];","      deprecated(g.f('Remoting metadata {{\"isStatic\"}} is deprecated. Please ' +","      'specify {{\"prototype.name\"}} in method name instead for {{isStatic=false}}.'));","    }","    ModelCtor.remoteMethod(key, meta);","  });","};","","/**"," * Look up a model class by name from all models created by"," * `loopback.createModel()`"," * @param {String|Function} modelOrName The model name or a `Model` constructor."," * @returns {Model} The model class"," *"," * @header loopback.findModel(modelName)"," */","Registry.prototype.findModel = function(modelName) {","  if (typeof modelName === 'function') return modelName;","  return this.modelBuilder.models[modelName];","};","","/**"," * Look up a model class by name from all models created by"," * `loopback.createModel()`. **Throw an error when no such model exists.**"," *"," * @param {String} modelOrName The model name or a `Model` constructor."," * @returns {Model} The model class"," *"," * @header loopback.getModel(modelName)"," */","Registry.prototype.getModel = function(modelName) {","  var model = this.findModel(modelName);","  if (model) return model;","","  throw new Error(g.f('Model not found: %s', modelName));","};","","/**"," * Look up a model class by the base model class."," * The method can be used by LoopBack"," * to find configured models in models.json over the base model."," * @param {Model} modelType The base model class"," * @returns {Model} The subclass if found or the base class"," *"," * @header loopback.getModelByType(modelType)"," */","Registry.prototype.getModelByType = function(modelType) {","  var type = typeof modelType;","  var accepted = ['function', 'string'];","","  assert(accepted.indexOf(type) > -1,","    'The model type must be a constructor or model name');","","  if (type === 'string') {","    modelType = this.getModel(modelType);","  }","","  var models = this.modelBuilder.models;","  for (var m in models) {","    if (models[m].prototype instanceof modelType) {","      return models[m];","    }","  }","  return modelType;","};","","/**"," * Create a data source with passing the provided options to the connector."," *"," * @param {String} name Optional name."," * @options {Object} options Data Source options"," * @property {Object} connector LoopBack connector."," * @property {*} [*] Other&nbsp;connector properties."," *   See the relevant connector documentation."," */","","Registry.prototype.createDataSource = function(name, options) {","  var self = this;","","  var ds = new DataSource(name, options, self.modelBuilder);","  ds.createModel = function(name, properties, settings) {","    settings = settings || {};","    var BaseModel = settings.base || settings.super;","    if (!BaseModel) {","      // Check the connector types","      var connectorTypes = ds.getTypes();","      if (Array.isArray(connectorTypes) && connectorTypes.indexOf('db') !== -1) {","        // Only set up the base model to PersistedModel if the connector is DB","        BaseModel = self.PersistedModel;","      } else {","        BaseModel = self.Model;","      }","      settings.base = BaseModel;","    }","    var ModelCtor = self.createModel(name, properties, settings);","    ModelCtor.attachTo(ds);","    return ModelCtor;","  };","","  if (ds.settings && ds.settings.defaultForType) {","    var msg = g.f('{{DataSource}} option {{\"defaultForType\"}} is no longer supported');","    throw new Error(msg);","  }","","  return ds;","};","","/**"," * Get an in-memory data source. Use one if it already exists."," *"," * @param {String} [name] The name of the data source."," * If not provided, the `'default'` is used."," */","","Registry.prototype.memory = function(name) {","  name = name || 'default';","  var memory = (","    this._memoryDataSources || (this._memoryDataSources = {})","    )[name];","","  if (!memory) {","    memory = this._memoryDataSources[name] = this.createDataSource({","      connector: 'memory',","    });","  }","","  return memory;","};",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"16":1,"24":1,"25":1,"26":1,"27":1,"28":1,"31":1,"98":1,"99":11,"100":11,"101":11,"102":11,"103":11,"105":11,"109":11,"110":11,"112":11,"113":2,"114":2,"115":2,"116":0,"121":11,"122":11,"123":11,"125":11,"127":11,"130":1,"131":11,"132":11,"133":34,"135":22,"138":12,"141":0,"144":12,"146":11,"154":1,"155":0,"157":0,"161":0,"162":0,"165":0,"178":1,"179":0,"180":0,"183":0,"184":0,"185":0,"187":0,"189":0,"190":0,"195":0,"196":0,"197":0,"198":0,"200":0,"201":0,"206":0,"213":0,"214":0,"215":0,"216":0,"218":0,"222":0,"223":0,"229":0,"230":0,"233":0,"234":0,"236":0,"237":0,"240":0,"242":0,"248":0,"249":0,"250":0,"251":0,"252":0,"258":0,"261":1,"262":11,"263":0,"264":0,"266":0,"269":0,"270":0,"271":0,"272":0,"274":0,"275":0,"276":0,"277":0,"278":0,"281":0,"282":0,"285":0,"297":1,"298":15,"299":15,"311":1,"312":13,"313":13,"315":0,"327":1,"328":0,"329":0,"331":0,"334":0,"335":0,"338":0,"339":0,"340":0,"341":0,"344":0,"357":1,"358":0,"360":0,"361":0,"362":0,"363":0,"364":0,"366":0,"367":0,"369":0,"371":0,"373":0,"375":0,"376":0,"377":0,"380":0,"381":0,"382":0,"385":0,"395":1,"396":0,"397":0,"401":0,"402":0,"407":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/model.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/model.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":16,"14":16,"15":16,"16":0,"17":16,"18":16,"19":16,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":16,"58":16,"59":16,"60":16,"61":16,"62":16,"63":16,"64":16,"65":1,"66":1,"67":0,"68":0,"69":0,"70":16,"71":1,"72":1,"73":0,"74":0,"75":0,"76":16,"77":0,"78":0,"79":0,"80":0,"81":16,"82":2,"83":0,"84":2,"85":2,"86":0,"87":16,"88":0,"89":0,"90":16,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":16,"110":1,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":185,"167":5,"168":5,"169":5,"170":185,"171":185,"172":185,"173":185,"174":185,"175":1,"176":185,"177":12,"178":185,"179":407,"180":169,"181":169,"182":407,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":1,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":1,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":1,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":1,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":1,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":1,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":1,"368":1,"369":0,"370":1,"371":1},"b":{"1":[0,16],"2":[16,0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[16,16],"15":[0,2],"16":[0,16],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0,0,0,0,0,0,0,0,0,0,0],"40":[5,180],"41":[5,0],"42":[185,0],"43":[12,173],"44":[169,238],"45":[407,320],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0,0],"52":[0,0],"53":[0,0,0],"54":[0,0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0,0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0,0],"69":[0,0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0]},"f":{"1":1,"2":16,"3":0,"4":0,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":2,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":185,"24":185,"25":407,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":17},"end":{"line":20,"column":36}}},"2":{"name":"(anonymous_2)","line":118,"loc":{"start":{"line":118,"column":16},"end":{"line":118,"column":27}}},"3":{"name":"(anonymous_3)","line":132,"loc":{"start":{"line":132,"column":27},"end":{"line":132,"column":59}}},"4":{"name":"(anonymous_4)","line":172,"loc":{"start":{"line":172,"column":48},"end":{"line":172,"column":69}}},"5":{"name":"(anonymous_5)","line":214,"loc":{"start":{"line":214,"column":29},"end":{"line":214,"column":48}}},"6":{"name":"(anonymous_6)","line":216,"loc":{"start":{"line":216,"column":33},"end":{"line":216,"column":47}}},"7":{"name":"(anonymous_7)","line":218,"loc":{"start":{"line":218,"column":47},"end":{"line":218,"column":67}}},"8":{"name":"(anonymous_8)","line":225,"loc":{"start":{"line":225,"column":28},"end":{"line":225,"column":47}}},"9":{"name":"(anonymous_9)","line":227,"loc":{"start":{"line":227,"column":33},"end":{"line":227,"column":47}}},"10":{"name":"(anonymous_10)","line":229,"loc":{"start":{"line":229,"column":46},"end":{"line":229,"column":66}}},"11":{"name":"(anonymous_11)","line":235,"loc":{"start":{"line":235,"column":33},"end":{"line":235,"column":52}}},"12":{"name":"(anonymous_12)","line":237,"loc":{"start":{"line":237,"column":33},"end":{"line":237,"column":47}}},"13":{"name":"(anonymous_13)","line":243,"loc":{"start":{"line":243,"column":38},"end":{"line":243,"column":51}}},"14":{"name":"(anonymous_14)","line":246,"loc":{"start":{"line":246,"column":28},"end":{"line":246,"column":39}}},"15":{"name":"resolver","line":262,"loc":{"start":{"line":262,"column":24},"end":{"line":262,"column":50}}},"16":{"name":"(anonymous_16)","line":265,"loc":{"start":{"line":265,"column":15},"end":{"line":265,"column":43}}},"17":{"name":"getACL","line":305,"loc":{"start":{"line":305,"column":15},"end":{"line":305,"column":36}}},"18":{"name":"(anonymous_18)","line":331,"loc":{"start":{"line":331,"column":22},"end":{"line":331,"column":76}}},"19":{"name":"(anonymous_19)","line":351,"loc":{"start":{"line":351,"column":7},"end":{"line":351,"column":36}}},"20":{"name":"(anonymous_20)","line":364,"loc":{"start":{"line":364,"column":34},"end":{"line":364,"column":51}}},"21":{"name":"(anonymous_21)","line":434,"loc":{"start":{"line":434,"column":17},"end":{"line":434,"column":36}}},"22":{"name":"(anonymous_22)","line":436,"loc":{"start":{"line":436,"column":31},"end":{"line":436,"column":45}}},"23":{"name":"(anonymous_23)","line":458,"loc":{"start":{"line":458,"column":23},"end":{"line":458,"column":47}}},"24":{"name":"setupOptionsArgs","line":474,"loc":{"start":{"line":474,"column":2},"end":{"line":474,"column":37}}},"25":{"name":"(anonymous_25)","line":478,"loc":{"start":{"line":478,"column":23},"end":{"line":478,"column":37}}},"26":{"name":"createOptionsViaModelMethod","line":488,"loc":{"start":{"line":488,"column":2},"end":{"line":488,"column":44}}},"27":{"name":"(anonymous_27)","line":508,"loc":{"start":{"line":508,"column":30},"end":{"line":508,"column":55}}},"28":{"name":"(anonymous_28)","line":523,"loc":{"start":{"line":523,"column":36},"end":{"line":523,"column":51}}},"29":{"name":"(anonymous_29)","line":528,"loc":{"start":{"line":528,"column":28},"end":{"line":528,"column":69}}},"30":{"name":"convertNullToNotFoundError","line":546,"loc":{"start":{"line":546,"column":2},"end":{"line":546,"column":60}}},"31":{"name":"(anonymous_31)","line":557,"loc":{"start":{"line":557,"column":25},"end":{"line":557,"column":66}}},"32":{"name":"(anonymous_32)","line":615,"loc":{"start":{"line":615,"column":26},"end":{"line":615,"column":67}}},"33":{"name":"(anonymous_33)","line":739,"loc":{"start":{"line":739,"column":17},"end":{"line":739,"column":35}}},"34":{"name":"(anonymous_34)","line":757,"loc":{"start":{"line":757,"column":24},"end":{"line":757,"column":59}}},"35":{"name":"(anonymous_35)","line":812,"loc":{"start":{"line":812,"column":16},"end":{"line":812,"column":30}}},"36":{"name":"(anonymous_36)","line":851,"loc":{"start":{"line":851,"column":23},"end":{"line":851,"column":71}}},"37":{"name":"(anonymous_37)","line":892,"loc":{"start":{"line":892,"column":61},"end":{"line":892,"column":88}}},"38":{"name":"(anonymous_38)","line":899,"loc":{"start":{"line":899,"column":38},"end":{"line":899,"column":55}}},"39":{"name":"(anonymous_39)","line":926,"loc":{"start":{"line":926,"column":25},"end":{"line":926,"column":41}}},"40":{"name":"(anonymous_40)","line":935,"loc":{"start":{"line":935,"column":55},"end":{"line":935,"column":70}}},"41":{"name":"(anonymous_41)","line":939,"loc":{"start":{"line":939,"column":37},"end":{"line":939,"column":57}}},"42":{"name":"(anonymous_42)","line":953,"loc":{"start":{"line":953,"column":55},"end":{"line":953,"column":66}}},"43":{"name":"(anonymous_43)","line":957,"loc":{"start":{"line":957,"column":31},"end":{"line":957,"column":51}}},"44":{"name":"(anonymous_44)","line":978,"loc":{"start":{"line":978,"column":27},"end":{"line":978,"column":54}}},"45":{"name":"(anonymous_45)","line":986,"loc":{"start":{"line":986,"column":38},"end":{"line":986,"column":55}}},"46":{"name":"(anonymous_46)","line":993,"loc":{"start":{"line":993,"column":35},"end":{"line":993,"column":63}}},"47":{"name":"(anonymous_47)","line":998,"loc":{"start":{"line":998,"column":34},"end":{"line":998,"column":62}}},"48":{"name":"(anonymous_48)","line":1047,"loc":{"start":{"line":1047,"column":43},"end":{"line":1047,"column":57}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"4":{"start":{"line":13,"column":0},"end":{"line":13,"column":47}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":57}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":36}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":45}},"9":{"start":{"line":20,"column":0},"end":{"line":1057,"column":2}},"10":{"start":{"line":108,"column":2},"end":{"line":108,"column":52}},"11":{"start":{"line":110,"column":2},"end":{"line":110,"column":28}},"12":{"start":{"line":118,"column":2},"end":{"line":299,"column":4}},"13":{"start":{"line":119,"column":4},"end":{"line":119,"column":25}},"14":{"start":{"line":120,"column":4},"end":{"line":120,"column":29}},"15":{"start":{"line":122,"column":4},"end":{"line":124,"column":5}},"16":{"start":{"line":123,"column":6},"end":{"line":123,"column":43}},"17":{"start":{"line":126,"column":4},"end":{"line":126,"column":32}},"18":{"start":{"line":127,"column":4},"end":{"line":127,"column":34}},"19":{"start":{"line":132,"column":4},"end":{"line":187,"column":6}},"20":{"start":{"line":133,"column":6},"end":{"line":133,"column":27}},"21":{"start":{"line":135,"column":6},"end":{"line":137,"column":38}},"22":{"start":{"line":138,"column":6},"end":{"line":162,"column":7}},"23":{"start":{"line":140,"column":8},"end":{"line":140,"column":21}},"24":{"start":{"line":141,"column":8},"end":{"line":141,"column":21}},"25":{"start":{"line":142,"column":8},"end":{"line":142,"column":18}},"26":{"start":{"line":143,"column":8},"end":{"line":143,"column":20}},"27":{"start":{"line":144,"column":13},"end":{"line":162,"column":7}},"28":{"start":{"line":146,"column":8},"end":{"line":146,"column":18}},"29":{"start":{"line":147,"column":8},"end":{"line":147,"column":20}},"30":{"start":{"line":148,"column":8},"end":{"line":148,"column":18}},"31":{"start":{"line":149,"column":8},"end":{"line":149,"column":23}},"32":{"start":{"line":150,"column":13},"end":{"line":162,"column":7}},"33":{"start":{"line":153,"column":8},"end":{"line":153,"column":16}},"34":{"start":{"line":154,"column":8},"end":{"line":154,"column":23}},"35":{"start":{"line":156,"column":8},"end":{"line":161,"column":9}},"36":{"start":{"line":157,"column":10},"end":{"line":157,"column":20}},"37":{"start":{"line":158,"column":10},"end":{"line":158,"column":22}},"38":{"start":{"line":160,"column":10},"end":{"line":160,"column":20}},"39":{"start":{"line":164,"column":6},"end":{"line":186,"column":7}},"40":{"start":{"line":165,"column":8},"end":{"line":165,"column":40}},"41":{"start":{"line":166,"column":8},"end":{"line":166,"column":22}},"42":{"start":{"line":167,"column":8},"end":{"line":167,"column":24}},"43":{"start":{"line":168,"column":13},"end":{"line":186,"column":7}},"44":{"start":{"line":169,"column":8},"end":{"line":169,"column":38}},"45":{"start":{"line":170,"column":13},"end":{"line":186,"column":7}},"46":{"start":{"line":171,"column":8},"end":{"line":171,"column":24}},"47":{"start":{"line":172,"column":8},"end":{"line":183,"column":11}},"48":{"start":{"line":173,"column":10},"end":{"line":182,"column":11}},"49":{"start":{"line":174,"column":12},"end":{"line":174,"column":20}},"50":{"start":{"line":175,"column":17},"end":{"line":182,"column":11}},"51":{"start":{"line":176,"column":12},"end":{"line":176,"column":28}},"52":{"start":{"line":178,"column":12},"end":{"line":178,"column":78}},"53":{"start":{"line":179,"column":12},"end":{"line":179,"column":33}},"54":{"start":{"line":180,"column":12},"end":{"line":180,"column":41}},"55":{"start":{"line":181,"column":12},"end":{"line":181,"column":20}},"56":{"start":{"line":185,"column":8},"end":{"line":185,"column":65}},"57":{"start":{"line":189,"column":4},"end":{"line":189,"column":45}},"58":{"start":{"line":190,"column":4},"end":{"line":195,"column":6}},"59":{"start":{"line":197,"column":4},"end":{"line":199,"column":6}},"60":{"start":{"line":201,"column":4},"end":{"line":201,"column":48}},"61":{"start":{"line":203,"column":4},"end":{"line":203,"column":29}},"62":{"start":{"line":204,"column":4},"end":{"line":204,"column":52}},"63":{"start":{"line":207,"column":4},"end":{"line":211,"column":6}},"64":{"start":{"line":214,"column":4},"end":{"line":222,"column":6}},"65":{"start":{"line":215,"column":6},"end":{"line":215,"column":37}},"66":{"start":{"line":216,"column":6},"end":{"line":221,"column":9}},"67":{"start":{"line":217,"column":8},"end":{"line":217,"column":36}},"68":{"start":{"line":218,"column":8},"end":{"line":220,"column":11}},"69":{"start":{"line":219,"column":10},"end":{"line":219,"column":43}},"70":{"start":{"line":225,"column":4},"end":{"line":233,"column":6}},"71":{"start":{"line":226,"column":6},"end":{"line":226,"column":37}},"72":{"start":{"line":227,"column":6},"end":{"line":232,"column":9}},"73":{"start":{"line":228,"column":8},"end":{"line":228,"column":36}},"74":{"start":{"line":229,"column":8},"end":{"line":231,"column":11}},"75":{"start":{"line":230,"column":10},"end":{"line":230,"column":43}},"76":{"start":{"line":235,"column":4},"end":{"line":241,"column":6}},"77":{"start":{"line":236,"column":6},"end":{"line":236,"column":37}},"78":{"start":{"line":237,"column":6},"end":{"line":240,"column":9}},"79":{"start":{"line":238,"column":8},"end":{"line":238,"column":36}},"80":{"start":{"line":239,"column":8},"end":{"line":239,"column":55}},"81":{"start":{"line":243,"column":4},"end":{"line":249,"column":6}},"82":{"start":{"line":244,"column":6},"end":{"line":244,"column":40}},"83":{"start":{"line":244,"column":20},"end":{"line":244,"column":40}},"84":{"start":{"line":245,"column":6},"end":{"line":245,"column":22}},"85":{"start":{"line":246,"column":6},"end":{"line":248,"column":9}},"86":{"start":{"line":247,"column":8},"end":{"line":247,"column":21}},"87":{"start":{"line":251,"column":4},"end":{"line":259,"column":5}},"88":{"start":{"line":252,"column":6},"end":{"line":254,"column":53}},"89":{"start":{"line":255,"column":6},"end":{"line":258,"column":69}},"90":{"start":{"line":262,"column":4},"end":{"line":296,"column":7}},"91":{"start":{"line":263,"column":6},"end":{"line":263,"column":48}},"92":{"start":{"line":264,"column":6},"end":{"line":264,"column":29}},"93":{"start":{"line":265,"column":6},"end":{"line":271,"column":8}},"94":{"start":{"line":266,"column":8},"end":{"line":269,"column":9}},"95":{"start":{"line":267,"column":10},"end":{"line":267,"column":40}},"96":{"start":{"line":268,"column":10},"end":{"line":268,"column":62}},"97":{"start":{"line":270,"column":8},"end":{"line":270,"column":37}},"98":{"start":{"line":274,"column":6},"end":{"line":289,"column":7}},"99":{"start":{"line":275,"column":8},"end":{"line":275,"column":47}},"100":{"start":{"line":276,"column":8},"end":{"line":288,"column":9}},"101":{"start":{"line":277,"column":10},"end":{"line":277,"column":70}},"102":{"start":{"line":278,"column":15},"end":{"line":288,"column":9}},"103":{"start":{"line":282,"column":10},"end":{"line":282,"column":67}},"104":{"start":{"line":283,"column":15},"end":{"line":288,"column":9}},"105":{"start":{"line":287,"column":10},"end":{"line":287,"column":68}},"106":{"start":{"line":292,"column":6},"end":{"line":292,"column":42}},"107":{"start":{"line":293,"column":6},"end":{"line":295,"column":7}},"108":{"start":{"line":294,"column":8},"end":{"line":294,"column":70}},"109":{"start":{"line":298,"column":4},"end":{"line":298,"column":21}},"110":{"start":{"line":304,"column":2},"end":{"line":304,"column":23}},"111":{"start":{"line":305,"column":2},"end":{"line":317,"column":4}},"112":{"start":{"line":306,"column":4},"end":{"line":306,"column":33}},"113":{"start":{"line":307,"column":4},"end":{"line":310,"column":5}},"114":{"start":{"line":309,"column":6},"end":{"line":309,"column":22}},"115":{"start":{"line":311,"column":4},"end":{"line":313,"column":5}},"116":{"start":{"line":312,"column":6},"end":{"line":312,"column":23}},"117":{"start":{"line":314,"column":4},"end":{"line":314,"column":44}},"118":{"start":{"line":315,"column":4},"end":{"line":315,"column":50}},"119":{"start":{"line":316,"column":4},"end":{"line":316,"column":21}},"120":{"start":{"line":331,"column":2},"end":{"line":355,"column":4}},"121":{"start":{"line":332,"column":4},"end":{"line":332,"column":63}},"122":{"start":{"line":333,"column":4},"end":{"line":333,"column":31}},"123":{"start":{"line":334,"column":4},"end":{"line":334,"column":32}},"124":{"start":{"line":336,"column":4},"end":{"line":336,"column":20}},"125":{"start":{"line":337,"column":4},"end":{"line":340,"column":5}},"126":{"start":{"line":338,"column":6},"end":{"line":338,"column":21}},"127":{"start":{"line":339,"column":6},"end":{"line":339,"column":15}},"128":{"start":{"line":342,"column":4},"end":{"line":354,"column":7}},"129":{"start":{"line":352,"column":6},"end":{"line":352,"column":36}},"130":{"start":{"line":352,"column":15},"end":{"line":352,"column":36}},"131":{"start":{"line":353,"column":6},"end":{"line":353,"column":48}},"132":{"start":{"line":364,"column":2},"end":{"line":423,"column":4}},"133":{"start":{"line":365,"column":4},"end":{"line":367,"column":5}},"134":{"start":{"line":366,"column":6},"end":{"line":366,"column":30}},"135":{"start":{"line":368,"column":4},"end":{"line":371,"column":6}},"136":{"start":{"line":373,"column":4},"end":{"line":373,"column":27}},"137":{"start":{"line":376,"column":4},"end":{"line":384,"column":5}},"138":{"start":{"line":377,"column":6},"end":{"line":382,"column":67}},"139":{"start":{"line":383,"column":6},"end":{"line":383,"column":31}},"140":{"start":{"line":387,"column":4},"end":{"line":387,"column":47}},"141":{"start":{"line":388,"column":4},"end":{"line":390,"column":5}},"142":{"start":{"line":389,"column":6},"end":{"line":389,"column":32}},"143":{"start":{"line":391,"column":4},"end":{"line":393,"column":5}},"144":{"start":{"line":392,"column":6},"end":{"line":392,"column":22}},"145":{"start":{"line":395,"column":4},"end":{"line":422,"column":5}},"146":{"start":{"line":397,"column":8},"end":{"line":397,"column":25}},"147":{"start":{"line":399,"column":8},"end":{"line":399,"column":25}},"148":{"start":{"line":401,"column":8},"end":{"line":401,"column":25}},"149":{"start":{"line":403,"column":8},"end":{"line":403,"column":25}},"150":{"start":{"line":405,"column":8},"end":{"line":405,"column":24}},"151":{"start":{"line":407,"column":8},"end":{"line":407,"column":24}},"152":{"start":{"line":409,"column":8},"end":{"line":409,"column":24}},"153":{"start":{"line":411,"column":8},"end":{"line":411,"column":24}},"154":{"start":{"line":413,"column":8},"end":{"line":413,"column":25}},"155":{"start":{"line":415,"column":8},"end":{"line":415,"column":25}},"156":{"start":{"line":417,"column":8},"end":{"line":417,"column":25}},"157":{"start":{"line":419,"column":8},"end":{"line":419,"column":24}},"158":{"start":{"line":421,"column":8},"end":{"line":421,"column":27}},"159":{"start":{"line":434,"column":2},"end":{"line":441,"column":4}},"160":{"start":{"line":435,"column":4},"end":{"line":435,"column":20}},"161":{"start":{"line":436,"column":4},"end":{"line":440,"column":7}},"162":{"start":{"line":437,"column":6},"end":{"line":437,"column":23}},"163":{"start":{"line":438,"column":6},"end":{"line":438,"column":34}},"164":{"start":{"line":439,"column":6},"end":{"line":439,"column":26}},"165":{"start":{"line":458,"column":2},"end":{"line":472,"column":4}},"166":{"start":{"line":459,"column":4},"end":{"line":463,"column":5}},"167":{"start":{"line":460,"column":6},"end":{"line":460,"column":46}},"168":{"start":{"line":461,"column":6},"end":{"line":461,"column":28}},"169":{"start":{"line":462,"column":6},"end":{"line":462,"column":44}},"170":{"start":{"line":465,"column":4},"end":{"line":468,"column":5}},"171":{"start":{"line":466,"column":6},"end":{"line":466,"column":36}},"172":{"start":{"line":467,"column":6},"end":{"line":467,"column":58}},"173":{"start":{"line":470,"column":4},"end":{"line":470,"column":49}},"174":{"start":{"line":471,"column":4},"end":{"line":471,"column":53}},"175":{"start":{"line":474,"column":2},"end":{"line":486,"column":3}},"176":{"start":{"line":475,"column":4},"end":{"line":476,"column":26}},"177":{"start":{"line":476,"column":6},"end":{"line":476,"column":26}},"178":{"start":{"line":478,"column":4},"end":{"line":485,"column":7}},"179":{"start":{"line":479,"column":6},"end":{"line":483,"column":7}},"180":{"start":{"line":481,"column":8},"end":{"line":481,"column":30}},"181":{"start":{"line":482,"column":8},"end":{"line":482,"column":47}},"182":{"start":{"line":484,"column":6},"end":{"line":484,"column":17}},"183":{"start":{"line":488,"column":2},"end":{"line":497,"column":3}},"184":{"start":{"line":489,"column":4},"end":{"line":489,"column":27}},"185":{"start":{"line":490,"column":4},"end":{"line":490,"column":50}},"186":{"start":{"line":491,"column":4},"end":{"line":492,"column":27}},"187":{"start":{"line":492,"column":6},"end":{"line":492,"column":27}},"188":{"start":{"line":493,"column":4},"end":{"line":494,"column":27}},"189":{"start":{"line":494,"column":6},"end":{"line":494,"column":27}},"190":{"start":{"line":495,"column":4},"end":{"line":495,"column":76}},"191":{"start":{"line":496,"column":4},"end":{"line":496,"column":59}},"192":{"start":{"line":508,"column":2},"end":{"line":514,"column":4}},"193":{"start":{"line":509,"column":4},"end":{"line":510,"column":54}},"194":{"start":{"line":511,"column":4},"end":{"line":511,"column":77}},"195":{"start":{"line":512,"column":4},"end":{"line":512,"column":46}},"196":{"start":{"line":513,"column":4},"end":{"line":513,"column":61}},"197":{"start":{"line":523,"column":2},"end":{"line":526,"column":4}},"198":{"start":{"line":524,"column":4},"end":{"line":524,"column":47}},"199":{"start":{"line":525,"column":4},"end":{"line":525,"column":62}},"200":{"start":{"line":528,"column":2},"end":{"line":544,"column":4}},"201":{"start":{"line":529,"column":4},"end":{"line":529,"column":67}},"202":{"start":{"line":530,"column":4},"end":{"line":530,"column":46}},"203":{"start":{"line":531,"column":4},"end":{"line":531,"column":42}},"204":{"start":{"line":532,"column":4},"end":{"line":532,"column":89}},"205":{"start":{"line":533,"column":4},"end":{"line":543,"column":11}},"206":{"start":{"line":546,"column":2},"end":{"line":555,"column":3}},"207":{"start":{"line":547,"column":4},"end":{"line":547,"column":41}},"208":{"start":{"line":547,"column":29},"end":{"line":547,"column":41}},"209":{"start":{"line":549,"column":4},"end":{"line":549,"column":36}},"210":{"start":{"line":550,"column":4},"end":{"line":550,"column":60}},"211":{"start":{"line":551,"column":4},"end":{"line":551,"column":31}},"212":{"start":{"line":552,"column":4},"end":{"line":552,"column":42}},"213":{"start":{"line":553,"column":4},"end":{"line":553,"column":35}},"214":{"start":{"line":554,"column":4},"end":{"line":554,"column":14}},"215":{"start":{"line":557,"column":2},"end":{"line":613,"column":4}},"216":{"start":{"line":558,"column":4},"end":{"line":558,"column":89}},"217":{"start":{"line":559,"column":4},"end":{"line":559,"column":49}},"218":{"start":{"line":561,"column":4},"end":{"line":572,"column":7}},"219":{"start":{"line":574,"column":4},"end":{"line":587,"column":7}},"220":{"start":{"line":589,"column":4},"end":{"line":602,"column":7}},"221":{"start":{"line":604,"column":4},"end":{"line":612,"column":7}},"222":{"start":{"line":615,"column":2},"end":{"line":755,"column":4}},"223":{"start":{"line":616,"column":4},"end":{"line":616,"column":89}},"224":{"start":{"line":617,"column":4},"end":{"line":617,"column":49}},"225":{"start":{"line":619,"column":4},"end":{"line":619,"column":69}},"226":{"start":{"line":620,"column":4},"end":{"line":636,"column":21}},"227":{"start":{"line":638,"column":4},"end":{"line":638,"column":75}},"228":{"start":{"line":639,"column":4},"end":{"line":654,"column":24}},"229":{"start":{"line":656,"column":4},"end":{"line":656,"column":73}},"230":{"start":{"line":657,"column":4},"end":{"line":671,"column":23}},"231":{"start":{"line":673,"column":4},"end":{"line":754,"column":5}},"232":{"start":{"line":674,"column":6},"end":{"line":674,"column":67}},"233":{"start":{"line":676,"column":6},"end":{"line":676,"column":23}},"234":{"start":{"line":677,"column":6},"end":{"line":683,"column":7}},"235":{"start":{"line":679,"column":8},"end":{"line":682,"column":11}},"236":{"start":{"line":685,"column":6},"end":{"line":685,"column":62}},"237":{"start":{"line":686,"column":6},"end":{"line":699,"column":18}},"238":{"start":{"line":701,"column":6},"end":{"line":701,"column":67}},"239":{"start":{"line":702,"column":6},"end":{"line":717,"column":21}},"240":{"start":{"line":721,"column":6},"end":{"line":721,"column":67}},"241":{"start":{"line":722,"column":6},"end":{"line":753,"column":21}},"242":{"start":{"line":740,"column":12},"end":{"line":750,"column":13}},"243":{"start":{"line":741,"column":14},"end":{"line":741,"column":58}},"244":{"start":{"line":742,"column":14},"end":{"line":742,"column":46}},"245":{"start":{"line":743,"column":14},"end":{"line":743,"column":72}},"246":{"start":{"line":744,"column":14},"end":{"line":744,"column":41}},"247":{"start":{"line":745,"column":14},"end":{"line":745,"column":52}},"248":{"start":{"line":746,"column":14},"end":{"line":746,"column":45}},"249":{"start":{"line":747,"column":14},"end":{"line":747,"column":24}},"250":{"start":{"line":749,"column":14},"end":{"line":749,"column":19}},"251":{"start":{"line":757,"column":2},"end":{"line":834,"column":4}},"252":{"start":{"line":758,"column":4},"end":{"line":759,"column":84}},"253":{"start":{"line":761,"column":4},"end":{"line":761,"column":34}},"254":{"start":{"line":762,"column":4},"end":{"line":762,"column":46}},"255":{"start":{"line":766,"column":4},"end":{"line":766,"column":45}},"256":{"start":{"line":767,"column":4},"end":{"line":771,"column":5}},"257":{"start":{"line":770,"column":6},"end":{"line":770,"column":47}},"258":{"start":{"line":773,"column":4},"end":{"line":783,"column":7}},"259":{"start":{"line":785,"column":4},"end":{"line":801,"column":7}},"260":{"start":{"line":803,"column":4},"end":{"line":818,"column":7}},"261":{"start":{"line":812,"column":32},"end":{"line":812,"column":49}},"262":{"start":{"line":820,"column":4},"end":{"line":833,"column":7}},"263":{"start":{"line":851,"column":2},"end":{"line":1009,"column":4}},"264":{"start":{"line":852,"column":4},"end":{"line":855,"column":5}},"265":{"start":{"line":853,"column":6},"end":{"line":853,"column":31}},"266":{"start":{"line":854,"column":6},"end":{"line":854,"column":19}},"267":{"start":{"line":856,"column":4},"end":{"line":856,"column":28}},"268":{"start":{"line":858,"column":4},"end":{"line":858,"column":40}},"269":{"start":{"line":859,"column":4},"end":{"line":859,"column":48}},"270":{"start":{"line":860,"column":4},"end":{"line":1008,"column":5}},"271":{"start":{"line":861,"column":6},"end":{"line":861,"column":22}},"272":{"start":{"line":862,"column":6},"end":{"line":862,"column":41}},"273":{"start":{"line":863,"column":6},"end":{"line":863,"column":55}},"274":{"start":{"line":864,"column":6},"end":{"line":864,"column":51}},"275":{"start":{"line":866,"column":6},"end":{"line":866,"column":79}},"276":{"start":{"line":867,"column":6},"end":{"line":867,"column":48}},"277":{"start":{"line":869,"column":6},"end":{"line":869,"column":56}},"278":{"start":{"line":870,"column":6},"end":{"line":870,"column":31}},"279":{"start":{"line":872,"column":6},"end":{"line":884,"column":7}},"280":{"start":{"line":873,"column":8},"end":{"line":873,"column":47}},"281":{"start":{"line":874,"column":8},"end":{"line":880,"column":10}},"282":{"start":{"line":882,"column":8},"end":{"line":882,"column":28}},"283":{"start":{"line":883,"column":8},"end":{"line":883,"column":24}},"284":{"start":{"line":886,"column":6},"end":{"line":888,"column":7}},"285":{"start":{"line":887,"column":8},"end":{"line":887,"column":34}},"286":{"start":{"line":892,"column":6},"end":{"line":897,"column":8}},"287":{"start":{"line":893,"column":8},"end":{"line":893,"column":48}},"288":{"start":{"line":894,"column":8},"end":{"line":896,"column":9}},"289":{"start":{"line":895,"column":10},"end":{"line":895,"column":78}},"290":{"start":{"line":899,"column":6},"end":{"line":972,"column":9}},"291":{"start":{"line":900,"column":8},"end":{"line":900,"column":23}},"292":{"start":{"line":901,"column":8},"end":{"line":971,"column":9}},"293":{"start":{"line":902,"column":10},"end":{"line":902,"column":70}},"294":{"start":{"line":903,"column":10},"end":{"line":903,"column":73}},"295":{"start":{"line":905,"column":10},"end":{"line":905,"column":66}},"296":{"start":{"line":906,"column":10},"end":{"line":908,"column":11}},"297":{"start":{"line":907,"column":12},"end":{"line":907,"column":76}},"298":{"start":{"line":910,"column":10},"end":{"line":910,"column":65}},"299":{"start":{"line":911,"column":10},"end":{"line":913,"column":11}},"300":{"start":{"line":912,"column":12},"end":{"line":912,"column":77}},"301":{"start":{"line":915,"column":10},"end":{"line":915,"column":24}},"302":{"start":{"line":917,"column":10},"end":{"line":917,"column":65}},"303":{"start":{"line":918,"column":10},"end":{"line":918,"column":57}},"304":{"start":{"line":919,"column":10},"end":{"line":919,"column":48}},"305":{"start":{"line":920,"column":10},"end":{"line":920,"column":46}},"306":{"start":{"line":921,"column":10},"end":{"line":921,"column":52}},"307":{"start":{"line":922,"column":10},"end":{"line":922,"column":40}},"308":{"start":{"line":924,"column":10},"end":{"line":924,"column":25}},"309":{"start":{"line":925,"column":10},"end":{"line":925,"column":52}},"310":{"start":{"line":926,"column":10},"end":{"line":932,"column":13}},"311":{"start":{"line":927,"column":12},"end":{"line":931,"column":13}},"312":{"start":{"line":928,"column":14},"end":{"line":928,"column":43}},"313":{"start":{"line":929,"column":14},"end":{"line":929,"column":48}},"314":{"start":{"line":930,"column":14},"end":{"line":930,"column":35}},"315":{"start":{"line":934,"column":10},"end":{"line":970,"column":11}},"316":{"start":{"line":935,"column":12},"end":{"line":951,"column":32}},"317":{"start":{"line":936,"column":14},"end":{"line":936,"column":66}},"318":{"start":{"line":937,"column":14},"end":{"line":937,"column":47}},"319":{"start":{"line":938,"column":14},"end":{"line":938,"column":64}},"320":{"start":{"line":939,"column":14},"end":{"line":950,"column":17}},"321":{"start":{"line":940,"column":16},"end":{"line":940,"column":46}},"322":{"start":{"line":940,"column":31},"end":{"line":940,"column":46}},"323":{"start":{"line":941,"column":16},"end":{"line":949,"column":17}},"324":{"start":{"line":942,"column":18},"end":{"line":946,"column":19}},"325":{"start":{"line":943,"column":20},"end":{"line":943,"column":47}},"326":{"start":{"line":945,"column":20},"end":{"line":945,"column":43}},"327":{"start":{"line":945,"column":28},"end":{"line":945,"column":43}},"328":{"start":{"line":947,"column":23},"end":{"line":949,"column":17}},"329":{"start":{"line":948,"column":18},"end":{"line":948,"column":32}},"330":{"start":{"line":953,"column":12},"end":{"line":969,"column":32}},"331":{"start":{"line":954,"column":14},"end":{"line":954,"column":63}},"332":{"start":{"line":955,"column":14},"end":{"line":955,"column":47}},"333":{"start":{"line":956,"column":14},"end":{"line":956,"column":64}},"334":{"start":{"line":957,"column":14},"end":{"line":968,"column":17}},"335":{"start":{"line":958,"column":16},"end":{"line":958,"column":46}},"336":{"start":{"line":958,"column":31},"end":{"line":958,"column":46}},"337":{"start":{"line":959,"column":16},"end":{"line":967,"column":17}},"338":{"start":{"line":960,"column":18},"end":{"line":964,"column":19}},"339":{"start":{"line":961,"column":20},"end":{"line":961,"column":47}},"340":{"start":{"line":963,"column":20},"end":{"line":963,"column":43}},"341":{"start":{"line":963,"column":28},"end":{"line":963,"column":43}},"342":{"start":{"line":965,"column":23},"end":{"line":967,"column":17}},"343":{"start":{"line":966,"column":18},"end":{"line":966,"column":32}},"344":{"start":{"line":974,"column":6},"end":{"line":974,"column":55}},"345":{"start":{"line":976,"column":6},"end":{"line":976,"column":42}},"346":{"start":{"line":976,"column":35},"end":{"line":976,"column":42}},"347":{"start":{"line":978,"column":6},"end":{"line":1004,"column":9}},"348":{"start":{"line":979,"column":8},"end":{"line":979,"column":66}},"349":{"start":{"line":980,"column":8},"end":{"line":980,"column":56}},"350":{"start":{"line":981,"column":8},"end":{"line":981,"column":54}},"351":{"start":{"line":983,"column":8},"end":{"line":983,"column":69}},"352":{"start":{"line":984,"column":8},"end":{"line":984,"column":67}},"353":{"start":{"line":986,"column":8},"end":{"line":1003,"column":11}},"354":{"start":{"line":987,"column":10},"end":{"line":987,"column":65}},"355":{"start":{"line":988,"column":10},"end":{"line":1002,"column":11}},"356":{"start":{"line":989,"column":12},"end":{"line":989,"column":90}},"357":{"start":{"line":990,"column":12},"end":{"line":990,"column":87}},"358":{"start":{"line":991,"column":12},"end":{"line":991,"column":79}},"359":{"start":{"line":992,"column":12},"end":{"line":996,"column":13}},"360":{"start":{"line":993,"column":14},"end":{"line":995,"column":17}},"361":{"start":{"line":994,"column":16},"end":{"line":994,"column":73}},"362":{"start":{"line":997,"column":12},"end":{"line":1001,"column":13}},"363":{"start":{"line":998,"column":14},"end":{"line":1000,"column":17}},"364":{"start":{"line":999,"column":16},"end":{"line":999,"column":72}},"365":{"start":{"line":1006,"column":6},"end":{"line":1006,"column":97}},"366":{"start":{"line":1007,"column":6},"end":{"line":1007,"column":27}},"367":{"start":{"line":1011,"column":2},"end":{"line":1011,"column":81}},"368":{"start":{"line":1047,"column":2},"end":{"line":1051,"column":4}},"369":{"start":{"line":1048,"column":4},"end":{"line":1050,"column":6}},"370":{"start":{"line":1054,"column":2},"end":{"line":1054,"column":16}},"371":{"start":{"line":1056,"column":2},"end":{"line":1056,"column":15}}},"branchMap":{"1":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"2":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":8},"end":{"line":122,"column":27}},{"start":{"line":122,"column":31},"end":{"line":122,"column":37}},{"start":{"line":122,"column":41},"end":{"line":122,"column":56}}]},"3":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":42},"end":{"line":135,"column":66}},{"start":{"line":136,"column":8},"end":{"line":136,"column":30}},{"start":{"line":137,"column":8},"end":{"line":137,"column":37}}]},"4":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":6}},{"start":{"line":138,"column":6},"end":{"line":138,"column":6}}]},"5":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":13},"end":{"line":144,"column":13}},{"start":{"line":144,"column":13},"end":{"line":144,"column":13}}]},"6":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":13},"end":{"line":150,"column":13}},{"start":{"line":150,"column":13},"end":{"line":150,"column":13}}]},"7":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":156,"column":8}},{"start":{"line":156,"column":8},"end":{"line":156,"column":8}}]},"8":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":6},"end":{"line":164,"column":6}},{"start":{"line":164,"column":6},"end":{"line":164,"column":6}}]},"9":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":10},"end":{"line":164,"column":12}},{"start":{"line":164,"column":16},"end":{"line":164,"column":20}}]},"10":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":13},"end":{"line":168,"column":13}},{"start":{"line":168,"column":13},"end":{"line":168,"column":13}}]},"11":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":13},"end":{"line":170,"column":13}},{"start":{"line":170,"column":13},"end":{"line":170,"column":13}}]},"12":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":10},"end":{"line":173,"column":10}},{"start":{"line":173,"column":10},"end":{"line":173,"column":10}}]},"13":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":17},"end":{"line":175,"column":17}},{"start":{"line":175,"column":17},"end":{"line":175,"column":17}}]},"14":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":28},"end":{"line":204,"column":44}},{"start":{"line":204,"column":48},"end":{"line":204,"column":50}}]},"15":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":6},"end":{"line":244,"column":6}},{"start":{"line":244,"column":6},"end":{"line":244,"column":6}}]},"16":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":4},"end":{"line":251,"column":4}},{"start":{"line":251,"column":4},"end":{"line":251,"column":4}}]},"17":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":22},"end":{"line":263,"column":41}},{"start":{"line":263,"column":45},"end":{"line":263,"column":47}}]},"18":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":8},"end":{"line":266,"column":8}},{"start":{"line":266,"column":8},"end":{"line":266,"column":8}}]},"19":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":8},"end":{"line":276,"column":8}},{"start":{"line":276,"column":8},"end":{"line":276,"column":8}}]},"20":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":15},"end":{"line":278,"column":15}},{"start":{"line":278,"column":15},"end":{"line":278,"column":15}}]},"21":{"line":279,"type":"binary-expr","locations":[{"start":{"line":279,"column":10},"end":{"line":279,"column":36}},{"start":{"line":280,"column":10},"end":{"line":280,"column":39}}]},"22":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":15},"end":{"line":283,"column":15}},{"start":{"line":283,"column":15},"end":{"line":283,"column":15}}]},"23":{"line":284,"type":"binary-expr","locations":[{"start":{"line":284,"column":10},"end":{"line":284,"column":37}},{"start":{"line":285,"column":10},"end":{"line":285,"column":40}},{"start":{"line":286,"column":10},"end":{"line":286,"column":44}}]},"24":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":19},"end":{"line":292,"column":35}},{"start":{"line":292,"column":39},"end":{"line":292,"column":41}}]},"25":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":4},"end":{"line":307,"column":4}},{"start":{"line":307,"column":4},"end":{"line":307,"column":4}}]},"26":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":4},"end":{"line":311,"column":4}},{"start":{"line":311,"column":4},"end":{"line":311,"column":4}}]},"27":{"line":333,"type":"binary-expr","locations":[{"start":{"line":333,"column":12},"end":{"line":333,"column":17}},{"start":{"line":333,"column":21},"end":{"line":333,"column":30}}]},"28":{"line":336,"type":"binary-expr","locations":[{"start":{"line":336,"column":10},"end":{"line":336,"column":13}},{"start":{"line":336,"column":17},"end":{"line":336,"column":19}}]},"29":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":4},"end":{"line":337,"column":4}},{"start":{"line":337,"column":4},"end":{"line":337,"column":4}}]},"30":{"line":337,"type":"binary-expr","locations":[{"start":{"line":337,"column":8},"end":{"line":337,"column":33}},{"start":{"line":337,"column":37},"end":{"line":337,"column":59}}]},"31":{"line":352,"type":"if","locations":[{"start":{"line":352,"column":6},"end":{"line":352,"column":6}},{"start":{"line":352,"column":6},"end":{"line":352,"column":6}}]},"32":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":4},"end":{"line":365,"column":4}},{"start":{"line":365,"column":4},"end":{"line":365,"column":4}}]},"33":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":4},"end":{"line":376,"column":4}},{"start":{"line":376,"column":4},"end":{"line":376,"column":4}}]},"34":{"line":377,"type":"binary-expr","locations":[{"start":{"line":377,"column":13},"end":{"line":377,"column":43}},{"start":{"line":378,"column":8},"end":{"line":378,"column":43}},{"start":{"line":379,"column":8},"end":{"line":379,"column":39}},{"start":{"line":380,"column":8},"end":{"line":380,"column":41}}]},"35":{"line":387,"type":"binary-expr","locations":[{"start":{"line":387,"column":15},"end":{"line":387,"column":26}},{"start":{"line":387,"column":30},"end":{"line":387,"column":46}}]},"36":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":4},"end":{"line":388,"column":4}},{"start":{"line":388,"column":4},"end":{"line":388,"column":4}}]},"37":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":4},"end":{"line":391,"column":4}},{"start":{"line":391,"column":4},"end":{"line":391,"column":4}}]},"38":{"line":391,"type":"binary-expr","locations":[{"start":{"line":391,"column":8},"end":{"line":391,"column":22}},{"start":{"line":391,"column":26},"end":{"line":391,"column":41}}]},"39":{"line":395,"type":"switch","locations":[{"start":{"line":396,"column":6},"end":{"line":397,"column":25}},{"start":{"line":398,"column":6},"end":{"line":399,"column":25}},{"start":{"line":400,"column":6},"end":{"line":401,"column":25}},{"start":{"line":402,"column":6},"end":{"line":403,"column":25}},{"start":{"line":404,"column":6},"end":{"line":405,"column":24}},{"start":{"line":406,"column":6},"end":{"line":407,"column":24}},{"start":{"line":408,"column":6},"end":{"line":409,"column":24}},{"start":{"line":410,"column":6},"end":{"line":411,"column":24}},{"start":{"line":412,"column":6},"end":{"line":413,"column":25}},{"start":{"line":414,"column":6},"end":{"line":415,"column":25}},{"start":{"line":416,"column":6},"end":{"line":417,"column":25}},{"start":{"line":418,"column":6},"end":{"line":419,"column":24}},{"start":{"line":420,"column":6},"end":{"line":421,"column":27}}]},"40":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":4},"end":{"line":459,"column":4}},{"start":{"line":459,"column":4},"end":{"line":459,"column":4}}]},"41":{"line":462,"type":"cond-expr","locations":[{"start":{"line":462,"column":32},"end":{"line":462,"column":36}},{"start":{"line":462,"column":39},"end":{"line":462,"column":43}}]},"42":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":4},"end":{"line":465,"column":4}},{"start":{"line":465,"column":4},"end":{"line":465,"column":4}}]},"43":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":4},"end":{"line":475,"column":4}},{"start":{"line":475,"column":4},"end":{"line":475,"column":4}}]},"44":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":6},"end":{"line":479,"column":6}},{"start":{"line":479,"column":6},"end":{"line":479,"column":6}}]},"45":{"line":479,"type":"binary-expr","locations":[{"start":{"line":479,"column":10},"end":{"line":479,"column":18}},{"start":{"line":479,"column":22},"end":{"line":479,"column":55}}]},"46":{"line":490,"type":"binary-expr","locations":[{"start":{"line":490,"column":20},"end":{"line":490,"column":30}},{"start":{"line":490,"column":34},"end":{"line":490,"column":49}}]},"47":{"line":491,"type":"if","locations":[{"start":{"line":491,"column":4},"end":{"line":491,"column":4}},{"start":{"line":491,"column":4},"end":{"line":491,"column":4}}]},"48":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":4},"end":{"line":493,"column":4}},{"start":{"line":493,"column":4},"end":{"line":493,"column":4}}]},"49":{"line":529,"type":"binary-expr","locations":[{"start":{"line":529,"column":20},"end":{"line":529,"column":36}},{"start":{"line":529,"column":40},"end":{"line":529,"column":66}}]},"50":{"line":530,"type":"binary-expr","locations":[{"start":{"line":530,"column":16},"end":{"line":530,"column":25}},{"start":{"line":530,"column":29},"end":{"line":530,"column":45}}]},"51":{"line":532,"type":"binary-expr","locations":[{"start":{"line":532,"column":20},"end":{"line":532,"column":41}},{"start":{"line":532,"column":45},"end":{"line":532,"column":71}},{"start":{"line":532,"column":76},"end":{"line":532,"column":88}}]},"52":{"line":547,"type":"if","locations":[{"start":{"line":547,"column":4},"end":{"line":547,"column":4}},{"start":{"line":547,"column":4},"end":{"line":547,"column":4}}]},"53":{"line":558,"type":"binary-expr","locations":[{"start":{"line":558,"column":20},"end":{"line":558,"column":41}},{"start":{"line":558,"column":45},"end":{"line":558,"column":71}},{"start":{"line":558,"column":76},"end":{"line":558,"column":88}}]},"54":{"line":616,"type":"binary-expr","locations":[{"start":{"line":616,"column":20},"end":{"line":616,"column":41}},{"start":{"line":616,"column":45},"end":{"line":616,"column":71}},{"start":{"line":616,"column":76},"end":{"line":616,"column":88}}]},"55":{"line":673,"type":"if","locations":[{"start":{"line":673,"column":4},"end":{"line":673,"column":4}},{"start":{"line":673,"column":4},"end":{"line":673,"column":4}}]},"56":{"line":673,"type":"binary-expr","locations":[{"start":{"line":673,"column":8},"end":{"line":673,"column":29}},{"start":{"line":673,"column":33},"end":{"line":673,"column":67}}]},"57":{"line":674,"type":"binary-expr","locations":[{"start":{"line":674,"column":25},"end":{"line":674,"column":46}},{"start":{"line":674,"column":50},"end":{"line":674,"column":66}}]},"58":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":6},"end":{"line":677,"column":6}},{"start":{"line":677,"column":6},"end":{"line":677,"column":6}}]},"59":{"line":677,"type":"binary-expr","locations":[{"start":{"line":677,"column":10},"end":{"line":677,"column":37}},{"start":{"line":677,"column":41},"end":{"line":677,"column":62}}]},"60":{"line":740,"type":"if","locations":[{"start":{"line":740,"column":12},"end":{"line":740,"column":12}},{"start":{"line":740,"column":12},"end":{"line":740,"column":12}}]},"61":{"line":759,"type":"binary-expr","locations":[{"start":{"line":759,"column":7},"end":{"line":759,"column":20}},{"start":{"line":759,"column":24},"end":{"line":759,"column":42}},{"start":{"line":759,"column":46},"end":{"line":759,"column":69}},{"start":{"line":759,"column":74},"end":{"line":759,"column":83}}]},"62":{"line":767,"type":"if","locations":[{"start":{"line":767,"column":4},"end":{"line":767,"column":4}},{"start":{"line":767,"column":4},"end":{"line":767,"column":4}}]},"63":{"line":767,"type":"binary-expr","locations":[{"start":{"line":767,"column":8},"end":{"line":767,"column":16}},{"start":{"line":767,"column":20},"end":{"line":767,"column":36}}]},"64":{"line":852,"type":"if","locations":[{"start":{"line":852,"column":4},"end":{"line":852,"column":4}},{"start":{"line":852,"column":4},"end":{"line":852,"column":4}}]},"65":{"line":852,"type":"binary-expr","locations":[{"start":{"line":852,"column":8},"end":{"line":852,"column":37}},{"start":{"line":852,"column":41},"end":{"line":852,"column":56}}]},"66":{"line":856,"type":"binary-expr","locations":[{"start":{"line":856,"column":14},"end":{"line":856,"column":21}},{"start":{"line":856,"column":25},"end":{"line":856,"column":27}}]},"67":{"line":860,"type":"if","locations":[{"start":{"line":860,"column":4},"end":{"line":860,"column":4}},{"start":{"line":860,"column":4},"end":{"line":860,"column":4}}]},"68":{"line":860,"type":"binary-expr","locations":[{"start":{"line":860,"column":8},"end":{"line":860,"column":16}},{"start":{"line":860,"column":20},"end":{"line":860,"column":36}},{"start":{"line":860,"column":40},"end":{"line":860,"column":68}}]},"69":{"line":866,"type":"binary-expr","locations":[{"start":{"line":866,"column":21},"end":{"line":866,"column":37}},{"start":{"line":866,"column":41},"end":{"line":866,"column":62}},{"start":{"line":866,"column":66},"end":{"line":866,"column":78}}]},"70":{"line":867,"type":"binary-expr","locations":[{"start":{"line":867,"column":22},"end":{"line":867,"column":39}},{"start":{"line":867,"column":43},"end":{"line":867,"column":47}}]},"71":{"line":869,"type":"binary-expr","locations":[{"start":{"line":869,"column":27},"end":{"line":869,"column":45}},{"start":{"line":869,"column":49},"end":{"line":869,"column":51}}]},"72":{"line":872,"type":"if","locations":[{"start":{"line":872,"column":6},"end":{"line":872,"column":6}},{"start":{"line":872,"column":6},"end":{"line":872,"column":6}}]},"73":{"line":886,"type":"if","locations":[{"start":{"line":886,"column":6},"end":{"line":886,"column":6}},{"start":{"line":886,"column":6},"end":{"line":886,"column":6}}]},"74":{"line":892,"type":"binary-expr","locations":[{"start":{"line":892,"column":19},"end":{"line":892,"column":33}},{"start":{"line":892,"column":37},"end":{"line":892,"column":57}},{"start":{"line":892,"column":61},"end":{"line":897,"column":7}}]},"75":{"line":894,"type":"if","locations":[{"start":{"line":894,"column":8},"end":{"line":894,"column":8}},{"start":{"line":894,"column":8},"end":{"line":894,"column":8}}]},"76":{"line":901,"type":"if","locations":[{"start":{"line":901,"column":8},"end":{"line":901,"column":8}},{"start":{"line":901,"column":8},"end":{"line":901,"column":8}}]},"77":{"line":901,"type":"binary-expr","locations":[{"start":{"line":901,"column":12},"end":{"line":901,"column":28}},{"start":{"line":901,"column":33},"end":{"line":901,"column":70}}]},"78":{"line":902,"type":"cond-expr","locations":[{"start":{"line":902,"column":43},"end":{"line":902,"column":57}},{"start":{"line":902,"column":60},"end":{"line":902,"column":69}}]},"79":{"line":903,"type":"binary-expr","locations":[{"start":{"line":903,"column":27},"end":{"line":903,"column":45}},{"start":{"line":903,"column":50},"end":{"line":903,"column":71}}]},"80":{"line":906,"type":"if","locations":[{"start":{"line":906,"column":10},"end":{"line":906,"column":10}},{"start":{"line":906,"column":10},"end":{"line":906,"column":10}}]},"81":{"line":911,"type":"if","locations":[{"start":{"line":911,"column":10},"end":{"line":911,"column":10}},{"start":{"line":911,"column":10},"end":{"line":911,"column":10}}]},"82":{"line":917,"type":"binary-expr","locations":[{"start":{"line":917,"column":43},"end":{"line":917,"column":57}},{"start":{"line":917,"column":61},"end":{"line":917,"column":63}}]},"83":{"line":918,"type":"binary-expr","locations":[{"start":{"line":918,"column":35},"end":{"line":918,"column":49}},{"start":{"line":918,"column":53},"end":{"line":918,"column":55}}]},"84":{"line":921,"type":"binary-expr","locations":[{"start":{"line":921,"column":33},"end":{"line":921,"column":44}},{"start":{"line":921,"column":48},"end":{"line":921,"column":50}}]},"85":{"line":925,"type":"binary-expr","locations":[{"start":{"line":925,"column":33},"end":{"line":925,"column":44}},{"start":{"line":925,"column":48},"end":{"line":925,"column":50}}]},"86":{"line":927,"type":"if","locations":[{"start":{"line":927,"column":12},"end":{"line":927,"column":12}},{"start":{"line":927,"column":12},"end":{"line":927,"column":12}}]},"87":{"line":934,"type":"if","locations":[{"start":{"line":934,"column":10},"end":{"line":934,"column":10}},{"start":{"line":934,"column":10},"end":{"line":934,"column":10}}]},"88":{"line":938,"type":"cond-expr","locations":[{"start":{"line":938,"column":52},"end":{"line":938,"column":56}},{"start":{"line":938,"column":59},"end":{"line":938,"column":63}}]},"89":{"line":940,"type":"if","locations":[{"start":{"line":940,"column":16},"end":{"line":940,"column":16}},{"start":{"line":940,"column":16},"end":{"line":940,"column":16}}]},"90":{"line":940,"type":"binary-expr","locations":[{"start":{"line":940,"column":20},"end":{"line":940,"column":23}},{"start":{"line":940,"column":27},"end":{"line":940,"column":29}}]},"91":{"line":941,"type":"if","locations":[{"start":{"line":941,"column":16},"end":{"line":941,"column":16}},{"start":{"line":941,"column":16},"end":{"line":941,"column":16}}]},"92":{"line":945,"type":"if","locations":[{"start":{"line":945,"column":20},"end":{"line":945,"column":20}},{"start":{"line":945,"column":20},"end":{"line":945,"column":20}}]},"93":{"line":947,"type":"if","locations":[{"start":{"line":947,"column":23},"end":{"line":947,"column":23}},{"start":{"line":947,"column":23},"end":{"line":947,"column":23}}]},"94":{"line":956,"type":"cond-expr","locations":[{"start":{"line":956,"column":52},"end":{"line":956,"column":56}},{"start":{"line":956,"column":59},"end":{"line":956,"column":63}}]},"95":{"line":958,"type":"if","locations":[{"start":{"line":958,"column":16},"end":{"line":958,"column":16}},{"start":{"line":958,"column":16},"end":{"line":958,"column":16}}]},"96":{"line":958,"type":"binary-expr","locations":[{"start":{"line":958,"column":20},"end":{"line":958,"column":23}},{"start":{"line":958,"column":27},"end":{"line":958,"column":29}}]},"97":{"line":959,"type":"if","locations":[{"start":{"line":959,"column":16},"end":{"line":959,"column":16}},{"start":{"line":959,"column":16},"end":{"line":959,"column":16}}]},"98":{"line":963,"type":"if","locations":[{"start":{"line":963,"column":20},"end":{"line":963,"column":20}},{"start":{"line":963,"column":20},"end":{"line":963,"column":20}}]},"99":{"line":965,"type":"if","locations":[{"start":{"line":965,"column":23},"end":{"line":965,"column":23}},{"start":{"line":965,"column":23},"end":{"line":965,"column":23}}]},"100":{"line":976,"type":"if","locations":[{"start":{"line":976,"column":6},"end":{"line":976,"column":6}},{"start":{"line":976,"column":6},"end":{"line":976,"column":6}}]},"101":{"line":979,"type":"binary-expr","locations":[{"start":{"line":979,"column":38},"end":{"line":979,"column":58}},{"start":{"line":979,"column":62},"end":{"line":979,"column":64}}]},"102":{"line":980,"type":"binary-expr","locations":[{"start":{"line":980,"column":30},"end":{"line":980,"column":49}},{"start":{"line":980,"column":53},"end":{"line":980,"column":55}}]},"103":{"line":981,"type":"binary-expr","locations":[{"start":{"line":981,"column":29},"end":{"line":981,"column":47}},{"start":{"line":981,"column":51},"end":{"line":981,"column":53}}]},"104":{"line":983,"type":"binary-expr","locations":[{"start":{"line":983,"column":30},"end":{"line":983,"column":62}},{"start":{"line":983,"column":66},"end":{"line":983,"column":68}}]},"105":{"line":984,"type":"binary-expr","locations":[{"start":{"line":984,"column":29},"end":{"line":984,"column":60}},{"start":{"line":984,"column":64},"end":{"line":984,"column":66}}]},"106":{"line":987,"type":"binary-expr","locations":[{"start":{"line":987,"column":27},"end":{"line":987,"column":38}},{"start":{"line":987,"column":42},"end":{"line":987,"column":64}}]},"107":{"line":988,"type":"if","locations":[{"start":{"line":988,"column":10},"end":{"line":988,"column":10}},{"start":{"line":988,"column":10},"end":{"line":988,"column":10}}]},"108":{"line":988,"type":"binary-expr","locations":[{"start":{"line":988,"column":14},"end":{"line":988,"column":24}},{"start":{"line":988,"column":28},"end":{"line":988,"column":63}}]},"109":{"line":989,"type":"cond-expr","locations":[{"start":{"line":989,"column":43},"end":{"line":989,"column":58}},{"start":{"line":989,"column":61},"end":{"line":989,"column":89}}]},"110":{"line":990,"type":"cond-expr","locations":[{"start":{"line":990,"column":42},"end":{"line":990,"column":56}},{"start":{"line":990,"column":59},"end":{"line":990,"column":86}}]},"111":{"line":991,"type":"cond-expr","locations":[{"start":{"line":991,"column":38},"end":{"line":991,"column":49}},{"start":{"line":991,"column":52},"end":{"line":991,"column":78}}]},"112":{"line":992,"type":"if","locations":[{"start":{"line":992,"column":12},"end":{"line":992,"column":12}},{"start":{"line":992,"column":12},"end":{"line":992,"column":12}}]},"113":{"line":992,"type":"binary-expr","locations":[{"start":{"line":992,"column":16},"end":{"line":992,"column":22}},{"start":{"line":992,"column":26},"end":{"line":992,"column":49}}]},"114":{"line":997,"type":"if","locations":[{"start":{"line":997,"column":12},"end":{"line":997,"column":12}},{"start":{"line":997,"column":12},"end":{"line":997,"column":12}}]},"115":{"line":997,"type":"binary-expr","locations":[{"start":{"line":997,"column":16},"end":{"line":997,"column":21}},{"start":{"line":997,"column":25},"end":{"line":997,"column":47}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/*!"," * Module Dependencies."," */","'use strict';","var g = require('./globalize');","var assert = require('assert');","var debug = require('debug')('loopback:model');","var RemoteObjects = require('strong-remoting');","var SharedClass = require('strong-remoting').SharedClass;","var extend = require('util')._extend;","var format = require('util').format;","","var deprecated = require('depd')('loopback');","","module.exports = function(registry) {","  /**","   * The base class for **all models**.","   *","   * **Inheriting from `Model`**","   *","   * ```js","   * var properties = {...};","   * var options = {...};","   * var MyModel = loopback.Model.extend('MyModel', properties, options);","   * ```","   *","   * **Options**","   *","   *  - `trackChanges` - If true, changes to the model will be tracked. **Required","   * for replication.**","   *","   * **Events**","   *","   * #### Event: `changed`","   *","   * Emitted after a model has been successfully created, saved, or updated.","   * Argument: `inst`, model instance, object","   *","   * ```js","   * MyModel.on('changed', function(inst) {","   *   console.log('model with id %s has been changed', inst.id);","   *   // => model with id 1 has been changed","   * });","   * ```","   *","   * #### Event: `deleted`","   *","   * Emitted after an individual model has been deleted.","   * Argument: `id`, model ID (number).","   *","   * ```js","   * MyModel.on('deleted', function(id) {","   *   console.log('model with id %s has been deleted', id);","   *   // => model with id 1 has been deleted","   * });","   * ```","   *","   * #### Event: `deletedAll`","   *","   * Emitted after all models have been deleted.","   * Argument: `where` (optional), where filter, JSON object.","   *","   * ```js","   * MyModel.on('deletedAll', function(where) {","   *   if (where) {","   *     console.log('all models where ', where, ' have been deleted');","   *     // => all models where","   *     // => {price: {gt: 100}}","   *     // => have been deleted","   *   }","   * });","   * ```","   *","   * #### Event: `attached`","   *","   * Emitted after a `Model` has been attached to an `app`.","   *","   * #### Event: `dataSourceAttached`","   *","   * Emitted after a `Model` has been attached to a `DataSource`.","   *","   * #### Event: set","   *","   * Emitted when model property is set.","   * Argument: `inst`, model instance, object","   *","   * ```js","   * MyModel.on('set', function(inst) {","   *   console.log('model with id %s has been changed', inst.id);","   *   // => model with id 1 has been changed","   * });","   * ```","   *","   * @param {Object} data","   * @property {String} Model.modelName The name of the model. Static property.","   * @property {DataSource} Model.dataSource Data source to which the model is connected, if any. Static property.","   * @property {SharedClass} Model.sharedMethod The `strong-remoting` [SharedClass](http://apidocs.strongloop.com/strong-remoting/#sharedclass) that contains remoting (and http) metadata. Static property.","   * @property {Object} settings Contains additional model settings.","   * @property {string} settings.http.path Base URL of the model HTTP route.","   * @property [{string}] settings.acls Array of ACLs for the model.","   * @class","   */","  var Model = registry.modelBuilder.define('Model');","","  Model.registry = registry;","","  /**","   * The `loopback.Model.extend()` method calls this when you create a model that extends another model.","   * Add any setup or configuration code you want executed when the model is created.","   * See  [Setting up a custom model](http://loopback.io/doc/en/lb2/Extending-built-in-models.html#setting-up-a-custom-model).","   */","","  Model.setup = function() {","    var ModelCtor = this;","    var Parent = this.super_;","","    if (!ModelCtor.registry && Parent && Parent.registry) {","      ModelCtor.registry = Parent.registry;","    }","","    var options = this.settings;","    var typeName = this.modelName;","","    // support remoting prototype methods","    // it's important to setup this function *before* calling `new SharedClass`","    // otherwise remoting metadata from our base model is picked up","    ModelCtor.sharedCtor = function(data, id, options, fn) {","      var ModelCtor = this;","","      var isRemoteInvocationWithOptions = typeof data !== 'object' &&","        typeof id === 'object' &&","        typeof options === 'function';","      if (isRemoteInvocationWithOptions) {","        // sharedCtor(id, options, fn)","        fn = options;","        options = id;","        id = data;","        data = null;","      } else if (typeof data === 'function') {","        // sharedCtor(fn)","        fn = data;","        data = null;","        id = null;","        options = null;","      } else if (typeof id === 'function') {","        // sharedCtor(data, fn)","        // sharedCtor(id, fn)","        fn = id;","        options = null;","","        if (typeof data !== 'object') {","          id = data;","          data = null;","        } else {","          id = null;","        }","      }","","      if (id && data) {","        var model = new ModelCtor(data);","        model.id = id;","        fn(null, model);","      } else if (data) {","        fn(null, new ModelCtor(data));","      } else if (id) {","        var filter = {};","        ModelCtor.findById(id, filter, options, function(err, model) {","          if (err) {","            fn(err);","          } else if (model) {","            fn(null, model);","          } else {","            err = new Error(g.f('could not find a model with {{id}} %s', id));","            err.statusCode = 404;","            err.code = 'MODEL_NOT_FOUND';","            fn(err);","          }","        });","      } else {","        fn(new Error(g.f('must specify an {{id}} or {{data}}')));","      }","    };","","    var idDesc = ModelCtor.modelName + ' id';","    ModelCtor.sharedCtor.accepts = [","      {arg: 'id', type: 'any', required: true, http: {source: 'path'},","        description: idDesc},","      // {arg: 'instance', type: 'object', http: {source: 'body'}}","      {arg: 'options', type: 'object', http: createOptionsViaModelMethod},","    ];","","    ModelCtor.sharedCtor.http = [","      {path: '/:id'},","    ];","","    ModelCtor.sharedCtor.returns = {root: true};","","    var remotingOptions = {};","    extend(remotingOptions, options.remoting || {});","","    // create a sharedClass","    var sharedClass = ModelCtor.sharedClass = new SharedClass(","      ModelCtor.modelName,","      ModelCtor,","      remotingOptions","    );","","    // before remote hook","    ModelCtor.beforeRemote = function(name, fn) {","      var className = this.modelName;","      this._runWhenAttachedToApp(function(app) {","        var remotes = app.remotes();","        remotes.before(className + '.' + name, function(ctx, next) {","          return fn(ctx, ctx.result, next);","        });","      });","    };","","    // after remote hook","    ModelCtor.afterRemote = function(name, fn) {","      var className = this.modelName;","      this._runWhenAttachedToApp(function(app) {","        var remotes = app.remotes();","        remotes.after(className + '.' + name, function(ctx, next) {","          return fn(ctx, ctx.result, next);","        });","      });","    };","","    ModelCtor.afterRemoteError = function(name, fn) {","      var className = this.modelName;","      this._runWhenAttachedToApp(function(app) {","        var remotes = app.remotes();","        remotes.afterError(className + '.' + name, fn);","      });","    };","","    ModelCtor._runWhenAttachedToApp = function(fn) {","      if (this.app) return fn(this.app);","      var self = this;","      self.once('attached', function() {","        fn(self.app);","      });","    };","","    if ('injectOptionsFromRemoteContext' in options) {","      console.warn(g.f(","        '%s is using model setting %s which is no longer available.',","        typeName, 'injectOptionsFromRemoteContext'));","      console.warn(g.f(","        'Please rework your app to use the offical solution for injecting ' +","          '\"options\" argument from request context,\\nsee %s',","        'http://loopback.io/doc/en/lb3/Using-current-context.html'));","    }","","    // resolve relation functions","    sharedClass.resolve(function resolver(define) {","      var relations = ModelCtor.relations || {};","      var defineRaw = define;","      define = function(name, options, fn) {","        if (options.accepts) {","          options = extend({}, options);","          options.accepts = setupOptionsArgs(options.accepts);","        }","        defineRaw(name, options, fn);","      };","","      // get the relations","      for (var relationName in relations) {","        var relation = relations[relationName];","        if (relation.type === 'belongsTo') {","          ModelCtor.belongsToRemoting(relationName, relation, define);","        } else if (","          relation.type === 'hasOne' ||","          relation.type === 'embedsOne'","        ) {","          ModelCtor.hasOneRemoting(relationName, relation, define);","        } else if (","          relation.type === 'hasMany' ||","          relation.type === 'embedsMany' ||","          relation.type === 'referencesMany') {","          ModelCtor.hasManyRemoting(relationName, relation, define);","        }","      }","","      // handle scopes","      var scopes = ModelCtor.scopes || {};","      for (var scopeName in scopes) {","        ModelCtor.scopeRemoting(scopeName, scopes[scopeName], define);","      }","    });","","    return ModelCtor;","  };","","  /*!","   * Get the reference to ACL in a lazy fashion to avoid race condition in require","   */","  var _aclModel = null;","  Model._ACL = function getACL(ACL) {","    var registry = this.registry;","    if (ACL !== undefined) {","      // The function is used as a setter","      _aclModel = ACL;","    }","    if (_aclModel) {","      return _aclModel;","    }","    var aclModel = registry.getModel('ACL');","    _aclModel = registry.getModelByType(aclModel);","    return _aclModel;","  };","","  /**","   * Check if the given access token can invoke the specified method.","   *","   * @param {AccessToken} token The access token.","   * @param {*} modelId The model ID.","   * @param {SharedMethod} sharedMethod The method in question.","   * @param {Object} ctx The remote invocation context.","   * @callback {Function} callback The callback function.","   * @param {String|Error} err The error object.","   * @param {Boolean} allowed True if the request is allowed; false otherwise.","   */","","  Model.checkAccess = function(token, modelId, sharedMethod, ctx, callback) {","    var ANONYMOUS = registry.getModel('AccessToken').ANONYMOUS;","    token = token || ANONYMOUS;","    var aclModel = Model._ACL();","","    ctx = ctx || {};","    if (typeof ctx === 'function' && callback === undefined) {","      callback = ctx;","      ctx = {};","    }","","    aclModel.checkAccessForContext({","      accessToken: token,","      model: this,","      property: sharedMethod.name,","      method: sharedMethod.name,","      sharedMethod: sharedMethod,","      modelId: modelId,","      accessType: this._getAccessTypeForMethod(sharedMethod),","      remotingContext: ctx,","    }, function(err, accessRequest) {","      if (err) return callback(err);","      callback(null, accessRequest.isAllowed());","    });","  };","","  /*!","   * Determine the access type for the given `RemoteMethod`.","   *","   * @api private","   * @param {RemoteMethod} method","   */","","  Model._getAccessTypeForMethod = function(method) {","    if (typeof method === 'string') {","      method = {name: method};","    }","    assert(","      typeof method === 'object',","      'method is a required argument and must be a RemoteMethod object'","    );","","    var ACL = Model._ACL();","","    // Check the explicit setting of accessType","    if (method.accessType) {","      assert(method.accessType === ACL.READ ||","        method.accessType === ACL.REPLICATE ||","        method.accessType === ACL.WRITE ||","        method.accessType === ACL.EXECUTE, 'invalid accessType ' +","        method.accessType +","        '. It must be \"READ\", \"REPLICATE\", \"WRITE\", or \"EXECUTE\"');","      return method.accessType;","    }","","    // Default GET requests to READ","    var verb = method.http && method.http.verb;","    if (typeof verb === 'string') {","      verb = verb.toUpperCase();","    }","    if (verb === 'GET' || verb === 'HEAD') {","      return ACL.READ;","    }","","    switch (method.name) {","      case 'create':","        return ACL.WRITE;","      case 'updateOrCreate':","        return ACL.WRITE;","      case 'upsertWithWhere':","        return ACL.WRITE;","      case 'upsert':","        return ACL.WRITE;","      case 'exists':","        return ACL.READ;","      case 'findById':","        return ACL.READ;","      case 'find':","        return ACL.READ;","      case 'findOne':","        return ACL.READ;","      case 'destroyById':","        return ACL.WRITE;","      case 'deleteById':","        return ACL.WRITE;","      case 'removeById':","        return ACL.WRITE;","      case 'count':","        return ACL.READ;","      default:","        return ACL.EXECUTE;","    }","  };","","  /**","   * Get the `Application` object to which the Model is attached.","   *","   * @callback {Function} callback Callback function called with `(err, app)` arguments.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Application} app Attached application object.","   * @end","   */","","  Model.getApp = function(callback) {","    var self = this;","    self._runWhenAttachedToApp(function(app) {","      assert(self.app);","      assert.equal(app, self.app);","      callback(null, app);","    });","  };","","  /**","   * Enable remote invocation for the specified method.","   * See [Remote methods](http://loopback.io/doc/en/lb2/Remote-methods.html) for more information.","   *","   * Static method example:","   * ```js","   * Model.myMethod();","   * Model.remoteMethod('myMethod');","   * ```","   *","   * @param {String} name The name of the method.","   * @param {Object} options The remoting options.","   * See [Remote methods - Options](http://loopback.io/doc/en/lb2/Remote-methods.html#options).","   */","","  Model.remoteMethod = function(name, options) {","    if (options.isStatic === undefined) {","      var m = name.match(/^prototype\\.(.*)$/);","      options.isStatic = !m;","      name = options.isStatic ? name : m[1];","    }","","    if (options.accepts) {","      options = extend({}, options);","      options.accepts = setupOptionsArgs(options.accepts);","    }","","    this.sharedClass.defineMethod(name, options);","    this.emit('remoteMethodAdded', this.sharedClass);","  };","","  function setupOptionsArgs(accepts) {","    if (!Array.isArray(accepts))","      accepts = [accepts];","","    return accepts.map(function(arg) {","      if (arg.http && arg.http === 'optionsFromRequest') {","        // clone to preserve the input value","        arg = extend({}, arg);","        arg.http = createOptionsViaModelMethod;","      }","      return arg;","    });","  }","","  function createOptionsViaModelMethod(ctx) {","    var EMPTY_OPTIONS = {};","    var ModelCtor = ctx.method && ctx.method.ctor;","    if (!ModelCtor)","      return EMPTY_OPTIONS;","    if (typeof ModelCtor.createOptionsFromRemotingContext !== 'function')","      return EMPTY_OPTIONS;","    debug('createOptionsFromRemotingContext for %s', ctx.method.stringName);","    return ModelCtor.createOptionsFromRemotingContext(ctx);","  }","","  /**","   * Disable remote invocation for the method with the given name.","   *","   * @param {String} name The name of the method.","   * @param {Boolean} isStatic Is the method static (eg. `MyModel.myMethod`)? Pass","   * `false` if the method defined on the prototype (eg.","   * `MyModel.prototype.myMethod`).","   */","","  Model.disableRemoteMethod = function(name, isStatic) {","    deprecated('Model.disableRemoteMethod is deprecated. ' +","      'Use Model.disableRemoteMethodByName instead.');","    var key = this.sharedClass.getKeyFromMethodNameAndTarget(name, isStatic);","    this.sharedClass.disableMethodByName(key);","    this.emit('remoteMethodDisabled', this.sharedClass, key);","  };","","  /**","   * Disable remote invocation for the method with the given name.","   *","   * @param {String} name The name of the method (include \"prototype.\" if the method is defined on the prototype).","   *","   */","","  Model.disableRemoteMethodByName = function(name) {","    this.sharedClass.disableMethodByName(name);","    this.emit('remoteMethodDisabled', this.sharedClass, name);","  };","","  Model.belongsToRemoting = function(relationName, relation, define) {","    var modelName = relation.modelTo && relation.modelTo.modelName;","    modelName = modelName || 'PersistedModel';","    var fn = this.prototype[relationName];","    var pathName = (relation.options.http && relation.options.http.path) || relationName;","    define('__get__' + relationName, {","      isStatic: false,","      http: {verb: 'get', path: '/' + pathName},","      accepts: [","        {arg: 'refresh', type: 'boolean', http: {source: 'query'}},","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      accessType: 'READ',","      description: format('Fetches belongsTo relation %s.', relationName),","      returns: {arg: relationName, type: modelName, root: true},","    }, fn);","  };","","  function convertNullToNotFoundError(toModelName, ctx, cb) {","    if (ctx.result !== null) return cb();","","    var fk = ctx.getArgByName('fk');","    var msg = g.f('Unknown \"%s\" id \"%s\".', toModelName, fk);","    var error = new Error(msg);","    error.statusCode = error.status = 404;","    error.code = 'MODEL_NOT_FOUND';","    cb(error);","  }","","  Model.hasOneRemoting = function(relationName, relation, define) {","    var pathName = (relation.options.http && relation.options.http.path) || relationName;","    var toModelName = relation.modelTo.modelName;","","    define('__get__' + relationName, {","      isStatic: false,","      http: {verb: 'get', path: '/' + pathName},","      accepts: [","        {arg: 'refresh', type: 'boolean', http: {source: 'query'}},","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      description: format('Fetches hasOne relation %s.', relationName),","      accessType: 'READ',","      returns: {arg: relationName, type: relation.modelTo.modelName, root: true},","      rest: {after: convertNullToNotFoundError.bind(null, toModelName)},","    });","","    define('__create__' + relationName, {","      isStatic: false,","      http: {verb: 'post', path: '/' + pathName},","      accepts: [","        {","          arg: 'data', type: 'object', model: toModelName,","          http: {source: 'body'},","        },","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      description: format('Creates a new instance in %s of this model.', relationName),","      accessType: 'WRITE',","      returns: {arg: 'data', type: toModelName, root: true},","    });","","    define('__update__' + relationName, {","      isStatic: false,","      http: {verb: 'put', path: '/' + pathName},","      accepts: [","        {","          arg: 'data', type: 'object', model: toModelName,","          http: {source: 'body'},","        },","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      description: format('Update %s of this model.', relationName),","      accessType: 'WRITE',","      returns: {arg: 'data', type: toModelName, root: true},","    });","","    define('__destroy__' + relationName, {","      isStatic: false,","      http: {verb: 'delete', path: '/' + pathName},","      accepts: [","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      description: format('Deletes %s of this model.', relationName),","      accessType: 'WRITE',","    });","  };","","  Model.hasManyRemoting = function(relationName, relation, define) {","    var pathName = (relation.options.http && relation.options.http.path) || relationName;","    var toModelName = relation.modelTo.modelName;","","    var findByIdFunc = this.prototype['__findById__' + relationName];","    define('__findById__' + relationName, {","      isStatic: false,","      http: {verb: 'get', path: '/' + pathName + '/:fk'},","      accepts: [","        {","          arg: 'fk', type: 'any',","          description: format('Foreign key for %s', relationName),","          required: true,","          http: {source: 'path'},","        },","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      description: format('Find a related item by id for %s.', relationName),","      accessType: 'READ',","      returns: {arg: 'result', type: toModelName, root: true},","      rest: {after: convertNullToNotFoundError.bind(null, toModelName)},","    }, findByIdFunc);","","    var destroyByIdFunc = this.prototype['__destroyById__' + relationName];","    define('__destroyById__' + relationName, {","      isStatic: false,","      http: {verb: 'delete', path: '/' + pathName + '/:fk'},","      accepts: [","        {","          arg: 'fk', type: 'any',","          description: format('Foreign key for %s', relationName),","          required: true,","          http: {source: 'path'},","        },","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      description: format('Delete a related item by id for %s.', relationName),","      accessType: 'WRITE',","      returns: [],","    }, destroyByIdFunc);","","    var updateByIdFunc = this.prototype['__updateById__' + relationName];","    define('__updateById__' + relationName, {","      isStatic: false,","      http: {verb: 'put', path: '/' + pathName + '/:fk'},","      accepts: [","        {arg: 'fk', type: 'any',","          description: format('Foreign key for %s', relationName),","          required: true,","          http: {source: 'path'}},","        {arg: 'data', type: 'object', model: toModelName, http: {source: 'body'}},","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      description: format('Update a related item by id for %s.', relationName),","      accessType: 'WRITE',","      returns: {arg: 'result', type: toModelName, root: true},","    }, updateByIdFunc);","","    if (relation.modelThrough || relation.type === 'referencesMany') {","      var modelThrough = relation.modelThrough || relation.modelTo;","","      var accepts = [];","      if (relation.type === 'hasMany' && relation.modelThrough) {","        // Restrict: only hasManyThrough relation can have additional properties","        accepts.push({","          arg: 'data', type: 'object', model: modelThrough.modelName,","          http: {source: 'body'},","        });","      }","","      var addFunc = this.prototype['__link__' + relationName];","      define('__link__' + relationName, {","        isStatic: false,","        http: {verb: 'put', path: '/' + pathName + '/rel/:fk'},","        accepts: [{arg: 'fk', type: 'any',","          description: format('Foreign key for %s', relationName),","          required: true,","          http: {source: 'path'}},","        ].concat(accepts).concat([","          {arg: 'options', type: 'object', http: 'optionsFromRequest'},","        ]),","        description: format('Add a related item by id for %s.', relationName),","        accessType: 'WRITE',","        returns: {arg: relationName, type: modelThrough.modelName, root: true},","      }, addFunc);","","      var removeFunc = this.prototype['__unlink__' + relationName];","      define('__unlink__' + relationName, {","        isStatic: false,","        http: {verb: 'delete', path: '/' + pathName + '/rel/:fk'},","        accepts: [","          {","            arg: 'fk', type: 'any',","            description: format('Foreign key for %s', relationName),","            required: true,","            http: {source: 'path'},","          },","          {arg: 'options', type: 'object', http: 'optionsFromRequest'},","        ],","        description: format('Remove the %s relation to an item by id.', relationName),","        accessType: 'WRITE',","        returns: [],","      }, removeFunc);","","      // FIXME: [rfeng] How to map a function with callback(err, true|false) to HEAD?","      // true --> 200 and false --> 404?","      var existsFunc = this.prototype['__exists__' + relationName];","      define('__exists__' + relationName, {","        isStatic: false,","        http: {verb: 'head', path: '/' + pathName + '/rel/:fk'},","        accepts: [","          {","            arg: 'fk', type: 'any',","            description: format('Foreign key for %s', relationName),","            required: true,","            http: {source: 'path'},","          },","          {arg: 'options', type: 'object', http: 'optionsFromRequest'},","        ],","        description: format('Check the existence of %s relation to an item by id.', relationName),","        accessType: 'READ',","        returns: {arg: 'exists', type: 'boolean', root: true},","        rest: {","          // After hook to map exists to 200/404 for HEAD","          after: function(ctx, cb) {","            if (ctx.result === false) {","              var modelName = ctx.method.sharedClass.name;","              var id = ctx.getArgByName('id');","              var msg = g.f('Unknown \"%s\" {{id}} \"%s\".', modelName, id);","              var error = new Error(msg);","              error.statusCode = error.status = 404;","              error.code = 'MODEL_NOT_FOUND';","              cb(error);","            } else {","              cb();","            }","          },","        },","      }, existsFunc);","    }","  };","","  Model.scopeRemoting = function(scopeName, scope, define) {","    var pathName =","      (scope.options && scope.options.http && scope.options.http.path) || scopeName;","","    var isStatic = scope.isStatic;","    var toModelName = scope.modelTo.modelName;","","    // https://github.com/strongloop/loopback/issues/811","    // Check if the scope is for a hasMany relation","    var relation = this.relations[scopeName];","    if (relation && relation.modelTo) {","      // For a relation with through model, the toModelName should be the one","      // from the target model","      toModelName = relation.modelTo.modelName;","    }","","    define('__get__' + scopeName, {","      isStatic: isStatic,","      http: {verb: 'get', path: '/' + pathName},","      accepts: [","        {arg: 'filter', type: 'object'},","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      description: format('Queries %s of %s.', scopeName, this.modelName),","      accessType: 'READ',","      returns: {arg: scopeName, type: [toModelName], root: true},","    });","","    define('__create__' + scopeName, {","      isStatic: isStatic,","      http: {verb: 'post', path: '/' + pathName},","      accepts: [","        {","          arg: 'data',","          type: 'object',","          allowArray: true,","          model: toModelName,","          http: {source: 'body'},","        },","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      description: format('Creates a new instance in %s of this model.', scopeName),","      accessType: 'WRITE',","      returns: {arg: 'data', type: toModelName, root: true},","    });","","    define('__delete__' + scopeName, {","      isStatic: isStatic,","      http: {verb: 'delete', path: '/' + pathName},","      accepts: [","        {","          arg: 'where', type: 'object',","          // The \"where\" argument is not exposed in the REST API","          // but we need to provide a value so that we can pass \"options\"","          // as the third argument.","          http: function(ctx) { return undefined; },","        },","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      description: format('Deletes all %s of this model.', scopeName),","      accessType: 'WRITE',","    });","","    define('__count__' + scopeName, {","      isStatic: isStatic,","      http: {verb: 'get', path: '/' + pathName + '/count'},","      accepts: [","        {","          arg: 'where', type: 'object',","          description: 'Criteria to match model instances',","        },","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      description: format('Counts %s of %s.', scopeName, this.modelName),","      accessType: 'READ',","      returns: {arg: 'count',  type: 'number'},","    });","  };","","  /**","  * Enabled deeply-nested queries of related models via REST API.","  *","  * @param {String} relationName Name of the nested relation.","  * @options {Object} [options] It is optional. See below.","  * @param {String} pathName The HTTP path (relative to the model) at which your remote method is exposed.","  * @param {String} filterMethod The filter name.","  * @param {String} paramName The argument name that the remote method accepts.","  * @param {String} getterName The getter name.","  * @param {Boolean} hooks Whether to inherit before/after hooks.","  * @callback {Function} filterCallback The Optional filter function.","  * @param {Object} SharedMethod object. See [here](https://apidocs.strongloop.com/strong-remoting/#sharedmethod).","  * @param {Object} RelationDefinition object which includes relation `type`, `ModelConstructor` of `modelFrom`, `modelTo`, `keyFrom`, `keyTo` and more relation definitions.","   */","","  Model.nestRemoting = function(relationName, options, filterCallback) {","    if (typeof options === 'function' && !filterCallback) {","      filterCallback = options;","      options = {};","    }","    options = options || {};","","    var regExp = /^__([^_]+)__([^_]+)$/;","    var relation = this.relations[relationName];","    if (relation && relation.modelTo && relation.modelTo.sharedClass) {","      var self = this;","      var sharedClass = this.sharedClass;","      var sharedToClass = relation.modelTo.sharedClass;","      var toModelName = relation.modelTo.modelName;","","      var pathName = options.pathName || relation.options.path || relationName;","      var paramName = options.paramName || 'nk';","","      var http = [].concat(sharedToClass.http || [])[0];","      var httpPath, acceptArgs;","","      if (relation.multiple) {","        httpPath = pathName + '/:' + paramName;","        acceptArgs = [","          {","            arg: paramName, type: 'any', http: {source: 'path'},","            description: format('Foreign key for %s.',  relation.name),","            required: true,","          },","        ];","      } else {","        httpPath = pathName;","        acceptArgs = [];","      }","","      if (httpPath[0] !== '/') {","        httpPath = '/' + httpPath;","      }","","      // A method should return the method name to use, if it is to be","      // included as a nested method - a falsy return value will skip.","      var filter = filterCallback || options.filterMethod || function(method, relation) {","        var matches = method.name.match(regExp);","        if (matches) {","          return '__' + matches[1] + '__' + relation.name + '__' + matches[2];","        }","      };","","      sharedToClass.methods().forEach(function(method) {","        var methodName;","        if (!method.isStatic && (methodName = filter(method, relation))) {","          var prefix = relation.multiple ? '__findById__' : '__get__';","          var getterName = options.getterName || (prefix + relationName);","","          var getterFn = relation.modelFrom.prototype[getterName];","          if (typeof getterFn !== 'function') {","            throw new Error(g.f('Invalid remote method: `%s`', getterName));","          }","","          var nestedFn = relation.modelTo.prototype[method.name];","          if (typeof nestedFn !== 'function') {","            throw new Error(g.f('Invalid remote method: `%s`', method.name));","          }","","          var opts = {};","","          opts.accepts = acceptArgs.concat(method.accepts || []);","          opts.returns = [].concat(method.returns || []);","          opts.description = method.description;","          opts.accessType = method.accessType;","          opts.rest = extend({}, method.rest || {});","          opts.rest.delegateTo = method;","","          opts.http = [];","          var routes = [].concat(method.http || []);","          routes.forEach(function(route) {","            if (route.path) {","              var copy = extend({}, route);","              copy.path = httpPath + route.path;","              opts.http.push(copy);","            }","          });","","          if (relation.multiple) {","            sharedClass.defineMethod(methodName, opts, function(fkId) {","              var args = Array.prototype.slice.call(arguments, 1);","              var last = args[args.length - 1];","              var cb = typeof last === 'function' ? last : null;","              this[getterName](fkId, function(err, inst) {","                if (err && cb) return cb(err);","                if (inst instanceof relation.modelTo) {","                  try {","                    nestedFn.apply(inst, args);","                  } catch (err) {","                    if (cb) return cb(err);","                  }","                } else if (cb) {","                  cb(err, null);","                }","              });","            }, method.isStatic);","          } else {","            sharedClass.defineMethod(methodName, opts, function() {","              var args = Array.prototype.slice.call(arguments);","              var last = args[args.length - 1];","              var cb = typeof last === 'function' ? last : null;","              this[getterName](function(err, inst) {","                if (err && cb) return cb(err);","                if (inst instanceof relation.modelTo) {","                  try {","                    nestedFn.apply(inst, args);","                  } catch (err) {","                    if (cb) return cb(err);","                  }","                } else if (cb) {","                  cb(err, null);","                }","              });","            }, method.isStatic);","          }","        }","      });","","      this.emit('remoteMethodAdded', this.sharedClass);","","      if (options.hooks === false) return; // don't inherit before/after hooks","","      self.once('mounted', function(app, sc, remotes) {","        var listenerTree = extend({}, remotes.listenerTree || {});","        listenerTree.before = listenerTree.before || {};","        listenerTree.after = listenerTree.after || {};","","        var beforeListeners = listenerTree.before[toModelName] || {};","        var afterListeners = listenerTree.after[toModelName] || {};","","        sharedClass.methods().forEach(function(method) {","          var delegateTo = method.rest && method.rest.delegateTo;","          if (delegateTo && delegateTo.ctor == relation.modelTo) {","            var before = method.isStatic ? beforeListeners : beforeListeners['prototype'];","            var after = method.isStatic ? afterListeners : afterListeners['prototype'];","            var m = method.isStatic ? method.name : 'prototype.' + method.name;","            if (before && before[delegateTo.name]) {","              self.beforeRemote(m, function(ctx, result, next) {","                before[delegateTo.name]._listeners.call(null, ctx, next);","              });","            }","            if (after && after[delegateTo.name]) {","              self.afterRemote(m, function(ctx, result, next) {","                after[delegateTo.name]._listeners.call(null, ctx, next);","              });","            }","          }","        });","      });","    } else {","      var msg = g.f('Relation `%s` does not exist for model `%s`', relationName, this.modelName);","      throw new Error(msg);","    }","  };","","  Model.ValidationError = require('loopback-datasource-juggler').ValidationError;","","  /**","   * Create \"options\" value to use when invoking model methods","   * via strong-remoting (e.g. REST).","   *","   * Example","   *","   * ```js","   * MyModel.myMethod = function(options, cb) {","   *   // by default, options contains only one property \"accessToken\"","   *   var accessToken = options && options.accessToken;","   *   var userId = accessToken && accessToken.userId;","   *   var message = 'Hello ' + (userId ? 'user #' + userId : 'anonymous');","   *   cb(null, message);","   * });","   *","   * MyModel.remoteMethod('myMethod', {","   *   accepts: {","   *     arg: 'options',","   *     type: 'object',","   *     // \"optionsFromRequest\" is a loopback-specific HTTP mapping that","   *     // calls Model's createOptionsFromRemotingContext","   *     // to build the argument value","   *     http: 'optionsFromRequest'","   *    },","   *    returns: {","   *      arg: 'message',","   *      type: 'string'","   *    }","   * });","   * ```","   *","   * @param {Object} ctx A strong-remoting Context instance","   * @returns {Object} The value to pass to \"options\" argument.","   */","  Model.createOptionsFromRemotingContext = function(ctx) {","    return {","      accessToken: ctx.req.accessToken,","    };","  };","","  // setup the initial model","  Model.setup();","","  return Model;","};",""],"l":{"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"18":1,"20":1,"108":1,"110":1,"118":1,"119":16,"120":16,"122":16,"123":0,"126":16,"127":16,"132":16,"133":0,"135":0,"138":0,"140":0,"141":0,"142":0,"143":0,"144":0,"146":0,"147":0,"148":0,"149":0,"150":0,"153":0,"154":0,"156":0,"157":0,"158":0,"160":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"178":0,"179":0,"180":0,"181":0,"185":0,"189":16,"190":16,"197":16,"201":16,"203":16,"204":16,"207":16,"214":16,"215":1,"216":1,"217":0,"218":0,"219":0,"225":16,"226":1,"227":1,"228":0,"229":0,"230":0,"235":16,"236":0,"237":0,"238":0,"239":0,"243":16,"244":2,"245":2,"246":2,"247":0,"251":16,"252":0,"255":0,"262":16,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"270":0,"274":0,"275":0,"276":0,"277":0,"278":0,"282":0,"283":0,"287":0,"292":0,"293":0,"294":0,"298":16,"304":1,"305":1,"306":0,"307":0,"309":0,"311":0,"312":0,"314":0,"315":0,"316":0,"331":1,"332":0,"333":0,"334":0,"336":0,"337":0,"338":0,"339":0,"342":0,"352":0,"353":0,"364":1,"365":0,"366":0,"368":0,"373":0,"376":0,"377":0,"383":0,"387":0,"388":0,"389":0,"391":0,"392":0,"395":0,"397":0,"399":0,"401":0,"403":0,"405":0,"407":0,"409":0,"411":0,"413":0,"415":0,"417":0,"419":0,"421":0,"434":1,"435":0,"436":0,"437":0,"438":0,"439":0,"458":1,"459":185,"460":5,"461":5,"462":5,"465":185,"466":185,"467":185,"470":185,"471":185,"474":1,"475":185,"476":12,"478":185,"479":407,"481":169,"482":169,"484":407,"488":1,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"508":1,"509":0,"511":0,"512":0,"513":0,"523":1,"524":0,"525":0,"528":1,"529":0,"530":0,"531":0,"532":0,"533":0,"546":1,"547":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"557":1,"558":0,"559":0,"561":0,"574":0,"589":0,"604":0,"615":1,"616":0,"617":0,"619":0,"620":0,"638":0,"639":0,"656":0,"657":0,"673":0,"674":0,"676":0,"677":0,"679":0,"685":0,"686":0,"701":0,"702":0,"721":0,"722":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"749":0,"757":1,"758":0,"761":0,"762":0,"766":0,"767":0,"770":0,"773":0,"785":0,"803":0,"812":0,"820":0,"851":1,"852":0,"853":0,"854":0,"856":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"866":0,"867":0,"869":0,"870":0,"872":0,"873":0,"874":0,"882":0,"883":0,"886":0,"887":0,"892":0,"893":0,"894":0,"895":0,"899":0,"900":0,"901":0,"902":0,"903":0,"905":0,"906":0,"907":0,"910":0,"911":0,"912":0,"915":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"945":0,"947":0,"948":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"963":0,"965":0,"966":0,"974":0,"976":0,"978":0,"979":0,"980":0,"981":0,"983":0,"984":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"997":0,"998":0,"999":0,"1006":0,"1007":0,"1011":1,"1047":1,"1048":0,"1054":1,"1056":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/persisted-model.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/persisted-model.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":12,"15":12,"16":12,"17":0,"18":0,"19":0,"20":12,"21":0,"22":12,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":1,"38":0,"39":1,"40":0,"41":1,"42":0,"43":1,"44":0,"45":1,"46":1,"47":0,"48":1,"49":0,"50":1,"51":0,"52":1,"53":0,"54":1,"55":0,"56":1,"57":1,"58":1,"59":0,"60":1,"61":1,"62":0,"63":1,"64":1,"65":1,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":1,"103":0,"104":1,"105":1,"106":1,"107":1,"108":0,"109":1,"110":0,"111":1,"112":0,"113":1,"114":0,"115":1,"116":0,"117":1,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":1,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":1,"134":12,"135":12,"136":12,"137":12,"138":1,"139":180,"140":180,"141":180,"142":180,"143":12,"144":12,"145":12,"146":0,"147":12,"148":12,"149":12,"150":12,"151":12,"152":12,"153":12,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":12,"166":12,"167":12,"168":12,"169":12,"170":12,"171":12,"172":12,"173":12,"174":12,"175":12,"176":12,"177":12,"178":12,"179":0,"180":12,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":12,"190":1,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":1,"228":0,"229":0,"230":1,"231":0,"232":0,"233":1,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":1,"254":0,"255":0,"256":1,"257":0,"258":0,"259":0,"260":0,"261":1,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":1,"273":0,"274":0,"275":1,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":1,"283":0,"284":0,"285":1,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":1,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":1,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":1,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":1,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":1,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":1,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":1,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":1,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":1,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":1,"454":0,"455":0,"456":0,"457":0,"458":1,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":1,"482":0,"483":0,"484":0,"485":0,"486":1,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":1,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":1,"510":0,"511":0,"512":0,"513":1,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":1,"523":0,"524":0,"525":0,"526":1,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":1,"535":0,"536":0,"537":0,"538":1,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":1,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":1,"558":0,"559":0,"560":1,"561":0,"562":1,"563":0,"564":0,"565":0,"566":1,"567":0,"568":0,"569":1,"570":0,"571":0,"572":1,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":1,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":1,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":1,"628":0,"629":1,"630":0,"631":1,"632":1},"b":{"1":[0,12],"2":[0,12],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,12],"16":[12,0],"17":[0,0],"18":[0,0],"19":[12,0],"20":[0,12],"21":[0,12],"22":[12,12],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0,0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0,0],"57":[0,0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0,0,0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0,0,0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0,0],"133":[0,0],"134":[0,0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0]},"f":{"1":1,"2":12,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":12,"40":180,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":17},"end":{"line":20,"column":36}}},"2":{"name":"setupPersistedModel","line":45,"loc":{"start":{"line":45,"column":25},"end":{"line":45,"column":56}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":48},"end":{"line":54,"column":59}}},"4":{"name":"throwNotAttached","line":68,"loc":{"start":{"line":68,"column":2},"end":{"line":68,"column":51}}},"5":{"name":"convertNullToNotFoundError","line":83,"loc":{"start":{"line":83,"column":2},"end":{"line":83,"column":47}}},"6":{"name":"(anonymous_6)","line":105,"loc":{"start":{"line":105,"column":26},"end":{"line":105,"column":51}}},"7":{"name":"upsert","line":118,"loc":{"start":{"line":118,"column":2},"end":{"line":118,"column":34}}},"8":{"name":"upsertWithWhere","line":140,"loc":{"start":{"line":140,"column":42},"end":{"line":140,"column":90}}},"9":{"name":"replaceOrCreate","line":156,"loc":{"start":{"line":156,"column":35},"end":{"line":156,"column":76}}},"10":{"name":"findOrCreate","line":191,"loc":{"start":{"line":191,"column":32},"end":{"line":191,"column":77}}},"11":{"name":"exists","line":207,"loc":{"start":{"line":207,"column":26},"end":{"line":207,"column":50}}},"12":{"name":"findById","line":225,"loc":{"start":{"line":225,"column":28},"end":{"line":225,"column":62}}},"13":{"name":"find","line":256,"loc":{"start":{"line":256,"column":24},"end":{"line":256,"column":50}}},"14":{"name":"findOne","line":286,"loc":{"start":{"line":286,"column":27},"end":{"line":286,"column":56}}},"15":{"name":"destroyAll","line":306,"loc":{"start":{"line":306,"column":30},"end":{"line":306,"column":61}}},"16":{"name":"updateAll","line":345,"loc":{"start":{"line":345,"column":29},"end":{"line":345,"column":65}}},"17":{"name":"deleteById","line":360,"loc":{"start":{"line":360,"column":31},"end":{"line":360,"column":59}}},"18":{"name":"(anonymous_18)","line":387,"loc":{"start":{"line":387,"column":25},"end":{"line":387,"column":45}}},"19":{"name":"(anonymous_19)","line":403,"loc":{"start":{"line":403,"column":34},"end":{"line":403,"column":62}}},"20":{"name":"(anonymous_20)","line":411,"loc":{"start":{"line":411,"column":27},"end":{"line":411,"column":38}}},"21":{"name":"(anonymous_21)","line":435,"loc":{"start":{"line":435,"column":17},"end":{"line":435,"column":33}}},"22":{"name":"save","line":449,"loc":{"start":{"line":449,"column":4},"end":{"line":449,"column":20}}},"23":{"name":"(anonymous_23)","line":450,"loc":{"start":{"line":450,"column":27},"end":{"line":450,"column":46}}},"24":{"name":"(anonymous_24)","line":451,"loc":{"start":{"line":451,"column":31},"end":{"line":451,"column":52}}},"25":{"name":"(anonymous_25)","line":452,"loc":{"start":{"line":452,"column":29},"end":{"line":452,"column":43}}},"26":{"name":"(anonymous_26)","line":454,"loc":{"start":{"line":454,"column":34},"end":{"line":454,"column":45}}},"27":{"name":"(anonymous_27)","line":455,"loc":{"start":{"line":455,"column":34},"end":{"line":455,"column":45}}},"28":{"name":"(anonymous_28)","line":470,"loc":{"start":{"line":470,"column":41},"end":{"line":470,"column":52}}},"29":{"name":"(anonymous_29)","line":480,"loc":{"start":{"line":480,"column":37},"end":{"line":480,"column":50}}},"30":{"name":"updateAttribute","line":509,"loc":{"start":{"line":509,"column":45},"end":{"line":509,"column":93}}},"31":{"name":"updateAttributes","line":524,"loc":{"start":{"line":524,"column":2},"end":{"line":524,"column":38}}},"32":{"name":"replaceAttributes","line":540,"loc":{"start":{"line":540,"column":47},"end":{"line":540,"column":84}}},"33":{"name":"replaceById","line":558,"loc":{"start":{"line":558,"column":31},"end":{"line":558,"column":66}}},"34":{"name":"reload","line":569,"loc":{"start":{"line":569,"column":36},"end":{"line":569,"column":62}}},"35":{"name":"(anonymous_35)","line":581,"loc":{"start":{"line":581,"column":35},"end":{"line":581,"column":49}}},"36":{"name":"(anonymous_36)","line":592,"loc":{"start":{"line":592,"column":35},"end":{"line":592,"column":46}}},"37":{"name":"(anonymous_37)","line":604,"loc":{"start":{"line":604,"column":39},"end":{"line":604,"column":50}}},"38":{"name":"(anonymous_38)","line":614,"loc":{"start":{"line":614,"column":29},"end":{"line":614,"column":40}}},"39":{"name":"(anonymous_39)","line":625,"loc":{"start":{"line":625,"column":33},"end":{"line":625,"column":44}}},"40":{"name":"setRemoting","line":633,"loc":{"start":{"line":633,"column":4},"end":{"line":633,"column":47}}},"41":{"name":"(anonymous_41)","line":727,"loc":{"start":{"line":727,"column":15},"end":{"line":727,"column":33}}},"42":{"name":"(anonymous_42)","line":1025,"loc":{"start":{"line":1025,"column":24},"end":{"line":1025,"column":65}}},"43":{"name":"(anonymous_43)","line":1040,"loc":{"start":{"line":1040,"column":27},"end":{"line":1040,"column":61}}},"44":{"name":"(anonymous_44)","line":1063,"loc":{"start":{"line":1063,"column":30},"end":{"line":1063,"column":53}}},"45":{"name":"(anonymous_45)","line":1066,"loc":{"start":{"line":1066,"column":28},"end":{"line":1066,"column":45}}},"46":{"name":"(anonymous_46)","line":1070,"loc":{"start":{"line":1070,"column":25},"end":{"line":1070,"column":47}}},"47":{"name":"(anonymous_47)","line":1072,"loc":{"start":{"line":1072,"column":34},"end":{"line":1072,"column":46}}},"48":{"name":"(anonymous_48)","line":1075,"loc":{"start":{"line":1075,"column":38},"end":{"line":1075,"column":51}}},"49":{"name":"(anonymous_49)","line":1089,"loc":{"start":{"line":1089,"column":30},"end":{"line":1089,"column":43}}},"50":{"name":"(anonymous_50)","line":1102,"loc":{"start":{"line":1102,"column":37},"end":{"line":1102,"column":50}}},"51":{"name":"(anonymous_51)","line":1123,"loc":{"start":{"line":1123,"column":29},"end":{"line":1123,"column":77}}},"52":{"name":"run","line":1174,"loc":{"start":{"line":1174,"column":4},"end":{"line":1174,"column":33}}},"53":{"name":"next","line":1178,"loc":{"start":{"line":1178,"column":6},"end":{"line":1178,"column":50}}},"54":{"name":"tryReplicate","line":1190,"loc":{"start":{"line":1190,"column":2},"end":{"line":1190,"column":76}}},"55":{"name":"getSourceChanges","line":1217,"loc":{"start":{"line":1217,"column":4},"end":{"line":1217,"column":34}}},"56":{"name":"(anonymous_56)","line":1221,"loc":{"start":{"line":1221,"column":8},"end":{"line":1221,"column":41}}},"57":{"name":"log","line":1226,"loc":{"start":{"line":1226,"column":6},"end":{"line":1226,"column":32}}},"58":{"name":"(anonymous_58)","line":1229,"loc":{"start":{"line":1229,"column":23},"end":{"line":1229,"column":36}}},"59":{"name":"getDiffFromTarget","line":1234,"loc":{"start":{"line":1234,"column":4},"end":{"line":1234,"column":50}}},"60":{"name":"(anonymous_60)","line":1238,"loc":{"start":{"line":1238,"column":8},"end":{"line":1238,"column":44}}},"61":{"name":"log","line":1243,"loc":{"start":{"line":1243,"column":6},"end":{"line":1243,"column":32}}},"62":{"name":"(anonymous_62)","line":1247,"loc":{"start":{"line":1247,"column":35},"end":{"line":1247,"column":47}}},"63":{"name":"(anonymous_63)","line":1251,"loc":{"start":{"line":1251,"column":32},"end":{"line":1251,"column":45}}},"64":{"name":"createSourceUpdates","line":1257,"loc":{"start":{"line":1257,"column":4},"end":{"line":1257,"column":44}}},"65":{"name":"(anonymous_65)","line":1266,"loc":{"start":{"line":1266,"column":10},"end":{"line":1266,"column":46}}},"66":{"name":"bulkUpdate","line":1276,"loc":{"start":{"line":1276,"column":4},"end":{"line":1276,"column":38}}},"67":{"name":"(anonymous_67)","line":1282,"loc":{"start":{"line":1282,"column":8},"end":{"line":1282,"column":44}}},"68":{"name":"(anonymous_68)","line":1283,"loc":{"start":{"line":1283,"column":61},"end":{"line":1283,"column":75}}},"69":{"name":"(anonymous_69)","line":1288,"loc":{"start":{"line":1288,"column":8},"end":{"line":1288,"column":31}}},"70":{"name":"(anonymous_70)","line":1293,"loc":{"start":{"line":1293,"column":37},"end":{"line":1293,"column":49}}},"71":{"name":"(anonymous_71)","line":1295,"loc":{"start":{"line":1295,"column":24},"end":{"line":1295,"column":36}}},"72":{"name":"checkpoints","line":1304,"loc":{"start":{"line":1304,"column":4},"end":{"line":1304,"column":27}}},"73":{"name":"(anonymous_73)","line":1306,"loc":{"start":{"line":1306,"column":29},"end":{"line":1306,"column":51}}},"74":{"name":"(anonymous_74)","line":1309,"loc":{"start":{"line":1309,"column":31},"end":{"line":1309,"column":53}}},"75":{"name":"done","line":1320,"loc":{"start":{"line":1320,"column":4},"end":{"line":1320,"column":23}}},"76":{"name":"(anonymous_76)","line":1329,"loc":{"start":{"line":1329,"column":41},"end":{"line":1329,"column":58}}},"77":{"name":"(anonymous_77)","line":1354,"loc":{"start":{"line":1354,"column":33},"end":{"line":1354,"column":54}}},"78":{"name":"(anonymous_78)","line":1360,"loc":{"start":{"line":1360,"column":19},"end":{"line":1360,"column":36}}},"79":{"name":"(anonymous_79)","line":1367,"loc":{"start":{"line":1367,"column":21},"end":{"line":1367,"column":34}}},"80":{"name":"(anonymous_80)","line":1368,"loc":{"start":{"line":1368,"column":43},"end":{"line":1368,"column":63}}},"81":{"name":"(anonymous_81)","line":1390,"loc":{"start":{"line":1390,"column":26},"end":{"line":1390,"column":40}}},"82":{"name":"(anonymous_82)","line":1406,"loc":{"start":{"line":1406,"column":30},"end":{"line":1406,"column":67}}},"83":{"name":"(anonymous_83)","line":1424,"loc":{"start":{"line":1424,"column":51},"end":{"line":1424,"column":77}}},"84":{"name":"(anonymous_84)","line":1427,"loc":{"start":{"line":1427,"column":22},"end":{"line":1427,"column":39}}},"85":{"name":"(anonymous_85)","line":1432,"loc":{"start":{"line":1432,"column":23},"end":{"line":1432,"column":36}}},"86":{"name":"(anonymous_86)","line":1438,"loc":{"start":{"line":1438,"column":23},"end":{"line":1438,"column":36}}},"87":{"name":"(anonymous_87)","line":1443,"loc":{"start":{"line":1443,"column":23},"end":{"line":1443,"column":36}}},"88":{"name":"(anonymous_88)","line":1450,"loc":{"start":{"line":1450,"column":28},"end":{"line":1450,"column":42}}},"89":{"name":"buildLookupOfAffectedModelData","line":1463,"loc":{"start":{"line":1463,"column":2},"end":{"line":1463,"column":68}}},"90":{"name":"(anonymous_90)","line":1465,"loc":{"start":{"line":1465,"column":34},"end":{"line":1465,"column":46}}},"91":{"name":"(anonymous_91)","line":1468,"loc":{"start":{"line":1468,"column":39},"end":{"line":1468,"column":67}}},"92":{"name":"(anonymous_92)","line":1471,"loc":{"start":{"line":1471,"column":27},"end":{"line":1471,"column":40}}},"93":{"name":"applyUpdate","line":1478,"loc":{"start":{"line":1478,"column":2},"end":{"line":1478,"column":81}}},"94":{"name":"(anonymous_94)","line":1496,"loc":{"start":{"line":1496,"column":55},"end":{"line":1496,"column":77}}},"95":{"name":"applyCreate","line":1531,"loc":{"start":{"line":1531,"column":2},"end":{"line":1531,"column":81}}},"96":{"name":"(anonymous_96)","line":1532,"loc":{"start":{"line":1532,"column":32},"end":{"line":1532,"column":52}}},"97":{"name":"(anonymous_97)","line":1538,"loc":{"start":{"line":1538,"column":25},"end":{"line":1538,"column":49}}},"98":{"name":"conflict","line":1549,"loc":{"start":{"line":1549,"column":4},"end":{"line":1549,"column":24}}},"99":{"name":"applyDelete","line":1560,"loc":{"start":{"line":1560,"column":2},"end":{"line":1560,"column":75}}},"100":{"name":"(anonymous_100)","line":1578,"loc":{"start":{"line":1578,"column":49},"end":{"line":1578,"column":71}}},"101":{"name":"(anonymous_101)","line":1619,"loc":{"start":{"line":1619,"column":34},"end":{"line":1619,"column":45}}},"102":{"name":"(anonymous_102)","line":1636,"loc":{"start":{"line":1636,"column":31},"end":{"line":1636,"column":44}}},"103":{"name":"(anonymous_103)","line":1653,"loc":{"start":{"line":1653,"column":40},"end":{"line":1653,"column":51}}},"104":{"name":"cleanup","line":1684,"loc":{"start":{"line":1684,"column":4},"end":{"line":1684,"column":23}}},"105":{"name":"(anonymous_105)","line":1685,"loc":{"start":{"line":1685,"column":30},"end":{"line":1685,"column":44}}},"106":{"name":"rectifyOnSave","line":1693,"loc":{"start":{"line":1693,"column":2},"end":{"line":1693,"column":36}}},"107":{"name":"reportErrorAndNext","line":1711,"loc":{"start":{"line":1711,"column":4},"end":{"line":1711,"column":37}}},"108":{"name":"rectifyOnDelete","line":1719,"loc":{"start":{"line":1719,"column":2},"end":{"line":1719,"column":38}}},"109":{"name":"reportErrorAndNext","line":1735,"loc":{"start":{"line":1735,"column":4},"end":{"line":1735,"column":37}}},"110":{"name":"getIdFromWhereByModelId","line":1743,"loc":{"start":{"line":1743,"column":2},"end":{"line":1743,"column":49}}},"111":{"name":"(anonymous_111)","line":1755,"loc":{"start":{"line":1755,"column":38},"end":{"line":1755,"column":49}}},"112":{"name":"(anonymous_112)","line":1774,"loc":{"start":{"line":1774,"column":34},"end":{"line":1774,"column":45}}},"113":{"name":"attachRelatedModels","line":1780,"loc":{"start":{"line":1780,"column":4},"end":{"line":1780,"column":39}}},"114":{"name":"(anonymous_114)","line":1786,"loc":{"start":{"line":1786,"column":37},"end":{"line":1786,"column":56}}},"115":{"name":"(anonymous_115)","line":1797,"loc":{"start":{"line":1797,"column":37},"end":{"line":1797,"column":66}}},"116":{"name":"(anonymous_116)","line":1810,"loc":{"start":{"line":1810,"column":33},"end":{"line":1810,"column":56}}},"117":{"name":"(anonymous_117)","line":1815,"loc":{"start":{"line":1815,"column":34},"end":{"line":1815,"column":51}}},"118":{"name":"(anonymous_118)","line":1820,"loc":{"start":{"line":1820,"column":36},"end":{"line":1820,"column":59}}},"119":{"name":"(anonymous_119)","line":1822,"loc":{"start":{"line":1822,"column":28},"end":{"line":1822,"column":48}}},"120":{"name":"(anonymous_120)","line":1845,"loc":{"start":{"line":1845,"column":38},"end":{"line":1845,"column":60}}},"121":{"name":"(anonymous_121)","line":1856,"loc":{"start":{"line":1856,"column":22},"end":{"line":1856,"column":33}}},"122":{"name":"(anonymous_122)","line":1863,"loc":{"start":{"line":1863,"column":24},"end":{"line":1863,"column":35}}},"123":{"name":"(anonymous_123)","line":1866,"loc":{"start":{"line":1866,"column":22},"end":{"line":1866,"column":33}}},"124":{"name":"(anonymous_124)","line":1870,"loc":{"start":{"line":1870,"column":21},"end":{"line":1870,"column":32}}},"125":{"name":"createChangeHandler","line":1877,"loc":{"start":{"line":1877,"column":4},"end":{"line":1877,"column":39}}},"126":{"name":"(anonymous_126)","line":1878,"loc":{"start":{"line":1878,"column":13},"end":{"line":1878,"column":33}}},"127":{"name":"(anonymous_127)","line":1956,"loc":{"start":{"line":1956,"column":38},"end":{"line":1956,"column":67}}},"128":{"name":"(anonymous_128)","line":1996,"loc":{"start":{"line":1996,"column":56},"end":{"line":1996,"column":77}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":35}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":31}},"4":{"start":{"line":13,"column":0},"end":{"line":13,"column":29}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":57}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":31}},"9":{"start":{"line":18,"column":0},"end":{"line":18,"column":32}},"10":{"start":{"line":20,"column":0},"end":{"line":2004,"column":2}},"11":{"start":{"line":21,"column":2},"end":{"line":21,"column":41}},"12":{"start":{"line":39,"column":2},"end":{"line":39,"column":54}},"13":{"start":{"line":45,"column":2},"end":{"line":62,"column":4}},"14":{"start":{"line":47,"column":4},"end":{"line":47,"column":27}},"15":{"start":{"line":49,"column":4},"end":{"line":49,"column":30}},"16":{"start":{"line":52,"column":4},"end":{"line":59,"column":5}},"17":{"start":{"line":53,"column":6},"end":{"line":53,"column":42}},"18":{"start":{"line":54,"column":6},"end":{"line":56,"column":9}},"19":{"start":{"line":55,"column":8},"end":{"line":55,"column":46}},"20":{"start":{"line":57,"column":11},"end":{"line":59,"column":5}},"21":{"start":{"line":58,"column":6},"end":{"line":58,"column":42}},"22":{"start":{"line":61,"column":4},"end":{"line":61,"column":35}},"23":{"start":{"line":68,"column":2},"end":{"line":75,"column":3}},"24":{"start":{"line":69,"column":4},"end":{"line":74,"column":6}},"25":{"start":{"line":83,"column":2},"end":{"line":93,"column":3}},"26":{"start":{"line":84,"column":4},"end":{"line":84,"column":41}},"27":{"start":{"line":84,"column":29},"end":{"line":84,"column":41}},"28":{"start":{"line":86,"column":4},"end":{"line":86,"column":48}},"29":{"start":{"line":87,"column":4},"end":{"line":87,"column":36}},"30":{"start":{"line":88,"column":4},"end":{"line":88,"column":62}},"31":{"start":{"line":89,"column":4},"end":{"line":89,"column":31}},"32":{"start":{"line":90,"column":4},"end":{"line":90,"column":42}},"33":{"start":{"line":91,"column":4},"end":{"line":91,"column":35}},"34":{"start":{"line":92,"column":4},"end":{"line":92,"column":14}},"35":{"start":{"line":105,"column":2},"end":{"line":107,"column":4}},"36":{"start":{"line":106,"column":4},"end":{"line":106,"column":47}},"37":{"start":{"line":117,"column":2},"end":{"line":120,"column":4}},"38":{"start":{"line":119,"column":4},"end":{"line":119,"column":47}},"39":{"start":{"line":139,"column":2},"end":{"line":142,"column":4}},"40":{"start":{"line":141,"column":4},"end":{"line":141,"column":56}},"41":{"start":{"line":156,"column":2},"end":{"line":158,"column":4}},"42":{"start":{"line":157,"column":4},"end":{"line":157,"column":56}},"43":{"start":{"line":191,"column":2},"end":{"line":193,"column":4}},"44":{"start":{"line":192,"column":4},"end":{"line":192,"column":53}},"45":{"start":{"line":195,"column":2},"end":{"line":195,"column":47}},"46":{"start":{"line":207,"column":2},"end":{"line":209,"column":4}},"47":{"start":{"line":208,"column":4},"end":{"line":208,"column":47}},"48":{"start":{"line":225,"column":2},"end":{"line":227,"column":4}},"49":{"start":{"line":226,"column":4},"end":{"line":226,"column":49}},"50":{"start":{"line":256,"column":2},"end":{"line":258,"column":4}},"51":{"start":{"line":257,"column":4},"end":{"line":257,"column":45}},"52":{"start":{"line":286,"column":2},"end":{"line":288,"column":4}},"53":{"start":{"line":287,"column":4},"end":{"line":287,"column":48}},"54":{"start":{"line":306,"column":2},"end":{"line":308,"column":4}},"55":{"start":{"line":307,"column":4},"end":{"line":307,"column":51}},"56":{"start":{"line":313,"column":2},"end":{"line":313,"column":52}},"57":{"start":{"line":318,"column":2},"end":{"line":318,"column":55}},"58":{"start":{"line":345,"column":2},"end":{"line":347,"column":4}},"59":{"start":{"line":346,"column":4},"end":{"line":346,"column":50}},"60":{"start":{"line":352,"column":2},"end":{"line":352,"column":51}},"61":{"start":{"line":360,"column":2},"end":{"line":362,"column":4}},"62":{"start":{"line":361,"column":4},"end":{"line":361,"column":51}},"63":{"start":{"line":367,"column":2},"end":{"line":367,"column":57}},"64":{"start":{"line":372,"column":2},"end":{"line":372,"column":57}},"65":{"start":{"line":387,"column":2},"end":{"line":389,"column":4}},"66":{"start":{"line":388,"column":4},"end":{"line":388,"column":46}},"67":{"start":{"line":403,"column":2},"end":{"line":463,"column":4}},"68":{"start":{"line":404,"column":4},"end":{"line":404,"column":33}},"69":{"start":{"line":406,"column":4},"end":{"line":409,"column":5}},"70":{"start":{"line":407,"column":6},"end":{"line":407,"column":25}},"71":{"start":{"line":408,"column":6},"end":{"line":408,"column":19}},"72":{"start":{"line":411,"column":4},"end":{"line":412,"column":6}},"73":{"start":{"line":413,"column":4},"end":{"line":413,"column":28}},"74":{"start":{"line":415,"column":4},"end":{"line":417,"column":5}},"75":{"start":{"line":416,"column":6},"end":{"line":416,"column":30}},"76":{"start":{"line":418,"column":4},"end":{"line":420,"column":5}},"77":{"start":{"line":419,"column":6},"end":{"line":419,"column":29}},"78":{"start":{"line":422,"column":4},"end":{"line":422,"column":20}},"79":{"start":{"line":423,"column":4},"end":{"line":423,"column":35}},"80":{"start":{"line":424,"column":4},"end":{"line":424,"column":26}},"81":{"start":{"line":426,"column":4},"end":{"line":428,"column":5}},"82":{"start":{"line":427,"column":6},"end":{"line":427,"column":42}},"83":{"start":{"line":431,"column":4},"end":{"line":433,"column":5}},"84":{"start":{"line":432,"column":6},"end":{"line":432,"column":20}},"85":{"start":{"line":435,"column":4},"end":{"line":446,"column":7}},"86":{"start":{"line":436,"column":6},"end":{"line":445,"column":7}},"87":{"start":{"line":437,"column":8},"end":{"line":437,"column":15}},"88":{"start":{"line":439,"column":8},"end":{"line":439,"column":50}},"89":{"start":{"line":441,"column":8},"end":{"line":443,"column":9}},"90":{"start":{"line":442,"column":10},"end":{"line":442,"column":20}},"91":{"start":{"line":444,"column":8},"end":{"line":444,"column":28}},"92":{"start":{"line":449,"column":4},"end":{"line":462,"column":5}},"93":{"start":{"line":450,"column":6},"end":{"line":461,"column":15}},"94":{"start":{"line":451,"column":8},"end":{"line":460,"column":17}},"95":{"start":{"line":452,"column":10},"end":{"line":459,"column":13}},"96":{"start":{"line":453,"column":12},"end":{"line":453,"column":39}},"97":{"start":{"line":454,"column":12},"end":{"line":458,"column":15}},"98":{"start":{"line":455,"column":14},"end":{"line":457,"column":17}},"99":{"start":{"line":456,"column":16},"end":{"line":456,"column":36}},"100":{"start":{"line":470,"column":2},"end":{"line":472,"column":4}},"101":{"start":{"line":471,"column":4},"end":{"line":471,"column":64}},"102":{"start":{"line":480,"column":2},"end":{"line":482,"column":4}},"103":{"start":{"line":481,"column":4},"end":{"line":481,"column":60}},"104":{"start":{"line":488,"column":2},"end":{"line":488,"column":69}},"105":{"start":{"line":494,"column":2},"end":{"line":494,"column":69}},"106":{"start":{"line":496,"column":2},"end":{"line":496,"column":52}},"107":{"start":{"line":509,"column":2},"end":{"line":511,"column":4}},"108":{"start":{"line":510,"column":4},"end":{"line":510,"column":68}},"109":{"start":{"line":523,"column":2},"end":{"line":526,"column":4}},"110":{"start":{"line":525,"column":4},"end":{"line":525,"column":57}},"111":{"start":{"line":540,"column":2},"end":{"line":542,"column":4}},"112":{"start":{"line":541,"column":4},"end":{"line":541,"column":58}},"113":{"start":{"line":558,"column":2},"end":{"line":560,"column":4}},"114":{"start":{"line":559,"column":4},"end":{"line":559,"column":52}},"115":{"start":{"line":569,"column":2},"end":{"line":571,"column":4}},"116":{"start":{"line":570,"column":4},"end":{"line":570,"column":59}},"117":{"start":{"line":581,"column":2},"end":{"line":584,"column":4}},"118":{"start":{"line":582,"column":4},"end":{"line":582,"column":34}},"119":{"start":{"line":583,"column":4},"end":{"line":583,"column":33}},"120":{"start":{"line":592,"column":2},"end":{"line":596,"column":4}},"121":{"start":{"line":593,"column":4},"end":{"line":593,"column":31}},"122":{"start":{"line":594,"column":4},"end":{"line":594,"column":22}},"123":{"start":{"line":594,"column":15},"end":{"line":594,"column":22}},"124":{"start":{"line":595,"column":4},"end":{"line":595,"column":34}},"125":{"start":{"line":604,"column":2},"end":{"line":606,"column":4}},"126":{"start":{"line":605,"column":4},"end":{"line":605,"column":40}},"127":{"start":{"line":614,"column":2},"end":{"line":623,"column":4}},"128":{"start":{"line":615,"column":4},"end":{"line":615,"column":21}},"129":{"start":{"line":616,"column":4},"end":{"line":616,"column":35}},"130":{"start":{"line":618,"column":4},"end":{"line":622,"column":5}},"131":{"start":{"line":619,"column":6},"end":{"line":619,"column":40}},"132":{"start":{"line":621,"column":6},"end":{"line":621,"column":18}},"133":{"start":{"line":625,"column":2},"end":{"line":1011,"column":4}},"134":{"start":{"line":626,"column":4},"end":{"line":626,"column":30}},"135":{"start":{"line":627,"column":4},"end":{"line":627,"column":44}},"136":{"start":{"line":628,"column":4},"end":{"line":628,"column":42}},"137":{"start":{"line":631,"column":4},"end":{"line":631,"column":58}},"138":{"start":{"line":633,"column":4},"end":{"line":638,"column":5}},"139":{"start":{"line":634,"column":6},"end":{"line":634,"column":27}},"140":{"start":{"line":635,"column":6},"end":{"line":635,"column":26}},"141":{"start":{"line":636,"column":6},"end":{"line":636,"column":50}},"142":{"start":{"line":637,"column":6},"end":{"line":637,"column":49}},"143":{"start":{"line":640,"column":4},"end":{"line":653,"column":7}},"144":{"start":{"line":655,"column":4},"end":{"line":669,"column":6}},"145":{"start":{"line":671,"column":4},"end":{"line":673,"column":5}},"146":{"start":{"line":672,"column":6},"end":{"line":672,"column":59}},"147":{"start":{"line":674,"column":4},"end":{"line":674,"column":64}},"148":{"start":{"line":676,"column":4},"end":{"line":689,"column":6}},"149":{"start":{"line":691,"column":4},"end":{"line":693,"column":5}},"150":{"start":{"line":692,"column":6},"end":{"line":692,"column":65}},"151":{"start":{"line":695,"column":4},"end":{"line":695,"column":75}},"152":{"start":{"line":697,"column":4},"end":{"line":711,"column":7}},"153":{"start":{"line":713,"column":4},"end":{"line":745,"column":7}},"154":{"start":{"line":728,"column":10},"end":{"line":731,"column":11}},"155":{"start":{"line":730,"column":12},"end":{"line":730,"column":24}},"156":{"start":{"line":732,"column":10},"end":{"line":742,"column":11}},"157":{"start":{"line":733,"column":12},"end":{"line":733,"column":56}},"158":{"start":{"line":734,"column":12},"end":{"line":734,"column":44}},"159":{"start":{"line":735,"column":12},"end":{"line":735,"column":69}},"160":{"start":{"line":736,"column":12},"end":{"line":736,"column":39}},"161":{"start":{"line":737,"column":12},"end":{"line":737,"column":50}},"162":{"start":{"line":738,"column":12},"end":{"line":738,"column":43}},"163":{"start":{"line":739,"column":12},"end":{"line":739,"column":22}},"164":{"start":{"line":741,"column":12},"end":{"line":741,"column":17}},"165":{"start":{"line":747,"column":4},"end":{"line":762,"column":7}},"166":{"start":{"line":764,"column":4},"end":{"line":776,"column":6}},"167":{"start":{"line":778,"column":4},"end":{"line":780,"column":5}},"168":{"start":{"line":779,"column":6},"end":{"line":779,"column":64}},"169":{"start":{"line":782,"column":4},"end":{"line":782,"column":67}},"170":{"start":{"line":784,"column":4},"end":{"line":795,"column":7}},"171":{"start":{"line":797,"column":4},"end":{"line":809,"column":7}},"172":{"start":{"line":811,"column":4},"end":{"line":826,"column":7}},"173":{"start":{"line":828,"column":4},"end":{"line":851,"column":7}},"174":{"start":{"line":853,"column":4},"end":{"line":864,"column":7}},"175":{"start":{"line":866,"column":4},"end":{"line":875,"column":7}},"176":{"start":{"line":877,"column":4},"end":{"line":892,"column":6}},"177":{"start":{"line":894,"column":4},"end":{"line":894,"column":86}},"178":{"start":{"line":896,"column":4},"end":{"line":898,"column":5}},"179":{"start":{"line":897,"column":6},"end":{"line":897,"column":69}},"180":{"start":{"line":900,"column":4},"end":{"line":992,"column":5}},"181":{"start":{"line":901,"column":6},"end":{"line":911,"column":9}},"182":{"start":{"line":913,"column":6},"end":{"line":925,"column":9}},"183":{"start":{"line":927,"column":6},"end":{"line":936,"column":9}},"184":{"start":{"line":938,"column":6},"end":{"line":943,"column":9}},"185":{"start":{"line":945,"column":6},"end":{"line":954,"column":9}},"186":{"start":{"line":956,"column":6},"end":{"line":961,"column":9}},"187":{"start":{"line":963,"column":6},"end":{"line":972,"column":9}},"188":{"start":{"line":974,"column":6},"end":{"line":991,"column":9}},"189":{"start":{"line":994,"column":4},"end":{"line":1010,"column":7}},"190":{"start":{"line":1025,"column":2},"end":{"line":1028,"column":4}},"191":{"start":{"line":1026,"column":4},"end":{"line":1026,"column":39}},"192":{"start":{"line":1027,"column":4},"end":{"line":1027,"column":64}},"193":{"start":{"line":1040,"column":2},"end":{"line":1081,"column":4}},"194":{"start":{"line":1041,"column":4},"end":{"line":1045,"column":5}},"195":{"start":{"line":1042,"column":6},"end":{"line":1042,"column":18}},"196":{"start":{"line":1043,"column":6},"end":{"line":1043,"column":23}},"197":{"start":{"line":1044,"column":6},"end":{"line":1044,"column":17}},"198":{"start":{"line":1046,"column":4},"end":{"line":1050,"column":5}},"199":{"start":{"line":1047,"column":6},"end":{"line":1047,"column":24}},"200":{"start":{"line":1048,"column":6},"end":{"line":1048,"column":17}},"201":{"start":{"line":1049,"column":6},"end":{"line":1049,"column":18}},"202":{"start":{"line":1052,"column":4},"end":{"line":1052,"column":56}},"203":{"start":{"line":1053,"column":4},"end":{"line":1053,"column":39}},"204":{"start":{"line":1054,"column":4},"end":{"line":1054,"column":21}},"205":{"start":{"line":1055,"column":4},"end":{"line":1055,"column":64}},"206":{"start":{"line":1057,"column":4},"end":{"line":1057,"column":26}},"207":{"start":{"line":1058,"column":4},"end":{"line":1058,"column":23}},"208":{"start":{"line":1059,"column":4},"end":{"line":1059,"column":38}},"209":{"start":{"line":1060,"column":4},"end":{"line":1060,"column":33}},"210":{"start":{"line":1063,"column":4},"end":{"line":1080,"column":7}},"211":{"start":{"line":1064,"column":6},"end":{"line":1064,"column":36}},"212":{"start":{"line":1064,"column":15},"end":{"line":1064,"column":36}},"213":{"start":{"line":1065,"column":6},"end":{"line":1065,"column":85}},"214":{"start":{"line":1065,"column":59},"end":{"line":1065,"column":85}},"215":{"start":{"line":1066,"column":6},"end":{"line":1068,"column":9}},"216":{"start":{"line":1067,"column":8},"end":{"line":1067,"column":35}},"217":{"start":{"line":1069,"column":6},"end":{"line":1069,"column":40}},"218":{"start":{"line":1070,"column":6},"end":{"line":1079,"column":9}},"219":{"start":{"line":1071,"column":8},"end":{"line":1071,"column":38}},"220":{"start":{"line":1071,"column":17},"end":{"line":1071,"column":38}},"221":{"start":{"line":1072,"column":8},"end":{"line":1074,"column":11}},"222":{"start":{"line":1073,"column":10},"end":{"line":1073,"column":38}},"223":{"start":{"line":1075,"column":8},"end":{"line":1078,"column":12}},"224":{"start":{"line":1076,"column":10},"end":{"line":1076,"column":55}},"225":{"start":{"line":1076,"column":43},"end":{"line":1076,"column":55}},"226":{"start":{"line":1077,"column":10},"end":{"line":1077,"column":51}},"227":{"start":{"line":1089,"column":2},"end":{"line":1092,"column":4}},"228":{"start":{"line":1090,"column":4},"end":{"line":1090,"column":64}},"229":{"start":{"line":1091,"column":4},"end":{"line":1091,"column":31}},"230":{"start":{"line":1102,"column":2},"end":{"line":1105,"column":4}},"231":{"start":{"line":1103,"column":4},"end":{"line":1103,"column":64}},"232":{"start":{"line":1104,"column":4},"end":{"line":1104,"column":27}},"233":{"start":{"line":1123,"column":2},"end":{"line":1188,"column":4}},"234":{"start":{"line":1124,"column":4},"end":{"line":1124,"column":50}},"235":{"start":{"line":1126,"column":4},"end":{"line":1128,"column":5}},"236":{"start":{"line":1127,"column":6},"end":{"line":1127,"column":25}},"237":{"start":{"line":1130,"column":4},"end":{"line":1133,"column":5}},"238":{"start":{"line":1131,"column":6},"end":{"line":1131,"column":26}},"239":{"start":{"line":1132,"column":6},"end":{"line":1132,"column":17}},"240":{"start":{"line":1135,"column":4},"end":{"line":1137,"column":5}},"241":{"start":{"line":1136,"column":6},"end":{"line":1136,"column":45}},"242":{"start":{"line":1139,"column":4},"end":{"line":1141,"column":5}},"243":{"start":{"line":1140,"column":6},"end":{"line":1140,"column":19}},"244":{"start":{"line":1143,"column":4},"end":{"line":1143,"column":28}},"245":{"start":{"line":1145,"column":4},"end":{"line":1145,"column":27}},"246":{"start":{"line":1146,"column":4},"end":{"line":1146,"column":57}},"247":{"start":{"line":1148,"column":4},"end":{"line":1152,"column":20}},"248":{"start":{"line":1153,"column":4},"end":{"line":1155,"column":5}},"249":{"start":{"line":1154,"column":6},"end":{"line":1154,"column":48}},"250":{"start":{"line":1169,"column":4},"end":{"line":1169,"column":25}},"251":{"start":{"line":1171,"column":4},"end":{"line":1171,"column":18}},"252":{"start":{"line":1172,"column":4},"end":{"line":1172,"column":28}},"253":{"start":{"line":1174,"column":4},"end":{"line":1187,"column":5}},"254":{"start":{"line":1175,"column":6},"end":{"line":1175,"column":40}},"255":{"start":{"line":1176,"column":6},"end":{"line":1176,"column":67}},"256":{"start":{"line":1178,"column":6},"end":{"line":1186,"column":7}},"257":{"start":{"line":1179,"column":8},"end":{"line":1181,"column":34}},"258":{"start":{"line":1183,"column":8},"end":{"line":1184,"column":47}},"259":{"start":{"line":1184,"column":10},"end":{"line":1184,"column":47}},"260":{"start":{"line":1185,"column":8},"end":{"line":1185,"column":30}},"261":{"start":{"line":1190,"column":2},"end":{"line":1344,"column":3}},"262":{"start":{"line":1191,"column":4},"end":{"line":1191,"column":46}},"263":{"start":{"line":1192,"column":4},"end":{"line":1192,"column":52}},"264":{"start":{"line":1193,"column":4},"end":{"line":1193,"column":55}},"265":{"start":{"line":1194,"column":4},"end":{"line":1194,"column":54}},"266":{"start":{"line":1196,"column":4},"end":{"line":1198,"column":5}},"267":{"start":{"line":1197,"column":6},"end":{"line":1197,"column":71}},"268":{"start":{"line":1200,"column":4},"end":{"line":1203,"column":6}},"269":{"start":{"line":1205,"column":4},"end":{"line":1205,"column":48}},"270":{"start":{"line":1207,"column":4},"end":{"line":1213,"column":6}},"271":{"start":{"line":1215,"column":4},"end":{"line":1215,"column":33}},"272":{"start":{"line":1217,"column":4},"end":{"line":1232,"column":5}},"273":{"start":{"line":1218,"column":6},"end":{"line":1224,"column":34}},"274":{"start":{"line":1222,"column":10},"end":{"line":1222,"column":68}},"275":{"start":{"line":1226,"column":6},"end":{"line":1231,"column":7}},"276":{"start":{"line":1227,"column":8},"end":{"line":1227,"column":32}},"277":{"start":{"line":1227,"column":17},"end":{"line":1227,"column":32}},"278":{"start":{"line":1228,"column":8},"end":{"line":1228,"column":40}},"279":{"start":{"line":1229,"column":8},"end":{"line":1229,"column":62}},"280":{"start":{"line":1229,"column":38},"end":{"line":1229,"column":58}},"281":{"start":{"line":1230,"column":8},"end":{"line":1230,"column":24}},"282":{"start":{"line":1234,"column":4},"end":{"line":1255,"column":5}},"283":{"start":{"line":1235,"column":6},"end":{"line":1241,"column":34}},"284":{"start":{"line":1239,"column":10},"end":{"line":1239,"column":75}},"285":{"start":{"line":1243,"column":6},"end":{"line":1254,"column":7}},"286":{"start":{"line":1244,"column":8},"end":{"line":1244,"column":32}},"287":{"start":{"line":1244,"column":17},"end":{"line":1244,"column":32}},"288":{"start":{"line":1245,"column":8},"end":{"line":1248,"column":9}},"289":{"start":{"line":1246,"column":10},"end":{"line":1246,"column":36}},"290":{"start":{"line":1247,"column":10},"end":{"line":1247,"column":72}},"291":{"start":{"line":1247,"column":49},"end":{"line":1247,"column":68}},"292":{"start":{"line":1249,"column":8},"end":{"line":1252,"column":9}},"293":{"start":{"line":1250,"column":10},"end":{"line":1250,"column":33}},"294":{"start":{"line":1251,"column":10},"end":{"line":1251,"column":71}},"295":{"start":{"line":1251,"column":47},"end":{"line":1251,"column":67}},"296":{"start":{"line":1253,"column":8},"end":{"line":1253,"column":24}},"297":{"start":{"line":1257,"column":4},"end":{"line":1274,"column":5}},"298":{"start":{"line":1258,"column":6},"end":{"line":1258,"column":19}},"299":{"start":{"line":1259,"column":6},"end":{"line":1259,"column":44}},"300":{"start":{"line":1261,"column":6},"end":{"line":1273,"column":7}},"301":{"start":{"line":1262,"column":8},"end":{"line":1262,"column":46}},"302":{"start":{"line":1263,"column":8},"end":{"line":1269,"column":14}},"303":{"start":{"line":1267,"column":12},"end":{"line":1267,"column":72}},"304":{"start":{"line":1272,"column":8},"end":{"line":1272,"column":15}},"305":{"start":{"line":1276,"column":4},"end":{"line":1302,"column":5}},"306":{"start":{"line":1277,"column":6},"end":{"line":1277,"column":38}},"307":{"start":{"line":1278,"column":6},"end":{"line":1278,"column":25}},"308":{"start":{"line":1279,"column":6},"end":{"line":1301,"column":11}},"309":{"start":{"line":1283,"column":10},"end":{"line":1286,"column":13}},"310":{"start":{"line":1285,"column":12},"end":{"line":1285,"column":37}},"311":{"start":{"line":1289,"column":10},"end":{"line":1289,"column":70}},"312":{"start":{"line":1290,"column":10},"end":{"line":1299,"column":11}},"313":{"start":{"line":1291,"column":12},"end":{"line":1291,"column":39}},"314":{"start":{"line":1293,"column":12},"end":{"line":1297,"column":15}},"315":{"start":{"line":1294,"column":14},"end":{"line":1296,"column":30}},"316":{"start":{"line":1295,"column":38},"end":{"line":1295,"column":76}},"317":{"start":{"line":1298,"column":12},"end":{"line":1298,"column":24}},"318":{"start":{"line":1300,"column":10},"end":{"line":1300,"column":18}},"319":{"start":{"line":1304,"column":4},"end":{"line":1318,"column":5}},"320":{"start":{"line":1305,"column":6},"end":{"line":1305,"column":47}},"321":{"start":{"line":1306,"column":6},"end":{"line":1317,"column":9}},"322":{"start":{"line":1307,"column":8},"end":{"line":1307,"column":32}},"323":{"start":{"line":1307,"column":17},"end":{"line":1307,"column":32}},"324":{"start":{"line":1308,"column":8},"end":{"line":1308,"column":33}},"325":{"start":{"line":1309,"column":8},"end":{"line":1316,"column":11}},"326":{"start":{"line":1310,"column":10},"end":{"line":1310,"column":34}},"327":{"start":{"line":1310,"column":19},"end":{"line":1310,"column":34}},"328":{"start":{"line":1311,"column":10},"end":{"line":1311,"column":35}},"329":{"start":{"line":1312,"column":10},"end":{"line":1312,"column":41}},"330":{"start":{"line":1313,"column":10},"end":{"line":1313,"column":82}},"331":{"start":{"line":1314,"column":10},"end":{"line":1314,"column":82}},"332":{"start":{"line":1315,"column":10},"end":{"line":1315,"column":15}},"333":{"start":{"line":1320,"column":4},"end":{"line":1343,"column":5}},"334":{"start":{"line":1321,"column":6},"end":{"line":1321,"column":36}},"335":{"start":{"line":1321,"column":15},"end":{"line":1321,"column":36}},"336":{"start":{"line":1323,"column":6},"end":{"line":1323,"column":38}},"337":{"start":{"line":1324,"column":6},"end":{"line":1324,"column":66}},"338":{"start":{"line":1325,"column":6},"end":{"line":1325,"column":70}},"339":{"start":{"line":1326,"column":6},"end":{"line":1327,"column":34}},"340":{"start":{"line":1329,"column":6},"end":{"line":1333,"column":9}},"341":{"start":{"line":1330,"column":8},"end":{"line":1332,"column":10}},"342":{"start":{"line":1335,"column":6},"end":{"line":1337,"column":7}},"343":{"start":{"line":1336,"column":8},"end":{"line":1336,"column":49}},"344":{"start":{"line":1339,"column":6},"end":{"line":1342,"column":7}},"345":{"start":{"line":1340,"column":8},"end":{"line":1340,"column":72}},"346":{"start":{"line":1341,"column":8},"end":{"line":1341,"column":59}},"347":{"start":{"line":1354,"column":2},"end":{"line":1394,"column":4}},"348":{"start":{"line":1355,"column":4},"end":{"line":1355,"column":39}},"349":{"start":{"line":1356,"column":4},"end":{"line":1356,"column":21}},"350":{"start":{"line":1357,"column":4},"end":{"line":1357,"column":21}},"351":{"start":{"line":1358,"column":4},"end":{"line":1358,"column":19}},"352":{"start":{"line":1360,"column":4},"end":{"line":1388,"column":7}},"353":{"start":{"line":1361,"column":6},"end":{"line":1361,"column":34}},"354":{"start":{"line":1362,"column":6},"end":{"line":1362,"column":31}},"355":{"start":{"line":1363,"column":6},"end":{"line":1363,"column":48}},"356":{"start":{"line":1364,"column":6},"end":{"line":1387,"column":7}},"357":{"start":{"line":1367,"column":10},"end":{"line":1382,"column":13}},"358":{"start":{"line":1368,"column":12},"end":{"line":1381,"column":15}},"359":{"start":{"line":1369,"column":14},"end":{"line":1369,"column":38}},"360":{"start":{"line":1369,"column":23},"end":{"line":1369,"column":38}},"361":{"start":{"line":1370,"column":14},"end":{"line":1373,"column":15}},"362":{"start":{"line":1371,"column":16},"end":{"line":1372,"column":84}},"363":{"start":{"line":1374,"column":14},"end":{"line":1378,"column":15}},"364":{"start":{"line":1375,"column":16},"end":{"line":1375,"column":46}},"365":{"start":{"line":1377,"column":16},"end":{"line":1377,"column":35}},"366":{"start":{"line":1379,"column":14},"end":{"line":1379,"column":35}},"367":{"start":{"line":1380,"column":14},"end":{"line":1380,"column":19}},"368":{"start":{"line":1383,"column":10},"end":{"line":1383,"column":16}},"369":{"start":{"line":1385,"column":10},"end":{"line":1385,"column":31}},"370":{"start":{"line":1386,"column":10},"end":{"line":1386,"column":16}},"371":{"start":{"line":1390,"column":4},"end":{"line":1393,"column":7}},"372":{"start":{"line":1391,"column":6},"end":{"line":1391,"column":30}},"373":{"start":{"line":1391,"column":15},"end":{"line":1391,"column":30}},"374":{"start":{"line":1392,"column":6},"end":{"line":1392,"column":24}},"375":{"start":{"line":1406,"column":2},"end":{"line":1461,"column":4}},"376":{"start":{"line":1407,"column":4},"end":{"line":1407,"column":19}},"377":{"start":{"line":1408,"column":4},"end":{"line":1408,"column":21}},"378":{"start":{"line":1409,"column":4},"end":{"line":1409,"column":39}},"379":{"start":{"line":1410,"column":4},"end":{"line":1410,"column":23}},"380":{"start":{"line":1412,"column":4},"end":{"line":1412,"column":50}},"381":{"start":{"line":1414,"column":4},"end":{"line":1416,"column":5}},"382":{"start":{"line":1415,"column":6},"end":{"line":1415,"column":25}},"383":{"start":{"line":1418,"column":4},"end":{"line":1420,"column":5}},"384":{"start":{"line":1419,"column":6},"end":{"line":1419,"column":19}},"385":{"start":{"line":1422,"column":4},"end":{"line":1422,"column":28}},"386":{"start":{"line":1424,"column":4},"end":{"line":1460,"column":7}},"387":{"start":{"line":1425,"column":6},"end":{"line":1425,"column":36}},"388":{"start":{"line":1425,"column":15},"end":{"line":1425,"column":36}},"389":{"start":{"line":1427,"column":6},"end":{"line":1448,"column":9}},"390":{"start":{"line":1428,"column":8},"end":{"line":1428,"column":39}},"391":{"start":{"line":1429,"column":8},"end":{"line":1429,"column":37}},"392":{"start":{"line":1430,"column":8},"end":{"line":1447,"column":9}},"393":{"start":{"line":1432,"column":12},"end":{"line":1434,"column":15}},"394":{"start":{"line":1433,"column":14},"end":{"line":1433,"column":98}},"395":{"start":{"line":1435,"column":12},"end":{"line":1435,"column":18}},"396":{"start":{"line":1438,"column":12},"end":{"line":1440,"column":15}},"397":{"start":{"line":1439,"column":14},"end":{"line":1439,"column":98}},"398":{"start":{"line":1441,"column":12},"end":{"line":1441,"column":18}},"399":{"start":{"line":1443,"column":12},"end":{"line":1445,"column":15}},"400":{"start":{"line":1444,"column":14},"end":{"line":1444,"column":85}},"401":{"start":{"line":1446,"column":12},"end":{"line":1446,"column":18}},"402":{"start":{"line":1450,"column":6},"end":{"line":1459,"column":9}},"403":{"start":{"line":1451,"column":8},"end":{"line":1451,"column":38}},"404":{"start":{"line":1451,"column":17},"end":{"line":1451,"column":38}},"405":{"start":{"line":1452,"column":8},"end":{"line":1457,"column":9}},"406":{"start":{"line":1453,"column":10},"end":{"line":1453,"column":43}},"407":{"start":{"line":1454,"column":10},"end":{"line":1454,"column":31}},"408":{"start":{"line":1455,"column":10},"end":{"line":1455,"column":47}},"409":{"start":{"line":1456,"column":10},"end":{"line":1456,"column":31}},"410":{"start":{"line":1458,"column":8},"end":{"line":1458,"column":19}},"411":{"start":{"line":1463,"column":2},"end":{"line":1476,"column":3}},"412":{"start":{"line":1464,"column":4},"end":{"line":1464,"column":58}},"413":{"start":{"line":1465,"column":4},"end":{"line":1465,"column":76}},"414":{"start":{"line":1465,"column":48},"end":{"line":1465,"column":72}},"415":{"start":{"line":1466,"column":4},"end":{"line":1466,"column":27}},"416":{"start":{"line":1467,"column":4},"end":{"line":1467,"column":47}},"417":{"start":{"line":1468,"column":4},"end":{"line":1475,"column":7}},"418":{"start":{"line":1469,"column":6},"end":{"line":1469,"column":36}},"419":{"start":{"line":1469,"column":15},"end":{"line":1469,"column":36}},"420":{"start":{"line":1470,"column":6},"end":{"line":1470,"column":26}},"421":{"start":{"line":1471,"column":6},"end":{"line":1473,"column":9}},"422":{"start":{"line":1472,"column":8},"end":{"line":1472,"column":36}},"423":{"start":{"line":1474,"column":6},"end":{"line":1474,"column":33}},"424":{"start":{"line":1478,"column":2},"end":{"line":1529,"column":3}},"425":{"start":{"line":1479,"column":4},"end":{"line":1479,"column":40}},"426":{"start":{"line":1480,"column":4},"end":{"line":1480,"column":64}},"427":{"start":{"line":1482,"column":4},"end":{"line":1489,"column":5}},"428":{"start":{"line":1483,"column":6},"end":{"line":1484,"column":29}},"429":{"start":{"line":1485,"column":6},"end":{"line":1485,"column":51}},"430":{"start":{"line":1486,"column":6},"end":{"line":1486,"column":44}},"431":{"start":{"line":1487,"column":6},"end":{"line":1487,"column":29}},"432":{"start":{"line":1488,"column":6},"end":{"line":1488,"column":67}},"433":{"start":{"line":1496,"column":4},"end":{"line":1528,"column":7}},"434":{"start":{"line":1497,"column":6},"end":{"line":1497,"column":30}},"435":{"start":{"line":1497,"column":15},"end":{"line":1497,"column":30}},"436":{"start":{"line":1499,"column":6},"end":{"line":1499,"column":41}},"437":{"start":{"line":1500,"column":6},"end":{"line":1527,"column":7}},"438":{"start":{"line":1503,"column":10},"end":{"line":1503,"column":22}},"439":{"start":{"line":1506,"column":10},"end":{"line":1507,"column":33}},"440":{"start":{"line":1508,"column":10},"end":{"line":1508,"column":33}},"441":{"start":{"line":1512,"column":10},"end":{"line":1512,"column":22}},"442":{"start":{"line":1516,"column":10},"end":{"line":1519,"column":48}},"443":{"start":{"line":1522,"column":10},"end":{"line":1523,"column":36}},"444":{"start":{"line":1524,"column":10},"end":{"line":1526,"column":62}},"445":{"start":{"line":1531,"column":2},"end":{"line":1558,"column":3}},"446":{"start":{"line":1532,"column":4},"end":{"line":1547,"column":7}},"447":{"start":{"line":1533,"column":6},"end":{"line":1533,"column":34}},"448":{"start":{"line":1533,"column":22},"end":{"line":1533,"column":34}},"449":{"start":{"line":1538,"column":6},"end":{"line":1546,"column":9}},"450":{"start":{"line":1539,"column":8},"end":{"line":1543,"column":9}},"451":{"start":{"line":1542,"column":10},"end":{"line":1542,"column":31}},"452":{"start":{"line":1545,"column":8},"end":{"line":1545,"column":26}},"453":{"start":{"line":1549,"column":4},"end":{"line":1557,"column":5}},"454":{"start":{"line":1551,"column":6},"end":{"line":1552,"column":29}},"455":{"start":{"line":1553,"column":6},"end":{"line":1553,"column":29}},"456":{"start":{"line":1555,"column":6},"end":{"line":1555,"column":42}},"457":{"start":{"line":1556,"column":6},"end":{"line":1556,"column":67}},"458":{"start":{"line":1560,"column":2},"end":{"line":1611,"column":3}},"459":{"start":{"line":1561,"column":4},"end":{"line":1565,"column":5}},"460":{"start":{"line":1564,"column":6},"end":{"line":1564,"column":18}},"461":{"start":{"line":1567,"column":4},"end":{"line":1567,"column":40}},"462":{"start":{"line":1568,"column":4},"end":{"line":1568,"column":46}},"463":{"start":{"line":1569,"column":4},"end":{"line":1576,"column":5}},"464":{"start":{"line":1570,"column":6},"end":{"line":1571,"column":29}},"465":{"start":{"line":1572,"column":6},"end":{"line":1572,"column":51}},"466":{"start":{"line":1573,"column":6},"end":{"line":1573,"column":44}},"467":{"start":{"line":1574,"column":6},"end":{"line":1574,"column":29}},"468":{"start":{"line":1575,"column":6},"end":{"line":1575,"column":67}},"469":{"start":{"line":1578,"column":4},"end":{"line":1610,"column":7}},"470":{"start":{"line":1579,"column":6},"end":{"line":1579,"column":30}},"471":{"start":{"line":1579,"column":15},"end":{"line":1579,"column":30}},"472":{"start":{"line":1581,"column":6},"end":{"line":1581,"column":41}},"473":{"start":{"line":1582,"column":6},"end":{"line":1609,"column":7}},"474":{"start":{"line":1585,"column":10},"end":{"line":1585,"column":22}},"475":{"start":{"line":1588,"column":10},"end":{"line":1589,"column":33}},"476":{"start":{"line":1590,"column":10},"end":{"line":1590,"column":33}},"477":{"start":{"line":1594,"column":10},"end":{"line":1594,"column":22}},"478":{"start":{"line":1598,"column":10},"end":{"line":1601,"column":48}},"479":{"start":{"line":1604,"column":10},"end":{"line":1605,"column":36}},"480":{"start":{"line":1606,"column":10},"end":{"line":1608,"column":62}},"481":{"start":{"line":1619,"column":2},"end":{"line":1626,"column":4}},"482":{"start":{"line":1620,"column":4},"end":{"line":1620,"column":34}},"483":{"start":{"line":1621,"column":4},"end":{"line":1621,"column":56}},"484":{"start":{"line":1623,"column":4},"end":{"line":1623,"column":77}},"485":{"start":{"line":1625,"column":4},"end":{"line":1625,"column":23}},"486":{"start":{"line":1636,"column":2},"end":{"line":1647,"column":4}},"487":{"start":{"line":1637,"column":4},"end":{"line":1637,"column":37}},"488":{"start":{"line":1638,"column":4},"end":{"line":1640,"column":5}},"489":{"start":{"line":1639,"column":6},"end":{"line":1639,"column":71}},"490":{"start":{"line":1641,"column":4},"end":{"line":1644,"column":6}},"491":{"start":{"line":1645,"column":4},"end":{"line":1645,"column":67}},"492":{"start":{"line":1646,"column":4},"end":{"line":1646,"column":17}},"493":{"start":{"line":1653,"column":2},"end":{"line":1691,"column":4}},"494":{"start":{"line":1654,"column":4},"end":{"line":1654,"column":21}},"495":{"start":{"line":1655,"column":4},"end":{"line":1655,"column":58}},"496":{"start":{"line":1656,"column":4},"end":{"line":1656,"column":72}},"497":{"start":{"line":1658,"column":4},"end":{"line":1659,"column":42}},"498":{"start":{"line":1661,"column":4},"end":{"line":1661,"column":34}},"499":{"start":{"line":1662,"column":4},"end":{"line":1662,"column":52}},"500":{"start":{"line":1663,"column":4},"end":{"line":1663,"column":39}},"501":{"start":{"line":1664,"column":4},"end":{"line":1664,"column":44}},"502":{"start":{"line":1665,"column":4},"end":{"line":1668,"column":5}},"503":{"start":{"line":1666,"column":6},"end":{"line":1667,"column":68}},"504":{"start":{"line":1670,"column":4},"end":{"line":1670,"column":47}},"505":{"start":{"line":1672,"column":4},"end":{"line":1672,"column":51}},"506":{"start":{"line":1676,"column":4},"end":{"line":1682,"column":5}},"507":{"start":{"line":1678,"column":6},"end":{"line":1678,"column":16}},"508":{"start":{"line":1681,"column":6},"end":{"line":1681,"column":44}},"509":{"start":{"line":1684,"column":4},"end":{"line":1690,"column":5}},"510":{"start":{"line":1685,"column":6},"end":{"line":1689,"column":9}},"511":{"start":{"line":1686,"column":8},"end":{"line":1688,"column":9}},"512":{"start":{"line":1687,"column":10},"end":{"line":1687,"column":50}},"513":{"start":{"line":1693,"column":2},"end":{"line":1717,"column":3}},"514":{"start":{"line":1694,"column":4},"end":{"line":1694,"column":55}},"515":{"start":{"line":1695,"column":4},"end":{"line":1696,"column":52}},"516":{"start":{"line":1698,"column":4},"end":{"line":1703,"column":5}},"517":{"start":{"line":1699,"column":6},"end":{"line":1700,"column":46}},"518":{"start":{"line":1701,"column":6},"end":{"line":1702,"column":64}},"519":{"start":{"line":1705,"column":4},"end":{"line":1709,"column":5}},"520":{"start":{"line":1706,"column":6},"end":{"line":1706,"column":54}},"521":{"start":{"line":1708,"column":6},"end":{"line":1708,"column":54}},"522":{"start":{"line":1711,"column":4},"end":{"line":1716,"column":5}},"523":{"start":{"line":1712,"column":6},"end":{"line":1714,"column":7}},"524":{"start":{"line":1713,"column":8},"end":{"line":1713,"column":55}},"525":{"start":{"line":1715,"column":6},"end":{"line":1715,"column":13}},"526":{"start":{"line":1719,"column":2},"end":{"line":1741,"column":3}},"527":{"start":{"line":1720,"column":4},"end":{"line":1721,"column":52}},"528":{"start":{"line":1723,"column":4},"end":{"line":1727,"column":5}},"529":{"start":{"line":1724,"column":6},"end":{"line":1725,"column":46}},"530":{"start":{"line":1726,"column":6},"end":{"line":1726,"column":69}},"531":{"start":{"line":1729,"column":4},"end":{"line":1733,"column":5}},"532":{"start":{"line":1730,"column":6},"end":{"line":1730,"column":54}},"533":{"start":{"line":1732,"column":6},"end":{"line":1732,"column":54}},"534":{"start":{"line":1735,"column":4},"end":{"line":1740,"column":5}},"535":{"start":{"line":1736,"column":6},"end":{"line":1738,"column":7}},"536":{"start":{"line":1737,"column":8},"end":{"line":1737,"column":57}},"537":{"start":{"line":1739,"column":6},"end":{"line":1739,"column":13}},"538":{"start":{"line":1743,"column":2},"end":{"line":1753,"column":3}},"539":{"start":{"line":1744,"column":4},"end":{"line":1744,"column":35}},"540":{"start":{"line":1745,"column":4},"end":{"line":1745,"column":45}},"541":{"start":{"line":1745,"column":28},"end":{"line":1745,"column":45}},"542":{"start":{"line":1747,"column":4},"end":{"line":1747,"column":27}},"543":{"start":{"line":1749,"column":4},"end":{"line":1751,"column":5}},"544":{"start":{"line":1750,"column":6},"end":{"line":1750,"column":16}},"545":{"start":{"line":1752,"column":4},"end":{"line":1752,"column":21}},"546":{"start":{"line":1755,"column":2},"end":{"line":1784,"column":4}},"547":{"start":{"line":1756,"column":4},"end":{"line":1756,"column":59}},"548":{"start":{"line":1757,"column":4},"end":{"line":1758,"column":73}},"549":{"start":{"line":1760,"column":4},"end":{"line":1761,"column":58}},"550":{"start":{"line":1763,"column":4},"end":{"line":1766,"column":6}},"551":{"start":{"line":1768,"column":4},"end":{"line":1770,"column":5}},"552":{"start":{"line":1769,"column":6},"end":{"line":1769,"column":32}},"553":{"start":{"line":1773,"column":4},"end":{"line":1773,"column":20}},"554":{"start":{"line":1774,"column":4},"end":{"line":1776,"column":7}},"555":{"start":{"line":1775,"column":6},"end":{"line":1775,"column":32}},"556":{"start":{"line":1778,"column":4},"end":{"line":1778,"column":23}},"557":{"start":{"line":1780,"column":4},"end":{"line":1783,"column":5}},"558":{"start":{"line":1781,"column":6},"end":{"line":1781,"column":44}},"559":{"start":{"line":1782,"column":6},"end":{"line":1782,"column":65}},"560":{"start":{"line":1786,"column":2},"end":{"line":1788,"column":4}},"561":{"start":{"line":1787,"column":4},"end":{"line":1787,"column":47}},"562":{"start":{"line":1797,"column":2},"end":{"line":1800,"column":4}},"563":{"start":{"line":1798,"column":4},"end":{"line":1798,"column":21}},"564":{"start":{"line":1798,"column":14},"end":{"line":1798,"column":21}},"565":{"start":{"line":1799,"column":4},"end":{"line":1799,"column":43}},"566":{"start":{"line":1810,"column":2},"end":{"line":1813,"column":4}},"567":{"start":{"line":1811,"column":4},"end":{"line":1811,"column":39}},"568":{"start":{"line":1812,"column":4},"end":{"line":1812,"column":63}},"569":{"start":{"line":1815,"column":2},"end":{"line":1818,"column":4}},"570":{"start":{"line":1816,"column":4},"end":{"line":1816,"column":39}},"571":{"start":{"line":1817,"column":4},"end":{"line":1817,"column":47}},"572":{"start":{"line":1820,"column":2},"end":{"line":1833,"column":4}},"573":{"start":{"line":1821,"column":4},"end":{"line":1821,"column":20}},"574":{"start":{"line":1822,"column":4},"end":{"line":1832,"column":7}},"575":{"start":{"line":1823,"column":6},"end":{"line":1823,"column":30}},"576":{"start":{"line":1823,"column":15},"end":{"line":1823,"column":30}},"577":{"start":{"line":1824,"column":6},"end":{"line":1829,"column":7}},"578":{"start":{"line":1825,"column":8},"end":{"line":1826,"column":31}},"579":{"start":{"line":1827,"column":8},"end":{"line":1827,"column":29}},"580":{"start":{"line":1828,"column":8},"end":{"line":1828,"column":23}},"581":{"start":{"line":1831,"column":6},"end":{"line":1831,"column":38}},"582":{"start":{"line":1845,"column":2},"end":{"line":1928,"column":4}},"583":{"start":{"line":1846,"column":4},"end":{"line":1849,"column":5}},"584":{"start":{"line":1847,"column":6},"end":{"line":1847,"column":19}},"585":{"start":{"line":1848,"column":6},"end":{"line":1848,"column":26}},"586":{"start":{"line":1851,"column":4},"end":{"line":1851,"column":34}},"587":{"start":{"line":1852,"column":4},"end":{"line":1852,"column":21}},"588":{"start":{"line":1853,"column":4},"end":{"line":1853,"column":54}},"589":{"start":{"line":1854,"column":4},"end":{"line":1854,"column":25}},"590":{"start":{"line":1856,"column":4},"end":{"line":1861,"column":6}},"591":{"start":{"line":1857,"column":6},"end":{"line":1857,"column":42}},"592":{"start":{"line":1858,"column":6},"end":{"line":1858,"column":40}},"593":{"start":{"line":1859,"column":6},"end":{"line":1859,"column":24}},"594":{"start":{"line":1860,"column":6},"end":{"line":1860,"column":21}},"595":{"start":{"line":1863,"column":4},"end":{"line":1865,"column":7}},"596":{"start":{"line":1864,"column":6},"end":{"line":1864,"column":24}},"597":{"start":{"line":1866,"column":4},"end":{"line":1868,"column":7}},"598":{"start":{"line":1867,"column":6},"end":{"line":1867,"column":24}},"599":{"start":{"line":1870,"column":4},"end":{"line":1872,"column":7}},"600":{"start":{"line":1871,"column":6},"end":{"line":1871,"column":24}},"601":{"start":{"line":1874,"column":4},"end":{"line":1874,"column":61}},"602":{"start":{"line":1875,"column":4},"end":{"line":1875,"column":65}},"603":{"start":{"line":1877,"column":4},"end":{"line":1927,"column":5}},"604":{"start":{"line":1878,"column":6},"end":{"line":1926,"column":8}},"605":{"start":{"line":1880,"column":8},"end":{"line":1882,"column":9}},"606":{"start":{"line":1881,"column":10},"end":{"line":1881,"column":24}},"607":{"start":{"line":1884,"column":8},"end":{"line":1884,"column":30}},"608":{"start":{"line":1885,"column":8},"end":{"line":1885,"column":44}},"609":{"start":{"line":1886,"column":8},"end":{"line":1886,"column":45}},"610":{"start":{"line":1890,"column":8},"end":{"line":1890,"column":19}},"611":{"start":{"line":1892,"column":8},"end":{"line":1896,"column":9}},"612":{"start":{"line":1893,"column":10},"end":{"line":1893,"column":32}},"613":{"start":{"line":1894,"column":15},"end":{"line":1896,"column":9}},"614":{"start":{"line":1895,"column":10},"end":{"line":1895,"column":33}},"615":{"start":{"line":1898,"column":8},"end":{"line":1898,"column":49}},"616":{"start":{"line":1900,"column":8},"end":{"line":1904,"column":10}},"617":{"start":{"line":1906,"column":8},"end":{"line":1918,"column":9}},"618":{"start":{"line":1908,"column":12},"end":{"line":1912,"column":13}},"619":{"start":{"line":1909,"column":14},"end":{"line":1909,"column":60}},"620":{"start":{"line":1911,"column":14},"end":{"line":1911,"column":68}},"621":{"start":{"line":1914,"column":12},"end":{"line":1914,"column":18}},"622":{"start":{"line":1916,"column":12},"end":{"line":1916,"column":35}},"623":{"start":{"line":1917,"column":12},"end":{"line":1917,"column":18}},"624":{"start":{"line":1921,"column":8},"end":{"line":1923,"column":9}},"625":{"start":{"line":1922,"column":10},"end":{"line":1922,"column":32}},"626":{"start":{"line":1925,"column":8},"end":{"line":1925,"column":15}},"627":{"start":{"line":1956,"column":2},"end":{"line":1963,"column":4}},"628":{"start":{"line":1957,"column":4},"end":{"line":1962,"column":6}},"629":{"start":{"line":1996,"column":2},"end":{"line":1999,"column":4}},"630":{"start":{"line":1998,"column":4},"end":{"line":1998,"column":9}},"631":{"start":{"line":2001,"column":2},"end":{"line":2001,"column":25}},"632":{"start":{"line":2003,"column":2},"end":{"line":2003,"column":24}}},"branchMap":{"1":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"2":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":11},"end":{"line":57,"column":11}},{"start":{"line":57,"column":11},"end":{"line":57,"column":11}}]},"3":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"4":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":4},"end":{"line":406,"column":4}},{"start":{"line":406,"column":4},"end":{"line":406,"column":4}}]},"5":{"line":411,"type":"binary-expr","locations":[{"start":{"line":411,"column":15},"end":{"line":411,"column":23}},{"start":{"line":411,"column":27},"end":{"line":412,"column":5}}]},"6":{"line":413,"type":"binary-expr","locations":[{"start":{"line":413,"column":14},"end":{"line":413,"column":21}},{"start":{"line":413,"column":25},"end":{"line":413,"column":27}}]},"7":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":4},"end":{"line":415,"column":4}},{"start":{"line":415,"column":4},"end":{"line":415,"column":4}}]},"8":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":4},"end":{"line":418,"column":4}},{"start":{"line":418,"column":4},"end":{"line":418,"column":4}}]},"9":{"line":426,"type":"if","locations":[{"start":{"line":426,"column":4},"end":{"line":426,"column":4}},{"start":{"line":426,"column":4},"end":{"line":426,"column":4}}]},"10":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":4},"end":{"line":431,"column":4}},{"start":{"line":431,"column":4},"end":{"line":431,"column":4}}]},"11":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":6},"end":{"line":436,"column":6}},{"start":{"line":436,"column":6},"end":{"line":436,"column":6}}]},"12":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":8},"end":{"line":441,"column":8}},{"start":{"line":441,"column":8},"end":{"line":441,"column":8}}]},"13":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":4},"end":{"line":594,"column":4}},{"start":{"line":594,"column":4},"end":{"line":594,"column":4}}]},"14":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":4},"end":{"line":618,"column":4}},{"start":{"line":618,"column":4},"end":{"line":618,"column":4}}]},"15":{"line":671,"type":"if","locations":[{"start":{"line":671,"column":4},"end":{"line":671,"column":4}},{"start":{"line":671,"column":4},"end":{"line":671,"column":4}}]},"16":{"line":691,"type":"if","locations":[{"start":{"line":691,"column":4},"end":{"line":691,"column":4}},{"start":{"line":691,"column":4},"end":{"line":691,"column":4}}]},"17":{"line":728,"type":"if","locations":[{"start":{"line":728,"column":10},"end":{"line":728,"column":10}},{"start":{"line":728,"column":10},"end":{"line":728,"column":10}}]},"18":{"line":732,"type":"if","locations":[{"start":{"line":732,"column":10},"end":{"line":732,"column":10}},{"start":{"line":732,"column":10},"end":{"line":732,"column":10}}]},"19":{"line":778,"type":"if","locations":[{"start":{"line":778,"column":4},"end":{"line":778,"column":4}},{"start":{"line":778,"column":4},"end":{"line":778,"column":4}}]},"20":{"line":896,"type":"if","locations":[{"start":{"line":896,"column":4},"end":{"line":896,"column":4}},{"start":{"line":896,"column":4},"end":{"line":896,"column":4}}]},"21":{"line":900,"type":"if","locations":[{"start":{"line":900,"column":4},"end":{"line":900,"column":4}},{"start":{"line":900,"column":4},"end":{"line":900,"column":4}}]},"22":{"line":900,"type":"binary-expr","locations":[{"start":{"line":900,"column":8},"end":{"line":900,"column":28}},{"start":{"line":900,"column":32},"end":{"line":900,"column":63}}]},"23":{"line":1041,"type":"if","locations":[{"start":{"line":1041,"column":4},"end":{"line":1041,"column":4}},{"start":{"line":1041,"column":4},"end":{"line":1041,"column":4}}]},"24":{"line":1046,"type":"if","locations":[{"start":{"line":1046,"column":4},"end":{"line":1046,"column":4}},{"start":{"line":1046,"column":4},"end":{"line":1046,"column":4}}]},"25":{"line":1057,"type":"binary-expr","locations":[{"start":{"line":1057,"column":13},"end":{"line":1057,"column":19}},{"start":{"line":1057,"column":23},"end":{"line":1057,"column":25}}]},"26":{"line":1059,"type":"binary-expr","locations":[{"start":{"line":1059,"column":19},"end":{"line":1059,"column":31}},{"start":{"line":1059,"column":35},"end":{"line":1059,"column":37}}]},"27":{"line":1064,"type":"if","locations":[{"start":{"line":1064,"column":6},"end":{"line":1064,"column":6}},{"start":{"line":1064,"column":6},"end":{"line":1064,"column":6}}]},"28":{"line":1065,"type":"if","locations":[{"start":{"line":1065,"column":6},"end":{"line":1065,"column":6}},{"start":{"line":1065,"column":6},"end":{"line":1065,"column":6}}]},"29":{"line":1065,"type":"binary-expr","locations":[{"start":{"line":1065,"column":10},"end":{"line":1065,"column":33}},{"start":{"line":1065,"column":37},"end":{"line":1065,"column":57}}]},"30":{"line":1071,"type":"if","locations":[{"start":{"line":1071,"column":8},"end":{"line":1071,"column":8}},{"start":{"line":1071,"column":8},"end":{"line":1071,"column":8}}]},"31":{"line":1076,"type":"if","locations":[{"start":{"line":1076,"column":10},"end":{"line":1076,"column":10}},{"start":{"line":1076,"column":10},"end":{"line":1076,"column":10}}]},"32":{"line":1126,"type":"if","locations":[{"start":{"line":1126,"column":4},"end":{"line":1126,"column":4}},{"start":{"line":1126,"column":4},"end":{"line":1126,"column":4}}]},"33":{"line":1126,"type":"binary-expr","locations":[{"start":{"line":1126,"column":8},"end":{"line":1126,"column":37}},{"start":{"line":1126,"column":41},"end":{"line":1126,"column":61}}]},"34":{"line":1130,"type":"if","locations":[{"start":{"line":1130,"column":4},"end":{"line":1130,"column":4}},{"start":{"line":1130,"column":4},"end":{"line":1130,"column":4}}]},"35":{"line":1130,"type":"binary-expr","locations":[{"start":{"line":1130,"column":8},"end":{"line":1130,"column":35}},{"start":{"line":1130,"column":39},"end":{"line":1130,"column":54}}]},"36":{"line":1135,"type":"if","locations":[{"start":{"line":1135,"column":4},"end":{"line":1135,"column":4}},{"start":{"line":1135,"column":4},"end":{"line":1135,"column":4}}]},"37":{"line":1139,"type":"if","locations":[{"start":{"line":1139,"column":4},"end":{"line":1139,"column":4}},{"start":{"line":1139,"column":4},"end":{"line":1139,"column":4}}]},"38":{"line":1143,"type":"binary-expr","locations":[{"start":{"line":1143,"column":14},"end":{"line":1143,"column":21}},{"start":{"line":1143,"column":25},"end":{"line":1143,"column":27}}]},"39":{"line":1146,"type":"binary-expr","locations":[{"start":{"line":1146,"column":15},"end":{"line":1146,"column":23}},{"start":{"line":1146,"column":27},"end":{"line":1146,"column":56}}]},"40":{"line":1153,"type":"if","locations":[{"start":{"line":1153,"column":4},"end":{"line":1153,"column":4}},{"start":{"line":1153,"column":4},"end":{"line":1153,"column":4}}]},"41":{"line":1179,"type":"binary-expr","locations":[{"start":{"line":1179,"column":23},"end":{"line":1179,"column":26}},{"start":{"line":1179,"column":30},"end":{"line":1179,"column":46}},{"start":{"line":1180,"column":10},"end":{"line":1180,"column":18}},{"start":{"line":1180,"column":22},"end":{"line":1180,"column":42}},{"start":{"line":1181,"column":10},"end":{"line":1181,"column":33}}]},"42":{"line":1183,"type":"if","locations":[{"start":{"line":1183,"column":8},"end":{"line":1183,"column":8}},{"start":{"line":1183,"column":8},"end":{"line":1183,"column":8}}]},"43":{"line":1193,"type":"binary-expr","locations":[{"start":{"line":1193,"column":32},"end":{"line":1193,"column":38}},{"start":{"line":1193,"column":42},"end":{"line":1193,"column":54}}]},"44":{"line":1196,"type":"if","locations":[{"start":{"line":1196,"column":4},"end":{"line":1196,"column":4}},{"start":{"line":1196,"column":4},"end":{"line":1196,"column":4}}]},"45":{"line":1196,"type":"binary-expr","locations":[{"start":{"line":1196,"column":8},"end":{"line":1196,"column":28}},{"start":{"line":1196,"column":32},"end":{"line":1196,"column":73}}]},"46":{"line":1224,"type":"cond-expr","locations":[{"start":{"line":1224,"column":24},"end":{"line":1224,"column":27}},{"start":{"line":1224,"column":30},"end":{"line":1224,"column":32}}]},"47":{"line":1227,"type":"if","locations":[{"start":{"line":1227,"column":8},"end":{"line":1227,"column":8}},{"start":{"line":1227,"column":8},"end":{"line":1227,"column":8}}]},"48":{"line":1241,"type":"cond-expr","locations":[{"start":{"line":1241,"column":24},"end":{"line":1241,"column":27}},{"start":{"line":1241,"column":30},"end":{"line":1241,"column":32}}]},"49":{"line":1244,"type":"if","locations":[{"start":{"line":1244,"column":8},"end":{"line":1244,"column":8}},{"start":{"line":1244,"column":8},"end":{"line":1244,"column":8}}]},"50":{"line":1245,"type":"if","locations":[{"start":{"line":1245,"column":8},"end":{"line":1245,"column":8}},{"start":{"line":1245,"column":8},"end":{"line":1245,"column":8}}]},"51":{"line":1245,"type":"binary-expr","locations":[{"start":{"line":1245,"column":12},"end":{"line":1245,"column":28}},{"start":{"line":1245,"column":32},"end":{"line":1245,"column":55}}]},"52":{"line":1249,"type":"if","locations":[{"start":{"line":1249,"column":8},"end":{"line":1249,"column":8}},{"start":{"line":1249,"column":8},"end":{"line":1249,"column":8}}]},"53":{"line":1249,"type":"binary-expr","locations":[{"start":{"line":1249,"column":12},"end":{"line":1249,"column":25}},{"start":{"line":1249,"column":29},"end":{"line":1249,"column":49}}]},"54":{"line":1259,"type":"binary-expr","locations":[{"start":{"line":1259,"column":23},"end":{"line":1259,"column":37}},{"start":{"line":1259,"column":41},"end":{"line":1259,"column":43}}]},"55":{"line":1261,"type":"if","locations":[{"start":{"line":1261,"column":6},"end":{"line":1261,"column":6}},{"start":{"line":1261,"column":6},"end":{"line":1261,"column":6}}]},"56":{"line":1261,"type":"binary-expr","locations":[{"start":{"line":1261,"column":10},"end":{"line":1261,"column":14}},{"start":{"line":1261,"column":18},"end":{"line":1261,"column":29}},{"start":{"line":1261,"column":33},"end":{"line":1261,"column":51}}]},"57":{"line":1289,"type":"binary-expr","locations":[{"start":{"line":1289,"column":26},"end":{"line":1289,"column":29}},{"start":{"line":1289,"column":33},"end":{"line":1289,"column":44}},{"start":{"line":1289,"column":48},"end":{"line":1289,"column":69}}]},"58":{"line":1290,"type":"if","locations":[{"start":{"line":1290,"column":10},"end":{"line":1290,"column":10}},{"start":{"line":1290,"column":10},"end":{"line":1290,"column":10}}]},"59":{"line":1290,"type":"binary-expr","locations":[{"start":{"line":1290,"column":14},"end":{"line":1290,"column":23}},{"start":{"line":1290,"column":27},"end":{"line":1290,"column":48}}]},"60":{"line":1307,"type":"if","locations":[{"start":{"line":1307,"column":8},"end":{"line":1307,"column":8}},{"start":{"line":1307,"column":8},"end":{"line":1307,"column":8}}]},"61":{"line":1310,"type":"if","locations":[{"start":{"line":1310,"column":10},"end":{"line":1310,"column":10}},{"start":{"line":1310,"column":10},"end":{"line":1310,"column":10}}]},"62":{"line":1321,"type":"if","locations":[{"start":{"line":1321,"column":6},"end":{"line":1321,"column":6}},{"start":{"line":1321,"column":6},"end":{"line":1321,"column":6}}]},"63":{"line":1325,"type":"cond-expr","locations":[{"start":{"line":1325,"column":50},"end":{"line":1325,"column":64}},{"start":{"line":1325,"column":67},"end":{"line":1325,"column":68}}]},"64":{"line":1335,"type":"if","locations":[{"start":{"line":1335,"column":6},"end":{"line":1335,"column":6}},{"start":{"line":1335,"column":6},"end":{"line":1335,"column":6}}]},"65":{"line":1339,"type":"if","locations":[{"start":{"line":1339,"column":6},"end":{"line":1339,"column":6}},{"start":{"line":1339,"column":6},"end":{"line":1339,"column":6}}]},"66":{"line":1364,"type":"switch","locations":[{"start":{"line":1365,"column":8},"end":{"line":1365,"column":27}},{"start":{"line":1366,"column":8},"end":{"line":1383,"column":16}},{"start":{"line":1384,"column":8},"end":{"line":1386,"column":16}}]},"67":{"line":1369,"type":"if","locations":[{"start":{"line":1369,"column":14},"end":{"line":1369,"column":14}},{"start":{"line":1369,"column":14},"end":{"line":1369,"column":14}}]},"68":{"line":1370,"type":"if","locations":[{"start":{"line":1370,"column":14},"end":{"line":1370,"column":14}},{"start":{"line":1370,"column":14},"end":{"line":1370,"column":14}}]},"69":{"line":1371,"type":"binary-expr","locations":[{"start":{"line":1371,"column":23},"end":{"line":1371,"column":25}},{"start":{"line":1372,"column":18},"end":{"line":1372,"column":83}}]},"70":{"line":1374,"type":"if","locations":[{"start":{"line":1374,"column":14},"end":{"line":1374,"column":14}},{"start":{"line":1374,"column":14},"end":{"line":1374,"column":14}}]},"71":{"line":1391,"type":"if","locations":[{"start":{"line":1391,"column":6},"end":{"line":1391,"column":6}},{"start":{"line":1391,"column":6},"end":{"line":1391,"column":6}}]},"72":{"line":1414,"type":"if","locations":[{"start":{"line":1414,"column":4},"end":{"line":1414,"column":4}},{"start":{"line":1414,"column":4},"end":{"line":1414,"column":4}}]},"73":{"line":1414,"type":"binary-expr","locations":[{"start":{"line":1414,"column":8},"end":{"line":1414,"column":37}},{"start":{"line":1414,"column":41},"end":{"line":1414,"column":61}}]},"74":{"line":1418,"type":"if","locations":[{"start":{"line":1418,"column":4},"end":{"line":1418,"column":4}},{"start":{"line":1418,"column":4},"end":{"line":1418,"column":4}}]},"75":{"line":1422,"type":"binary-expr","locations":[{"start":{"line":1422,"column":14},"end":{"line":1422,"column":21}},{"start":{"line":1422,"column":25},"end":{"line":1422,"column":27}}]},"76":{"line":1425,"type":"if","locations":[{"start":{"line":1425,"column":6},"end":{"line":1425,"column":6}},{"start":{"line":1425,"column":6},"end":{"line":1425,"column":6}}]},"77":{"line":1430,"type":"switch","locations":[{"start":{"line":1431,"column":10},"end":{"line":1435,"column":18}},{"start":{"line":1437,"column":10},"end":{"line":1441,"column":18}},{"start":{"line":1442,"column":10},"end":{"line":1446,"column":18}}]},"78":{"line":1451,"type":"if","locations":[{"start":{"line":1451,"column":8},"end":{"line":1451,"column":8}},{"start":{"line":1451,"column":8},"end":{"line":1451,"column":8}}]},"79":{"line":1452,"type":"if","locations":[{"start":{"line":1452,"column":8},"end":{"line":1452,"column":8}},{"start":{"line":1452,"column":8},"end":{"line":1452,"column":8}}]},"80":{"line":1469,"type":"if","locations":[{"start":{"line":1469,"column":6},"end":{"line":1469,"column":6}},{"start":{"line":1469,"column":6},"end":{"line":1469,"column":6}}]},"81":{"line":1480,"type":"cond-expr","locations":[{"start":{"line":1480,"column":25},"end":{"line":1480,"column":56}},{"start":{"line":1480,"column":59},"end":{"line":1480,"column":63}}]},"82":{"line":1482,"type":"if","locations":[{"start":{"line":1482,"column":4},"end":{"line":1482,"column":4}},{"start":{"line":1482,"column":4},"end":{"line":1482,"column":4}}]},"83":{"line":1497,"type":"if","locations":[{"start":{"line":1497,"column":6},"end":{"line":1497,"column":6}},{"start":{"line":1497,"column":6},"end":{"line":1497,"column":6}}]},"84":{"line":1499,"type":"binary-expr","locations":[{"start":{"line":1499,"column":18},"end":{"line":1499,"column":24}},{"start":{"line":1499,"column":28},"end":{"line":1499,"column":40}}]},"85":{"line":1500,"type":"switch","locations":[{"start":{"line":1501,"column":8},"end":{"line":1503,"column":22}},{"start":{"line":1505,"column":8},"end":{"line":1512,"column":22}},{"start":{"line":1514,"column":8},"end":{"line":1514,"column":23}},{"start":{"line":1515,"column":8},"end":{"line":1519,"column":48}},{"start":{"line":1521,"column":8},"end":{"line":1526,"column":62}}]},"86":{"line":1533,"type":"if","locations":[{"start":{"line":1533,"column":6},"end":{"line":1533,"column":6}},{"start":{"line":1533,"column":6},"end":{"line":1533,"column":6}}]},"87":{"line":1539,"type":"if","locations":[{"start":{"line":1539,"column":8},"end":{"line":1539,"column":8}},{"start":{"line":1539,"column":8},"end":{"line":1539,"column":8}}]},"88":{"line":1539,"type":"binary-expr","locations":[{"start":{"line":1539,"column":12},"end":{"line":1539,"column":19}},{"start":{"line":1539,"column":23},"end":{"line":1539,"column":28}}]},"89":{"line":1561,"type":"if","locations":[{"start":{"line":1561,"column":4},"end":{"line":1561,"column":4}},{"start":{"line":1561,"column":4},"end":{"line":1561,"column":4}}]},"90":{"line":1569,"type":"if","locations":[{"start":{"line":1569,"column":4},"end":{"line":1569,"column":4}},{"start":{"line":1569,"column":4},"end":{"line":1569,"column":4}}]},"91":{"line":1579,"type":"if","locations":[{"start":{"line":1579,"column":6},"end":{"line":1579,"column":6}},{"start":{"line":1579,"column":6},"end":{"line":1579,"column":6}}]},"92":{"line":1581,"type":"binary-expr","locations":[{"start":{"line":1581,"column":18},"end":{"line":1581,"column":24}},{"start":{"line":1581,"column":28},"end":{"line":1581,"column":40}}]},"93":{"line":1582,"type":"switch","locations":[{"start":{"line":1583,"column":8},"end":{"line":1585,"column":22}},{"start":{"line":1587,"column":8},"end":{"line":1594,"column":22}},{"start":{"line":1596,"column":8},"end":{"line":1596,"column":23}},{"start":{"line":1597,"column":8},"end":{"line":1601,"column":48}},{"start":{"line":1603,"column":8},"end":{"line":1608,"column":62}}]},"94":{"line":1621,"type":"binary-expr","locations":[{"start":{"line":1621,"column":18},"end":{"line":1621,"column":29}},{"start":{"line":1621,"column":33},"end":{"line":1621,"column":55}}]},"95":{"line":1638,"type":"if","locations":[{"start":{"line":1638,"column":4},"end":{"line":1638,"column":4}},{"start":{"line":1638,"column":4},"end":{"line":1638,"column":4}}]},"96":{"line":1655,"type":"binary-expr","locations":[{"start":{"line":1655,"column":17},"end":{"line":1655,"column":28}},{"start":{"line":1655,"column":32},"end":{"line":1655,"column":57}}]},"97":{"line":1656,"type":"binary-expr","locations":[{"start":{"line":1656,"column":26},"end":{"line":1656,"column":62}},{"start":{"line":1656,"column":66},"end":{"line":1656,"column":71}}]},"98":{"line":1663,"type":"binary-expr","locations":[{"start":{"line":1663,"column":17},"end":{"line":1663,"column":23}},{"start":{"line":1663,"column":27},"end":{"line":1663,"column":38}}]},"99":{"line":1664,"type":"binary-expr","locations":[{"start":{"line":1664,"column":17},"end":{"line":1664,"column":23}},{"start":{"line":1664,"column":27},"end":{"line":1664,"column":43}}]},"100":{"line":1665,"type":"if","locations":[{"start":{"line":1665,"column":4},"end":{"line":1665,"column":4}},{"start":{"line":1665,"column":4},"end":{"line":1665,"column":4}}]},"101":{"line":1665,"type":"binary-expr","locations":[{"start":{"line":1665,"column":8},"end":{"line":1665,"column":25}},{"start":{"line":1665,"column":29},"end":{"line":1665,"column":70}}]},"102":{"line":1665,"type":"binary-expr","locations":[{"start":{"line":1665,"column":31},"end":{"line":1665,"column":48}},{"start":{"line":1665,"column":52},"end":{"line":1665,"column":69}}]},"103":{"line":1676,"type":"if","locations":[{"start":{"line":1676,"column":4},"end":{"line":1676,"column":4}},{"start":{"line":1676,"column":4},"end":{"line":1676,"column":4}}]},"104":{"line":1676,"type":"binary-expr","locations":[{"start":{"line":1676,"column":8},"end":{"line":1676,"column":24}},{"start":{"line":1676,"column":28},"end":{"line":1676,"column":47}}]},"105":{"line":1686,"type":"if","locations":[{"start":{"line":1686,"column":8},"end":{"line":1686,"column":8}},{"start":{"line":1686,"column":8},"end":{"line":1686,"column":8}}]},"106":{"line":1694,"type":"binary-expr","locations":[{"start":{"line":1694,"column":19},"end":{"line":1694,"column":31}},{"start":{"line":1694,"column":35},"end":{"line":1694,"column":54}}]},"107":{"line":1695,"type":"cond-expr","locations":[{"start":{"line":1695,"column":24},"end":{"line":1695,"column":40}},{"start":{"line":1696,"column":6},"end":{"line":1696,"column":51}}]},"108":{"line":1698,"type":"if","locations":[{"start":{"line":1698,"column":4},"end":{"line":1698,"column":4}},{"start":{"line":1698,"column":4},"end":{"line":1698,"column":4}}]},"109":{"line":1699,"type":"cond-expr","locations":[{"start":{"line":1699,"column":43},"end":{"line":1699,"column":50}},{"start":{"line":1699,"column":53},"end":{"line":1699,"column":57}}]},"110":{"line":1700,"type":"cond-expr","locations":[{"start":{"line":1700,"column":34},"end":{"line":1700,"column":36}},{"start":{"line":1700,"column":39},"end":{"line":1700,"column":44}}]},"111":{"line":1705,"type":"if","locations":[{"start":{"line":1705,"column":4},"end":{"line":1705,"column":4}},{"start":{"line":1705,"column":4},"end":{"line":1705,"column":4}}]},"112":{"line":1712,"type":"if","locations":[{"start":{"line":1712,"column":6},"end":{"line":1712,"column":6}},{"start":{"line":1712,"column":6},"end":{"line":1712,"column":6}}]},"113":{"line":1720,"type":"cond-expr","locations":[{"start":{"line":1720,"column":28},"end":{"line":1720,"column":48}},{"start":{"line":1721,"column":6},"end":{"line":1721,"column":51}}]},"114":{"line":1723,"type":"if","locations":[{"start":{"line":1723,"column":4},"end":{"line":1723,"column":4}},{"start":{"line":1723,"column":4},"end":{"line":1723,"column":4}}]},"115":{"line":1724,"type":"cond-expr","locations":[{"start":{"line":1724,"column":45},"end":{"line":1724,"column":52}},{"start":{"line":1724,"column":55},"end":{"line":1724,"column":59}}]},"116":{"line":1725,"type":"cond-expr","locations":[{"start":{"line":1725,"column":34},"end":{"line":1725,"column":36}},{"start":{"line":1725,"column":39},"end":{"line":1725,"column":44}}]},"117":{"line":1729,"type":"if","locations":[{"start":{"line":1729,"column":4},"end":{"line":1729,"column":4}},{"start":{"line":1729,"column":4},"end":{"line":1729,"column":4}}]},"118":{"line":1736,"type":"if","locations":[{"start":{"line":1736,"column":6},"end":{"line":1736,"column":6}},{"start":{"line":1736,"column":6},"end":{"line":1736,"column":6}}]},"119":{"line":1745,"type":"if","locations":[{"start":{"line":1745,"column":4},"end":{"line":1745,"column":4}},{"start":{"line":1745,"column":4},"end":{"line":1745,"column":4}}]},"120":{"line":1749,"type":"if","locations":[{"start":{"line":1749,"column":4},"end":{"line":1749,"column":4}},{"start":{"line":1749,"column":4},"end":{"line":1749,"column":4}}]},"121":{"line":1749,"type":"binary-expr","locations":[{"start":{"line":1749,"column":8},"end":{"line":1749,"column":30}},{"start":{"line":1749,"column":34},"end":{"line":1749,"column":56}}]},"122":{"line":1761,"type":"binary-expr","locations":[{"start":{"line":1761,"column":6},"end":{"line":1761,"column":51}},{"start":{"line":1761,"column":55},"end":{"line":1761,"column":57}}]},"123":{"line":1768,"type":"if","locations":[{"start":{"line":1768,"column":4},"end":{"line":1768,"column":4}},{"start":{"line":1768,"column":4},"end":{"line":1768,"column":4}}]},"124":{"line":1798,"type":"if","locations":[{"start":{"line":1798,"column":4},"end":{"line":1798,"column":4}},{"start":{"line":1798,"column":4},"end":{"line":1798,"column":4}}]},"125":{"line":1823,"type":"if","locations":[{"start":{"line":1823,"column":6},"end":{"line":1823,"column":6}},{"start":{"line":1823,"column":6},"end":{"line":1823,"column":6}}]},"126":{"line":1824,"type":"if","locations":[{"start":{"line":1824,"column":6},"end":{"line":1824,"column":6}},{"start":{"line":1824,"column":6},"end":{"line":1824,"column":6}}]},"127":{"line":1846,"type":"if","locations":[{"start":{"line":1846,"column":4},"end":{"line":1846,"column":4}},{"start":{"line":1846,"column":4},"end":{"line":1846,"column":4}}]},"128":{"line":1880,"type":"if","locations":[{"start":{"line":1880,"column":8},"end":{"line":1880,"column":8}},{"start":{"line":1880,"column":8},"end":{"line":1880,"column":8}}]},"129":{"line":1885,"type":"binary-expr","locations":[{"start":{"line":1885,"column":19},"end":{"line":1885,"column":31}},{"start":{"line":1885,"column":35},"end":{"line":1885,"column":43}}]},"130":{"line":1886,"type":"binary-expr","locations":[{"start":{"line":1886,"column":22},"end":{"line":1886,"column":27}},{"start":{"line":1886,"column":31},"end":{"line":1886,"column":44}}]},"131":{"line":1892,"type":"if","locations":[{"start":{"line":1892,"column":8},"end":{"line":1892,"column":8}},{"start":{"line":1892,"column":8},"end":{"line":1892,"column":8}}]},"132":{"line":1892,"type":"binary-expr","locations":[{"start":{"line":1892,"column":12},"end":{"line":1892,"column":16}},{"start":{"line":1892,"column":21},"end":{"line":1892,"column":33}},{"start":{"line":1892,"column":37},"end":{"line":1892,"column":55}}]},"133":{"line":1894,"type":"if","locations":[{"start":{"line":1894,"column":15},"end":{"line":1894,"column":15}},{"start":{"line":1894,"column":15},"end":{"line":1894,"column":15}}]},"134":{"line":1894,"type":"binary-expr","locations":[{"start":{"line":1894,"column":19},"end":{"line":1894,"column":24}},{"start":{"line":1894,"column":29},"end":{"line":1894,"column":42}},{"start":{"line":1894,"column":46},"end":{"line":1894,"column":65}}]},"135":{"line":1898,"type":"binary-expr","locations":[{"start":{"line":1898,"column":24},"end":{"line":1898,"column":36}},{"start":{"line":1898,"column":40},"end":{"line":1898,"column":48}}]},"136":{"line":1906,"type":"switch","locations":[{"start":{"line":1907,"column":10},"end":{"line":1914,"column":18}},{"start":{"line":1915,"column":10},"end":{"line":1917,"column":18}}]},"137":{"line":1908,"type":"if","locations":[{"start":{"line":1908,"column":12},"end":{"line":1908,"column":12}},{"start":{"line":1908,"column":12},"end":{"line":1908,"column":12}}]},"138":{"line":1909,"type":"cond-expr","locations":[{"start":{"line":1909,"column":40},"end":{"line":1909,"column":48}},{"start":{"line":1909,"column":51},"end":{"line":1909,"column":59}}]},"139":{"line":1911,"type":"cond-expr","locations":[{"start":{"line":1911,"column":48},"end":{"line":1911,"column":56}},{"start":{"line":1911,"column":59},"end":{"line":1911,"column":67}}]},"140":{"line":1921,"type":"if","locations":[{"start":{"line":1921,"column":8},"end":{"line":1921,"column":8}},{"start":{"line":1921,"column":8},"end":{"line":1921,"column":8}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/*!"," * Module Dependencies."," */","'use strict';","var g = require('./globalize');","var runtime = require('./runtime');","var assert = require('assert');","var async = require('async');","var deprecated = require('depd')('loopback');","var debug = require('debug')('loopback:persisted-model');","var PassThrough = require('stream').PassThrough;","var utils = require('./utils');","var REPLICATION_CHUNK_SIZE = -1;","","module.exports = function(registry) {","  var Model = registry.getModel('Model');","","  /**","   * Extends Model with basic query and CRUD support.","   *","   * **Change Event**","   *","   * Listen for model changes using the `change` event.","   *","   * ```js","   * MyPersistedModel.on('changed', function(obj) {","   *    console.log(obj) // => the changed model","   * });","   * ```","   *","   * @class PersistedModel","   */","","  var PersistedModel = Model.extend('PersistedModel');","","  /*!","   * Setup the `PersistedModel` constructor.","   */","","  PersistedModel.setup = function setupPersistedModel() {","    // call Model.setup first","    Model.setup.call(this);","","    var PersistedModel = this;","","    // enable change tracking (usually for replication)","    if (this.settings.trackChanges) {","      PersistedModel._defineChangeModel();","      PersistedModel.once('dataSourceAttached', function() {","        PersistedModel.enableChangeTracking();","      });","    } else if (this.settings.enableRemoteReplication) {","      PersistedModel._defineChangeModel();","    }","","    PersistedModel.setupRemoting();","  };","","  /*!","   * Throw an error telling the user that the method is not available and why.","   */","","  function throwNotAttached(modelName, methodName) {","    throw new Error(","      g.f('Cannot call %s.%s().' +","      ' The %s method has not been setup.' +","      ' The {{PersistedModel}} has not been correctly attached to a {{DataSource}}!',","      modelName, methodName, methodName)","    );","  }","","  /*!","   * Convert null callbacks to 404 error objects.","   * @param  {HttpContext} ctx","   * @param  {Function} cb","   */","","  function convertNullToNotFoundError(ctx, cb) {","    if (ctx.result !== null) return cb();","","    var modelName = ctx.method.sharedClass.name;","    var id = ctx.getArgByName('id');","    var msg = g.f('Unknown \"%s\" {{id}} \"%s\".', modelName, id);","    var error = new Error(msg);","    error.statusCode = error.status = 404;","    error.code = 'MODEL_NOT_FOUND';","    cb(error);","  }","","  /**","   * Create new instance of Model, and save to database.","   *","   * @param {Object|Object[]} [data] Optional data argument.  Can be either a single model instance or an array of instances.","   *","   * @callback {Function} callback Callback function called with `cb(err, obj)` signature.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Object} models Model instances or null.","   */","","  PersistedModel.create = function(data, callback) {","    throwNotAttached(this.modelName, 'create');","  };","","  /**","   * Update or insert a model instance","   * @param {Object} data The model instance data to insert.","   * @callback {Function} callback Callback function called with `cb(err, obj)` signature.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Object} model Updated model instance.","   */","","  PersistedModel.upsert = PersistedModel.updateOrCreate = PersistedModel.patchOrCreate =","  function upsert(data, callback) {","    throwNotAttached(this.modelName, 'upsert');","  };","","  /**","   * Update or insert a model instance based on the search criteria.","   * If there is a single instance retrieved, update the retrieved model.","   * Creates a new model if no model instances were found.","   * Returns an error if multiple instances are found.","   * @param {Object} [where]  `where` filter, like","   * ```","   * { key: val, key2: {gt: 'val2'}, ...}","   * ```","   * <br/>see","   * [Where filter](http://loopback.io/doc/en/lb2/Where-filter.html#where-clause-for-other-methods).","   * @param {Object} data The model instance data to insert.","   * @callback {Function} callback Callback function called with `cb(err, obj)` signature.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Object} model Updated model instance.","   */","","  PersistedModel.upsertWithWhere =","  PersistedModel.patchOrCreateWithWhere = function upsertWithWhere(where, data, callback) {","    throwNotAttached(this.modelName, 'upsertWithWhere');","  };","","  /**","   * Replace or insert a model instance; replace existing record if one is found,","   * such that parameter `data.id` matches `id` of model instance; otherwise,","   * insert a new record.","   * @param {Object} data The model instance data.","   * @options {Object} [options] Options for replaceOrCreate","   * @property {Boolean} validate Perform validation before saving.  Default is true.","   * @callback {Function} callback Callback function called with `cb(err, obj)` signature.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Object} model Replaced model instance.","   */","","  PersistedModel.replaceOrCreate = function replaceOrCreate(data, callback) {","    throwNotAttached(this.modelName, 'replaceOrCreate');","  };","","  /**","   * Finds one record matching the optional filter object. If not found, creates","   * the object using the data provided as second argument. In this sense it is","   * the same as `find`, but limited to one object. Returns an object, not","   * collection. If you don't provide the filter object argument, it tries to","   * locate an existing object that matches the `data` argument.","   *","   * @options {Object} [filter] Optional Filter object; see below.","   * @property {String|Object|Array} fields Identify fields to include in return result.","   * <br/>See [Fields filter](http://loopback.io/doc/en/lb2/Fields-filter.html).","   * @property {String|Object|Array} include  See PersistedModel.include documentation.","   * <br/>See [Include filter](http://loopback.io/doc/en/lb2/Include-filter.html).","   * @property {Number} limit Maximum number of instances to return.","   * <br/>See [Limit filter](http://loopback.io/doc/en/lb2/Limit-filter.html).","   * @property {String} order Sort order: either \"ASC\" for ascending or \"DESC\" for descending.","   * <br/>See [Order filter](http://loopback.io/doc/en/lb2/Order-filter.html).","   * @property {Number} skip Number of results to skip.","   * <br/>See [Skip filter](http://loopback.io/doc/en/lb2/Skip-filter.html).","   * @property {Object} where Where clause, like","   * ```","   * {where: {key: val, key2: {gt: val2}, ...}}","   * ```","   * <br/>See","   * [Where filter](http://loopback.io/doc/en/lb2/Where-filter.html#where-clause-for-queries).","   * @param {Object} data Data to insert if object matching the `where` filter is not found.","   * @callback {Function} callback Callback function called with `cb(err, instance, created)` arguments.  Required.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Object} instance Model instance matching the `where` filter, if found.","   * @param {Boolean} created True if the instance does not exist and gets created.","   */","","  PersistedModel.findOrCreate = function findOrCreate(query, data, callback) {","    throwNotAttached(this.modelName, 'findOrCreate');","  };","","  PersistedModel.findOrCreate._delegate = true;","","  /**","   * Check whether a model instance exists in database.","   *","   * @param {id} id Identifier of object (primary key value).","   *","   * @callback {Function} callback Callback function called with `(err, exists)` arguments.  Required.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Boolean} exists True if the instance with the specified ID exists; false otherwise.","   */","","  PersistedModel.exists = function exists(id, cb) {","    throwNotAttached(this.modelName, 'exists');","  };","","  /**","   * Find object by ID with an optional filter for include/fields.","   *","   * @param {*} id Primary key value","   * @options {Object} [filter] Optional Filter JSON object; see below.","   * @property {String|Object|Array} fields Identify fields to include in return result.","   * <br/>See [Fields filter](http://loopback.io/doc/en/lb2/Fields-filter.html).","   * @property {String|Object|Array} include  See PersistedModel.include documentation.","   * <br/>See [Include filter](http://loopback.io/doc/en/lb2/Include-filter.html).","   * @callback {Function} callback Callback function called with `(err, instance)` arguments.  Required.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Object} instance Model instance matching the specified ID or null if no instance matches.","   */","","  PersistedModel.findById = function findById(id, filter, cb) {","    throwNotAttached(this.modelName, 'findById');","  };","","  /**","   * Find all model instances that match `filter` specification.","   * See [Querying models](http://loopback.io/doc/en/lb2/Querying-data.html).","   *","   * @options {Object} [filter] Optional Filter JSON object; see below.","   * @property {String|Object|Array} fields Identify fields to include in return result.","   * <br/>See [Fields filter](http://loopback.io/doc/en/lb2/Fields-filter.html).","   * @property {String|Object|Array} include  See PersistedModel.include documentation.","   * <br/>See [Include filter](http://loopback.io/doc/en/lb2/Include-filter.html).","   * @property {Number} limit Maximum number of instances to return.","   * <br/>See [Limit filter](http://loopback.io/doc/en/lb2/Limit-filter.html).","   * @property {String} order Sort order: either \"ASC\" for ascending or \"DESC\" for descending.","   * <br/>See [Order filter](http://loopback.io/doc/en/lb2/Order-filter.html).","   * @property {Number} skip Number of results to skip.","   * <br/>See [Skip filter](http://loopback.io/doc/en/lb2/Skip-filter.html).","   * @property {Object} where Where clause, like","   * ```","   * { where: { key: val, key2: {gt: 'val2'}, ...} }","   * ```","   * <br/>See","   * [Where filter](http://loopback.io/doc/en/lb2/Where-filter.html#where-clause-for-queries).","   *","   * @callback {Function} callback Callback function called with `(err, returned-instances)` arguments.    Required.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Array} models Model instances matching the filter, or null if none found.","   */","","  PersistedModel.find = function find(filter, cb) {","    throwNotAttached(this.modelName, 'find');","  };","","  /**","   * Find one model instance that matches `filter` specification.","   * Same as `find`, but limited to one result;","   * Returns object, not collection.","   *","   * @options {Object} [filter] Optional Filter JSON object; see below.","   * @property {String|Object|Array} fields Identify fields to include in return result.","   * <br/>See [Fields filter](http://loopback.io/doc/en/lb2/Fields-filter.html).","   * @property {String|Object|Array} include  See PersistedModel.include documentation.","   * <br/>See [Include filter](http://loopback.io/doc/en/lb2/Include-filter.html).","   * @property {String} order Sort order: either \"ASC\" for ascending or \"DESC\" for descending.","   * <br/>See [Order filter](http://loopback.io/doc/en/lb2/Order-filter.html).","   * @property {Number} skip Number of results to skip.","   * <br/>See [Skip filter](http://loopback.io/doc/en/lb2/Skip-filter.html).","   * @property {Object} where Where clause, like","   * ```","   * {where: { key: val, key2: {gt: 'val2'}, ...} }","   * ```","   * <br/>See","   * [Where filter](http://loopback.io/doc/en/lb2/Where-filter.html#where-clause-for-queries).","   *","   * @callback {Function} callback Callback function called with `(err, returned-instance)` arguments.  Required.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Array} model First model instance that matches the filter or null if none found.","   */","","  PersistedModel.findOne = function findOne(filter, cb) {","    throwNotAttached(this.modelName, 'findOne');","  };","","  /**","   * Destroy all model instances that match the optional `where` specification.","   *","   * @param {Object} [where] Optional where filter, like:","   * ```","   * {key: val, key2: {gt: 'val2'}, ...}","   * ```","   * <br/>See","   * [Where filter](http://loopback.io/doc/en/lb2/Where-filter.html#where-clause-for-other-methods).","   *","   * @callback {Function} callback Optional callback function called with `(err, info)` arguments.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Object} info Additional information about the command outcome.","   * @param {Number} info.count Number of instances (rows, documents) destroyed.","   */","","  PersistedModel.destroyAll = function destroyAll(where, cb) {","    throwNotAttached(this.modelName, 'destroyAll');","  };","","  /**","   * Alias for `destroyAll`","   */","  PersistedModel.remove = PersistedModel.destroyAll;","","  /**","   * Alias for `destroyAll`","   */","  PersistedModel.deleteAll = PersistedModel.destroyAll;","","  /**","   * Update multiple instances that match the where clause.","   *","   * Example:","   *","   *```js","   * Employee.updateAll({managerId: 'x001'}, {managerId: 'x002'}, function(err, info) {","   *     ...","   * });","   * ```","   *","   * @param {Object} [where] Optional `where` filter, like","   * ```","   * { key: val, key2: {gt: 'val2'}, ...}","   * ```","   * <br/>see","   * [Where filter](http://loopback.io/doc/en/lb2/Where-filter.html#where-clause-for-other-methods).","   * @param {Object} data Object containing data to replace matching instances, if any.","   *","   * @callback {Function} callback Callback function called with `(err, info)` arguments.  Required.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Object} info Additional information about the command outcome.","   * @param {Number} info.count Number of instances (rows, documents) updated.","   *","   */","  PersistedModel.updateAll = function updateAll(where, data, cb) {","    throwNotAttached(this.modelName, 'updateAll');","  };","","  /**","   * Alias for updateAll.","   */","  PersistedModel.update = PersistedModel.updateAll;","","  /**","   * Destroy model instance with the specified ID.","   * @param {*} id The ID value of model instance to delete.","   * @callback {Function} callback Callback function called with `(err)` arguments.  Required.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   */","  PersistedModel.destroyById = function deleteById(id, cb) {","    throwNotAttached(this.modelName, 'deleteById');","  };","","  /**","   * Alias for destroyById.","   */","  PersistedModel.removeById = PersistedModel.destroyById;","","  /**","   * Alias for destroyById.","   */","  PersistedModel.deleteById = PersistedModel.destroyById;","","  /**","   * Return the number of records that match the optional \"where\" filter.","   * @param {Object} [where] Optional where filter, like","   * ```","   * { key: val, key2: {gt: 'val2'}, ...}","   * ```","   * <br/>See","   * [Where filter](http://loopback.io/doc/en/lb2/Where-filter.html#where-clause-for-other-methods).","   * @callback {Function} callback Callback function called with `(err, count)` arguments.  Required.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Number} count Number of instances.","   */","","  PersistedModel.count = function(where, cb) {","    throwNotAttached(this.modelName, 'count');","  };","","  /**","   * Save model instance. If the instance doesn't have an ID, then calls [create](#persistedmodelcreatedata-cb) instead.","   * Triggers: validate, save, update, or create.","   * @options {Object} [options] See below.","   * @property {Boolean} validate Perform validation before saving.  Default is true.","   * @property {Boolean} throws If true, throw a validation error; WARNING: This can crash Node.","   * If false, report the error via callback.  Default is false.","   * @callback {Function} callback Optional callback function called with `(err, obj)` arguments.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Object} instance Model instance saved or created.","   */","","  PersistedModel.prototype.save = function(options, callback) {","    var Model = this.constructor;","","    if (typeof options == 'function') {","      callback = options;","      options = {};","    }","","    callback = callback || function() {","    };","    options = options || {};","","    if (!('validate' in options)) {","      options.validate = true;","    }","    if (!('throws' in options)) {","      options.throws = false;","    }","","    var inst = this;","    var data = inst.toObject(true);","    var id = this.getId();","","    if (!id) {","      return Model.create(this, callback);","    }","","    // validate first","    if (!options.validate) {","      return save();","    }","","    inst.isValid(function(valid) {","      if (valid) {","        save();","      } else {","        var err = new Model.ValidationError(inst);","        // throws option is dangerous for async usage","        if (options.throws) {","          throw err;","        }","        callback(err, inst);","      }","    });","","    // then save","    function save() {","      inst.trigger('save', function(saveDone) {","        inst.trigger('update', function(updateDone) {","          Model.upsert(inst, function(err) {","            inst._initProperties(data);","            updateDone.call(inst, function() {","              saveDone.call(inst, function() {","                callback(err, inst);","              });","            });","          });","        }, data);","      }, data);","    }","  };","","  /**","   * Determine if the data model is new.","   * @returns {Boolean} Returns true if the data model is new; false otherwise.","   */","","  PersistedModel.prototype.isNewRecord = function() {","    throwNotAttached(this.constructor.modelName, 'isNewRecord');","  };","","  /**","   * Deletes the model from persistence.","   * Triggers `destroy` hook (async) before and after destroying object.","   * @param {Function} callback Callback function.","   */","","  PersistedModel.prototype.destroy = function(cb) {","    throwNotAttached(this.constructor.modelName, 'destroy');","  };","","  /**","   * Alias for destroy.","   * @header PersistedModel.remove","   */","  PersistedModel.prototype.remove = PersistedModel.prototype.destroy;","","  /**","   * Alias for destroy.","   * @header PersistedModel.delete","   */","  PersistedModel.prototype.delete = PersistedModel.prototype.destroy;","","  PersistedModel.prototype.destroy._delegate = true;","","  /**","   * Update a single attribute.","   * Equivalent to `updateAttributes({name: 'value'}, cb)`","   *","   * @param {String} name Name of property.","   * @param {Mixed} value Value of property.","   * @callback {Function} callback Callback function called with `(err, instance)` arguments.  Required.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Object} instance Updated instance.","   */","","  PersistedModel.prototype.updateAttribute = function updateAttribute(name, value, callback) {","    throwNotAttached(this.constructor.modelName, 'updateAttribute');","  };","","  /**","   * Update set of attributes.  Performs validation before updating.","   *","   * Triggers: `validation`, `save` and `update` hooks","   * @param {Object} data Data to update.","   * @callback {Function} callback Callback function called with `(err, instance)` arguments.  Required.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Object} instance Updated instance.","   */","","  PersistedModel.prototype.updateAttributes = PersistedModel.prototype.patchAttributes =","  function updateAttributes(data, cb) {","    throwNotAttached(this.modelName, 'updateAttributes');","  };","","  /**","   * Replace attributes for a model instance and persist it into the datasource.","   * Performs validation before replacing.","   *","   * @param {Object} data Data to replace.","   * @options {Object} [options] Options for replace","   * @property {Boolean} validate Perform validation before saving.  Default is true.","   * @callback {Function} callback Callback function called with `(err, instance)` arguments.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Object} instance Replaced instance.","   */","","  PersistedModel.prototype.replaceAttributes = function replaceAttributes(data, cb) {","    throwNotAttached(this.modelName, 'replaceAttributes');","  };","","  /**","   * Replace attributes for a model instance whose id is the first input","   * argument and persist it into the datasource.","   * Performs validation before replacing.","   *","   * @param {*} id The ID value of model instance to replace.","   * @param {Object} data Data to replace.","   * @options {Object} [options] Options for replace","   * @property {Boolean} validate Perform validation before saving.  Default is true.","   * @callback {Function} callback Callback function called with `(err, instance)` arguments.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Object} instance Replaced instance.","   */","","  PersistedModel.replaceById = function replaceById(id, data, cb) {","    throwNotAttached(this.modelName, 'replaceById');","  };","","  /**","   * Reload object from persistence.  Requires `id` member of `object` to be able to call `find`.","   * @callback {Function} callback Callback function called with `(err, instance)` arguments.  Required.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Object} instance Model instance.","   */","","  PersistedModel.prototype.reload = function reload(callback) {","    throwNotAttached(this.constructor.modelName, 'reload');","  };","","  /**","   * Set the correct `id` property for the `PersistedModel`. Uses the `setId` method if the model is attached to","   * connector that defines it.  Otherwise, uses the default lookup.","   * Override this method to handle complex IDs.","   *","   * @param {*} val The `id` value. Will be converted to the type that the `id` property specifies.","   */","","  PersistedModel.prototype.setId = function(val) {","    var ds = this.getDataSource();","    this[this.getIdName()] = val;","  };","","  /**","   * Get the `id` value for the `PersistedModel`.","   *","   * @returns {*} The `id` value","   */","","  PersistedModel.prototype.getId = function() {","    var data = this.toObject();","    if (!data) return;","    return data[this.getIdName()];","  };","","  /**","   * Get the `id` property name of the constructor.","   *","   * @returns {String} The `id` property name","   */","","  PersistedModel.prototype.getIdName = function() {","    return this.constructor.getIdName();","  };","","  /**","   * Get the `id` property name of the constructor.","   *","   * @returns {String} The `id` property name","   */","","  PersistedModel.getIdName = function() {","    var Model = this;","    var ds = Model.getDataSource();","","    if (ds.idName) {","      return ds.idName(Model.modelName);","    } else {","      return 'id';","    }","  };","","  PersistedModel.setupRemoting = function() {","    var PersistedModel = this;","    var typeName = PersistedModel.modelName;","    var options = PersistedModel.settings;","","    // This is just for LB 3.x","    options.replaceOnPUT = options.replaceOnPUT !== false;","","    function setRemoting(scope, name, options) {","      var fn = scope[name];","      fn._delegate = true;","      options.isStatic = scope === PersistedModel;","      PersistedModel.remoteMethod(name, options);","    }","","    setRemoting(PersistedModel, 'create', {","      description: 'Create a new instance of the model and persist it into the data source.',","      accessType: 'WRITE',","      accepts: [","        {","          arg: 'data', type: 'object', model: typeName, allowArray: true,","          description: 'Model instance data',","          http: {source: 'body'},","        },","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      returns: {arg: 'data', type: typeName, root: true},","      http: {verb: 'post', path: '/'},","    });","","    var upsertOptions = {","      aliases: ['upsert', 'updateOrCreate'],","      description: 'Patch an existing model instance or insert a new one ' +","        'into the data source.',","      accessType: 'WRITE',","      accepts: [","        {","          arg: 'data', type: 'object', model: typeName, http: {source: 'body'},","          description: 'Model instance data',","        },","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      returns: {arg: 'data', type: typeName, root: true},","      http: [{verb: 'patch', path: '/'}],","    };","","    if (!options.replaceOnPUT) {","      upsertOptions.http.unshift({verb: 'put', path: '/'});","    }","    setRemoting(PersistedModel, 'patchOrCreate', upsertOptions);","","    var replaceOrCreateOptions = {","      description: 'Replace an existing model instance or insert a new one into the data source.',","      accessType: 'WRITE',","      accepts: [","        {","          arg: 'data', type: 'object', model: typeName,","          http: {source: 'body'},","          description: 'Model instance data',","        },","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      returns: {arg: 'data', type: typeName, root: true},","      http: [{verb: 'post', path: '/replaceOrCreate'}],","    };","","    if (options.replaceOnPUT) {","      replaceOrCreateOptions.http.push({verb: 'put', path: '/'});","    }","","    setRemoting(PersistedModel, 'replaceOrCreate', replaceOrCreateOptions);","","    setRemoting(PersistedModel, 'upsertWithWhere', {","      aliases: ['patchOrCreateWithWhere'],","      description: 'Update an existing model instance or insert a new one into ' +","        'the data source based on the where criteria.',","      accessType: 'WRITE',","      accepts: [","        {arg: 'where', type: 'object', http: {source: 'query'},","          description: 'Criteria to match model instances'},","        {arg: 'data', type: 'object', model: typeName, http: {source: 'body'},","          description: 'An object of model property name/value pairs'},","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      returns: {arg: 'data', type: typeName, root: true},","      http: {verb: 'post', path: '/upsertWithWhere'},","    });","","    setRemoting(PersistedModel, 'exists', {","      description: 'Check whether a model instance exists in the data source.',","      accessType: 'READ',","      accepts: [","        {arg: 'id', type: 'any', description: 'Model id', required: true},","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      returns: {arg: 'exists', type: 'boolean'},","      http: [","        {verb: 'get', path: '/:id/exists'},","        {verb: 'head', path: '/:id'},","      ],","      rest: {","        // After hook to map exists to 200/404 for HEAD","        after: function(ctx, cb) {","          if (ctx.req.method === 'GET') {","            // For GET, return {exists: true|false} as is","            return cb();","          }","          if (!ctx.result.exists) {","            var modelName = ctx.method.sharedClass.name;","            var id = ctx.getArgByName('id');","            var msg = 'Unknown \"' + modelName + '\" id \"' + id + '\".';","            var error = new Error(msg);","            error.statusCode = error.status = 404;","            error.code = 'MODEL_NOT_FOUND';","            cb(error);","          } else {","            cb();","          }","        },","      },","    });","","    setRemoting(PersistedModel, 'findById', {","      description: 'Find a model instance by {{id}} from the data source.',","      accessType: 'READ',","      accepts: [","        {arg: 'id', type: 'any', description: 'Model id', required: true,","          http: {source: 'path'}},","        {arg: 'filter', type: 'object',","          description:","          'Filter defining fields and include - must be a JSON-encoded string (' +","          '{\"something\":\"value\"})'},","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      returns: {arg: 'data', type: typeName, root: true},","      http: {verb: 'get', path: '/:id'},","      rest: {after: convertNullToNotFoundError},","    });","","    var replaceByIdOptions = {","      description: 'Replace attributes for a model instance and persist it into the data source.',","      accessType: 'WRITE',","      accepts: [","        {arg: 'id', type: 'any', description: 'Model id', required: true,","          http: {source: 'path'}},","        {arg: 'data', type: 'object', model: typeName, http: {source: 'body'}, description:","          'Model instance data'},","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      returns: {arg: 'data', type: typeName, root: true},","      http: [{verb: 'post', path: '/:id/replace'}],","    };","","    if (options.replaceOnPUT) {","      replaceByIdOptions.http.push({verb: 'put', path: '/:id'});","    }","","    setRemoting(PersistedModel, 'replaceById', replaceByIdOptions);","","    setRemoting(PersistedModel, 'find', {","      description: 'Find all instances of the model matched by filter from the data source.',","      accessType: 'READ',","      accepts: [","        {arg: 'filter', type: 'object', description:","        'Filter defining fields, where, include, order, offset, and limit - must be a ' +","        'JSON-encoded string ({\"something\":\"value\"})'},","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      returns: {arg: 'data', type: [typeName], root: true},","      http: {verb: 'get', path: '/'},","    });","","    setRemoting(PersistedModel, 'findOne', {","      description: 'Find first instance of the model matched by filter from the data source.',","      accessType: 'READ',","      accepts: [","        {arg: 'filter', type: 'object', description:","        'Filter defining fields, where, include, order, offset, and limit - must be a ' +","        'JSON-encoded string ({\"something\":\"value\"})'},","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      returns: {arg: 'data', type: typeName, root: true},","      http: {verb: 'get', path: '/findOne'},","      rest: {after: convertNullToNotFoundError},","    });","","    setRemoting(PersistedModel, 'destroyAll', {","      description: 'Delete all matching records.',","      accessType: 'WRITE',","      accepts: [","        {arg: 'where', type: 'object', description: 'filter.where object'},","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      returns: {","        arg: 'count',","        type: 'object',","        description: 'The number of instances deleted',","        root: true,","      },","      http: {verb: 'del', path: '/'},","      shared: false,","    });","","    setRemoting(PersistedModel, 'updateAll', {","      aliases: ['update'],","      description: 'Update instances of the model matched by {{where}} from the data source.',","      accessType: 'WRITE',","      accepts: [","        {arg: 'where', type: 'object', http: {source: 'query'},","          description: 'Criteria to match model instances'},","        {arg: 'data', type: 'object', model: typeName, http: {source: 'body'},","          description: 'An object of model property name/value pairs'},","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      returns: {","        arg: 'info',","        description: 'Information related to the outcome of the operation',","        type: {","          count: {","            type: 'number',","            description: 'The number of instances updated',","          },","        },","        root: true,","      },","      http: {verb: 'post', path: '/update'},","    });","","    setRemoting(PersistedModel, 'deleteById', {","      aliases: ['destroyById', 'removeById'],","      description: 'Delete a model instance by {{id}} from the data source.',","      accessType: 'WRITE',","      accepts: [","        {arg: 'id', type: 'any', description: 'Model id', required: true,","          http: {source: 'path'}},","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      http: {verb: 'del', path: '/:id'},","      returns: {arg: 'count', type: 'object', root: true},","    });","","    setRemoting(PersistedModel, 'count', {","      description: 'Count instances of the model matched by where from the data source.',","      accessType: 'READ',","      accepts: [","        {arg: 'where', type: 'object', description: 'Criteria to match model instances'},","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      returns: {arg: 'count', type: 'number'},","      http: {verb: 'get', path: '/count'},","    });","","    var updateAttributesOptions = {","      aliases: ['updateAttributes'],","      description: 'Patch attributes for a model instance and persist it into ' +","        'the data source.',","      accessType: 'WRITE',","      accepts: [","        {","          arg: 'data', type: 'object', model: typeName,","          http: {source: 'body'},","          description: 'An object of model property name/value pairs',","        },","        {arg: 'options', type: 'object', http: 'optionsFromRequest'},","      ],","      returns: {arg: 'data', type: typeName, root: true},","      http: [{verb: 'patch', path: '/'}],","    };","","    setRemoting(PersistedModel.prototype, 'patchAttributes', updateAttributesOptions);","","    if (!options.replaceOnPUT) {","      updateAttributesOptions.http.unshift({verb: 'put', path: '/'});","    }","","    if (options.trackChanges || options.enableRemoteReplication) {","      setRemoting(PersistedModel, 'diff', {","        description: 'Get a set of deltas and conflicts since the given checkpoint.',","        accessType: 'READ',","        accepts: [","          {arg: 'since', type: 'number', description: 'Find deltas since this checkpoint'},","          {arg: 'remoteChanges', type: 'array', description: 'an array of change objects',","            http: {source: 'body'}},","        ],","        returns: {arg: 'result', type: 'object', root: true},","        http: {verb: 'post', path: '/diff'},","      });","","      setRemoting(PersistedModel, 'changes', {","        description: 'Get the changes to a model since a given checkpoint.' +","          'Provide a filter object to reduce the number of results returned.',","        accessType: 'READ',","        accepts: [","          {arg: 'since', type: 'number', description:","            'Only return changes since this checkpoint'},","          {arg: 'filter', type: 'object', description:","            'Only include changes that match this filter'},","        ],","        returns: {arg: 'changes', type: 'array', root: true},","        http: {verb: 'get', path: '/changes'},","      });","","      setRemoting(PersistedModel, 'checkpoint', {","        description: 'Create a checkpoint.',","        // The replication algorithm needs to create a source checkpoint,","        // even though it is otherwise not making any source changes.","        // We need to allow this method for users that don't have full","        // WRITE permissions.","        accessType: 'REPLICATE',","        returns: {arg: 'checkpoint', type: 'object', root: true},","        http: {verb: 'post', path: '/checkpoint'},","      });","","      setRemoting(PersistedModel, 'currentCheckpoint', {","        description: 'Get the current checkpoint.',","        accessType: 'READ',","        returns: {arg: 'checkpoint', type: 'object', root: true},","        http: {verb: 'get', path: '/checkpoint'},","      });","","      setRemoting(PersistedModel, 'createUpdates', {","        description: 'Create an update list from a delta list.',","        // This operation is read-only, it does not change any local data.","        // It is called by the replication algorithm to compile a list","        // of changes to apply on the target.","        accessType: 'READ',","        accepts: {arg: 'deltas', type: 'array', http: {source: 'body'}},","        returns: {arg: 'updates', type: 'array', root: true},","        http: {verb: 'post', path: '/create-updates'},","      });","","      setRemoting(PersistedModel, 'bulkUpdate', {","        description: 'Run multiple updates at once. Note: this is not atomic.',","        accessType: 'WRITE',","        accepts: {arg: 'updates', type: 'array'},","        http: {verb: 'post', path: '/bulk-update'},","      });","","      setRemoting(PersistedModel, 'findLastChange', {","        description: 'Get the most recent change record for this instance.',","        accessType: 'READ',","        accepts: {","          arg: 'id', type: 'any', required: true, http: {source: 'path'},","          description: 'Model id',","        },","        returns: {arg: 'result', type: this.Change.modelName, root: true},","        http: {verb: 'get', path: '/:id/changes/last'},","      });","","      setRemoting(PersistedModel, 'updateLastChange', {","        description:","          'Update the properties of the most recent change record ' +","          'kept for this instance.',","        accessType: 'WRITE',","        accepts: [","          {","            arg: 'id', type: 'any', required: true, http: {source: 'path'},","            description: 'Model id',","          },","          {","            arg: 'data', type: 'object', model: typeName, http: {source: 'body'},","            description: 'An object of Change property name/value pairs',","          },","        ],","        returns: {arg: 'result', type: this.Change.modelName, root: true},","        http: {verb: 'put', path: '/:id/changes/last'},","      });","    }","","    setRemoting(PersistedModel, 'createChangeStream', {","      description: 'Create a change stream.',","      accessType: 'READ',","      http: [","        {verb: 'post', path: '/change-stream'},","        {verb: 'get', path: '/change-stream'},","      ],","      accepts: {","        arg: 'options',","        type: 'object',","      },","      returns: {","        arg: 'changes',","        type: 'ReadableStream',","        json: true,","      },","    });","  };","","  /**","   * Get a set of deltas and conflicts since the given checkpoint.","   *","   * See [Change.diff()](#change-diff) for details.","   *","   * @param  {Number}  since  Find deltas since this checkpoint.","   * @param  {Array}  remoteChanges  An array of change objects.","   * @callback {Function} callback Callback function called with `(err, result)` arguments.  Required.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Object} result Object with `deltas` and `conflicts` properties; see [Change.diff()](#change-diff) for details.","   */","","  PersistedModel.diff = function(since, remoteChanges, callback) {","    var Change = this.getChangeModel();","    Change.diff(this.modelName, since, remoteChanges, callback);","  };","","  /**","   * Get the changes to a model since the specified checkpoint. Provide a filter object","   * to reduce the number of results returned.","   * @param  {Number}   since    Return only changes since this checkpoint.","   * @param  {Object}   filter   Include only changes that match this filter, the same as for [#persistedmodel-find](find()).","   * @callback {Function} callback Callback function called with `(err, changes)` arguments.  Required.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Array} changes An array of [Change](#change) objects.","   */","","  PersistedModel.changes = function(since, filter, callback) {","    if (typeof since === 'function') {","      filter = {};","      callback = since;","      since = -1;","    }","    if (typeof filter === 'function') {","      callback = filter;","      since = -1;","      filter = {};","    }","","    var idName = this.dataSource.idName(this.modelName);","    var Change = this.getChangeModel();","    var model = this;","    const changeFilter = this.createChangeFilter(since, filter);","","    filter = filter || {};","    filter.fields = {};","    filter.where = filter.where || {};","    filter.fields[idName] = true;","","    // TODO(ritch) this whole thing could be optimized a bit more","    Change.find(changeFilter, function(err, changes) {","      if (err) return callback(err);","      if (!Array.isArray(changes) || changes.length === 0) return callback(null, []);","      var ids = changes.map(function(change) {","        return change.getModelId();","      });","      filter.where[idName] = {inq: ids};","      model.find(filter, function(err, models) {","        if (err) return callback(err);","        var modelIds = models.map(function(m) {","          return m[idName].toString();","        });","        callback(null, changes.filter(function(ch) {","          if (ch.type() === Change.DELETE) return true;","          return modelIds.indexOf(ch.modelId) > -1;","        }));","      });","    });","  };","","  /**","   * Create a checkpoint.","   *","   * @param  {Function} callback","   */","","  PersistedModel.checkpoint = function(cb) {","    var Checkpoint = this.getChangeModel().getCheckpointModel();","    Checkpoint.bumpLastSeq(cb);","  };","","  /**","   * Get the current checkpoint ID.","   *","   * @callback {Function} callback Callback function called with `(err, currentCheckpointId)` arguments.  Required.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Number} currentCheckpointId Current checkpoint ID.","   */","","  PersistedModel.currentCheckpoint = function(cb) {","    var Checkpoint = this.getChangeModel().getCheckpointModel();","    Checkpoint.current(cb);","  };","","  /**","   * Replicate changes since the given checkpoint to the given target model.","   *","   * @param  {Number}   [since]  Since this checkpoint","   * @param  {Model}    targetModel  Target this model class","   * @param  {Object} [options] An optional options object to pass to underlying data-access calls.","   * @param {Object} [options.filter] Replicate models that match this filter","   * @callback {Function} [callback] Callback function called with `(err, conflicts)` arguments.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {Conflict[]} conflicts A list of changes that could not be replicated due to conflicts.","   * @param {Object} checkpoints The new checkpoints to use as the \"since\"","   * argument for the next replication.","   *","   * @promise","   */","","  PersistedModel.replicate = function(since, targetModel, options, callback) {","    var lastArg = arguments[arguments.length - 1];","","    if (typeof lastArg === 'function' && arguments.length > 1) {","      callback = lastArg;","    }","","    if (typeof since === 'function' && since.modelName) {","      targetModel = since;","      since = -1;","    }","","    if (typeof since !== 'object') {","      since = {source: since, target: since};","    }","","    if (typeof options === 'function') {","      options = {};","    }","","    options = options || {};","","    var sourceModel = this;","    callback = callback || utils.createPromiseCallback();","","    debug('replicating %s since %s to %s since %s',","      sourceModel.modelName,","      since.source,","      targetModel.modelName,","      since.target);","    if (options.filter) {","      debug('\\twith filter %j', options.filter);","    }","","    // In order to avoid a race condition between the replication and","    // other clients modifying the data, we must create the new target","    // checkpoint as the first step of the replication process.","    // As a side-effect of that, the replicated changes are associated","    // with the new target checkpoint. This is actually desired behaviour,","    // because that way clients replicating *from* the target model","    // since the new checkpoint will pick these changes up.","    // However, it increases the likelihood of (false) conflicts being detected.","    // In order to prevent that, we run the replication multiple times,","    // until no changes were replicated, but at most MAX_ATTEMPTS times","    // to prevent starvation. In most cases, the second run will find no changes","    // to replicate and we are done.","    var MAX_ATTEMPTS = 3;","","    run(1, since);","    return callback.promise;","","    function run(attempt, since) {","      debug('\\titeration #%s', attempt);","      tryReplicate(sourceModel, targetModel, since, options, next);","","      function next(err, conflicts, cps, updates) {","        var finished = err || conflicts.length ||","          !updates || updates.length === 0 ||","          attempt >= MAX_ATTEMPTS;","","        if (finished)","          return callback(err, conflicts, cps);","        run(attempt + 1, cps);","      }","    }","  };","","  function tryReplicate(sourceModel, targetModel, since, options, callback) {","    var Change = sourceModel.getChangeModel();","    var TargetChange = targetModel.getChangeModel();","    var changeTrackingEnabled = Change && TargetChange;","    var replicationChunkSize = REPLICATION_CHUNK_SIZE;","","    if (sourceModel.settings && sourceModel.settings.replicationChunkSize) {","      replicationChunkSize = sourceModel.settings.replicationChunkSize;","    }","","    assert(","      changeTrackingEnabled,","      'You must enable change tracking before replicating'","    );","","    var diff, updates, newSourceCp, newTargetCp;","","    var tasks = [","      checkpoints,","      getSourceChanges,","      getDiffFromTarget,","      createSourceUpdates,","      bulkUpdate,","    ];","","    async.waterfall(tasks, done);","","    function getSourceChanges(cb) {","      utils.downloadInChunks(","        options.filter,","        replicationChunkSize,","        function(filter, pagingCallback) {","          sourceModel.changes(since.source, filter, pagingCallback);","        },","        debug.enabled ? log : cb);","","      function log(err, result) {","        if (err) return cb(err);","        debug('\\tusing source changes');","        result.forEach(function(it) { debug('\\t\\t%j', it); });","        cb(err, result);","      }","    }","","    function getDiffFromTarget(sourceChanges, cb) {","      utils.uploadInChunks(","        sourceChanges,","        replicationChunkSize,","        function(smallArray, chunkCallback) {","          return targetModel.diff(since.target, smallArray, chunkCallback);","        },","        debug.enabled ? log : cb);","","      function log(err, result) {","        if (err) return cb(err);","        if (result.conflicts && result.conflicts.length) {","          debug('\\tdiff conflicts');","          result.conflicts.forEach(function(d) { debug('\\t\\t%j', d); });","        }","        if (result.deltas && result.deltas.length) {","          debug('\\tdiff deltas');","          result.deltas.forEach(function(it) { debug('\\t\\t%j', it); });","        }","        cb(err, result);","      }","    }","","    function createSourceUpdates(_diff, cb) {","      diff = _diff;","      diff.conflicts = diff.conflicts || [];","","      if (diff && diff.deltas && diff.deltas.length) {","        debug('\\tbuilding a list of updates');","        utils.uploadInChunks(","          diff.deltas,","          replicationChunkSize,","          function(smallArray, chunkCallback) {","            return sourceModel.createUpdates(smallArray, chunkCallback);","          },","          cb);","      } else {","        // nothing to replicate","        done();","      }","    }","","    function bulkUpdate(_updates, cb) {","      debug('\\tstarting bulk update');","      updates = _updates;","      utils.uploadInChunks(","        updates,","        replicationChunkSize,","        function(smallArray, chunkCallback) {","          return targetModel.bulkUpdate(smallArray, options, function(err) {","            // bulk update is a special case where we want to process all chunks and aggregate all errors","            chunkCallback(null, err);","          });","        },","        function(notUsed, err) {","          var conflicts = err && err.details && err.details.conflicts;","          if (conflicts && err.statusCode == 409) {","            diff.conflicts = conflicts;","            // filter out updates that were not applied","            updates = updates.filter(function(u) {","              return conflicts","                .filter(function(d) { return d.modelId === u.change.modelId; })","                .length === 0;","            });","            return cb();","          }","          cb(err);","        });","    }","","    function checkpoints() {","      var cb = arguments[arguments.length - 1];","      sourceModel.checkpoint(function(err, source) {","        if (err) return cb(err);","        newSourceCp = source.seq;","        targetModel.checkpoint(function(err, target) {","          if (err) return cb(err);","          newTargetCp = target.seq;","          debug('\\tcreated checkpoints');","          debug('\\t\\t%s for source model %s', newSourceCp, sourceModel.modelName);","          debug('\\t\\t%s for target model %s', newTargetCp, targetModel.modelName);","          cb();","        });","      });","    }","","    function done(err) {","      if (err) return callback(err);","","      debug('\\treplication finished');","      debug('\\t\\t%s conflict(s) detected', diff.conflicts.length);","      debug('\\t\\t%s change(s) applied', updates ? updates.length : 0);","      debug('\\t\\tnew checkpoints: { source: %j, target: %j }',","        newSourceCp, newTargetCp);","","      var conflicts = diff.conflicts.map(function(change) {","        return new Change.Conflict(","          change.modelId, sourceModel, targetModel","        );","      });","","      if (conflicts.length) {","        sourceModel.emit('conflicts', conflicts);","      }","","      if (callback) {","        var newCheckpoints = {source: newSourceCp, target: newTargetCp};","        callback(null, conflicts, newCheckpoints, updates);","      }","    }","  }","","  /**","   * Create an update list (for `Model.bulkUpdate()`) from a delta list","   * (result of `Change.diff()`).","   *","   * @param  {Array}    deltas","   * @param  {Function} callback","   */","","  PersistedModel.createUpdates = function(deltas, cb) {","    var Change = this.getChangeModel();","    var updates = [];","    var Model = this;","    var tasks = [];","","    deltas.forEach(function(change) {","      change = new Change(change);","      var type = change.type();","      var update = {type: type, change: change};","      switch (type) {","        case Change.CREATE:","        case Change.UPDATE:","          tasks.push(function(cb) {","            Model.findById(change.modelId, function(err, inst) {","              if (err) return cb(err);","              if (!inst) {","                return cb &&","                  cb(new Error(g.f('Missing data for change: %s', change.modelId)));","              }","              if (inst.toObject) {","                update.data = inst.toObject();","              } else {","                update.data = inst;","              }","              updates.push(update);","              cb();","            });","          });","          break;","        case Change.DELETE:","          updates.push(update);","          break;","      }","    });","","    async.parallel(tasks, function(err) {","      if (err) return cb(err);","      cb(null, updates);","    });","  };","","  /**","   * Apply an update list.","   *","   * **Note: this is not atomic**","   *","   * @param  {Array} updates An updates list, usually from [createUpdates()](#persistedmodel-createupdates).","   * @param  {Object} [options] An optional options object to pass to underlying data-access calls.","   * @param  {Function} callback Callback function.","   */","","  PersistedModel.bulkUpdate = function(updates, options, callback) {","    var tasks = [];","    var Model = this;","    var Change = this.getChangeModel();","    var conflicts = [];","","    var lastArg = arguments[arguments.length - 1];","","    if (typeof lastArg === 'function' && arguments.length > 1) {","      callback = lastArg;","    }","","    if (typeof options === 'function') {","      options = {};","    }","","    options = options || {};","","    buildLookupOfAffectedModelData(Model, updates, function(err, currentMap) {","      if (err) return callback(err);","","      updates.forEach(function(update) {","        var id = update.change.modelId;","        var current = currentMap[id];","        switch (update.type) {","          case Change.UPDATE:","            tasks.push(function(cb) {","              applyUpdate(Model, id, current, update.data, update.change, conflicts, options, cb);","            });","            break;","","          case Change.CREATE:","            tasks.push(function(cb) {","              applyCreate(Model, id, current, update.data, update.change, conflicts, options, cb);","            });","            break;","          case Change.DELETE:","            tasks.push(function(cb) {","              applyDelete(Model, id, current, update.change, conflicts, options, cb);","            });","            break;","        }","      });","","      async.parallel(tasks, function(err) {","        if (err) return callback(err);","        if (conflicts.length) {","          err = new Error(g.f('Conflict'));","          err.statusCode = 409;","          err.details = {conflicts: conflicts};","          return callback(err);","        }","        callback();","      });","    });","  };","","  function buildLookupOfAffectedModelData(Model, updates, callback) {","    var idName = Model.dataSource.idName(Model.modelName);","    var affectedIds = updates.map(function(u) { return u.change.modelId; });","    var whereAffected = {};","    whereAffected[idName] = {inq: affectedIds};","    Model.find({where: whereAffected}, function(err, affectedList) {","      if (err) return callback(err);","      var dataLookup = {};","      affectedList.forEach(function(it) {","        dataLookup[it[idName]] = it;","      });","      callback(null, dataLookup);","    });","  }","","  function applyUpdate(Model, id, current, data, change, conflicts, options, cb) {","    var Change = Model.getChangeModel();","    var rev = current ?  Change.revisionForInst(current) : null;","","    if (rev !== change.prev) {","      debug('Detected non-rectified change of %s %j',","        Model.modelName, id);","      debug('\\tExpected revision: %s', change.rev);","      debug('\\tActual revision:   %s', rev);","      conflicts.push(change);","      return Change.rectifyModelChanges(Model.modelName, [id], cb);","    }","","    // TODO(bajtos) modify `data` so that it instructs","    // the connector to remove any properties included in \"inst\"","    // but not included in `data`","    // See https://github.com/strongloop/loopback/issues/1215","","    Model.updateAll(current.toObject(), data, options, function(err, result) {","      if (err) return cb(err);","","      var count = result && result.count;","      switch (count) {","        case 1:","          // The happy path, exactly one record was updated","          return cb();","","        case 0:","          debug('UpdateAll detected non-rectified change of %s %j',","            Model.modelName, id);","          conflicts.push(change);","          // NOTE(bajtos) updateAll triggers change rectification","          // for all model instances, even when no records were updated,","          // thus we don't need to rectify explicitly ourselves","          return cb();","","        case undefined:","        case null:","          return cb(new Error(","            g.f('Cannot apply bulk updates, ' +","            'the connector does not correctly report ' +","            'the number of updated records.')));","","        default:","          debug('%s.updateAll modified unexpected number of instances: %j',","            Model.modelName, count);","          return cb(new Error(","            g.f('Bulk update failed, the connector has modified unexpected ' +","            'number of records: %s', JSON.stringify(count))));","      }","    });","  }","","  function applyCreate(Model, id, current, data, change, conflicts, options, cb) {","    Model.create(data, options, function(createErr) {","      if (!createErr) return cb();","","      // We don't have a reliable way how to detect the situation","      // where he model was not create because of a duplicate id","      // The workaround is to query the DB to check if the model already exists","      Model.findById(id, function(findErr, inst) {","        if (findErr || !inst) {","          // There isn't any instance with the same id, thus there isn't","          // any conflict and we just report back the original error.","          return cb(createErr);","        }","","        return conflict();","      });","    });","","    function conflict() {","      // The instance already exists - report a conflict","      debug('Detected non-rectified new instance of %s %j',","        Model.modelName, id);","      conflicts.push(change);","","      var Change = Model.getChangeModel();","      return Change.rectifyModelChanges(Model.modelName, [id], cb);","    }","  }","","  function applyDelete(Model, id, current, change, conflicts, options, cb) {","    if (!current) {","      // The instance was either already deleted or not created at all,","      // we are done.","      return cb();","    }","","    var Change = Model.getChangeModel();","    var rev = Change.revisionForInst(current);","    if (rev !== change.prev) {","      debug('Detected non-rectified change of %s %j',","        Model.modelName, id);","      debug('\\tExpected revision: %s', change.rev);","      debug('\\tActual revision:   %s', rev);","      conflicts.push(change);","      return Change.rectifyModelChanges(Model.modelName, [id], cb);","    }","","    Model.deleteAll(current.toObject(), options, function(err, result) {","      if (err) return cb(err);","","      var count = result && result.count;","      switch (count) {","        case 1:","          // The happy path, exactly one record was updated","          return cb();","","        case 0:","          debug('DeleteAll detected non-rectified change of %s %j',","            Model.modelName, id);","          conflicts.push(change);","          // NOTE(bajtos) deleteAll triggers change rectification","          // for all model instances, even when no records were updated,","          // thus we don't need to rectify explicitly ourselves","          return cb();","","        case undefined:","        case null:","          return cb(new Error(","            g.f('Cannot apply bulk updates, ' +","            'the connector does not correctly report ' +","            'the number of deleted records.')));","","        default:","          debug('%s.deleteAll modified unexpected number of instances: %j',","            Model.modelName, count);","          return cb(new Error(","            g.f('Bulk update failed, the connector has deleted unexpected ' +","            'number of records: %s', JSON.stringify(count))));","      }","    });","  }","","  /**","   * Get the `Change` model.","   * Throws an error if the change model is not correctly setup.","   * @return {Change}","   */","","  PersistedModel.getChangeModel = function() {","    var changeModel = this.Change;","    var isSetup = changeModel && changeModel.dataSource;","","    assert(isSetup, 'Cannot get a setup Change model for ' + this.modelName);","","    return changeModel;","  };","","  /**","   * Get the source identifier for this model or dataSource.","   *","   * @callback {Function} callback Callback function called with `(err, id)` arguments.","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   * @param {String} sourceId Source identifier for the model or dataSource.","   */","","  PersistedModel.getSourceId = function(cb) {","    var dataSource = this.dataSource;","    if (!dataSource) {","      this.once('dataSourceAttached', this.getSourceId.bind(this, cb));","    }","    assert(","      dataSource.connector.name,","      'Model.getSourceId: cannot get id without dataSource.connector.name'","    );","    var id = [dataSource.connector.name, this.modelName].join('-');","    cb(null, id);","  };","","  /**","   * Enable the tracking of changes made to the model. Usually for replication.","   */","","  PersistedModel.enableChangeTracking = function() {","    var Model = this;","    var Change = this.Change || this._defineChangeModel();","    var cleanupInterval = Model.settings.changeCleanupInterval || 30000;","","    assert(this.dataSource, 'Cannot enableChangeTracking(): ' + this.modelName +","      ' is not attached to a dataSource');","","    var idName = this.getIdName();","    var idProp = this.definition.properties[idName];","    var idType = idProp && idProp.type;","    var idDefn = idProp && idProp.defaultFn;","    if (idType !== String || !(idDefn === 'uuid' || idDefn === 'guid')) {","      deprecated('The model ' + this.modelName + ' is tracking changes, ' +","        'which requires a string id with GUID/UUID default value.');","    }","","    Model.observe('after save', rectifyOnSave);","","    Model.observe('after delete', rectifyOnDelete);","","    // Only run if the run time is server","    // Can switch off cleanup by setting the interval to -1","    if (runtime.isServer && cleanupInterval > 0) {","      // initial cleanup","      cleanup();","","      // cleanup","      setInterval(cleanup, cleanupInterval);","    }","","    function cleanup() {","      Model.rectifyAllChanges(function(err) {","        if (err) {","          Model.handleChangeError(err, 'cleanup');","        }","      });","    }","  };","","  function rectifyOnSave(ctx, next) {","    var instance = ctx.instance || ctx.currentInstance;","    var id = instance ? instance.getId() :","      getIdFromWhereByModelId(ctx.Model, ctx.where);","","    if (debug.enabled) {","      debug('rectifyOnSave %s -> ' + (id ? 'id %j' : '%s'),","        ctx.Model.modelName, id ? id : 'ALL');","      debug('context instance:%j currentInstance:%j where:%j data %j',","        ctx.instance, ctx.currentInstance, ctx.where, ctx.data);","    }","","    if (id) {","      ctx.Model.rectifyChange(id, reportErrorAndNext);","    } else {","      ctx.Model.rectifyAllChanges(reportErrorAndNext);","    }","","    function reportErrorAndNext(err) {","      if (err) {","        ctx.Model.handleChangeError(err, 'after save');","      }","      next();","    }","  }","","  function rectifyOnDelete(ctx, next) {","    var id = ctx.instance ? ctx.instance.getId() :","      getIdFromWhereByModelId(ctx.Model, ctx.where);","","    if (debug.enabled) {","      debug('rectifyOnDelete %s -> ' + (id ? 'id %j' : '%s'),","        ctx.Model.modelName, id ? id : 'ALL');","      debug('context instance:%j where:%j', ctx.instance, ctx.where);","    }","","    if (id) {","      ctx.Model.rectifyChange(id, reportErrorAndNext);","    } else {","      ctx.Model.rectifyAllChanges(reportErrorAndNext);","    }","","    function reportErrorAndNext(err) {","      if (err) {","        ctx.Model.handleChangeError(err, 'after delete');","      }","      next();","    }","  }","","  function getIdFromWhereByModelId(Model, where) {","    var idName = Model.getIdName();","    if (!(idName in where)) return undefined;","","    var id = where[idName];","    // TODO(bajtos) support object values that are not LB conditions","    if (typeof id === 'string' || typeof id === 'number') {","      return id;","    }","    return undefined;","  }","","  PersistedModel._defineChangeModel = function() {","    var BaseChangeModel = this.registry.getModel('Change');","    assert(BaseChangeModel,","      'Change model must be defined before enabling change replication');","","    const additionalChangeModelProperties =","      this.settings.additionalChangeModelProperties || {};","","    this.Change = BaseChangeModel.extend(this.modelName + '-change',","      additionalChangeModelProperties,","      {trackModel: this}","    );","","    if (this.dataSource) {","      attachRelatedModels(this);","    }","","    // Re-attach related models whenever our datasource is changed.","    var self = this;","    this.on('dataSourceAttached', function() {","      attachRelatedModels(self);","    });","","    return this.Change;","","    function attachRelatedModels(self) {","      self.Change.attachTo(self.dataSource);","      self.Change.getCheckpointModel().attachTo(self.dataSource);","    }","  };","","  PersistedModel.rectifyAllChanges = function(callback) {","    this.getChangeModel().rectifyAll(callback);","  };","","  /**","   * Handle a change error. Override this method in a subclassing model to customize","   * change error handling.","   *","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb2/Error-object.html).","   */","","  PersistedModel.handleChangeError = function(err, operationName) {","    if (!err) return;","    this.emit('error', err, operationName);","  };","","  /**","   * Specify that a change to the model with the given ID has occurred.","   *","   * @param {*} id The ID of the model that has changed.","   * @callback {Function} callback","   * @param {Error} err","   */","","  PersistedModel.rectifyChange = function(id, callback) {","    var Change = this.getChangeModel();","    Change.rectifyModelChanges(this.modelName, [id], callback);","  };","","  PersistedModel.findLastChange = function(id, cb) {","    var Change = this.getChangeModel();","    Change.findOne({where: {modelId: id}}, cb);","  };","","  PersistedModel.updateLastChange = function(id, data, cb) {","    var self = this;","    this.findLastChange(id, function(err, inst) {","      if (err) return cb(err);","      if (!inst) {","        err = new Error(g.f('No change record found for %s with id %s',","          self.modelName, id));","        err.statusCode = 404;","        return cb(err);","      }","","      inst.updateAttributes(data, cb);","    });","  };","","  /**","   * Create a change stream. [See here for more info](http://loopback.io/doc/en/lb2/Realtime-server-sent-events.html)","   *","   * @param {Object} options","   * @param {Object} options.where Only changes to models matching this where filter will be included in the `ChangeStream`.","   * @callback {Function} callback","   * @param {Error} err","   * @param {ChangeStream} changes","   */","","  PersistedModel.createChangeStream = function(options, cb) {","    if (typeof options === 'function') {","      cb = options;","      options = undefined;","    }","","    var idName = this.getIdName();","    var Model = this;","    var changes = new PassThrough({objectMode: true});","    var writeable = true;","","    changes.destroy = function() {","      changes.removeAllListeners('error');","      changes.removeAllListeners('end');","      writeable = false;","      changes = null;","    };","","    changes.on('error', function() {","      writeable = false;","    });","    changes.on('end', function() {","      writeable = false;","    });","","    process.nextTick(function() {","      cb(null, changes);","    });","","    Model.observe('after save', createChangeHandler('save'));","    Model.observe('after delete', createChangeHandler('delete'));","","    function createChangeHandler(type) {","      return function(ctx, next) {","        // since it might have set to null via destroy","        if (!changes) {","          return next();","        }","","        var where = ctx.where;","        var data = ctx.instance || ctx.data;","        var whereId = where && where[idName];","","        // the data includes the id","        // or the where includes the id","        var target;","","        if (data && (data[idName] || data[idName] === 0)) {","          target = data[idName];","        } else if (where && (where[idName] || where[idName] === 0)) {","          target = where[idName];","        }","","        var hasTarget = target === 0 || !!target;","","        var change = {","          target: target,","          where: where,","          data: data,","        };","","        switch (type) {","          case 'save':","            if (ctx.isNewInstance === undefined) {","              change.type = hasTarget ? 'update' : 'create';","            } else {","              change.type = ctx.isNewInstance ? 'create' : 'update';","            }","","            break;","          case 'delete':","            change.type = 'remove';","            break;","        }","","        // TODO(ritch) this is ugly... maybe a ReadableStream would be better","        if (writeable) {","          changes.write(change);","        }","","        next();","      };","    }","  };","","  /**","   * Get the filter for searching related changes.","   *","   * Models should override this function to copy properties","   * from the model instance filter into the change search filter.","   *","   * ```js","   * module.exports = (TargetModel, config) => {","   *   TargetModel.createChangeFilter = function(since, modelFilter) {","   *     const filter = this.base.createChangeFilter.apply(this, arguments);","   *     if (modelFilter && modelFilter.where && modelFilter.where.tenantId) {","   *       filter.where.tenantId = modelFilter.where.tenantId;","   *     }","   *     return filter;","   *   };","   * };","   * ```","   *","   * @param {Number} since Return only changes since this checkpoint.","   * @param {Object} modelFilter Filter describing which model instances to","   * include in the list of changes.","   * @returns {Object} The filter object to pass to `Change.find()`. Default:","   * ```","   * {where: {checkpoint: {gte: since}, modelName: this.modelName}}","   * ```","   */","  PersistedModel.createChangeFilter = function(since, modelFilter) {","    return {","      where: {","        checkpoint: {gte: since},","        modelName: this.modelName,","      },","    };","  };","","  /**","   * Add custom data to the Change instance.","   *","   * Models should override this function to duplicate model instance properties","   * to the Change instance properties, typically to allow the changes() method","   * to filter the changes using these duplicated properties directly while","   * querying the Change model.","   *","   * ```js","   * module.exports = (TargetModel, config) => {","   *   TargetModel.prototype.fillCustomChangeProperties = function(change, cb) {","   *     var inst = this;","   *     const base = this.constructor.base;","   *     base.prototype.fillCustomChangeProperties.call(this, change, err => {","   *       if (err) return cb(err);","   *","   *       if (inst && inst.tenantId) {","   *         change.tenantId = inst.tenantId;","   *       } else {","   *         change.tenantId = null;","   *       }","   *","   *       cb();","   *     });","   *   };","   * };","   * ```","   *","   * @callback {Function} callback","   * @param {Error} err Error object; see [Error object](http://loopback.io/doc/en/lb3/Error-object.html).","   */","  PersistedModel.prototype.fillCustomChangeProperties = function(change, cb) {","    // no-op by default","    cb();","  };","","  PersistedModel.setup();","","  return PersistedModel;","};",""],"l":{"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"20":1,"21":1,"39":1,"45":1,"47":12,"49":12,"52":12,"53":0,"54":0,"55":0,"57":12,"58":0,"61":12,"68":1,"69":0,"83":1,"84":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"105":1,"106":0,"117":1,"119":0,"139":1,"141":0,"156":1,"157":0,"191":1,"192":0,"195":1,"207":1,"208":0,"225":1,"226":0,"256":1,"257":0,"286":1,"287":0,"306":1,"307":0,"313":1,"318":1,"345":1,"346":0,"352":1,"360":1,"361":0,"367":1,"372":1,"387":1,"388":0,"403":1,"404":0,"406":0,"407":0,"408":0,"411":0,"413":0,"415":0,"416":0,"418":0,"419":0,"422":0,"423":0,"424":0,"426":0,"427":0,"431":0,"432":0,"435":0,"436":0,"437":0,"439":0,"441":0,"442":0,"444":0,"449":1,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"470":1,"471":0,"480":1,"481":0,"488":1,"494":1,"496":1,"509":1,"510":0,"523":1,"525":0,"540":1,"541":0,"558":1,"559":0,"569":1,"570":0,"581":1,"582":0,"583":0,"592":1,"593":0,"594":0,"595":0,"604":1,"605":0,"614":1,"615":0,"616":0,"618":0,"619":0,"621":0,"625":1,"626":12,"627":12,"628":12,"631":12,"633":1,"634":180,"635":180,"636":180,"637":180,"640":12,"655":12,"671":12,"672":0,"674":12,"676":12,"691":12,"692":12,"695":12,"697":12,"713":12,"728":0,"730":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"741":0,"747":12,"764":12,"778":12,"779":12,"782":12,"784":12,"797":12,"811":12,"828":12,"853":12,"866":12,"877":12,"894":12,"896":12,"897":0,"900":12,"901":0,"913":0,"927":0,"938":0,"945":0,"956":0,"963":0,"974":0,"994":12,"1025":1,"1026":0,"1027":0,"1040":1,"1041":0,"1042":0,"1043":0,"1044":0,"1046":0,"1047":0,"1048":0,"1049":0,"1052":0,"1053":0,"1054":0,"1055":0,"1057":0,"1058":0,"1059":0,"1060":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1075":0,"1076":0,"1077":0,"1089":1,"1090":0,"1091":0,"1102":1,"1103":0,"1104":0,"1123":1,"1124":0,"1126":0,"1127":0,"1130":0,"1131":0,"1132":0,"1135":0,"1136":0,"1139":0,"1140":0,"1143":0,"1145":0,"1146":0,"1148":0,"1153":0,"1154":0,"1169":0,"1171":0,"1172":0,"1174":1,"1175":0,"1176":0,"1178":1,"1179":0,"1183":0,"1184":0,"1185":0,"1190":1,"1191":0,"1192":0,"1193":0,"1194":0,"1196":0,"1197":0,"1200":0,"1205":0,"1207":0,"1215":0,"1217":1,"1218":0,"1222":0,"1226":1,"1227":0,"1228":0,"1229":0,"1230":0,"1234":1,"1235":0,"1239":0,"1243":1,"1244":0,"1245":0,"1246":0,"1247":0,"1249":0,"1250":0,"1251":0,"1253":0,"1257":1,"1258":0,"1259":0,"1261":0,"1262":0,"1263":0,"1267":0,"1272":0,"1276":1,"1277":0,"1278":0,"1279":0,"1283":0,"1285":0,"1289":0,"1290":0,"1291":0,"1293":0,"1294":0,"1295":0,"1298":0,"1300":0,"1304":1,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1320":1,"1321":0,"1323":0,"1324":0,"1325":0,"1326":0,"1329":0,"1330":0,"1335":0,"1336":0,"1339":0,"1340":0,"1341":0,"1354":1,"1355":0,"1356":0,"1357":0,"1358":0,"1360":0,"1361":0,"1362":0,"1363":0,"1364":0,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1374":0,"1375":0,"1377":0,"1379":0,"1380":0,"1383":0,"1385":0,"1386":0,"1390":0,"1391":0,"1392":0,"1406":1,"1407":0,"1408":0,"1409":0,"1410":0,"1412":0,"1414":0,"1415":0,"1418":0,"1419":0,"1422":0,"1424":0,"1425":0,"1427":0,"1428":0,"1429":0,"1430":0,"1432":0,"1433":0,"1435":0,"1438":0,"1439":0,"1441":0,"1443":0,"1444":0,"1446":0,"1450":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1458":0,"1463":1,"1464":0,"1465":0,"1466":0,"1467":0,"1468":0,"1469":0,"1470":0,"1471":0,"1472":0,"1474":0,"1478":1,"1479":0,"1480":0,"1482":0,"1483":0,"1485":0,"1486":0,"1487":0,"1488":0,"1496":0,"1497":0,"1499":0,"1500":0,"1503":0,"1506":0,"1508":0,"1512":0,"1516":0,"1522":0,"1524":0,"1531":1,"1532":0,"1533":0,"1538":0,"1539":0,"1542":0,"1545":0,"1549":1,"1551":0,"1553":0,"1555":0,"1556":0,"1560":1,"1561":0,"1564":0,"1567":0,"1568":0,"1569":0,"1570":0,"1572":0,"1573":0,"1574":0,"1575":0,"1578":0,"1579":0,"1581":0,"1582":0,"1585":0,"1588":0,"1590":0,"1594":0,"1598":0,"1604":0,"1606":0,"1619":1,"1620":0,"1621":0,"1623":0,"1625":0,"1636":1,"1637":0,"1638":0,"1639":0,"1641":0,"1645":0,"1646":0,"1653":1,"1654":0,"1655":0,"1656":0,"1658":0,"1661":0,"1662":0,"1663":0,"1664":0,"1665":0,"1666":0,"1670":0,"1672":0,"1676":0,"1678":0,"1681":0,"1684":1,"1685":0,"1686":0,"1687":0,"1693":1,"1694":0,"1695":0,"1698":0,"1699":0,"1701":0,"1705":0,"1706":0,"1708":0,"1711":1,"1712":0,"1713":0,"1715":0,"1719":1,"1720":0,"1723":0,"1724":0,"1726":0,"1729":0,"1730":0,"1732":0,"1735":1,"1736":0,"1737":0,"1739":0,"1743":1,"1744":0,"1745":0,"1747":0,"1749":0,"1750":0,"1752":0,"1755":1,"1756":0,"1757":0,"1760":0,"1763":0,"1768":0,"1769":0,"1773":0,"1774":0,"1775":0,"1778":0,"1780":1,"1781":0,"1782":0,"1786":1,"1787":0,"1797":1,"1798":0,"1799":0,"1810":1,"1811":0,"1812":0,"1815":1,"1816":0,"1817":0,"1820":1,"1821":0,"1822":0,"1823":0,"1824":0,"1825":0,"1827":0,"1828":0,"1831":0,"1845":1,"1846":0,"1847":0,"1848":0,"1851":0,"1852":0,"1853":0,"1854":0,"1856":0,"1857":0,"1858":0,"1859":0,"1860":0,"1863":0,"1864":0,"1866":0,"1867":0,"1870":0,"1871":0,"1874":0,"1875":0,"1877":1,"1878":0,"1880":0,"1881":0,"1884":0,"1885":0,"1886":0,"1890":0,"1892":0,"1893":0,"1894":0,"1895":0,"1898":0,"1900":0,"1906":0,"1908":0,"1909":0,"1911":0,"1914":0,"1916":0,"1917":0,"1921":0,"1922":0,"1925":0,"1956":1,"1957":0,"1996":1,"1998":0,"2001":1,"2003":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/runtime.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/runtime.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":22}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":50}},"3":{"start":{"line":27,"column":0},"end":{"line":27,"column":38}}},"branchMap":{},"code":["// Copyright IBM Corp. 2014. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/*"," * This is an internal file that should not be used outside of loopback."," * All exported entities can be accessed via the `loopback` object."," * @private"," */","","'use strict';","var runtime = exports;","","/**"," * True if running in a browser environment; false otherwise."," * @header loopback.isBrowser"," */","","runtime.isBrowser = typeof window !== 'undefined';","","/**"," * True if running in a server environment; false otherwise."," * @header loopback.isServer"," */","","runtime.isServer = !runtime.isBrowser;",""],"l":{"13":1,"20":1,"27":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/utils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"createPromiseCallback","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":33}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":28},"end":{"line":18,"column":54}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":9},"end":{"line":19,"column":29}}},"4":{"name":"throwPromiseNotDefined","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":34}}},"5":{"name":"uploadInChunks","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":68}}},"6":{"name":"(anonymous_6)","line":56,"loc":{"start":{"line":56,"column":32},"end":{"line":56,"column":53}}},"7":{"name":"(anonymous_7)","line":57,"loc":{"start":{"line":57,"column":13},"end":{"line":57,"column":54}}},"8":{"name":"(anonymous_8)","line":64,"loc":{"start":{"line":64,"column":36},"end":{"line":64,"column":59}}},"9":{"name":"downloadInChunks","line":93,"loc":{"start":{"line":93,"column":0},"end":{"line":93,"column":66}}},"10":{"name":"pageAndConcatResults","line":107,"loc":{"start":{"line":107,"column":2},"end":{"line":107,"column":51}}},"11":{"name":"concatResults","line":128,"loc":{"start":{"line":128,"column":0},"end":{"line":128,"column":56}}},"12":{"name":"(anonymous_12)","line":132,"loc":{"start":{"line":132,"column":40},"end":{"line":132,"column":54}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":54}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":44}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":38}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}},"7":{"start":{"line":16,"column":0},"end":{"line":26,"column":1}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":9}},"9":{"start":{"line":18,"column":2},"end":{"line":23,"column":5}},"10":{"start":{"line":19,"column":4},"end":{"line":22,"column":6}},"11":{"start":{"line":20,"column":6},"end":{"line":20,"column":34}},"12":{"start":{"line":20,"column":15},"end":{"line":20,"column":34}},"13":{"start":{"line":21,"column":6},"end":{"line":21,"column":27}},"14":{"start":{"line":24,"column":2},"end":{"line":24,"column":23}},"15":{"start":{"line":25,"column":2},"end":{"line":25,"column":12}},"16":{"start":{"line":28,"column":0},"end":{"line":32,"column":1}},"17":{"start":{"line":29,"column":2},"end":{"line":31,"column":74}},"18":{"start":{"line":41,"column":0},"end":{"line":84,"column":1}},"19":{"start":{"line":42,"column":2},"end":{"line":42,"column":23}},"20":{"start":{"line":44,"column":2},"end":{"line":83,"column":3}},"21":{"start":{"line":46,"column":4},"end":{"line":46,"column":36}},"22":{"start":{"line":49,"column":4},"end":{"line":49,"column":49}},"23":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"24":{"start":{"line":53,"column":6},"end":{"line":53,"column":62}},"25":{"start":{"line":56,"column":4},"end":{"line":80,"column":7}},"26":{"start":{"line":57,"column":6},"end":{"line":79,"column":8}},"27":{"start":{"line":58,"column":8},"end":{"line":58,"column":54}},"28":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"29":{"start":{"line":61,"column":10},"end":{"line":61,"column":34}},"30":{"start":{"line":64,"column":8},"end":{"line":78,"column":11}},"31":{"start":{"line":65,"column":10},"end":{"line":67,"column":11}},"32":{"start":{"line":66,"column":12},"end":{"line":66,"column":38}},"33":{"start":{"line":70,"column":10},"end":{"line":75,"column":11}},"34":{"start":{"line":72,"column":12},"end":{"line":72,"column":38}},"35":{"start":{"line":73,"column":17},"end":{"line":75,"column":11}},"36":{"start":{"line":74,"column":12},"end":{"line":74,"column":70}},"37":{"start":{"line":77,"column":10},"end":{"line":77,"column":46}},"38":{"start":{"line":82,"column":4},"end":{"line":82,"column":31}},"39":{"start":{"line":93,"column":0},"end":{"line":120,"column":1}},"40":{"start":{"line":94,"column":2},"end":{"line":94,"column":19}},"41":{"start":{"line":95,"column":2},"end":{"line":95,"column":60}},"42":{"start":{"line":97,"column":2},"end":{"line":105,"column":3}},"43":{"start":{"line":99,"column":4},"end":{"line":99,"column":32}},"44":{"start":{"line":101,"column":4},"end":{"line":101,"column":20}},"45":{"start":{"line":102,"column":4},"end":{"line":102,"column":29}},"46":{"start":{"line":104,"column":4},"end":{"line":104,"column":78}},"47":{"start":{"line":107,"column":2},"end":{"line":119,"column":3}},"48":{"start":{"line":108,"column":4},"end":{"line":118,"column":5}},"49":{"start":{"line":109,"column":6},"end":{"line":109,"column":21}},"50":{"start":{"line":111,"column":6},"end":{"line":111,"column":53}},"51":{"start":{"line":112,"column":6},"end":{"line":117,"column":7}},"52":{"start":{"line":113,"column":8},"end":{"line":113,"column":43}},"53":{"start":{"line":114,"column":8},"end":{"line":114,"column":82}},"54":{"start":{"line":116,"column":8},"end":{"line":116,"column":26}},"55":{"start":{"line":128,"column":0},"end":{"line":140,"column":1}},"56":{"start":{"line":129,"column":2},"end":{"line":137,"column":3}},"57":{"start":{"line":130,"column":4},"end":{"line":130,"column":61}},"58":{"start":{"line":131,"column":9},"end":{"line":137,"column":3}},"59":{"start":{"line":132,"column":4},"end":{"line":134,"column":7}},"60":{"start":{"line":133,"column":6},"end":{"line":133,"column":86}},"61":{"start":{"line":136,"column":4},"end":{"line":136,"column":37}},"62":{"start":{"line":139,"column":2},"end":{"line":139,"column":25}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":6}},{"start":{"line":20,"column":6},"end":{"line":20,"column":6}}]},"2":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"3":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":16}},{"start":{"line":44,"column":20},"end":{"line":44,"column":33}},{"start":{"line":44,"column":37},"end":{"line":44,"column":67}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"5":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":10},"end":{"line":65,"column":10}},{"start":{"line":65,"column":10},"end":{"line":65,"column":10}}]},"6":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":10},"end":{"line":70,"column":10}},{"start":{"line":70,"column":10},"end":{"line":70,"column":10}}]},"7":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":14},"end":{"line":70,"column":51}},{"start":{"line":70,"column":55},"end":{"line":70,"column":93}},{"start":{"line":71,"column":12},"end":{"line":71,"column":36}}]},"8":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":17},"end":{"line":73,"column":17}},{"start":{"line":73,"column":17},"end":{"line":73,"column":17}}]},"9":{"line":95,"type":"cond-expr","locations":[{"start":{"line":95,"column":20},"end":{"line":95,"column":54}},{"start":{"line":95,"column":57},"end":{"line":95,"column":59}}]},"10":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"11":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":6},"end":{"line":97,"column":16}},{"start":{"line":97,"column":20},"end":{"line":97,"column":33}}]},"12":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"13":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":6},"end":{"line":112,"column":6}},{"start":{"line":112,"column":6},"end":{"line":112,"column":6}}]},"14":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"15":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":9},"end":{"line":131,"column":9}},{"start":{"line":131,"column":9},"end":{"line":131,"column":9}}]}},"code":["// Copyright IBM Corp. 2015. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","exports.createPromiseCallback = createPromiseCallback;","exports.uploadInChunks = uploadInChunks;","exports.downloadInChunks = downloadInChunks;","exports.concatResults = concatResults;","","var Promise = require('bluebird');","var async = require('async');","","function createPromiseCallback() {","  var cb;","  var promise = new Promise(function(resolve, reject) {","    cb = function(err, data) {","      if (err) return reject(err);","      return resolve(data);","    };","  });","  cb.promise = promise;","  return cb;","}","","function throwPromiseNotDefined() {","  throw new Error(","    'Your Node runtime does support ES6 Promises. ' +","    'Set \"global.Promise\" to your preferred implementation of promises.');","}","","/**"," * Divide an async call with large array into multiple calls using smaller chunks"," * @param {Array} largeArray - the large array to be chunked"," * @param {Number} chunkSize - size of each chunks"," * @param {Function} processFunction - the function to be called multiple times"," * @param {Function} cb - the callback"," */","function uploadInChunks(largeArray, chunkSize, processFunction, cb) {","  var chunkArrays = [];","","  if (!chunkSize || chunkSize < 1 || largeArray.length <= chunkSize) {","    // if chunking not required","    processFunction(largeArray, cb);","  } else {","    // copying so that the largeArray object does not get affected during splice","    var copyOfLargeArray = [].concat(largeArray);","","    // chunking to smaller arrays","    while (copyOfLargeArray.length > 0) {","      chunkArrays.push(copyOfLargeArray.splice(0, chunkSize));","    }","","    var tasks = chunkArrays.map(function(chunkArray) {","      return function(previousResults, chunkCallback) {","        var lastArg = arguments[arguments.length - 1];","","        if (typeof lastArg === 'function') {","          chunkCallback = lastArg;","        }","","        processFunction(chunkArray, function(err, results) {","          if (err) {","            return chunkCallback(err);","          }","","          // if this is the first async waterfall call or if previous results was not defined","          if (typeof previousResults === 'function' || typeof previousResults === 'undefined' ||","            previousResults === null) {","            previousResults = results;","          } else if (results) {","            previousResults = concatResults(previousResults, results);","          }","","          chunkCallback(err, previousResults);","        });","      };","    });","","    async.waterfall(tasks, cb);","  }","}","","/**"," * Page async download calls"," * @param {Object} filter - filter object used for the async call"," * @param {Number} chunkSize - size of each chunks"," * @param {Function} processFunction - the function to be called multiple times"," * @param {Function} cb - the callback"," */","function downloadInChunks(filter, chunkSize, processFunction, cb) {","  var results = [];","  filter = filter ? JSON.parse(JSON.stringify(filter)) : {};","","  if (!chunkSize || chunkSize < 1) {","    // if chunking not required","    processFunction(filter, cb);","  } else {","    filter.skip = 0;","    filter.limit = chunkSize;","","    processFunction(JSON.parse(JSON.stringify(filter)), pageAndConcatResults);","  }","","  function pageAndConcatResults(err, pagedResults) {","    if (err) {","      return cb(err);","    } else {","      results = concatResults(results, pagedResults);","      if (pagedResults.length >= chunkSize) {","        filter.skip += pagedResults.length;","        processFunction(JSON.parse(JSON.stringify(filter)), pageAndConcatResults);","      } else {","        cb(null, results);","      }","    }","  }","}","","/**"," * Concat current results into previous results"," * Assumption made here that the previous results and current results are homogeneous"," * @param {Object|Array} previousResults"," * @param {Object|Array} currentResults"," */","function concatResults(previousResults, currentResults) {","  if (Array.isArray(currentResults)) {","    previousResults = previousResults.concat(currentResults);","  } else if (typeof currentResults === 'object') {","    Object.keys(currentResults).forEach(function(key) {","      previousResults[key] = concatResults(previousResults[key], currentResults[key]);","    });","  } else {","    previousResults = currentResults;","  }","","  return previousResults;","}",""],"l":{"8":1,"9":1,"10":1,"11":1,"13":1,"14":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"24":0,"25":0,"28":1,"29":0,"41":1,"42":0,"44":0,"46":0,"49":0,"52":0,"53":0,"56":0,"57":0,"58":0,"60":0,"61":0,"64":0,"65":0,"66":0,"70":0,"72":0,"73":0,"74":0,"77":0,"82":0,"93":1,"94":0,"95":0,"97":0,"99":0,"101":0,"102":0,"104":0,"107":1,"108":0,"109":0,"111":0,"112":0,"113":0,"114":0,"116":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"136":0,"139":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/context.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/context.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":28}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}},"2":{"start":{"line":9,"column":0},"end":{"line":14,"column":2}},"3":{"start":{"line":10,"column":2},"end":{"line":13,"column":65}}},"branchMap":{},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var g = require('../../lib/globalize');","","module.exports = function() {","  throw new Error(g.f(","    '%s middleware was removed in version 3.0. See %s for more details.',","    'loopback#context',","    'http://loopback.io/doc/en/lb2/Using-current-context.html'));","};",""],"l":{"7":1,"9":1,"10":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/error-handler.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/error-handler.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":17},"end":{"line":7,"column":35}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":10,"column":2}},"2":{"start":{"line":8,"column":2},"end":{"line":9,"column":60}}},"branchMap":{},"code":["// Copyright IBM Corp. 2015. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","module.exports = function(options) {","  throw new Error('loopback.errorHandler is no longer available.' +","  ' Please use the module \"strong-error-handler\" instead.');","};",""],"l":{"7":1,"8":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/favicon.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/favicon.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":41}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"3":{"start":{"line":14,"column":0},"end":{"line":17,"column":2}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":59}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":32}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":9},"end":{"line":15,"column":13}},{"start":{"line":15,"column":17},"end":{"line":15,"column":58}}]}},"code":["// Copyright IBM Corp. 2014. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var favicon = require('serve-favicon');","var path = require('path');","","/**"," * Serve the LoopBack favicon."," * @header loopback.favicon()"," */","module.exports = function(icon, options) {","  icon = icon || path.join(__dirname, '../../favicon.ico');","  return favicon(icon, options);","};",""],"l":{"7":1,"8":1,"14":1,"15":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/rest.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/rest.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"rest","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":16}}},"2":{"name":"restApiHandler","line":35,"loc":{"start":{"line":35,"column":9},"end":{"line":35,"column":49}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":20},"end":{"line":56,"column":45}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":31},"end":{"line":64,"column":55}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":45}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":29}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":22}},"5":{"start":{"line":32,"column":0},"end":{"line":68,"column":1}},"6":{"start":{"line":33,"column":2},"end":{"line":33,"column":15}},"7":{"start":{"line":35,"column":2},"end":{"line":67,"column":4}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":22}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":32}},"10":{"start":{"line":39,"column":4},"end":{"line":60,"column":5}},"11":{"start":{"line":40,"column":6},"end":{"line":40,"column":20}},"12":{"start":{"line":41,"column":6},"end":{"line":41,"column":54}},"13":{"start":{"line":43,"column":6},"end":{"line":43,"column":51}},"14":{"start":{"line":44,"column":6},"end":{"line":49,"column":7}},"15":{"start":{"line":45,"column":8},"end":{"line":48,"column":71}},"16":{"start":{"line":51,"column":6},"end":{"line":54,"column":7}},"17":{"start":{"line":52,"column":8},"end":{"line":52,"column":65}},"18":{"start":{"line":53,"column":8},"end":{"line":53,"column":70}},"19":{"start":{"line":56,"column":6},"end":{"line":59,"column":9}},"20":{"start":{"line":58,"column":8},"end":{"line":58,"column":51}},"21":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"22":{"start":{"line":62,"column":6},"end":{"line":62,"column":41}},"23":{"start":{"line":64,"column":4},"end":{"line":66,"column":13}},"24":{"start":{"line":65,"column":6},"end":{"line":65,"column":30}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"2":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":28},"end":{"line":41,"column":47}},{"start":{"line":41,"column":51},"end":{"line":41,"column":53}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":6}},{"start":{"line":44,"column":6},"end":{"line":44,"column":6}}]},"4":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":10},"end":{"line":44,"column":38}},{"start":{"line":44,"column":42},"end":{"line":44,"column":66}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":6}},{"start":{"line":51,"column":6},"end":{"line":51,"column":6}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]}},"code":["// Copyright IBM Corp. 2014,2015. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/*!"," * Module dependencies."," */","","'use strict';","var g = require('../../lib/globalize');","var loopback = require('../../lib/loopback');","var async = require('async');","","/*!"," * Export the middleware."," */","","module.exports = rest;","","/**"," * Expose models over REST."," *"," * For example:"," * ```js"," * app.use(loopback.rest());"," * ```"," * For more information, see [Exposing models over a REST API](http://loopback.io/doc/en/lb2/Exposing-models-over-REST.html)."," * @header loopback.rest()"," */","","function rest() {","  var handlers; // Cached handlers","","  return function restApiHandler(req, res, next) {","    var app = req.app;","    var registry = app.registry;","","    if (!handlers) {","      handlers = [];","      var remotingOptions = app.get('remoting') || {};","","      var contextOptions = remotingOptions.context;","      if (contextOptions !== undefined && contextOptions !== false) {","        throw new Error(g.f(","          '%s was removed in version 3.0. See %s for more details.',","          'remoting.context option',","          'http://loopback.io/doc/en/lb2/Using-current-context.html'));","      }","","      if (app.isAuthEnabled) {","        var AccessToken = registry.getModelByType('AccessToken');","        handlers.push(loopback.token({model: AccessToken, app: app}));","      }","","      handlers.push(function(req, res, next) {","        // Need to get an instance of the REST handler per request","        return app.handler('rest')(req, res, next);","      });","    }","    if (handlers.length === 1) {","      return handlers[0](req, res, next);","    }","    async.eachSeries(handlers, function(handler, done) {","      handler(req, res, done);","    }, next);","  };","}",""],"l":{"11":1,"12":1,"13":1,"19":1,"32":1,"33":0,"35":0,"36":0,"37":0,"39":0,"40":0,"41":0,"43":0,"44":0,"45":0,"51":0,"52":0,"53":0,"56":0,"58":0,"61":0,"62":0,"64":0,"65":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/static.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/static.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":43}}},"branchMap":{},"code":["// Copyright IBM Corp. 2014. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/**"," * Serve static assets of a LoopBack application."," *"," * @param {string} root The root directory from which the static assets are to"," * be served."," * @param {object} options Refer to"," *   [express documentation](http://expressjs.com/4x/api.html#express.static)"," *   for the full list of available options."," * @header loopback.static(root, [options])"," */","'use strict';","module.exports = require('express').static;",""],"l":{"17":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/status.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/status.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"status","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":18}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":9},"end":{"line":29,"column":28}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":24}},"2":{"start":{"line":26,"column":0},"end":{"line":35,"column":1}},"3":{"start":{"line":27,"column":2},"end":{"line":27,"column":27}},"4":{"start":{"line":29,"column":2},"end":{"line":34,"column":4}},"5":{"start":{"line":30,"column":4},"end":{"line":33,"column":7}}},"branchMap":{},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/*!"," * Export the middleware."," */","","'use strict';","module.exports = status;","","/**"," * Return [HTTP response](http://expressjs.com/4x/api.html#res.send) with basic application status information:"," * date the application was started and uptime, in JSON format."," * For example:"," * ```js"," * {"," *  \"started\": \"2014-06-05T00:26:49.750Z\","," *  \"uptime\": 9.394"," * }"," * ```"," *"," * @header loopback.status()"," */","function status() {","  var started = new Date();","","  return function(req, res) {","    res.send({","      started: started,","      uptime: (Date.now() - Number(started)) / 1000,","    });","  };","}",""],"l":{"11":1,"26":1,"27":0,"29":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/token.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/token.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"rewriteUserLiteral","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":53}}},"2":{"name":"escapeRegExp","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":27}}},"3":{"name":"token","line":78,"loc":{"start":{"line":78,"column":0},"end":{"line":78,"column":24}}},"4":{"name":"(anonymous_4)","line":94,"loc":{"start":{"line":94,"column":9},"end":{"line":94,"column":34}}},"5":{"name":"(anonymous_5)","line":119,"loc":{"start":{"line":119,"column":44},"end":{"line":119,"column":65}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":31}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":58}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":23}},"5":{"start":{"line":24,"column":0},"end":{"line":36,"column":1}},"6":{"start":{"line":25,"column":2},"end":{"line":35,"column":3}},"7":{"start":{"line":27,"column":4},"end":{"line":27,"column":35}},"8":{"start":{"line":28,"column":4},"end":{"line":30,"column":45}},"9":{"start":{"line":31,"column":4},"end":{"line":34,"column":5}},"10":{"start":{"line":32,"column":6},"end":{"line":33,"column":17}},"11":{"start":{"line":38,"column":0},"end":{"line":40,"column":1}},"12":{"start":{"line":39,"column":2},"end":{"line":39,"column":52}},"13":{"start":{"line":78,"column":0},"end":{"line":127,"column":1}},"14":{"start":{"line":79,"column":2},"end":{"line":79,"column":26}},"15":{"start":{"line":80,"column":2},"end":{"line":80,"column":17}},"16":{"start":{"line":82,"column":2},"end":{"line":82,"column":54}},"17":{"start":{"line":83,"column":2},"end":{"line":86,"column":3}},"18":{"start":{"line":84,"column":4},"end":{"line":84,"column":76}},"19":{"start":{"line":85,"column":4},"end":{"line":85,"column":30}},"20":{"start":{"line":87,"column":2},"end":{"line":89,"column":3}},"21":{"start":{"line":88,"column":4},"end":{"line":88,"column":58}},"22":{"start":{"line":91,"column":2},"end":{"line":91,"column":54}},"23":{"start":{"line":92,"column":2},"end":{"line":92,"column":64}},"24":{"start":{"line":94,"column":2},"end":{"line":126,"column":4}},"25":{"start":{"line":95,"column":4},"end":{"line":95,"column":22}},"26":{"start":{"line":96,"column":4},"end":{"line":96,"column":32}},"27":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"28":{"start":{"line":98,"column":6},"end":{"line":98,"column":69}},"29":{"start":{"line":101,"column":4},"end":{"line":102,"column":66}},"30":{"start":{"line":104,"column":4},"end":{"line":118,"column":5}},"31":{"start":{"line":105,"column":6},"end":{"line":110,"column":7}},"32":{"start":{"line":108,"column":8},"end":{"line":108,"column":52}},"33":{"start":{"line":109,"column":8},"end":{"line":109,"column":22}},"34":{"start":{"line":111,"column":6},"end":{"line":116,"column":7}},"35":{"start":{"line":114,"column":8},"end":{"line":114,"column":52}},"36":{"start":{"line":115,"column":8},"end":{"line":115,"column":22}},"37":{"start":{"line":119,"column":4},"end":{"line":125,"column":7}},"38":{"start":{"line":120,"column":6},"end":{"line":120,"column":38}},"39":{"start":{"line":121,"column":6},"end":{"line":121,"column":50}},"40":{"start":{"line":122,"column":6},"end":{"line":122,"column":36}},"41":{"start":{"line":123,"column":6},"end":{"line":123,"column":59}},"42":{"start":{"line":123,"column":29},"end":{"line":123,"column":59}},"43":{"start":{"line":124,"column":6},"end":{"line":124,"column":16}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":21}},{"start":{"line":25,"column":25},"end":{"line":25,"column":47}},{"start":{"line":25,"column":51},"end":{"line":25,"column":69}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"4":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":12},"end":{"line":79,"column":19}},{"start":{"line":79,"column":23},"end":{"line":79,"column":25}}]},"5":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"6":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":24}},{"start":{"line":83,"column":29},"end":{"line":83,"column":67}}]},"7":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"8":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"9":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":37},"end":{"line":98,"column":50}},{"start":{"line":98,"column":54},"end":{"line":98,"column":67}}]},"10":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"11":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":6},"end":{"line":105,"column":6}},{"start":{"line":105,"column":6},"end":{"line":105,"column":6}}]},"12":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":6},"end":{"line":111,"column":6}},{"start":{"line":111,"column":6},"end":{"line":111,"column":6}}]},"13":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":10},"end":{"line":111,"column":25}},{"start":{"line":111,"column":29},"end":{"line":111,"column":47}},{"start":{"line":111,"column":51},"end":{"line":111,"column":74}}]},"14":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":24},"end":{"line":120,"column":29}},{"start":{"line":120,"column":33},"end":{"line":120,"column":37}}]},"15":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":6},"end":{"line":123,"column":6}},{"start":{"line":123,"column":6},"end":{"line":123,"column":6}}]},"16":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":10},"end":{"line":123,"column":13}},{"start":{"line":123,"column":17},"end":{"line":123,"column":27}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/*!"," * Module dependencies."," */","","'use strict';","var loopback = require('../../lib/loopback');","var assert = require('assert');","var debug = require('debug')('loopback:middleware:token');","","/*!"," * Export the middleware."," */","","module.exports = token;","","/*"," * Rewrite the url to replace current user literal with the logged in user id"," */","function rewriteUserLiteral(req, currentUserLiteral) {","  if (req.accessToken && req.accessToken.userId && currentUserLiteral) {","    // Replace /me/ with /current-user-id/","    var urlBeforeRewrite = req.url;","    req.url = req.url.replace(","      new RegExp('/' + currentUserLiteral + '(/|$|\\\\?)', 'g'),","        '/' + req.accessToken.userId + '$1');","    if (req.url !== urlBeforeRewrite) {","      debug('req.url has been rewritten from %s to %s', urlBeforeRewrite,","        req.url);","    }","  }","}","","function escapeRegExp(str) {","  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');","}","","/**"," * Check for an access token in cookies, headers, and query string parameters."," * This function always checks for the following:"," *"," * - `access_token` (params only)"," * - `X-Access-Token` (headers only)"," * - `authorization` (headers and cookies)"," *"," * It checks for these values in cookies, headers, and query string parameters _in addition_ to the items"," * specified in the options parameter."," *"," * **NOTE:** This function only checks for [signed cookies](http://expressjs.com/api.html#req.signedCookies)."," *"," * The following example illustrates how to check for an `accessToken` in a custom cookie, query string parameter"," * and header called `foo-auth`."," *"," * ```js"," * app.use(loopback.token({"," *   cookies: ['foo-auth'],"," *   headers: ['foo-auth', 'X-Foo-Auth'],"," *   params: ['foo-auth', 'foo_auth']"," * }));"," * ```"," *"," * @options {Object} [options] Each option array is used to add additional keys to find an `accessToken` for a `request`."," * @property {Array} [cookies] Array of cookie names."," * @property {Array} [headers] Array of header names."," * @property {Array} [params] Array of param names."," * @property {Boolean} [searchDefaultTokenKeys] Use the default search locations for Token in request"," * @property {Boolean} [enableDoublecheck] Execute middleware although an instance mounted earlier in the chain didn't find a token"," * @property {Boolean} [overwriteExistingToken] only has effect in combination with `enableDoublecheck`. If truthy, will allow to overwrite an existing accessToken."," * @property {Function|String} [model] AccessToken model name or class to use."," * @property {String} [currentUserLiteral] String literal for the current user."," * @header loopback.token([options])"," */","","function token(options) {","  options = options || {};","  var TokenModel;","","  var currentUserLiteral = options.currentUserLiteral;","  if (currentUserLiteral && (typeof currentUserLiteral !== 'string')) {","    debug('Set currentUserLiteral to \\'me\\' as the value is not a string.');","    currentUserLiteral = 'me';","  }","  if (typeof currentUserLiteral === 'string') {","    currentUserLiteral = escapeRegExp(currentUserLiteral);","  }","","  var enableDoublecheck = !!options.enableDoublecheck;","  var overwriteExistingToken = !!options.overwriteExistingToken;","","  return function(req, res, next) {","    var app = req.app;","    var registry = app.registry;","    if (!TokenModel) {","      TokenModel = registry.getModel(options.model || 'AccessToken');","    }","","    assert(typeof TokenModel === 'function',","      'loopback.token() middleware requires a AccessToken model');","","    if (req.accessToken !== undefined) {","      if (!enableDoublecheck) {","        // req.accessToken is defined already (might also be \"null\" or \"false\") and enableDoublecheck","        // has not been set --> skip searching for credentials","        rewriteUserLiteral(req, currentUserLiteral);","        return next();","      }","      if (req.accessToken && req.accessToken.id && !overwriteExistingToken) {","        // req.accessToken.id is defined, which means that some other middleware has identified a valid user.","        // when overwriteExistingToken is not set to a truthy value, skip searching for credentials.","        rewriteUserLiteral(req, currentUserLiteral);","        return next();","      }","      // continue normal operation (as if req.accessToken was undefined)","    }","    TokenModel.findForRequest(req, options, function(err, token) {","      req.accessToken = token || null;","      rewriteUserLiteral(req, currentUserLiteral);","      var ctx = req.loopbackContext;","      if (ctx && ctx.active) ctx.set('accessToken', token);","      next(err);","    });","  };","}",""],"l":{"11":1,"12":1,"13":1,"19":1,"24":1,"25":0,"27":0,"28":0,"31":0,"32":0,"38":1,"39":0,"78":1,"79":0,"80":0,"82":0,"83":0,"84":0,"85":0,"87":0,"88":0,"91":0,"92":0,"94":0,"95":0,"96":0,"97":0,"98":0,"101":0,"104":0,"105":0,"108":0,"109":0,"111":0,"114":0,"115":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/url-not-found.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/server/middleware/url-not-found.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"urlNotFound","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":23}}},"2":{"name":"raiseUrlNotFoundError","line":20,"loc":{"start":{"line":20,"column":9},"end":{"line":20,"column":56}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":29}},"2":{"start":{"line":19,"column":0},"end":{"line":25,"column":1}},"3":{"start":{"line":20,"column":2},"end":{"line":24,"column":4}},"4":{"start":{"line":21,"column":4},"end":{"line":21,"column":66}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":23}},"6":{"start":{"line":23,"column":4},"end":{"line":23,"column":16}}},"branchMap":{},"code":["// Copyright IBM Corp. 2014. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/*!"," * Export the middleware."," * See discussion in Connect pull request #954 for more details"," * https://github.com/senchalabs/connect/pull/954."," */","'use strict';","module.exports = urlNotFound;","","/**"," * Convert any request not handled so far to a 404 error"," * to be handled by error-handling middleware."," * @header loopback.urlNotFound()"," */","function urlNotFound() {","  return function raiseUrlNotFoundError(req, res, next) {","    var error = new Error('Cannot ' + req.method + ' ' + req.url);","    error.status = 404;","    next(error);","  };","}",""],"l":{"12":1,"19":1,"20":0,"21":0,"22":0,"23":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/current-context.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/current-context.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":1,"10":0},"b":{},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":17},"end":{"line":11,"column":36}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":31},"end":{"line":14,"column":42}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":26},"end":{"line":21,"column":39}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":27},"end":{"line":28,"column":47}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":53}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":42}},"4":{"start":{"line":11,"column":0},"end":{"line":34,"column":2}},"5":{"start":{"line":12,"column":2},"end":{"line":19,"column":4}},"6":{"start":{"line":15,"column":4},"end":{"line":18,"column":67}},"7":{"start":{"line":21,"column":2},"end":{"line":26,"column":4}},"8":{"start":{"line":22,"column":4},"end":{"line":25,"column":67}},"9":{"start":{"line":28,"column":2},"end":{"line":33,"column":4}},"10":{"start":{"line":29,"column":4},"end":{"line":32,"column":67}}},"branchMap":{},"code":["// Copyright IBM Corp. 2015,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var g = require('./globalize');","var juggler = require('loopback-datasource-juggler');","var remoting = require('strong-remoting');","","module.exports = function(loopback) {","  juggler.getCurrentContext =","  remoting.getCurrentContext =","  loopback.getCurrentContext = function() {","    throw new Error(g.f(","      '%s was removed in version 3.0. See %s for more details.',","      'loopback.getCurrentContext()',","      'http://loopback.io/doc/en/lb2/Using-current-context.html'));","  };","","  loopback.runInContext = function(fn) {","    throw new Error(g.f(","      '%s was removed in version 3.0. See %s for more details.',","      'loopback.runInContext()',","      'http://loopback.io/doc/en/lb2/Using-current-context.html'));","  };","","  loopback.createContext = function(scopeName) {","    throw new Error(g.f(","      '%s was removed in version 3.0. See %s for more details.',","      'loopback.createContext()',","      'http://loopback.io/doc/en/lb2/Using-current-context.html'));","  };","};",""],"l":{"7":1,"8":1,"9":1,"11":1,"12":1,"15":0,"21":1,"22":0,"28":1,"29":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/builtin-models.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/builtin-models.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":11,"16":11,"17":11,"18":11,"19":1,"20":111,"21":111,"22":111,"23":302,"24":302,"25":100,"26":202,"27":111},"b":{"1":[9,102],"2":[100,202]},"f":{"1":1,"2":11,"3":111},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":36}}},"2":{"name":"createModel","line":57,"loc":{"start":{"line":57,"column":2},"end":{"line":57,"column":52}}},"3":{"name":"cloneDeepJson","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":28}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"2":{"start":{"line":10,"column":0},"end":{"line":70,"column":2}},"3":{"start":{"line":13,"column":2},"end":{"line":15,"column":52}},"4":{"start":{"line":17,"column":2},"end":{"line":19,"column":42}},"5":{"start":{"line":21,"column":2},"end":{"line":23,"column":48}},"6":{"start":{"line":25,"column":2},"end":{"line":27,"column":49}},"7":{"start":{"line":29,"column":2},"end":{"line":31,"column":41}},"8":{"start":{"line":33,"column":2},"end":{"line":35,"column":49}},"9":{"start":{"line":37,"column":2},"end":{"line":39,"column":41}},"10":{"start":{"line":41,"column":2},"end":{"line":43,"column":40}},"11":{"start":{"line":45,"column":2},"end":{"line":47,"column":42}},"12":{"start":{"line":49,"column":2},"end":{"line":51,"column":43}},"13":{"start":{"line":53,"column":2},"end":{"line":55,"column":47}},"14":{"start":{"line":57,"column":2},"end":{"line":69,"column":3}},"15":{"start":{"line":64,"column":4},"end":{"line":64,"column":51}},"16":{"start":{"line":66,"column":4},"end":{"line":66,"column":53}},"17":{"start":{"line":67,"column":4},"end":{"line":67,"column":23}},"18":{"start":{"line":68,"column":4},"end":{"line":68,"column":17}},"19":{"start":{"line":75,"column":0},"end":{"line":87,"column":1}},"20":{"start":{"line":76,"column":2},"end":{"line":76,"column":46}},"21":{"start":{"line":77,"column":2},"end":{"line":77,"column":74}},"22":{"start":{"line":78,"column":2},"end":{"line":85,"column":3}},"23":{"start":{"line":79,"column":4},"end":{"line":79,"column":27}},"24":{"start":{"line":80,"column":4},"end":{"line":84,"column":5}},"25":{"start":{"line":81,"column":6},"end":{"line":81,"column":41}},"26":{"start":{"line":83,"column":6},"end":{"line":83,"column":26}},"27":{"start":{"line":86,"column":2},"end":{"line":86,"column":16}}},"branchMap":{"1":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":38},"end":{"line":76,"column":40}},{"start":{"line":76,"column":43},"end":{"line":76,"column":45}}]},"2":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","const assert = require('assert');","","module.exports = function(registry) {","  // NOTE(bajtos) we must use static require() due to browserify limitations","","  registry.KeyValueModel = createModel(","    require('../common/models/key-value-model.json'),","    require('../common/models/key-value-model.js'));","","  registry.Email = createModel(","    require('../common/models/email.json'),","    require('../common/models/email.js'));","","  registry.Application = createModel(","    require('../common/models/application.json'),","    require('../common/models/application.js'));","","  registry.AccessToken = createModel(","    require('../common/models/access-token.json'),","    require('../common/models/access-token.js'));","","  registry.User = createModel(","    require('../common/models/user.json'),","    require('../common/models/user.js'));","","  registry.RoleMapping = createModel(","    require('../common/models/role-mapping.json'),","    require('../common/models/role-mapping.js'));","","  registry.Role = createModel(","    require('../common/models/role.json'),","    require('../common/models/role.js'));","","  registry.ACL = createModel(","    require('../common/models/acl.json'),","    require('../common/models/acl.js'));","","  registry.Scope = createModel(","    require('../common/models/scope.json'),","    require('../common/models/scope.js'));","","  registry.Change = createModel(","    require('../common/models/change.json'),","    require('../common/models/change.js'));","","  registry.Checkpoint = createModel(","    require('../common/models/checkpoint.json'),","    require('../common/models/checkpoint.js'));","","  function createModel(definitionJson, customizeFn) {","    // Clone the JSON definition to allow applications","    // to modify model settings while not affecting","    // settings of new models created in the local registry","    // of another app.","    // This is needed because require() always returns the same","    // object instance it loaded during the first call.","    definitionJson = cloneDeepJson(definitionJson);","","    var Model = registry.createModel(definitionJson);","    customizeFn(Model);","    return Model;","  }","};","","// Because we are cloning objects created by JSON.parse,","// the cloning algorithm can stay much simpler than a general-purpose","// \"cloneDeep\" e.g. from lodash.","function cloneDeepJson(obj) {","  const result = Array.isArray(obj) ? [] : {};","  assert.equal(Object.getPrototypeOf(result), Object.getPrototypeOf(obj));","  for (const key in obj) {","    const value = obj[key];","    if (typeof value === 'object') {","      result[key] = cloneDeepJson(value);","    } else {","      result[key] = value;","    }","  }","  return result;","}",""],"l":{"8":1,"10":1,"13":1,"17":1,"21":1,"25":1,"29":1,"33":1,"37":1,"41":1,"45":1,"49":1,"53":1,"57":1,"64":11,"66":11,"67":11,"68":11,"75":1,"76":111,"77":111,"78":111,"79":302,"80":302,"81":100,"83":202,"86":111}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/key-value-model.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/key-value-model.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":41}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":22},"end":{"line":29,"column":55}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":22},"end":{"line":48,"column":62}}},"4":{"name":"(anonymous_4)","line":65,"loc":{"start":{"line":65,"column":25},"end":{"line":65,"column":63}}},"5":{"name":"(anonymous_5)","line":83,"loc":{"start":{"line":83,"column":22},"end":{"line":83,"column":55}}},"6":{"name":"(anonymous_6)","line":105,"loc":{"start":{"line":105,"column":23},"end":{"line":105,"column":59}}},"7":{"name":"(anonymous_7)","line":153,"loc":{"start":{"line":153,"column":30},"end":{"line":153,"column":56}}},"8":{"name":"(anonymous_8)","line":167,"loc":{"start":{"line":167,"column":24},"end":{"line":167,"column":35}}},"9":{"name":"throwNotAttached","line":223,"loc":{"start":{"line":223,"column":0},"end":{"line":223,"column":49}}},"10":{"name":"convertNullToNotFoundError","line":232,"loc":{"start":{"line":232,"column":0},"end":{"line":232,"column":45}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}},"2":{"start":{"line":16,"column":0},"end":{"line":221,"column":2}},"3":{"start":{"line":29,"column":2},"end":{"line":31,"column":4}},"4":{"start":{"line":30,"column":4},"end":{"line":30,"column":44}},"5":{"start":{"line":48,"column":2},"end":{"line":50,"column":4}},"6":{"start":{"line":49,"column":4},"end":{"line":49,"column":44}},"7":{"start":{"line":65,"column":2},"end":{"line":67,"column":4}},"8":{"start":{"line":66,"column":4},"end":{"line":66,"column":47}},"9":{"start":{"line":83,"column":2},"end":{"line":85,"column":4}},"10":{"start":{"line":84,"column":4},"end":{"line":84,"column":44}},"11":{"start":{"line":105,"column":2},"end":{"line":107,"column":4}},"12":{"start":{"line":106,"column":4},"end":{"line":106,"column":45}},"13":{"start":{"line":153,"column":2},"end":{"line":155,"column":4}},"14":{"start":{"line":154,"column":4},"end":{"line":154,"column":52}},"15":{"start":{"line":167,"column":2},"end":{"line":220,"column":4}},"16":{"start":{"line":168,"column":4},"end":{"line":168,"column":52}},"17":{"start":{"line":170,"column":4},"end":{"line":178,"column":7}},"18":{"start":{"line":180,"column":4},"end":{"line":191,"column":7}},"19":{"start":{"line":193,"column":4},"end":{"line":201,"column":7}},"20":{"start":{"line":203,"column":4},"end":{"line":210,"column":7}},"21":{"start":{"line":212,"column":4},"end":{"line":219,"column":7}},"22":{"start":{"line":223,"column":0},"end":{"line":230,"column":1}},"23":{"start":{"line":224,"column":2},"end":{"line":229,"column":40}},"24":{"start":{"line":232,"column":0},"end":{"line":242,"column":1}},"25":{"start":{"line":233,"column":2},"end":{"line":233,"column":39}},"26":{"start":{"line":233,"column":27},"end":{"line":233,"column":39}},"27":{"start":{"line":235,"column":2},"end":{"line":235,"column":46}},"28":{"start":{"line":236,"column":2},"end":{"line":236,"column":34}},"29":{"start":{"line":237,"column":2},"end":{"line":237,"column":61}},"30":{"start":{"line":238,"column":2},"end":{"line":238,"column":29}},"31":{"start":{"line":239,"column":2},"end":{"line":239,"column":40}},"32":{"start":{"line":240,"column":2},"end":{"line":240,"column":31}},"33":{"start":{"line":241,"column":2},"end":{"line":241,"column":12}}},"branchMap":{"1":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":233,"column":2}},{"start":{"line":233,"column":2},"end":{"line":233,"column":2}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var g = require('../../lib/globalize');","","/**"," * Data model for key-value databases."," *"," * @class KeyValueModel"," * @inherits {Model}"," */","","module.exports = function(KeyValueModel) {","  /**","   * Return the value associated with a given key.","   *","   * @param {String} key Key to use when searching the database.","   * @options {Object} options","   * @callback {Function} callback","   * @param {Error} err Error object.","   * @param {Any} result Value associated with the given key.","   * @promise","   *","   * @header KeyValueModel.get(key, cb)","   */","  KeyValueModel.get = function(key, options, callback) {","    throwNotAttached(this.modelName, 'get');","  };","","  /**","   * Persist a value and associate it with the given key.","   *","   * @param {String} key Key to associate with the given value.","   * @param {Any} value Value to persist.","   * @options {Number|Object} options Optional settings for the key-value","   *   pair. If a Number is provided, it is set as the TTL (time to live) in ms","   *   (milliseconds) for the key-value pair.","   * @property {Number} ttl TTL for the key-value pair in ms.","   * @callback {Function} callback","   * @param {Error} err Error object.","   * @promise","   *","   * @header KeyValueModel.set(key, value, cb)","   */","  KeyValueModel.set = function(key, value, options, callback) {","    throwNotAttached(this.modelName, 'set');","  };","","  /**","   * Set the TTL (time to live) in ms (milliseconds) for a given key. TTL is the","   * remaining time before a key-value pair is discarded from the database.","   *","   * @param {String} key Key to use when searching the database.","   * @param {Number} ttl TTL in ms to set for the key.","   * @options {Object} options","   * @callback {Function} callback","   * @param {Error} err Error object.","   * @promise","   *","   * @header KeyValueModel.expire(key, ttl, cb)","   */","  KeyValueModel.expire = function(key, ttl, options, callback) {","    throwNotAttached(this.modelName, 'expire');","  };","","  /**","   * Return the TTL (time to live) for a given key. TTL is the remaining time","   * before a key-value pair is discarded from the database.","   *","   * @param {String} key Key to use when searching the database.","   * @options {Object} options","   * @callback {Function} callback","   * @param {Error} error","   * @param {Number} ttl Expiration time for the key-value pair. `undefined` if","   *   TTL was not initially set.","   * @promise","   *","   * @header KeyValueModel.ttl(key, cb)","   */","  KeyValueModel.ttl = function(key, options, callback) {","    throwNotAttached(this.modelName, 'ttl');","  };","","  /**","   * Return all keys in the database.","   *","   * **WARNING**: This method is not suitable for large data sets as all","   * key-values pairs are loaded into memory at once. For large data sets,","   * use `iterateKeys()` instead.","   *","   * @param {Object} filter An optional filter object with the following","   * @param {String} filter.match Glob string used to filter returned","   *   keys (i.e. `userid.*`). All connectors are required to support `*` and","   *   `?`, but may also support additional special characters specific to the","   *   database.","   * @param {Object} options","   * @callback {Function} callback","   * @promise","   *","   * @header KeyValueModel.keys(filter, cb)","   */","  KeyValueModel.keys = function(filter, options, callback) {","    throwNotAttached(this.modelName, 'keys');","  };","","  /**","   * Asynchronously iterate all keys in the database. Similar to `.keys()` but","   * instead allows for iteration over large data sets without having to load","   * everything into memory at once.","   *","   * Callback example:","   * ```js","   * // Given a model named `Color` with two keys `red` and `blue`","   * var iterator = Color.iterateKeys();","   * it.next(function(err, key) {","   *   // key contains `red`","   *   it.next(function(err, key) {","   *     // key contains `blue`","   *   });","   * });","   * ```","   *","   * Promise example:","   * ```js","   * // Given a model named `Color` with two keys `red` and `blue`","   * var iterator = Color.iterateKeys();","   * Promise.resolve().then(function() {","   *   return it.next();","   * })","   * .then(function(key) {","   *   // key contains `red`","   *   return it.next();","   * });","   * .then(function(key) {","   *   // key contains `blue`","   * });","   * ```","   *","   * @param {Object} filter An optional filter object with the following","   * @param {String} filter.match Glob string to use to filter returned","   *   keys (i.e. `userid.*`). All connectors are required to support `*` and","   *   `?`. They may also support additional special characters that are","   *   specific to the backing database.","   * @param {Object} options","   * @returns {AsyncIterator} An Object implementing `next(cb) -> Promise`","   *   function that can be used to iterate all keys.","   *","   * @header KeyValueModel.iterateKeys(filter)","   */","  KeyValueModel.iterateKeys = function(filter, options) {","    throwNotAttached(this.modelName, 'iterateKeys');","  };","","  /*!","   * Set up remoting metadata for this model.","   *","   * **Notes**:","   * - The method is called automatically by `Model.extend` and/or","   *   `app.registry.createModel`","   * - In general, base models use call this to ensure remote methods are","   *   inherited correctly, see bug at","   *   https://github.com/strongloop/loopback/issues/2350","   */","  KeyValueModel.setup = function() {","    KeyValueModel.base.setup.apply(this, arguments);","","    this.remoteMethod('get', {","      accepts: {","        arg: 'key', type: 'string', required: true,","        http: {source: 'path'},","      },","      returns: {arg: 'value', type: 'any', root: true},","      http: {path: '/:key', verb: 'get'},","      rest: {after: convertNullToNotFoundError},","    });","","    this.remoteMethod('set', {","      accepts: [","        {arg: 'key', type: 'string', required: true,","          http: {source: 'path'}},","        {arg: 'value', type: 'any', required: true,","          http: {source: 'body'}},","        {arg: 'ttl', type: 'number',","          http: {source: 'query'},","          description: 'time to live in milliseconds'},","      ],","      http: {path: '/:key', verb: 'put'},","    });","","    this.remoteMethod('expire', {","      accepts: [","        {arg: 'key', type: 'string', required: true,","          http: {source: 'path'}},","        {arg: 'ttl', type: 'number', required: true,","          http: {source: 'form'}},","      ],","      http: {path: '/:key/expire', verb: 'put'},","    });","","    this.remoteMethod('ttl', {","      accepts: {","        arg: 'key', type: 'string', required: true,","        http: {source: 'path'},","      },","      returns: {arg: 'value', type: 'any', root: true},","      http: {path: '/:key/ttl', verb: 'get'},","    });","","    this.remoteMethod('keys', {","      accepts: {","        arg: 'filter', type: 'object', required: false,","        http: {source: 'query'},","      },","      returns: {arg: 'keys', type: ['string'], root: true},","      http: {path: '/keys', verb: 'get'},","    });","  };","};","","function throwNotAttached(modelName, methodName) {","  throw new Error(g.f(","    'Cannot call %s.%s(). ' +","      'The %s method has not been setup. '  +","      'The {{KeyValueModel}} has not been correctly attached ' +","      'to a {{DataSource}}!',","    modelName, methodName, methodName));","}","","function convertNullToNotFoundError(ctx, cb) {","  if (ctx.result !== null) return cb();","","  var modelName = ctx.method.sharedClass.name;","  var id = ctx.getArgByName('id');","  var msg = g.f('Unknown \"%s\" {{key}} \"%s\".', modelName, id);","  var error = new Error(msg);","  error.statusCode = error.status = 404;","  error.code = 'KEY_NOT_FOUND';","  cb(error);","}",""],"l":{"7":1,"16":1,"29":1,"30":0,"48":1,"49":0,"65":1,"66":0,"83":1,"84":0,"105":1,"106":0,"153":1,"154":0,"167":1,"168":0,"170":0,"180":0,"193":0,"203":0,"212":0,"223":1,"224":0,"232":1,"233":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/email.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/email.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0},"b":{},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":17},"end":{"line":21,"column":33}}},"2":{"name":"(anonymous_2)","line":48,"loc":{"start":{"line":48,"column":15},"end":{"line":48,"column":26}}},"3":{"name":"(anonymous_3)","line":55,"loc":{"start":{"line":55,"column":25},"end":{"line":55,"column":36}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}},"2":{"start":{"line":21,"column":0},"end":{"line":58,"column":2}},"3":{"start":{"line":48,"column":2},"end":{"line":50,"column":4}},"4":{"start":{"line":49,"column":4},"end":{"line":49,"column":89}},"5":{"start":{"line":55,"column":2},"end":{"line":57,"column":4}},"6":{"start":{"line":56,"column":4},"end":{"line":56,"column":89}}},"branchMap":{},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var g = require('../../lib/globalize');","","/**","* Email model.  Extends LoopBack base [Model](#model-new-model).","* @property {String} to Email addressee.  Required.","* @property {String} from Email sender address.  Required.","* @property {String} subject Email subject string.  Required.","* @property {String} text Text body of email.","* @property {String} html HTML body of email.","*","* @class Email","* @inherits {Model}","*/","","module.exports = function(Email) {","  /**","   * Send an email with the given `options`.","   *","   * Example Options:","   *","   * ```js","   * {","   *   from: \"Fred Foo <foo@blurdybloop.com>\", // sender address","   *   to: \"bar@blurdybloop.com, baz@blurdybloop.com\", // list of receivers","   *   subject: \"Hello\", // Subject line","   *   text: \"Hello world\", // plaintext body","   *   html: \"<b>Hello world</b>\" // html body","   * }","   * ```","   *","   * See https://github.com/andris9/Nodemailer for other supported options.","   *","   * @options {Object} options See below","   * @prop {String} from Senders's email address","   * @prop {String} to List of one or more recipient email addresses (comma-delimited)","   * @prop {String} subject Subject line","   * @prop {String} text Body text","   * @prop {String} html Body HTML (optional)","   * @param {Function} callback Called after the e-mail is sent or the sending failed","   */","","  Email.send = function() {","    throw new Error(g.f('You must connect the {{Email}} Model to a {{Mail}} connector'));","  };","","  /**","   * A shortcut for Email.send(this).","   */","  Email.prototype.send = function() {","    throw new Error(g.f('You must connect the {{Email}} Model to a {{Mail}} connector'));","  };","};",""],"l":{"7":1,"21":1,"48":1,"49":0,"55":1,"56":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/application.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/application.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"generateKey","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":51}}},"2":{"name":"(anonymous_2)","line":73,"loc":{"start":{"line":73,"column":17},"end":{"line":73,"column":39}}},"3":{"name":"(anonymous_3)","line":78,"loc":{"start":{"line":78,"column":37},"end":{"line":78,"column":57}}},"4":{"name":"(anonymous_4)","line":108,"loc":{"start":{"line":108,"column":25},"end":{"line":108,"column":60}}},"5":{"name":"(anonymous_5)","line":133,"loc":{"start":{"line":133,"column":36},"end":{"line":133,"column":49}}},"6":{"name":"(anonymous_6)","line":150,"loc":{"start":{"line":150,"column":26},"end":{"line":150,"column":46}}},"7":{"name":"(anonymous_7)","line":152,"loc":{"start":{"line":152,"column":25},"end":{"line":152,"column":44}}},"8":{"name":"(anonymous_8)","line":177,"loc":{"start":{"line":177,"column":29},"end":{"line":177,"column":54}}},"9":{"name":"(anonymous_9)","line":180,"loc":{"start":{"line":180,"column":25},"end":{"line":180,"column":44}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}},"4":{"start":{"line":16,"column":0},"end":{"line":25,"column":1}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":34}},"6":{"start":{"line":18,"column":2},"end":{"line":18,"column":34}},"7":{"start":{"line":19,"column":2},"end":{"line":19,"column":31}},"8":{"start":{"line":20,"column":2},"end":{"line":20,"column":51}},"9":{"start":{"line":21,"column":2},"end":{"line":21,"column":35}},"10":{"start":{"line":22,"column":2},"end":{"line":22,"column":19}},"11":{"start":{"line":23,"column":2},"end":{"line":23,"column":34}},"12":{"start":{"line":24,"column":2},"end":{"line":24,"column":13}},"13":{"start":{"line":73,"column":0},"end":{"line":200,"column":2}},"14":{"start":{"line":78,"column":2},"end":{"line":97,"column":5}},"15":{"start":{"line":79,"column":4},"end":{"line":84,"column":5}},"16":{"start":{"line":83,"column":6},"end":{"line":83,"column":20}},"17":{"start":{"line":86,"column":4},"end":{"line":86,"column":27}},"18":{"start":{"line":87,"column":4},"end":{"line":87,"column":44}},"19":{"start":{"line":88,"column":4},"end":{"line":90,"column":5}},"20":{"start":{"line":89,"column":6},"end":{"line":89,"column":40}},"21":{"start":{"line":91,"column":4},"end":{"line":91,"column":42}},"22":{"start":{"line":92,"column":4},"end":{"line":92,"column":50}},"23":{"start":{"line":93,"column":4},"end":{"line":93,"column":44}},"24":{"start":{"line":94,"column":4},"end":{"line":94,"column":44}},"25":{"start":{"line":95,"column":4},"end":{"line":95,"column":42}},"26":{"start":{"line":96,"column":4},"end":{"line":96,"column":11}},"27":{"start":{"line":108,"column":2},"end":{"line":126,"column":4}},"28":{"start":{"line":109,"column":4},"end":{"line":109,"column":39}},"29":{"start":{"line":110,"column":4},"end":{"line":110,"column":37}},"30":{"start":{"line":112,"column":4},"end":{"line":115,"column":5}},"31":{"start":{"line":113,"column":6},"end":{"line":113,"column":19}},"32":{"start":{"line":114,"column":6},"end":{"line":114,"column":19}},"33":{"start":{"line":116,"column":4},"end":{"line":116,"column":45}},"34":{"start":{"line":118,"column":4},"end":{"line":118,"column":43}},"35":{"start":{"line":119,"column":4},"end":{"line":123,"column":5}},"36":{"start":{"line":120,"column":6},"end":{"line":122,"column":7}},"37":{"start":{"line":121,"column":8},"end":{"line":121,"column":30}},"38":{"start":{"line":124,"column":4},"end":{"line":124,"column":27}},"39":{"start":{"line":125,"column":4},"end":{"line":125,"column":22}},"40":{"start":{"line":133,"column":2},"end":{"line":141,"column":4}},"41":{"start":{"line":134,"column":4},"end":{"line":134,"column":43}},"42":{"start":{"line":135,"column":4},"end":{"line":135,"column":51}},"43":{"start":{"line":136,"column":4},"end":{"line":136,"column":45}},"44":{"start":{"line":137,"column":4},"end":{"line":137,"column":45}},"45":{"start":{"line":138,"column":4},"end":{"line":138,"column":43}},"46":{"start":{"line":139,"column":4},"end":{"line":139,"column":31}},"47":{"start":{"line":140,"column":4},"end":{"line":140,"column":18}},"48":{"start":{"line":150,"column":2},"end":{"line":160,"column":4}},"49":{"start":{"line":151,"column":4},"end":{"line":151,"column":45}},"50":{"start":{"line":152,"column":4},"end":{"line":158,"column":7}},"51":{"start":{"line":153,"column":6},"end":{"line":156,"column":7}},"52":{"start":{"line":154,"column":8},"end":{"line":154,"column":29}},"53":{"start":{"line":154,"column":16},"end":{"line":154,"column":29}},"54":{"start":{"line":155,"column":8},"end":{"line":155,"column":15}},"55":{"start":{"line":157,"column":6},"end":{"line":157,"column":24}},"56":{"start":{"line":159,"column":4},"end":{"line":159,"column":22}},"57":{"start":{"line":177,"column":2},"end":{"line":199,"column":4}},"58":{"start":{"line":178,"column":4},"end":{"line":178,"column":45}},"59":{"start":{"line":180,"column":4},"end":{"line":197,"column":7}},"60":{"start":{"line":181,"column":6},"end":{"line":184,"column":7}},"61":{"start":{"line":182,"column":8},"end":{"line":182,"column":22}},"62":{"start":{"line":183,"column":8},"end":{"line":183,"column":26}},"63":{"start":{"line":185,"column":6},"end":{"line":185,"column":24}},"64":{"start":{"line":186,"column":6},"end":{"line":186,"column":93}},"65":{"start":{"line":187,"column":6},"end":{"line":195,"column":7}},"66":{"start":{"line":188,"column":8},"end":{"line":194,"column":9}},"67":{"start":{"line":189,"column":10},"end":{"line":192,"column":12}},"68":{"start":{"line":193,"column":10},"end":{"line":193,"column":16}},"69":{"start":{"line":196,"column":6},"end":{"line":196,"column":23}},"70":{"start":{"line":198,"column":4},"end":{"line":198,"column":22}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":12},"end":{"line":17,"column":19}},{"start":{"line":17,"column":23},"end":{"line":17,"column":33}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":14},"end":{"line":18,"column":23}},{"start":{"line":18,"column":27},"end":{"line":18,"column":33}}]},"3":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":13},"end":{"line":19,"column":21}},{"start":{"line":19,"column":25},"end":{"line":19,"column":30}}]},"4":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"5":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":4}},{"start":{"line":88,"column":4},"end":{"line":88,"column":4}}]},"6":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":112,"column":4}},{"start":{"line":112,"column":4},"end":{"line":112,"column":4}}]},"7":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":37}},{"start":{"line":112,"column":41},"end":{"line":112,"column":44}}]},"8":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":9},"end":{"line":116,"column":11}},{"start":{"line":116,"column":15},"end":{"line":116,"column":44}}]},"9":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":6},"end":{"line":120,"column":6}},{"start":{"line":120,"column":6},"end":{"line":120,"column":6}}]},"10":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":9},"end":{"line":151,"column":11}},{"start":{"line":151,"column":15},"end":{"line":151,"column":44}}]},"11":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":6},"end":{"line":153,"column":6}},{"start":{"line":153,"column":6},"end":{"line":153,"column":6}}]},"12":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":8}},{"start":{"line":154,"column":8},"end":{"line":154,"column":8}}]},"13":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":9},"end":{"line":178,"column":11}},{"start":{"line":178,"column":15},"end":{"line":178,"column":44}}]},"14":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":6},"end":{"line":181,"column":6}},{"start":{"line":181,"column":6},"end":{"line":181,"column":6}}]},"15":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":10},"end":{"line":181,"column":13}},{"start":{"line":181,"column":17},"end":{"line":181,"column":21}}]},"16":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":8},"end":{"line":188,"column":8}},{"start":{"line":188,"column":8},"end":{"line":188,"column":8}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var assert = require('assert');","var utils = require('../../lib/utils');","","/*!"," * Application management functions"," */","","var crypto = require('crypto');","","function generateKey(hmacKey, algorithm, encoding) {","  hmacKey = hmacKey || 'loopback';","  algorithm = algorithm || 'sha1';","  encoding = encoding || 'hex';","  var hmac = crypto.createHmac(algorithm, hmacKey);","  var buf = crypto.randomBytes(32);","  hmac.update(buf);","  var key = hmac.digest(encoding);","  return key;","}","","/**"," * Manage client applications and organize their users."," *"," * @property {String} id  Generated ID."," * @property {String} name Name; required."," * @property {String} description Text description"," * @property {String} icon String Icon image URL."," * @property {String} owner User ID of the developer who registers the application."," * @property {String} email E-mail address"," * @property {Boolean} emailVerified Whether the e-mail is verified."," * @property {String} url OAuth 2.0  application URL."," * @property {String}[] callbackUrls The OAuth 2.0 code/token callback URL."," * @property {String} status Status of the application; Either `production`, `sandbox` (default), or `disabled`."," * @property {Date} created Date Application object was created.  Default: current date."," * @property {Date} modified Date Application object was modified.  Default: current date."," *"," * @property {Object} pushSettings.apns APNS configuration, see the options"," *   below and also"," *   https://github.com/argon/node-apn/blob/master/doc/apn.markdown"," * @property {Boolean} pushSettings.apns.production Whether to use production Apple Push Notification Service (APNS) servers to send push notifications."," * If true, uses `gateway.push.apple.com:2195` and `feedback.push.apple.com:2196`."," * If false, uses `gateway.sandbox.push.apple.com:2195` and `feedback.sandbox.push.apple.com:2196`"," * @property {String} pushSettings.apns.certData The certificate data loaded from the cert.pem file (APNS)."," * @property {String} pushSettings.apns.keyData The key data loaded from the key.pem file (APNS)."," * @property {String} pushSettings.apns.pushOptions.gateway (APNS)."," * @property {Number} pushSettings.apns.pushOptions.port (APNS)."," * @property {String} pushSettings.apns.feedbackOptions.gateway  (APNS)."," * @property {Number} pushSettings.apns.feedbackOptions.port (APNS)."," * @property {Boolean} pushSettings.apns.feedbackOptions.batchFeedback (APNS)."," * @property {Number} pushSettings.apns.feedbackOptions.interval (APNS)."," * @property {String} pushSettings.gcm.serverApiKey: Google Cloud Messaging API key."," *"," * @property {Boolean} authenticationEnabled"," * @property {Boolean} anonymousAllowed"," * @property {Array} authenticationSchemes List of authentication schemes"," *  (see below)."," * @property {String} authenticationSchemes.scheme Scheme name."," *   Supported values: `local`, `facebook`, `google`,"," *   `twitter`, `linkedin`, `github`."," * @property {Object} authenticationSchemes.credential"," *   Scheme-specific credentials."," *"," * @class Application"," * @inherits {PersistedModel}"," */","","module.exports = function(Application) {","  /*!","   * A hook to generate keys before creation","   * @param next","   */","  Application.observe('before save', function(ctx, next) {","    if (!ctx.instance) {","      // Partial update - don't generate new keys","      // NOTE(bajtos) This also means that an atomic updateOrCreate","      // will not generate keys when a new record is creatd","      return next();","    }","","    var app = ctx.instance;","    app.created = app.modified = new Date();","    if (!app.id) {","      app.id = generateKey('id', 'md5');","    }","    app.clientKey = generateKey('client');","    app.javaScriptKey = generateKey('javaScript');","    app.restApiKey = generateKey('restApi');","    app.windowsKey = generateKey('windows');","    app.masterKey = generateKey('master');","    next();","  });","","  /**","   * Register a new application","   * @param {String} owner Owner's user ID.","   * @param {String} name  Name of the application","   * @param {Object} options  Other options","   * @callback {Function} callback  Callback function","   * @param {Error} err","   * @promise","   */","  Application.register = function(owner, name, options, cb) {","    assert(owner, 'owner is required');","    assert(name, 'name is required');","","    if (typeof options === 'function' && !cb) {","      cb = options;","      options = {};","    }","    cb = cb || utils.createPromiseCallback();","","    var props = {owner: owner, name: name};","    for (var p in options) {","      if (!(p in props)) {","        props[p] = options[p];","      }","    }","    this.create(props, cb);","    return cb.promise;","  };","","  /**","   * Reset keys for the application instance","   * @callback {Function} callback","   * @param {Error} err","   */","  Application.prototype.resetKeys = function(cb) {","    this.clientKey = generateKey('client');","    this.javaScriptKey = generateKey('javaScript');","    this.restApiKey = generateKey('restApi');","    this.windowsKey = generateKey('windows');","    this.masterKey = generateKey('master');","    this.modified = new Date();","    this.save(cb);","  };","","  /**","   * Reset keys for a given application by the appId","   * @param {Any} appId","   * @callback {Function} callback","   * @param {Error} err","   * @promise","   */","  Application.resetKeys = function(appId, cb) {","    cb = cb || utils.createPromiseCallback();","    this.findById(appId, function(err, app) {","      if (err) {","        if (cb) cb(err, app);","        return;","      }","      app.resetKeys(cb);","    });","    return cb.promise;","  };","","  /**","   * Authenticate the application id and key.","   *","   * @param {Any} appId","   * @param {String} key","   * @callback {Function} callback","   * @param {Error} err","   * @param {String} matched The matching key; one of:","   * - clientKey","   * - javaScriptKey","   * - restApiKey","   * - windowsKey","   * - masterKey","   * @promise","   */","  Application.authenticate = function(appId, key, cb) {","    cb = cb || utils.createPromiseCallback();","","    this.findById(appId, function(err, app) {","      if (err || !app) {","        cb(err, null);","        return cb.promise;","      }","      var result = null;","      var keyNames = ['clientKey', 'javaScriptKey', 'restApiKey', 'windowsKey', 'masterKey'];","      for (var i = 0; i < keyNames.length; i++) {","        if (app[keyNames[i]] === key) {","          result = {","            application: app,","            keyType: keyNames[i],","          };","          break;","        }","      }","      cb(null, result);","    });","    return cb.promise;","  };","};",""],"l":{"7":1,"8":1,"14":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"73":1,"78":1,"79":0,"83":0,"86":0,"87":0,"88":0,"89":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"108":1,"109":0,"110":0,"112":0,"113":0,"114":0,"116":0,"118":0,"119":0,"120":0,"121":0,"124":0,"125":0,"133":1,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"157":0,"159":0,"177":1,"178":0,"180":0,"181":0,"182":0,"183":0,"185":0,"186":0,"187":0,"188":0,"189":0,"193":0,"196":0,"198":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/access-token.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/access-token.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":36,"loc":{"start":{"line":36,"column":17},"end":{"line":36,"column":39}}},"2":{"name":"(anonymous_2)","line":55,"loc":{"start":{"line":55,"column":36},"end":{"line":55,"column":49}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":64},"end":{"line":56,"column":84}}},"4":{"name":"(anonymous_4)","line":68,"loc":{"start":{"line":68,"column":37},"end":{"line":68,"column":57}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":36},"end":{"line":74,"column":54}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":31},"end":{"line":91,"column":58}}},"7":{"name":"(anonymous_7)","line":100,"loc":{"start":{"line":100,"column":24},"end":{"line":100,"column":45}}},"8":{"name":"(anonymous_8)","line":104,"loc":{"start":{"line":104,"column":25},"end":{"line":104,"column":48}}},"9":{"name":"(anonymous_9)","line":121,"loc":{"start":{"line":121,"column":23},"end":{"line":121,"column":34}}},"10":{"name":"(anonymous_10)","line":135,"loc":{"start":{"line":135,"column":35},"end":{"line":135,"column":48}}},"11":{"name":"(anonymous_11)","line":153,"loc":{"start":{"line":153,"column":27},"end":{"line":153,"column":38}}},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":25},"end":{"line":170,"column":36}}},"13":{"name":"(anonymous_13)","line":174,"loc":{"start":{"line":174,"column":21},"end":{"line":174,"column":35}}},"14":{"name":"(anonymous_14)","line":179,"loc":{"start":{"line":179,"column":23},"end":{"line":179,"column":34}}},"15":{"name":"tokenIdForRequest","line":185,"loc":{"start":{"line":185,"column":2},"end":{"line":185,"column":43}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":45}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":31}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":26}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":27}},"6":{"start":{"line":36,"column":0},"end":{"line":253,"column":2}},"7":{"start":{"line":45,"column":2},"end":{"line":45,"column":62}},"8":{"start":{"line":55,"column":2},"end":{"line":63,"column":4}},"9":{"start":{"line":56,"column":4},"end":{"line":62,"column":7}},"10":{"start":{"line":57,"column":6},"end":{"line":61,"column":7}},"11":{"start":{"line":58,"column":8},"end":{"line":58,"column":16}},"12":{"start":{"line":60,"column":8},"end":{"line":60,"column":23}},"13":{"start":{"line":68,"column":2},"end":{"line":79,"column":5}},"14":{"start":{"line":69,"column":4},"end":{"line":72,"column":5}},"15":{"start":{"line":71,"column":6},"end":{"line":71,"column":20}},"16":{"start":{"line":74,"column":4},"end":{"line":78,"column":7}},"17":{"start":{"line":75,"column":6},"end":{"line":75,"column":32}},"18":{"start":{"line":75,"column":15},"end":{"line":75,"column":32}},"19":{"start":{"line":76,"column":6},"end":{"line":76,"column":27}},"20":{"start":{"line":77,"column":6},"end":{"line":77,"column":13}},"21":{"start":{"line":91,"column":2},"end":{"line":125,"column":4}},"22":{"start":{"line":92,"column":4},"end":{"line":95,"column":5}},"23":{"start":{"line":93,"column":6},"end":{"line":93,"column":19}},"24":{"start":{"line":94,"column":6},"end":{"line":94,"column":19}},"25":{"start":{"line":97,"column":4},"end":{"line":97,"column":45}},"26":{"start":{"line":99,"column":4},"end":{"line":124,"column":5}},"27":{"start":{"line":100,"column":6},"end":{"line":119,"column":9}},"28":{"start":{"line":101,"column":8},"end":{"line":118,"column":9}},"29":{"start":{"line":102,"column":10},"end":{"line":102,"column":18}},"30":{"start":{"line":103,"column":15},"end":{"line":118,"column":9}},"31":{"start":{"line":104,"column":10},"end":{"line":115,"column":13}},"32":{"start":{"line":105,"column":12},"end":{"line":114,"column":13}},"33":{"start":{"line":106,"column":14},"end":{"line":106,"column":22}},"34":{"start":{"line":107,"column":19},"end":{"line":114,"column":13}},"35":{"start":{"line":108,"column":14},"end":{"line":108,"column":30}},"36":{"start":{"line":110,"column":14},"end":{"line":110,"column":61}},"37":{"start":{"line":111,"column":14},"end":{"line":111,"column":44}},"38":{"start":{"line":112,"column":14},"end":{"line":112,"column":39}},"39":{"start":{"line":113,"column":14},"end":{"line":113,"column":20}},"40":{"start":{"line":117,"column":10},"end":{"line":117,"column":15}},"41":{"start":{"line":121,"column":6},"end":{"line":123,"column":9}},"42":{"start":{"line":122,"column":8},"end":{"line":122,"column":13}},"43":{"start":{"line":135,"column":2},"end":{"line":183,"column":4}},"44":{"start":{"line":136,"column":4},"end":{"line":182,"column":5}},"45":{"start":{"line":137,"column":6},"end":{"line":140,"column":8}},"46":{"start":{"line":141,"column":6},"end":{"line":141,"column":59}},"47":{"start":{"line":142,"column":6},"end":{"line":142,"column":47}},"48":{"start":{"line":143,"column":6},"end":{"line":143,"column":56}},"49":{"start":{"line":145,"column":6},"end":{"line":145,"column":41}},"50":{"start":{"line":146,"column":6},"end":{"line":146,"column":52}},"51":{"start":{"line":147,"column":6},"end":{"line":147,"column":54}},"52":{"start":{"line":150,"column":6},"end":{"line":157,"column":7}},"53":{"start":{"line":151,"column":8},"end":{"line":151,"column":66}},"54":{"start":{"line":152,"column":8},"end":{"line":156,"column":9}},"55":{"start":{"line":153,"column":10},"end":{"line":155,"column":13}},"56":{"start":{"line":154,"column":12},"end":{"line":154,"column":35}},"57":{"start":{"line":159,"column":6},"end":{"line":159,"column":27}},"58":{"start":{"line":160,"column":6},"end":{"line":160,"column":43}},"59":{"start":{"line":161,"column":6},"end":{"line":161,"column":50}},"60":{"start":{"line":162,"column":6},"end":{"line":162,"column":35}},"61":{"start":{"line":163,"column":6},"end":{"line":163,"column":78}},"62":{"start":{"line":164,"column":6},"end":{"line":164,"column":48}},"63":{"start":{"line":165,"column":6},"end":{"line":167,"column":39}},"64":{"start":{"line":169,"column":6},"end":{"line":177,"column":7}},"65":{"start":{"line":170,"column":8},"end":{"line":172,"column":11}},"66":{"start":{"line":171,"column":10},"end":{"line":171,"column":28}},"67":{"start":{"line":174,"column":8},"end":{"line":176,"column":11}},"68":{"start":{"line":175,"column":10},"end":{"line":175,"column":27}},"69":{"start":{"line":179,"column":6},"end":{"line":181,"column":9}},"70":{"start":{"line":180,"column":8},"end":{"line":180,"column":14}},"71":{"start":{"line":185,"column":2},"end":{"line":252,"column":3}},"72":{"start":{"line":186,"column":4},"end":{"line":186,"column":38}},"73":{"start":{"line":187,"column":4},"end":{"line":187,"column":40}},"74":{"start":{"line":188,"column":4},"end":{"line":188,"column":40}},"75":{"start":{"line":189,"column":4},"end":{"line":189,"column":14}},"76":{"start":{"line":190,"column":4},"end":{"line":190,"column":19}},"77":{"start":{"line":193,"column":4},"end":{"line":197,"column":5}},"78":{"start":{"line":194,"column":6},"end":{"line":194,"column":47}},"79":{"start":{"line":195,"column":6},"end":{"line":195,"column":68}},"80":{"start":{"line":196,"column":6},"end":{"line":196,"column":66}},"81":{"start":{"line":199,"column":4},"end":{"line":210,"column":5}},"82":{"start":{"line":200,"column":6},"end":{"line":200,"column":28}},"83":{"start":{"line":202,"column":6},"end":{"line":205,"column":18}},"84":{"start":{"line":207,"column":6},"end":{"line":209,"column":7}},"85":{"start":{"line":208,"column":8},"end":{"line":208,"column":18}},"86":{"start":{"line":212,"column":4},"end":{"line":240,"column":5}},"87":{"start":{"line":213,"column":6},"end":{"line":213,"column":34}},"88":{"start":{"line":215,"column":6},"end":{"line":239,"column":7}},"89":{"start":{"line":218,"column":8},"end":{"line":237,"column":9}},"90":{"start":{"line":219,"column":10},"end":{"line":219,"column":31}},"91":{"start":{"line":221,"column":10},"end":{"line":221,"column":45}},"92":{"start":{"line":222,"column":10},"end":{"line":222,"column":36}},"93":{"start":{"line":223,"column":15},"end":{"line":237,"column":9}},"94":{"start":{"line":224,"column":10},"end":{"line":224,"column":31}},"95":{"start":{"line":225,"column":10},"end":{"line":225,"column":59}},"96":{"start":{"line":233,"column":10},"end":{"line":233,"column":48}},"97":{"start":{"line":234,"column":10},"end":{"line":236,"column":11}},"98":{"start":{"line":235,"column":12},"end":{"line":235,"column":73}},"99":{"start":{"line":238,"column":8},"end":{"line":238,"column":18}},"100":{"start":{"line":242,"column":4},"end":{"line":250,"column":5}},"101":{"start":{"line":243,"column":6},"end":{"line":249,"column":7}},"102":{"start":{"line":244,"column":8},"end":{"line":244,"column":43}},"103":{"start":{"line":246,"column":8},"end":{"line":248,"column":9}},"104":{"start":{"line":247,"column":10},"end":{"line":247,"column":20}},"105":{"start":{"line":251,"column":4},"end":{"line":251,"column":16}}},"branchMap":{"1":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":41}},{"start":{"line":56,"column":45},"end":{"line":56,"column":62}}]},"2":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]},"3":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"4":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":21}},{"start":{"line":69,"column":25},"end":{"line":69,"column":40}}]},"5":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":6}},{"start":{"line":75,"column":6},"end":{"line":75,"column":6}}]},"6":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"7":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":24}},{"start":{"line":92,"column":28},"end":{"line":92,"column":57}}]},"8":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"9":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":8}},{"start":{"line":101,"column":8},"end":{"line":101,"column":8}}]},"10":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":15},"end":{"line":103,"column":15}},{"start":{"line":103,"column":15},"end":{"line":103,"column":15}}]},"11":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":12}},{"start":{"line":105,"column":12},"end":{"line":105,"column":12}}]},"12":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":19},"end":{"line":107,"column":19}},{"start":{"line":107,"column":19},"end":{"line":107,"column":19}}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":10},"end":{"line":138,"column":22}},{"start":{"line":138,"column":26},"end":{"line":138,"column":68}}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":17},"end":{"line":147,"column":29}},{"start":{"line":147,"column":33},"end":{"line":147,"column":53}}]},"15":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":6},"end":{"line":150,"column":6}},{"start":{"line":150,"column":6},"end":{"line":150,"column":6}}]},"16":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":152,"column":8}},{"start":{"line":152,"column":8},"end":{"line":152,"column":8}}]},"17":{"line":163,"type":"binary-expr","locations":[{"start":{"line":163,"column":36},"end":{"line":163,"column":40}},{"start":{"line":163,"column":44},"end":{"line":163,"column":76}}]},"18":{"line":165,"type":"cond-expr","locations":[{"start":{"line":166,"column":8},"end":{"line":166,"column":28}},{"start":{"line":167,"column":8},"end":{"line":167,"column":38}}]},"19":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":6},"end":{"line":169,"column":6}},{"start":{"line":169,"column":6},"end":{"line":169,"column":6}}]},"20":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":17},"end":{"line":186,"column":31}},{"start":{"line":186,"column":35},"end":{"line":186,"column":37}}]},"21":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":18},"end":{"line":187,"column":33}},{"start":{"line":187,"column":37},"end":{"line":187,"column":39}}]},"22":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":18},"end":{"line":188,"column":33}},{"start":{"line":188,"column":37},"end":{"line":188,"column":39}}]},"23":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"24":{"line":202,"type":"cond-expr","locations":[{"start":{"line":202,"column":59},"end":{"line":202,"column":76}},{"start":{"line":203,"column":8},"end":{"line":205,"column":17}}]},"25":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":11},"end":{"line":202,"column":21}},{"start":{"line":202,"column":25},"end":{"line":202,"column":56}}]},"26":{"line":203,"type":"cond-expr","locations":[{"start":{"line":203,"column":52},"end":{"line":203,"column":67}},{"start":{"line":204,"column":8},"end":{"line":205,"column":17}}]},"27":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":16}},{"start":{"line":203,"column":20},"end":{"line":203,"column":49}}]},"28":{"line":204,"type":"cond-expr","locations":[{"start":{"line":204,"column":54},"end":{"line":204,"column":70}},{"start":{"line":205,"column":8},"end":{"line":205,"column":17}}]},"29":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":8},"end":{"line":204,"column":17}},{"start":{"line":204,"column":21},"end":{"line":204,"column":51}}]},"30":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":6},"end":{"line":207,"column":6}},{"start":{"line":207,"column":6},"end":{"line":207,"column":6}}]},"31":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":6},"end":{"line":215,"column":6}},{"start":{"line":215,"column":6},"end":{"line":215,"column":6}}]},"32":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":8}},{"start":{"line":218,"column":8},"end":{"line":218,"column":8}}]},"33":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":15},"end":{"line":223,"column":15}},{"start":{"line":223,"column":15},"end":{"line":223,"column":15}}]},"34":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":10},"end":{"line":234,"column":10}},{"start":{"line":234,"column":10},"end":{"line":234,"column":10}}]},"35":{"line":235,"type":"cond-expr","locations":[{"start":{"line":235,"column":53},"end":{"line":235,"column":61}},{"start":{"line":235,"column":64},"end":{"line":235,"column":72}}]},"36":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":4},"end":{"line":242,"column":4}},{"start":{"line":242,"column":4},"end":{"line":242,"column":4}}]},"37":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":8},"end":{"line":246,"column":8}},{"start":{"line":246,"column":8},"end":{"line":246,"column":8}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/*!"," * Module Dependencies."," */","","'use strict';","var g = require('../../lib/globalize');","var loopback = require('../../lib/loopback');","var assert = require('assert');","var uid = require('uid2');","var DEFAULT_TOKEN_LEN = 64;","","/**"," * Token based authentication and access control."," *"," * **Default ACLs**"," *"," *  - DENY EVERYONE `*`"," *  - ALLOW EVERYONE create"," *"," * @property {String} id Generated token ID."," * @property {Number} ttl Time to live in seconds, 2 weeks by default."," * @property {Date} created When the token was created."," * @property {Object} settings Extends the `Model.settings` object."," * @property {Number} settings.accessTokenIdLength Length of the base64-encoded string access token. Default value is 64."," * Increase the length for a more secure access token."," *"," * @class AccessToken"," * @inherits {PersistedModel}"," */","","module.exports = function(AccessToken) {","  /**","   * Anonymous Token","   *","   * ```js","   * assert(AccessToken.ANONYMOUS.id === '$anonymous');","   * ```","   */","","  AccessToken.ANONYMOUS = new AccessToken({id: '$anonymous'});","","  /**","   * Create a cryptographically random access token id.","   *","   * @callback {Function} callback","   * @param {Error} err","   * @param {String} token","   */","","  AccessToken.createAccessTokenId = function(fn) {","    uid(this.settings.accessTokenIdLength || DEFAULT_TOKEN_LEN, function(err, guid) {","      if (err) {","        fn(err);","      } else {","        fn(null, guid);","      }","    });","  };","","  /*!","   * Hook to create accessToken id.","   */","  AccessToken.observe('before save', function(ctx, next) {","    if (!ctx.instance || ctx.instance.id) {","      // We are running a partial update or the instance already has an id","      return next();","    }","","    AccessToken.createAccessTokenId(function(err, id) {","      if (err) return next(err);","      ctx.instance.id = id;","      next();","    });","  });","","  /**","   * Find a token for the given `ServerRequest`.","   *","   * @param {ServerRequest} req","   * @param {Object} [options] Options for finding the token","   * @callback {Function} callback","   * @param {Error} err","   * @param {AccessToken} token","   */","","  AccessToken.findForRequest = function(req, options, cb) {","    if (cb === undefined && typeof options === 'function') {","      cb = options;","      options = {};","    }","","    var id = tokenIdForRequest(req, options);","","    if (id) {","      this.findById(id, function(err, token) {","        if (err) {","          cb(err);","        } else if (token) {","          token.validate(function(err, isValid) {","            if (err) {","              cb(err);","            } else if (isValid) {","              cb(null, token);","            } else {","              var e = new Error(g.f('Invalid Access Token'));","              e.status = e.statusCode = 401;","              e.code = 'INVALID_TOKEN';","              cb(e);","            }","          });","        } else {","          cb();","        }","      });","    } else {","      process.nextTick(function() {","        cb();","      });","    }","  };","","  /**","   * Validate the token.","   *","   * @callback {Function} callback","   * @param {Error} err","   * @param {Boolean} isValid","   */","","  AccessToken.prototype.validate = function(cb) {","    try {","      assert(","          this.created && typeof this.created.getTime === 'function',","        'token.created must be a valid Date'","      );","      assert(this.ttl !== 0, 'token.ttl must be not be 0');","      assert(this.ttl, 'token.ttl must exist');","      assert(this.ttl >= -1, 'token.ttl must be >= -1');","","      var AccessToken = this.constructor;","      var userRelation = AccessToken.relations.user; // may not be set up","      var User = userRelation && userRelation.modelTo;","","      // redefine user model if accessToken's principalType is available","      if (this.principalType) {","        User = AccessToken.registry.findModel(this.principalType);","        if (!User) {","          process.nextTick(function() {","            return cb(null, false);","          });","        }","      }","","      var now = Date.now();","      var created = this.created.getTime();","      var elapsedSeconds = (now - created) / 1000;","      var secondsToLive = this.ttl;","      var eternalTokensAllowed = !!(User && User.settings.allowEternalTokens);","      var isEternalToken = secondsToLive === -1;","      var isValid = isEternalToken ?","        eternalTokensAllowed :","        elapsedSeconds < secondsToLive;","","      if (isValid) {","        process.nextTick(function() {","          cb(null, isValid);","        });","      } else {","        this.destroy(function(err) {","          cb(err, isValid);","        });","      }","    } catch (e) {","      process.nextTick(function() {","        cb(e);","      });","    }","  };","","  function tokenIdForRequest(req, options) {","    var params = options.params || [];","    var headers = options.headers || [];","    var cookies = options.cookies || [];","    var i = 0;","    var length, id;","","    // https://github.com/strongloop/loopback/issues/1326","    if (options.searchDefaultTokenKeys !== false) {","      params = params.concat(['access_token']);","      headers = headers.concat(['X-Access-Token', 'authorization']);","      cookies = cookies.concat(['access_token', 'authorization']);","    }","","    for (length = params.length; i < length; i++) {","      var param = params[i];","      // replacement for deprecated req.param()","      id = req.params && req.params[param] !== undefined ? req.params[param] :","        req.body && req.body[param] !== undefined ? req.body[param] :","        req.query && req.query[param] !== undefined ? req.query[param] :","        undefined;","","      if (typeof id === 'string') {","        return id;","      }","    }","","    for (i = 0, length = headers.length; i < length; i++) {","      id = req.header(headers[i]);","","      if (typeof id === 'string') {","        // Add support for oAuth 2.0 bearer token","        // http://tools.ietf.org/html/rfc6750","        if (id.indexOf('Bearer ') === 0) {","          id = id.substring(7);","          // Decode from base64","          var buf = new Buffer(id, 'base64');","          id = buf.toString('utf8');","        } else if (/^Basic /i.test(id)) {","          id = id.substring(6);","          id = (new Buffer(id, 'base64')).toString('utf8');","          // The spec says the string is user:pass, so if we see both parts","          // we will assume the longer of the two is the token, so we will","          // extract \"a2b2c3\" from:","          //   \"a2b2c3\"","          //   \"a2b2c3:\"   (curl http://a2b2c3@localhost:3000/)","          //   \"token:a2b2c3\" (curl http://token:a2b2c3@localhost:3000/)","          //   \":a2b2c3\"","          var parts = /^([^:]*):(.*)$/.exec(id);","          if (parts) {","            id = parts[2].length > parts[1].length ? parts[2] : parts[1];","          }","        }","        return id;","      }","    }","","    if (req.signedCookies) {","      for (i = 0, length = cookies.length; i < length; i++) {","        id = req.signedCookies[cookies[i]];","","        if (typeof id === 'string') {","          return id;","        }","      }","    }","    return null;","  }","};",""],"l":{"11":1,"12":1,"13":1,"14":1,"15":1,"36":1,"45":1,"55":1,"56":0,"57":0,"58":0,"60":0,"68":1,"69":0,"71":0,"74":0,"75":0,"76":0,"77":0,"91":1,"92":0,"93":0,"94":0,"97":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"110":0,"111":0,"112":0,"113":0,"117":0,"121":0,"122":0,"135":1,"136":0,"137":0,"141":0,"142":0,"143":0,"145":0,"146":0,"147":0,"150":0,"151":0,"152":0,"153":0,"154":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"169":0,"170":0,"171":0,"174":0,"175":0,"179":0,"180":0,"185":1,"186":0,"187":0,"188":0,"189":0,"190":0,"193":0,"194":0,"195":0,"196":0,"199":0,"200":0,"202":0,"207":0,"208":0,"212":0,"213":0,"215":0,"218":0,"219":0,"221":0,"222":0,"223":0,"224":0,"225":0,"233":0,"234":0,"235":0,"238":0,"242":0,"243":0,"244":0,"246":0,"247":0,"251":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/user.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/user.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":1,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":1,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":1,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":1,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":1,"253":0,"254":0,"255":0,"256":1,"257":0,"258":0,"259":1,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":1,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":1,"318":0,"319":0,"320":0,"321":1,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":1,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":1,"352":1,"353":1,"354":1,"355":1,"356":1,"357":0,"358":0,"359":0,"360":1,"361":0,"362":0,"363":0,"364":0,"365":0,"366":1,"367":0,"368":0,"369":0,"370":0,"371":1,"372":1,"373":0,"374":0,"375":0,"376":0,"377":1,"378":1,"379":1,"380":0,"381":1,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":1,"389":1,"390":1,"391":1,"392":1,"393":1,"394":0,"395":0,"396":1,"397":1,"398":1,"399":1,"400":1,"401":0,"402":0,"403":0,"404":1,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":1,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":1,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":1,"459":0,"460":0,"461":0,"462":0,"463":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0,0,0],"71":[0,0,0,0],"72":[0,0,0,0],"73":[0,0],"74":[0,0,0,0],"75":[0,0],"76":[0,0],"77":[0,0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0,0],"118":[0,0],"119":[1,1],"120":[1,1],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,1],"134":[1,0],"135":[0,0],"136":[0,0,0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0,0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},"fnMap":{"1":{"name":"(anonymous_1)","line":77,"loc":{"start":{"line":77,"column":17},"end":{"line":77,"column":32}}},"2":{"name":"(anonymous_2)","line":89,"loc":{"start":{"line":89,"column":37},"end":{"line":89,"column":64}}},"3":{"name":"splitPrincipal","line":112,"loc":{"start":{"line":112,"column":2},"end":{"line":112,"column":48}}},"4":{"name":"(anonymous_4)","line":132,"loc":{"start":{"line":132,"column":30},"end":{"line":132,"column":83}}},"5":{"name":"(anonymous_5)","line":181,"loc":{"start":{"line":181,"column":15},"end":{"line":181,"column":50}}},"6":{"name":"(anonymous_6)","line":192,"loc":{"start":{"line":192,"column":28},"end":{"line":192,"column":42}}},"7":{"name":"(anonymous_7)","line":224,"loc":{"start":{"line":224,"column":33},"end":{"line":224,"column":53}}},"8":{"name":"tokenHandler","line":229,"loc":{"start":{"line":229,"column":6},"end":{"line":229,"column":40}}},"9":{"name":"(anonymous_9)","line":247,"loc":{"start":{"line":247,"column":47},"end":{"line":247,"column":70}}},"10":{"name":"(anonymous_10)","line":294,"loc":{"start":{"line":294,"column":16},"end":{"line":294,"column":38}}},"11":{"name":"(anonymous_11)","line":305,"loc":{"start":{"line":305,"column":61},"end":{"line":305,"column":81}}},"12":{"name":"(anonymous_12)","line":319,"loc":{"start":{"line":319,"column":32},"end":{"line":319,"column":52}}},"13":{"name":"(anonymous_13)","line":322,"loc":{"start":{"line":322,"column":57},"end":{"line":322,"column":77}}},"14":{"name":"(anonymous_14)","line":325,"loc":{"start":{"line":325,"column":25},"end":{"line":325,"column":37}}},"15":{"name":"(anonymous_15)","line":343,"loc":{"start":{"line":343,"column":31},"end":{"line":343,"column":51}}},"16":{"name":"(anonymous_16)","line":346,"loc":{"start":{"line":346,"column":43},"end":{"line":346,"column":66}}},"17":{"name":"(anonymous_17)","line":368,"loc":{"start":{"line":368,"column":24},"end":{"line":368,"column":80}}},"18":{"name":"(anonymous_18)","line":406,"loc":{"start":{"line":406,"column":34},"end":{"line":406,"column":82}}},"19":{"name":"(anonymous_19)","line":477,"loc":{"start":{"line":477,"column":26},"end":{"line":477,"column":48}}},"20":{"name":"(anonymous_20)","line":535,"loc":{"start":{"line":535,"column":25},"end":{"line":535,"column":46}}},"21":{"name":"(anonymous_21)","line":539,"loc":{"start":{"line":539,"column":16},"end":{"line":539,"column":30}}},"22":{"name":"sendEmail","line":549,"loc":{"start":{"line":549,"column":4},"end":{"line":549,"column":29}}},"23":{"name":"(anonymous_23)","line":565,"loc":{"start":{"line":565,"column":34},"end":{"line":565,"column":54}}},"24":{"name":"setHtmlContentAndSend","line":573,"loc":{"start":{"line":573,"column":6},"end":{"line":573,"column":43}}},"25":{"name":"(anonymous_25)","line":580,"loc":{"start":{"line":580,"column":28},"end":{"line":580,"column":49}}},"26":{"name":"createVerificationEmailBody","line":592,"loc":{"start":{"line":592,"column":2},"end":{"line":592,"column":52}}},"27":{"name":"(anonymous_27)","line":608,"loc":{"start":{"line":608,"column":35},"end":{"line":608,"column":54}}},"28":{"name":"(anonymous_28)","line":609,"loc":{"start":{"line":609,"column":27},"end":{"line":609,"column":46}}},"29":{"name":"(anonymous_29)","line":624,"loc":{"start":{"line":624,"column":17},"end":{"line":624,"column":52}}},"30":{"name":"(anonymous_30)","line":626,"loc":{"start":{"line":626,"column":23},"end":{"line":626,"column":43}}},"31":{"name":"(anonymous_31)","line":633,"loc":{"start":{"line":633,"column":20},"end":{"line":633,"column":34}}},"32":{"name":"(anonymous_32)","line":669,"loc":{"start":{"line":669,"column":23},"end":{"line":669,"column":45}}},"33":{"name":"(anonymous_33)","line":695,"loc":{"start":{"line":695,"column":38},"end":{"line":695,"column":58}}},"34":{"name":"(anonymous_34)","line":714,"loc":{"start":{"line":714,"column":34},"end":{"line":714,"column":61}}},"35":{"name":"(anonymous_35)","line":734,"loc":{"start":{"line":734,"column":22},"end":{"line":734,"column":38}}},"36":{"name":"(anonymous_36)","line":740,"loc":{"start":{"line":740,"column":26},"end":{"line":740,"column":42}}},"37":{"name":"(anonymous_37)","line":756,"loc":{"start":{"line":756,"column":40},"end":{"line":756,"column":71}}},"38":{"name":"(anonymous_38)","line":790,"loc":{"start":{"line":790,"column":15},"end":{"line":790,"column":26}}},"39":{"name":"(anonymous_39)","line":799,"loc":{"start":{"line":799,"column":29},"end":{"line":799,"column":45}}},"40":{"name":"(anonymous_40)","line":807,"loc":{"start":{"line":807,"column":32},"end":{"line":807,"column":48}}},"41":{"name":"(anonymous_41)","line":821,"loc":{"start":{"line":821,"column":37},"end":{"line":821,"column":63}}},"42":{"name":"(anonymous_42)","line":857,"loc":{"start":{"line":857,"column":54},"end":{"line":857,"column":68}}},"43":{"name":"(anonymous_43)","line":911,"loc":{"start":{"line":911,"column":37},"end":{"line":911,"column":63}}},"44":{"name":"normalizeEmailCase","line":964,"loc":{"start":{"line":964,"column":25},"end":{"line":964,"column":64}}},"45":{"name":"prepareForTokenInvalidation","line":972,"loc":{"start":{"line":972,"column":30},"end":{"line":972,"column":78}}},"46":{"name":"(anonymous_46)","line":983,"loc":{"start":{"line":983,"column":48},"end":{"line":983,"column":77}}},"47":{"name":"(anonymous_47)","line":985,"loc":{"start":{"line":985,"column":57},"end":{"line":985,"column":69}}},"48":{"name":"(anonymous_48)","line":999,"loc":{"start":{"line":999,"column":59},"end":{"line":999,"column":74}}},"49":{"name":"invalidateOtherTokens","line":1011,"loc":{"start":{"line":1011,"column":29},"end":{"line":1011,"column":71}}},"50":{"name":"(anonymous_50)","line":1021,"loc":{"start":{"line":1021,"column":64},"end":{"line":1021,"column":76}}},"51":{"name":"(anonymous_51)","line":1024,"loc":{"start":{"line":1024,"column":11},"end":{"line":1024,"column":23}}},"52":{"name":"emailValidator","line":1031,"loc":{"start":{"line":1031,"column":0},"end":{"line":1031,"column":35}}},"53":{"name":"joinUrlPath","line":1042,"loc":{"start":{"line":1042,"column":0},"end":{"line":1042,"column":27}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":33}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":45}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":39}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":27}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":26}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":31}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":29}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":11}},"11":{"start":{"line":21,"column":0},"end":{"line":31,"column":1}},"12":{"start":{"line":23,"column":2},"end":{"line":23,"column":29}},"13":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"14":{"start":{"line":26,"column":4},"end":{"line":26,"column":33}},"15":{"start":{"line":30,"column":2},"end":{"line":30,"column":31}},"16":{"start":{"line":33,"column":0},"end":{"line":33,"column":26}},"17":{"start":{"line":34,"column":0},"end":{"line":34,"column":35}},"18":{"start":{"line":35,"column":0},"end":{"line":35,"column":31}},"19":{"start":{"line":36,"column":0},"end":{"line":36,"column":31}},"20":{"start":{"line":38,"column":0},"end":{"line":38,"column":46}},"21":{"start":{"line":77,"column":0},"end":{"line":1029,"column":2}},"22":{"start":{"line":89,"column":2},"end":{"line":110,"column":4}},"23":{"start":{"line":90,"column":4},"end":{"line":94,"column":5}},"24":{"start":{"line":92,"column":6},"end":{"line":92,"column":19}},"25":{"start":{"line":93,"column":6},"end":{"line":93,"column":26}},"26":{"start":{"line":96,"column":4},"end":{"line":96,"column":45}},"27":{"start":{"line":98,"column":4},"end":{"line":102,"column":5}},"28":{"start":{"line":100,"column":6},"end":{"line":100,"column":20}},"29":{"start":{"line":101,"column":6},"end":{"line":101,"column":24}},"30":{"start":{"line":103,"column":4},"end":{"line":103,"column":28}},"31":{"start":{"line":104,"column":4},"end":{"line":104,"column":37}},"32":{"start":{"line":105,"column":4},"end":{"line":105,"column":77}},"33":{"start":{"line":106,"column":4},"end":{"line":108,"column":11}},"34":{"start":{"line":109,"column":4},"end":{"line":109,"column":22}},"35":{"start":{"line":112,"column":2},"end":{"line":123,"column":3}},"36":{"start":{"line":113,"column":4},"end":{"line":113,"column":29}},"37":{"start":{"line":114,"column":4},"end":{"line":116,"column":5}},"38":{"start":{"line":115,"column":6},"end":{"line":115,"column":19}},"39":{"start":{"line":117,"column":4},"end":{"line":117,"column":45}},"40":{"start":{"line":118,"column":4},"end":{"line":121,"column":5}},"41":{"start":{"line":119,"column":6},"end":{"line":119,"column":42}},"42":{"start":{"line":120,"column":6},"end":{"line":120,"column":63}},"43":{"start":{"line":122,"column":4},"end":{"line":122,"column":17}},"44":{"start":{"line":132,"column":2},"end":{"line":161,"column":4}},"45":{"start":{"line":133,"column":4},"end":{"line":133,"column":19}},"46":{"start":{"line":134,"column":4},"end":{"line":134,"column":36}},"47":{"start":{"line":135,"column":4},"end":{"line":159,"column":5}},"48":{"start":{"line":136,"column":6},"end":{"line":140,"column":7}},"49":{"start":{"line":137,"column":8},"end":{"line":137,"column":40}},"50":{"start":{"line":138,"column":13},"end":{"line":140,"column":7}},"51":{"start":{"line":139,"column":8},"end":{"line":139,"column":46}},"52":{"start":{"line":142,"column":6},"end":{"line":144,"column":7}},"53":{"start":{"line":143,"column":8},"end":{"line":143,"column":40}},"54":{"start":{"line":145,"column":6},"end":{"line":145,"column":16}},"55":{"start":{"line":146,"column":6},"end":{"line":158,"column":7}},"56":{"start":{"line":147,"column":8},"end":{"line":147,"column":66}},"57":{"start":{"line":148,"column":8},"end":{"line":148,"column":31}},"58":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"59":{"start":{"line":150,"column":10},"end":{"line":150,"column":33}},"60":{"start":{"line":152,"column":13},"end":{"line":158,"column":7}},"61":{"start":{"line":153,"column":8},"end":{"line":153,"column":69}},"62":{"start":{"line":154,"column":8},"end":{"line":154,"column":34}},"63":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"64":{"start":{"line":156,"column":10},"end":{"line":156,"column":33}},"65":{"start":{"line":160,"column":4},"end":{"line":160,"column":17}},"66":{"start":{"line":181,"column":2},"end":{"line":277,"column":4}},"67":{"start":{"line":182,"column":4},"end":{"line":182,"column":20}},"68":{"start":{"line":183,"column":4},"end":{"line":186,"column":5}},"69":{"start":{"line":184,"column":6},"end":{"line":184,"column":19}},"70":{"start":{"line":185,"column":6},"end":{"line":185,"column":26}},"71":{"start":{"line":188,"column":4},"end":{"line":188,"column":45}},"72":{"start":{"line":190,"column":4},"end":{"line":190,"column":30}},"73":{"start":{"line":191,"column":4},"end":{"line":197,"column":5}},"74":{"start":{"line":192,"column":6},"end":{"line":194,"column":9}},"75":{"start":{"line":193,"column":8},"end":{"line":193,"column":33}},"76":{"start":{"line":196,"column":6},"end":{"line":196,"column":38}},"77":{"start":{"line":199,"column":4},"end":{"line":199,"column":23}},"78":{"start":{"line":201,"column":4},"end":{"line":202,"column":36}},"79":{"start":{"line":203,"column":4},"end":{"line":205,"column":5}},"80":{"start":{"line":204,"column":6},"end":{"line":204,"column":52}},"81":{"start":{"line":206,"column":4},"end":{"line":207,"column":22}},"82":{"start":{"line":209,"column":4},"end":{"line":215,"column":5}},"83":{"start":{"line":210,"column":6},"end":{"line":210,"column":57}},"84":{"start":{"line":211,"column":6},"end":{"line":211,"column":28}},"85":{"start":{"line":212,"column":6},"end":{"line":212,"column":35}},"86":{"start":{"line":213,"column":6},"end":{"line":213,"column":15}},"87":{"start":{"line":214,"column":6},"end":{"line":214,"column":24}},"88":{"start":{"line":216,"column":4},"end":{"line":222,"column":5}},"89":{"start":{"line":217,"column":6},"end":{"line":217,"column":73}},"90":{"start":{"line":218,"column":6},"end":{"line":218,"column":28}},"91":{"start":{"line":219,"column":6},"end":{"line":219,"column":44}},"92":{"start":{"line":220,"column":6},"end":{"line":220,"column":15}},"93":{"start":{"line":221,"column":6},"end":{"line":221,"column":24}},"94":{"start":{"line":224,"column":4},"end":{"line":275,"column":7}},"95":{"start":{"line":225,"column":6},"end":{"line":225,"column":56}},"96":{"start":{"line":226,"column":6},"end":{"line":226,"column":36}},"97":{"start":{"line":227,"column":6},"end":{"line":227,"column":41}},"98":{"start":{"line":229,"column":6},"end":{"line":241,"column":7}},"99":{"start":{"line":230,"column":8},"end":{"line":230,"column":32}},"100":{"start":{"line":230,"column":17},"end":{"line":230,"column":32}},"101":{"start":{"line":231,"column":8},"end":{"line":239,"column":9}},"102":{"start":{"line":238,"column":10},"end":{"line":238,"column":35}},"103":{"start":{"line":240,"column":8},"end":{"line":240,"column":23}},"104":{"start":{"line":243,"column":6},"end":{"line":274,"column":7}},"105":{"start":{"line":244,"column":8},"end":{"line":244,"column":65}},"106":{"start":{"line":245,"column":8},"end":{"line":245,"column":25}},"107":{"start":{"line":246,"column":13},"end":{"line":274,"column":7}},"108":{"start":{"line":247,"column":8},"end":{"line":270,"column":11}},"109":{"start":{"line":248,"column":10},"end":{"line":269,"column":11}},"110":{"start":{"line":249,"column":12},"end":{"line":249,"column":73}},"111":{"start":{"line":250,"column":12},"end":{"line":250,"column":29}},"112":{"start":{"line":251,"column":17},"end":{"line":269,"column":11}},"113":{"start":{"line":252,"column":12},"end":{"line":265,"column":13}},"114":{"start":{"line":254,"column":14},"end":{"line":254,"column":56}},"115":{"start":{"line":255,"column":14},"end":{"line":255,"column":86}},"116":{"start":{"line":256,"column":14},"end":{"line":256,"column":35}},"117":{"start":{"line":257,"column":14},"end":{"line":257,"column":59}},"118":{"start":{"line":258,"column":14},"end":{"line":258,"column":22}},"119":{"start":{"line":260,"column":14},"end":{"line":264,"column":15}},"120":{"start":{"line":261,"column":16},"end":{"line":261,"column":70}},"121":{"start":{"line":263,"column":16},"end":{"line":263,"column":83}},"122":{"start":{"line":267,"column":12},"end":{"line":267,"column":88}},"123":{"start":{"line":268,"column":12},"end":{"line":268,"column":29}},"124":{"start":{"line":272,"column":8},"end":{"line":272,"column":88}},"125":{"start":{"line":273,"column":8},"end":{"line":273,"column":25}},"126":{"start":{"line":276,"column":4},"end":{"line":276,"column":22}},"127":{"start":{"line":294,"column":2},"end":{"line":317,"column":4}},"128":{"start":{"line":295,"column":4},"end":{"line":295,"column":45}},"129":{"start":{"line":297,"column":4},"end":{"line":297,"column":12}},"130":{"start":{"line":298,"column":4},"end":{"line":303,"column":5}},"131":{"start":{"line":299,"column":6},"end":{"line":299,"column":68}},"132":{"start":{"line":300,"column":6},"end":{"line":300,"column":23}},"133":{"start":{"line":301,"column":6},"end":{"line":301,"column":32}},"134":{"start":{"line":302,"column":6},"end":{"line":302,"column":24}},"135":{"start":{"line":305,"column":4},"end":{"line":315,"column":7}},"136":{"start":{"line":306,"column":6},"end":{"line":314,"column":7}},"137":{"start":{"line":307,"column":8},"end":{"line":307,"column":16}},"138":{"start":{"line":308,"column":13},"end":{"line":314,"column":7}},"139":{"start":{"line":309,"column":8},"end":{"line":309,"column":63}},"140":{"start":{"line":310,"column":8},"end":{"line":310,"column":25}},"141":{"start":{"line":311,"column":8},"end":{"line":311,"column":16}},"142":{"start":{"line":313,"column":8},"end":{"line":313,"column":13}},"143":{"start":{"line":316,"column":4},"end":{"line":316,"column":22}},"144":{"start":{"line":319,"column":2},"end":{"line":331,"column":5}},"145":{"start":{"line":320,"column":4},"end":{"line":320,"column":63}},"146":{"start":{"line":321,"column":4},"end":{"line":321,"column":55}},"147":{"start":{"line":322,"column":4},"end":{"line":330,"column":7}},"148":{"start":{"line":323,"column":6},"end":{"line":323,"column":32}},"149":{"start":{"line":323,"column":15},"end":{"line":323,"column":32}},"150":{"start":{"line":325,"column":6},"end":{"line":325,"column":60}},"151":{"start":{"line":325,"column":39},"end":{"line":325,"column":56}},"152":{"start":{"line":326,"column":6},"end":{"line":326,"column":21}},"153":{"start":{"line":327,"column":6},"end":{"line":327,"column":37}},"154":{"start":{"line":329,"column":6},"end":{"line":329,"column":57}},"155":{"start":{"line":343,"column":2},"end":{"line":354,"column":4}},"156":{"start":{"line":344,"column":4},"end":{"line":344,"column":45}},"157":{"start":{"line":345,"column":4},"end":{"line":352,"column":5}},"158":{"start":{"line":346,"column":6},"end":{"line":349,"column":9}},"159":{"start":{"line":347,"column":8},"end":{"line":347,"column":32}},"160":{"start":{"line":347,"column":17},"end":{"line":347,"column":32}},"161":{"start":{"line":348,"column":8},"end":{"line":348,"column":26}},"162":{"start":{"line":351,"column":6},"end":{"line":351,"column":22}},"163":{"start":{"line":353,"column":4},"end":{"line":353,"column":22}},"164":{"start":{"line":368,"column":2},"end":{"line":393,"column":4}},"165":{"start":{"line":369,"column":4},"end":{"line":372,"column":5}},"166":{"start":{"line":370,"column":6},"end":{"line":370,"column":19}},"167":{"start":{"line":371,"column":6},"end":{"line":371,"column":26}},"168":{"start":{"line":373,"column":4},"end":{"line":373,"column":45}},"169":{"start":{"line":377,"column":4},"end":{"line":390,"column":7}},"170":{"start":{"line":378,"column":6},"end":{"line":378,"column":30}},"171":{"start":{"line":378,"column":15},"end":{"line":378,"column":30}},"172":{"start":{"line":380,"column":6},"end":{"line":387,"column":7}},"173":{"start":{"line":381,"column":8},"end":{"line":381,"column":58}},"174":{"start":{"line":382,"column":8},"end":{"line":385,"column":11}},"175":{"start":{"line":386,"column":8},"end":{"line":386,"column":23}},"176":{"start":{"line":389,"column":6},"end":{"line":389,"column":65}},"177":{"start":{"line":392,"column":4},"end":{"line":392,"column":22}},"178":{"start":{"line":406,"column":2},"end":{"line":434,"column":4}},"179":{"start":{"line":407,"column":4},"end":{"line":410,"column":5}},"180":{"start":{"line":408,"column":6},"end":{"line":408,"column":19}},"181":{"start":{"line":409,"column":6},"end":{"line":409,"column":26}},"182":{"start":{"line":411,"column":4},"end":{"line":411,"column":45}},"183":{"start":{"line":413,"column":4},"end":{"line":432,"column":7}},"184":{"start":{"line":414,"column":6},"end":{"line":414,"column":30}},"185":{"start":{"line":414,"column":15},"end":{"line":414,"column":30}},"186":{"start":{"line":415,"column":6},"end":{"line":422,"column":7}},"187":{"start":{"line":416,"column":8},"end":{"line":416,"column":58}},"188":{"start":{"line":417,"column":8},"end":{"line":420,"column":11}},"189":{"start":{"line":421,"column":8},"end":{"line":421,"column":23}},"190":{"start":{"line":424,"column":6},"end":{"line":428,"column":7}},"191":{"start":{"line":425,"column":8},"end":{"line":425,"column":43}},"192":{"start":{"line":427,"column":8},"end":{"line":427,"column":23}},"193":{"start":{"line":430,"column":6},"end":{"line":430,"column":44}},"194":{"start":{"line":431,"column":6},"end":{"line":431,"column":70}},"195":{"start":{"line":431,"column":61},"end":{"line":431,"column":68}},"196":{"start":{"line":433,"column":4},"end":{"line":433,"column":22}},"197":{"start":{"line":477,"column":2},"end":{"line":590,"column":4}},"198":{"start":{"line":478,"column":4},"end":{"line":478,"column":45}},"199":{"start":{"line":480,"column":4},"end":{"line":480,"column":20}},"200":{"start":{"line":481,"column":4},"end":{"line":481,"column":37}},"201":{"start":{"line":482,"column":4},"end":{"line":482,"column":38}},"202":{"start":{"line":483,"column":4},"end":{"line":483,"column":55}},"203":{"start":{"line":484,"column":4},"end":{"line":484,"column":87}},"204":{"start":{"line":485,"column":4},"end":{"line":485,"column":79}},"205":{"start":{"line":486,"column":4},"end":{"line":486,"column":70}},"206":{"start":{"line":487,"column":4},"end":{"line":489,"column":49}},"207":{"start":{"line":490,"column":4},"end":{"line":490,"column":81}},"208":{"start":{"line":492,"column":4},"end":{"line":492,"column":47}},"209":{"start":{"line":493,"column":4},"end":{"line":493,"column":86}},"210":{"start":{"line":494,"column":4},"end":{"line":494,"column":73}},"211":{"start":{"line":495,"column":4},"end":{"line":495,"column":24}},"212":{"start":{"line":496,"column":4},"end":{"line":496,"column":50}},"213":{"start":{"line":498,"column":4},"end":{"line":498,"column":28}},"214":{"start":{"line":499,"column":4},"end":{"line":499,"column":75}},"215":{"start":{"line":500,"column":4},"end":{"line":500,"column":68}},"216":{"start":{"line":501,"column":4},"end":{"line":501,"column":91}},"217":{"start":{"line":503,"column":4},"end":{"line":506,"column":32}},"218":{"start":{"line":508,"column":4},"end":{"line":512,"column":6}},"219":{"start":{"line":514,"column":4},"end":{"line":523,"column":9}},"220":{"start":{"line":525,"column":4},"end":{"line":525,"column":75}},"221":{"start":{"line":528,"column":4},"end":{"line":529,"column":90}},"222":{"start":{"line":532,"column":4},"end":{"line":532,"column":93}},"223":{"start":{"line":533,"column":4},"end":{"line":533,"column":97}},"224":{"start":{"line":535,"column":4},"end":{"line":546,"column":7}},"225":{"start":{"line":536,"column":6},"end":{"line":536,"column":34}},"226":{"start":{"line":536,"column":17},"end":{"line":536,"column":32}},"227":{"start":{"line":538,"column":6},"end":{"line":538,"column":37}},"228":{"start":{"line":539,"column":6},"end":{"line":545,"column":9}},"229":{"start":{"line":540,"column":8},"end":{"line":544,"column":9}},"230":{"start":{"line":541,"column":10},"end":{"line":541,"column":18}},"231":{"start":{"line":543,"column":10},"end":{"line":543,"column":26}},"232":{"start":{"line":549,"column":4},"end":{"line":588,"column":5}},"233":{"start":{"line":550,"column":6},"end":{"line":550,"column":63}},"234":{"start":{"line":552,"column":6},"end":{"line":552,"column":57}},"235":{"start":{"line":554,"column":6},"end":{"line":555,"column":65}},"236":{"start":{"line":557,"column":6},"end":{"line":557,"column":75}},"237":{"start":{"line":559,"column":6},"end":{"line":559,"column":44}},"238":{"start":{"line":561,"column":6},"end":{"line":561,"column":73}},"239":{"start":{"line":563,"column":6},"end":{"line":563,"column":46}},"240":{"start":{"line":565,"column":6},"end":{"line":571,"column":9}},"241":{"start":{"line":566,"column":8},"end":{"line":570,"column":9}},"242":{"start":{"line":567,"column":10},"end":{"line":567,"column":18}},"243":{"start":{"line":569,"column":10},"end":{"line":569,"column":38}},"244":{"start":{"line":573,"column":6},"end":{"line":587,"column":7}},"245":{"start":{"line":574,"column":8},"end":{"line":574,"column":28}},"246":{"start":{"line":578,"column":8},"end":{"line":578,"column":32}},"247":{"start":{"line":580,"column":8},"end":{"line":586,"column":11}},"248":{"start":{"line":581,"column":10},"end":{"line":585,"column":11}},"249":{"start":{"line":582,"column":12},"end":{"line":582,"column":20}},"250":{"start":{"line":584,"column":12},"end":{"line":584,"column":87}},"251":{"start":{"line":589,"column":4},"end":{"line":589,"column":22}},"252":{"start":{"line":592,"column":2},"end":{"line":596,"column":3}},"253":{"start":{"line":593,"column":4},"end":{"line":593,"column":55}},"254":{"start":{"line":594,"column":4},"end":{"line":594,"column":33}},"255":{"start":{"line":595,"column":4},"end":{"line":595,"column":19}},"256":{"start":{"line":608,"column":2},"end":{"line":612,"column":4}},"257":{"start":{"line":609,"column":4},"end":{"line":611,"column":7}},"258":{"start":{"line":610,"column":6},"end":{"line":610,"column":42}},"259":{"start":{"line":624,"column":2},"end":{"line":655,"column":4}},"260":{"start":{"line":625,"column":4},"end":{"line":625,"column":45}},"261":{"start":{"line":626,"column":4},"end":{"line":653,"column":7}},"262":{"start":{"line":627,"column":6},"end":{"line":652,"column":7}},"263":{"start":{"line":628,"column":8},"end":{"line":628,"column":16}},"264":{"start":{"line":630,"column":8},"end":{"line":651,"column":9}},"265":{"start":{"line":631,"column":10},"end":{"line":631,"column":40}},"266":{"start":{"line":632,"column":10},"end":{"line":632,"column":36}},"267":{"start":{"line":633,"column":10},"end":{"line":639,"column":13}},"268":{"start":{"line":634,"column":12},"end":{"line":638,"column":13}},"269":{"start":{"line":635,"column":14},"end":{"line":635,"column":22}},"270":{"start":{"line":637,"column":14},"end":{"line":637,"column":19}},"271":{"start":{"line":641,"column":10},"end":{"line":649,"column":11}},"272":{"start":{"line":642,"column":12},"end":{"line":642,"column":61}},"273":{"start":{"line":643,"column":12},"end":{"line":643,"column":33}},"274":{"start":{"line":644,"column":12},"end":{"line":644,"column":39}},"275":{"start":{"line":646,"column":12},"end":{"line":646,"column":60}},"276":{"start":{"line":647,"column":12},"end":{"line":647,"column":33}},"277":{"start":{"line":648,"column":12},"end":{"line":648,"column":40}},"278":{"start":{"line":650,"column":10},"end":{"line":650,"column":18}},"279":{"start":{"line":654,"column":4},"end":{"line":654,"column":22}},"280":{"start":{"line":669,"column":2},"end":{"line":729,"column":4}},"281":{"start":{"line":670,"column":4},"end":{"line":670,"column":45}},"282":{"start":{"line":671,"column":4},"end":{"line":671,"column":25}},"283":{"start":{"line":672,"column":4},"end":{"line":672,"column":79}},"284":{"start":{"line":673,"column":4},"end":{"line":673,"column":28}},"285":{"start":{"line":674,"column":4},"end":{"line":680,"column":5}},"286":{"start":{"line":675,"column":6},"end":{"line":675,"column":52}},"287":{"start":{"line":676,"column":6},"end":{"line":676,"column":27}},"288":{"start":{"line":677,"column":6},"end":{"line":677,"column":34}},"289":{"start":{"line":678,"column":6},"end":{"line":678,"column":14}},"290":{"start":{"line":679,"column":6},"end":{"line":679,"column":24}},"291":{"start":{"line":682,"column":4},"end":{"line":688,"column":5}},"292":{"start":{"line":683,"column":6},"end":{"line":685,"column":7}},"293":{"start":{"line":684,"column":8},"end":{"line":684,"column":53}},"294":{"start":{"line":687,"column":6},"end":{"line":687,"column":21}},"295":{"start":{"line":689,"column":4},"end":{"line":691,"column":6}},"296":{"start":{"line":692,"column":4},"end":{"line":694,"column":5}},"297":{"start":{"line":693,"column":6},"end":{"line":693,"column":34}},"298":{"start":{"line":695,"column":4},"end":{"line":726,"column":7}},"299":{"start":{"line":696,"column":6},"end":{"line":698,"column":7}},"300":{"start":{"line":697,"column":8},"end":{"line":697,"column":23}},"301":{"start":{"line":699,"column":6},"end":{"line":704,"column":7}},"302":{"start":{"line":700,"column":8},"end":{"line":700,"column":48}},"303":{"start":{"line":701,"column":8},"end":{"line":701,"column":29}},"304":{"start":{"line":702,"column":8},"end":{"line":702,"column":37}},"305":{"start":{"line":703,"column":8},"end":{"line":703,"column":23}},"306":{"start":{"line":707,"column":6},"end":{"line":712,"column":7}},"307":{"start":{"line":708,"column":8},"end":{"line":708,"column":60}},"308":{"start":{"line":709,"column":8},"end":{"line":709,"column":29}},"309":{"start":{"line":710,"column":8},"end":{"line":710,"column":53}},"310":{"start":{"line":711,"column":8},"end":{"line":711,"column":23}},"311":{"start":{"line":714,"column":6},"end":{"line":725,"column":9}},"312":{"start":{"line":715,"column":8},"end":{"line":717,"column":9}},"313":{"start":{"line":716,"column":10},"end":{"line":716,"column":25}},"314":{"start":{"line":718,"column":8},"end":{"line":718,"column":13}},"315":{"start":{"line":719,"column":8},"end":{"line":724,"column":11}},"316":{"start":{"line":728,"column":4},"end":{"line":728,"column":22}},"317":{"start":{"line":734,"column":2},"end":{"line":738,"column":4}},"318":{"start":{"line":735,"column":4},"end":{"line":735,"column":33}},"319":{"start":{"line":736,"column":4},"end":{"line":736,"column":84}},"320":{"start":{"line":737,"column":4},"end":{"line":737,"column":40}},"321":{"start":{"line":740,"column":2},"end":{"line":754,"column":4}},"322":{"start":{"line":741,"column":4},"end":{"line":741,"column":12}},"323":{"start":{"line":742,"column":4},"end":{"line":744,"column":5}},"324":{"start":{"line":743,"column":6},"end":{"line":743,"column":18}},"325":{"start":{"line":745,"column":4},"end":{"line":751,"column":5}},"326":{"start":{"line":746,"column":6},"end":{"line":746,"column":59}},"327":{"start":{"line":747,"column":6},"end":{"line":747,"column":37}},"328":{"start":{"line":749,"column":6},"end":{"line":749,"column":59}},"329":{"start":{"line":750,"column":6},"end":{"line":750,"column":36}},"330":{"start":{"line":752,"column":4},"end":{"line":752,"column":25}},"331":{"start":{"line":753,"column":4},"end":{"line":753,"column":14}},"332":{"start":{"line":756,"column":2},"end":{"line":784,"column":4}},"333":{"start":{"line":757,"column":4},"end":{"line":760,"column":5}},"334":{"start":{"line":758,"column":6},"end":{"line":758,"column":19}},"335":{"start":{"line":759,"column":6},"end":{"line":759,"column":19}},"336":{"start":{"line":762,"column":4},"end":{"line":763,"column":34}},"337":{"start":{"line":763,"column":6},"end":{"line":763,"column":34}},"338":{"start":{"line":765,"column":4},"end":{"line":765,"column":58}},"339":{"start":{"line":766,"column":4},"end":{"line":767,"column":34}},"340":{"start":{"line":767,"column":6},"end":{"line":767,"column":34}},"341":{"start":{"line":769,"column":4},"end":{"line":769,"column":50}},"342":{"start":{"line":770,"column":4},"end":{"line":770,"column":41}},"343":{"start":{"line":771,"column":4},"end":{"line":771,"column":58}},"344":{"start":{"line":772,"column":4},"end":{"line":774,"column":5}},"345":{"start":{"line":773,"column":6},"end":{"line":773,"column":59}},"346":{"start":{"line":777,"column":4},"end":{"line":777,"column":49}},"347":{"start":{"line":778,"column":4},"end":{"line":779,"column":27}},"348":{"start":{"line":780,"column":4},"end":{"line":782,"column":5}},"349":{"start":{"line":781,"column":6},"end":{"line":781,"column":43}},"350":{"start":{"line":783,"column":4},"end":{"line":783,"column":46}},"351":{"start":{"line":790,"column":2},"end":{"line":950,"column":4}},"352":{"start":{"line":792,"column":4},"end":{"line":792,"column":31}},"353":{"start":{"line":793,"column":4},"end":{"line":793,"column":25}},"354":{"start":{"line":796,"column":4},"end":{"line":796,"column":67}},"355":{"start":{"line":797,"column":4},"end":{"line":797,"column":57}},"356":{"start":{"line":799,"column":4},"end":{"line":805,"column":6}},"357":{"start":{"line":800,"column":6},"end":{"line":804,"column":7}},"358":{"start":{"line":801,"column":8},"end":{"line":801,"column":42}},"359":{"start":{"line":803,"column":8},"end":{"line":803,"column":28}},"360":{"start":{"line":807,"column":4},"end":{"line":818,"column":6}},"361":{"start":{"line":808,"column":6},"end":{"line":810,"column":7}},"362":{"start":{"line":809,"column":8},"end":{"line":809,"column":15}},"363":{"start":{"line":811,"column":6},"end":{"line":817,"column":7}},"364":{"start":{"line":814,"column":8},"end":{"line":814,"column":31}},"365":{"start":{"line":816,"column":8},"end":{"line":816,"column":62}},"366":{"start":{"line":821,"column":4},"end":{"line":827,"column":7}},"367":{"start":{"line":822,"column":6},"end":{"line":822,"column":30}},"368":{"start":{"line":823,"column":6},"end":{"line":825,"column":7}},"369":{"start":{"line":824,"column":8},"end":{"line":824,"column":35}},"370":{"start":{"line":826,"column":6},"end":{"line":826,"column":13}},"371":{"start":{"line":829,"column":4},"end":{"line":850,"column":6}},"372":{"start":{"line":852,"column":4},"end":{"line":869,"column":6}},"373":{"start":{"line":858,"column":12},"end":{"line":858,"column":37}},"374":{"start":{"line":859,"column":12},"end":{"line":859,"column":53}},"375":{"start":{"line":860,"column":12},"end":{"line":860,"column":67}},"376":{"start":{"line":862,"column":12},"end":{"line":862,"column":27}},"377":{"start":{"line":871,"column":4},"end":{"line":882,"column":6}},"378":{"start":{"line":884,"column":4},"end":{"line":893,"column":6}},"379":{"start":{"line":895,"column":4},"end":{"line":909,"column":6}},"380":{"start":{"line":901,"column":25},"end":{"line":901,"column":74}},"381":{"start":{"line":911,"column":4},"end":{"line":920,"column":7}},"382":{"start":{"line":912,"column":6},"end":{"line":918,"column":7}},"383":{"start":{"line":913,"column":8},"end":{"line":915,"column":9}},"384":{"start":{"line":914,"column":10},"end":{"line":914,"column":88}},"385":{"start":{"line":916,"column":8},"end":{"line":916,"column":44}},"386":{"start":{"line":917,"column":8},"end":{"line":917,"column":28}},"387":{"start":{"line":919,"column":6},"end":{"line":919,"column":13}},"388":{"start":{"line":923,"column":4},"end":{"line":923,"column":76}},"389":{"start":{"line":924,"column":4},"end":{"line":924,"column":37}},"390":{"start":{"line":926,"column":4},"end":{"line":926,"column":88}},"391":{"start":{"line":927,"column":4},"end":{"line":927,"column":49}},"392":{"start":{"line":929,"column":4},"end":{"line":931,"column":7}},"393":{"start":{"line":934,"column":4},"end":{"line":947,"column":5}},"394":{"start":{"line":935,"column":6},"end":{"line":938,"column":9}},"395":{"start":{"line":939,"column":6},"end":{"line":942,"column":9}},"396":{"start":{"line":945,"column":6},"end":{"line":945,"column":82}},"397":{"start":{"line":946,"column":6},"end":{"line":946,"column":84}},"398":{"start":{"line":949,"column":4},"end":{"line":949,"column":21}},"399":{"start":{"line":956,"column":2},"end":{"line":956,"column":15}},"400":{"start":{"line":964,"column":2},"end":{"line":970,"column":5}},"401":{"start":{"line":965,"column":4},"end":{"line":968,"column":5}},"402":{"start":{"line":967,"column":6},"end":{"line":967,"column":66}},"403":{"start":{"line":969,"column":4},"end":{"line":969,"column":11}},"404":{"start":{"line":972,"column":2},"end":{"line":1009,"column":5}},"405":{"start":{"line":973,"column":4},"end":{"line":973,"column":41}},"406":{"start":{"line":973,"column":27},"end":{"line":973,"column":41}},"407":{"start":{"line":974,"column":4},"end":{"line":974,"column":51}},"408":{"start":{"line":974,"column":37},"end":{"line":974,"column":51}},"409":{"start":{"line":976,"column":4},"end":{"line":976,"column":55}},"410":{"start":{"line":977,"column":4},"end":{"line":977,"column":26}},"411":{"start":{"line":978,"column":4},"end":{"line":981,"column":5}},"412":{"start":{"line":979,"column":6},"end":{"line":979,"column":17}},"413":{"start":{"line":980,"column":6},"end":{"line":980,"column":43}},"414":{"start":{"line":983,"column":4},"end":{"line":1008,"column":7}},"415":{"start":{"line":984,"column":6},"end":{"line":984,"column":32}},"416":{"start":{"line":984,"column":15},"end":{"line":984,"column":32}},"417":{"start":{"line":985,"column":6},"end":{"line":991,"column":9}},"418":{"start":{"line":986,"column":8},"end":{"line":986,"column":22}},"419":{"start":{"line":987,"column":8},"end":{"line":987,"column":33}},"420":{"start":{"line":988,"column":8},"end":{"line":988,"column":29}},"421":{"start":{"line":989,"column":8},"end":{"line":989,"column":35}},"422":{"start":{"line":990,"column":8},"end":{"line":990,"column":20}},"423":{"start":{"line":992,"column":6},"end":{"line":992,"column":23}},"424":{"start":{"line":993,"column":6},"end":{"line":1005,"column":7}},"425":{"start":{"line":994,"column":8},"end":{"line":994,"column":86}},"426":{"start":{"line":995,"column":8},"end":{"line":997,"column":9}},"427":{"start":{"line":996,"column":10},"end":{"line":996,"column":45}},"428":{"start":{"line":998,"column":13},"end":{"line":1005,"column":7}},"429":{"start":{"line":999,"column":8},"end":{"line":1001,"column":11}},"430":{"start":{"line":1000,"column":10},"end":{"line":1000,"column":46}},"431":{"start":{"line":1002,"column":8},"end":{"line":1004,"column":9}},"432":{"start":{"line":1003,"column":10},"end":{"line":1003,"column":41}},"433":{"start":{"line":1007,"column":6},"end":{"line":1007,"column":13}},"434":{"start":{"line":1011,"column":2},"end":{"line":1028,"column":5}},"435":{"start":{"line":1012,"column":4},"end":{"line":1012,"column":50}},"436":{"start":{"line":1012,"column":36},"end":{"line":1012,"column":50}},"437":{"start":{"line":1013,"column":4},"end":{"line":1013,"column":55}},"438":{"start":{"line":1013,"column":41},"end":{"line":1013,"column":55}},"439":{"start":{"line":1015,"column":4},"end":{"line":1015,"column":55}},"440":{"start":{"line":1016,"column":4},"end":{"line":1016,"column":52}},"441":{"start":{"line":1017,"column":4},"end":{"line":1017,"column":58}},"442":{"start":{"line":1019,"column":4},"end":{"line":1019,"column":49}},"443":{"start":{"line":1019,"column":35},"end":{"line":1019,"column":49}},"444":{"start":{"line":1021,"column":4},"end":{"line":1026,"column":7}},"445":{"start":{"line":1022,"column":6},"end":{"line":1023,"column":52}},"446":{"start":{"line":1025,"column":6},"end":{"line":1025,"column":23}},"447":{"start":{"line":1027,"column":4},"end":{"line":1027,"column":81}},"448":{"start":{"line":1031,"column":0},"end":{"line":1040,"column":1}},"449":{"start":{"line":1032,"column":2},"end":{"line":1032,"column":25}},"450":{"start":{"line":1033,"column":2},"end":{"line":1034,"column":11}},"451":{"start":{"line":1034,"column":4},"end":{"line":1034,"column":11}},"452":{"start":{"line":1035,"column":2},"end":{"line":1036,"column":25}},"453":{"start":{"line":1036,"column":4},"end":{"line":1036,"column":25}},"454":{"start":{"line":1037,"column":2},"end":{"line":1037,"column":27}},"455":{"start":{"line":1037,"column":20},"end":{"line":1037,"column":27}},"456":{"start":{"line":1038,"column":2},"end":{"line":1039,"column":24}},"457":{"start":{"line":1039,"column":4},"end":{"line":1039,"column":24}},"458":{"start":{"line":1042,"column":0},"end":{"line":1050,"column":1}},"459":{"start":{"line":1043,"column":2},"end":{"line":1043,"column":28}},"460":{"start":{"line":1044,"column":2},"end":{"line":1048,"column":3}},"461":{"start":{"line":1045,"column":4},"end":{"line":1045,"column":29}},"462":{"start":{"line":1046,"column":4},"end":{"line":1047,"column":27}},"463":{"start":{"line":1049,"column":2},"end":{"line":1049,"column":16}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":12}},{"start":{"line":25,"column":16},"end":{"line":25,"column":52}}]},"3":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"4":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":24}},{"start":{"line":90,"column":28},"end":{"line":90,"column":57}}]},"5":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":9},"end":{"line":96,"column":11}},{"start":{"line":96,"column":15},"end":{"line":96,"column":44}}]},"6":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"7":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":8},"end":{"line":98,"column":31}},{"start":{"line":98,"column":35},"end":{"line":98,"column":43}}]},"8":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":14},"end":{"line":103,"column":21}},{"start":{"line":103,"column":25},"end":{"line":103,"column":27}}]},"9":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":19},"end":{"line":105,"column":22}},{"start":{"line":105,"column":26},"end":{"line":105,"column":48}}]},"10":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":114,"column":4}},{"start":{"line":114,"column":4},"end":{"line":114,"column":4}}]},"11":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"12":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":18},"end":{"line":134,"column":29}},{"start":{"line":134,"column":33},"end":{"line":134,"column":35}}]},"13":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"14":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":6},"end":{"line":136,"column":6}},{"start":{"line":136,"column":6},"end":{"line":136,"column":6}}]},"15":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":13},"end":{"line":138,"column":13}},{"start":{"line":138,"column":13},"end":{"line":138,"column":13}}]},"16":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":6},"end":{"line":142,"column":6}},{"start":{"line":142,"column":6},"end":{"line":142,"column":6}}]},"17":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":6},"end":{"line":146,"column":6}},{"start":{"line":146,"column":6},"end":{"line":146,"column":6}}]},"18":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":8}},{"start":{"line":149,"column":8},"end":{"line":149,"column":8}}]},"19":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":13},"end":{"line":152,"column":13}},{"start":{"line":152,"column":13},"end":{"line":152,"column":13}}]},"20":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":155,"column":8}},{"start":{"line":155,"column":8},"end":{"line":155,"column":8}}]},"21":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":183,"column":4}},{"start":{"line":183,"column":4},"end":{"line":183,"column":4}}]},"22":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":9},"end":{"line":188,"column":11}},{"start":{"line":188,"column":15},"end":{"line":188,"column":44}}]},"23":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":15},"end":{"line":190,"column":22}},{"start":{"line":190,"column":26},"end":{"line":190,"column":28}}]},"24":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":4},"end":{"line":191,"column":4}},{"start":{"line":191,"column":4},"end":{"line":191,"column":4}}]},"25":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":27},"end":{"line":201,"column":54}},{"start":{"line":202,"column":6},"end":{"line":202,"column":34}}]},"26":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":203,"column":4}},{"start":{"line":203,"column":4},"end":{"line":203,"column":4}}]},"27":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":209,"column":4}},{"start":{"line":209,"column":4},"end":{"line":209,"column":4}}]},"28":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":8},"end":{"line":209,"column":21}},{"start":{"line":209,"column":25},"end":{"line":209,"column":37}}]},"29":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"30":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":8},"end":{"line":216,"column":20}},{"start":{"line":216,"column":24},"end":{"line":216,"column":39}}]},"31":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":8},"end":{"line":230,"column":8}},{"start":{"line":230,"column":8},"end":{"line":230,"column":8}}]},"32":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":8},"end":{"line":231,"column":8}},{"start":{"line":231,"column":8},"end":{"line":231,"column":8}}]},"33":{"line":231,"type":"cond-expr","locations":[{"start":{"line":231,"column":37},"end":{"line":231,"column":67}},{"start":{"line":231,"column":70},"end":{"line":231,"column":88}}]},"34":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":6},"end":{"line":243,"column":6}},{"start":{"line":243,"column":6},"end":{"line":243,"column":6}}]},"35":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":13},"end":{"line":246,"column":13}},{"start":{"line":246,"column":13},"end":{"line":246,"column":13}}]},"36":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":10},"end":{"line":248,"column":10}},{"start":{"line":248,"column":10},"end":{"line":248,"column":10}}]},"37":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":17},"end":{"line":251,"column":17}},{"start":{"line":251,"column":17},"end":{"line":251,"column":17}}]},"38":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":12},"end":{"line":252,"column":12}},{"start":{"line":252,"column":12},"end":{"line":252,"column":12}}]},"39":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":16},"end":{"line":252,"column":55}},{"start":{"line":252,"column":59},"end":{"line":252,"column":78}}]},"40":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":14},"end":{"line":260,"column":14}},{"start":{"line":260,"column":14},"end":{"line":260,"column":14}}]},"41":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":57},"end":{"line":267,"column":68}},{"start":{"line":267,"column":72},"end":{"line":267,"column":86}}]},"42":{"line":272,"type":"binary-expr","locations":[{"start":{"line":272,"column":57},"end":{"line":272,"column":68}},{"start":{"line":272,"column":72},"end":{"line":272,"column":86}}]},"43":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":9},"end":{"line":295,"column":11}},{"start":{"line":295,"column":15},"end":{"line":295,"column":44}}]},"44":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":4},"end":{"line":298,"column":4}},{"start":{"line":298,"column":4},"end":{"line":298,"column":4}}]},"45":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":6},"end":{"line":306,"column":6}},{"start":{"line":306,"column":6},"end":{"line":306,"column":6}}]},"46":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":13},"end":{"line":308,"column":13}},{"start":{"line":308,"column":13},"end":{"line":308,"column":13}}]},"47":{"line":308,"type":"binary-expr","locations":[{"start":{"line":308,"column":17},"end":{"line":308,"column":32}},{"start":{"line":308,"column":36},"end":{"line":308,"column":52}}]},"48":{"line":321,"type":"binary-expr","locations":[{"start":{"line":321,"column":17},"end":{"line":321,"column":46}},{"start":{"line":321,"column":50},"end":{"line":321,"column":54}}]},"49":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":6},"end":{"line":323,"column":6}},{"start":{"line":323,"column":6},"end":{"line":323,"column":6}}]},"50":{"line":344,"type":"binary-expr","locations":[{"start":{"line":344,"column":9},"end":{"line":344,"column":11}},{"start":{"line":344,"column":15},"end":{"line":344,"column":44}}]},"51":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":4},"end":{"line":345,"column":4}},{"start":{"line":345,"column":4},"end":{"line":345,"column":4}}]},"52":{"line":345,"type":"binary-expr","locations":[{"start":{"line":345,"column":8},"end":{"line":345,"column":21}},{"start":{"line":345,"column":25},"end":{"line":345,"column":30}}]},"53":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":8},"end":{"line":347,"column":8}},{"start":{"line":347,"column":8},"end":{"line":347,"column":8}}]},"54":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":4},"end":{"line":369,"column":4}},{"start":{"line":369,"column":4},"end":{"line":369,"column":4}}]},"55":{"line":369,"type":"binary-expr","locations":[{"start":{"line":369,"column":8},"end":{"line":369,"column":24}},{"start":{"line":369,"column":28},"end":{"line":369,"column":57}}]},"56":{"line":373,"type":"binary-expr","locations":[{"start":{"line":373,"column":9},"end":{"line":373,"column":11}},{"start":{"line":373,"column":15},"end":{"line":373,"column":44}}]},"57":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":6},"end":{"line":378,"column":6}},{"start":{"line":378,"column":6},"end":{"line":378,"column":6}}]},"58":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":6},"end":{"line":380,"column":6}},{"start":{"line":380,"column":6},"end":{"line":380,"column":6}}]},"59":{"line":407,"type":"if","locations":[{"start":{"line":407,"column":4},"end":{"line":407,"column":4}},{"start":{"line":407,"column":4},"end":{"line":407,"column":4}}]},"60":{"line":407,"type":"binary-expr","locations":[{"start":{"line":407,"column":8},"end":{"line":407,"column":24}},{"start":{"line":407,"column":28},"end":{"line":407,"column":57}}]},"61":{"line":411,"type":"binary-expr","locations":[{"start":{"line":411,"column":9},"end":{"line":411,"column":11}},{"start":{"line":411,"column":15},"end":{"line":411,"column":44}}]},"62":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":6},"end":{"line":414,"column":6}},{"start":{"line":414,"column":6},"end":{"line":414,"column":6}}]},"63":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":6},"end":{"line":415,"column":6}},{"start":{"line":415,"column":6},"end":{"line":415,"column":6}}]},"64":{"line":478,"type":"binary-expr","locations":[{"start":{"line":478,"column":9},"end":{"line":478,"column":11}},{"start":{"line":478,"column":15},"end":{"line":478,"column":44}}]},"65":{"line":483,"type":"binary-expr","locations":[{"start":{"line":483,"column":17},"end":{"line":483,"column":46}},{"start":{"line":483,"column":50},"end":{"line":483,"column":54}}]},"66":{"line":487,"type":"binary-expr","locations":[{"start":{"line":487,"column":11},"end":{"line":487,"column":21}},{"start":{"line":487,"column":25},"end":{"line":487,"column":35}}]},"67":{"line":492,"type":"binary-expr","locations":[{"start":{"line":492,"column":23},"end":{"line":492,"column":39}},{"start":{"line":492,"column":43},"end":{"line":492,"column":46}}]},"68":{"line":494,"type":"binary-expr","locations":[{"start":{"line":494,"column":36},"end":{"line":494,"column":52}},{"start":{"line":494,"column":56},"end":{"line":494,"column":71}}]},"69":{"line":496,"type":"binary-expr","locations":[{"start":{"line":496,"column":23},"end":{"line":496,"column":39}},{"start":{"line":496,"column":43},"end":{"line":496,"column":49}}]},"70":{"line":499,"type":"binary-expr","locations":[{"start":{"line":499,"column":19},"end":{"line":499,"column":31}},{"start":{"line":499,"column":36},"end":{"line":499,"column":39}},{"start":{"line":499,"column":43},"end":{"line":499,"column":58}},{"start":{"line":499,"column":63},"end":{"line":499,"column":74}}]},"71":{"line":500,"type":"binary-expr","locations":[{"start":{"line":500,"column":19},"end":{"line":500,"column":31}},{"start":{"line":500,"column":36},"end":{"line":500,"column":39}},{"start":{"line":500,"column":43},"end":{"line":500,"column":58}},{"start":{"line":500,"column":63},"end":{"line":500,"column":67}}]},"72":{"line":501,"type":"binary-expr","locations":[{"start":{"line":501,"column":26},"end":{"line":501,"column":45}},{"start":{"line":501,"column":50},"end":{"line":501,"column":53}},{"start":{"line":501,"column":57},"end":{"line":501,"column":79}},{"start":{"line":501,"column":84},"end":{"line":501,"column":90}}]},"73":{"line":503,"type":"cond-expr","locations":[{"start":{"line":506,"column":8},"end":{"line":506,"column":10}},{"start":{"line":506,"column":13},"end":{"line":506,"column":31}}]},"74":{"line":504,"type":"binary-expr","locations":[{"start":{"line":504,"column":7},"end":{"line":504,"column":34}},{"start":{"line":504,"column":38},"end":{"line":504,"column":58}},{"start":{"line":505,"column":7},"end":{"line":505,"column":35}},{"start":{"line":505,"column":39},"end":{"line":505,"column":60}}]},"75":{"line":514,"type":"binary-expr","locations":[{"start":{"line":514,"column":25},"end":{"line":514,"column":43}},{"start":{"line":515,"column":6},"end":{"line":523,"column":8}}]},"76":{"line":525,"type":"binary-expr","locations":[{"start":{"line":525,"column":25},"end":{"line":525,"column":43}},{"start":{"line":525,"column":47},"end":{"line":525,"column":74}}]},"77":{"line":529,"type":"binary-expr","locations":[{"start":{"line":529,"column":6},"end":{"line":529,"column":20}},{"start":{"line":529,"column":24},"end":{"line":529,"column":46}},{"start":{"line":529,"column":50},"end":{"line":529,"column":89}}]},"78":{"line":532,"type":"binary-expr","locations":[{"start":{"line":532,"column":25},"end":{"line":532,"column":58}},{"start":{"line":532,"column":62},"end":{"line":532,"column":92}}]},"79":{"line":536,"type":"if","locations":[{"start":{"line":536,"column":6},"end":{"line":536,"column":6}},{"start":{"line":536,"column":6},"end":{"line":536,"column":6}}]},"80":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":8},"end":{"line":540,"column":8}},{"start":{"line":540,"column":8},"end":{"line":540,"column":8}}]},"81":{"line":554,"type":"binary-expr","locations":[{"start":{"line":554,"column":21},"end":{"line":554,"column":33}},{"start":{"line":554,"column":37},"end":{"line":555,"column":64}}]},"82":{"line":559,"type":"binary-expr","locations":[{"start":{"line":559,"column":19},"end":{"line":559,"column":29}},{"start":{"line":559,"column":33},"end":{"line":559,"column":43}}]},"83":{"line":561,"type":"binary-expr","locations":[{"start":{"line":561,"column":24},"end":{"line":561,"column":39}},{"start":{"line":561,"column":43},"end":{"line":561,"column":72}}]},"84":{"line":563,"type":"binary-expr","locations":[{"start":{"line":563,"column":24},"end":{"line":563,"column":39}},{"start":{"line":563,"column":43},"end":{"line":563,"column":45}}]},"85":{"line":566,"type":"if","locations":[{"start":{"line":566,"column":8},"end":{"line":566,"column":8}},{"start":{"line":566,"column":8},"end":{"line":566,"column":8}}]},"86":{"line":581,"type":"if","locations":[{"start":{"line":581,"column":10},"end":{"line":581,"column":10}},{"start":{"line":581,"column":10},"end":{"line":581,"column":10}}]},"87":{"line":610,"type":"binary-expr","locations":[{"start":{"line":610,"column":14},"end":{"line":610,"column":17}},{"start":{"line":610,"column":21},"end":{"line":610,"column":40}}]},"88":{"line":625,"type":"binary-expr","locations":[{"start":{"line":625,"column":9},"end":{"line":625,"column":11}},{"start":{"line":625,"column":15},"end":{"line":625,"column":44}}]},"89":{"line":627,"type":"if","locations":[{"start":{"line":627,"column":6},"end":{"line":627,"column":6}},{"start":{"line":627,"column":6},"end":{"line":627,"column":6}}]},"90":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":8},"end":{"line":630,"column":8}},{"start":{"line":630,"column":8},"end":{"line":630,"column":8}}]},"91":{"line":630,"type":"binary-expr","locations":[{"start":{"line":630,"column":12},"end":{"line":630,"column":16}},{"start":{"line":630,"column":20},"end":{"line":630,"column":52}}]},"92":{"line":634,"type":"if","locations":[{"start":{"line":634,"column":12},"end":{"line":634,"column":12}},{"start":{"line":634,"column":12},"end":{"line":634,"column":12}}]},"93":{"line":641,"type":"if","locations":[{"start":{"line":641,"column":10},"end":{"line":641,"column":10}},{"start":{"line":641,"column":10},"end":{"line":641,"column":10}}]},"94":{"line":670,"type":"binary-expr","locations":[{"start":{"line":670,"column":9},"end":{"line":670,"column":11}},{"start":{"line":670,"column":15},"end":{"line":670,"column":44}}]},"95":{"line":672,"type":"binary-expr","locations":[{"start":{"line":672,"column":14},"end":{"line":672,"column":54}},{"start":{"line":672,"column":58},"end":{"line":672,"column":78}}]},"96":{"line":673,"type":"binary-expr","locations":[{"start":{"line":673,"column":14},"end":{"line":673,"column":21}},{"start":{"line":673,"column":25},"end":{"line":673,"column":27}}]},"97":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":4},"end":{"line":674,"column":4}},{"start":{"line":674,"column":4},"end":{"line":674,"column":4}}]},"98":{"line":683,"type":"if","locations":[{"start":{"line":683,"column":6},"end":{"line":683,"column":6}},{"start":{"line":683,"column":6},"end":{"line":683,"column":6}}]},"99":{"line":692,"type":"if","locations":[{"start":{"line":692,"column":4},"end":{"line":692,"column":4}},{"start":{"line":692,"column":4},"end":{"line":692,"column":4}}]},"100":{"line":696,"type":"if","locations":[{"start":{"line":696,"column":6},"end":{"line":696,"column":6}},{"start":{"line":696,"column":6},"end":{"line":696,"column":6}}]},"101":{"line":699,"type":"if","locations":[{"start":{"line":699,"column":6},"end":{"line":699,"column":6}},{"start":{"line":699,"column":6},"end":{"line":699,"column":6}}]},"102":{"line":707,"type":"if","locations":[{"start":{"line":707,"column":6},"end":{"line":707,"column":6}},{"start":{"line":707,"column":6},"end":{"line":707,"column":6}}]},"103":{"line":707,"type":"binary-expr","locations":[{"start":{"line":707,"column":10},"end":{"line":707,"column":54}},{"start":{"line":707,"column":58},"end":{"line":707,"column":77}}]},"104":{"line":715,"type":"if","locations":[{"start":{"line":715,"column":8},"end":{"line":715,"column":8}},{"start":{"line":715,"column":8},"end":{"line":715,"column":8}}]},"105":{"line":736,"type":"binary-expr","locations":[{"start":{"line":736,"column":34},"end":{"line":736,"column":62}},{"start":{"line":736,"column":66},"end":{"line":736,"column":82}}]},"106":{"line":742,"type":"if","locations":[{"start":{"line":742,"column":4},"end":{"line":742,"column":4}},{"start":{"line":742,"column":4},"end":{"line":742,"column":4}}]},"107":{"line":742,"type":"binary-expr","locations":[{"start":{"line":742,"column":8},"end":{"line":742,"column":13}},{"start":{"line":742,"column":17},"end":{"line":742,"column":42}},{"start":{"line":742,"column":46},"end":{"line":742,"column":81}}]},"108":{"line":745,"type":"if","locations":[{"start":{"line":745,"column":4},"end":{"line":745,"column":4}},{"start":{"line":745,"column":4},"end":{"line":745,"column":4}}]},"109":{"line":757,"type":"if","locations":[{"start":{"line":757,"column":4},"end":{"line":757,"column":4}},{"start":{"line":757,"column":4},"end":{"line":757,"column":4}}]},"110":{"line":757,"type":"binary-expr","locations":[{"start":{"line":757,"column":8},"end":{"line":757,"column":37}},{"start":{"line":757,"column":41},"end":{"line":757,"column":57}}]},"111":{"line":762,"type":"if","locations":[{"start":{"line":762,"column":4},"end":{"line":762,"column":4}},{"start":{"line":762,"column":4},"end":{"line":762,"column":4}}]},"112":{"line":762,"type":"binary-expr","locations":[{"start":{"line":762,"column":8},"end":{"line":762,"column":31}},{"start":{"line":762,"column":35},"end":{"line":762,"column":50}}]},"113":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":4},"end":{"line":766,"column":4}},{"start":{"line":766,"column":4},"end":{"line":766,"column":4}}]},"114":{"line":771,"type":"binary-expr","locations":[{"start":{"line":771,"column":18},"end":{"line":771,"column":49}},{"start":{"line":771,"column":53},"end":{"line":771,"column":57}}]},"115":{"line":772,"type":"if","locations":[{"start":{"line":772,"column":4},"end":{"line":772,"column":4}},{"start":{"line":772,"column":4},"end":{"line":772,"column":4}}]},"116":{"line":772,"type":"binary-expr","locations":[{"start":{"line":772,"column":8},"end":{"line":772,"column":27}},{"start":{"line":772,"column":31},"end":{"line":772,"column":61}}]},"117":{"line":778,"type":"binary-expr","locations":[{"start":{"line":778,"column":32},"end":{"line":778,"column":43}},{"start":{"line":778,"column":47},"end":{"line":778,"column":70}},{"start":{"line":779,"column":6},"end":{"line":779,"column":26}}]},"118":{"line":780,"type":"if","locations":[{"start":{"line":780,"column":4},"end":{"line":780,"column":4}},{"start":{"line":780,"column":4},"end":{"line":780,"column":4}}]},"119":{"line":796,"type":"binary-expr","locations":[{"start":{"line":796,"column":27},"end":{"line":796,"column":47}},{"start":{"line":796,"column":51},"end":{"line":796,"column":66}}]},"120":{"line":797,"type":"binary-expr","locations":[{"start":{"line":797,"column":24},"end":{"line":797,"column":41}},{"start":{"line":797,"column":45},"end":{"line":797,"column":56}}]},"121":{"line":800,"type":"if","locations":[{"start":{"line":800,"column":6},"end":{"line":800,"column":6}},{"start":{"line":800,"column":6},"end":{"line":800,"column":6}}]},"122":{"line":808,"type":"if","locations":[{"start":{"line":808,"column":6},"end":{"line":808,"column":6}},{"start":{"line":808,"column":6},"end":{"line":808,"column":6}}]},"123":{"line":811,"type":"if","locations":[{"start":{"line":811,"column":6},"end":{"line":811,"column":6}},{"start":{"line":811,"column":6},"end":{"line":811,"column":6}}]},"124":{"line":811,"type":"binary-expr","locations":[{"start":{"line":811,"column":10},"end":{"line":811,"column":37}},{"start":{"line":811,"column":41},"end":{"line":811,"column":60}}]},"125":{"line":823,"type":"if","locations":[{"start":{"line":823,"column":6},"end":{"line":823,"column":6}},{"start":{"line":823,"column":6},"end":{"line":823,"column":6}}]},"126":{"line":823,"type":"binary-expr","locations":[{"start":{"line":823,"column":10},"end":{"line":823,"column":14}},{"start":{"line":823,"column":18},"end":{"line":823,"column":36}}]},"127":{"line":858,"type":"binary-expr","locations":[{"start":{"line":858,"column":22},"end":{"line":858,"column":25}},{"start":{"line":858,"column":29},"end":{"line":858,"column":36}}]},"128":{"line":859,"type":"binary-expr","locations":[{"start":{"line":859,"column":30},"end":{"line":859,"column":33}},{"start":{"line":859,"column":37},"end":{"line":859,"column":52}}]},"129":{"line":860,"type":"cond-expr","locations":[{"start":{"line":860,"column":40},"end":{"line":860,"column":54}},{"start":{"line":860,"column":57},"end":{"line":860,"column":66}}]},"130":{"line":901,"type":"binary-expr","locations":[{"start":{"line":901,"column":25},"end":{"line":901,"column":44}},{"start":{"line":901,"column":48},"end":{"line":901,"column":74}}]},"131":{"line":912,"type":"if","locations":[{"start":{"line":912,"column":6},"end":{"line":912,"column":6}},{"start":{"line":912,"column":6},"end":{"line":912,"column":6}}]},"132":{"line":913,"type":"if","locations":[{"start":{"line":913,"column":8},"end":{"line":913,"column":8}},{"start":{"line":913,"column":8},"end":{"line":913,"column":8}}]},"133":{"line":934,"type":"if","locations":[{"start":{"line":934,"column":4},"end":{"line":934,"column":4}},{"start":{"line":934,"column":4},"end":{"line":934,"column":4}}]},"134":{"line":934,"type":"binary-expr","locations":[{"start":{"line":934,"column":8},"end":{"line":934,"column":40}},{"start":{"line":934,"column":44},"end":{"line":934,"column":77}}]},"135":{"line":965,"type":"if","locations":[{"start":{"line":965,"column":4},"end":{"line":965,"column":4}},{"start":{"line":965,"column":4},"end":{"line":965,"column":4}}]},"136":{"line":965,"type":"binary-expr","locations":[{"start":{"line":965,"column":8},"end":{"line":965,"column":46}},{"start":{"line":965,"column":50},"end":{"line":965,"column":65}},{"start":{"line":966,"column":8},"end":{"line":966,"column":29}},{"start":{"line":966,"column":33},"end":{"line":966,"column":75}}]},"137":{"line":973,"type":"if","locations":[{"start":{"line":973,"column":4},"end":{"line":973,"column":4}},{"start":{"line":973,"column":4},"end":{"line":973,"column":4}}]},"138":{"line":974,"type":"if","locations":[{"start":{"line":974,"column":4},"end":{"line":974,"column":4}},{"start":{"line":974,"column":4},"end":{"line":974,"column":4}}]},"139":{"line":974,"type":"binary-expr","locations":[{"start":{"line":974,"column":8},"end":{"line":974,"column":18}},{"start":{"line":974,"column":22},"end":{"line":974,"column":35}}]},"140":{"line":976,"type":"binary-expr","locations":[{"start":{"line":976,"column":17},"end":{"line":976,"column":46}},{"start":{"line":976,"column":50},"end":{"line":976,"column":54}}]},"141":{"line":978,"type":"if","locations":[{"start":{"line":978,"column":4},"end":{"line":978,"column":4}},{"start":{"line":978,"column":4},"end":{"line":978,"column":4}}]},"142":{"line":984,"type":"if","locations":[{"start":{"line":984,"column":6},"end":{"line":984,"column":6}},{"start":{"line":984,"column":6},"end":{"line":984,"column":6}}]},"143":{"line":993,"type":"if","locations":[{"start":{"line":993,"column":6},"end":{"line":993,"column":6}},{"start":{"line":993,"column":6},"end":{"line":993,"column":6}}]},"144":{"line":995,"type":"if","locations":[{"start":{"line":995,"column":8},"end":{"line":995,"column":8}},{"start":{"line":995,"column":8},"end":{"line":995,"column":8}}]},"145":{"line":995,"type":"binary-expr","locations":[{"start":{"line":995,"column":12},"end":{"line":995,"column":24}},{"start":{"line":995,"column":28},"end":{"line":995,"column":72}}]},"146":{"line":998,"type":"if","locations":[{"start":{"line":998,"column":13},"end":{"line":998,"column":13}},{"start":{"line":998,"column":13},"end":{"line":998,"column":13}}]},"147":{"line":1002,"type":"if","locations":[{"start":{"line":1002,"column":8},"end":{"line":1002,"column":8}},{"start":{"line":1002,"column":8},"end":{"line":1002,"column":8}}]},"148":{"line":1002,"type":"binary-expr","locations":[{"start":{"line":1002,"column":12},"end":{"line":1002,"column":24}},{"start":{"line":1002,"column":28},"end":{"line":1002,"column":72}}]},"149":{"line":1012,"type":"if","locations":[{"start":{"line":1012,"column":4},"end":{"line":1012,"column":4}},{"start":{"line":1012,"column":4},"end":{"line":1012,"column":4}}]},"150":{"line":1012,"type":"binary-expr","locations":[{"start":{"line":1012,"column":8},"end":{"line":1012,"column":21}},{"start":{"line":1012,"column":25},"end":{"line":1012,"column":34}}]},"151":{"line":1013,"type":"if","locations":[{"start":{"line":1013,"column":4},"end":{"line":1013,"column":4}},{"start":{"line":1013,"column":4},"end":{"line":1013,"column":4}}]},"152":{"line":1015,"type":"binary-expr","locations":[{"start":{"line":1015,"column":17},"end":{"line":1015,"column":46}},{"start":{"line":1015,"column":50},"end":{"line":1015,"column":54}}]},"153":{"line":1016,"type":"binary-expr","locations":[{"start":{"line":1016,"column":20},"end":{"line":1016,"column":32}},{"start":{"line":1016,"column":36},"end":{"line":1016,"column":44}}]},"154":{"line":1017,"type":"binary-expr","locations":[{"start":{"line":1017,"column":23},"end":{"line":1017,"column":35}},{"start":{"line":1017,"column":39},"end":{"line":1017,"column":47}}]},"155":{"line":1019,"type":"if","locations":[{"start":{"line":1019,"column":4},"end":{"line":1019,"column":4}},{"start":{"line":1019,"column":4},"end":{"line":1019,"column":4}}]},"156":{"line":1019,"type":"binary-expr","locations":[{"start":{"line":1019,"column":8},"end":{"line":1019,"column":17}},{"start":{"line":1019,"column":21},"end":{"line":1019,"column":33}}]},"157":{"line":1022,"type":"binary-expr","locations":[{"start":{"line":1022,"column":14},"end":{"line":1022,"column":22}},{"start":{"line":1022,"column":26},"end":{"line":1022,"column":46}},{"start":{"line":1023,"column":9},"end":{"line":1023,"column":20}},{"start":{"line":1023,"column":24},"end":{"line":1023,"column":50}}]},"158":{"line":1033,"type":"if","locations":[{"start":{"line":1033,"column":2},"end":{"line":1033,"column":2}},{"start":{"line":1033,"column":2},"end":{"line":1033,"column":2}}]},"159":{"line":1035,"type":"if","locations":[{"start":{"line":1035,"column":2},"end":{"line":1035,"column":2}},{"start":{"line":1035,"column":2},"end":{"line":1035,"column":2}}]},"160":{"line":1037,"type":"if","locations":[{"start":{"line":1037,"column":2},"end":{"line":1037,"column":2}},{"start":{"line":1037,"column":2},"end":{"line":1037,"column":2}}]},"161":{"line":1038,"type":"if","locations":[{"start":{"line":1038,"column":2},"end":{"line":1038,"column":2}},{"start":{"line":1038,"column":2},"end":{"line":1038,"column":2}}]},"162":{"line":1046,"type":"cond-expr","locations":[{"start":{"line":1047,"column":6},"end":{"line":1047,"column":19}},{"start":{"line":1047,"column":22},"end":{"line":1047,"column":26}}]},"163":{"line":1046,"type":"binary-expr","locations":[{"start":{"line":1046,"column":14},"end":{"line":1046,"column":47}},{"start":{"line":1046,"column":51},"end":{"line":1046,"column":66}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/*!"," * Module Dependencies."," */","","'use strict';","var g = require('../../lib/globalize');","var isEmail = require('isemail');","var loopback = require('../../lib/loopback');","var utils = require('../../lib/utils');","var path = require('path');","var qs = require('querystring');","var SALT_WORK_FACTOR = 10;","var crypto = require('crypto');","var MAX_PASSWORD_LENGTH = 72;","var bcrypt;","try {","  // Try the native module first","  bcrypt = require('bcrypt');","  // Browserify returns an empty object","  if (bcrypt && typeof bcrypt.compare !== 'function') {","    bcrypt = require('bcryptjs');","  }","} catch (err) {","  // Fall back to pure JS impl","  bcrypt = require('bcryptjs');","}","","var DEFAULT_TTL = 1209600; // 2 weeks in seconds","var DEFAULT_RESET_PW_TTL = 15 * 60; // 15 mins in seconds","var DEFAULT_MAX_TTL = 31556926; // 1 year in seconds","var assert = require('assert');","","var debug = require('debug')('loopback:user');","","/**"," * Built-in User model."," * Extends LoopBack [PersistedModel](#persistedmodel-new-persistedmodel)."," *"," * Default `User` ACLs."," *"," * - DENY EVERYONE `*`"," * - ALLOW EVERYONE `create`"," * - ALLOW OWNER `deleteById`"," * - ALLOW EVERYONE `login`"," * - ALLOW EVERYONE `logout`"," * - ALLOW OWNER `findById`"," * - ALLOW OWNER `updateAttributes`"," *"," * @property {String} username Must be unique."," * @property {String} password Hidden from remote clients."," * @property {String} email Must be valid email."," * @property {Boolean} emailVerified Set when a user's email has been verified via `confirm()`."," * @property {String} verificationToken Set when `verify()` is called."," * @property {String} realm The namespace the user belongs to. See [Partitioning users with realms](http://loopback.io/doc/en/lb2/Partitioning-users-with-realms.html) for details."," * @property {Object} settings Extends the `Model.settings` object."," * @property {Boolean} settings.emailVerificationRequired Require the email verification"," * process before allowing a login."," * @property {Number} settings.ttl Default time to live (in seconds) for the `AccessToken` created by `User.login() / user.createAccessToken()`."," * Default is `1209600` (2 weeks)"," * @property {Number} settings.maxTTL The max value a user can request a token to be alive / valid for."," * Default is `31556926` (1 year)"," * @property {Boolean} settings.realmRequired Require a realm when logging in a user."," * @property {String} settings.realmDelimiter When set a realm is required."," * @property {Number} settings.resetPasswordTokenTTL Time to live for password reset `AccessToken`. Default is `900` (15 minutes)."," * @property {Number} settings.saltWorkFactor The `bcrypt` salt work factor. Default is `10`."," * @property {Boolean} settings.caseSensitiveEmail Enable case sensitive email."," *"," * @class User"," * @inherits {PersistedModel}"," */","","module.exports = function(User) {","  /**","   * Create access token for the logged in user. This method can be overridden to","   * customize how access tokens are generated","   *","   * @param {Number} ttl The requested ttl","   * @param {Object} [options] The options for access token, such as scope, appId","   * @callback {Function} cb The callback function","   * @param {String|Error} err The error string or object","   * @param {AccessToken} token The generated access token object","   * @promise","   */","  User.prototype.createAccessToken = function(ttl, options, cb) {","    if (cb === undefined && typeof options === 'function') {","      // createAccessToken(ttl, cb)","      cb = options;","      options = undefined;","    }","","    cb = cb || utils.createPromiseCallback();","","    if (typeof ttl === 'object' && !options) {","      // createAccessToken(options, cb)","      options = ttl;","      ttl = options.ttl;","    }","    options = options || {};","    var userModel = this.constructor;","    ttl = Math.min(ttl || userModel.settings.ttl, userModel.settings.maxTTL);","    this.accessTokens.create({","      ttl: ttl,","    }, cb);","    return cb.promise;","  };","","  function splitPrincipal(name, realmDelimiter) {","    var parts = [null, name];","    if (!realmDelimiter) {","      return parts;","    }","    var index = name.indexOf(realmDelimiter);","    if (index !== -1) {","      parts[0] = name.substring(0, index);","      parts[1] = name.substring(index + realmDelimiter.length);","    }","    return parts;","  }","","  /**","   * Normalize the credentials","   * @param {Object} credentials The credential object","   * @param {Boolean} realmRequired","   * @param {String} realmDelimiter The realm delimiter, if not set, no realm is needed","   * @returns {Object} The normalized credential object","   */","  User.normalizeCredentials = function(credentials, realmRequired, realmDelimiter) {","    var query = {};","    credentials = credentials || {};","    if (!realmRequired) {","      if (credentials.email) {","        query.email = credentials.email;","      } else if (credentials.username) {","        query.username = credentials.username;","      }","    } else {","      if (credentials.realm) {","        query.realm = credentials.realm;","      }","      var parts;","      if (credentials.email) {","        parts = splitPrincipal(credentials.email, realmDelimiter);","        query.email = parts[1];","        if (parts[0]) {","          query.realm = parts[0];","        }","      } else if (credentials.username) {","        parts = splitPrincipal(credentials.username, realmDelimiter);","        query.username = parts[1];","        if (parts[0]) {","          query.realm = parts[0];","        }","      }","    }","    return query;","  };","","  /**","   * Login a user by with the given `credentials`.","   *","   * ```js","   *    User.login({username: 'foo', password: 'bar'}, function (err, token) {","  *      console.log(token.id);","  *    });","   * ```","   *","   * @param {Object} credentials username/password or email/password","   * @param {String[]|String} [include] Optionally set it to \"user\" to include","   * the user info","   * @callback {Function} callback Callback function","   * @param {Error} err Error object","   * @param {AccessToken} token Access token if login is successful","   * @promise","   */","","  User.login = function(credentials, include, fn) {","    var self = this;","    if (typeof include === 'function') {","      fn = include;","      include = undefined;","    }","","    fn = fn || utils.createPromiseCallback();","","    include = (include || '');","    if (Array.isArray(include)) {","      include = include.map(function(val) {","        return val.toLowerCase();","      });","    } else {","      include = include.toLowerCase();","    }","","    var realmDelimiter;","    // Check if realm is required","    var realmRequired = !!(self.settings.realmRequired ||","      self.settings.realmDelimiter);","    if (realmRequired) {","      realmDelimiter = self.settings.realmDelimiter;","    }","    var query = self.normalizeCredentials(credentials, realmRequired,","      realmDelimiter);","","    if (realmRequired && !query.realm) {","      var err1 = new Error(g.f('{{realm}} is required'));","      err1.statusCode = 400;","      err1.code = 'REALM_REQUIRED';","      fn(err1);","      return fn.promise;","    }","    if (!query.email && !query.username) {","      var err2 = new Error(g.f('{{username}} or {{email}} is required'));","      err2.statusCode = 400;","      err2.code = 'USERNAME_EMAIL_REQUIRED';","      fn(err2);","      return fn.promise;","    }","","    self.findOne({where: query}, function(err, user) {","      var defaultError = new Error(g.f('login failed'));","      defaultError.statusCode = 401;","      defaultError.code = 'LOGIN_FAILED';","","      function tokenHandler(err, token) {","        if (err) return fn(err);","        if (Array.isArray(include) ? include.indexOf('user') !== -1 : include === 'user') {","          // NOTE(bajtos) We can't set token.user here:","          //  1. token.user already exists, it's a function injected by","          //     \"AccessToken belongsTo User\" relation","          //  2. ModelBaseClass.toJSON() ignores own properties, thus","          //     the value won't be included in the HTTP response","          // See also loopback#161 and loopback#162","          token.__data.user = user;","        }","        fn(err, token);","      }","","      if (err) {","        debug('An error is reported from User.findOne: %j', err);","        fn(defaultError);","      } else if (user) {","        user.hasPassword(credentials.password, function(err, isMatch) {","          if (err) {","            debug('An error is reported from User.hasPassword: %j', err);","            fn(defaultError);","          } else if (isMatch) {","            if (self.settings.emailVerificationRequired && !user.emailVerified) {","              // Fail to log in if email verification is not done yet","              debug('User email has not been verified');","              err = new Error(g.f('login failed as the email has not been verified'));","              err.statusCode = 401;","              err.code = 'LOGIN_FAILED_EMAIL_NOT_VERIFIED';","              fn(err);","            } else {","              if (user.createAccessToken.length === 2) {","                user.createAccessToken(credentials.ttl, tokenHandler);","              } else {","                user.createAccessToken(credentials.ttl, credentials, tokenHandler);","              }","            }","          } else {","            debug('The password is invalid for user %s', query.email || query.username);","            fn(defaultError);","          }","        });","      } else {","        debug('No matching record is found for user %s', query.email || query.username);","        fn(defaultError);","      }","    });","    return fn.promise;","  };","","  /**","   * Logout a user with the given accessToken id.","   *","   * ```js","   *    User.logout('asd0a9f8dsj9s0s3223mk', function (err) {","  *      console.log(err || 'Logged out');","  *    });","   * ```","   *","   * @param {String} accessTokenID","   * @callback {Function} callback","   * @param {Error} err","   * @promise","   */","","  User.logout = function(tokenId, fn) {","    fn = fn || utils.createPromiseCallback();","","    var err;","    if (!tokenId) {","      err = new Error(g.f('{{accessToken}} is required to logout'));","      err.status = 401;","      process.nextTick(fn, err);","      return fn.promise;","    }","","    this.relations.accessTokens.modelTo.destroyById(tokenId, function(err, info) {","      if (err) {","        fn(err);","      } else if ('count' in info && info.count === 0) {","        err = new Error(g.f('Could not find {{accessToken}}'));","        err.status = 401;","        fn(err);","      } else {","        fn();","      }","    });","    return fn.promise;","  };","","  User.observe('before delete', function(ctx, next) {","    var AccessToken = ctx.Model.relations.accessTokens.modelTo;","    var pkName = ctx.Model.definition.idName() || 'id';","    ctx.Model.find({where: ctx.where, fields: [pkName]}, function(err, list) {","      if (err) return next(err);","","      var ids = list.map(function(u) { return u[pkName]; });","      ctx.where = {};","      ctx.where[pkName] = {inq: ids};","","      AccessToken.destroyAll({userId: {inq: ids}}, next);","    });","  });","","  /**","   * Compare the given `password` with the users hashed password.","   *","   * @param {String} password The plain text password","   * @callback {Function} callback Callback function","   * @param {Error} err Error object","   * @param {Boolean} isMatch Returns true if the given `password` matches record","   * @promise","   */","","  User.prototype.hasPassword = function(plain, fn) {","    fn = fn || utils.createPromiseCallback();","    if (this.password && plain) {","      bcrypt.compare(plain, this.password, function(err, isMatch) {","        if (err) return fn(err);","        fn(null, isMatch);","      });","    } else {","      fn(null, false);","    }","    return fn.promise;","  };","","  /**","   * Change this user's password.","   *","   * @param {*} userId Id of the user changing the password","   * @param {string} oldPassword Current password, required in order","   *   to strongly verify the identity of the requesting user","   * @param {string} newPassword The new password to use.","   * @param {object} [options]","   * @callback {Function} callback","   * @param {Error} err Error object","   * @promise","   */","  User.changePassword = function(userId, oldPassword, newPassword, options, cb) {","    if (cb === undefined && typeof options === 'function') {","      cb = options;","      options = undefined;","    }","    cb = cb || utils.createPromiseCallback();","","    // Make sure to use the constructor of the (sub)class","    // where the method is invoked from (`this` instead of `User`)","    this.findById(userId, options, (err, inst) => {","      if (err) return cb(err);","","      if (!inst) {","        const err = new Error(`User ${userId} not found`);","        Object.assign(err, {","          code: 'USER_NOT_FOUND',","          statusCode: 401,","        });","        return cb(err);","      }","","      inst.changePassword(oldPassword, newPassword, options, cb);","    });","","    return cb.promise;","  };","","  /**","   * Change this user's password (prototype/instance version).","   *","   * @param {string} oldPassword Current password, required in order","   *   to strongly verify the identity of the requesting user","   * @param {string} newPassword The new password to use.","   * @param {object} [options]","   * @callback {Function} callback","   * @param {Error} err Error object","   * @promise","   */","  User.prototype.changePassword = function(oldPassword, newPassword, options, cb) {","    if (cb === undefined && typeof options === 'function') {","      cb = options;","      options = undefined;","    }","    cb = cb || utils.createPromiseCallback();","","    this.hasPassword(oldPassword, (err, isMatch) => {","      if (err) return cb(err);","      if (!isMatch) {","        const err = new Error('Invalid current password');","        Object.assign(err, {","          code: 'INVALID_PASSWORD',","          statusCode: 400,","        });","        return cb(err);","      }","","      try {","        User.validatePassword(newPassword);","      } catch (err) {","        return cb(err);","      }","","      const delta = {password: newPassword};","      this.patchAttributes(delta, options, (err, updated) => cb(err));","    });","    return cb.promise;","  };","","  /**","   * Verify a user's identity by sending them a confirmation email.","   *","   * ```js","   *    var options = {","   *      type: 'email',","   *      to: user.email,","   *      template: 'verify.ejs',","   *      redirect: '/',","   *      tokenGenerator: function (user, cb) { cb(\"random-token\"); }","   *    };","   *","   *    user.verify(options, next);","   * ```","   *","   * @options {Object} options","   * @property {String} type Must be 'email'.","   * @property {String} to Email address to which verification email is sent.","   * @property {String} from Sender email addresss, for example","   *   `'noreply@myapp.com'`.","   * @property {String} subject Subject line text.","   * @property {String} text Text of email.","   * @property {String} template Name of template that displays verification","   *  page, for example, `'verify.ejs'.","   * @property {Function} templateFn A function generating the email HTML body","   * from `verify()` options object and generated attributes like `options.verifyHref`.","   * It must accept the option object and a callback function with `(err, html)`","   * as parameters","   * @property {String} redirect Page to which user will be redirected after","   *  they verify their email, for example `'/'` for root URI.","   * @property {Function} generateVerificationToken A function to be used to","   *  generate the verification token. It must accept the user object and a","   *  callback function. This function should NOT add the token to the user","   *  object, instead simply execute the callback with the token! User saving","   *  and email sending will be handled in the `verify()` method.","   * @callback {Function} fn Callback function.","   * @param {Error} err Error object.","   * @param {Object} object Contains email, token, uid.","   * @promise","   */","","  User.prototype.verify = function(options, fn) {","    fn = fn || utils.createPromiseCallback();","","    var user = this;","    var userModel = this.constructor;","    var registry = userModel.registry;","    var pkName = userModel.definition.idName() || 'id';","    assert(typeof options === 'object', 'options required when calling user.verify()');","    assert(options.type, 'You must supply a verification type (options.type)');","    assert(options.type === 'email', 'Unsupported verification type');","    assert(options.to || this.email,","      'Must include options.to when calling user.verify() ' +","      'or the user must have an email property');","    assert(options.from, 'Must include options.from when calling user.verify()');","","    options.redirect = options.redirect || '/';","    var defaultTemplate = path.join(__dirname, '..', '..', 'templates', 'verify.ejs');","    options.template = path.resolve(options.template || defaultTemplate);","    options.user = this;","    options.protocol = options.protocol || 'http';","","    var app = userModel.app;","    options.host = options.host || (app && app.get('host')) || 'localhost';","    options.port = options.port || (app && app.get('port')) || 3000;","    options.restApiRoot = options.restApiRoot || (app && app.get('restApiRoot')) || '/api';","","    var displayPort = (","      (options.protocol === 'http' && options.port == '80') ||","      (options.protocol === 'https' && options.port == '443')","    ) ? '' : ':' + options.port;","","    var urlPath = joinUrlPath(","      options.restApiRoot,","      userModel.http.path,","      userModel.sharedClass.findMethodByName('confirm').http.path","    );","","    options.verifyHref = options.verifyHref ||","      options.protocol +","      '://' +","      options.host +","      displayPort +","      urlPath +","      '?' + qs.stringify({","        uid: '' + options.user[pkName],","        redirect: options.redirect,","      });","","    options.templateFn = options.templateFn || createVerificationEmailBody;","","    // Email model","    var Email =","      options.mailer || this.constructor.email || registry.getModelByType(loopback.Email);","","    // Set a default token generation function if one is not provided","    var tokenGenerator = options.generateVerificationToken || User.generateVerificationToken;","    assert(typeof tokenGenerator === 'function', 'generateVerificationToken must be a function');","","    tokenGenerator(user, function(err, token) {","      if (err) { return fn(err); }","","      user.verificationToken = token;","      user.save(function(err) {","        if (err) {","          fn(err);","        } else {","          sendEmail(user);","        }","      });","    });","","    // TODO - support more verification types","    function sendEmail(user) {","      options.verifyHref += '&token=' + user.verificationToken;","","      options.verificationToken = user.verificationToken;","","      options.text = options.text || g.f('Please verify your email by opening ' +","        'this link in a web browser:\\n\\t%s', options.verifyHref);","","      options.text = options.text.replace(/\\{href\\}/g, options.verifyHref);","","      options.to = options.to || user.email;","","      options.subject = options.subject || g.f('Thanks for Registering');","","      options.headers = options.headers || {};","","      options.templateFn(options, function(err, html) {","        if (err) {","          fn(err);","        } else {","          setHtmlContentAndSend(html);","        }","      });","","      function setHtmlContentAndSend(html) {","        options.html = html;","","        // Remove options.template to prevent rejection by certain","        // nodemailer transport plugins.","        delete options.template;","","        Email.send(options, function(err, email) {","          if (err) {","            fn(err);","          } else {","            fn(null, {email: email, token: user.verificationToken, uid: user[pkName]});","          }","        });","      }","    }","    return fn.promise;","  };","","  function createVerificationEmailBody(options, cb) {","    var template = loopback.template(options.template);","    var body = template(options);","    cb(null, body);","  }","","  /**","   * A default verification token generator which accepts the user the token is","   * being generated for and a callback function to indicate completion.","   * This one uses the crypto library and 64 random bytes (converted to hex)","   * for the token. When used in combination with the user.verify() method this","   * function will be called with the `user` object as it's context (`this`).","   *","   * @param {object} user The User this token is being generated for.","   * @param {Function} cb The generator must pass back the new token with this function call","   */","  User.generateVerificationToken = function(user, cb) {","    crypto.randomBytes(64, function(err, buf) {","      cb(err, buf && buf.toString('hex'));","    });","  };","","  /**","   * Confirm the user's identity.","   *","   * @param {Any} userId","   * @param {String} token The validation token","   * @param {String} redirect URL to redirect the user to once confirmed","   * @callback {Function} callback","   * @param {Error} err","   * @promise","   */","  User.confirm = function(uid, token, redirect, fn) {","    fn = fn || utils.createPromiseCallback();","    this.findById(uid, function(err, user) {","      if (err) {","        fn(err);","      } else {","        if (user && user.verificationToken === token) {","          user.verificationToken = null;","          user.emailVerified = true;","          user.save(function(err) {","            if (err) {","              fn(err);","            } else {","              fn();","            }","          });","        } else {","          if (user) {","            err = new Error(g.f('Invalid token: %s', token));","            err.statusCode = 400;","            err.code = 'INVALID_TOKEN';","          } else {","            err = new Error(g.f('User not found: %s', uid));","            err.statusCode = 404;","            err.code = 'USER_NOT_FOUND';","          }","          fn(err);","        }","      }","    });","    return fn.promise;","  };","","  /**","   * Create a short lived access token for temporary login. Allows users","   * to change passwords if forgotten.","   *","   * @options {Object} options","   * @prop {String} email The user's email address","   * @property {String} realm The user's realm (optional)","   * @callback {Function} callback","   * @param {Error} err","   * @promise","   */","","  User.resetPassword = function(options, cb) {","    cb = cb || utils.createPromiseCallback();","    var UserModel = this;","    var ttl = UserModel.settings.resetPasswordTokenTTL || DEFAULT_RESET_PW_TTL;","    options = options || {};","    if (typeof options.email !== 'string') {","      var err = new Error(g.f('Email is required'));","      err.statusCode = 400;","      err.code = 'EMAIL_REQUIRED';","      cb(err);","      return cb.promise;","    }","","    try {","      if (options.password) {","        UserModel.validatePassword(options.password);","      }","    } catch (err) {","      return cb(err);","    }","    var where = {","      email: options.email,","    };","    if (options.realm) {","      where.realm = options.realm;","    }","    UserModel.findOne({where: where}, function(err, user) {","      if (err) {","        return cb(err);","      }","      if (!user) {","        err = new Error(g.f('Email not found'));","        err.statusCode = 404;","        err.code = 'EMAIL_NOT_FOUND';","        return cb(err);","      }","      // create a short lived access token for temp login to change password","      // TODO(ritch) - eventually this should only allow password change","      if (UserModel.settings.emailVerificationRequired && !user.emailVerified) {","        err = new Error(g.f('Email has not been verified'));","        err.statusCode = 401;","        err.code = 'RESET_FAILED_EMAIL_NOT_VERIFIED';","        return cb(err);","      }","","      user.createAccessToken(ttl, function(err, accessToken) {","        if (err) {","          return cb(err);","        }","        cb();","        UserModel.emit('resetPasswordRequest', {","          email: options.email,","          accessToken: accessToken,","          user: user,","          options: options,","        });","      });","    });","","    return cb.promise;","  };","","  /*!","   * Hash the plain password","   */","  User.hashPassword = function(plain) {","    this.validatePassword(plain);","    var salt = bcrypt.genSaltSync(this.settings.saltWorkFactor || SALT_WORK_FACTOR);","    return bcrypt.hashSync(plain, salt);","  };","","  User.validatePassword = function(plain) {","    var err;","    if (plain && typeof plain === 'string' && plain.length <= MAX_PASSWORD_LENGTH) {","      return true;","    }","    if (plain.length > MAX_PASSWORD_LENGTH) {","      err = new Error(g.f('Password too long: %s', plain));","      err.code = 'PASSWORD_TOO_LONG';","    } else {","      err =  new Error(g.f('Invalid password: %s', plain));","      err.code = 'INVALID_PASSWORD';","    }","    err.statusCode = 422;","    throw err;","  };","","  User._invalidateAccessTokensOfUsers = function(userIds, options, cb) {","    if (typeof options === 'function' && cb === undefined) {","      cb = options;","      options = {};","    }","","    if (!Array.isArray(userIds) || !userIds.length)","      return process.nextTick(cb);","","    var accessTokenRelation = this.relations.accessTokens;","    if (!accessTokenRelation)","      return process.nextTick(cb);","","    var AccessToken = accessTokenRelation.modelTo;","    var query = {userId: {inq: userIds}};","    var tokenPK = AccessToken.definition.idName() || 'id';","    if (options.accessToken && tokenPK in options.accessToken) {","      query[tokenPK] = {neq: options.accessToken[tokenPK]};","    }","    // add principalType in AccessToken.query if using polymorphic relations","    // between AccessToken and User","    var relatedUser = AccessToken.relations.user;","    var isRelationPolymorphic = relatedUser && relatedUser.polymorphic &&","      !relatedUser.modelTo;","    if (isRelationPolymorphic) {","      query.principalType = this.modelName;","    }","    AccessToken.deleteAll(query, options, cb);","  };","","  /*!","   * Setup an extended user model.","   */","","  User.setup = function() {","    // We need to call the base class's setup method","    User.base.setup.call(this);","    var UserModel = this;","","    // max ttl","    this.settings.maxTTL = this.settings.maxTTL || DEFAULT_MAX_TTL;","    this.settings.ttl = this.settings.ttl || DEFAULT_TTL;","","    UserModel.setter.email = function(value) {","      if (!UserModel.settings.caseSensitiveEmail) {","        this.$email = value.toLowerCase();","      } else {","        this.$email = value;","      }","    };","","    UserModel.setter.password = function(plain) {","      if (typeof plain !== 'string') {","        return;","      }","      if (plain.indexOf('$2a$') === 0 && plain.length === 60) {","        // The password is already hashed. It can be the case","        // when the instance is loaded from DB","        this.$password = plain;","      } else {","        this.$password = this.constructor.hashPassword(plain);","      }","    };","","    // Make sure emailVerified is not set by creation","    UserModel.beforeRemote('create', function(ctx, user, next) {","      var body = ctx.req.body;","      if (body && body.emailVerified) {","        body.emailVerified = false;","      }","      next();","    });","","    UserModel.remoteMethod(","      'login',","      {","        description: 'Login a user with username/email and password.',","        accepts: [","          {arg: 'credentials', type: 'object', required: true, http: {source: 'body'}},","          {arg: 'include', type: ['string'], http: {source: 'query'},","            description: 'Related objects to include in the response. ' +","            'See the description of return value for more details.'},","        ],","        returns: {","          arg: 'accessToken', type: 'object', root: true,","          description:","            g.f('The response body contains properties of the {{AccessToken}} created on login.\\n' +","            'Depending on the value of `include` parameter, the body may contain ' +","            'additional properties:\\n\\n' +","            '  - `user` - `U+007BUserU+007D` - Data of the currently logged in user. ' +","            '{{(`include=user`)}}\\n\\n'),","        },","        http: {verb: 'post'},","      }","    );","","    UserModel.remoteMethod(","      'logout',","      {","        description: 'Logout a user with access token.',","        accepts: [","          {arg: 'access_token', type: 'string', http: function(ctx) {","            var req = ctx && ctx.req;","            var accessToken = req && req.accessToken;","            var tokenID = accessToken ? accessToken.id : undefined;","","            return tokenID;","          }, description: 'Do not supply this argument, it is automatically extracted ' +","            'from request headers.',","          },","        ],","        http: {verb: 'all'},","      }","    );","","    UserModel.remoteMethod(","      'confirm',","      {","        description: 'Confirm a user registration with email verification token.',","        accepts: [","          {arg: 'uid', type: 'string', required: true},","          {arg: 'token', type: 'string', required: true},","          {arg: 'redirect', type: 'string'},","        ],","        http: {verb: 'get', path: '/confirm'},","      }","    );","","    UserModel.remoteMethod(","      'resetPassword',","      {","        description: 'Reset password for a user with email.',","        accepts: [","          {arg: 'options', type: 'object', required: true, http: {source: 'body'}},","        ],","        http: {verb: 'post', path: '/reset'},","      }","    );","","    UserModel.remoteMethod(","      'changePassword',","      {","        description: 'Change a user\\'s password.',","        accepts: [","          {arg: 'id', type: 'any',","            http: ctx => ctx.req.accessToken && ctx.req.accessToken.userId,","          },","          {arg: 'oldPassword', type: 'string', required: true, http: {source: 'form'}},","          {arg: 'newPassword', type: 'string', required: true, http: {source: 'form'}},","          {arg: 'options', type: 'object', http: 'optionsFromRequest'},","        ],","        http: {verb: 'POST', path: '/change-password'},","      }","    );","","    UserModel.afterRemote('confirm', function(ctx, inst, next) {","      if (ctx.args.redirect !== undefined) {","        if (!ctx.res) {","          return next(new Error(g.f('The transport does not support HTTP redirects.')));","        }","        ctx.res.location(ctx.args.redirect);","        ctx.res.status(302);","      }","      next();","    });","","    // default models","    assert(loopback.Email, 'Email model must be defined before User model');","    UserModel.email = loopback.Email;","","    assert(loopback.AccessToken, 'AccessToken model must be defined before User model');","    UserModel.accessToken = loopback.AccessToken;","","    UserModel.validate('email', emailValidator, {","      message: g.f('Must provide a valid email'),","    });","","    // Realm users validation","    if (UserModel.settings.realmRequired && UserModel.settings.realmDelimiter) {","      UserModel.validatesUniquenessOf('email', {","        message: 'Email already exists',","        scopedTo: ['realm'],","      });","      UserModel.validatesUniquenessOf('username', {","        message: 'User already exists',","        scopedTo: ['realm'],","      });","    } else {","      // Regular(Non-realm) users validation","      UserModel.validatesUniquenessOf('email', {message: 'Email already exists'});","      UserModel.validatesUniquenessOf('username', {message: 'User already exists'});","    }","","    return UserModel;","  };","","  /*!","   * Setup the base user.","   */","","  User.setup();","","  // --- OPERATION HOOKS ---","  //","  // Important: Operation hooks are inherited by subclassed models,","  // therefore they must be registered outside of setup() function","","  // Access token to normalize email credentials","  User.observe('access', function normalizeEmailCase(ctx, next) {","    if (!ctx.Model.settings.caseSensitiveEmail && ctx.query.where &&","        ctx.query.where.email && typeof(ctx.query.where.email) === 'string') {","      ctx.query.where.email = ctx.query.where.email.toLowerCase();","    }","    next();","  });","","  User.observe('before save', function prepareForTokenInvalidation(ctx, next) {","    if (ctx.isNewInstance) return next();","    if (!ctx.where && !ctx.instance) return next();","","    var pkName = ctx.Model.definition.idName() || 'id';","    var where = ctx.where;","    if (!where) {","      where = {};","      where[pkName] = ctx.instance[pkName];","    }","","    ctx.Model.find({where: where}, ctx.options, function(err, userInstances) {","      if (err) return next(err);","      ctx.hookState.originalUserData = userInstances.map(function(u) {","        var user = {};","        user[pkName] = u[pkName];","        user.email = u.email;","        user.password = u.password;","        return user;","      });","      var emailChanged;","      if (ctx.instance) {","        emailChanged = ctx.instance.email !== ctx.hookState.originalUserData[0].email;","        if (emailChanged && ctx.Model.settings.emailVerificationRequired) {","          ctx.instance.emailVerified = false;","        }","      } else if (ctx.data.email) {","        emailChanged = ctx.hookState.originalUserData.some(function(data) {","          return data.email != ctx.data.email;","        });","        if (emailChanged && ctx.Model.settings.emailVerificationRequired) {","          ctx.data.emailVerified = false;","        }","      }","","      next();","    });","  });","","  User.observe('after save', function invalidateOtherTokens(ctx, next) {","    if (!ctx.instance && !ctx.data) return next();","    if (!ctx.hookState.originalUserData) return next();","","    var pkName = ctx.Model.definition.idName() || 'id';","    var newEmail = (ctx.instance || ctx.data).email;","    var newPassword = (ctx.instance || ctx.data).password;","","    if (!newEmail && !newPassword) return next();","","    var userIdsToExpire = ctx.hookState.originalUserData.filter(function(u) {","      return (newEmail && u.email !== newEmail) ||","        (newPassword && u.password !== newPassword);","    }).map(function(u) {","      return u[pkName];","    });","    ctx.Model._invalidateAccessTokensOfUsers(userIdsToExpire, ctx.options, next);","  });","};","","function emailValidator(err, done) {","  var value = this.email;","  if (value == null)","    return;","  if (typeof value !== 'string')","    return err('string');","  if (value === '') return;","  if (!isEmail.validate(value))","    return err('email');","}","","function joinUrlPath(args) {","  var result = arguments[0];","  for (var ix = 1; ix < arguments.length; ix++) {","    var next = arguments[ix];","    result += result[result.length - 1] === '/' && next[0] === '/' ?","      next.slice(1) : next;","  }","  return result;","}",""],"l":{"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"23":1,"25":0,"26":0,"30":1,"33":1,"34":1,"35":1,"36":1,"38":1,"77":1,"89":1,"90":0,"92":0,"93":0,"96":0,"98":0,"100":0,"101":0,"103":0,"104":0,"105":0,"106":0,"109":0,"112":1,"113":0,"114":0,"115":0,"117":0,"118":0,"119":0,"120":0,"122":0,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"142":0,"143":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"152":0,"153":0,"154":0,"155":0,"156":0,"160":0,"181":1,"182":0,"183":0,"184":0,"185":0,"188":0,"190":0,"191":0,"192":0,"193":0,"196":0,"199":0,"201":0,"203":0,"204":0,"206":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"224":0,"225":0,"226":0,"227":0,"229":1,"230":0,"231":0,"238":0,"240":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"254":0,"255":0,"256":0,"257":0,"258":0,"260":0,"261":0,"263":0,"267":0,"268":0,"272":0,"273":0,"276":0,"294":1,"295":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"313":0,"316":0,"319":1,"320":0,"321":0,"322":0,"323":0,"325":0,"326":0,"327":0,"329":0,"343":1,"344":0,"345":0,"346":0,"347":0,"348":0,"351":0,"353":0,"368":1,"369":0,"370":0,"371":0,"373":0,"377":0,"378":0,"380":0,"381":0,"382":0,"386":0,"389":0,"392":0,"406":1,"407":0,"408":0,"409":0,"411":0,"413":0,"414":0,"415":0,"416":0,"417":0,"421":0,"424":0,"425":0,"427":0,"430":0,"431":0,"433":0,"477":1,"478":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"490":0,"492":0,"493":0,"494":0,"495":0,"496":0,"498":0,"499":0,"500":0,"501":0,"503":0,"508":0,"514":0,"525":0,"528":0,"532":0,"533":0,"535":0,"536":0,"538":0,"539":0,"540":0,"541":0,"543":0,"549":1,"550":0,"552":0,"554":0,"557":0,"559":0,"561":0,"563":0,"565":0,"566":0,"567":0,"569":0,"573":1,"574":0,"578":0,"580":0,"581":0,"582":0,"584":0,"589":0,"592":1,"593":0,"594":0,"595":0,"608":1,"609":0,"610":0,"624":1,"625":0,"626":0,"627":0,"628":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"637":0,"641":0,"642":0,"643":0,"644":0,"646":0,"647":0,"648":0,"650":0,"654":0,"669":1,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"682":0,"683":0,"684":0,"687":0,"689":0,"692":0,"693":0,"695":0,"696":0,"697":0,"699":0,"700":0,"701":0,"702":0,"703":0,"707":0,"708":0,"709":0,"710":0,"711":0,"714":0,"715":0,"716":0,"718":0,"719":0,"728":0,"734":1,"735":0,"736":0,"737":0,"740":1,"741":0,"742":0,"743":0,"745":0,"746":0,"747":0,"749":0,"750":0,"752":0,"753":0,"756":1,"757":0,"758":0,"759":0,"762":0,"763":0,"765":0,"766":0,"767":0,"769":0,"770":0,"771":0,"772":0,"773":0,"777":0,"778":0,"780":0,"781":0,"783":0,"790":1,"792":1,"793":1,"796":1,"797":1,"799":1,"800":0,"801":0,"803":0,"807":1,"808":0,"809":0,"811":0,"814":0,"816":0,"821":1,"822":0,"823":0,"824":0,"826":0,"829":1,"852":1,"858":0,"859":0,"860":0,"862":0,"871":1,"884":1,"895":1,"901":0,"911":1,"912":0,"913":0,"914":0,"916":0,"917":0,"919":0,"923":1,"924":1,"926":1,"927":1,"929":1,"934":1,"935":0,"939":0,"945":1,"946":1,"949":1,"956":1,"964":1,"965":0,"967":0,"969":0,"972":1,"973":0,"974":0,"976":0,"977":0,"978":0,"979":0,"980":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"992":0,"993":0,"994":0,"995":0,"996":0,"998":0,"999":0,"1000":0,"1002":0,"1003":0,"1007":0,"1011":1,"1012":0,"1013":0,"1015":0,"1016":0,"1017":0,"1019":0,"1021":0,"1022":0,"1025":0,"1027":0,"1031":1,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1042":1,"1043":0,"1044":0,"1045":0,"1046":0,"1049":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/role-mapping.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/role-mapping.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":17},"end":{"line":21,"column":39}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":37},"end":{"line":27,"column":48}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":38},"end":{"line":42,"column":57}}},"4":{"name":"(anonymous_4)","line":50,"loc":{"start":{"line":50,"column":23},"end":{"line":50,"column":34}}},"5":{"name":"(anonymous_5)","line":63,"loc":{"start":{"line":63,"column":31},"end":{"line":63,"column":50}}},"6":{"name":"(anonymous_6)","line":79,"loc":{"start":{"line":79,"column":23},"end":{"line":79,"column":34}}},"7":{"name":"(anonymous_7)","line":92,"loc":{"start":{"line":92,"column":36},"end":{"line":92,"column":55}}},"8":{"name":"(anonymous_8)","line":100,"loc":{"start":{"line":100,"column":23},"end":{"line":100,"column":34}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"3":{"start":{"line":21,"column":0},"end":{"line":106,"column":2}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":28}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":52}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":28}},"7":{"start":{"line":27,"column":2},"end":{"line":34,"column":4}},"8":{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},"9":{"start":{"line":29,"column":6},"end":{"line":29,"column":30}},"10":{"start":{"line":30,"column":6},"end":{"line":30,"column":50}},"11":{"start":{"line":31,"column":6},"end":{"line":31,"column":50}},"12":{"start":{"line":32,"column":6},"end":{"line":32,"column":64}},"13":{"start":{"line":42,"column":2},"end":{"line":55,"column":4}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":57}},"15":{"start":{"line":44,"column":4},"end":{"line":44,"column":44}},"16":{"start":{"line":46,"column":4},"end":{"line":53,"column":5}},"17":{"start":{"line":47,"column":6},"end":{"line":47,"column":63}},"18":{"start":{"line":48,"column":6},"end":{"line":48,"column":60}},"19":{"start":{"line":50,"column":6},"end":{"line":52,"column":9}},"20":{"start":{"line":51,"column":8},"end":{"line":51,"column":29}},"21":{"start":{"line":54,"column":4},"end":{"line":54,"column":28}},"22":{"start":{"line":63,"column":2},"end":{"line":84,"column":4}},"23":{"start":{"line":64,"column":4},"end":{"line":64,"column":57}},"24":{"start":{"line":65,"column":4},"end":{"line":65,"column":44}},"25":{"start":{"line":66,"column":4},"end":{"line":66,"column":18}},"26":{"start":{"line":68,"column":4},"end":{"line":72,"column":5}},"27":{"start":{"line":69,"column":6},"end":{"line":69,"column":45}},"28":{"start":{"line":70,"column":6},"end":{"line":70,"column":53}},"29":{"start":{"line":71,"column":6},"end":{"line":71,"column":30}},"30":{"start":{"line":75,"column":4},"end":{"line":75,"column":72}},"31":{"start":{"line":76,"column":4},"end":{"line":82,"column":5}},"32":{"start":{"line":77,"column":6},"end":{"line":77,"column":53}},"33":{"start":{"line":79,"column":6},"end":{"line":81,"column":9}},"34":{"start":{"line":80,"column":8},"end":{"line":80,"column":29}},"35":{"start":{"line":83,"column":4},"end":{"line":83,"column":28}},"36":{"start":{"line":92,"column":2},"end":{"line":105,"column":4}},"37":{"start":{"line":93,"column":4},"end":{"line":93,"column":57}},"38":{"start":{"line":94,"column":4},"end":{"line":94,"column":44}},"39":{"start":{"line":96,"column":4},"end":{"line":103,"column":5}},"40":{"start":{"line":97,"column":6},"end":{"line":97,"column":49}},"41":{"start":{"line":98,"column":6},"end":{"line":98,"column":53}},"42":{"start":{"line":100,"column":6},"end":{"line":102,"column":9}},"43":{"start":{"line":101,"column":8},"end":{"line":101,"column":29}},"44":{"start":{"line":104,"column":4},"end":{"line":104,"column":28}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"2":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":15},"end":{"line":43,"column":23}},{"start":{"line":43,"column":27},"end":{"line":43,"column":56}}]},"3":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"4":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":15},"end":{"line":64,"column":23}},{"start":{"line":64,"column":27},"end":{"line":64,"column":56}}]},"5":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"6":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"7":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":15},"end":{"line":93,"column":23}},{"start":{"line":93,"column":27},"end":{"line":93,"column":56}}]},"8":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]}},"code":["// Copyright IBM Corp. 2014,2015. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var loopback = require('../../lib/loopback');","var utils = require('../../lib/utils');","","/**"," * The `RoleMapping` model extends from the built in `loopback.Model` type."," *"," * @property {String} id Generated ID."," * @property {String} name Name of the role."," * @property {String} Description Text description."," *"," * @class RoleMapping"," * @inherits {PersistedModel}"," */","","module.exports = function(RoleMapping) {","  // Principal types","  RoleMapping.USER = 'USER';","  RoleMapping.APP = RoleMapping.APPLICATION = 'APP';","  RoleMapping.ROLE = 'ROLE';","","  RoleMapping.resolveRelatedModels = function() {","    if (!this.userModel) {","      var reg = this.registry;","      this.roleModel = reg.getModelByType('Role');","      this.userModel = reg.getModelByType('User');","      this.applicationModel = reg.getModelByType('Application');","    }","  };","","  /**","   * Get the application principal","   * @callback {Function} callback","   * @param {Error} err","   * @param {Application} application","   */","  RoleMapping.prototype.application = function(callback) {","    callback = callback || utils.createPromiseCallback();","    this.constructor.resolveRelatedModels();","","    if (this.principalType === RoleMapping.APPLICATION) {","      var applicationModel = this.constructor.applicationModel;","      applicationModel.findById(this.principalId, callback);","    } else {","      process.nextTick(function() {","        callback(null, null);","      });","    }","    return callback.promise;","  };","","  /**","   * Get the user principal","   * @callback {Function} callback","   * @param {Error} err","   * @param {User} user","   */","  RoleMapping.prototype.user = function(callback) {","    callback = callback || utils.createPromiseCallback();","    this.constructor.resolveRelatedModels();","    var userModel;","","    if (this.principalType === RoleMapping.USER) {","      userModel = this.constructor.userModel;","      userModel.findById(this.principalId, callback);","      return callback.promise;","    }","","    // try resolving a user model that matches principalType","    userModel = this.constructor.registry.findModel(this.principalType);","    if (userModel) {","      userModel.findById(this.principalId, callback);","    } else {","      process.nextTick(function() {","        callback(null, null);","      });","    }","    return callback.promise;","  };","","  /**","   * Get the child role principal","   * @callback {Function} callback","   * @param {Error} err","   * @param {User} childUser","   */","  RoleMapping.prototype.childRole = function(callback) {","    callback = callback || utils.createPromiseCallback();","    this.constructor.resolveRelatedModels();","","    if (this.principalType === RoleMapping.ROLE) {","      var roleModel = this.constructor.roleModel;","      roleModel.findById(this.principalId, callback);","    } else {","      process.nextTick(function() {","        callback(null, null);","      });","    }","    return callback.promise;","  };","};",""],"l":{"7":1,"8":1,"21":1,"23":1,"24":1,"25":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"42":1,"43":0,"44":0,"46":0,"47":0,"48":0,"50":0,"51":0,"54":0,"63":1,"64":0,"65":0,"66":0,"68":0,"69":0,"70":0,"71":0,"75":0,"76":0,"77":0,"79":0,"80":0,"83":0,"92":1,"93":0,"94":0,"96":0,"97":0,"98":0,"100":0,"101":0,"104":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/role.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/role.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":4,"67":1,"68":4,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":1,"161":0,"162":0,"163":0,"164":1,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":1,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[1,3],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0,0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":4,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":17},"end":{"line":24,"column":32}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":30},"end":{"line":25,"column":41}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":34},"end":{"line":35,"column":54}}},"4":{"name":"(anonymous_4)","line":36,"loc":{"start":{"line":36,"column":47},"end":{"line":36,"column":61}}},"5":{"name":"(anonymous_5)","line":64,"loc":{"start":{"line":64,"column":28},"end":{"line":64,"column":54}}},"6":{"name":"(anonymous_6)","line":109,"loc":{"start":{"line":109,"column":27},"end":{"line":109,"column":38}}},"7":{"name":"listByPrincipalType","line":126,"loc":{"start":{"line":126,"column":4},"end":{"line":126,"column":81}}},"8":{"name":"(anonymous_8)","line":135,"loc":{"start":{"line":135,"column":9},"end":{"line":135,"column":33}}},"9":{"name":"(anonymous_9)","line":140,"loc":{"start":{"line":140,"column":27},"end":{"line":140,"column":39}}},"10":{"name":"(anonymous_10)","line":145,"loc":{"start":{"line":145,"column":26},"end":{"line":145,"column":48}}},"11":{"name":"(anonymous_11)","line":166,"loc":{"start":{"line":166,"column":26},"end":{"line":166,"column":51}}},"12":{"name":"(anonymous_12)","line":173,"loc":{"start":{"line":173,"column":36},"end":{"line":173,"column":70}}},"13":{"name":"(anonymous_13)","line":175,"loc":{"start":{"line":175,"column":23},"end":{"line":175,"column":34}}},"14":{"name":"isUserClass","line":189,"loc":{"start":{"line":189,"column":2},"end":{"line":189,"column":35}}},"15":{"name":"matches","line":202,"loc":{"start":{"line":202,"column":2},"end":{"line":202,"column":29}}},"16":{"name":"isOwner","line":224,"loc":{"start":{"line":224,"column":17},"end":{"line":224,"column":97}}},"17":{"name":"(anonymous_17)","line":243,"loc":{"start":{"line":243,"column":23},"end":{"line":243,"column":34}}},"18":{"name":"(anonymous_18)","line":254,"loc":{"start":{"line":254,"column":25},"end":{"line":254,"column":36}}},"19":{"name":"(anonymous_19)","line":261,"loc":{"start":{"line":261,"column":42},"end":{"line":261,"column":62}}},"20":{"name":"processRelatedUser","line":297,"loc":{"start":{"line":297,"column":6},"end":{"line":297,"column":45}}},"21":{"name":"(anonymous_21)","line":309,"loc":{"start":{"line":309,"column":44},"end":{"line":309,"column":78}}},"22":{"name":"(anonymous_22)","line":311,"loc":{"start":{"line":311,"column":23},"end":{"line":311,"column":34}}},"23":{"name":"isAuthenticated","line":328,"loc":{"start":{"line":328,"column":25},"end":{"line":328,"column":69}}},"24":{"name":"(anonymous_24)","line":330,"loc":{"start":{"line":330,"column":21},"end":{"line":330,"column":32}}},"25":{"name":"(anonymous_25)","line":336,"loc":{"start":{"line":336,"column":46},"end":{"line":336,"column":80}}},"26":{"name":"(anonymous_26)","line":337,"loc":{"start":{"line":337,"column":21},"end":{"line":337,"column":32}}},"27":{"name":"(anonymous_27)","line":342,"loc":{"start":{"line":342,"column":39},"end":{"line":342,"column":73}}},"28":{"name":"(anonymous_28)","line":343,"loc":{"start":{"line":343,"column":21},"end":{"line":343,"column":32}}},"29":{"name":"(anonymous_29)","line":359,"loc":{"start":{"line":359,"column":18},"end":{"line":359,"column":52}}},"30":{"name":"(anonymous_30)","line":370,"loc":{"start":{"line":370,"column":47},"end":{"line":370,"column":66}}},"31":{"name":"(anonymous_31)","line":387,"loc":{"start":{"line":387,"column":10},"end":{"line":387,"column":27}}},"32":{"name":"(anonymous_32)","line":396,"loc":{"start":{"line":396,"column":23},"end":{"line":396,"column":34}}},"33":{"name":"(anonymous_33)","line":402,"loc":{"start":{"line":402,"column":41},"end":{"line":402,"column":53}}},"34":{"name":"(anonymous_34)","line":412,"loc":{"start":{"line":412,"column":23},"end":{"line":412,"column":34}}},"35":{"name":"(anonymous_35)","line":419,"loc":{"start":{"line":419,"column":40},"end":{"line":419,"column":62}}},"36":{"name":"(anonymous_36)","line":431,"loc":{"start":{"line":431,"column":37},"end":{"line":431,"column":55}}},"37":{"name":"(anonymous_37)","line":444,"loc":{"start":{"line":444,"column":12},"end":{"line":444,"column":34}}},"38":{"name":"(anonymous_38)","line":449,"loc":{"start":{"line":449,"column":27},"end":{"line":449,"column":38}}},"39":{"name":"(anonymous_39)","line":453,"loc":{"start":{"line":453,"column":9},"end":{"line":453,"column":26}}},"40":{"name":"(anonymous_40)","line":470,"loc":{"start":{"line":470,"column":18},"end":{"line":470,"column":55}}},"41":{"name":"(anonymous_41)","line":488,"loc":{"start":{"line":488,"column":18},"end":{"line":488,"column":33}}},"42":{"name":"(anonymous_42)","line":497,"loc":{"start":{"line":497,"column":40},"end":{"line":497,"column":55}}},"43":{"name":"(anonymous_43)","line":498,"loc":{"start":{"line":498,"column":23},"end":{"line":498,"column":38}}},"44":{"name":"(anonymous_44)","line":499,"loc":{"start":{"line":499,"column":37},"end":{"line":499,"column":59}}},"45":{"name":"(anonymous_45)","line":514,"loc":{"start":{"line":514,"column":31},"end":{"line":514,"column":43}}},"46":{"name":"(anonymous_46)","line":530,"loc":{"start":{"line":530,"column":25},"end":{"line":530,"column":40}}},"47":{"name":"(anonymous_47)","line":535,"loc":{"start":{"line":535,"column":40},"end":{"line":535,"column":64}}},"48":{"name":"(anonymous_48)","line":541,"loc":{"start":{"line":541,"column":29},"end":{"line":541,"column":41}}},"49":{"name":"(anonymous_49)","line":556,"loc":{"start":{"line":556,"column":32},"end":{"line":556,"column":55}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":55}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":31}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":29}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}},"9":{"start":{"line":15,"column":0},"end":{"line":15,"column":39}},"10":{"start":{"line":17,"column":0},"end":{"line":17,"column":75}},"11":{"start":{"line":24,"column":0},"end":{"line":564,"column":2}},"12":{"start":{"line":25,"column":2},"end":{"line":32,"column":4}},"13":{"start":{"line":26,"column":4},"end":{"line":31,"column":5}},"14":{"start":{"line":27,"column":6},"end":{"line":27,"column":30}},"15":{"start":{"line":28,"column":6},"end":{"line":28,"column":64}},"16":{"start":{"line":29,"column":6},"end":{"line":29,"column":50}},"17":{"start":{"line":30,"column":6},"end":{"line":30,"column":64}},"18":{"start":{"line":35,"column":2},"end":{"line":150,"column":5}},"19":{"start":{"line":36,"column":4},"end":{"line":115,"column":7}},"20":{"start":{"line":64,"column":6},"end":{"line":114,"column":8}},"21":{"start":{"line":65,"column":8},"end":{"line":72,"column":9}},"22":{"start":{"line":66,"column":10},"end":{"line":71,"column":11}},"23":{"start":{"line":67,"column":12},"end":{"line":67,"column":29}},"24":{"start":{"line":68,"column":12},"end":{"line":68,"column":23}},"25":{"start":{"line":70,"column":12},"end":{"line":70,"column":53}},"26":{"start":{"line":73,"column":8},"end":{"line":73,"column":28}},"27":{"start":{"line":74,"column":8},"end":{"line":74,"column":40}},"28":{"start":{"line":76,"column":8},"end":{"line":76,"column":41}},"29":{"start":{"line":77,"column":8},"end":{"line":81,"column":10}},"30":{"start":{"line":83,"column":8},"end":{"line":83,"column":31}},"31":{"start":{"line":84,"column":8},"end":{"line":88,"column":10}},"32":{"start":{"line":90,"column":8},"end":{"line":90,"column":47}},"33":{"start":{"line":91,"column":8},"end":{"line":91,"column":45}},"34":{"start":{"line":94,"column":8},"end":{"line":96,"column":57}},"35":{"start":{"line":98,"column":8},"end":{"line":102,"column":9}},"36":{"start":{"line":99,"column":10},"end":{"line":99,"column":51}},"37":{"start":{"line":100,"column":10},"end":{"line":100,"column":73}},"38":{"start":{"line":101,"column":10},"end":{"line":101,"column":52}},"39":{"start":{"line":104,"column":8},"end":{"line":104,"column":41}},"40":{"start":{"line":106,"column":8},"end":{"line":112,"column":9}},"41":{"start":{"line":107,"column":10},"end":{"line":107,"column":84}},"42":{"start":{"line":109,"column":10},"end":{"line":111,"column":13}},"43":{"start":{"line":110,"column":12},"end":{"line":110,"column":31}},"44":{"start":{"line":113,"column":8},"end":{"line":113,"column":32}},"45":{"start":{"line":126,"column":4},"end":{"line":149,"column":5}},"46":{"start":{"line":127,"column":6},"end":{"line":130,"column":7}},"47":{"start":{"line":128,"column":8},"end":{"line":128,"column":25}},"48":{"start":{"line":129,"column":8},"end":{"line":129,"column":19}},"49":{"start":{"line":131,"column":6},"end":{"line":131,"column":26}},"50":{"start":{"line":133,"column":6},"end":{"line":148,"column":9}},"51":{"start":{"line":136,"column":8},"end":{"line":136,"column":16}},"52":{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},"53":{"start":{"line":138,"column":10},"end":{"line":138,"column":31}},"54":{"start":{"line":140,"column":8},"end":{"line":142,"column":11}},"55":{"start":{"line":141,"column":10},"end":{"line":141,"column":31}},"56":{"start":{"line":143,"column":8},"end":{"line":143,"column":40}},"57":{"start":{"line":144,"column":8},"end":{"line":144,"column":36}},"58":{"start":{"line":145,"column":8},"end":{"line":147,"column":11}},"59":{"start":{"line":146,"column":10},"end":{"line":146,"column":32}},"60":{"start":{"line":153,"column":2},"end":{"line":153,"column":24}},"61":{"start":{"line":154,"column":2},"end":{"line":154,"column":28}},"62":{"start":{"line":155,"column":2},"end":{"line":155,"column":40}},"63":{"start":{"line":156,"column":2},"end":{"line":156,"column":44}},"64":{"start":{"line":157,"column":2},"end":{"line":157,"column":30}},"65":{"start":{"line":166,"column":2},"end":{"line":171,"column":4}},"66":{"start":{"line":167,"column":4},"end":{"line":169,"column":5}},"67":{"start":{"line":168,"column":6},"end":{"line":168,"column":26}},"68":{"start":{"line":170,"column":4},"end":{"line":170,"column":36}},"69":{"start":{"line":173,"column":2},"end":{"line":187,"column":5}},"70":{"start":{"line":174,"column":4},"end":{"line":179,"column":5}},"71":{"start":{"line":175,"column":6},"end":{"line":177,"column":9}},"72":{"start":{"line":176,"column":8},"end":{"line":176,"column":44}},"73":{"start":{"line":176,"column":22},"end":{"line":176,"column":44}},"74":{"start":{"line":178,"column":6},"end":{"line":178,"column":13}},"75":{"start":{"line":180,"column":4},"end":{"line":180,"column":35}},"76":{"start":{"line":181,"column":4},"end":{"line":181,"column":34}},"77":{"start":{"line":182,"column":4},"end":{"line":182,"column":33}},"78":{"start":{"line":183,"column":4},"end":{"line":183,"column":33}},"79":{"start":{"line":184,"column":4},"end":{"line":184,"column":51}},"80":{"start":{"line":185,"column":4},"end":{"line":185,"column":50}},"81":{"start":{"line":186,"column":4},"end":{"line":186,"column":77}},"82":{"start":{"line":189,"column":2},"end":{"line":194,"column":3}},"83":{"start":{"line":190,"column":4},"end":{"line":190,"column":34}},"84":{"start":{"line":190,"column":21},"end":{"line":190,"column":34}},"85":{"start":{"line":191,"column":4},"end":{"line":191,"column":51}},"86":{"start":{"line":192,"column":4},"end":{"line":192,"column":28}},"87":{"start":{"line":192,"column":15},"end":{"line":192,"column":28}},"88":{"start":{"line":193,"column":4},"end":{"line":193,"column":70}},"89":{"start":{"line":202,"column":2},"end":{"line":209,"column":3}},"90":{"start":{"line":203,"column":4},"end":{"line":206,"column":5}},"91":{"start":{"line":205,"column":6},"end":{"line":205,"column":19}},"92":{"start":{"line":208,"column":4},"end":{"line":208,"column":60}},"93":{"start":{"line":224,"column":2},"end":{"line":307,"column":4}},"94":{"start":{"line":225,"column":4},"end":{"line":232,"column":5}},"95":{"start":{"line":226,"column":6},"end":{"line":226,"column":25}},"96":{"start":{"line":227,"column":6},"end":{"line":227,"column":19}},"97":{"start":{"line":228,"column":11},"end":{"line":232,"column":5}},"98":{"start":{"line":229,"column":6},"end":{"line":229,"column":31}},"99":{"start":{"line":230,"column":6},"end":{"line":230,"column":32}},"100":{"start":{"line":231,"column":6},"end":{"line":231,"column":19}},"101":{"start":{"line":233,"column":4},"end":{"line":233,"column":52}},"102":{"start":{"line":235,"column":4},"end":{"line":235,"column":50}},"103":{"start":{"line":236,"column":4},"end":{"line":236,"column":60}},"104":{"start":{"line":236,"column":19},"end":{"line":236,"column":60}},"105":{"start":{"line":238,"column":4},"end":{"line":239,"column":74}},"106":{"start":{"line":242,"column":4},"end":{"line":247,"column":5}},"107":{"start":{"line":243,"column":6},"end":{"line":245,"column":9}},"108":{"start":{"line":244,"column":8},"end":{"line":244,"column":30}},"109":{"start":{"line":246,"column":6},"end":{"line":246,"column":30}},"110":{"start":{"line":250,"column":4},"end":{"line":259,"column":5}},"111":{"start":{"line":251,"column":6},"end":{"line":251,"column":47}},"112":{"start":{"line":253,"column":6},"end":{"line":257,"column":7}},"113":{"start":{"line":254,"column":8},"end":{"line":256,"column":11}},"114":{"start":{"line":255,"column":10},"end":{"line":255,"column":51}},"115":{"start":{"line":258,"column":6},"end":{"line":258,"column":30}},"116":{"start":{"line":261,"column":4},"end":{"line":305,"column":7}},"117":{"start":{"line":262,"column":6},"end":{"line":265,"column":7}},"118":{"start":{"line":263,"column":8},"end":{"line":263,"column":52}},"119":{"start":{"line":264,"column":8},"end":{"line":264,"column":36}},"120":{"start":{"line":266,"column":6},"end":{"line":266,"column":37}},"121":{"start":{"line":272,"column":6},"end":{"line":272,"column":46}},"122":{"start":{"line":273,"column":6},"end":{"line":275,"column":7}},"123":{"start":{"line":274,"column":8},"end":{"line":274,"column":56}},"124":{"start":{"line":278,"column":6},"end":{"line":292,"column":7}},"125":{"start":{"line":279,"column":8},"end":{"line":279,"column":42}},"126":{"start":{"line":281,"column":8},"end":{"line":281,"column":81}},"127":{"start":{"line":282,"column":8},"end":{"line":284,"column":9}},"128":{"start":{"line":283,"column":10},"end":{"line":283,"column":19}},"129":{"start":{"line":286,"column":8},"end":{"line":286,"column":50}},"130":{"start":{"line":287,"column":8},"end":{"line":291,"column":9}},"131":{"start":{"line":288,"column":10},"end":{"line":288,"column":73}},"132":{"start":{"line":289,"column":10},"end":{"line":289,"column":38}},"133":{"start":{"line":290,"column":10},"end":{"line":290,"column":17}},"134":{"start":{"line":293,"column":6},"end":{"line":294,"column":40}},"135":{"start":{"line":295,"column":6},"end":{"line":295,"column":28}},"136":{"start":{"line":297,"column":6},"end":{"line":304,"column":7}},"137":{"start":{"line":298,"column":8},"end":{"line":303,"column":9}},"138":{"start":{"line":299,"column":10},"end":{"line":299,"column":43}},"139":{"start":{"line":300,"column":10},"end":{"line":300,"column":51}},"140":{"start":{"line":302,"column":10},"end":{"line":302,"column":31}},"141":{"start":{"line":306,"column":4},"end":{"line":306,"column":28}},"142":{"start":{"line":309,"column":2},"end":{"line":317,"column":5}},"143":{"start":{"line":310,"column":4},"end":{"line":315,"column":5}},"144":{"start":{"line":311,"column":6},"end":{"line":313,"column":9}},"145":{"start":{"line":312,"column":8},"end":{"line":312,"column":44}},"146":{"start":{"line":312,"column":22},"end":{"line":312,"column":44}},"147":{"start":{"line":314,"column":6},"end":{"line":314,"column":13}},"148":{"start":{"line":316,"column":4},"end":{"line":316,"column":44}},"149":{"start":{"line":328,"column":2},"end":{"line":334,"column":4}},"150":{"start":{"line":329,"column":4},"end":{"line":329,"column":60}},"151":{"start":{"line":329,"column":19},"end":{"line":329,"column":60}},"152":{"start":{"line":330,"column":4},"end":{"line":332,"column":7}},"153":{"start":{"line":331,"column":6},"end":{"line":331,"column":62}},"154":{"start":{"line":331,"column":20},"end":{"line":331,"column":62}},"155":{"start":{"line":333,"column":4},"end":{"line":333,"column":28}},"156":{"start":{"line":336,"column":2},"end":{"line":340,"column":5}},"157":{"start":{"line":337,"column":4},"end":{"line":339,"column":7}},"158":{"start":{"line":338,"column":6},"end":{"line":338,"column":75}},"159":{"start":{"line":338,"column":20},"end":{"line":338,"column":75}},"160":{"start":{"line":342,"column":2},"end":{"line":346,"column":5}},"161":{"start":{"line":343,"column":4},"end":{"line":345,"column":7}},"162":{"start":{"line":344,"column":6},"end":{"line":344,"column":41}},"163":{"start":{"line":344,"column":20},"end":{"line":344,"column":41}},"164":{"start":{"line":359,"column":2},"end":{"line":459,"column":4}},"165":{"start":{"line":360,"column":4},"end":{"line":360,"column":37}},"166":{"start":{"line":361,"column":4},"end":{"line":363,"column":5}},"167":{"start":{"line":362,"column":6},"end":{"line":362,"column":43}},"168":{"start":{"line":365,"column":4},"end":{"line":373,"column":5}},"169":{"start":{"line":366,"column":6},"end":{"line":366,"column":47}},"170":{"start":{"line":370,"column":6},"end":{"line":372,"column":9}},"171":{"start":{"line":371,"column":8},"end":{"line":371,"column":26}},"172":{"start":{"line":375,"column":4},"end":{"line":375,"column":32}},"173":{"start":{"line":377,"column":4},"end":{"line":377,"column":34}},"174":{"start":{"line":378,"column":4},"end":{"line":378,"column":20}},"175":{"start":{"line":380,"column":4},"end":{"line":380,"column":40}},"176":{"start":{"line":381,"column":4},"end":{"line":392,"column":5}},"177":{"start":{"line":382,"column":6},"end":{"line":382,"column":55}},"178":{"start":{"line":384,"column":6},"end":{"line":384,"column":54}},"179":{"start":{"line":385,"column":6},"end":{"line":390,"column":7}},"180":{"start":{"line":386,"column":8},"end":{"line":389,"column":10}},"181":{"start":{"line":387,"column":29},"end":{"line":387,"column":52}},"182":{"start":{"line":391,"column":6},"end":{"line":391,"column":30}},"183":{"start":{"line":394,"column":4},"end":{"line":400,"column":5}},"184":{"start":{"line":395,"column":6},"end":{"line":395,"column":41}},"185":{"start":{"line":396,"column":6},"end":{"line":398,"column":9}},"186":{"start":{"line":397,"column":8},"end":{"line":397,"column":44}},"187":{"start":{"line":397,"column":22},"end":{"line":397,"column":44}},"188":{"start":{"line":399,"column":6},"end":{"line":399,"column":30}},"189":{"start":{"line":402,"column":4},"end":{"line":408,"column":7}},"190":{"start":{"line":403,"column":6},"end":{"line":403,"column":46}},"191":{"start":{"line":404,"column":6},"end":{"line":404,"column":42}},"192":{"start":{"line":407,"column":6},"end":{"line":407,"column":72}},"193":{"start":{"line":410,"column":4},"end":{"line":416,"column":5}},"194":{"start":{"line":411,"column":6},"end":{"line":411,"column":46}},"195":{"start":{"line":412,"column":6},"end":{"line":414,"column":9}},"196":{"start":{"line":413,"column":8},"end":{"line":413,"column":43}},"197":{"start":{"line":413,"column":22},"end":{"line":413,"column":43}},"198":{"start":{"line":415,"column":6},"end":{"line":415,"column":30}},"199":{"start":{"line":418,"column":4},"end":{"line":418,"column":49}},"200":{"start":{"line":419,"column":4},"end":{"line":457,"column":7}},"201":{"start":{"line":420,"column":6},"end":{"line":423,"column":7}},"202":{"start":{"line":421,"column":8},"end":{"line":421,"column":36}},"203":{"start":{"line":421,"column":22},"end":{"line":421,"column":36}},"204":{"start":{"line":422,"column":8},"end":{"line":422,"column":15}},"205":{"start":{"line":424,"column":6},"end":{"line":427,"column":7}},"206":{"start":{"line":425,"column":8},"end":{"line":425,"column":44}},"207":{"start":{"line":425,"column":22},"end":{"line":425,"column":44}},"208":{"start":{"line":426,"column":8},"end":{"line":426,"column":15}},"209":{"start":{"line":428,"column":6},"end":{"line":428,"column":38}},"210":{"start":{"line":431,"column":6},"end":{"line":456,"column":9}},"211":{"start":{"line":432,"column":8},"end":{"line":432,"column":48}},"212":{"start":{"line":433,"column":8},"end":{"line":433,"column":44}},"213":{"start":{"line":434,"column":8},"end":{"line":434,"column":42}},"214":{"start":{"line":435,"column":8},"end":{"line":435,"column":66}},"215":{"start":{"line":437,"column":8},"end":{"line":439,"column":9}},"216":{"start":{"line":438,"column":10},"end":{"line":438,"column":47}},"217":{"start":{"line":441,"column":8},"end":{"line":452,"column":9}},"218":{"start":{"line":442,"column":10},"end":{"line":447,"column":15}},"219":{"start":{"line":445,"column":14},"end":{"line":445,"column":54}},"220":{"start":{"line":446,"column":14},"end":{"line":446,"column":35}},"221":{"start":{"line":449,"column":10},"end":{"line":451,"column":13}},"222":{"start":{"line":450,"column":12},"end":{"line":450,"column":24}},"223":{"start":{"line":454,"column":8},"end":{"line":454,"column":48}},"224":{"start":{"line":455,"column":8},"end":{"line":455,"column":45}},"225":{"start":{"line":455,"column":22},"end":{"line":455,"column":45}},"226":{"start":{"line":458,"column":4},"end":{"line":458,"column":28}},"227":{"start":{"line":470,"column":2},"end":{"line":561,"column":4}},"228":{"start":{"line":471,"column":4},"end":{"line":478,"column":5}},"229":{"start":{"line":472,"column":6},"end":{"line":477,"column":7}},"230":{"start":{"line":473,"column":8},"end":{"line":473,"column":27}},"231":{"start":{"line":474,"column":8},"end":{"line":474,"column":21}},"232":{"start":{"line":476,"column":8},"end":{"line":476,"column":49}},"233":{"start":{"line":479,"column":4},"end":{"line":479,"column":31}},"234":{"start":{"line":479,"column":18},"end":{"line":479,"column":31}},"235":{"start":{"line":481,"column":4},"end":{"line":481,"column":37}},"236":{"start":{"line":482,"column":4},"end":{"line":484,"column":5}},"237":{"start":{"line":483,"column":6},"end":{"line":483,"column":43}},"238":{"start":{"line":485,"column":4},"end":{"line":485,"column":19}},"239":{"start":{"line":486,"column":4},"end":{"line":486,"column":32}},"240":{"start":{"line":488,"column":4},"end":{"line":492,"column":6}},"241":{"start":{"line":489,"column":6},"end":{"line":491,"column":7}},"242":{"start":{"line":490,"column":8},"end":{"line":490,"column":25}},"243":{"start":{"line":494,"column":4},"end":{"line":494,"column":20}},"244":{"start":{"line":496,"column":4},"end":{"line":496,"column":25}},"245":{"start":{"line":497,"column":4},"end":{"line":511,"column":7}},"246":{"start":{"line":498,"column":6},"end":{"line":510,"column":9}},"247":{"start":{"line":499,"column":8},"end":{"line":509,"column":11}},"248":{"start":{"line":500,"column":10},"end":{"line":502,"column":11}},"249":{"start":{"line":501,"column":12},"end":{"line":501,"column":50}},"250":{"start":{"line":503,"column":10},"end":{"line":508,"column":11}},"251":{"start":{"line":504,"column":12},"end":{"line":504,"column":26}},"252":{"start":{"line":505,"column":12},"end":{"line":505,"column":19}},"253":{"start":{"line":507,"column":12},"end":{"line":507,"column":28}},"254":{"start":{"line":513,"column":4},"end":{"line":513,"column":49}},"255":{"start":{"line":514,"column":4},"end":{"line":554,"column":7}},"256":{"start":{"line":516,"column":6},"end":{"line":516,"column":46}},"257":{"start":{"line":517,"column":6},"end":{"line":517,"column":56}},"258":{"start":{"line":519,"column":6},"end":{"line":521,"column":7}},"259":{"start":{"line":520,"column":8},"end":{"line":520,"column":45}},"260":{"start":{"line":524,"column":6},"end":{"line":526,"column":7}},"261":{"start":{"line":525,"column":8},"end":{"line":525,"column":29}},"262":{"start":{"line":528,"column":6},"end":{"line":553,"column":7}},"263":{"start":{"line":530,"column":8},"end":{"line":552,"column":11}},"264":{"start":{"line":531,"column":10},"end":{"line":531,"column":89}},"265":{"start":{"line":532,"column":10},"end":{"line":534,"column":11}},"266":{"start":{"line":533,"column":12},"end":{"line":533,"column":38}},"267":{"start":{"line":535,"column":10},"end":{"line":551,"column":13}},"268":{"start":{"line":536,"column":12},"end":{"line":536,"column":63}},"269":{"start":{"line":537,"column":12},"end":{"line":540,"column":13}},"270":{"start":{"line":538,"column":14},"end":{"line":538,"column":34}},"271":{"start":{"line":538,"column":24},"end":{"line":538,"column":34}},"272":{"start":{"line":539,"column":14},"end":{"line":539,"column":21}},"273":{"start":{"line":541,"column":12},"end":{"line":549,"column":15}},"274":{"start":{"line":542,"column":14},"end":{"line":542,"column":23}},"275":{"start":{"line":543,"column":14},"end":{"line":547,"column":15}},"276":{"start":{"line":544,"column":16},"end":{"line":544,"column":44}},"277":{"start":{"line":546,"column":16},"end":{"line":546,"column":32}},"278":{"start":{"line":548,"column":14},"end":{"line":548,"column":28}},"279":{"start":{"line":550,"column":12},"end":{"line":550,"column":29}},"280":{"start":{"line":550,"column":22},"end":{"line":550,"column":29}},"281":{"start":{"line":556,"column":4},"end":{"line":559,"column":7}},"282":{"start":{"line":557,"column":6},"end":{"line":557,"column":53}},"283":{"start":{"line":558,"column":6},"end":{"line":558,"column":41}},"284":{"start":{"line":558,"column":20},"end":{"line":558,"column":41}},"285":{"start":{"line":560,"column":4},"end":{"line":560,"column":28}},"286":{"start":{"line":563,"column":2},"end":{"line":563,"column":66}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"2":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"3":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":10},"end":{"line":66,"column":10}},{"start":{"line":66,"column":10},"end":{"line":66,"column":10}}]},"4":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":16},"end":{"line":73,"column":21}},{"start":{"line":73,"column":25},"end":{"line":73,"column":27}}]},"5":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":22},"end":{"line":74,"column":33}},{"start":{"line":74,"column":37},"end":{"line":74,"column":39}}]},"6":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":40},"end":{"line":94,"column":55}},{"start":{"line":95,"column":10},"end":{"line":95,"column":35}},{"start":{"line":96,"column":10},"end":{"line":96,"column":56}}]},"7":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":98,"column":8}},{"start":{"line":98,"column":8},"end":{"line":98,"column":8}}]},"8":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":8}},{"start":{"line":106,"column":8},"end":{"line":106,"column":8}}]},"9":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":6},"end":{"line":127,"column":6}},{"start":{"line":127,"column":6},"end":{"line":127,"column":6}}]},"10":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":10},"end":{"line":127,"column":32}},{"start":{"line":127,"column":36},"end":{"line":127,"column":63}}]},"11":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":14},"end":{"line":131,"column":19}},{"start":{"line":131,"column":23},"end":{"line":131,"column":25}}]},"12":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":8}},{"start":{"line":137,"column":8},"end":{"line":137,"column":8}}]},"13":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":22},"end":{"line":143,"column":33}},{"start":{"line":143,"column":37},"end":{"line":143,"column":39}}]},"14":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":167,"column":4}},{"start":{"line":167,"column":4},"end":{"line":167,"column":4}}]},"15":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":4},"end":{"line":174,"column":4}},{"start":{"line":174,"column":4},"end":{"line":174,"column":4}}]},"16":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":8},"end":{"line":174,"column":16}},{"start":{"line":174,"column":20},"end":{"line":174,"column":34}},{"start":{"line":174,"column":38},"end":{"line":174,"column":54}}]},"17":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":176,"column":8}},{"start":{"line":176,"column":8},"end":{"line":176,"column":8}}]},"18":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":17},"end":{"line":183,"column":21}},{"start":{"line":183,"column":25},"end":{"line":183,"column":32}}]},"19":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":24},"end":{"line":184,"column":28}},{"start":{"line":184,"column":32},"end":{"line":184,"column":50}}]},"20":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":4},"end":{"line":190,"column":4}},{"start":{"line":190,"column":4},"end":{"line":190,"column":4}}]},"21":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":192,"column":4}},{"start":{"line":192,"column":4},"end":{"line":192,"column":4}}]},"22":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":11},"end":{"line":193,"column":29}},{"start":{"line":193,"column":33},"end":{"line":193,"column":69}}]},"23":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":203,"column":4}},{"start":{"line":203,"column":4},"end":{"line":203,"column":4}}]},"24":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":25}},{"start":{"line":203,"column":29},"end":{"line":203,"column":41}},{"start":{"line":203,"column":45},"end":{"line":203,"column":55}},{"start":{"line":204,"column":6},"end":{"line":204,"column":23}},{"start":{"line":204,"column":27},"end":{"line":204,"column":39}},{"start":{"line":204,"column":43},"end":{"line":204,"column":53}}]},"25":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":11},"end":{"line":208,"column":22}},{"start":{"line":208,"column":26},"end":{"line":208,"column":59}}]},"26":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":225,"column":4}},{"start":{"line":225,"column":4},"end":{"line":225,"column":4}}]},"27":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":8},"end":{"line":225,"column":17}},{"start":{"line":225,"column":21},"end":{"line":225,"column":50}}]},"28":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":11},"end":{"line":228,"column":11}},{"start":{"line":228,"column":11},"end":{"line":228,"column":11}}]},"29":{"line":228,"type":"binary-expr","locations":[{"start":{"line":228,"column":15},"end":{"line":228,"column":24}},{"start":{"line":228,"column":28},"end":{"line":228,"column":63}}]},"30":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":20},"end":{"line":233,"column":33}},{"start":{"line":233,"column":37},"end":{"line":233,"column":51}}]},"31":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":4},"end":{"line":236,"column":4}},{"start":{"line":236,"column":4},"end":{"line":236,"column":4}}]},"32":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":6},"end":{"line":239,"column":16}},{"start":{"line":239,"column":20},"end":{"line":239,"column":40}}]},"33":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":4},"end":{"line":242,"column":4}},{"start":{"line":242,"column":4},"end":{"line":242,"column":4}}]},"34":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]},"35":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":6},"end":{"line":253,"column":6}},{"start":{"line":253,"column":6},"end":{"line":253,"column":6}}]},"36":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":10},"end":{"line":253,"column":42}},{"start":{"line":253,"column":46},"end":{"line":253,"column":77}}]},"37":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":6},"end":{"line":262,"column":6}},{"start":{"line":262,"column":6},"end":{"line":262,"column":6}}]},"38":{"line":262,"type":"binary-expr","locations":[{"start":{"line":262,"column":10},"end":{"line":262,"column":13}},{"start":{"line":262,"column":17},"end":{"line":262,"column":22}}]},"39":{"line":272,"type":"binary-expr","locations":[{"start":{"line":272,"column":20},"end":{"line":272,"column":31}},{"start":{"line":272,"column":35},"end":{"line":272,"column":45}}]},"40":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":6},"end":{"line":273,"column":6}},{"start":{"line":273,"column":6},"end":{"line":273,"column":6}}]},"41":{"line":273,"type":"binary-expr","locations":[{"start":{"line":273,"column":10},"end":{"line":273,"column":42}},{"start":{"line":273,"column":46},"end":{"line":273,"column":53}},{"start":{"line":273,"column":57},"end":{"line":273,"column":86}}]},"42":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":28},"end":{"line":281,"column":52}},{"start":{"line":281,"column":56},"end":{"line":281,"column":80}}]},"43":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":8},"end":{"line":282,"column":8}},{"start":{"line":282,"column":8},"end":{"line":282,"column":8}}]},"44":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":8},"end":{"line":287,"column":8}},{"start":{"line":287,"column":8},"end":{"line":287,"column":8}}]},"45":{"line":287,"type":"binary-expr","locations":[{"start":{"line":287,"column":12},"end":{"line":287,"column":44}},{"start":{"line":287,"column":48},"end":{"line":287,"column":79}}]},"46":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":8},"end":{"line":298,"column":8}},{"start":{"line":298,"column":8},"end":{"line":298,"column":8}}]},"47":{"line":298,"type":"binary-expr","locations":[{"start":{"line":298,"column":12},"end":{"line":298,"column":16}},{"start":{"line":298,"column":20},"end":{"line":298,"column":24}}]},"48":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":4},"end":{"line":310,"column":4}},{"start":{"line":310,"column":4},"end":{"line":310,"column":4}}]},"49":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":8},"end":{"line":312,"column":8}},{"start":{"line":312,"column":8},"end":{"line":312,"column":8}}]},"50":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":4},"end":{"line":329,"column":4}},{"start":{"line":329,"column":4},"end":{"line":329,"column":4}}]},"51":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":6},"end":{"line":331,"column":6}},{"start":{"line":331,"column":6},"end":{"line":331,"column":6}}]},"52":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":6},"end":{"line":338,"column":6}},{"start":{"line":338,"column":6},"end":{"line":338,"column":6}}]},"53":{"line":338,"type":"binary-expr","locations":[{"start":{"line":338,"column":35},"end":{"line":338,"column":43}},{"start":{"line":338,"column":47},"end":{"line":338,"column":73}}]},"54":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":6},"end":{"line":344,"column":6}},{"start":{"line":344,"column":6},"end":{"line":344,"column":6}}]},"55":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":4},"end":{"line":361,"column":4}},{"start":{"line":361,"column":4},"end":{"line":361,"column":4}}]},"56":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":4},"end":{"line":365,"column":4}},{"start":{"line":365,"column":4},"end":{"line":365,"column":4}}]},"57":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":4},"end":{"line":381,"column":4}},{"start":{"line":381,"column":4},"end":{"line":381,"column":4}}]},"58":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":6},"end":{"line":385,"column":6}},{"start":{"line":385,"column":6},"end":{"line":385,"column":6}}]},"59":{"line":385,"type":"binary-expr","locations":[{"start":{"line":385,"column":10},"end":{"line":385,"column":17}},{"start":{"line":385,"column":21},"end":{"line":385,"column":55}}]},"60":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":4},"end":{"line":394,"column":4}},{"start":{"line":394,"column":4},"end":{"line":394,"column":4}}]},"61":{"line":397,"type":"if","locations":[{"start":{"line":397,"column":8},"end":{"line":397,"column":8}},{"start":{"line":397,"column":8},"end":{"line":397,"column":8}}]},"62":{"line":403,"type":"binary-expr","locations":[{"start":{"line":403,"column":26},"end":{"line":403,"column":32}},{"start":{"line":403,"column":36},"end":{"line":403,"column":45}}]},"63":{"line":404,"type":"binary-expr","locations":[{"start":{"line":404,"column":24},"end":{"line":404,"column":28}},{"start":{"line":404,"column":32},"end":{"line":404,"column":41}}]},"64":{"line":407,"type":"binary-expr","locations":[{"start":{"line":407,"column":13},"end":{"line":407,"column":47}},{"start":{"line":407,"column":51},"end":{"line":407,"column":71}}]},"65":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":4},"end":{"line":410,"column":4}},{"start":{"line":410,"column":4},"end":{"line":410,"column":4}}]},"66":{"line":413,"type":"if","locations":[{"start":{"line":413,"column":8},"end":{"line":413,"column":8}},{"start":{"line":413,"column":8},"end":{"line":413,"column":8}}]},"67":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":6},"end":{"line":420,"column":6}},{"start":{"line":420,"column":6},"end":{"line":420,"column":6}}]},"68":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":8},"end":{"line":421,"column":8}},{"start":{"line":421,"column":8},"end":{"line":421,"column":8}}]},"69":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":6},"end":{"line":424,"column":6}},{"start":{"line":424,"column":6},"end":{"line":424,"column":6}}]},"70":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":8},"end":{"line":425,"column":8}},{"start":{"line":425,"column":8},"end":{"line":425,"column":8}}]},"71":{"line":432,"type":"binary-expr","locations":[{"start":{"line":432,"column":28},"end":{"line":432,"column":34}},{"start":{"line":432,"column":38},"end":{"line":432,"column":47}}]},"72":{"line":433,"type":"binary-expr","locations":[{"start":{"line":433,"column":26},"end":{"line":433,"column":30}},{"start":{"line":433,"column":34},"end":{"line":433,"column":43}}]},"73":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":8},"end":{"line":437,"column":8}},{"start":{"line":437,"column":8},"end":{"line":437,"column":8}}]},"74":{"line":437,"type":"binary-expr","locations":[{"start":{"line":437,"column":12},"end":{"line":437,"column":32}},{"start":{"line":437,"column":36},"end":{"line":437,"column":61}},{"start":{"line":437,"column":65},"end":{"line":437,"column":85}}]},"75":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":8},"end":{"line":441,"column":8}},{"start":{"line":441,"column":8},"end":{"line":441,"column":8}}]},"76":{"line":441,"type":"binary-expr","locations":[{"start":{"line":441,"column":12},"end":{"line":441,"column":25}},{"start":{"line":441,"column":29},"end":{"line":441,"column":40}}]},"77":{"line":446,"type":"binary-expr","locations":[{"start":{"line":446,"column":19},"end":{"line":446,"column":23}},{"start":{"line":446,"column":27},"end":{"line":446,"column":33}}]},"78":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":8},"end":{"line":455,"column":8}},{"start":{"line":455,"column":8},"end":{"line":455,"column":8}}]},"79":{"line":471,"type":"if","locations":[{"start":{"line":471,"column":4},"end":{"line":471,"column":4}},{"start":{"line":471,"column":4},"end":{"line":471,"column":4}}]},"80":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":6},"end":{"line":472,"column":6}},{"start":{"line":472,"column":6},"end":{"line":472,"column":6}}]},"81":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":4},"end":{"line":479,"column":4}},{"start":{"line":479,"column":4},"end":{"line":479,"column":4}}]},"82":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":4},"end":{"line":482,"column":4}},{"start":{"line":482,"column":4},"end":{"line":482,"column":4}}]},"83":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":6},"end":{"line":489,"column":6}},{"start":{"line":489,"column":6},"end":{"line":489,"column":6}}]},"84":{"line":489,"type":"binary-expr","locations":[{"start":{"line":489,"column":10},"end":{"line":489,"column":14}},{"start":{"line":489,"column":18},"end":{"line":489,"column":44}}]},"85":{"line":500,"type":"if","locations":[{"start":{"line":500,"column":10},"end":{"line":500,"column":10}},{"start":{"line":500,"column":10},"end":{"line":500,"column":10}}]},"86":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":10},"end":{"line":503,"column":10}},{"start":{"line":503,"column":10},"end":{"line":503,"column":10}}]},"87":{"line":503,"type":"binary-expr","locations":[{"start":{"line":503,"column":14},"end":{"line":503,"column":18}},{"start":{"line":503,"column":22},"end":{"line":503,"column":28}}]},"88":{"line":516,"type":"binary-expr","locations":[{"start":{"line":516,"column":26},"end":{"line":516,"column":32}},{"start":{"line":516,"column":36},"end":{"line":516,"column":45}}]},"89":{"line":517,"type":"cond-expr","locations":[{"start":{"line":517,"column":39},"end":{"line":517,"column":48}},{"start":{"line":517,"column":51},"end":{"line":517,"column":55}}]},"90":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":6},"end":{"line":519,"column":6}},{"start":{"line":519,"column":6},"end":{"line":519,"column":6}}]},"91":{"line":519,"type":"binary-expr","locations":[{"start":{"line":519,"column":10},"end":{"line":519,"column":41}},{"start":{"line":519,"column":45},"end":{"line":519,"column":64}}]},"92":{"line":524,"type":"if","locations":[{"start":{"line":524,"column":6},"end":{"line":524,"column":6}},{"start":{"line":524,"column":6},"end":{"line":524,"column":6}}]},"93":{"line":524,"type":"binary-expr","locations":[{"start":{"line":524,"column":10},"end":{"line":524,"column":44}},{"start":{"line":524,"column":48},"end":{"line":524,"column":59}}]},"94":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":6},"end":{"line":528,"column":6}},{"start":{"line":528,"column":6},"end":{"line":528,"column":6}}]},"95":{"line":528,"type":"binary-expr","locations":[{"start":{"line":528,"column":10},"end":{"line":528,"column":23}},{"start":{"line":528,"column":27},"end":{"line":528,"column":38}}]},"96":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":10},"end":{"line":532,"column":10}},{"start":{"line":532,"column":10},"end":{"line":532,"column":10}}]},"97":{"line":537,"type":"if","locations":[{"start":{"line":537,"column":12},"end":{"line":537,"column":12}},{"start":{"line":537,"column":12},"end":{"line":537,"column":12}}]},"98":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":14},"end":{"line":538,"column":14}},{"start":{"line":538,"column":14},"end":{"line":538,"column":14}}]},"99":{"line":543,"type":"if","locations":[{"start":{"line":543,"column":14},"end":{"line":543,"column":14}},{"start":{"line":543,"column":14},"end":{"line":543,"column":14}}]},"100":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":12},"end":{"line":550,"column":12}},{"start":{"line":550,"column":12},"end":{"line":550,"column":12}}]},"101":{"line":558,"type":"if","locations":[{"start":{"line":558,"column":6},"end":{"line":558,"column":6}},{"start":{"line":558,"column":6},"end":{"line":558,"column":6}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var loopback = require('../../lib/loopback');","var debug = require('debug')('loopback:security:role');","var assert = require('assert');","var async = require('async');","var utils = require('../../lib/utils');","var ctx = require('../../lib/access-context');","var AccessContext = ctx.AccessContext;","var Principal = ctx.Principal;","var RoleMapping = loopback.RoleMapping;","","assert(RoleMapping, 'RoleMapping model must be defined before Role model');","","/**"," * The Role model"," * @class Role"," * @header Role object"," */","module.exports = function(Role) {","  Role.resolveRelatedModels = function() {","    if (!this.userModel) {","      var reg = this.registry;","      this.roleMappingModel = reg.getModelByType('RoleMapping');","      this.userModel = reg.getModelByType('User');","      this.applicationModel = reg.getModelByType('Application');","    }","  };","","  // Set up the connection to users/applications/roles once the model","  Role.once('dataSourceAttached', function(roleModel) {","    ['users', 'applications', 'roles'].forEach(function(rel) {","      /**","       * Fetch all users assigned to this role","       * @function Role.prototype#users","       * @param {object} [query] query object passed to model find call","       * @callback {Function} [callback] The callback function","       * @param {String|Error} err The error string or object","       * @param {Array} list The list of users.","       * @promise","       */","      /**","       * Fetch all applications assigned to this role","       * @function Role.prototype#applications","       * @param {object} [query] query object passed to model find call","       * @callback {Function} [callback] The callback function","       * @param {String|Error} err The error string or object","       * @param {Array} list The list of applications.","       * @promise","       */","      /**","       * Fetch all roles assigned to this role","       * @function Role.prototype#roles","       * @param {object} [query] query object passed to model find call","       * @callback {Function} [callback] The callback function","       * @param {String|Error} err The error string or object","       * @param {Array} list The list of roles.","       * @promise","       */","      Role.prototype[rel] = function(query, callback) {","        if (!callback) {","          if (typeof query === 'function') {","            callback = query;","            query = {};","          } else {","            callback = utils.createPromiseCallback();","          }","        }","        query = query || {};","        query.where = query.where || {};","","        roleModel.resolveRelatedModels();","        var relsToModels = {","          users: roleModel.userModel,","          applications: roleModel.applicationModel,","          roles: roleModel,","        };","","        var ACL = loopback.ACL;","        var relsToTypes = {","          users: ACL.USER,","          applications: ACL.APP,","          roles: ACL.ROLE,","        };","","        var principalModel = relsToModels[rel];","        var principalType = relsToTypes[rel];","","        // redefine user model and user type if user principalType is custom (available and not \"USER\")","        var isCustomUserPrincipalType = rel === 'users' &&","          query.where.principalType &&","          query.where.principalType !== RoleMapping.USER;","","        if (isCustomUserPrincipalType) {","          var registry = this.constructor.registry;","          principalModel = registry.findModel(query.where.principalType);","          principalType = query.where.principalType;","        }","        // make sure we don't keep principalType in userModel query","        delete query.where.principalType;","","        if (principalModel) {","          listByPrincipalType(this, principalModel, principalType, query, callback);","        } else {","          process.nextTick(function() {","            callback(null, []);","          });","        }","        return callback.promise;","      };","    });","","    /**","     * Fetch all models assigned to this role","     * @private","     * @param {object} Context role context","     * @param {*} model model type to fetch","     * @param {String} [principalType] principalType used in the rolemapping for model","     * @param {object} [query] query object passed to model find call","     * @param  {Function} [callback] callback function called with `(err, models)` arguments.","     */","    function listByPrincipalType(context, model, principalType, query, callback) {","      if (callback === undefined && typeof query === 'function') {","        callback = query;","        query = {};","      }","      query = query || {};","","      roleModel.roleMappingModel.find({","        where: {roleId: context.id, principalType: principalType},","      }, function(err, mappings) {","        var ids;","        if (err) {","          return callback(err);","        }","        ids = mappings.map(function(m) {","          return m.principalId;","        });","        query.where = query.where || {};","        query.where.id = {inq: ids};","        model.find(query, function(err, models) {","          callback(err, models);","        });","      });","    }","  });","","  // Special roles","  Role.OWNER = '$owner'; // owner of the object","  Role.RELATED = '$related'; // any User with a relationship to the object","  Role.AUTHENTICATED = '$authenticated'; // authenticated user","  Role.UNAUTHENTICATED = '$unauthenticated'; // authenticated user","  Role.EVERYONE = '$everyone'; // everyone","","  /**","   * Add custom handler for roles.","   * @param {String} role Name of role.","   * @param {Function} resolver Function that determines","   * if a principal is in the specified role.","   * Should provide a callback or return a promise.","   */","  Role.registerResolver = function(role, resolver) {","    if (!Role.resolvers) {","      Role.resolvers = {};","    }","    Role.resolvers[role] = resolver;","  };","","  Role.registerResolver(Role.OWNER, function(role, context, callback) {","    if (!context || !context.model || !context.modelId) {","      process.nextTick(function() {","        if (callback) callback(null, false);","      });","      return;","    }","    var modelClass = context.model;","    var modelId = context.modelId;","    var user = context.getUser();","    var userId = user && user.id;","    var principalType = user && user.principalType;","    var opts = {accessToken: context.accessToken};","    Role.isOwner(modelClass, modelId, userId, principalType, opts, callback);","  });","","  function isUserClass(modelClass) {","    if (!modelClass) return false;","    var User = modelClass.modelBuilder.models.User;","    if (!User) return false;","    return modelClass == User || modelClass.prototype instanceof User;","  }","","  /*!","   * Check if two user IDs matches","   * @param {*} id1","   * @param {*} id2","   * @returns {boolean}","   */","  function matches(id1, id2) {","    if (id1 === undefined || id1 === null || id1 === '' ||","      id2 === undefined || id2 === null || id2 === '') {","      return false;","    }","    // The id can be a MongoDB ObjectID","    return id1 === id2 || id1.toString() === id2.toString();","  }","","  /**","   * Check if a given user ID is the owner the model instance.","   * @param {Function} modelClass The model class","   * @param {*} modelId The model ID","   * @param {*} userId The user ID","   * @param {String} principalType The user principalType (optional)","   * @options {Object} options","   * @property {accessToken} The access token used to authorize the current user.","   * @callback {Function} [callback] The callback function","   * @param {String|Error} err The error string or object","   * @param {Boolean} isOwner True if the user is an owner.","   * @promise","   */","  Role.isOwner = function isOwner(modelClass, modelId, userId, principalType, options, callback) {","    if (!callback && typeof options === 'function') {","      callback = options;","      options = {};","    } else if (!callback && typeof principalType === 'function') {","      callback = principalType;","      principalType = undefined;","      options = {};","    }","    principalType = principalType || Principal.USER;","","    assert(modelClass, 'Model class is required');","    if (!callback) callback = utils.createPromiseCallback();","","    debug('isOwner(): %s %s userId: %s principalType: %s',","      modelClass && modelClass.modelName, modelId, userId, principalType);","","    // Return false if userId is missing","    if (!userId) {","      process.nextTick(function() {","        callback(null, false);","      });","      return callback.promise;","    }","","    // Is the modelClass User or a subclass of User?","    if (isUserClass(modelClass)) {","      var userModelName = modelClass.modelName;","      // matching ids is enough if principalType is USER or matches given user model name","      if (principalType === Principal.USER || principalType === userModelName) {","        process.nextTick(function() {","          callback(null, matches(modelId, userId));","        });","      }","      return callback.promise;","    }","","    modelClass.findById(modelId, options, function(err, inst) {","      if (err || !inst) {","        debug('Model not found for id %j', modelId);","        return callback(err, false);","      }","      debug('Model found: %j', inst);","","      // Historically, for principalType USER, we were resolving isOwner()","      // as true if the model has \"userId\" or \"owner\" property matching","      // id of the current user (principalId), even though there was no","      // belongsTo relation set up.","      var ownerId = inst.userId || inst.owner;","      if (principalType === Principal.USER && ownerId && 'function' !== typeof ownerId) {","        return callback(null, matches(ownerId, userId));","      }","","      // Try to follow belongsTo","      for (var r in modelClass.relations) {","        var rel = modelClass.relations[r];","        // relation should be belongsTo and target a User based class","        var belongsToUser = rel.type === 'belongsTo' && isUserClass(rel.modelTo);","        if (!belongsToUser) {","          continue;","        }","        // checking related user","        var userModelName = rel.modelTo.modelName;","        if (principalType === Principal.USER || principalType === userModelName) {","          debug('Checking relation %s to %s: %j', r, userModelName, rel);","          inst[r](processRelatedUser);","          return;","        }","      }","      debug('No matching belongsTo relation found for model %j - user %j principalType %j',","        modelId, userId, principalType);","      callback(null, false);","","      function processRelatedUser(err, user) {","        if (!err && user) {","          debug('User found: %j', user.id);","          callback(null, matches(user.id, userId));","        } else {","          callback(err, false);","        }","      }","    });","    return callback.promise;","  };","","  Role.registerResolver(Role.AUTHENTICATED, function(role, context, callback) {","    if (!context) {","      process.nextTick(function() {","        if (callback) callback(null, false);","      });","      return;","    }","    Role.isAuthenticated(context, callback);","  });","","  /**","   * Check if the user ID is authenticated","   * @param {Object} context The security context.","   *","   * @callback {Function} callback Callback function.","   * @param {Error} err Error object.","   * @param {Boolean} isAuthenticated True if the user is authenticated.","   * @promise","   */","  Role.isAuthenticated = function isAuthenticated(context, callback) {","    if (!callback) callback = utils.createPromiseCallback();","    process.nextTick(function() {","      if (callback) callback(null, context.isAuthenticated());","    });","    return callback.promise;","  };","","  Role.registerResolver(Role.UNAUTHENTICATED, function(role, context, callback) {","    process.nextTick(function() {","      if (callback) callback(null, !context || !context.isAuthenticated());","    });","  });","","  Role.registerResolver(Role.EVERYONE, function(role, context, callback) {","    process.nextTick(function() {","      if (callback) callback(null, true); // Always true","    });","  });","","  /**","   * Check if a given principal is in the specified role.","   *","   * @param {String} role The role name.","   * @param {Object} context The context object.","   *","   * @callback {Function} callback Callback function.","   * @param {Error} err Error object.","   * @param {Boolean} isInRole True if the principal is in the specified role.","   * @promise","   */","  Role.isInRole = function(role, context, callback) {","    context.registry = this.registry;","    if (!(context instanceof AccessContext)) {","      context = new AccessContext(context);","    }","","    if (!callback) {","      callback = utils.createPromiseCallback();","      // historically, isInRole is returning the Role instance instead of true","      // we are preserving that behaviour for callback-based invocation,","      // but fixing it when invoked in Promise mode","      callback.promise = callback.promise.then(function(isInRole) {","        return !!isInRole;","      });","    }","","    this.resolveRelatedModels();","","    debug('isInRole(): %s', role);","    context.debug();","","    var resolver = Role.resolvers[role];","    if (resolver) {","      debug('Custom resolver found for role %s', role);","","      var promise = resolver(role, context, callback);","      if (promise && typeof promise.then === 'function') {","        promise.then(","          function(result) { callback(null, result); },","          callback","        );","      }","      return callback.promise;","    }","","    if (context.principals.length === 0) {","      debug('isInRole() returns: false');","      process.nextTick(function() {","        if (callback) callback(null, false);","      });","      return callback.promise;","    }","","    var inRole = context.principals.some(function(p) {","      var principalType = p.type || undefined;","      var principalId = p.id || undefined;","","      // Check if it's the same role","      return principalType === RoleMapping.ROLE && principalId === role;","    });","","    if (inRole) {","      debug('isInRole() returns: %j', inRole);","      process.nextTick(function() {","        if (callback) callback(null, true);","      });","      return callback.promise;","    }","","    var roleMappingModel = this.roleMappingModel;","    this.findOne({where: {name: role}}, function(err, result) {","      if (err) {","        if (callback) callback(err);","        return;","      }","      if (!result) {","        if (callback) callback(null, false);","        return;","      }","      debug('Role found: %j', result);","","      // Iterate through the list of principals","      async.some(context.principals, function(p, done) {","        var principalType = p.type || undefined;","        var principalId = p.id || undefined;","        var roleId = result.id.toString();","        var principalIdIsString = typeof principalId === 'string';","","        if (principalId !== null && principalId !== undefined && !principalIdIsString) {","          principalId = principalId.toString();","        }","","        if (principalType && principalId) {","          roleMappingModel.findOne({where: {roleId: roleId,","            principalType: principalType, principalId: principalId}},","            function(err, result) {","              debug('Role mapping found: %j', result);","              done(!err && result); // The only arg is the result","            });","        } else {","          process.nextTick(function() {","            done(false);","          });","        }","      }, function(inRole) {","        debug('isInRole() returns: %j', inRole);","        if (callback) callback(null, inRole);","      });","    });","    return callback.promise;","  };","","  /**","   * List roles for a given principal.","   * @param {Object} context The security context.","   *","   * @callback {Function} callback Callback function.","   * @param {Error} err Error object.","   * @param {String[]} roles An array of role IDs","   * @promise","   */","  Role.getRoles = function(context, options, callback) {","    if (!callback) {","      if (typeof options === 'function') {","        callback = options;","        options = {};","      } else {","        callback = utils.createPromiseCallback();","      }","    }","    if (!options) options = {};","","    context.registry = this.registry;","    if (!(context instanceof AccessContext)) {","      context = new AccessContext(context);","    }","    var roles = [];","    this.resolveRelatedModels();","","    var addRole = function(role) {","      if (role && roles.indexOf(role) === -1) {","        roles.push(role);","      }","    };","","    var self = this;","    // Check against the smart roles","    var inRoleTasks = [];","    Object.keys(Role.resolvers).forEach(function(role) {","      inRoleTasks.push(function(done) {","        self.isInRole(role, context, function(err, inRole) {","          if (debug.enabled) {","            debug('In role %j: %j', role, inRole);","          }","          if (!err && inRole) {","            addRole(role);","            done();","          } else {","            done(err, null);","          }","        });","      });","    });","","    var roleMappingModel = this.roleMappingModel;","    context.principals.forEach(function(p) {","      // Check against the role mappings","      var principalType = p.type || undefined;","      var principalId = p.id == null ? undefined : p.id;","","      if (typeof principalId !== 'string' && principalId != null) {","        principalId = principalId.toString();","      }","","      // Add the role itself","      if (principalType === RoleMapping.ROLE && principalId) {","        addRole(principalId);","      }","","      if (principalType && principalId) {","        // Please find() treat undefined matches all values","        inRoleTasks.push(function(done) {","          var filter = {where: {principalType: principalType, principalId: principalId}};","          if (options.returnOnlyRoleNames === true) {","            filter.include = ['role'];","          }","          roleMappingModel.find(filter, function(err, mappings) {","            debug('Role mappings found: %s %j', err, mappings);","            if (err) {","              if (done) done(err);","              return;","            }","            mappings.forEach(function(m) {","              var role;","              if (options.returnOnlyRoleNames === true) {","                role = m.toJSON().role.name;","              } else {","                role = m.roleId;","              }","              addRole(role);","            });","            if (done) done();","          });","        });","      }","    });","","    async.parallel(inRoleTasks, function(err, results) {","      debug('getRoles() returns: %j %j', err, roles);","      if (callback) callback(err, roles);","    });","    return callback.promise;","  };","","  Role.validatesUniquenessOf('name', {message: 'already exists'});","};",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"17":1,"24":1,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"35":1,"36":0,"64":0,"65":0,"66":0,"67":0,"68":0,"70":0,"73":0,"74":0,"76":0,"77":0,"83":0,"84":0,"90":0,"91":0,"94":0,"98":0,"99":0,"100":0,"101":0,"104":0,"106":0,"107":0,"109":0,"110":0,"113":0,"126":1,"127":0,"128":0,"129":0,"131":0,"133":0,"136":0,"137":0,"138":0,"140":0,"141":0,"143":0,"144":0,"145":0,"146":0,"153":1,"154":1,"155":1,"156":1,"157":1,"166":1,"167":4,"168":1,"170":4,"173":1,"174":0,"175":0,"176":0,"178":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"189":1,"190":0,"191":0,"192":0,"193":0,"202":1,"203":0,"205":0,"208":0,"224":1,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"233":0,"235":0,"236":0,"238":0,"242":0,"243":0,"244":0,"246":0,"250":0,"251":0,"253":0,"254":0,"255":0,"258":0,"261":0,"262":0,"263":0,"264":0,"266":0,"272":0,"273":0,"274":0,"278":0,"279":0,"281":0,"282":0,"283":0,"286":0,"287":0,"288":0,"289":0,"290":0,"293":0,"295":0,"297":1,"298":0,"299":0,"300":0,"302":0,"306":0,"309":1,"310":0,"311":0,"312":0,"314":0,"316":0,"328":1,"329":0,"330":0,"331":0,"333":0,"336":1,"337":0,"338":0,"342":1,"343":0,"344":0,"359":1,"360":0,"361":0,"362":0,"365":0,"366":0,"370":0,"371":0,"375":0,"377":0,"378":0,"380":0,"381":0,"382":0,"384":0,"385":0,"386":0,"387":0,"391":0,"394":0,"395":0,"396":0,"397":0,"399":0,"402":0,"403":0,"404":0,"407":0,"410":0,"411":0,"412":0,"413":0,"415":0,"418":0,"419":0,"420":0,"421":0,"422":0,"424":0,"425":0,"426":0,"428":0,"431":0,"432":0,"433":0,"434":0,"435":0,"437":0,"438":0,"441":0,"442":0,"445":0,"446":0,"449":0,"450":0,"454":0,"455":0,"458":0,"470":1,"471":0,"472":0,"473":0,"474":0,"476":0,"479":0,"481":0,"482":0,"483":0,"485":0,"486":0,"488":0,"489":0,"490":0,"494":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"503":0,"504":0,"505":0,"507":0,"513":0,"514":0,"516":0,"517":0,"519":0,"520":0,"524":0,"525":0,"528":0,"530":0,"531":0,"532":0,"533":0,"535":0,"536":0,"537":0,"538":0,"539":0,"541":0,"542":0,"543":0,"544":0,"546":0,"548":0,"550":0,"556":0,"557":0,"558":0,"560":0,"563":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/access-context.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/access-context.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":1,"110":1,"111":1,"112":1,"113":0,"114":0,"115":0,"116":1,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":0,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":1,"153":0,"154":1,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":1,"164":1,"165":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"AccessContext","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":32}}},"2":{"name":"(anonymous_2)","line":126,"loc":{"start":{"line":126,"column":39},"end":{"line":126,"column":91}}},"3":{"name":"(anonymous_3)","line":142,"loc":{"start":{"line":142,"column":36},"end":{"line":142,"column":47}}},"4":{"name":"(anonymous_4)","line":151,"loc":{"start":{"line":151,"column":34},"end":{"line":151,"column":45}}},"5":{"name":"(anonymous_5)","line":178,"loc":{"start":{"line":178,"column":35},"end":{"line":178,"column":46}}},"6":{"name":"(anonymous_6)","line":192,"loc":{"start":{"line":192,"column":42},"end":{"line":192,"column":53}}},"7":{"name":"(anonymous_7)","line":200,"loc":{"start":{"line":200,"column":32},"end":{"line":200,"column":43}}},"8":{"name":"(anonymous_8)","line":205,"loc":{"start":{"line":205,"column":30},"end":{"line":205,"column":50}}},"9":{"name":"Principal","line":236,"loc":{"start":{"line":236,"column":0},"end":{"line":236,"column":35}}},"10":{"name":"(anonymous_10)","line":256,"loc":{"start":{"line":256,"column":29},"end":{"line":256,"column":41}}},"11":{"name":"AccessRequest","line":279,"loc":{"start":{"line":279,"column":0},"end":{"line":279,"column":87}}},"12":{"name":"(anonymous_12)","line":310,"loc":{"start":{"line":310,"column":37},"end":{"line":310,"column":48}}},"13":{"name":"(anonymous_13)","line":322,"loc":{"start":{"line":322,"column":41},"end":{"line":322,"column":55}}},"14":{"name":"(anonymous_14)","line":344,"loc":{"start":{"line":344,"column":50},"end":{"line":344,"column":78}}},"15":{"name":"(anonymous_15)","line":363,"loc":{"start":{"line":363,"column":36},"end":{"line":363,"column":47}}},"16":{"name":"(anonymous_16)","line":367,"loc":{"start":{"line":367,"column":32},"end":{"line":367,"column":43}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":65}},"4":{"start":{"line":41,"column":0},"end":{"line":94,"column":1}},"5":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"6":{"start":{"line":43,"column":4},"end":{"line":43,"column":38}},"7":{"start":{"line":45,"column":2},"end":{"line":45,"column":26}},"8":{"start":{"line":47,"column":2},"end":{"line":48,"column":90}},"9":{"start":{"line":49,"column":2},"end":{"line":49,"column":35}},"10":{"start":{"line":50,"column":2},"end":{"line":50,"column":45}},"11":{"start":{"line":51,"column":2},"end":{"line":51,"column":28}},"12":{"start":{"line":52,"column":2},"end":{"line":52,"column":78}},"13":{"start":{"line":53,"column":2},"end":{"line":53,"column":21}},"14":{"start":{"line":54,"column":2},"end":{"line":54,"column":44}},"15":{"start":{"line":56,"column":2},"end":{"line":56,"column":47}},"16":{"start":{"line":57,"column":2},"end":{"line":57,"column":56}},"17":{"start":{"line":59,"column":2},"end":{"line":59,"column":31}},"18":{"start":{"line":60,"column":2},"end":{"line":60,"column":43}},"19":{"start":{"line":61,"column":2},"end":{"line":61,"column":72}},"20":{"start":{"line":62,"column":2},"end":{"line":66,"column":3}},"21":{"start":{"line":63,"column":4},"end":{"line":63,"column":82}},"22":{"start":{"line":65,"column":4},"end":{"line":65,"column":26}},"23":{"start":{"line":68,"column":2},"end":{"line":70,"column":3}},"24":{"start":{"line":69,"column":4},"end":{"line":69,"column":76}},"25":{"start":{"line":72,"column":2},"end":{"line":72,"column":60}},"26":{"start":{"line":73,"column":2},"end":{"line":74,"column":68}},"27":{"start":{"line":75,"column":2},"end":{"line":75,"column":75}},"28":{"start":{"line":77,"column":2},"end":{"line":77,"column":62}},"29":{"start":{"line":78,"column":2},"end":{"line":78,"column":53}},"30":{"start":{"line":79,"column":2},"end":{"line":79,"column":57}},"31":{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},"32":{"start":{"line":82,"column":4},"end":{"line":82,"column":65}},"33":{"start":{"line":85,"column":2},"end":{"line":85,"column":37}},"34":{"start":{"line":87,"column":2},"end":{"line":89,"column":3}},"35":{"start":{"line":88,"column":4},"end":{"line":88,"column":52}},"36":{"start":{"line":90,"column":2},"end":{"line":92,"column":3}},"37":{"start":{"line":91,"column":4},"end":{"line":91,"column":58}},"38":{"start":{"line":93,"column":2},"end":{"line":93,"column":49}},"39":{"start":{"line":97,"column":0},"end":{"line":97,"column":24}},"40":{"start":{"line":100,"column":0},"end":{"line":100,"column":28}},"41":{"start":{"line":101,"column":0},"end":{"line":101,"column":38}},"42":{"start":{"line":102,"column":0},"end":{"line":102,"column":30}},"43":{"start":{"line":103,"column":0},"end":{"line":103,"column":34}},"44":{"start":{"line":105,"column":0},"end":{"line":105,"column":34}},"45":{"start":{"line":106,"column":0},"end":{"line":106,"column":30}},"46":{"start":{"line":107,"column":0},"end":{"line":107,"column":30}},"47":{"start":{"line":108,"column":0},"end":{"line":108,"column":30}},"48":{"start":{"line":109,"column":0},"end":{"line":109,"column":28}},"49":{"start":{"line":111,"column":0},"end":{"line":117,"column":2}},"50":{"start":{"line":126,"column":0},"end":{"line":136,"column":2}},"51":{"start":{"line":127,"column":2},"end":{"line":127,"column":75}},"52":{"start":{"line":128,"column":2},"end":{"line":133,"column":3}},"53":{"start":{"line":129,"column":4},"end":{"line":129,"column":31}},"54":{"start":{"line":130,"column":4},"end":{"line":132,"column":5}},"55":{"start":{"line":131,"column":6},"end":{"line":131,"column":19}},"56":{"start":{"line":134,"column":2},"end":{"line":134,"column":34}},"57":{"start":{"line":135,"column":2},"end":{"line":135,"column":14}},"58":{"start":{"line":142,"column":0},"end":{"line":145,"column":2}},"59":{"start":{"line":143,"column":2},"end":{"line":143,"column":28}},"60":{"start":{"line":144,"column":2},"end":{"line":144,"column":25}},"61":{"start":{"line":151,"column":0},"end":{"line":172,"column":2}},"62":{"start":{"line":152,"column":2},"end":{"line":152,"column":48}},"63":{"start":{"line":153,"column":2},"end":{"line":171,"column":3}},"64":{"start":{"line":154,"column":4},"end":{"line":154,"column":31}},"65":{"start":{"line":155,"column":4},"end":{"line":157,"column":32}},"66":{"start":{"line":158,"column":4},"end":{"line":158,"column":37}},"67":{"start":{"line":158,"column":28},"end":{"line":158,"column":37}},"68":{"start":{"line":161,"column":4},"end":{"line":163,"column":5}},"69":{"start":{"line":162,"column":6},"end":{"line":162,"column":47}},"70":{"start":{"line":166,"column":4},"end":{"line":166,"column":52}},"71":{"start":{"line":167,"column":4},"end":{"line":167,"column":29}},"72":{"start":{"line":167,"column":20},"end":{"line":167,"column":29}},"73":{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},"74":{"start":{"line":169,"column":6},"end":{"line":169,"column":47}},"75":{"start":{"line":178,"column":0},"end":{"line":186,"column":2}},"76":{"start":{"line":179,"column":2},"end":{"line":184,"column":3}},"77":{"start":{"line":180,"column":4},"end":{"line":180,"column":31}},"78":{"start":{"line":181,"column":4},"end":{"line":183,"column":5}},"79":{"start":{"line":182,"column":6},"end":{"line":182,"column":18}},"80":{"start":{"line":185,"column":2},"end":{"line":185,"column":14}},"81":{"start":{"line":192,"column":0},"end":{"line":194,"column":2}},"82":{"start":{"line":193,"column":2},"end":{"line":193,"column":49}},"83":{"start":{"line":200,"column":0},"end":{"line":224,"column":2}},"84":{"start":{"line":201,"column":2},"end":{"line":223,"column":3}},"85":{"start":{"line":202,"column":4},"end":{"line":202,"column":33}},"86":{"start":{"line":203,"column":4},"end":{"line":210,"column":5}},"87":{"start":{"line":204,"column":6},"end":{"line":204,"column":27}},"88":{"start":{"line":205,"column":6},"end":{"line":207,"column":9}},"89":{"start":{"line":206,"column":8},"end":{"line":206,"column":42}},"90":{"start":{"line":209,"column":6},"end":{"line":209,"column":47}},"91":{"start":{"line":211,"column":4},"end":{"line":211,"column":42}},"92":{"start":{"line":212,"column":4},"end":{"line":212,"column":38}},"93":{"start":{"line":213,"column":4},"end":{"line":213,"column":40}},"94":{"start":{"line":214,"column":4},"end":{"line":214,"column":36}},"95":{"start":{"line":215,"column":4},"end":{"line":215,"column":44}},"96":{"start":{"line":216,"column":4},"end":{"line":220,"column":5}},"97":{"start":{"line":217,"column":6},"end":{"line":217,"column":28}},"98":{"start":{"line":218,"column":6},"end":{"line":218,"column":44}},"99":{"start":{"line":219,"column":6},"end":{"line":219,"column":46}},"100":{"start":{"line":221,"column":4},"end":{"line":221,"column":46}},"101":{"start":{"line":222,"column":4},"end":{"line":222,"column":58}},"102":{"start":{"line":236,"column":0},"end":{"line":243,"column":1}},"103":{"start":{"line":237,"column":2},"end":{"line":239,"column":3}},"104":{"start":{"line":238,"column":4},"end":{"line":238,"column":41}},"105":{"start":{"line":240,"column":2},"end":{"line":240,"column":19}},"106":{"start":{"line":241,"column":2},"end":{"line":241,"column":15}},"107":{"start":{"line":242,"column":2},"end":{"line":242,"column":19}},"108":{"start":{"line":246,"column":0},"end":{"line":246,"column":24}},"109":{"start":{"line":247,"column":0},"end":{"line":247,"column":46}},"110":{"start":{"line":248,"column":0},"end":{"line":248,"column":24}},"111":{"start":{"line":249,"column":0},"end":{"line":249,"column":26}},"112":{"start":{"line":256,"column":0},"end":{"line":261,"column":2}},"113":{"start":{"line":257,"column":2},"end":{"line":259,"column":3}},"114":{"start":{"line":258,"column":4},"end":{"line":258,"column":68}},"115":{"start":{"line":260,"column":2},"end":{"line":260,"column":15}},"116":{"start":{"line":279,"column":0},"end":{"line":303,"column":1}},"117":{"start":{"line":280,"column":2},"end":{"line":282,"column":3}},"118":{"start":{"line":281,"column":4},"end":{"line":281,"column":83}},"119":{"start":{"line":283,"column":2},"end":{"line":299,"column":3}},"120":{"start":{"line":285,"column":4},"end":{"line":285,"column":26}},"121":{"start":{"line":286,"column":4},"end":{"line":286,"column":48}},"122":{"start":{"line":287,"column":4},"end":{"line":287,"column":54}},"123":{"start":{"line":288,"column":4},"end":{"line":288,"column":58}},"124":{"start":{"line":289,"column":4},"end":{"line":289,"column":62}},"125":{"start":{"line":290,"column":4},"end":{"line":290,"column":45}},"126":{"start":{"line":291,"column":4},"end":{"line":291,"column":33}},"127":{"start":{"line":293,"column":4},"end":{"line":293,"column":44}},"128":{"start":{"line":294,"column":4},"end":{"line":294,"column":50}},"129":{"start":{"line":295,"column":4},"end":{"line":295,"column":54}},"130":{"start":{"line":296,"column":4},"end":{"line":296,"column":58}},"131":{"start":{"line":297,"column":4},"end":{"line":297,"column":41}},"132":{"start":{"line":298,"column":4},"end":{"line":298,"column":29}},"133":{"start":{"line":301,"column":2},"end":{"line":302,"column":94}},"134":{"start":{"line":310,"column":0},"end":{"line":314,"column":2}},"135":{"start":{"line":311,"column":2},"end":{"line":313,"column":42}},"136":{"start":{"line":322,"column":0},"end":{"line":333,"column":2}},"137":{"start":{"line":323,"column":2},"end":{"line":323,"column":46}},"138":{"start":{"line":324,"column":2},"end":{"line":324,"column":55}},"139":{"start":{"line":325,"column":2},"end":{"line":325,"column":72}},"140":{"start":{"line":326,"column":2},"end":{"line":326,"column":61}},"141":{"start":{"line":328,"column":2},"end":{"line":330,"column":3}},"142":{"start":{"line":329,"column":4},"end":{"line":329,"column":48}},"143":{"start":{"line":332,"column":2},"end":{"line":332,"column":15}},"144":{"start":{"line":344,"column":0},"end":{"line":355,"column":2}},"145":{"start":{"line":345,"column":2},"end":{"line":346,"column":11}},"146":{"start":{"line":346,"column":4},"end":{"line":346,"column":11}},"147":{"start":{"line":348,"column":2},"end":{"line":348,"column":29}},"148":{"start":{"line":349,"column":2},"end":{"line":352,"column":3}},"149":{"start":{"line":350,"column":4},"end":{"line":350,"column":56}},"150":{"start":{"line":351,"column":4},"end":{"line":351,"column":76}},"151":{"start":{"line":354,"column":2},"end":{"line":354,"column":49}},"152":{"start":{"line":363,"column":0},"end":{"line":365,"column":2}},"153":{"start":{"line":364,"column":2},"end":{"line":364,"column":47}},"154":{"start":{"line":367,"column":0},"end":{"line":377,"column":2}},"155":{"start":{"line":368,"column":2},"end":{"line":376,"column":3}},"156":{"start":{"line":369,"column":4},"end":{"line":369,"column":33}},"157":{"start":{"line":370,"column":4},"end":{"line":370,"column":35}},"158":{"start":{"line":371,"column":4},"end":{"line":371,"column":41}},"159":{"start":{"line":372,"column":4},"end":{"line":372,"column":45}},"160":{"start":{"line":373,"column":4},"end":{"line":373,"column":45}},"161":{"start":{"line":374,"column":4},"end":{"line":374,"column":49}},"162":{"start":{"line":375,"column":4},"end":{"line":375,"column":47}},"163":{"start":{"line":379,"column":0},"end":{"line":379,"column":45}},"164":{"start":{"line":380,"column":0},"end":{"line":380,"column":37}},"165":{"start":{"line":381,"column":0},"end":{"line":381,"column":45}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"2":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":19}},{"start":{"line":45,"column":23},"end":{"line":45,"column":25}}]},"3":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":20},"end":{"line":50,"column":38}},{"start":{"line":50,"column":42},"end":{"line":50,"column":44}}]},"4":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":40},"end":{"line":52,"column":69}},{"start":{"line":52,"column":72},"end":{"line":52,"column":77}}]},"5":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":19},"end":{"line":54,"column":24}},{"start":{"line":54,"column":28},"end":{"line":54,"column":43}}]},"6":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":17},"end":{"line":56,"column":27}},{"start":{"line":56,"column":31},"end":{"line":56,"column":46}}]},"7":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":18},"end":{"line":57,"column":34}},{"start":{"line":57,"column":38},"end":{"line":57,"column":55}}]},"8":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":21},"end":{"line":61,"column":38}},{"start":{"line":61,"column":42},"end":{"line":61,"column":71}}]},"9":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"10":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"11":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":20},"end":{"line":72,"column":38}},{"start":{"line":72,"column":42},"end":{"line":72,"column":59}}]},"12":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":21},"end":{"line":75,"column":40}},{"start":{"line":75,"column":44},"end":{"line":75,"column":74}}]},"13":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":22},"end":{"line":77,"column":43}},{"start":{"line":77,"column":47},"end":{"line":77,"column":61}}]},"14":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":20},"end":{"line":78,"column":39}},{"start":{"line":78,"column":43},"end":{"line":78,"column":52}}]},"15":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":22},"end":{"line":79,"column":43}},{"start":{"line":79,"column":47},"end":{"line":79,"column":56}}]},"16":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"17":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":14},"end":{"line":85,"column":30}},{"start":{"line":85,"column":34},"end":{"line":85,"column":36}}]},"18":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"19":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"20":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"21":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":9},"end":{"line":144,"column":13}},{"start":{"line":144,"column":17},"end":{"line":144,"column":24}}]},"22":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":29},"end":{"line":155,"column":53}},{"start":{"line":156,"column":6},"end":{"line":156,"column":31}},{"start":{"line":157,"column":6},"end":{"line":157,"column":31}}]},"23":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":4}},{"start":{"line":158,"column":4},"end":{"line":158,"column":4}}]},"24":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":4},"end":{"line":161,"column":4}},{"start":{"line":161,"column":4},"end":{"line":161,"column":4}}]},"25":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":167,"column":4}},{"start":{"line":167,"column":4},"end":{"line":167,"column":4}}]},"26":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":168,"column":4}},{"start":{"line":168,"column":4},"end":{"line":168,"column":4}}]},"27":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"28":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":12},"end":{"line":193,"column":28}},{"start":{"line":193,"column":32},"end":{"line":193,"column":47}}]},"29":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":201,"column":2}},{"start":{"line":201,"column":2},"end":{"line":201,"column":2}}]},"30":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":203,"column":4}},{"start":{"line":203,"column":4},"end":{"line":203,"column":4}}]},"31":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":23}},{"start":{"line":203,"column":27},"end":{"line":203,"column":49}}]},"32":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"33":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":2},"end":{"line":237,"column":2}},{"start":{"line":237,"column":2},"end":{"line":237,"column":2}}]},"34":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":2},"end":{"line":257,"column":2}},{"start":{"line":257,"column":2},"end":{"line":257,"column":2}}]},"35":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":11},"end":{"line":258,"column":31}},{"start":{"line":258,"column":35},"end":{"line":258,"column":67}}]},"36":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":2},"end":{"line":280,"column":2}},{"start":{"line":280,"column":2},"end":{"line":280,"column":2}}]},"37":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":2},"end":{"line":283,"column":2}},{"start":{"line":283,"column":2},"end":{"line":283,"column":2}}]},"38":{"line":283,"type":"binary-expr","locations":[{"start":{"line":283,"column":6},"end":{"line":283,"column":28}},{"start":{"line":283,"column":32},"end":{"line":283,"column":57}}]},"39":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":14},"end":{"line":285,"column":19}},{"start":{"line":285,"column":23},"end":{"line":285,"column":25}}]},"40":{"line":286,"type":"binary-expr","locations":[{"start":{"line":286,"column":17},"end":{"line":286,"column":26}},{"start":{"line":286,"column":30},"end":{"line":286,"column":47}}]},"41":{"line":287,"type":"binary-expr","locations":[{"start":{"line":287,"column":20},"end":{"line":287,"column":32}},{"start":{"line":287,"column":36},"end":{"line":287,"column":53}}]},"42":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":22},"end":{"line":288,"column":36}},{"start":{"line":288,"column":40},"end":{"line":288,"column":57}}]},"43":{"line":289,"type":"binary-expr","locations":[{"start":{"line":289,"column":22},"end":{"line":289,"column":36}},{"start":{"line":289,"column":40},"end":{"line":289,"column":61}}]},"44":{"line":290,"type":"binary-expr","locations":[{"start":{"line":290,"column":23},"end":{"line":290,"column":38}},{"start":{"line":290,"column":42},"end":{"line":290,"column":44}}]},"45":{"line":293,"type":"binary-expr","locations":[{"start":{"line":293,"column":17},"end":{"line":293,"column":22}},{"start":{"line":293,"column":26},"end":{"line":293,"column":43}}]},"46":{"line":294,"type":"binary-expr","locations":[{"start":{"line":294,"column":20},"end":{"line":294,"column":28}},{"start":{"line":294,"column":32},"end":{"line":294,"column":49}}]},"47":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":22},"end":{"line":295,"column":32}},{"start":{"line":295,"column":36},"end":{"line":295,"column":53}}]},"48":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":22},"end":{"line":296,"column":32}},{"start":{"line":296,"column":36},"end":{"line":296,"column":57}}]},"49":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":23},"end":{"line":297,"column":34}},{"start":{"line":297,"column":38},"end":{"line":297,"column":40}}]},"50":{"line":311,"type":"binary-expr","locations":[{"start":{"line":311,"column":9},"end":{"line":311,"column":41}},{"start":{"line":312,"column":4},"end":{"line":312,"column":39}},{"start":{"line":313,"column":4},"end":{"line":313,"column":41}}]},"51":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":2},"end":{"line":328,"column":2}},{"start":{"line":328,"column":2},"end":{"line":328,"column":2}}]},"52":{"line":328,"type":"binary-expr","locations":[{"start":{"line":328,"column":6},"end":{"line":328,"column":18}},{"start":{"line":328,"column":22},"end":{"line":328,"column":39}}]},"53":{"line":329,"type":"binary-expr","locations":[{"start":{"line":329,"column":11},"end":{"line":329,"column":26}},{"start":{"line":329,"column":30},"end":{"line":329,"column":47}}]},"54":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":2},"end":{"line":345,"column":2}},{"start":{"line":345,"column":2},"end":{"line":345,"column":2}}]},"55":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":2},"end":{"line":349,"column":2}},{"start":{"line":349,"column":2},"end":{"line":349,"column":2}}]},"56":{"line":351,"type":"binary-expr","locations":[{"start":{"line":351,"column":24},"end":{"line":351,"column":34}},{"start":{"line":351,"column":38},"end":{"line":351,"column":75}}]},"57":{"line":354,"type":"binary-expr","locations":[{"start":{"line":354,"column":20},"end":{"line":354,"column":37}},{"start":{"line":354,"column":41},"end":{"line":354,"column":48}}]},"58":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":2},"end":{"line":368,"column":2}},{"start":{"line":368,"column":2},"end":{"line":368,"column":2}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var assert = require('assert');","var loopback = require('./loopback');","var debug = require('debug')('loopback:security:access-context');","","/**"," * Access context represents the context for a request to access protected"," * resources"," *"," * NOTE While the method expects an array of principals in the AccessContext instance/object,"," * it also accepts a single principal defined with the following properties:"," * ```js"," * {"," *   // AccessContext instance/object"," *   // .."," *   principalType: 'somePrincipalType', // APP, ROLE, USER, or custom user model name"," *   principalId: 'somePrincipalId',"," * }"," * ```"," *"," * @class"," * @options {AccessContext|Object} context An AccessContext instance or an object"," * @property {Principal[]} principals An array of principals"," * @property {Function} model The model class"," * @property {String} modelName The model name"," * @property {*} modelId The model id"," * @property {String} property The model property/method/relation name"," * @property {String} method The model method to be invoked"," * @property {String} accessType The access type: READ, REPLICATE, WRITE, or EXECUTE."," * @property {AccessToken} accessToken The access token resolved for the request"," * @property {RemotingContext} remotingContext The request's remoting context"," * @property {Registry} registry The application or global registry"," * @returns {AccessContext}"," * @constructor"," */","function AccessContext(context) {","  if (!(this instanceof AccessContext)) {","    return new AccessContext(context);","  }","  context = context || {};","","  assert(context.registry,","    'Application registry is mandatory in AccessContext but missing in provided context');","  this.registry = context.registry;","  this.principals = context.principals || [];","  var model = context.model;","  model = ('string' === typeof model) ? this.registry.getModel(model) : model;","  this.model = model;","  this.modelName = model && model.modelName;","","  this.modelId = context.id || context.modelId;","  this.property = context.property || AccessContext.ALL;","","  this.method = context.method;","  this.sharedMethod = context.sharedMethod;","  this.sharedClass = this.sharedMethod && this.sharedMethod.sharedClass;","  if (this.sharedMethod) {","    this.methodNames = this.sharedMethod.aliases.concat([this.sharedMethod.name]);","  } else {","    this.methodNames = [];","  }","","  if (this.sharedMethod) {","    this.accessType = this.model._getAccessTypeForMethod(this.sharedMethod);","  }","","  this.accessType = context.accessType || AccessContext.ALL;","  assert(loopback.AccessToken,","    'AccessToken model must be defined before AccessContext model');","  this.accessToken = context.accessToken || loopback.AccessToken.ANONYMOUS;","","  var principalType = context.principalType || Principal.USER;","  var principalId = context.principalId || undefined;","  var principalName = context.principalName || undefined;","","  if (principalId) {","    this.addPrincipal(principalType, principalId, principalName);","  }","","  var token = this.accessToken || {};","","  if (token.userId) {","    this.addPrincipal(Principal.USER, token.userId);","  }","  if (token.appId) {","    this.addPrincipal(Principal.APPLICATION, token.appId);","  }","  this.remotingContext = context.remotingContext;","}","","// Define constant for the wildcard","AccessContext.ALL = '*';","","// Define constants for access types","AccessContext.READ = 'READ'; // Read operation","AccessContext.REPLICATE = 'REPLICATE'; // Replicate (pull) changes","AccessContext.WRITE = 'WRITE'; // Write operation","AccessContext.EXECUTE = 'EXECUTE'; // Execute operation","","AccessContext.DEFAULT = 'DEFAULT'; // Not specified","AccessContext.ALLOW = 'ALLOW'; // Allow","AccessContext.ALARM = 'ALARM'; // Warn - send an alarm","AccessContext.AUDIT = 'AUDIT'; // Audit - record the access","AccessContext.DENY = 'DENY'; // Deny","","AccessContext.permissionOrder = {","  DEFAULT: 0,","  ALLOW: 1,","  ALARM: 2,","  AUDIT: 3,","  DENY: 4,","};","","/**"," * Add a principal to the context"," * @param {String} principalType The principal type"," * @param {*} principalId The principal id"," * @param {String} [principalName] The principal name"," * @returns {boolean}"," */","AccessContext.prototype.addPrincipal = function(principalType, principalId, principalName) {","  var principal = new Principal(principalType, principalId, principalName);","  for (var i = 0; i < this.principals.length; i++) {","    var p = this.principals[i];","    if (p.equals(principal)) {","      return false;","    }","  }","  this.principals.push(principal);","  return true;","};","","/**"," * Get the user id"," * @returns {*}"," */","AccessContext.prototype.getUserId = function() {","  var user = this.getUser();","  return user && user.id;","};","","/**"," * Get the user"," * @returns {*}"," */","AccessContext.prototype.getUser = function() {","  var BaseUser = this.registry.getModel('User');","  for (var i = 0; i < this.principals.length; i++) {","    var p = this.principals[i];","    var isBuiltinPrincipal = p.type === Principal.APP ||","      p.type === Principal.ROLE ||","      p.type == Principal.SCOPE;","    if (isBuiltinPrincipal) continue;","","    // the principalType must either be 'USER'","    if (p.type === Principal.USER) {","      return {id: p.id, principalType: p.type};","    }","","    // or permit to resolve a valid user model","    var userModel = this.registry.findModel(p.type);","    if (!userModel) continue;","    if (userModel.prototype instanceof BaseUser) {","      return {id: p.id, principalType: p.type};","    }","  }","};","","/**"," * Get the application id"," * @returns {*}"," */","AccessContext.prototype.getAppId = function() {","  for (var i = 0; i < this.principals.length; i++) {","    var p = this.principals[i];","    if (p.type === Principal.APPLICATION) {","      return p.id;","    }","  }","  return null;","};","","/**"," * Check if the access context has authenticated principals"," * @returns {boolean}"," */","AccessContext.prototype.isAuthenticated = function() {","  return !!(this.getUserId() || this.getAppId());","};","","/*!"," * Print debug info for access context."," */","","AccessContext.prototype.debug = function() {","  if (debug.enabled) {","    debug('---AccessContext---');","    if (this.principals && this.principals.length) {","      debug('principals:');","      this.principals.forEach(function(principal) {","        debug('principal: %j', principal);","      });","    } else {","      debug('principals: %j', this.principals);","    }","    debug('modelName %s', this.modelName);","    debug('modelId %s', this.modelId);","    debug('property %s', this.property);","    debug('method %s', this.method);","    debug('accessType %s', this.accessType);","    if (this.accessToken) {","      debug('accessToken:');","      debug('  id %j', this.accessToken.id);","      debug('  ttl %j', this.accessToken.ttl);","    }","    debug('getUserId() %s', this.getUserId());","    debug('isAuthenticated() %s', this.isAuthenticated());","  }","};","","/**"," * This class represents the abstract notion of a principal, which can be used"," * to represent any entity, such as an individual, a corporation, and a login id"," * @param {String} type The principal type"," * @param {*} id The principal id"," * @param {String} [name] The principal name"," * @param {String} modelName The principal model name"," * @returns {Principal}"," * @class"," */","function Principal(type, id, name) {","  if (!(this instanceof Principal)) {","    return new Principal(type, id, name);","  }","  this.type = type;","  this.id = id;","  this.name = name;","}","","// Define constants for principal types","Principal.USER = 'USER';","Principal.APP = Principal.APPLICATION = 'APP';","Principal.ROLE = 'ROLE';","Principal.SCOPE = 'SCOPE';","","/**"," * Compare if two principals are equal"," * Returns true if argument principal is equal to this principal."," * @param {Object} p The other principal"," */","Principal.prototype.equals = function(p) {","  if (p instanceof Principal) {","    return this.type === p.type && String(this.id) === String(p.id);","  }","  return false;","};","","/**"," * A request to access protected resources."," *"," * The method can either be called with the following signature or with a single"," * argument: an AccessRequest instance or an object containing all the required properties."," *"," * @class"," * @options {String|AccessRequest|Object} model|req The model name,<br>"," *    or an AccessRequest instance/object."," * @param {String} property The property/method/relation name"," * @param {String} accessType The access type"," * @param {String} permission The requested permission"," * @param {String[]} methodNames The names of involved methods"," * @param {Registry} registry The application or global registry"," * @returns {AccessRequest}"," */","function AccessRequest(model, property, accessType, permission, methodNames, registry) {","  if (!(this instanceof AccessRequest)) {","    return new AccessRequest(model, property, accessType, permission, methodNames);","  }","  if (arguments.length === 1 && typeof model === 'object') {","    // The argument is an object that contains all required properties","    var obj = model || {};","    this.model = obj.model || AccessContext.ALL;","    this.property = obj.property || AccessContext.ALL;","    this.accessType = obj.accessType || AccessContext.ALL;","    this.permission = obj.permission || AccessContext.DEFAULT;","    this.methodNames = obj.methodNames || [];","    this.registry = obj.registry;","  } else {","    this.model = model || AccessContext.ALL;","    this.property = property || AccessContext.ALL;","    this.accessType = accessType || AccessContext.ALL;","    this.permission = permission || AccessContext.DEFAULT;","    this.methodNames = methodNames || [];","    this.registry = registry;","  }","  // do not create AccessRequest without a registry","  assert(this.registry,","    'Application registry is mandatory in AccessRequest but missing in provided argument(s)');","}","","/**"," * Does the request contain any wildcards?"," *"," * @returns {Boolean}"," */","AccessRequest.prototype.isWildcard = function() {","  return this.model === AccessContext.ALL ||","    this.property === AccessContext.ALL ||","    this.accessType === AccessContext.ALL;","};","","/**"," * Does the given `ACL` apply to this `AccessRequest`."," *"," * @param {ACL} acl"," */","","AccessRequest.prototype.exactlyMatches = function(acl) {","  var matchesModel = acl.model === this.model;","  var matchesProperty = acl.property === this.property;","  var matchesMethodName = this.methodNames.indexOf(acl.property) !== -1;","  var matchesAccessType = acl.accessType === this.accessType;","","  if (matchesModel && matchesAccessType) {","    return matchesProperty || matchesMethodName;","  }","","  return false;","};","","/**"," * Settle the accessRequest's permission if DEFAULT"," * In most situations, the default permission can be resolved from the nested model"," * config. An default permission can also be explicitly provided to override it or"," * cope with AccessRequest instances without a nested model (e.g. model is '*')"," *"," * @param {String} defaultPermission (optional) the default permission to apply"," */","","AccessRequest.prototype.settleDefaultPermission = function(defaultPermission) {","  if (this.permission !== 'DEFAULT')","    return;","","  var modelName = this.model;","  if (!defaultPermission) {","    var modelClass = this.registry.findModel(modelName);","    defaultPermission = modelClass && modelClass.settings.defaultPermission;","  }","","  this.permission = defaultPermission || 'ALLOW';","};","","/**"," * Is the request for access allowed?"," *"," * @returns {Boolean}"," */","","AccessRequest.prototype.isAllowed = function() {","  return this.permission !== loopback.ACL.DENY;","};","","AccessRequest.prototype.debug = function() {","  if (debug.enabled) {","    debug('---AccessRequest---');","    debug(' model %s', this.model);","    debug(' property %s', this.property);","    debug(' accessType %s', this.accessType);","    debug(' permission %s', this.permission);","    debug(' isWildcard() %s', this.isWildcard());","    debug(' isAllowed() %s', this.isAllowed());","  }","};","","module.exports.AccessContext = AccessContext;","module.exports.Principal = Principal;","module.exports.AccessRequest = AccessRequest;",""],"l":{"7":1,"8":1,"9":1,"41":1,"42":0,"43":0,"45":0,"47":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"56":0,"57":0,"59":0,"60":0,"61":0,"62":0,"63":0,"65":0,"68":0,"69":0,"72":0,"73":0,"75":0,"77":0,"78":0,"79":0,"81":0,"82":0,"85":0,"87":0,"88":0,"90":0,"91":0,"93":0,"97":1,"100":1,"101":1,"102":1,"103":1,"105":1,"106":1,"107":1,"108":1,"109":1,"111":1,"126":1,"127":0,"128":0,"129":0,"130":0,"131":0,"134":0,"135":0,"142":1,"143":0,"144":0,"151":1,"152":0,"153":0,"154":0,"155":0,"158":0,"161":0,"162":0,"166":0,"167":0,"168":0,"169":0,"178":1,"179":0,"180":0,"181":0,"182":0,"185":0,"192":1,"193":0,"200":1,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"209":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"221":0,"222":0,"236":1,"237":0,"238":0,"240":0,"241":0,"242":0,"246":1,"247":1,"248":1,"249":1,"256":1,"257":0,"258":0,"260":0,"279":1,"280":0,"281":0,"283":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"301":0,"310":1,"311":0,"322":1,"323":0,"324":0,"325":0,"326":0,"328":0,"329":0,"332":0,"344":1,"345":0,"346":0,"348":0,"349":0,"350":0,"351":0,"354":0,"363":1,"364":0,"367":1,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"379":1,"380":1,"381":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/acl.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/acl.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":1,"163":0,"164":1,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":1,"218":0,"219":0,"220":0,"221":1,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":1,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":1,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0,0],"12":[0,0],"13":[0,0,0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0,0,0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0,0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"fnMap":{"1":{"name":"(anonymous_1)","line":82,"loc":{"start":{"line":82,"column":17},"end":{"line":82,"column":31}}},"2":{"name":"getMatchingScore","line":107,"loc":{"start":{"line":107,"column":25},"end":{"line":107,"column":62}}},"3":{"name":"(anonymous_3)","line":201,"loc":{"start":{"line":201,"column":24},"end":{"line":201,"column":38}}},"4":{"name":"resolvePermission","line":211,"loc":{"start":{"line":211,"column":26},"end":{"line":211,"column":64}}},"5":{"name":"(anonymous_5)","line":217,"loc":{"start":{"line":217,"column":21},"end":{"line":217,"column":44}}},"6":{"name":"(anonymous_6)","line":250,"loc":{"start":{"line":250,"column":19},"end":{"line":250,"column":33}}},"7":{"name":"getStaticACLs","line":275,"loc":{"start":{"line":275,"column":22},"end":{"line":275,"column":62}}},"8":{"name":"(anonymous_8)","line":279,"loc":{"start":{"line":279,"column":39},"end":{"line":279,"column":53}}},"9":{"name":"(anonymous_9)","line":306,"loc":{"start":{"line":306,"column":24},"end":{"line":306,"column":38}}},"10":{"name":"checkPermission","line":331,"loc":{"start":{"line":331,"column":24},"end":{"line":333,"column":59}}},"11":{"name":"(anonymous_11)","line":354,"loc":{"start":{"line":354,"column":23},"end":{"line":354,"column":34}}},"12":{"name":"(anonymous_12)","line":363,"loc":{"start":{"line":363,"column":6},"end":{"line":363,"column":29}}},"13":{"name":"(anonymous_13)","line":375,"loc":{"start":{"line":375,"column":24},"end":{"line":375,"column":35}}},"14":{"name":"(anonymous_14)","line":399,"loc":{"start":{"line":399,"column":18},"end":{"line":399,"column":58}}},"15":{"name":"(anonymous_15)","line":411,"loc":{"start":{"line":411,"column":28},"end":{"line":411,"column":56}}},"16":{"name":"(anonymous_16)","line":429,"loc":{"start":{"line":429,"column":30},"end":{"line":429,"column":58}}},"17":{"name":"(anonymous_17)","line":469,"loc":{"start":{"line":469,"column":37},"end":{"line":469,"column":57}}},"18":{"name":"(anonymous_18)","line":475,"loc":{"start":{"line":475,"column":19},"end":{"line":475,"column":33}}},"19":{"name":"(anonymous_19)","line":489,"loc":{"start":{"line":489,"column":27},"end":{"line":489,"column":42}}},"20":{"name":"(anonymous_20)","line":491,"loc":{"start":{"line":491,"column":14},"end":{"line":491,"column":36}}},"21":{"name":"(anonymous_21)","line":504,"loc":{"start":{"line":504,"column":34},"end":{"line":504,"column":57}}},"22":{"name":"saveAuthorizedRolesToRemotingContext","line":522,"loc":{"start":{"line":522,"column":2},"end":{"line":522,"column":82}}},"23":{"name":"(anonymous_23)","line":542,"loc":{"start":{"line":542,"column":28},"end":{"line":542,"column":78}}},"24":{"name":"(anonymous_24)","line":554,"loc":{"start":{"line":554,"column":40},"end":{"line":554,"column":69}}},"25":{"name":"(anonymous_25)","line":561,"loc":{"start":{"line":561,"column":29},"end":{"line":561,"column":40}}},"26":{"name":"(anonymous_26)","line":579,"loc":{"start":{"line":579,"column":25},"end":{"line":579,"column":48}}},"27":{"name":"(anonymous_27)","line":604,"loc":{"start":{"line":604,"column":27},"end":{"line":604,"column":38}}},"28":{"name":"(anonymous_28)","line":624,"loc":{"start":{"line":624,"column":23},"end":{"line":624,"column":70}}},"29":{"name":"(anonymous_29)","line":628,"loc":{"start":{"line":628,"column":6},"end":{"line":628,"column":31}}},"30":{"name":"(anonymous_30)","line":634,"loc":{"start":{"line":634,"column":44},"end":{"line":634,"column":64}}},"31":{"name":"(anonymous_31)","line":642,"loc":{"start":{"line":642,"column":13},"end":{"line":642,"column":35}}}},"statementMap":{"1":{"start":{"line":33,"column":0},"end":{"line":33,"column":39}},"2":{"start":{"line":34,"column":0},"end":{"line":34,"column":45}},"3":{"start":{"line":35,"column":0},"end":{"line":35,"column":39}},"4":{"start":{"line":36,"column":0},"end":{"line":36,"column":29}},"5":{"start":{"line":37,"column":0},"end":{"line":37,"column":37}},"6":{"start":{"line":38,"column":0},"end":{"line":38,"column":31}},"7":{"start":{"line":39,"column":0},"end":{"line":39,"column":54}},"8":{"start":{"line":41,"column":0},"end":{"line":41,"column":46}},"9":{"start":{"line":42,"column":0},"end":{"line":42,"column":38}},"10":{"start":{"line":43,"column":0},"end":{"line":43,"column":30}},"11":{"start":{"line":44,"column":0},"end":{"line":44,"column":38}},"12":{"start":{"line":46,"column":0},"end":{"line":46,"column":25}},"13":{"start":{"line":47,"column":0},"end":{"line":47,"column":60}},"14":{"start":{"line":82,"column":0},"end":{"line":650,"column":2}},"15":{"start":{"line":83,"column":2},"end":{"line":83,"column":30}},"16":{"start":{"line":85,"column":2},"end":{"line":85,"column":38}},"17":{"start":{"line":86,"column":2},"end":{"line":86,"column":34}},"18":{"start":{"line":87,"column":2},"end":{"line":87,"column":34}},"19":{"start":{"line":88,"column":2},"end":{"line":88,"column":34}},"20":{"start":{"line":89,"column":2},"end":{"line":89,"column":32}},"21":{"start":{"line":91,"column":2},"end":{"line":91,"column":32}},"22":{"start":{"line":92,"column":2},"end":{"line":92,"column":42}},"23":{"start":{"line":93,"column":2},"end":{"line":93,"column":34}},"24":{"start":{"line":94,"column":2},"end":{"line":94,"column":38}},"25":{"start":{"line":96,"column":2},"end":{"line":96,"column":28}},"26":{"start":{"line":97,"column":2},"end":{"line":97,"column":52}},"27":{"start":{"line":98,"column":2},"end":{"line":98,"column":28}},"28":{"start":{"line":99,"column":2},"end":{"line":99,"column":30}},"29":{"start":{"line":107,"column":2},"end":{"line":193,"column":4}},"30":{"start":{"line":108,"column":4},"end":{"line":108,"column":52}},"31":{"start":{"line":109,"column":4},"end":{"line":109,"column":18}},"32":{"start":{"line":111,"column":4},"end":{"line":145,"column":5}},"33":{"start":{"line":113,"column":6},"end":{"line":113,"column":24}},"34":{"start":{"line":114,"column":6},"end":{"line":114,"column":48}},"35":{"start":{"line":115,"column":6},"end":{"line":115,"column":52}},"36":{"start":{"line":116,"column":6},"end":{"line":117,"column":50}},"37":{"start":{"line":119,"column":6},"end":{"line":119,"column":62}},"38":{"start":{"line":120,"column":6},"end":{"line":131,"column":7}},"39":{"start":{"line":121,"column":8},"end":{"line":130,"column":9}},"40":{"start":{"line":124,"column":12},"end":{"line":124,"column":40}},"41":{"start":{"line":125,"column":12},"end":{"line":125,"column":18}},"42":{"start":{"line":128,"column":12},"end":{"line":128,"column":68}},"43":{"start":{"line":129,"column":12},"end":{"line":129,"column":18}},"44":{"start":{"line":133,"column":6},"end":{"line":144,"column":7}},"45":{"start":{"line":135,"column":8},"end":{"line":135,"column":19}},"46":{"start":{"line":136,"column":13},"end":{"line":144,"column":7}},"47":{"start":{"line":138,"column":8},"end":{"line":138,"column":19}},"48":{"start":{"line":139,"column":13},"end":{"line":144,"column":7}},"49":{"start":{"line":140,"column":8},"end":{"line":140,"column":19}},"50":{"start":{"line":143,"column":8},"end":{"line":143,"column":18}},"51":{"start":{"line":153,"column":4},"end":{"line":153,"column":22}},"52":{"start":{"line":154,"column":4},"end":{"line":166,"column":5}},"53":{"start":{"line":156,"column":8},"end":{"line":156,"column":19}},"54":{"start":{"line":157,"column":8},"end":{"line":157,"column":14}},"55":{"start":{"line":159,"column":8},"end":{"line":159,"column":19}},"56":{"start":{"line":160,"column":8},"end":{"line":160,"column":14}},"57":{"start":{"line":162,"column":8},"end":{"line":162,"column":19}},"58":{"start":{"line":163,"column":8},"end":{"line":163,"column":14}},"59":{"start":{"line":165,"column":8},"end":{"line":165,"column":19}},"60":{"start":{"line":170,"column":4},"end":{"line":170,"column":22}},"61":{"start":{"line":171,"column":4},"end":{"line":189,"column":5}},"62":{"start":{"line":172,"column":6},"end":{"line":188,"column":7}},"63":{"start":{"line":174,"column":10},"end":{"line":174,"column":21}},"64":{"start":{"line":175,"column":10},"end":{"line":175,"column":16}},"65":{"start":{"line":177,"column":10},"end":{"line":177,"column":21}},"66":{"start":{"line":178,"column":10},"end":{"line":178,"column":16}},"67":{"start":{"line":181,"column":10},"end":{"line":181,"column":21}},"68":{"start":{"line":182,"column":10},"end":{"line":182,"column":16}},"69":{"start":{"line":184,"column":10},"end":{"line":184,"column":21}},"70":{"start":{"line":185,"column":10},"end":{"line":185,"column":16}},"71":{"start":{"line":187,"column":10},"end":{"line":187,"column":21}},"72":{"start":{"line":190,"column":4},"end":{"line":190,"column":22}},"73":{"start":{"line":191,"column":4},"end":{"line":191,"column":77}},"74":{"start":{"line":192,"column":4},"end":{"line":192,"column":17}},"75":{"start":{"line":201,"column":2},"end":{"line":203,"column":4}},"76":{"start":{"line":202,"column":4},"end":{"line":202,"column":56}},"77":{"start":{"line":211,"column":2},"end":{"line":266,"column":4}},"78":{"start":{"line":212,"column":4},"end":{"line":215,"column":5}},"79":{"start":{"line":213,"column":6},"end":{"line":213,"column":35}},"80":{"start":{"line":214,"column":6},"end":{"line":214,"column":35}},"81":{"start":{"line":217,"column":4},"end":{"line":219,"column":7}},"82":{"start":{"line":218,"column":6},"end":{"line":218,"column":81}},"83":{"start":{"line":220,"column":4},"end":{"line":220,"column":33}},"84":{"start":{"line":221,"column":4},"end":{"line":221,"column":18}},"85":{"start":{"line":223,"column":4},"end":{"line":246,"column":5}},"86":{"start":{"line":224,"column":6},"end":{"line":224,"column":30}},"87":{"start":{"line":225,"column":6},"end":{"line":225,"column":51}},"88":{"start":{"line":226,"column":6},"end":{"line":229,"column":7}},"89":{"start":{"line":228,"column":8},"end":{"line":228,"column":14}},"90":{"start":{"line":230,"column":6},"end":{"line":245,"column":7}},"91":{"start":{"line":232,"column":8},"end":{"line":232,"column":42}},"92":{"start":{"line":233,"column":8},"end":{"line":233,"column":14}},"93":{"start":{"line":235,"column":8},"end":{"line":238,"column":9}},"94":{"start":{"line":236,"column":10},"end":{"line":236,"column":44}},"95":{"start":{"line":237,"column":10},"end":{"line":237,"column":16}},"96":{"start":{"line":240,"column":8},"end":{"line":240,"column":81}},"97":{"start":{"line":241,"column":8},"end":{"line":241,"column":72}},"98":{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},"99":{"start":{"line":243,"column":10},"end":{"line":243,"column":44}},"100":{"start":{"line":248,"column":4},"end":{"line":254,"column":5}},"101":{"start":{"line":249,"column":6},"end":{"line":249,"column":50}},"102":{"start":{"line":250,"column":6},"end":{"line":253,"column":9}},"103":{"start":{"line":251,"column":8},"end":{"line":251,"column":20}},"104":{"start":{"line":252,"column":8},"end":{"line":252,"column":45}},"105":{"start":{"line":255,"column":4},"end":{"line":260,"column":32}},"106":{"start":{"line":263,"column":4},"end":{"line":263,"column":34}},"107":{"start":{"line":265,"column":4},"end":{"line":265,"column":15}},"108":{"start":{"line":275,"column":2},"end":{"line":318,"column":4}},"109":{"start":{"line":276,"column":4},"end":{"line":276,"column":52}},"110":{"start":{"line":277,"column":4},"end":{"line":277,"column":24}},"111":{"start":{"line":278,"column":4},"end":{"line":295,"column":5}},"112":{"start":{"line":279,"column":6},"end":{"line":294,"column":9}},"113":{"start":{"line":280,"column":8},"end":{"line":280,"column":32}},"114":{"start":{"line":282,"column":8},"end":{"line":283,"column":26}},"115":{"start":{"line":283,"column":10},"end":{"line":283,"column":26}},"116":{"start":{"line":284,"column":8},"end":{"line":293,"column":9}},"117":{"start":{"line":285,"column":10},"end":{"line":292,"column":14}},"118":{"start":{"line":296,"column":4},"end":{"line":304,"column":38}},"119":{"start":{"line":305,"column":4},"end":{"line":316,"column":5}},"120":{"start":{"line":306,"column":6},"end":{"line":315,"column":9}},"121":{"start":{"line":307,"column":8},"end":{"line":314,"column":12}},"122":{"start":{"line":317,"column":4},"end":{"line":317,"column":22}},"123":{"start":{"line":331,"column":2},"end":{"line":373,"column":4}},"124":{"start":{"line":334,"column":4},"end":{"line":334,"column":60}},"125":{"start":{"line":334,"column":19},"end":{"line":334,"column":60}},"126":{"start":{"line":335,"column":4},"end":{"line":337,"column":5}},"127":{"start":{"line":336,"column":6},"end":{"line":336,"column":43}},"128":{"start":{"line":338,"column":4},"end":{"line":338,"column":35}},"129":{"start":{"line":339,"column":4},"end":{"line":339,"column":88}},"130":{"start":{"line":340,"column":4},"end":{"line":340,"column":39}},"131":{"start":{"line":341,"column":4},"end":{"line":342,"column":48}},"132":{"start":{"line":344,"column":4},"end":{"line":344,"column":88}},"133":{"start":{"line":346,"column":4},"end":{"line":346,"column":51}},"134":{"start":{"line":349,"column":4},"end":{"line":349,"column":53}},"135":{"start":{"line":351,"column":4},"end":{"line":358,"column":5}},"136":{"start":{"line":352,"column":6},"end":{"line":352,"column":67}},"137":{"start":{"line":353,"column":6},"end":{"line":353,"column":50}},"138":{"start":{"line":354,"column":6},"end":{"line":356,"column":9}},"139":{"start":{"line":355,"column":8},"end":{"line":355,"column":33}},"140":{"start":{"line":357,"column":6},"end":{"line":357,"column":30}},"141":{"start":{"line":360,"column":4},"end":{"line":360,"column":20}},"142":{"start":{"line":361,"column":4},"end":{"line":371,"column":9}},"143":{"start":{"line":364,"column":8},"end":{"line":366,"column":9}},"144":{"start":{"line":365,"column":10},"end":{"line":365,"column":31}},"145":{"start":{"line":367,"column":8},"end":{"line":367,"column":36}},"146":{"start":{"line":369,"column":8},"end":{"line":369,"column":53}},"147":{"start":{"line":370,"column":8},"end":{"line":370,"column":40}},"148":{"start":{"line":372,"column":4},"end":{"line":372,"column":28}},"149":{"start":{"line":375,"column":2},"end":{"line":385,"column":4}},"150":{"start":{"line":376,"column":4},"end":{"line":384,"column":5}},"151":{"start":{"line":377,"column":6},"end":{"line":377,"column":25}},"152":{"start":{"line":378,"column":6},"end":{"line":378,"column":36}},"153":{"start":{"line":379,"column":6},"end":{"line":379,"column":42}},"154":{"start":{"line":380,"column":6},"end":{"line":380,"column":52}},"155":{"start":{"line":381,"column":6},"end":{"line":381,"column":48}},"156":{"start":{"line":382,"column":6},"end":{"line":382,"column":46}},"157":{"start":{"line":383,"column":6},"end":{"line":383,"column":46}},"158":{"start":{"line":399,"column":2},"end":{"line":404,"column":4}},"159":{"start":{"line":400,"column":4},"end":{"line":402,"column":5}},"160":{"start":{"line":401,"column":6},"end":{"line":401,"column":50}},"161":{"start":{"line":403,"column":4},"end":{"line":403,"column":44}},"162":{"start":{"line":411,"column":2},"end":{"line":413,"column":4}},"163":{"start":{"line":412,"column":4},"end":{"line":412,"column":74}},"164":{"start":{"line":429,"column":2},"end":{"line":520,"column":4}},"165":{"start":{"line":430,"column":4},"end":{"line":430,"column":60}},"166":{"start":{"line":430,"column":19},"end":{"line":430,"column":60}},"167":{"start":{"line":431,"column":4},"end":{"line":431,"column":20}},"168":{"start":{"line":432,"column":4},"end":{"line":432,"column":32}},"169":{"start":{"line":433,"column":4},"end":{"line":433,"column":35}},"170":{"start":{"line":435,"column":4},"end":{"line":438,"column":5}},"171":{"start":{"line":436,"column":6},"end":{"line":436,"column":39}},"172":{"start":{"line":437,"column":6},"end":{"line":437,"column":43}},"173":{"start":{"line":440,"column":4},"end":{"line":440,"column":29}},"174":{"start":{"line":441,"column":4},"end":{"line":441,"column":50}},"175":{"start":{"line":442,"column":4},"end":{"line":442,"column":30}},"176":{"start":{"line":443,"column":4},"end":{"line":443,"column":75}},"177":{"start":{"line":444,"column":4},"end":{"line":444,"column":36}},"178":{"start":{"line":445,"column":4},"end":{"line":445,"column":40}},"179":{"start":{"line":446,"column":4},"end":{"line":446,"column":38}},"180":{"start":{"line":448,"column":4},"end":{"line":448,"column":42}},"181":{"start":{"line":449,"column":4},"end":{"line":449,"column":98}},"182":{"start":{"line":451,"column":4},"end":{"line":455,"column":37}},"183":{"start":{"line":457,"column":4},"end":{"line":463,"column":32}},"184":{"start":{"line":465,"column":4},"end":{"line":465,"column":27}},"185":{"start":{"line":466,"column":4},"end":{"line":466,"column":67}},"186":{"start":{"line":468,"column":4},"end":{"line":518,"column":7}},"187":{"start":{"line":470,"column":6},"end":{"line":470,"column":36}},"188":{"start":{"line":470,"column":15},"end":{"line":470,"column":36}},"189":{"start":{"line":471,"column":6},"end":{"line":471,"column":27}},"190":{"start":{"line":473,"column":6},"end":{"line":473,"column":37}},"191":{"start":{"line":475,"column":6},"end":{"line":502,"column":9}},"192":{"start":{"line":477,"column":8},"end":{"line":485,"column":9}},"193":{"start":{"line":478,"column":10},"end":{"line":478,"column":40}},"194":{"start":{"line":479,"column":10},"end":{"line":479,"column":55}},"195":{"start":{"line":480,"column":10},"end":{"line":480,"column":65}},"196":{"start":{"line":481,"column":10},"end":{"line":484,"column":11}},"197":{"start":{"line":482,"column":12},"end":{"line":482,"column":36}},"198":{"start":{"line":483,"column":12},"end":{"line":483,"column":19}},"199":{"start":{"line":488,"column":8},"end":{"line":501,"column":9}},"200":{"start":{"line":489,"column":10},"end":{"line":500,"column":13}},"201":{"start":{"line":490,"column":12},"end":{"line":499,"column":17}},"202":{"start":{"line":492,"column":16},"end":{"line":497,"column":17}},"203":{"start":{"line":493,"column":18},"end":{"line":493,"column":42}},"204":{"start":{"line":495,"column":18},"end":{"line":496,"column":60}},"205":{"start":{"line":496,"column":20},"end":{"line":496,"column":60}},"206":{"start":{"line":498,"column":16},"end":{"line":498,"column":31}},"207":{"start":{"line":504,"column":6},"end":{"line":517,"column":9}},"208":{"start":{"line":505,"column":8},"end":{"line":505,"column":44}},"209":{"start":{"line":505,"column":17},"end":{"line":505,"column":44}},"210":{"start":{"line":508,"column":8},"end":{"line":508,"column":66}},"211":{"start":{"line":509,"column":8},"end":{"line":509,"column":32}},"212":{"start":{"line":510,"column":8},"end":{"line":510,"column":25}},"213":{"start":{"line":514,"column":8},"end":{"line":514,"column":70}},"214":{"start":{"line":515,"column":8},"end":{"line":515,"column":79}},"215":{"start":{"line":516,"column":8},"end":{"line":516,"column":40}},"216":{"start":{"line":519,"column":4},"end":{"line":519,"column":28}},"217":{"start":{"line":522,"column":2},"end":{"line":530,"column":3}},"218":{"start":{"line":523,"column":4},"end":{"line":523,"column":92}},"219":{"start":{"line":527,"column":4},"end":{"line":529,"column":5}},"220":{"start":{"line":528,"column":6},"end":{"line":528,"column":48}},"221":{"start":{"line":542,"column":2},"end":{"line":559,"column":4}},"222":{"start":{"line":543,"column":4},"end":{"line":543,"column":46}},"223":{"start":{"line":544,"column":4},"end":{"line":544,"column":60}},"224":{"start":{"line":544,"column":19},"end":{"line":544,"column":60}},"225":{"start":{"line":545,"column":4},"end":{"line":552,"column":7}},"226":{"start":{"line":554,"column":4},"end":{"line":557,"column":7}},"227":{"start":{"line":555,"column":6},"end":{"line":556,"column":53}},"228":{"start":{"line":555,"column":15},"end":{"line":555,"column":29}},"229":{"start":{"line":556,"column":11},"end":{"line":556,"column":53}},"230":{"start":{"line":558,"column":4},"end":{"line":558,"column":28}},"231":{"start":{"line":561,"column":2},"end":{"line":569,"column":4}},"232":{"start":{"line":562,"column":4},"end":{"line":568,"column":5}},"233":{"start":{"line":563,"column":6},"end":{"line":563,"column":30}},"234":{"start":{"line":564,"column":6},"end":{"line":564,"column":50}},"235":{"start":{"line":565,"column":6},"end":{"line":565,"column":64}},"236":{"start":{"line":566,"column":6},"end":{"line":566,"column":50}},"237":{"start":{"line":567,"column":6},"end":{"line":567,"column":64}},"238":{"start":{"line":579,"column":2},"end":{"line":613,"column":4}},"239":{"start":{"line":580,"column":4},"end":{"line":580,"column":45}},"240":{"start":{"line":581,"column":4},"end":{"line":581,"column":28}},"241":{"start":{"line":582,"column":4},"end":{"line":582,"column":32}},"242":{"start":{"line":584,"column":4},"end":{"line":611,"column":5}},"243":{"start":{"line":586,"column":8},"end":{"line":586,"column":74}},"244":{"start":{"line":587,"column":8},"end":{"line":587,"column":14}},"245":{"start":{"line":589,"column":8},"end":{"line":590,"column":70}},"246":{"start":{"line":591,"column":8},"end":{"line":591,"column":14}},"247":{"start":{"line":593,"column":8},"end":{"line":594,"column":66}},"248":{"start":{"line":595,"column":8},"end":{"line":595,"column":14}},"249":{"start":{"line":598,"column":8},"end":{"line":598,"column":54}},"250":{"start":{"line":599,"column":8},"end":{"line":610,"column":9}},"251":{"start":{"line":600,"column":10},"end":{"line":602,"column":16}},"252":{"start":{"line":604,"column":10},"end":{"line":609,"column":13}},"253":{"start":{"line":605,"column":12},"end":{"line":605,"column":73}},"254":{"start":{"line":606,"column":12},"end":{"line":606,"column":33}},"255":{"start":{"line":607,"column":12},"end":{"line":607,"column":48}},"256":{"start":{"line":608,"column":12},"end":{"line":608,"column":20}},"257":{"start":{"line":612,"column":4},"end":{"line":612,"column":22}},"258":{"start":{"line":624,"column":2},"end":{"line":649,"column":4}},"259":{"start":{"line":625,"column":4},"end":{"line":625,"column":45}},"260":{"start":{"line":626,"column":4},"end":{"line":626,"column":20}},"261":{"start":{"line":627,"column":4},"end":{"line":647,"column":9}},"262":{"start":{"line":629,"column":8},"end":{"line":629,"column":32}},"263":{"start":{"line":629,"column":17},"end":{"line":629,"column":32}},"264":{"start":{"line":630,"column":8},"end":{"line":632,"column":9}},"265":{"start":{"line":631,"column":10},"end":{"line":631,"column":37}},"266":{"start":{"line":633,"column":8},"end":{"line":633,"column":48}},"267":{"start":{"line":634,"column":8},"end":{"line":646,"column":11}},"268":{"start":{"line":635,"column":10},"end":{"line":635,"column":49}},"269":{"start":{"line":635,"column":28},"end":{"line":635,"column":49}},"270":{"start":{"line":636,"column":10},"end":{"line":645,"column":13}},"271":{"start":{"line":643,"column":12},"end":{"line":643,"column":36}},"272":{"start":{"line":643,"column":21},"end":{"line":643,"column":36}},"273":{"start":{"line":644,"column":12},"end":{"line":644,"column":38}},"274":{"start":{"line":648,"column":4},"end":{"line":648,"column":22}}},"branchMap":{"1":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":22},"end":{"line":114,"column":36}},{"start":{"line":114,"column":40},"end":{"line":114,"column":47}}]},"2":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":27},"end":{"line":115,"column":40}},{"start":{"line":115,"column":44},"end":{"line":115,"column":51}}]},"3":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":33},"end":{"line":116,"column":56}},{"start":{"line":117,"column":8},"end":{"line":117,"column":49}}]},"4":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":6},"end":{"line":120,"column":6}},{"start":{"line":120,"column":6},"end":{"line":120,"column":6}}]},"5":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":10},"end":{"line":120,"column":35}},{"start":{"line":120,"column":39},"end":{"line":120,"column":60}}]},"6":{"line":121,"type":"switch","locations":[{"start":{"line":122,"column":10},"end":{"line":125,"column":18}},{"start":{"line":126,"column":10},"end":{"line":129,"column":18}}]},"7":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":6}},{"start":{"line":133,"column":6},"end":{"line":133,"column":6}}]},"8":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":10},"end":{"line":133,"column":30}},{"start":{"line":133,"column":34},"end":{"line":133,"column":54}}]},"9":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":13},"end":{"line":136,"column":13}},{"start":{"line":136,"column":13},"end":{"line":136,"column":13}}]},"10":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":13},"end":{"line":139,"column":13}},{"start":{"line":139,"column":13},"end":{"line":139,"column":13}}]},"11":{"line":154,"type":"switch","locations":[{"start":{"line":155,"column":6},"end":{"line":157,"column":14}},{"start":{"line":158,"column":6},"end":{"line":160,"column":14}},{"start":{"line":161,"column":6},"end":{"line":163,"column":14}},{"start":{"line":164,"column":6},"end":{"line":165,"column":19}}]},"12":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"13":{"line":172,"type":"switch","locations":[{"start":{"line":173,"column":8},"end":{"line":175,"column":16}},{"start":{"line":176,"column":8},"end":{"line":178,"column":16}},{"start":{"line":179,"column":8},"end":{"line":179,"column":32}},{"start":{"line":180,"column":8},"end":{"line":182,"column":16}},{"start":{"line":183,"column":8},"end":{"line":185,"column":16}},{"start":{"line":186,"column":8},"end":{"line":187,"column":21}}]},"14":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":43},"end":{"line":191,"column":58}},{"start":{"line":191,"column":62},"end":{"line":191,"column":71}}]},"15":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"16":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":6},"end":{"line":226,"column":6}},{"start":{"line":226,"column":6},"end":{"line":226,"column":6}}]},"17":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":6},"end":{"line":230,"column":6}},{"start":{"line":230,"column":6},"end":{"line":230,"column":6}}]},"18":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":8},"end":{"line":235,"column":8}},{"start":{"line":235,"column":8},"end":{"line":235,"column":8}}]},"19":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":8},"end":{"line":242,"column":8}},{"start":{"line":242,"column":8},"end":{"line":242,"column":8}}]},"20":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":4},"end":{"line":248,"column":4}},{"start":{"line":248,"column":4},"end":{"line":248,"column":4}}]},"21":{"line":259,"type":"binary-expr","locations":[{"start":{"line":259,"column":18},"end":{"line":259,"column":28}},{"start":{"line":259,"column":32},"end":{"line":259,"column":43}}]},"22":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":4},"end":{"line":278,"column":4}},{"start":{"line":278,"column":4},"end":{"line":278,"column":4}}]},"23":{"line":278,"type":"binary-expr","locations":[{"start":{"line":278,"column":8},"end":{"line":278,"column":18}},{"start":{"line":278,"column":22},"end":{"line":278,"column":46}}]},"24":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":8},"end":{"line":282,"column":8}},{"start":{"line":282,"column":8},"end":{"line":282,"column":8}}]},"25":{"line":282,"type":"binary-expr","locations":[{"start":{"line":282,"column":12},"end":{"line":282,"column":31}},{"start":{"line":282,"column":35},"end":{"line":282,"column":62}}]},"26":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":8},"end":{"line":284,"column":8}},{"start":{"line":284,"column":8},"end":{"line":284,"column":8}}]},"27":{"line":284,"type":"binary-expr","locations":[{"start":{"line":284,"column":12},"end":{"line":284,"column":17}},{"start":{"line":284,"column":21},"end":{"line":284,"column":37}},{"start":{"line":284,"column":41},"end":{"line":284,"column":58}}]},"28":{"line":287,"type":"binary-expr","locations":[{"start":{"line":287,"column":22},"end":{"line":287,"column":26}},{"start":{"line":287,"column":30},"end":{"line":287,"column":37}}]},"29":{"line":290,"type":"binary-expr","locations":[{"start":{"line":290,"column":24},"end":{"line":290,"column":38}},{"start":{"line":290,"column":42},"end":{"line":290,"column":49}}]},"30":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":15},"end":{"line":296,"column":25}},{"start":{"line":298,"column":6},"end":{"line":298,"column":48}},{"start":{"line":300,"column":7},"end":{"line":300,"column":28}},{"start":{"line":300,"column":32},"end":{"line":300,"column":63}},{"start":{"line":302,"column":6},"end":{"line":302,"column":26}},{"start":{"line":304,"column":6},"end":{"line":304,"column":36}}]},"31":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":4},"end":{"line":305,"column":4}},{"start":{"line":305,"column":4},"end":{"line":305,"column":4}}]},"32":{"line":305,"type":"binary-expr","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":12}},{"start":{"line":305,"column":16},"end":{"line":305,"column":25}}]},"33":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":4},"end":{"line":334,"column":4}},{"start":{"line":334,"column":4},"end":{"line":334,"column":4}}]},"34":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":4},"end":{"line":335,"column":4}},{"start":{"line":335,"column":4},"end":{"line":335,"column":4}}]},"35":{"line":335,"type":"binary-expr","locations":[{"start":{"line":335,"column":8},"end":{"line":335,"column":28}},{"start":{"line":335,"column":32},"end":{"line":335,"column":57}},{"start":{"line":335,"column":62},"end":{"line":335,"column":93}}]},"36":{"line":338,"type":"binary-expr","locations":[{"start":{"line":338,"column":15},"end":{"line":338,"column":23}},{"start":{"line":338,"column":27},"end":{"line":338,"column":34}}]},"37":{"line":339,"type":"cond-expr","locations":[{"start":{"line":339,"column":49},"end":{"line":339,"column":58}},{"start":{"line":339,"column":61},"end":{"line":339,"column":87}}]},"38":{"line":340,"type":"binary-expr","locations":[{"start":{"line":340,"column":17},"end":{"line":340,"column":27}},{"start":{"line":340,"column":31},"end":{"line":340,"column":38}}]},"39":{"line":341,"type":"cond-expr","locations":[{"start":{"line":341,"column":53},"end":{"line":341,"column":62}},{"start":{"line":342,"column":6},"end":{"line":342,"column":47}}]},"40":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":4},"end":{"line":351,"column":4}},{"start":{"line":351,"column":4},"end":{"line":351,"column":4}}]},"41":{"line":351,"type":"binary-expr","locations":[{"start":{"line":351,"column":8},"end":{"line":351,"column":16}},{"start":{"line":351,"column":20},"end":{"line":351,"column":52}}]},"42":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":8},"end":{"line":364,"column":8}},{"start":{"line":364,"column":8},"end":{"line":364,"column":8}}]},"43":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":4},"end":{"line":376,"column":4}},{"start":{"line":376,"column":4},"end":{"line":376,"column":4}}]},"44":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":4},"end":{"line":400,"column":4}},{"start":{"line":400,"column":4},"end":{"line":400,"column":4}}]},"45":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":19},"end":{"line":401,"column":36}},{"start":{"line":401,"column":40},"end":{"line":401,"column":49}}]},"46":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":4},"end":{"line":430,"column":4}},{"start":{"line":430,"column":4},"end":{"line":430,"column":4}}]},"47":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":4},"end":{"line":435,"column":4}},{"start":{"line":435,"column":4},"end":{"line":435,"column":4}}]},"48":{"line":443,"type":"binary-expr","locations":[{"start":{"line":443,"column":33},"end":{"line":443,"column":38}},{"start":{"line":443,"column":42},"end":{"line":443,"column":74}}]},"49":{"line":449,"type":"cond-expr","locations":[{"start":{"line":449,"column":49},"end":{"line":449,"column":58}},{"start":{"line":449,"column":61},"end":{"line":449,"column":97}}]},"50":{"line":451,"type":"cond-expr","locations":[{"start":{"line":452,"column":6},"end":{"line":452,"column":15}},{"start":{"line":453,"column":6},"end":{"line":455,"column":36}}]},"51":{"line":453,"type":"cond-expr","locations":[{"start":{"line":454,"column":8},"end":{"line":454,"column":50}},{"start":{"line":455,"column":8},"end":{"line":455,"column":36}}]},"52":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":6},"end":{"line":470,"column":6}},{"start":{"line":470,"column":6},"end":{"line":470,"column":6}}]},"53":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":10},"end":{"line":481,"column":10}},{"start":{"line":481,"column":10},"end":{"line":481,"column":10}}]},"54":{"line":481,"type":"binary-expr","locations":[{"start":{"line":481,"column":14},"end":{"line":481,"column":23}},{"start":{"line":481,"column":27},"end":{"line":481,"column":34}}]},"55":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":8},"end":{"line":488,"column":8}},{"start":{"line":488,"column":8},"end":{"line":488,"column":8}}]},"56":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":16},"end":{"line":492,"column":16}},{"start":{"line":492,"column":16},"end":{"line":492,"column":16}}]},"57":{"line":492,"type":"binary-expr","locations":[{"start":{"line":492,"column":20},"end":{"line":492,"column":24}},{"start":{"line":492,"column":28},"end":{"line":492,"column":34}}]},"58":{"line":495,"type":"if","locations":[{"start":{"line":495,"column":18},"end":{"line":495,"column":18}},{"start":{"line":495,"column":18},"end":{"line":495,"column":18}}]},"59":{"line":505,"type":"if","locations":[{"start":{"line":505,"column":8},"end":{"line":505,"column":8}},{"start":{"line":505,"column":8},"end":{"line":505,"column":8}}]},"60":{"line":514,"type":"cond-expr","locations":[{"start":{"line":514,"column":49},"end":{"line":514,"column":64}},{"start":{"line":514,"column":67},"end":{"line":514,"column":69}}]},"61":{"line":523,"type":"binary-expr","locations":[{"start":{"line":523,"column":20},"end":{"line":523,"column":35}},{"start":{"line":523,"column":39},"end":{"line":523,"column":59}},{"start":{"line":523,"column":63},"end":{"line":523,"column":91}}]},"62":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":4},"end":{"line":527,"column":4}},{"start":{"line":527,"column":4},"end":{"line":527,"column":4}}]},"63":{"line":527,"type":"binary-expr","locations":[{"start":{"line":527,"column":8},"end":{"line":527,"column":15}},{"start":{"line":527,"column":19},"end":{"line":527,"column":46}}]},"64":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":4},"end":{"line":544,"column":4}},{"start":{"line":544,"column":4},"end":{"line":544,"column":4}}]},"65":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":6},"end":{"line":555,"column":6}},{"start":{"line":555,"column":6},"end":{"line":555,"column":6}}]},"66":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":4},"end":{"line":562,"column":4}},{"start":{"line":562,"column":4},"end":{"line":562,"column":4}}]},"67":{"line":580,"type":"binary-expr","locations":[{"start":{"line":580,"column":9},"end":{"line":580,"column":11}},{"start":{"line":580,"column":15},"end":{"line":580,"column":44}}]},"68":{"line":581,"type":"binary-expr","locations":[{"start":{"line":581,"column":11},"end":{"line":581,"column":15}},{"start":{"line":581,"column":19},"end":{"line":581,"column":27}}]},"69":{"line":584,"type":"switch","locations":[{"start":{"line":585,"column":6},"end":{"line":587,"column":14}},{"start":{"line":588,"column":6},"end":{"line":591,"column":14}},{"start":{"line":592,"column":6},"end":{"line":595,"column":14}},{"start":{"line":596,"column":6},"end":{"line":610,"column":9}}]},"70":{"line":599,"type":"if","locations":[{"start":{"line":599,"column":8},"end":{"line":599,"column":8}},{"start":{"line":599,"column":8},"end":{"line":599,"column":8}}]},"71":{"line":625,"type":"binary-expr","locations":[{"start":{"line":625,"column":9},"end":{"line":625,"column":11}},{"start":{"line":625,"column":15},"end":{"line":625,"column":44}}]},"72":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":8},"end":{"line":629,"column":8}},{"start":{"line":629,"column":8},"end":{"line":629,"column":8}}]},"73":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":8},"end":{"line":630,"column":8}},{"start":{"line":630,"column":8},"end":{"line":630,"column":8}}]},"74":{"line":633,"type":"binary-expr","locations":[{"start":{"line":633,"column":24},"end":{"line":633,"column":37}},{"start":{"line":633,"column":41},"end":{"line":633,"column":47}}]},"75":{"line":635,"type":"if","locations":[{"start":{"line":635,"column":10},"end":{"line":635,"column":10}},{"start":{"line":635,"column":10},"end":{"line":635,"column":10}}]},"76":{"line":635,"type":"binary-expr","locations":[{"start":{"line":635,"column":14},"end":{"line":635,"column":17}},{"start":{"line":635,"column":21},"end":{"line":635,"column":26}}]},"77":{"line":643,"type":"if","locations":[{"start":{"line":643,"column":12},"end":{"line":643,"column":12}},{"start":{"line":643,"column":12},"end":{"line":643,"column":12}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","/*!"," Schema ACL options"," Object level permissions, for example, an album owned by a user"," Factors to be authorized against:"," * model name: Album"," * model instance properties: userId of the album, friends, shared"," * methods"," * app and/or user ids/roles"," ** loggedIn"," ** roles"," ** userId"," ** appId"," ** none"," ** everyone"," ** relations: owner/friend/granted"," Class level permissions, for example, Album"," * model name: Album"," * methods"," URL/Route level permissions"," * url pattern"," * application id"," * ip addresses"," * http headers"," Map to oAuth 2.0 scopes"," */","","var g = require('../../lib/globalize');","var loopback = require('../../lib/loopback');","var utils = require('../../lib/utils');","var async = require('async');","var extend = require('util')._extend;","var assert = require('assert');","var debug = require('debug')('loopback:security:acl');","","var ctx = require('../../lib/access-context');","var AccessContext = ctx.AccessContext;","var Principal = ctx.Principal;","var AccessRequest = ctx.AccessRequest;","","var Role = loopback.Role;","assert(Role, 'Role model must be defined before ACL model');","","/**"," * A Model for access control meta data."," *"," * System grants permissions to principals (users/applications, can be grouped"," * into roles)."," *"," * Protected resource: the model data and operations"," * (model/property/method/relation/…)"," *"," * For a given principal, such as client application and/or user, is it allowed"," * to access (read/write/execute)"," * the protected resource?"," *"," * @header ACL"," * @property {String} model Name of the model."," * @property {String} property Name of the property, method, scope, or relation."," * @property {String} accessType Type of access being granted: one of READ, WRITE, or EXECUTE."," * @property {String} permission Type of permission granted. One of:"," *"," *  - ALARM: Generate an alarm, in a system-dependent way, the access specified in the permissions component of the ACL entry."," *  - ALLOW: Explicitly grants access to the resource."," *  - AUDIT: Log, in a system-dependent way, the access specified in the permissions component of the ACL entry."," *  - DENY: Explicitly denies access to the resource."," * @property {String} principalType Type of the principal; one of: Application, User, Role."," * @property {String} principalId ID of the principal - such as appId, userId or roleId."," * @property {Object} settings Extends the `Model.settings` object."," * @property {String} settings.defaultPermission Default permission setting: ALLOW, DENY, ALARM, or AUDIT. Default is ALLOW."," * Set to DENY to prohibit all API access by default."," *"," * @class ACL"," * @inherits PersistedModel"," */","","module.exports = function(ACL) {","  ACL.ALL = AccessContext.ALL;","","  ACL.DEFAULT = AccessContext.DEFAULT; // Not specified","  ACL.ALLOW = AccessContext.ALLOW; // Allow","  ACL.ALARM = AccessContext.ALARM; // Warn - send an alarm","  ACL.AUDIT = AccessContext.AUDIT; // Audit - record the access","  ACL.DENY = AccessContext.DENY; // Deny","","  ACL.READ = AccessContext.READ; // Read operation","  ACL.REPLICATE = AccessContext.REPLICATE; // Replicate (pull) changes","  ACL.WRITE = AccessContext.WRITE; // Write operation","  ACL.EXECUTE = AccessContext.EXECUTE; // Execute operation","","  ACL.USER = Principal.USER;","  ACL.APP = ACL.APPLICATION = Principal.APPLICATION;","  ACL.ROLE = Principal.ROLE;","  ACL.SCOPE = Principal.SCOPE;","","  /**","   * Calculate the matching score for the given rule and request","   * @param {ACL} rule The ACL entry","   * @param {AccessRequest} req The request","   * @returns {Number}","   */","  ACL.getMatchingScore = function getMatchingScore(rule, req) {","    var props = ['model', 'property', 'accessType'];","    var score = 0;","","    for (var i = 0; i < props.length; i++) {","      // Shift the score by 4 for each of the properties as the weight","      score = score * 4;","      var ruleValue = rule[props[i]] || ACL.ALL;","      var requestedValue = req[props[i]] || ACL.ALL;","      var isMatchingMethodName = props[i] === 'property' &&","        req.methodNames.indexOf(ruleValue) !== -1;","","      var isMatchingAccessType = ruleValue === requestedValue;","      if (props[i] === 'accessType' && !isMatchingAccessType) {","        switch (ruleValue) {","          case ACL.EXECUTE:","            // EXECUTE should match READ, REPLICATE and WRITE","            isMatchingAccessType = true;","            break;","          case ACL.WRITE:","            // WRITE should match REPLICATE too","            isMatchingAccessType = requestedValue === ACL.REPLICATE;","            break;","        }","      }","","      if (isMatchingMethodName || isMatchingAccessType) {","        // Exact match","        score += 3;","      } else if (ruleValue === ACL.ALL) {","        // Wildcard match","        score += 2;","      } else if (requestedValue === ACL.ALL) {","        score += 1;","      } else {","        // Doesn't match at all","        return -1;","      }","    }","","    // Weigh against the principal type into 4 levels","    // - user level (explicitly allow/deny a given user)","    // - app level (explicitly allow/deny a given app)","    // - role level (role based authorization)","    // - other","    // user > app > role > ...","    score = score * 4;","    switch (rule.principalType) {","      case ACL.USER:","        score += 4;","        break;","      case ACL.APP:","        score += 3;","        break;","      case ACL.ROLE:","        score += 2;","        break;","      default:","        score += 1;","    }","","    // Weigh against the roles","    // everyone < authenticated/unauthenticated < related < owner < ...","    score = score * 8;","    if (rule.principalType === ACL.ROLE) {","      switch (rule.principalId) {","        case Role.OWNER:","          score += 4;","          break;","        case Role.RELATED:","          score += 3;","          break;","        case Role.AUTHENTICATED:","        case Role.UNAUTHENTICATED:","          score += 2;","          break;","        case Role.EVERYONE:","          score += 1;","          break;","        default:","          score += 5;","      }","    }","    score = score * 4;","    score += AccessContext.permissionOrder[rule.permission || ACL.ALLOW] - 1;","    return score;","  };","","  /**","   * Get matching score for the given `AccessRequest`.","   * @param {AccessRequest} req The request","   * @returns {Number} score","   */","","  ACL.prototype.score = function(req) {","    return this.constructor.getMatchingScore(this, req);","  };","","  /*!","   * Resolve permission from the ACLs","   * @param {Object[]) acls The list of ACLs","   * @param {AccessRequest} req The access request","   * @returns {AccessRequest} result The resolved access request","   */","  ACL.resolvePermission = function resolvePermission(acls, req) {","    if (!(req instanceof AccessRequest)) {","      req.registry = this.registry;","      req = new AccessRequest(req);","    }","    // Sort by the matching score in descending order","    acls = acls.sort(function(rule1, rule2) {","      return ACL.getMatchingScore(rule2, req) - ACL.getMatchingScore(rule1, req);","    });","    var permission = ACL.DEFAULT;","    var score = 0;","","    for (var i = 0; i < acls.length; i++) {","      var candidate = acls[i];","      score = ACL.getMatchingScore(candidate, req);","      if (score < 0) {","        // the highest scored ACL did not match","        break;","      }","      if (!req.isWildcard()) {","        // We should stop from the first match for non-wildcard","        permission = candidate.permission;","        break;","      } else {","        if (req.exactlyMatches(candidate)) {","          permission = candidate.permission;","          break;","        }","        // For wildcard match, find the strongest permission","        var candidateOrder = AccessContext.permissionOrder[candidate.permission];","        var permissionOrder = AccessContext.permissionOrder[permission];","        if (candidateOrder > permissionOrder) {","          permission = candidate.permission;","        }","      }","    }","","    if (debug.enabled) {","      debug('The following ACLs were searched: ');","      acls.forEach(function(acl) {","        acl.debug();","        debug('with score:', acl.score(req));","      });","    }","    var res = new AccessRequest({","      model: req.model,","      property: req.property,","      accessType: req.accessType,","      permission: permission || ACL.DEFAULT,","      registry: this.registry});","","    // Elucidate permission status if DEFAULT","    res.settleDefaultPermission();","","    return res;","  };","","  /*!","   * Get the static ACLs from the model definition","   * @param {String} model The model name","   * @param {String} property The property/method/relation name","   *","   * @return {Object[]} An array of ACLs","   */","  ACL.getStaticACLs = function getStaticACLs(model, property) {","    var modelClass = this.registry.findModel(model);","    var staticACLs = [];","    if (modelClass && modelClass.settings.acls) {","      modelClass.settings.acls.forEach(function(acl) {","        var prop = acl.property;","        // We support static ACL property with array of string values.","        if (Array.isArray(prop) && prop.indexOf(property) >= 0)","          prop = property;","        if (!prop || prop === ACL.ALL || property === prop) {","          staticACLs.push(new ACL({","            model: model,","            property: prop || ACL.ALL,","            principalType: acl.principalType,","            principalId: acl.principalId, // TODO: Should it be a name?","            accessType: acl.accessType || ACL.ALL,","            permission: acl.permission,","          }));","        }","      });","    }","    var prop = modelClass && (","      // regular property","      modelClass.definition.properties[property] ||","      // relation/scope","      (modelClass._scopeMeta && modelClass._scopeMeta[property]) ||","      // static method","      modelClass[property] ||","      // prototype method","      modelClass.prototype[property]);","    if (prop && prop.acls) {","      prop.acls.forEach(function(acl) {","        staticACLs.push(new ACL({","          model: modelClass.modelName,","          property: property,","          principalType: acl.principalType,","          principalId: acl.principalId,","          accessType: acl.accessType,","          permission: acl.permission,","        }));","      });","    }","    return staticACLs;","  };","","  /**","   * Check if the given principal is allowed to access the model/property","   * @param {String} principalType The principal type.","   * @param {String} principalId The principal ID.","   * @param {String} model The model name.","   * @param {String} property The property/method/relation name.","   * @param {String} accessType The access type.","   * @callback {Function} callback Callback function.","   * @param {String|Error} err The error object.","   * @param {AccessRequest} result The resolved access request.","   */","  ACL.checkPermission = function checkPermission(principalType, principalId,","                                                 model, property, accessType,","                                                 callback) {","    if (!callback) callback = utils.createPromiseCallback();","    if (principalId !== null && principalId !== undefined && (typeof principalId !== 'string')) {","      principalId = principalId.toString();","    }","    property = property || ACL.ALL;","    var propertyQuery = (property === ACL.ALL) ? undefined : {inq: [property, ACL.ALL]};","    accessType = accessType || ACL.ALL;","    var accessTypeQuery = (accessType === ACL.ALL) ? undefined :","      {inq: [accessType, ACL.ALL, ACL.EXECUTE]};","","    var req = new AccessRequest({model, property, accessType, registry: this.registry});","","    var acls = this.getStaticACLs(model, property);","","    // resolved is an instance of AccessRequest","    var resolved = this.resolvePermission(acls, req);","","    if (resolved && resolved.permission === ACL.DENY) {","      debug('Permission denied by statically resolved permission');","      debug(' Resolved Permission: %j', resolved);","      process.nextTick(function() {","        callback(null, resolved);","      });","      return callback.promise;","    }","","    var self = this;","    this.find({where: {principalType: principalType, principalId: principalId,","      model: model, property: propertyQuery, accessType: accessTypeQuery}},","      function(err, dynACLs) {","        if (err) {","          return callback(err);","        }","        acls = acls.concat(dynACLs);","        // resolved is an instance of AccessRequest","        resolved = self.resolvePermission(acls, req);","        return callback(null, resolved);","      });","    return callback.promise;","  };","","  ACL.prototype.debug = function() {","    if (debug.enabled) {","      debug('---ACL---');","      debug('model %s', this.model);","      debug('property %s', this.property);","      debug('principalType %s', this.principalType);","      debug('principalId %s', this.principalId);","      debug('accessType %s', this.accessType);","      debug('permission %s', this.permission);","    }","  };","","  // NOTE Regarding ACL.isAllowed() and ACL.prototype.isAllowed()","  // Extending existing logic, including from ACL.checkAccessForContext() method,","  // ACL instance with missing property `permission` are not promoted to","  // permission = ACL.DEFAULT config. Such ACL instances will hence always be","  // inefective","","  /**","   * Test if ACL's permission is ALLOW","   * @param {String} permission The permission to test, expects one of 'ALLOW', 'DENY', 'DEFAULT'","   * @param {String} defaultPermission The default permission to apply if not providing a finite one in the permission parameter","   * @returns {Boolean} true if ACL permission is ALLOW","   */","  ACL.isAllowed = function(permission, defaultPermission) {","    if (permission === ACL.DEFAULT) {","      permission = defaultPermission || ACL.ALLOW;","    }","    return permission !== loopback.ACL.DENY;","  };","","  /**","   * Test if ACL's permission is ALLOW","   * @param {String} defaultPermission The default permission to apply if missing in ACL instance","   * @returns {Boolean} true if ACL permission is ALLOW","   */","  ACL.prototype.isAllowed = function(defaultPermission) {","    return this.constructor.isAllowed(this.permission, defaultPermission);","  };","","  /**","   * Check if the request has the permission to access.","   * @options {AccessContext|Object} context","   * An AccessContext instance or a plain object with the following properties.","   * @property {Object[]} principals An array of principals.","   * @property {String|Model} model The model name or model class.","   * @property {*} modelId The model instance ID.","   * @property {String} property The property/method/relation name.","   * @property {String} accessType The access type:","   * READ, REPLICATE, WRITE, or EXECUTE.","   * @callback {Function} callback Callback function","   * @param {String|Error} err The error object.","   * @param {AccessRequest} result The resolved access request.","   */","  ACL.checkAccessForContext = function(context, callback) {","    if (!callback) callback = utils.createPromiseCallback();","    var self = this;","    self.resolveRelatedModels();","    var roleModel = self.roleModel;","","    if (!(context instanceof AccessContext)) {","      context.registry = this.registry;","      context = new AccessContext(context);","    }","","    var authorizedRoles = {};","    var remotingContext = context.remotingContext;","    var model = context.model;","    var modelDefaultPermission = model && model.settings.defaultPermission;","    var property = context.property;","    var accessType = context.accessType;","    var modelName = context.modelName;","","    var methodNames = context.methodNames;","    var propertyQuery = (property === ACL.ALL) ? undefined : {inq: methodNames.concat([ACL.ALL])};","","    var accessTypeQuery = (accessType === ACL.ALL) ?","      undefined :","      (accessType === ACL.REPLICATE) ?","        {inq: [ACL.REPLICATE, ACL.WRITE, ACL.ALL]} :","        {inq: [accessType, ACL.ALL]};","","    var req = new AccessRequest({","      model: modelName,","      property,","      accessType,","      permission: ACL.DEFAULT,","      methodNames,","      registry: this.registry});","","    var effectiveACLs = [];","    var staticACLs = self.getStaticACLs(model.modelName, property);","","    this.find({where: {model: model.modelName, property: propertyQuery,","      accessType: accessTypeQuery}}, function(err, acls) {","      if (err) return callback(err);","      var inRoleTasks = [];","","      acls = acls.concat(staticACLs);","","      acls.forEach(function(acl) {","        // Check exact matches","        for (var i = 0; i < context.principals.length; i++) {","          var p = context.principals[i];","          var typeMatch = p.type === acl.principalType;","          var idMatch = String(p.id) === String(acl.principalId);","          if (typeMatch && idMatch) {","            effectiveACLs.push(acl);","            return;","          }","        }","","        // Check role matches","        if (acl.principalType === ACL.ROLE) {","          inRoleTasks.push(function(done) {","            roleModel.isInRole(acl.principalId, context,","              function(err, inRole) {","                if (!err && inRole) {","                  effectiveACLs.push(acl);","                  // add the role to authorizedRoles if allowed","                  if (acl.isAllowed(modelDefaultPermission))","                    authorizedRoles[acl.principalId] = true;","                }","                done(err, acl);","              });","          });","        }","      });","","      async.parallel(inRoleTasks, function(err, results) {","        if (err) return callback(err, null);","","        // resolved is an instance of AccessRequest","        var resolved = self.resolvePermission(effectiveACLs, req);","        debug('---Resolved---');","        resolved.debug();","","        // set authorizedRoles in remotingContext options argument if","        // resolved AccessRequest permission is ALLOW, else set it to empty object","        authorizedRoles = resolved.isAllowed() ? authorizedRoles : {};","        saveAuthorizedRolesToRemotingContext(remotingContext, authorizedRoles);","        return callback(null, resolved);","      });","    });","    return callback.promise;","  };","","  function saveAuthorizedRolesToRemotingContext(remotingContext, authorizedRoles) {","    const options = remotingContext && remotingContext.args && remotingContext.args.options;","    // authorizedRoles key/value map is added to the options argument only if","    // the latter exists and is an object. This means that the feature's availability","    // will depend on the app configuration","    if (options && typeof options === 'object') { // null is object too","      options.authorizedRoles = authorizedRoles;","    }","  }","","  /**","   * Check if the given access token can invoke the method","   * @param {AccessToken} token The access token","   * @param {String} model The model name","   * @param {*} modelId The model id","   * @param {String} method The method name","   * @callback {Function} callback Callback function","   * @param {String|Error} err The error object","   * @param {Boolean} allowed is the request allowed","   */","  ACL.checkAccessForToken = function(token, model, modelId, method, callback) {","    assert(token, 'Access token is required');","    if (!callback) callback = utils.createPromiseCallback();","    var context = new AccessContext({","      registry: this.registry,","      accessToken: token,","      model: model,","      property: method,","      method: method,","      modelId: modelId,","    });","","    this.checkAccessForContext(context, function(err, accessRequest) {","      if (err) callback(err);","      else callback(null, accessRequest.isAllowed());","    });","    return callback.promise;","  };","","  ACL.resolveRelatedModels = function() {","    if (!this.roleModel) {","      var reg = this.registry;","      this.roleModel = reg.getModelByType('Role');","      this.roleMappingModel = reg.getModelByType('RoleMapping');","      this.userModel = reg.getModelByType('User');","      this.applicationModel = reg.getModelByType('Application');","    }","  };","","  /**","   * Resolve a principal by type/id","   * @param {String} type Principal type - ROLE/APP/USER","   * @param {String|Number} id Principal id or name","   * @callback {Function} callback Callback function","   * @param {String|Error} err The error object","   * @param {Object} result An instance of principal (Role, Application or User)","   */","  ACL.resolvePrincipal = function(type, id, cb) {","    cb = cb || utils.createPromiseCallback();","    type = type || ACL.ROLE;","    this.resolveRelatedModels();","","    switch (type) {","      case ACL.ROLE:","        this.roleModel.findOne({where: {or: [{name: id}, {id: id}]}}, cb);","        break;","      case ACL.USER:","        this.userModel.findOne(","          {where: {or: [{username: id}, {email: id}, {id: id}]}}, cb);","        break;","      case ACL.APP:","        this.applicationModel.findOne(","          {where: {or: [{name: id}, {email: id}, {id: id}]}}, cb);","        break;","      default:","        // try resolving a user model with a name matching the principalType","        var userModel = this.registry.findModel(type);","        if (userModel) {","          userModel.findOne(","            {where: {or: [{username: id}, {email: id}, {id: id}]}},","            cb);","        } else {","          process.nextTick(function() {","            var err = new Error(g.f('Invalid principal type: %s', type));","            err.statusCode = 400;","            err.code = 'INVALID_PRINCIPAL_TYPE';","            cb(err);","          });","        }","    }","    return cb.promise;","  };","","  /**","   * Check if the given principal is mapped to the role","   * @param {String} principalType Principal type","   * @param {String|*} principalId Principal id/name","   * @param {String|*} role Role id/name","   * @callback {Function} callback Callback function","   * @param {String|Error} err The error object","   * @param {Boolean} isMapped is the ACL mapped to the role","   */","  ACL.isMappedToRole = function(principalType, principalId, role, cb) {","    cb = cb || utils.createPromiseCallback();","    var self = this;","    this.resolvePrincipal(principalType, principalId,","      function(err, principal) {","        if (err) return cb(err);","        if (principal != null) {","          principalId = principal.id;","        }","        principalType = principalType || 'ROLE';","        self.resolvePrincipal('ROLE', role, function(err, role) {","          if (err || !role) return cb(err, role);","          self.roleMappingModel.findOne({","            where: {","              roleId: role.id,","              principalType: principalType,","              principalId: String(principalId),","            },","          }, function(err, result) {","            if (err) return cb(err);","            return cb(null, !!result);","          });","        });","      });","    return cb.promise;","  };","};",""],"l":{"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"41":1,"42":1,"43":1,"44":1,"46":1,"47":1,"82":1,"83":1,"85":1,"86":1,"87":1,"88":1,"89":1,"91":1,"92":1,"93":1,"94":1,"96":1,"97":1,"98":1,"99":1,"107":1,"108":0,"109":0,"111":0,"113":0,"114":0,"115":0,"116":0,"119":0,"120":0,"121":0,"124":0,"125":0,"128":0,"129":0,"133":0,"135":0,"136":0,"138":0,"139":0,"140":0,"143":0,"153":0,"154":0,"156":0,"157":0,"159":0,"160":0,"162":0,"163":0,"165":0,"170":0,"171":0,"172":0,"174":0,"175":0,"177":0,"178":0,"181":0,"182":0,"184":0,"185":0,"187":0,"190":0,"191":0,"192":0,"201":1,"202":0,"211":1,"212":0,"213":0,"214":0,"217":0,"218":0,"220":0,"221":0,"223":0,"224":0,"225":0,"226":0,"228":0,"230":0,"232":0,"233":0,"235":0,"236":0,"237":0,"240":0,"241":0,"242":0,"243":0,"248":0,"249":0,"250":0,"251":0,"252":0,"255":0,"263":0,"265":0,"275":1,"276":0,"277":0,"278":0,"279":0,"280":0,"282":0,"283":0,"284":0,"285":0,"296":0,"305":0,"306":0,"307":0,"317":0,"331":1,"334":0,"335":0,"336":0,"338":0,"339":0,"340":0,"341":0,"344":0,"346":0,"349":0,"351":0,"352":0,"353":0,"354":0,"355":0,"357":0,"360":0,"361":0,"364":0,"365":0,"367":0,"369":0,"370":0,"372":0,"375":1,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"399":1,"400":0,"401":0,"403":0,"411":1,"412":0,"429":1,"430":0,"431":0,"432":0,"433":0,"435":0,"436":0,"437":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"448":0,"449":0,"451":0,"457":0,"465":0,"466":0,"468":0,"470":0,"471":0,"473":0,"475":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"488":0,"489":0,"490":0,"492":0,"493":0,"495":0,"496":0,"498":0,"504":0,"505":0,"508":0,"509":0,"510":0,"514":0,"515":0,"516":0,"519":0,"522":1,"523":0,"527":0,"528":0,"542":1,"543":0,"544":0,"545":0,"554":0,"555":0,"556":0,"558":0,"561":1,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"579":1,"580":0,"581":0,"582":0,"584":0,"586":0,"587":0,"589":0,"591":0,"593":0,"595":0,"598":0,"599":0,"600":0,"604":0,"605":0,"606":0,"607":0,"608":0,"612":0,"624":1,"625":0,"626":0,"627":0,"629":0,"630":0,"631":0,"633":0,"634":0,"635":0,"636":0,"643":0,"644":0,"648":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/scope.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/scope.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":17},"end":{"line":21,"column":33}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":31},"end":{"line":22,"column":42}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":26},"end":{"line":39,"column":81}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":41},"end":{"line":45,"column":62}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":45}},"3":{"start":{"line":21,"column":0},"end":{"line":54,"column":2}},"4":{"start":{"line":22,"column":2},"end":{"line":27,"column":4}},"5":{"start":{"line":23,"column":4},"end":{"line":26,"column":5}},"6":{"start":{"line":24,"column":6},"end":{"line":24,"column":30}},"7":{"start":{"line":25,"column":6},"end":{"line":25,"column":55}},"8":{"start":{"line":39,"column":2},"end":{"line":53,"column":4}},"9":{"start":{"line":40,"column":4},"end":{"line":40,"column":32}},"10":{"start":{"line":41,"column":4},"end":{"line":41,"column":33}},"11":{"start":{"line":42,"column":4},"end":{"line":43,"column":74}},"12":{"start":{"line":45,"column":4},"end":{"line":52,"column":7}},"13":{"start":{"line":46,"column":6},"end":{"line":51,"column":7}},"14":{"start":{"line":47,"column":8},"end":{"line":47,"column":36}},"15":{"start":{"line":47,"column":22},"end":{"line":47,"column":36}},"16":{"start":{"line":49,"column":8},"end":{"line":50,"column":75}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":6}},{"start":{"line":46,"column":6},"end":{"line":46,"column":6}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":8}},{"start":{"line":47,"column":8},"end":{"line":47,"column":8}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var assert = require('assert');","var loopback = require('../../lib/loopback');","","/**"," * Resource owner grants/delegates permissions to client applications"," *"," * For a protected resource, does the client application have the authorization"," * from the resource owner (user or system)?"," *"," * Scope has many resource access entries"," *"," * @class Scope"," */","","module.exports = function(Scope) {","  Scope.resolveRelatedModels = function() {","    if (!this.aclModel) {","      var reg = this.registry;","      this.aclModel = reg.getModelByType(loopback.ACL);","    }","  };","","  /**","   * Check if the given scope is allowed to access the model/property","   * @param {String} scope The scope name","   * @param {String} model The model name","   * @param {String} property The property/method/relation name","   * @param {String} accessType The access type","   * @callback {Function} callback","   * @param {String|Error} err The error object","   * @param {AccessRequest} result The access permission","   */","  Scope.checkPermission = function(scope, model, property, accessType, callback) {","    this.resolveRelatedModels();","    var aclModel = this.aclModel;","    assert(aclModel,","      'ACL model must be defined before Scope.checkPermission is called');","","    this.findOne({where: {name: scope}}, function(err, scope) {","      if (err) {","        if (callback) callback(err);","      } else {","        aclModel.checkPermission(","          aclModel.SCOPE, scope.id, model, property, accessType, callback);","      }","    });","  };","};",""],"l":{"7":1,"8":1,"21":1,"22":1,"23":0,"24":0,"25":0,"39":1,"40":0,"41":0,"42":0,"45":0,"46":0,"47":0,"49":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/change.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/change.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":8,"21":8,"22":8,"23":0,"24":1,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1,"130":0,"131":1,"132":0,"133":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":1,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":1,"161":0,"162":1,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":1,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":1,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":1,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":1,"234":0,"235":1,"236":0,"237":0,"238":0,"239":0,"240":0,"241":1,"242":0,"243":0,"244":0,"245":1,"246":0,"247":0,"248":0,"249":0,"250":0,"251":1,"252":0,"253":0,"254":0,"255":0,"256":0,"257":1,"258":0,"259":0,"260":0,"261":0,"262":0,"263":1,"264":0,"265":0,"266":0,"267":0,"268":0,"269":1,"270":0,"271":0,"272":0,"273":1,"274":0,"275":0,"276":0,"277":1,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":1,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":1,"292":0,"293":0,"294":0,"295":1,"296":0,"297":0,"298":0,"299":0,"300":0,"301":1,"302":0,"303":0,"304":1,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":1,"314":0,"315":1,"316":0,"317":0,"318":1,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":1,"332":0,"333":1,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0},"b":{"1":[8,0],"2":[8,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0]},"f":{"1":1,"2":1,"3":8,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0},"fnMap":{"1":{"name":"(anonymous_1)","line":39,"loc":{"start":{"line":39,"column":17},"end":{"line":39,"column":34}}},"2":{"name":"(anonymous_2)","line":59,"loc":{"start":{"line":59,"column":17},"end":{"line":59,"column":28}}},"3":{"name":"(anonymous_3)","line":63,"loc":{"start":{"line":63,"column":23},"end":{"line":63,"column":34}}},"4":{"name":"(anonymous_4)","line":82,"loc":{"start":{"line":82,"column":31},"end":{"line":82,"column":71}}},"5":{"name":"(anonymous_5)","line":88,"loc":{"start":{"line":88,"column":29},"end":{"line":88,"column":42}}},"6":{"name":"(anonymous_6)","line":89,"loc":{"start":{"line":89,"column":13},"end":{"line":89,"column":26}}},"7":{"name":"(anonymous_7)","line":90,"loc":{"start":{"line":90,"column":49},"end":{"line":90,"column":71}}},"8":{"name":"next","line":95,"loc":{"start":{"line":95,"column":8},"end":{"line":95,"column":27}}},"9":{"name":"(anonymous_9)","line":106,"loc":{"start":{"line":106,"column":26},"end":{"line":106,"column":40}}},"10":{"name":"(anonymous_10)","line":110,"loc":{"start":{"line":110,"column":15},"end":{"line":110,"column":27}}},"11":{"name":"(anonymous_11)","line":133,"loc":{"start":{"line":133,"column":22},"end":{"line":133,"column":51}}},"12":{"name":"(anonymous_12)","line":148,"loc":{"start":{"line":148,"column":30},"end":{"line":148,"column":69}}},"13":{"name":"(anonymous_13)","line":154,"loc":{"start":{"line":154,"column":22},"end":{"line":154,"column":44}}},"14":{"name":"(anonymous_14)","line":179,"loc":{"start":{"line":179,"column":29},"end":{"line":179,"column":42}}},"15":{"name":"(anonymous_15)","line":190,"loc":{"start":{"line":190,"column":23},"end":{"line":190,"column":43}}},"16":{"name":"(anonymous_16)","line":194,"loc":{"start":{"line":194,"column":48},"end":{"line":194,"column":59}}},"17":{"name":"prepareAndDoRectify","line":205,"loc":{"start":{"line":205,"column":4},"end":{"line":205,"column":38}}},"18":{"name":"(anonymous_18)","line":216,"loc":{"start":{"line":216,"column":8},"end":{"line":216,"column":34}}},"19":{"name":"doRectify","line":223,"loc":{"start":{"line":223,"column":4},"end":{"line":223,"column":40}}},"20":{"name":"(anonymous_20)","line":275,"loc":{"start":{"line":275,"column":37},"end":{"line":275,"column":50}}},"21":{"name":"(anonymous_21)","line":279,"loc":{"start":{"line":279,"column":23},"end":{"line":279,"column":43}}},"22":{"name":"(anonymous_22)","line":298,"loc":{"start":{"line":298,"column":16},"end":{"line":298,"column":30}}},"23":{"name":"(anonymous_23)","line":311,"loc":{"start":{"line":311,"column":27},"end":{"line":311,"column":42}}},"24":{"name":"(anonymous_24)","line":327,"loc":{"start":{"line":327,"column":26},"end":{"line":327,"column":37}}},"25":{"name":"(anonymous_25)","line":346,"loc":{"start":{"line":346,"column":28},"end":{"line":346,"column":45}}},"26":{"name":"(anonymous_26)","line":359,"loc":{"start":{"line":359,"column":35},"end":{"line":359,"column":52}}},"27":{"name":"(anonymous_27)","line":374,"loc":{"start":{"line":374,"column":23},"end":{"line":374,"column":38}}},"28":{"name":"(anonymous_28)","line":385,"loc":{"start":{"line":385,"column":31},"end":{"line":385,"column":48}}},"29":{"name":"(anonymous_29)","line":419,"loc":{"start":{"line":419,"column":16},"end":{"line":419,"column":68}}},"30":{"name":"(anonymous_30)","line":428,"loc":{"start":{"line":428,"column":26},"end":{"line":428,"column":39}}},"31":{"name":"(anonymous_31)","line":440,"loc":{"start":{"line":440,"column":7},"end":{"line":440,"column":38}}},"32":{"name":"(anonymous_32)","line":446,"loc":{"start":{"line":446,"column":48},"end":{"line":446,"column":60}}},"33":{"name":"(anonymous_33)","line":450,"loc":{"start":{"line":450,"column":27},"end":{"line":450,"column":49}}},"34":{"name":"(anonymous_34)","line":466,"loc":{"start":{"line":466,"column":23},"end":{"line":466,"column":36}}},"35":{"name":"(anonymous_35)","line":470,"loc":{"start":{"line":470,"column":47},"end":{"line":470,"column":59}}},"36":{"name":"(anonymous_36)","line":496,"loc":{"start":{"line":496,"column":22},"end":{"line":496,"column":35}}},"37":{"name":"(anonymous_37)","line":500,"loc":{"start":{"line":500,"column":14},"end":{"line":500,"column":37}}},"38":{"name":"(anonymous_38)","line":504,"loc":{"start":{"line":504,"column":8},"end":{"line":504,"column":26}}},"39":{"name":"(anonymous_39)","line":514,"loc":{"start":{"line":514,"column":30},"end":{"line":514,"column":41}}},"40":{"name":"(anonymous_40)","line":526,"loc":{"start":{"line":526,"column":27},"end":{"line":526,"column":38}}},"41":{"name":"(anonymous_41)","line":547,"loc":{"start":{"line":547,"column":34},"end":{"line":547,"column":45}}},"42":{"name":"(anonymous_42)","line":551,"loc":{"start":{"line":551,"column":32},"end":{"line":551,"column":43}}},"43":{"name":"(anonymous_43)","line":560,"loc":{"start":{"line":560,"column":30},"end":{"line":560,"column":49}}},"44":{"name":"Conflict","line":579,"loc":{"start":{"line":579,"column":2},"end":{"line":579,"column":55}}},"45":{"name":"(anonymous_45)","line":596,"loc":{"start":{"line":596,"column":30},"end":{"line":596,"column":43}}},"46":{"name":"getSourceModel","line":607,"loc":{"start":{"line":607,"column":4},"end":{"line":607,"column":32}}},"47":{"name":"(anonymous_47)","line":608,"loc":{"start":{"line":608,"column":45},"end":{"line":608,"column":66}}},"48":{"name":"getTargetModel","line":615,"loc":{"start":{"line":615,"column":4},"end":{"line":615,"column":32}}},"49":{"name":"(anonymous_49)","line":616,"loc":{"start":{"line":616,"column":45},"end":{"line":616,"column":66}}},"50":{"name":"done","line":623,"loc":{"start":{"line":623,"column":4},"end":{"line":623,"column":23}}},"51":{"name":"(anonymous_51)","line":638,"loc":{"start":{"line":638,"column":31},"end":{"line":638,"column":44}}},"52":{"name":"getSourceChange","line":647,"loc":{"start":{"line":647,"column":4},"end":{"line":647,"column":33}}},"53":{"name":"(anonymous_53)","line":649,"loc":{"start":{"line":649,"column":51},"end":{"line":649,"column":73}}},"54":{"name":"getTargetChange","line":656,"loc":{"start":{"line":656,"column":4},"end":{"line":656,"column":33}}},"55":{"name":"(anonymous_55)","line":658,"loc":{"start":{"line":658,"column":51},"end":{"line":658,"column":73}}},"56":{"name":"done","line":665,"loc":{"start":{"line":665,"column":4},"end":{"line":665,"column":23}}},"57":{"name":"(anonymous_57)","line":685,"loc":{"start":{"line":685,"column":31},"end":{"line":685,"column":44}}},"58":{"name":"(anonymous_58)","line":689,"loc":{"start":{"line":689,"column":6},"end":{"line":689,"column":34}}},"59":{"name":"(anonymous_59)","line":704,"loc":{"start":{"line":704,"column":42},"end":{"line":704,"column":55}}},"60":{"name":"(anonymous_60)","line":705,"loc":{"start":{"line":705,"column":17},"end":{"line":705,"column":31}}},"61":{"name":"(anonymous_61)","line":717,"loc":{"start":{"line":717,"column":42},"end":{"line":717,"column":55}}},"62":{"name":"(anonymous_62)","line":720,"loc":{"start":{"line":720,"column":20},"end":{"line":720,"column":50}}},"63":{"name":"done","line":731,"loc":{"start":{"line":731,"column":4},"end":{"line":731,"column":23}}},"64":{"name":"(anonymous_64)","line":749,"loc":{"start":{"line":749,"column":35},"end":{"line":749,"column":46}}},"65":{"name":"(anonymous_65)","line":763,"loc":{"start":{"line":763,"column":39},"end":{"line":763,"column":58}}},"66":{"name":"(anonymous_66)","line":769,"loc":{"start":{"line":769,"column":20},"end":{"line":769,"column":50}}},"67":{"name":"(anonymous_67)","line":773,"loc":{"start":{"line":773,"column":16},"end":{"line":773,"column":30}}},"68":{"name":"done","line":779,"loc":{"start":{"line":779,"column":4},"end":{"line":779,"column":23}}},"69":{"name":"(anonymous_69)","line":799,"loc":{"start":{"line":799,"column":28},"end":{"line":799,"column":41}}},"70":{"name":"(anonymous_70)","line":801,"loc":{"start":{"line":801,"column":17},"end":{"line":801,"column":59}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":66}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":45}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":39}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":31}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":51}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":29}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":31}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":48}},"10":{"start":{"line":39,"column":0},"end":{"line":814,"column":2}},"11":{"start":{"line":44,"column":2},"end":{"line":44,"column":27}},"12":{"start":{"line":45,"column":2},"end":{"line":45,"column":27}},"13":{"start":{"line":46,"column":2},"end":{"line":46,"column":27}},"14":{"start":{"line":47,"column":2},"end":{"line":47,"column":29}},"15":{"start":{"line":53,"column":2},"end":{"line":53,"column":29}},"16":{"start":{"line":59,"column":2},"end":{"line":69,"column":4}},"17":{"start":{"line":60,"column":4},"end":{"line":60,"column":36}},"18":{"start":{"line":61,"column":4},"end":{"line":61,"column":22}},"19":{"start":{"line":63,"column":4},"end":{"line":68,"column":6}},"20":{"start":{"line":64,"column":6},"end":{"line":64,"column":52}},"21":{"start":{"line":65,"column":6},"end":{"line":65,"column":33}},"22":{"start":{"line":65,"column":21},"end":{"line":65,"column":33}},"23":{"start":{"line":67,"column":6},"end":{"line":67,"column":61}},"24":{"start":{"line":70,"column":2},"end":{"line":70,"column":17}},"25":{"start":{"line":82,"column":2},"end":{"line":123,"column":4}},"26":{"start":{"line":83,"column":4},"end":{"line":83,"column":22}},"27":{"start":{"line":84,"column":4},"end":{"line":84,"column":20}},"28":{"start":{"line":86,"column":4},"end":{"line":86,"column":57}},"29":{"start":{"line":88,"column":4},"end":{"line":104,"column":7}},"30":{"start":{"line":89,"column":6},"end":{"line":103,"column":8}},"31":{"start":{"line":90,"column":8},"end":{"line":93,"column":11}},"32":{"start":{"line":91,"column":10},"end":{"line":91,"column":36}},"33":{"start":{"line":91,"column":19},"end":{"line":91,"column":36}},"34":{"start":{"line":92,"column":10},"end":{"line":92,"column":31}},"35":{"start":{"line":95,"column":8},"end":{"line":102,"column":9}},"36":{"start":{"line":96,"column":10},"end":{"line":100,"column":11}},"37":{"start":{"line":97,"column":12},"end":{"line":97,"column":38}},"38":{"start":{"line":98,"column":12},"end":{"line":98,"column":29}},"39":{"start":{"line":99,"column":12},"end":{"line":99,"column":29}},"40":{"start":{"line":101,"column":10},"end":{"line":101,"column":15}},"41":{"start":{"line":106,"column":4},"end":{"line":121,"column":7}},"42":{"start":{"line":107,"column":6},"end":{"line":107,"column":36}},"43":{"start":{"line":107,"column":15},"end":{"line":107,"column":36}},"44":{"start":{"line":108,"column":6},"end":{"line":119,"column":7}},"45":{"start":{"line":109,"column":8},"end":{"line":113,"column":22}},"46":{"start":{"line":111,"column":12},"end":{"line":111,"column":58}},"47":{"start":{"line":115,"column":8},"end":{"line":115,"column":73}},"48":{"start":{"line":116,"column":8},"end":{"line":116,"column":29}},"49":{"start":{"line":117,"column":8},"end":{"line":117,"column":39}},"50":{"start":{"line":118,"column":8},"end":{"line":118,"column":29}},"51":{"start":{"line":120,"column":6},"end":{"line":120,"column":17}},"52":{"start":{"line":122,"column":4},"end":{"line":122,"column":28}},"53":{"start":{"line":133,"column":2},"end":{"line":135,"column":4}},"54":{"start":{"line":134,"column":4},"end":{"line":134,"column":53}},"55":{"start":{"line":148,"column":2},"end":{"line":169,"column":4}},"56":{"start":{"line":149,"column":4},"end":{"line":149,"column":78}},"57":{"start":{"line":150,"column":4},"end":{"line":150,"column":57}},"58":{"start":{"line":151,"column":4},"end":{"line":151,"column":49}},"59":{"start":{"line":152,"column":4},"end":{"line":152,"column":22}},"60":{"start":{"line":154,"column":4},"end":{"line":167,"column":7}},"61":{"start":{"line":155,"column":6},"end":{"line":155,"column":36}},"62":{"start":{"line":155,"column":15},"end":{"line":155,"column":36}},"63":{"start":{"line":156,"column":6},"end":{"line":166,"column":7}},"64":{"start":{"line":157,"column":8},"end":{"line":157,"column":31}},"65":{"start":{"line":159,"column":8},"end":{"line":163,"column":11}},"66":{"start":{"line":164,"column":8},"end":{"line":164,"column":36}},"67":{"start":{"line":165,"column":8},"end":{"line":165,"column":44}},"68":{"start":{"line":168,"column":4},"end":{"line":168,"column":28}},"69":{"start":{"line":179,"column":2},"end":{"line":266,"column":4}},"70":{"start":{"line":180,"column":4},"end":{"line":180,"column":22}},"71":{"start":{"line":181,"column":4},"end":{"line":181,"column":30}},"72":{"start":{"line":183,"column":4},"end":{"line":183,"column":35}},"73":{"start":{"line":185,"column":4},"end":{"line":185,"column":45}},"74":{"start":{"line":187,"column":4},"end":{"line":187,"column":38}},"75":{"start":{"line":188,"column":4},"end":{"line":188,"column":33}},"76":{"start":{"line":190,"column":4},"end":{"line":201,"column":7}},"77":{"start":{"line":191,"column":6},"end":{"line":191,"column":30}},"78":{"start":{"line":191,"column":15},"end":{"line":191,"column":30}},"79":{"start":{"line":193,"column":6},"end":{"line":200,"column":7}},"80":{"start":{"line":194,"column":8},"end":{"line":197,"column":11}},"81":{"start":{"line":195,"column":10},"end":{"line":195,"column":51}},"82":{"start":{"line":196,"column":10},"end":{"line":196,"column":35}},"83":{"start":{"line":199,"column":8},"end":{"line":199,"column":34}},"84":{"start":{"line":203,"column":4},"end":{"line":203,"column":22}},"85":{"start":{"line":205,"column":4},"end":{"line":221,"column":5}},"86":{"start":{"line":207,"column":6},"end":{"line":210,"column":7}},"87":{"start":{"line":208,"column":8},"end":{"line":208,"column":71}},"88":{"start":{"line":209,"column":8},"end":{"line":209,"column":32}},"89":{"start":{"line":215,"column":6},"end":{"line":220,"column":8}},"90":{"start":{"line":217,"column":10},"end":{"line":217,"column":34}},"91":{"start":{"line":217,"column":19},"end":{"line":217,"column":34}},"92":{"start":{"line":218,"column":10},"end":{"line":218,"column":37}},"93":{"start":{"line":223,"column":4},"end":{"line":265,"column":5}},"94":{"start":{"line":224,"column":6},"end":{"line":251,"column":7}},"95":{"start":{"line":225,"column":8},"end":{"line":237,"column":9}},"96":{"start":{"line":226,"column":10},"end":{"line":227,"column":48}},"97":{"start":{"line":228,"column":10},"end":{"line":228,"column":34}},"98":{"start":{"line":230,"column":10},"end":{"line":230,"column":27}},"99":{"start":{"line":231,"column":10},"end":{"line":231,"column":68}},"100":{"start":{"line":232,"column":10},"end":{"line":236,"column":11}},"101":{"start":{"line":234,"column":12},"end":{"line":234,"column":37}},"102":{"start":{"line":235,"column":12},"end":{"line":235,"column":41}},"103":{"start":{"line":239,"column":8},"end":{"line":239,"column":26}},"104":{"start":{"line":240,"column":8},"end":{"line":240,"column":66}},"105":{"start":{"line":241,"column":8},"end":{"line":250,"column":9}},"106":{"start":{"line":243,"column":10},"end":{"line":248,"column":11}},"107":{"start":{"line":244,"column":12},"end":{"line":244,"column":37}},"108":{"start":{"line":245,"column":17},"end":{"line":248,"column":11}},"109":{"start":{"line":246,"column":12},"end":{"line":246,"column":61}},"110":{"start":{"line":247,"column":12},"end":{"line":247,"column":41}},"111":{"start":{"line":249,"column":10},"end":{"line":249,"column":39}},"112":{"start":{"line":253,"column":6},"end":{"line":256,"column":7}},"113":{"start":{"line":254,"column":8},"end":{"line":254,"column":50}},"114":{"start":{"line":255,"column":8},"end":{"line":255,"column":39}},"115":{"start":{"line":258,"column":6},"end":{"line":264,"column":7}},"116":{"start":{"line":261,"column":8},"end":{"line":261,"column":26}},"117":{"start":{"line":263,"column":8},"end":{"line":263,"column":24}},"118":{"start":{"line":275,"column":2},"end":{"line":288,"column":4}},"119":{"start":{"line":276,"column":4},"end":{"line":276,"column":45}},"120":{"start":{"line":277,"column":4},"end":{"line":277,"column":36}},"121":{"start":{"line":278,"column":4},"end":{"line":278,"column":31}},"122":{"start":{"line":279,"column":4},"end":{"line":286,"column":7}},"123":{"start":{"line":280,"column":6},"end":{"line":280,"column":30}},"124":{"start":{"line":280,"column":15},"end":{"line":280,"column":30}},"125":{"start":{"line":281,"column":6},"end":{"line":285,"column":7}},"126":{"start":{"line":282,"column":8},"end":{"line":282,"column":47}},"127":{"start":{"line":284,"column":8},"end":{"line":284,"column":23}},"128":{"start":{"line":287,"column":4},"end":{"line":287,"column":22}},"129":{"start":{"line":298,"column":2},"end":{"line":303,"column":4}},"130":{"start":{"line":299,"column":4},"end":{"line":302,"column":21}},"131":{"start":{"line":311,"column":2},"end":{"line":314,"column":4}},"132":{"start":{"line":312,"column":4},"end":{"line":312,"column":74}},"133":{"start":{"line":313,"column":4},"end":{"line":313,"column":44}},"134":{"start":{"line":327,"column":2},"end":{"line":338,"column":4}},"135":{"start":{"line":328,"column":4},"end":{"line":330,"column":5}},"136":{"start":{"line":329,"column":6},"end":{"line":329,"column":27}},"137":{"start":{"line":331,"column":4},"end":{"line":333,"column":5}},"138":{"start":{"line":332,"column":6},"end":{"line":332,"column":27}},"139":{"start":{"line":334,"column":4},"end":{"line":336,"column":5}},"140":{"start":{"line":335,"column":6},"end":{"line":335,"column":27}},"141":{"start":{"line":337,"column":4},"end":{"line":337,"column":26}},"142":{"start":{"line":346,"column":2},"end":{"line":351,"column":4}},"143":{"start":{"line":347,"column":4},"end":{"line":347,"column":30}},"144":{"start":{"line":347,"column":17},"end":{"line":347,"column":30}},"145":{"start":{"line":348,"column":4},"end":{"line":348,"column":35}},"146":{"start":{"line":349,"column":4},"end":{"line":349,"column":37}},"147":{"start":{"line":350,"column":4},"end":{"line":350,"column":31}},"148":{"start":{"line":359,"column":2},"end":{"line":365,"column":4}},"149":{"start":{"line":360,"column":4},"end":{"line":360,"column":30}},"150":{"start":{"line":360,"column":17},"end":{"line":360,"column":30}},"151":{"start":{"line":361,"column":4},"end":{"line":361,"column":42}},"152":{"start":{"line":361,"column":29},"end":{"line":361,"column":42}},"153":{"start":{"line":362,"column":4},"end":{"line":362,"column":55}},"154":{"start":{"line":362,"column":42},"end":{"line":362,"column":55}},"155":{"start":{"line":363,"column":4},"end":{"line":363,"column":45}},"156":{"start":{"line":363,"column":32},"end":{"line":363,"column":45}},"157":{"start":{"line":364,"column":4},"end":{"line":364,"column":16}},"158":{"start":{"line":374,"column":2},"end":{"line":377,"column":4}},"159":{"start":{"line":375,"column":4},"end":{"line":376,"column":33}},"160":{"start":{"line":385,"column":2},"end":{"line":387,"column":4}},"161":{"start":{"line":386,"column":4},"end":{"line":386,"column":36}},"162":{"start":{"line":419,"column":2},"end":{"line":489,"column":4}},"163":{"start":{"line":420,"column":4},"end":{"line":420,"column":57}},"164":{"start":{"line":422,"column":4},"end":{"line":425,"column":5}},"165":{"start":{"line":423,"column":6},"end":{"line":423,"column":50}},"166":{"start":{"line":424,"column":6},"end":{"line":424,"column":30}},"167":{"start":{"line":426,"column":4},"end":{"line":426,"column":31}},"168":{"start":{"line":427,"column":4},"end":{"line":427,"column":22}},"169":{"start":{"line":428,"column":4},"end":{"line":431,"column":7}},"170":{"start":{"line":429,"column":6},"end":{"line":429,"column":32}},"171":{"start":{"line":430,"column":6},"end":{"line":430,"column":53}},"172":{"start":{"line":434,"column":4},"end":{"line":434,"column":31}},"173":{"start":{"line":435,"column":4},"end":{"line":487,"column":7}},"174":{"start":{"line":441,"column":6},"end":{"line":441,"column":36}},"175":{"start":{"line":441,"column":15},"end":{"line":441,"column":36}},"176":{"start":{"line":442,"column":6},"end":{"line":442,"column":22}},"177":{"start":{"line":443,"column":6},"end":{"line":443,"column":25}},"178":{"start":{"line":444,"column":6},"end":{"line":444,"column":29}},"179":{"start":{"line":446,"column":6},"end":{"line":448,"column":9}},"180":{"start":{"line":447,"column":8},"end":{"line":447,"column":37}},"181":{"start":{"line":450,"column":6},"end":{"line":464,"column":9}},"182":{"start":{"line":451,"column":8},"end":{"line":451,"column":46}},"183":{"start":{"line":452,"column":8},"end":{"line":452,"column":48}},"184":{"start":{"line":453,"column":8},"end":{"line":453,"column":66}},"185":{"start":{"line":454,"column":8},"end":{"line":463,"column":9}},"186":{"start":{"line":455,"column":10},"end":{"line":462,"column":11}},"187":{"start":{"line":456,"column":12},"end":{"line":456,"column":50}},"188":{"start":{"line":457,"column":12},"end":{"line":457,"column":48}},"189":{"start":{"line":458,"column":12},"end":{"line":458,"column":40}},"190":{"start":{"line":460,"column":12},"end":{"line":460,"column":47}},"191":{"start":{"line":461,"column":12},"end":{"line":461,"column":38}},"192":{"start":{"line":466,"column":6},"end":{"line":481,"column":9}},"193":{"start":{"line":467,"column":8},"end":{"line":467,"column":53}},"194":{"start":{"line":467,"column":46},"end":{"line":467,"column":53}},"195":{"start":{"line":469,"column":8},"end":{"line":469,"column":38}},"196":{"start":{"line":470,"column":8},"end":{"line":472,"column":14}},"197":{"start":{"line":471,"column":10},"end":{"line":471,"column":34}},"198":{"start":{"line":474,"column":8},"end":{"line":478,"column":9}},"199":{"start":{"line":475,"column":10},"end":{"line":475,"column":33}},"200":{"start":{"line":477,"column":10},"end":{"line":477,"column":24}},"201":{"start":{"line":480,"column":8},"end":{"line":480,"column":23}},"202":{"start":{"line":483,"column":6},"end":{"line":486,"column":9}},"203":{"start":{"line":488,"column":4},"end":{"line":488,"column":28}},"204":{"start":{"line":496,"column":2},"end":{"line":507,"column":4}},"205":{"start":{"line":497,"column":4},"end":{"line":497,"column":25}},"206":{"start":{"line":498,"column":4},"end":{"line":498,"column":22}},"207":{"start":{"line":500,"column":4},"end":{"line":506,"column":7}},"208":{"start":{"line":501,"column":6},"end":{"line":501,"column":30}},"209":{"start":{"line":501,"column":15},"end":{"line":501,"column":30}},"210":{"start":{"line":502,"column":6},"end":{"line":505,"column":12}},"211":{"start":{"line":504,"column":28},"end":{"line":504,"column":44}},"212":{"start":{"line":514,"column":2},"end":{"line":524,"column":4}},"213":{"start":{"line":515,"column":4},"end":{"line":515,"column":42}},"214":{"start":{"line":516,"column":4},"end":{"line":516,"column":48}},"215":{"start":{"line":516,"column":25},"end":{"line":516,"column":48}},"216":{"start":{"line":519,"column":4},"end":{"line":519,"column":81}},"217":{"start":{"line":520,"column":4},"end":{"line":521,"column":42}},"218":{"start":{"line":522,"column":4},"end":{"line":522,"column":46}},"219":{"start":{"line":523,"column":4},"end":{"line":523,"column":27}},"220":{"start":{"line":526,"column":2},"end":{"line":540,"column":4}},"221":{"start":{"line":527,"column":4},"end":{"line":539,"column":5}},"222":{"start":{"line":528,"column":6},"end":{"line":528,"column":55}},"223":{"start":{"line":529,"column":6},"end":{"line":529,"column":32}},"224":{"start":{"line":530,"column":6},"end":{"line":530,"column":32}},"225":{"start":{"line":531,"column":6},"end":{"line":531,"column":30}},"226":{"start":{"line":532,"column":6},"end":{"line":532,"column":29}},"227":{"start":{"line":533,"column":6},"end":{"line":533,"column":31}},"228":{"start":{"line":534,"column":6},"end":{"line":534,"column":33}},"229":{"start":{"line":535,"column":6},"end":{"line":535,"column":45}},"230":{"start":{"line":536,"column":6},"end":{"line":536,"column":43}},"231":{"start":{"line":537,"column":6},"end":{"line":537,"column":39}},"232":{"start":{"line":538,"column":6},"end":{"line":538,"column":35}},"233":{"start":{"line":547,"column":2},"end":{"line":549,"column":4}},"234":{"start":{"line":548,"column":4},"end":{"line":548,"column":48}},"235":{"start":{"line":551,"column":2},"end":{"line":558,"column":4}},"236":{"start":{"line":553,"column":4},"end":{"line":553,"column":36}},"237":{"start":{"line":554,"column":4},"end":{"line":554,"column":26}},"238":{"start":{"line":555,"column":4},"end":{"line":555,"column":24}},"239":{"start":{"line":556,"column":4},"end":{"line":556,"column":16}},"240":{"start":{"line":557,"column":4},"end":{"line":557,"column":21}},"241":{"start":{"line":560,"column":2},"end":{"line":564,"column":4}},"242":{"start":{"line":561,"column":4},"end":{"line":561,"column":53}},"243":{"start":{"line":562,"column":4},"end":{"line":562,"column":31}},"244":{"start":{"line":563,"column":4},"end":{"line":563,"column":33}},"245":{"start":{"line":579,"column":2},"end":{"line":585,"column":3}},"246":{"start":{"line":580,"column":4},"end":{"line":580,"column":35}},"247":{"start":{"line":581,"column":4},"end":{"line":581,"column":35}},"248":{"start":{"line":582,"column":4},"end":{"line":582,"column":53}},"249":{"start":{"line":583,"column":4},"end":{"line":583,"column":53}},"250":{"start":{"line":584,"column":4},"end":{"line":584,"column":27}},"251":{"start":{"line":596,"column":2},"end":{"line":627,"column":4}},"252":{"start":{"line":597,"column":4},"end":{"line":597,"column":24}},"253":{"start":{"line":598,"column":4},"end":{"line":598,"column":39}},"254":{"start":{"line":599,"column":4},"end":{"line":599,"column":39}},"255":{"start":{"line":600,"column":4},"end":{"line":600,"column":23}},"256":{"start":{"line":602,"column":4},"end":{"line":605,"column":13}},"257":{"start":{"line":607,"column":4},"end":{"line":613,"column":5}},"258":{"start":{"line":608,"column":6},"end":{"line":612,"column":9}},"259":{"start":{"line":609,"column":8},"end":{"line":609,"column":32}},"260":{"start":{"line":609,"column":17},"end":{"line":609,"column":32}},"261":{"start":{"line":610,"column":8},"end":{"line":610,"column":23}},"262":{"start":{"line":611,"column":8},"end":{"line":611,"column":13}},"263":{"start":{"line":615,"column":4},"end":{"line":621,"column":5}},"264":{"start":{"line":616,"column":6},"end":{"line":620,"column":9}},"265":{"start":{"line":617,"column":8},"end":{"line":617,"column":32}},"266":{"start":{"line":617,"column":17},"end":{"line":617,"column":32}},"267":{"start":{"line":618,"column":8},"end":{"line":618,"column":23}},"268":{"start":{"line":619,"column":8},"end":{"line":619,"column":13}},"269":{"start":{"line":623,"column":4},"end":{"line":626,"column":5}},"270":{"start":{"line":624,"column":6},"end":{"line":624,"column":30}},"271":{"start":{"line":624,"column":15},"end":{"line":624,"column":30}},"272":{"start":{"line":625,"column":6},"end":{"line":625,"column":31}},"273":{"start":{"line":638,"column":2},"end":{"line":669,"column":4}},"274":{"start":{"line":639,"column":4},"end":{"line":639,"column":24}},"275":{"start":{"line":640,"column":4},"end":{"line":640,"column":35}},"276":{"start":{"line":642,"column":4},"end":{"line":645,"column":13}},"277":{"start":{"line":647,"column":4},"end":{"line":654,"column":5}},"278":{"start":{"line":648,"column":6},"end":{"line":648,"column":45}},"279":{"start":{"line":649,"column":6},"end":{"line":653,"column":9}},"280":{"start":{"line":650,"column":8},"end":{"line":650,"column":32}},"281":{"start":{"line":650,"column":17},"end":{"line":650,"column":32}},"282":{"start":{"line":651,"column":8},"end":{"line":651,"column":30}},"283":{"start":{"line":652,"column":8},"end":{"line":652,"column":13}},"284":{"start":{"line":656,"column":4},"end":{"line":663,"column":5}},"285":{"start":{"line":657,"column":6},"end":{"line":657,"column":45}},"286":{"start":{"line":658,"column":6},"end":{"line":662,"column":9}},"287":{"start":{"line":659,"column":8},"end":{"line":659,"column":32}},"288":{"start":{"line":659,"column":17},"end":{"line":659,"column":32}},"289":{"start":{"line":660,"column":8},"end":{"line":660,"column":30}},"290":{"start":{"line":661,"column":8},"end":{"line":661,"column":13}},"291":{"start":{"line":665,"column":4},"end":{"line":668,"column":5}},"292":{"start":{"line":666,"column":6},"end":{"line":666,"column":30}},"293":{"start":{"line":666,"column":15},"end":{"line":666,"column":30}},"294":{"start":{"line":667,"column":6},"end":{"line":667,"column":43}},"295":{"start":{"line":685,"column":2},"end":{"line":696,"column":4}},"296":{"start":{"line":686,"column":4},"end":{"line":686,"column":24}},"297":{"start":{"line":687,"column":4},"end":{"line":695,"column":9}},"298":{"start":{"line":690,"column":8},"end":{"line":690,"column":32}},"299":{"start":{"line":690,"column":17},"end":{"line":690,"column":32}},"300":{"start":{"line":691,"column":8},"end":{"line":694,"column":14}},"301":{"start":{"line":704,"column":2},"end":{"line":709,"column":4}},"302":{"start":{"line":705,"column":4},"end":{"line":708,"column":7}},"303":{"start":{"line":707,"column":6},"end":{"line":707,"column":14}},"304":{"start":{"line":717,"column":2},"end":{"line":735,"column":4}},"305":{"start":{"line":718,"column":4},"end":{"line":718,"column":24}},"306":{"start":{"line":720,"column":4},"end":{"line":729,"column":7}},"307":{"start":{"line":721,"column":6},"end":{"line":721,"column":32}},"308":{"start":{"line":721,"column":15},"end":{"line":721,"column":32}},"309":{"start":{"line":722,"column":6},"end":{"line":724,"column":7}},"310":{"start":{"line":723,"column":8},"end":{"line":723,"column":71}},"311":{"start":{"line":725,"column":6},"end":{"line":727,"column":27}},"312":{"start":{"line":728,"column":6},"end":{"line":728,"column":22}},"313":{"start":{"line":731,"column":4},"end":{"line":734,"column":5}},"314":{"start":{"line":733,"column":6},"end":{"line":733,"column":14}},"315":{"start":{"line":749,"column":2},"end":{"line":752,"column":4}},"316":{"start":{"line":750,"column":4},"end":{"line":750,"column":32}},"317":{"start":{"line":751,"column":4},"end":{"line":751,"column":70}},"318":{"start":{"line":763,"column":2},"end":{"line":783,"column":4}},"319":{"start":{"line":764,"column":4},"end":{"line":764,"column":24}},"320":{"start":{"line":765,"column":4},"end":{"line":767,"column":5}},"321":{"start":{"line":766,"column":6},"end":{"line":766,"column":69}},"322":{"start":{"line":769,"column":4},"end":{"line":777,"column":7}},"323":{"start":{"line":770,"column":6},"end":{"line":770,"column":32}},"324":{"start":{"line":770,"column":15},"end":{"line":770,"column":32}},"325":{"start":{"line":771,"column":6},"end":{"line":771,"column":60}},"326":{"start":{"line":772,"column":6},"end":{"line":772,"column":31}},"327":{"start":{"line":773,"column":6},"end":{"line":776,"column":9}},"328":{"start":{"line":774,"column":8},"end":{"line":774,"column":34}},"329":{"start":{"line":774,"column":17},"end":{"line":774,"column":34}},"330":{"start":{"line":775,"column":8},"end":{"line":775,"column":31}},"331":{"start":{"line":779,"column":4},"end":{"line":782,"column":5}},"332":{"start":{"line":781,"column":6},"end":{"line":781,"column":14}},"333":{"start":{"line":799,"column":2},"end":{"line":813,"column":4}},"334":{"start":{"line":800,"column":4},"end":{"line":800,"column":24}},"335":{"start":{"line":801,"column":4},"end":{"line":812,"column":7}},"336":{"start":{"line":802,"column":6},"end":{"line":802,"column":30}},"337":{"start":{"line":802,"column":15},"end":{"line":802,"column":30}},"338":{"start":{"line":803,"column":6},"end":{"line":803,"column":49}},"339":{"start":{"line":804,"column":6},"end":{"line":804,"column":49}},"340":{"start":{"line":805,"column":6},"end":{"line":807,"column":7}},"341":{"start":{"line":806,"column":8},"end":{"line":806,"column":39}},"342":{"start":{"line":808,"column":6},"end":{"line":810,"column":7}},"343":{"start":{"line":809,"column":8},"end":{"line":809,"column":39}},"344":{"start":{"line":811,"column":6},"end":{"line":811,"column":38}}},"branchMap":{"1":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":21},"end":{"line":64,"column":35}},{"start":{"line":64,"column":39},"end":{"line":64,"column":51}}]},"2":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":6}},{"start":{"line":65,"column":6},"end":{"line":65,"column":6}}]},"3":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":15},"end":{"line":86,"column":23}},{"start":{"line":86,"column":27},"end":{"line":86,"column":56}}]},"4":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":10},"end":{"line":91,"column":10}},{"start":{"line":91,"column":10},"end":{"line":91,"column":10}}]},"5":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":10},"end":{"line":96,"column":10}},{"start":{"line":96,"column":10},"end":{"line":96,"column":10}}]},"6":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":6},"end":{"line":107,"column":6}},{"start":{"line":107,"column":6},"end":{"line":107,"column":6}}]},"7":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":6}},{"start":{"line":108,"column":6},"end":{"line":108,"column":6}}]},"8":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":15},"end":{"line":150,"column":23}},{"start":{"line":150,"column":27},"end":{"line":150,"column":56}}]},"9":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":6},"end":{"line":155,"column":6}},{"start":{"line":155,"column":6},"end":{"line":155,"column":6}}]},"10":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":6},"end":{"line":156,"column":6}},{"start":{"line":156,"column":6},"end":{"line":156,"column":6}}]},"11":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":9},"end":{"line":185,"column":11}},{"start":{"line":185,"column":15},"end":{"line":185,"column":44}}]},"12":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":6}},{"start":{"line":191,"column":6},"end":{"line":191,"column":6}}]},"13":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":6},"end":{"line":193,"column":6}},{"start":{"line":193,"column":6},"end":{"line":193,"column":6}}]},"14":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":6},"end":{"line":207,"column":6}},{"start":{"line":207,"column":6},"end":{"line":207,"column":6}}]},"15":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":10},"end":{"line":217,"column":10}},{"start":{"line":217,"column":10},"end":{"line":217,"column":10}}]},"16":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":6},"end":{"line":224,"column":6}},{"start":{"line":224,"column":6},"end":{"line":224,"column":6}}]},"17":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":8},"end":{"line":225,"column":8}},{"start":{"line":225,"column":8},"end":{"line":225,"column":8}}]},"18":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":10},"end":{"line":232,"column":10}},{"start":{"line":232,"column":10},"end":{"line":232,"column":10}}]},"19":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":8},"end":{"line":241,"column":8}},{"start":{"line":241,"column":8},"end":{"line":241,"column":8}}]},"20":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":10},"end":{"line":243,"column":10}},{"start":{"line":243,"column":10},"end":{"line":243,"column":10}}]},"21":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":17},"end":{"line":245,"column":17}},{"start":{"line":245,"column":17},"end":{"line":245,"column":17}}]},"22":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":6},"end":{"line":253,"column":6}},{"start":{"line":253,"column":6},"end":{"line":253,"column":6}}]},"23":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":6},"end":{"line":258,"column":6}},{"start":{"line":258,"column":6},"end":{"line":258,"column":6}}]},"24":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":9},"end":{"line":276,"column":11}},{"start":{"line":276,"column":15},"end":{"line":276,"column":44}}]},"25":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":6},"end":{"line":280,"column":6}},{"start":{"line":280,"column":6},"end":{"line":280,"column":6}}]},"26":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":6},"end":{"line":281,"column":6}},{"start":{"line":281,"column":6},"end":{"line":281,"column":6}}]},"27":{"line":300,"type":"binary-expr","locations":[{"start":{"line":300,"column":18},"end":{"line":300,"column":47}},{"start":{"line":300,"column":51},"end":{"line":300,"column":57}}]},"28":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":4},"end":{"line":328,"column":4}},{"start":{"line":328,"column":4},"end":{"line":328,"column":4}}]},"29":{"line":328,"type":"binary-expr","locations":[{"start":{"line":328,"column":8},"end":{"line":328,"column":16}},{"start":{"line":328,"column":20},"end":{"line":328,"column":29}}]},"30":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":4},"end":{"line":331,"column":4}},{"start":{"line":331,"column":4},"end":{"line":331,"column":4}}]},"31":{"line":331,"type":"binary-expr","locations":[{"start":{"line":331,"column":8},"end":{"line":331,"column":16}},{"start":{"line":331,"column":20},"end":{"line":331,"column":30}}]},"32":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":4},"end":{"line":334,"column":4}},{"start":{"line":334,"column":4},"end":{"line":334,"column":4}}]},"33":{"line":334,"type":"binary-expr","locations":[{"start":{"line":334,"column":8},"end":{"line":334,"column":17}},{"start":{"line":334,"column":21},"end":{"line":334,"column":30}}]},"34":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":4},"end":{"line":347,"column":4}},{"start":{"line":347,"column":4},"end":{"line":347,"column":4}}]},"35":{"line":348,"type":"binary-expr","locations":[{"start":{"line":348,"column":18},"end":{"line":348,"column":26}},{"start":{"line":348,"column":30},"end":{"line":348,"column":34}}]},"36":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":18},"end":{"line":349,"column":28}},{"start":{"line":349,"column":32},"end":{"line":349,"column":36}}]},"37":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":4},"end":{"line":360,"column":4}},{"start":{"line":360,"column":4},"end":{"line":360,"column":4}}]},"38":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":4},"end":{"line":361,"column":4}},{"start":{"line":361,"column":4},"end":{"line":361,"column":4}}]},"39":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":4},"end":{"line":362,"column":4}},{"start":{"line":362,"column":4},"end":{"line":362,"column":4}}]},"40":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":4},"end":{"line":363,"column":4}},{"start":{"line":363,"column":4},"end":{"line":363,"column":4}}]},"41":{"line":375,"type":"binary-expr","locations":[{"start":{"line":375,"column":11},"end":{"line":375,"column":37}},{"start":{"line":376,"column":6},"end":{"line":376,"column":32}}]},"42":{"line":420,"type":"binary-expr","locations":[{"start":{"line":420,"column":15},"end":{"line":420,"column":23}},{"start":{"line":420,"column":27},"end":{"line":420,"column":56}}]},"43":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":4},"end":{"line":422,"column":4}},{"start":{"line":422,"column":4},"end":{"line":422,"column":4}}]},"44":{"line":422,"type":"binary-expr","locations":[{"start":{"line":422,"column":8},"end":{"line":422,"column":37}},{"start":{"line":422,"column":41},"end":{"line":422,"column":67}}]},"45":{"line":434,"type":"binary-expr","locations":[{"start":{"line":434,"column":12},"end":{"line":434,"column":25}},{"start":{"line":434,"column":29},"end":{"line":434,"column":30}}]},"46":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":6},"end":{"line":441,"column":6}},{"start":{"line":441,"column":6},"end":{"line":441,"column":6}}]},"47":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":8},"end":{"line":454,"column":8}},{"start":{"line":454,"column":8},"end":{"line":454,"column":8}}]},"48":{"line":454,"type":"binary-expr","locations":[{"start":{"line":454,"column":12},"end":{"line":454,"column":24}},{"start":{"line":454,"column":28},"end":{"line":454,"column":61}}]},"49":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":10},"end":{"line":455,"column":10}},{"start":{"line":455,"column":10},"end":{"line":455,"column":10}}]},"50":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":8},"end":{"line":467,"column":8}},{"start":{"line":467,"column":8},"end":{"line":467,"column":8}}]},"51":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":8},"end":{"line":474,"column":8}},{"start":{"line":474,"column":8},"end":{"line":474,"column":8}}]},"52":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":6},"end":{"line":501,"column":6}},{"start":{"line":501,"column":6},"end":{"line":501,"column":6}}]},"53":{"line":516,"type":"if","locations":[{"start":{"line":516,"column":4},"end":{"line":516,"column":4}},{"start":{"line":516,"column":4},"end":{"line":516,"column":4}}]},"54":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":4},"end":{"line":527,"column":4}},{"start":{"line":527,"column":4},"end":{"line":527,"column":4}}]},"55":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":8},"end":{"line":609,"column":8}},{"start":{"line":609,"column":8},"end":{"line":609,"column":8}}]},"56":{"line":617,"type":"if","locations":[{"start":{"line":617,"column":8},"end":{"line":617,"column":8}},{"start":{"line":617,"column":8},"end":{"line":617,"column":8}}]},"57":{"line":624,"type":"if","locations":[{"start":{"line":624,"column":6},"end":{"line":624,"column":6}},{"start":{"line":624,"column":6},"end":{"line":624,"column":6}}]},"58":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":8},"end":{"line":650,"column":8}},{"start":{"line":650,"column":8},"end":{"line":650,"column":8}}]},"59":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":8},"end":{"line":659,"column":8}},{"start":{"line":659,"column":8},"end":{"line":659,"column":8}}]},"60":{"line":666,"type":"if","locations":[{"start":{"line":666,"column":6},"end":{"line":666,"column":6}},{"start":{"line":666,"column":6},"end":{"line":666,"column":6}}]},"61":{"line":690,"type":"if","locations":[{"start":{"line":690,"column":8},"end":{"line":690,"column":8}},{"start":{"line":690,"column":8},"end":{"line":690,"column":8}}]},"62":{"line":721,"type":"if","locations":[{"start":{"line":721,"column":6},"end":{"line":721,"column":6}},{"start":{"line":721,"column":6},"end":{"line":721,"column":6}}]},"63":{"line":722,"type":"if","locations":[{"start":{"line":722,"column":6},"end":{"line":722,"column":6}},{"start":{"line":722,"column":6},"end":{"line":722,"column":6}}]},"64":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":4},"end":{"line":765,"column":4}},{"start":{"line":765,"column":4},"end":{"line":765,"column":4}}]},"65":{"line":770,"type":"if","locations":[{"start":{"line":770,"column":6},"end":{"line":770,"column":6}},{"start":{"line":770,"column":6},"end":{"line":770,"column":6}}]},"66":{"line":771,"type":"binary-expr","locations":[{"start":{"line":771,"column":17},"end":{"line":771,"column":23}},{"start":{"line":771,"column":27},"end":{"line":771,"column":59}}]},"67":{"line":774,"type":"if","locations":[{"start":{"line":774,"column":8},"end":{"line":774,"column":8}},{"start":{"line":774,"column":8},"end":{"line":774,"column":8}}]},"68":{"line":802,"type":"if","locations":[{"start":{"line":802,"column":6},"end":{"line":802,"column":6}},{"start":{"line":802,"column":6},"end":{"line":802,"column":6}}]},"69":{"line":805,"type":"if","locations":[{"start":{"line":805,"column":6},"end":{"line":805,"column":6}},{"start":{"line":805,"column":6},"end":{"line":805,"column":6}}]},"70":{"line":805,"type":"binary-expr","locations":[{"start":{"line":805,"column":10},"end":{"line":805,"column":44}},{"start":{"line":805,"column":48},"end":{"line":805,"column":82}}]},"71":{"line":808,"type":"if","locations":[{"start":{"line":808,"column":6},"end":{"line":808,"column":6}},{"start":{"line":808,"column":6},"end":{"line":808,"column":6}}]},"72":{"line":808,"type":"binary-expr","locations":[{"start":{"line":808,"column":10},"end":{"line":808,"column":44}},{"start":{"line":808,"column":48},"end":{"line":808,"column":82}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/*!"," * Module Dependencies."," */","","'use strict';","var g = require('../../lib/globalize');","var PersistedModel = require('../../lib/loopback').PersistedModel;","var loopback = require('../../lib/loopback');","var utils = require('../../lib/utils');","var crypto = require('crypto');","var CJSON = {stringify: require('canonical-json')};","var async = require('async');","var assert = require('assert');","var debug = require('debug')('loopback:change');","","/**"," * Change list entry."," *"," * @property {String} id Hash of the modelName and ID."," * @property {String} rev The current model revision."," * @property {String} prev The previous model revision."," * @property {Number} checkpoint The current checkpoint at time of the change."," * @property {String} modelName Model name."," * @property {String} modelId Model ID."," * @property {Object} settings Extends the `Model.settings` object."," * @property {String} settings.hashAlgorithm Algorithm used to create cryptographic hash, used as argument"," * to [crypto.createHash](http://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm).  Default is sha1."," * @property {Boolean} settings.ignoreErrors By default, when changes are rectified, an error will throw an exception."," * However, if this setting is true, then errors will not throw exceptions."," * @class Change"," * @inherits {PersistedModel}"," */","","module.exports = function(Change) {","  /*!","   * Constants","   */","","  Change.UPDATE = 'update';","  Change.CREATE = 'create';","  Change.DELETE = 'delete';","  Change.UNKNOWN = 'unknown';","","  /*!","   * Conflict Class","   */","","  Change.Conflict = Conflict;","","  /*!","   * Setup the extended model.","   */","","  Change.setup = function() {","    PersistedModel.setup.call(this);","    var Change = this;","","    Change.getter.id = function() {","      var hasModel = this.modelName && this.modelId;","      if (!hasModel) return null;","","      return Change.idForModel(this.modelName, this.modelId);","    };","  };","  Change.setup();","","  /**","   * Track the recent change of the given modelIds.","   *","   * @param  {String}   modelName","   * @param  {Array}    modelIds","   * @callback {Function} callback","   * @param {Error} err","   * @param {Array} changes Changes that were tracked","   */","","  Change.rectifyModelChanges = function(modelName, modelIds, callback) {","    var Change = this;","    var errors = [];","","    callback = callback || utils.createPromiseCallback();","","    var tasks = modelIds.map(function(id) {","      return function(cb) {","        Change.findOrCreateChange(modelName, id, function(err, change) {","          if (err) return next(err);","          change.rectify(next);","        });","","        function next(err) {","          if (err) {","            err.modelName = modelName;","            err.modelId = id;","            errors.push(err);","          }","          cb();","        }","      };","    });","","    async.parallel(tasks, function(err) {","      if (err) return callback(err);","      if (errors.length) {","        var desc = errors","          .map(function(e) {","            return '#' + e.modelId + ' - ' + e.toString();","          })","          .join('\\n');","","        var msg = g.f('Cannot rectify %s changes:\\n%s', modelName, desc);","        err = new Error(msg);","        err.details = {errors: errors};","        return callback(err);","      }","      callback();","    });","    return callback.promise;","  };","","  /**","   * Get an identifier for a given model.","   *","   * @param  {String} modelName","   * @param  {String} modelId","   * @return {String}","   */","","  Change.idForModel = function(modelName, modelId) {","    return this.hash([modelName, modelId].join('-'));","  };","","  /**","   * Find or create a change for the given model.","   *","   * @param  {String}   modelName","   * @param  {String}   modelId","   * @callback  {Function} callback","   * @param {Error} err","   * @param {Change} change","   * @end","   */","","  Change.findOrCreateChange = function(modelName, modelId, callback) {","    assert(this.registry.findModel(modelName), modelName + ' does not exist');","    callback = callback || utils.createPromiseCallback();","    var id = this.idForModel(modelName, modelId);","    var Change = this;","","    this.findById(id, function(err, change) {","      if (err) return callback(err);","      if (change) {","        callback(null, change);","      } else {","        var ch = new Change({","          id: id,","          modelName: modelName,","          modelId: modelId,","        });","        ch.debug('creating change');","        Change.updateOrCreate(ch, callback);","      }","    });","    return callback.promise;","  };","","  /**","   * Update (or create) the change with the current revision.","   *","   * @callback {Function} callback","   * @param {Error} err","   * @param {Change} change","   */","","  Change.prototype.rectify = function(cb) {","    var change = this;","    var currentRev = this.rev;","","    change.debug('rectify change');","","    cb = cb || utils.createPromiseCallback();","","    const model = this.getModelCtor();","    const id = this.getModelId();","","    model.findById(id, function(err, inst) {","      if (err) return cb(err);","","      if (inst) {","        inst.fillCustomChangeProperties(change, function() {","          const rev = Change.revisionForInst(inst);","          prepareAndDoRectify(rev);","        });","      } else {","        prepareAndDoRectify(null);","      }","    });","","    return cb.promise;","","    function prepareAndDoRectify(rev) {","      // avoid setting rev and prev to the same value","      if (currentRev === rev) {","        change.debug('rev and prev are equal (not updating anything)');","        return cb(null, change);","      }","","      // FIXME(@bajtos) Allow callers to pass in the checkpoint value","      // (or even better - a memoized async function to get the cp value)","      // That will enable `rectifyAll` to cache the checkpoint value","      change.constructor.getCheckpointModel().current(","        function(err, checkpoint) {","          if (err) return cb(err);","          doRectify(checkpoint, rev);","        }","      );","    }","","    function doRectify(checkpoint, rev) {","      if (rev) {","        if (currentRev === rev) {","          change.debug('ASSERTION FAILED: Change currentRev==rev ' +","            'should have been already handled');","          return cb(null, change);","        } else {","          change.rev = rev;","          change.debug('updated revision (was ' + currentRev + ')');","          if (change.checkpoint !== checkpoint) {","            // previous revision is updated only across checkpoints","            change.prev = currentRev;","            change.debug('updated prev');","          }","        }","      } else {","        change.rev = null;","        change.debug('updated revision (was ' + currentRev + ')');","        if (change.checkpoint !== checkpoint) {","          // previous revision is updated only across checkpoints","          if (currentRev) {","            change.prev = currentRev;","          } else if (!change.prev) {","            change.debug('ERROR - could not determine prev');","            change.prev = Change.UNKNOWN;","          }","          change.debug('updated prev');","        }","      }","","      if (change.checkpoint != checkpoint) {","        debug('update checkpoint to', checkpoint);","        change.checkpoint = checkpoint;","      }","","      if (change.prev === Change.UNKNOWN) {","        // this occurs when a record of a change doesn't exist","        // and its current revision is null (not found)","        change.remove(cb);","      } else {","        change.save(cb);","      }","    }","  };","","  /**","   * Get a change's current revision based on current data.","   * @callback  {Function} callback","   * @param {Error} err","   * @param {String} rev The current revision","   */","","  Change.prototype.currentRevision = function(cb) {","    cb = cb || utils.createPromiseCallback();","    var model = this.getModelCtor();","    var id = this.getModelId();","    model.findById(id, function(err, inst) {","      if (err) return cb(err);","      if (inst) {","        cb(null, Change.revisionForInst(inst));","      } else {","        cb(null, null);","      }","    });","    return cb.promise;","  };","","  /**","   * Create a hash of the given `string` with the `options.hashAlgorithm`.","   * **Default: `sha1`**","   *","   * @param  {String} str The string to be hashed","   * @return {String}     The hashed string","   */","","  Change.hash = function(str) {","    return crypto","      .createHash(Change.settings.hashAlgorithm || 'sha1')","      .update(str)","      .digest('hex');","  };","","  /**","   * Get the revision string for the given object","   * @param  {Object} inst The data to get the revision string for","   * @return {String}      The revision string","   */","","  Change.revisionForInst = function(inst) {","    assert(inst, 'Change.revisionForInst() requires an instance object.');","    return this.hash(CJSON.stringify(inst));","  };","","  /**","   * Get a change's type. Returns one of:","   *","   * - `Change.UPDATE`","   * - `Change.CREATE`","   * - `Change.DELETE`","   * - `Change.UNKNOWN`","   *","   * @return {String} the type of change","   */","","  Change.prototype.type = function() {","    if (this.rev && this.prev) {","      return Change.UPDATE;","    }","    if (this.rev && !this.prev) {","      return Change.CREATE;","    }","    if (!this.rev && this.prev) {","      return Change.DELETE;","    }","    return Change.UNKNOWN;","  };","","  /**","   * Compare two changes.","   * @param  {Change} change","   * @return {Boolean}","   */","","  Change.prototype.equals = function(change) {","    if (!change) return false;","    var thisRev = this.rev || null;","    var thatRev = change.rev || null;","    return thisRev === thatRev;","  };","","  /**","   * Does this change conflict with the given change.","   * @param  {Change} change","   * @return {Boolean}","   */","","  Change.prototype.conflictsWith = function(change) {","    if (!change) return false;","    if (this.equals(change)) return false;","    if (Change.bothDeleted(this, change)) return false;","    if (this.isBasedOn(change)) return false;","    return true;","  };","","  /**","   * Are both changes deletes?","   * @param  {Change} a","   * @param  {Change} b","   * @return {Boolean}","   */","","  Change.bothDeleted = function(a, b) {","    return a.type() === Change.DELETE &&","      b.type() === Change.DELETE;","  };","","  /**","   * Determine if the change is based on the given change.","   * @param  {Change} change","   * @return {Boolean}","   */","","  Change.prototype.isBasedOn = function(change) {","    return this.prev === change.rev;","  };","","  /**","   * Determine the differences for a given model since a given checkpoint.","   *","   * The callback will contain an error or `result`.","   *","   * **result**","   *","   * ```js","   * {"," *   deltas: Array,"," *   conflicts: Array"," * }","   * ```","   *","   * **deltas**","   *","   * An array of changes that differ from `remoteChanges`.","   *","   * **conflicts**","   *","   * An array of changes that conflict with `remoteChanges`.","   *","   * @param  {String}   modelName","   * @param  {Number}   since         Compare changes after this checkpoint","   * @param  {Change[]} remoteChanges A set of changes to compare","   * @callback  {Function} callback","   * @param {Error} err","   * @param {Object} result See above.","   */","","  Change.diff = function(modelName, since, remoteChanges, callback) {","    callback = callback || utils.createPromiseCallback();","","    if (!Array.isArray(remoteChanges) || remoteChanges.length === 0) {","      callback(null, {deltas: [], conflicts: []});","      return callback.promise;","    }","    var remoteChangeIndex = {};","    var modelIds = [];","    remoteChanges.forEach(function(ch) {","      modelIds.push(ch.modelId);","      remoteChangeIndex[ch.modelId] = new Change(ch);","    });","","    // normalize `since`","    since = Number(since) || 0;","    this.find({","      where: {","        modelName: modelName,","        modelId: {inq: modelIds},","      },","    }, function(err, allLocalChanges) {","      if (err) return callback(err);","      var deltas = [];","      var conflicts = [];","      var localModelIds = [];","","      var localChanges = allLocalChanges.filter(function(c) {","        return c.checkpoint >= since;","      });","","      localChanges.forEach(function(localChange) {","        localChange = new Change(localChange);","        localModelIds.push(localChange.modelId);","        var remoteChange = remoteChangeIndex[localChange.modelId];","        if (remoteChange && !localChange.equals(remoteChange)) {","          if (remoteChange.conflictsWith(localChange)) {","            remoteChange.debug('remote conflict');","            localChange.debug('local conflict');","            conflicts.push(localChange);","          } else {","            remoteChange.debug('remote delta');","            deltas.push(remoteChange);","          }","        }","      });","","      modelIds.forEach(function(id) {","        if (localModelIds.indexOf(id) !== -1) return;","","        var d = remoteChangeIndex[id];","        var oldChange = allLocalChanges.filter(function(c) {","          return c.modelId === id;","        })[0];","","        if (oldChange) {","          d.prev = oldChange.rev;","        } else {","          d.prev = null;","        }","","        deltas.push(d);","      });","","      callback(null, {","        deltas: deltas,","        conflicts: conflicts,","      });","    });","    return callback.promise;","  };","","  /**","   * Correct all change list entries.","   * @param {Function} cb","   */","","  Change.rectifyAll = function(cb) {","    debug('rectify all');","    var Change = this;","    // this should be optimized","    this.find(function(err, changes) {","      if (err) return cb(err);","      async.each(","        changes,","        function(c, next) { c.rectify(next); },","        cb);","    });","  };","","  /**","   * Get the checkpoint model.","   * @return {Checkpoint}","   */","","  Change.getCheckpointModel = function() {","    var checkpointModel = this.Checkpoint;","    if (checkpointModel) return checkpointModel;","    // FIXME(bajtos) This code creates multiple different models with the same","    // model name, which is not a valid supported usage of juggler's API.","    this.Checkpoint = checkpointModel = loopback.Checkpoint.extend('checkpoint');","    assert(this.dataSource, 'Cannot getCheckpointModel(): ' + this.modelName +","      ' is not attached to a dataSource');","    checkpointModel.attachTo(this.dataSource);","    return checkpointModel;","  };","","  Change.prototype.debug = function() {","    if (debug.enabled) {","      var args = Array.prototype.slice.call(arguments);","      args[0] = args[0] + ' %s';","      args.push(this.modelName);","      debug.apply(this, args);","      debug('\\tid', this.id);","      debug('\\trev', this.rev);","      debug('\\tprev', this.prev);","      debug('\\tcheckpoint', this.checkpoint);","      debug('\\tmodelName', this.modelName);","      debug('\\tmodelId', this.modelId);","      debug('\\ttype', this.type());","    }","  };","","  /**","   * Get the `Model` class for `change.modelName`.","   * @return {Model}","   */","","  Change.prototype.getModelCtor = function() {","    return this.constructor.settings.trackModel;","  };","","  Change.prototype.getModelId = function() {","    // TODO(ritch) get rid of the need to create an instance","    var Model = this.getModelCtor();","    var id = this.modelId;","    var m = new Model();","    m.setId(id);","    return m.getId();","  };","","  Change.prototype.getModel = function(callback) {","    var Model = this.constructor.settings.trackModel;","    var id = this.getModelId();","    Model.findById(id, callback);","  };","","  /**","   * When two changes conflict a conflict is created.","   *","   * **Note**: call `conflict.fetch()` to get the `target` and `source` models.","   *","   * @param {*} modelId","   * @param {PersistedModel} SourceModel","   * @param {PersistedModel} TargetModel","   * @property {ModelClass} source The source model instance","   * @property {ModelClass} target The target model instance","   * @class Change.Conflict","   */","","  function Conflict(modelId, SourceModel, TargetModel) {","    this.SourceModel = SourceModel;","    this.TargetModel = TargetModel;","    this.SourceChange = SourceModel.getChangeModel();","    this.TargetChange = TargetModel.getChangeModel();","    this.modelId = modelId;","  }","","  /**","   * Fetch the conflicting models.","   *","   * @callback {Function} callback","   * @param {Error} err","   * @param {PersistedModel} source","   * @param {PersistedModel} target","   */","","  Conflict.prototype.models = function(cb) {","    var conflict = this;","    var SourceModel = this.SourceModel;","    var TargetModel = this.TargetModel;","    var source, target;","","    async.parallel([","      getSourceModel,","      getTargetModel,","    ], done);","","    function getSourceModel(cb) {","      SourceModel.findById(conflict.modelId, function(err, model) {","        if (err) return cb(err);","        source = model;","        cb();","      });","    }","","    function getTargetModel(cb) {","      TargetModel.findById(conflict.modelId, function(err, model) {","        if (err) return cb(err);","        target = model;","        cb();","      });","    }","","    function done(err) {","      if (err) return cb(err);","      cb(null, source, target);","    }","  };","","  /**","   * Get the conflicting changes.","   *","   * @callback {Function} callback","   * @param {Error} err","   * @param {Change} sourceChange","   * @param {Change} targetChange","   */","","  Conflict.prototype.changes = function(cb) {","    var conflict = this;","    var sourceChange, targetChange;","","    async.parallel([","      getSourceChange,","      getTargetChange,","    ], done);","","    function getSourceChange(cb) {","      var SourceModel = conflict.SourceModel;","      SourceModel.findLastChange(conflict.modelId, function(err, change) {","        if (err) return cb(err);","        sourceChange = change;","        cb();","      });","    }","","    function getTargetChange(cb) {","      var TargetModel = conflict.TargetModel;","      TargetModel.findLastChange(conflict.modelId, function(err, change) {","        if (err) return cb(err);","        targetChange = change;","        cb();","      });","    }","","    function done(err) {","      if (err) return cb(err);","      cb(null, sourceChange, targetChange);","    }","  };","","  /**","   * Resolve the conflict.","   *","   * Set the source change's previous revision to the current revision of the","   * (conflicting) target change. Since the changes are no longer conflicting","   * and appear as if the source change was based on the target, they will be","   * replicated normally as part of the next replicate() call.","   *","   * This is effectively resolving the conflict using the source version.","   *","   * @callback {Function} callback","   * @param {Error} err","   */","","  Conflict.prototype.resolve = function(cb) {","    var conflict = this;","    conflict.TargetModel.findLastChange(","      this.modelId,","      function(err, targetChange) {","        if (err) return cb(err);","        conflict.SourceModel.updateLastChange(","          conflict.modelId,","          {prev: targetChange.rev},","          cb);","      });","  };","","  /**","   * Resolve the conflict using the instance data in the source model.","   *","   * @callback {Function} callback","   * @param {Error} err","   */","  Conflict.prototype.resolveUsingSource = function(cb) {","    this.resolve(function(err) {","      // don't forward any cb arguments from resolve()","      cb(err);","    });","  };","","  /**","   * Resolve the conflict using the instance data in the target model.","   *","   * @callback {Function} callback","   * @param {Error} err","   */","  Conflict.prototype.resolveUsingTarget = function(cb) {","    var conflict = this;","","    conflict.models(function(err, source, target) {","      if (err) return done(err);","      if (target === null) {","        return conflict.SourceModel.deleteById(conflict.modelId, done);","      }","      var inst = new conflict.SourceModel(","        target.toObject(),","        {persisted: true});","      inst.save(done);","    });","","    function done(err) {","      // don't forward any cb arguments from internal calls","      cb(err);","    }","  };","","  /**","   * Return a new Conflict instance with swapped Source and Target models.","   *","   * This is useful when resolving a conflict in one-way","   * replication, where the source data must not be changed:","   *","   * ```js","   * conflict.swapParties().resolveUsingTarget(cb);","   * ```","   *","   * @returns {Conflict} A new Conflict instance.","   */","  Conflict.prototype.swapParties = function() {","    var Ctor = this.constructor;","    return new Ctor(this.modelId, this.TargetModel, this.SourceModel);","  };","","  /**","   * Resolve the conflict using the supplied instance data.","   *","   * @param {Object} data The set of changes to apply on the model","   * instance. Use `null` value to delete the source instance instead.","   * @callback {Function} callback","   * @param {Error} err","   */","","  Conflict.prototype.resolveManually = function(data, cb) {","    var conflict = this;","    if (!data) {","      return conflict.SourceModel.deleteById(conflict.modelId, done);","    }","","    conflict.models(function(err, source, target) {","      if (err) return done(err);","      var inst = source || new conflict.SourceModel(target);","      inst.setAttributes(data);","      inst.save(function(err) {","        if (err) return done(err);","        conflict.resolve(done);","      });","    });","","    function done(err) {","      // don't forward any cb arguments from internal calls","      cb(err);","    }","  };","","  /**","   * Determine the conflict type.","   *","   * Possible results are","   *","   *  - `Change.UPDATE`: Source and target models were updated.","   *  - `Change.DELETE`: Source and or target model was deleted.","   *  - `Change.UNKNOWN`: the conflict type is uknown or due to an error.","   *","   * @callback {Function} callback","   * @param {Error} err","   * @param {String} type The conflict type.","   */","","  Conflict.prototype.type = function(cb) {","    var conflict = this;","    this.changes(function(err, sourceChange, targetChange) {","      if (err) return cb(err);","      var sourceChangeType = sourceChange.type();","      var targetChangeType = targetChange.type();","      if (sourceChangeType === Change.UPDATE && targetChangeType === Change.UPDATE) {","        return cb(null, Change.UPDATE);","      }","      if (sourceChangeType === Change.DELETE || targetChangeType === Change.DELETE) {","        return cb(null, Change.DELETE);","      }","      return cb(null, Change.UNKNOWN);","    });","  };","};",""],"l":{"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"39":1,"44":1,"45":1,"46":1,"47":1,"53":1,"59":1,"60":1,"61":1,"63":1,"64":8,"65":8,"67":0,"70":1,"82":1,"83":0,"84":0,"86":0,"88":0,"89":0,"90":0,"91":0,"92":0,"95":1,"96":0,"97":0,"98":0,"99":0,"101":0,"106":0,"107":0,"108":0,"109":0,"111":0,"115":0,"116":0,"117":0,"118":0,"120":0,"122":0,"133":1,"134":0,"148":1,"149":0,"150":0,"151":0,"152":0,"154":0,"155":0,"156":0,"157":0,"159":0,"164":0,"165":0,"168":0,"179":1,"180":0,"181":0,"183":0,"185":0,"187":0,"188":0,"190":0,"191":0,"193":0,"194":0,"195":0,"196":0,"199":0,"203":0,"205":1,"207":0,"208":0,"209":0,"215":0,"217":0,"218":0,"223":1,"224":0,"225":0,"226":0,"228":0,"230":0,"231":0,"232":0,"234":0,"235":0,"239":0,"240":0,"241":0,"243":0,"244":0,"245":0,"246":0,"247":0,"249":0,"253":0,"254":0,"255":0,"258":0,"261":0,"263":0,"275":1,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"284":0,"287":0,"298":1,"299":0,"311":1,"312":0,"313":0,"327":1,"328":0,"329":0,"331":0,"332":0,"334":0,"335":0,"337":0,"346":1,"347":0,"348":0,"349":0,"350":0,"359":1,"360":0,"361":0,"362":0,"363":0,"364":0,"374":1,"375":0,"385":1,"386":0,"419":1,"420":0,"422":0,"423":0,"424":0,"426":0,"427":0,"428":0,"429":0,"430":0,"434":0,"435":0,"441":0,"442":0,"443":0,"444":0,"446":0,"447":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"460":0,"461":0,"466":0,"467":0,"469":0,"470":0,"471":0,"474":0,"475":0,"477":0,"480":0,"483":0,"488":0,"496":1,"497":0,"498":0,"500":0,"501":0,"502":0,"504":0,"514":1,"515":0,"516":0,"519":0,"520":0,"522":0,"523":0,"526":1,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"547":1,"548":0,"551":1,"553":0,"554":0,"555":0,"556":0,"557":0,"560":1,"561":0,"562":0,"563":0,"579":1,"580":0,"581":0,"582":0,"583":0,"584":0,"596":1,"597":0,"598":0,"599":0,"600":0,"602":0,"607":1,"608":0,"609":0,"610":0,"611":0,"615":1,"616":0,"617":0,"618":0,"619":0,"623":1,"624":0,"625":0,"638":1,"639":0,"640":0,"642":0,"647":1,"648":0,"649":0,"650":0,"651":0,"652":0,"656":1,"657":0,"658":0,"659":0,"660":0,"661":0,"665":1,"666":0,"667":0,"685":1,"686":0,"687":0,"690":0,"691":0,"704":1,"705":0,"707":0,"717":1,"718":0,"720":0,"721":0,"722":0,"723":0,"725":0,"728":0,"731":1,"733":0,"749":1,"750":0,"751":0,"763":1,"764":0,"765":0,"766":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"779":1,"781":0,"799":1,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"808":0,"809":0,"811":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/checkpoint.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/common/models/checkpoint.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":17},"end":{"line":24,"column":38}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":52},"end":{"line":27,"column":63}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":23},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":29},"end":{"line":39,"column":47}}},"5":{"name":"(anonymous_5)","line":44,"loc":{"start":{"line":44,"column":29},"end":{"line":44,"column":42}}},"6":{"name":"(anonymous_6)","line":56,"loc":{"start":{"line":56,"column":27},"end":{"line":56,"column":40}}},"7":{"name":"(anonymous_7)","line":58,"loc":{"start":{"line":58,"column":29},"end":{"line":58,"column":47}}},"8":{"name":"(anonymous_8)","line":63,"loc":{"start":{"line":63,"column":73},"end":{"line":63,"column":93}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"2":{"start":{"line":24,"column":0},"end":{"line":76,"column":2}},"3":{"start":{"line":26,"column":2},"end":{"line":29,"column":6}},"4":{"start":{"line":28,"column":6},"end":{"line":28,"column":24}},"5":{"start":{"line":37,"column":2},"end":{"line":42,"column":4}},"6":{"start":{"line":38,"column":4},"end":{"line":38,"column":26}},"7":{"start":{"line":39,"column":4},"end":{"line":41,"column":7}},"8":{"start":{"line":40,"column":6},"end":{"line":40,"column":22}},"9":{"start":{"line":44,"column":2},"end":{"line":48,"column":4}},"10":{"start":{"line":45,"column":4},"end":{"line":45,"column":27}},"11":{"start":{"line":46,"column":4},"end":{"line":46,"column":31}},"12":{"start":{"line":47,"column":4},"end":{"line":47,"column":46}},"13":{"start":{"line":56,"column":2},"end":{"line":75,"column":4}},"14":{"start":{"line":57,"column":4},"end":{"line":57,"column":26}},"15":{"start":{"line":58,"column":4},"end":{"line":74,"column":7}},"16":{"start":{"line":59,"column":6},"end":{"line":59,"column":30}},"17":{"start":{"line":59,"column":15},"end":{"line":59,"column":30}},"18":{"start":{"line":60,"column":6},"end":{"line":60,"column":31}},"19":{"start":{"line":61,"column":6},"end":{"line":61,"column":15}},"20":{"start":{"line":63,"column":6},"end":{"line":73,"column":9}},"21":{"start":{"line":64,"column":8},"end":{"line":64,"column":32}},"22":{"start":{"line":64,"column":17},"end":{"line":64,"column":32}},"23":{"start":{"line":72,"column":8},"end":{"line":72,"column":21}}},"branchMap":{"1":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":6}},{"start":{"line":59,"column":6},"end":{"line":59,"column":6}}]},"2":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":8}},{"start":{"line":64,"column":8},"end":{"line":64,"column":8}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/**"," * Module Dependencies."," */","","'use strict';","var assert = require('assert');","","/**"," * Checkpoint list entry."," *"," * @property id {Number} the sequencial identifier of a checkpoint"," * @property time {Number} the time when the checkpoint was created"," * @property sourceId {String}  the source identifier"," *"," * @class Checkpoint"," * @inherits {PersistedModel}"," */","","module.exports = function(Checkpoint) {","  // Workaround for https://github.com/strongloop/loopback/issues/292","  Checkpoint.definition.rawProperties.time.default =","    Checkpoint.definition.properties.time.default = function() {","      return new Date();","    };","","  /**","   * Get the current checkpoint id","   * @callback {Function} callback","   * @param {Error} err","   * @param {Number} checkpoint The current checkpoint seq","   */","  Checkpoint.current = function(cb) {","    var Checkpoint = this;","    Checkpoint._getSingleton(function(err, cp) {","      cb(err, cp.seq);","    });","  };","","  Checkpoint._getSingleton = function(cb) {","    var query = {limit: 1}; // match all instances, return only one","    var initialData = {seq: 1};","    this.findOrCreate(query, initialData, cb);","  };","","  /**","   * Increase the current checkpoint if it already exists otherwise initialize it","   * @callback {Function} callback","   * @param {Error} err","   * @param {Object} checkpoint The current checkpoint","   */","  Checkpoint.bumpLastSeq = function(cb) {","    var Checkpoint = this;","    Checkpoint._getSingleton(function(err, cp) {","      if (err) return cb(err);","      var originalSeq = cp.seq;","      cp.seq++;","      // Update the checkpoint but only if it was not changed under our hands","      Checkpoint.updateAll({id: cp.id, seq: originalSeq}, {seq: cp.seq}, function(err, info) {","        if (err) return cb(err);","        // possible outcomes","        // 1) seq was updated to seq+1 - exactly what we wanted!","        // 2) somebody else already updated seq to seq+1 and our call was a no-op.","        //   That should be ok, checkpoints are time based, so we reuse the one created just now","        //  3) seq was bumped more than once, so we will be using a value that is behind the latest seq.","        //    @bajtos is not entirely sure if this is ok, but since it wasn't handled by the current implementation either,","        //    he thinks we can keep it this way.","        cb(null, cp);","      });","    });","  };","};",""],"l":{"11":1,"24":1,"26":1,"28":0,"37":1,"38":0,"39":0,"40":0,"44":1,"45":0,"46":0,"47":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"72":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/connectors/base-connector.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/connectors/base-connector.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":0,"15":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"Connector","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":28}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":30},"end":{"line":47,"column":50}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":35},"end":{"line":49,"column":46}}},"4":{"name":"(anonymous_4)","line":58,"loc":{"start":{"line":58,"column":55},"end":{"line":58,"column":75}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":27}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":50}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":42}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":27}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":29}},"6":{"start":{"line":21,"column":0},"end":{"line":21,"column":31}},"7":{"start":{"line":30,"column":0},"end":{"line":35,"column":1}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":38}},"9":{"start":{"line":32,"column":2},"end":{"line":32,"column":25}},"10":{"start":{"line":34,"column":2},"end":{"line":34,"column":41}},"11":{"start":{"line":41,"column":0},"end":{"line":41,"column":34}},"12":{"start":{"line":47,"column":0},"end":{"line":52,"column":2}},"13":{"start":{"line":48,"column":2},"end":{"line":48,"column":22}},"14":{"start":{"line":49,"column":2},"end":{"line":51,"column":5}},"15":{"start":{"line":58,"column":0},"end":{"line":60,"column":2}}},"branchMap":{},"code":["// Copyright IBM Corp. 2013,2014. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/**"," * Expose `Connector`."," */","","'use strict';","module.exports = Connector;","","/**"," * Module dependencies."," */","","var EventEmitter = require('events').EventEmitter;","var debug = require('debug')('connector');","var util = require('util');","var inherits = util.inherits;","var assert = require('assert');","","/**"," * Create a new `Connector` with the given `options`."," *"," * @param {Object} options"," * @return {Connector}"," */","","function Connector(options) {","  EventEmitter.apply(this, arguments);","  this.options = options;","","  debug('created with options', options);","}","","/**"," * Inherit from `EventEmitter`."," */","","inherits(Connector, EventEmitter);","","/*!"," * Create an connector instance from a JugglingDB adapter."," */","","Connector._createJDBAdapter = function(jdbModule) {","  var fauxSchema = {};","  jdbModule.initialize(fauxSchema, function() {","    // connected","  });","};","","/*!"," * Add default crud operations from a JugglingDB adapter."," */","","Connector.prototype._addCrudOperationsFromJDBAdapter = function(connector) {","","};",""],"l":{"11":1,"17":1,"18":1,"19":1,"20":1,"21":1,"30":1,"31":0,"32":0,"34":0,"41":1,"47":1,"48":0,"49":0,"58":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/connectors/memory.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/connectors/memory.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"Memory","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":18}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":24}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":44}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":39}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":27}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":29}},"6":{"start":{"line":21,"column":0},"end":{"line":21,"column":31}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":77}},"8":{"start":{"line":31,"column":0},"end":{"line":33,"column":1}},"9":{"start":{"line":39,"column":0},"end":{"line":39,"column":28}},"10":{"start":{"line":45,"column":0},"end":{"line":45,"column":41}}},"branchMap":{},"code":["// Copyright IBM Corp. 2013,2014. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/**"," * Expose `Memory`."," */","","'use strict';","module.exports = Memory;","","/**"," * Module dependencies."," */","","var Connector = require('./base-connector');","var debug = require('debug')('memory');","var util = require('util');","var inherits = util.inherits;","var assert = require('assert');","var JdbMemory = require('loopback-datasource-juggler/lib/connectors/memory');","","/**"," * Create a new `Memory` connector with the given `options`."," *"," * @param {Object} options"," * @return {Memory}"," */","","function Memory() {","  // TODO implement entire memory connector","}","","/**"," * Inherit from `DBConnector`."," */","","inherits(Memory, Connector);","","/**"," * JugglingDB Compatibility"," */","","Memory.initialize = JdbMemory.initialize;",""],"l":{"11":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"31":1,"39":1,"45":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/connectors/mail.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/connectors/mail.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":1,"39":0,"40":1,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"MailConnector","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":33}}},"2":{"name":"(anonymous_2)","line":50,"loc":{"start":{"line":50,"column":27},"end":{"line":50,"column":58}}},"3":{"name":"(anonymous_3)","line":76,"loc":{"start":{"line":76,"column":41},"end":{"line":76,"column":59}}},"4":{"name":"Mailer","line":97,"loc":{"start":{"line":97,"column":0},"end":{"line":97,"column":18}}},"5":{"name":"(anonymous_5)","line":108,"loc":{"start":{"line":108,"column":43},"end":{"line":108,"column":58}}},"6":{"name":"(anonymous_6)","line":118,"loc":{"start":{"line":118,"column":43},"end":{"line":118,"column":54}}},"7":{"name":"(anonymous_7)","line":142,"loc":{"start":{"line":142,"column":14},"end":{"line":142,"column":36}}},"8":{"name":"(anonymous_8)","line":173,"loc":{"start":{"line":173,"column":21},"end":{"line":173,"column":32}}},"9":{"name":"(anonymous_9)","line":183,"loc":{"start":{"line":183,"column":24},"end":{"line":183,"column":37}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":31}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":56}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":38}},"6":{"start":{"line":21,"column":0},"end":{"line":21,"column":31}},"7":{"start":{"line":27,"column":0},"end":{"line":48,"column":1}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":100}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":39}},"10":{"start":{"line":33,"column":2},"end":{"line":36,"column":3}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":38}},"12":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"13":{"start":{"line":39,"column":4},"end":{"line":39,"column":20}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":28}},"15":{"start":{"line":43,"column":2},"end":{"line":43,"column":23}},"16":{"start":{"line":45,"column":2},"end":{"line":47,"column":3}},"17":{"start":{"line":46,"column":4},"end":{"line":46,"column":55}},"18":{"start":{"line":50,"column":0},"end":{"line":53,"column":2}},"19":{"start":{"line":51,"column":2},"end":{"line":51,"column":64}},"20":{"start":{"line":52,"column":2},"end":{"line":52,"column":13}},"21":{"start":{"line":55,"column":0},"end":{"line":55,"column":50}},"22":{"start":{"line":76,"column":0},"end":{"line":95,"column":2}},"23":{"start":{"line":77,"column":2},"end":{"line":77,"column":23}},"24":{"start":{"line":78,"column":2},"end":{"line":78,"column":52}},"25":{"start":{"line":79,"column":2},"end":{"line":79,"column":62}},"26":{"start":{"line":81,"column":2},"end":{"line":81,"column":16}},"27":{"start":{"line":82,"column":2},"end":{"line":82,"column":61}},"28":{"start":{"line":83,"column":2},"end":{"line":91,"column":3}},"29":{"start":{"line":84,"column":4},"end":{"line":84,"column":41}},"30":{"start":{"line":85,"column":9},"end":{"line":91,"column":3}},"31":{"start":{"line":86,"column":4},"end":{"line":86,"column":48}},"32":{"start":{"line":88,"column":4},"end":{"line":88,"column":75}},"33":{"start":{"line":89,"column":4},"end":{"line":89,"column":55}},"34":{"start":{"line":90,"column":4},"end":{"line":90,"column":65}},"35":{"start":{"line":93,"column":2},"end":{"line":93,"column":71}},"36":{"start":{"line":94,"column":2},"end":{"line":94,"column":39}},"37":{"start":{"line":97,"column":0},"end":{"line":99,"column":1}},"38":{"start":{"line":108,"column":0},"end":{"line":110,"column":2}},"39":{"start":{"line":109,"column":2},"end":{"line":109,"column":36}},"40":{"start":{"line":118,"column":0},"end":{"line":120,"column":2}},"41":{"start":{"line":119,"column":2},"end":{"line":119,"column":50}},"42":{"start":{"line":142,"column":0},"end":{"line":177,"column":2}},"43":{"start":{"line":143,"column":2},"end":{"line":143,"column":35}},"44":{"start":{"line":144,"column":2},"end":{"line":144,"column":51}},"45":{"start":{"line":145,"column":2},"end":{"line":145,"column":39}},"46":{"start":{"line":146,"column":2},"end":{"line":146,"column":61}},"47":{"start":{"line":148,"column":2},"end":{"line":148,"column":64}},"48":{"start":{"line":150,"column":2},"end":{"line":152,"column":3}},"49":{"start":{"line":151,"column":4},"end":{"line":151,"column":45}},"50":{"start":{"line":154,"column":2},"end":{"line":164,"column":3}},"51":{"start":{"line":155,"column":4},"end":{"line":155,"column":27}},"52":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"53":{"start":{"line":157,"column":6},"end":{"line":157,"column":61}},"54":{"start":{"line":159,"column":4},"end":{"line":159,"column":34}},"55":{"start":{"line":160,"column":4},"end":{"line":160,"column":38}},"56":{"start":{"line":161,"column":4},"end":{"line":161,"column":44}},"57":{"start":{"line":162,"column":4},"end":{"line":162,"column":38}},"58":{"start":{"line":163,"column":4},"end":{"line":163,"column":38}},"59":{"start":{"line":166,"column":2},"end":{"line":176,"column":3}},"60":{"start":{"line":167,"column":4},"end":{"line":168,"column":83}},"61":{"start":{"line":169,"column":4},"end":{"line":169,"column":36}},"62":{"start":{"line":171,"column":4},"end":{"line":172,"column":51}},"63":{"start":{"line":173,"column":4},"end":{"line":175,"column":7}},"64":{"start":{"line":174,"column":6},"end":{"line":174,"column":24}},"65":{"start":{"line":183,"column":0},"end":{"line":185,"column":2}},"66":{"start":{"line":184,"column":2},"end":{"line":184,"column":34}},"67":{"start":{"line":191,"column":0},"end":{"line":194,"column":33}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"2":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":17}},{"start":{"line":33,"column":21},"end":{"line":33,"column":39}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"5":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":25},"end":{"line":78,"column":45}},{"start":{"line":78,"column":49},"end":{"line":78,"column":51}}]},"6":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":30},"end":{"line":79,"column":55}},{"start":{"line":79,"column":59},"end":{"line":79,"column":61}}]},"7":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":23},"end":{"line":82,"column":35}},{"start":{"line":82,"column":39},"end":{"line":82,"column":45}}]},"8":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"9":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":9},"end":{"line":85,"column":9}},{"start":{"line":85,"column":9},"end":{"line":85,"column":9}}]},"10":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":28},"end":{"line":93,"column":41}},{"start":{"line":93,"column":45},"end":{"line":93,"column":57}}]},"11":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":9},"end":{"line":119,"column":27}},{"start":{"line":119,"column":31},"end":{"line":119,"column":49}}]},"12":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":17},"end":{"line":144,"column":27}},{"start":{"line":144,"column":31},"end":{"line":144,"column":50}}]},"13":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":2},"end":{"line":150,"column":2}},{"start":{"line":150,"column":2},"end":{"line":150,"column":2}}]},"14":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":2},"end":{"line":154,"column":2}},{"start":{"line":154,"column":2},"end":{"line":154,"column":2}}]},"15":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":6},"end":{"line":154,"column":19}},{"start":{"line":154,"column":23},"end":{"line":154,"column":31}},{"start":{"line":154,"column":35},"end":{"line":154,"column":49}}]},"16":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":156,"column":4}},{"start":{"line":156,"column":4},"end":{"line":156,"column":4}}]},"17":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]}},"code":["// Copyright IBM Corp. 2013,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/**"," * Dependencies."," */","","'use strict';","var g = require('../globalize');","var mailer = require('nodemailer');","var assert = require('assert');","var debug = require('debug')('loopback:connector:mail');","var loopback = require('../loopback');","","/**"," * Export the MailConnector class."," */","","module.exports = MailConnector;","","/**"," * Create an instance of the connector with the given `settings`."," */","","function MailConnector(settings) {","  assert(typeof settings === 'object', 'cannot initialize MailConnector without a settings object');","","  var transports = settings.transports;","","  // if transports is not in settings object AND settings.transport exists","  if (!transports && settings.transport) {","    // then wrap single transport in an array and assign to transports","    transports = [settings.transport];","  }","","  if (!transports) {","    transports = [];","  }","","  this.transportsIndex = {};","  this.transports = [];","","  if (loopback.isServer) {","    transports.forEach(this.setupTransport.bind(this));","  }","}","","MailConnector.initialize = function(dataSource, callback) {","  dataSource.connector = new MailConnector(dataSource.settings);","  callback();","};","","MailConnector.prototype.DataAccessObject = Mailer;","","/**"," * Add a transport to the available transports. See https://github.com/andris9/Nodemailer#setting-up-a-transport-method."," *"," * Example:"," *"," *   Email.setupTransport({"," *       type: \"SMTP\","," *       host: \"smtp.gmail.com\", // hostname"," *       secureConnection: true, // use SSL"," *       port: 465, // port for secure SMTP"," *       alias: \"gmail\", // optional alias for use with 'transport' option when sending"," *       auth: {"," *           user: \"gmail.user@gmail.com\","," *           pass: \"userpass\""," *       }"," *   });"," *"," */","","MailConnector.prototype.setupTransport = function(setting) {","  var connector = this;","  connector.transports = connector.transports || [];","  connector.transportsIndex = connector.transportsIndex || {};","","  var transport;","  var transportType = (setting.type || 'STUB').toLowerCase();","  if (transportType === 'direct') {","    transport = mailer.createTransport();","  } else if (transportType === 'smtp') {","    transport = mailer.createTransport(setting);","  } else {","    var transportModuleName = 'nodemailer-' + transportType + '-transport';","    var transportModule = require(transportModuleName);","    transport = mailer.createTransport(transportModule(setting));","  }","","  connector.transportsIndex[setting.alias || setting.type] = transport;","  connector.transports.push(transport);","};","","function Mailer() {","","}","","/**"," * Get a transport by name."," *"," * @param {String} name"," * @return {Transport} transport"," */","","MailConnector.prototype.transportForName = function(name) {","  return this.transportsIndex[name];","};","","/**"," * Get the default transport."," *"," * @return {Transport} transport"," */","","MailConnector.prototype.defaultTransport = function() {","  return this.transports[0] || this.stubTransport;","};","","/**"," * Send an email with the given `options`."," *"," * Example Options:"," *"," * {"," *   from: \"Fred Foo ✔ <foo@blurdybloop.com>\", // sender address"," *   to: \"bar@blurdybloop.com, baz@blurdybloop.com\", // list of receivers"," *   subject: \"Hello ✔\", // Subject line"," *   text: \"Hello world ✔\", // plaintext body"," *   html: \"<b>Hello world ✔</b>\", // html body"," *   transport: \"gmail\", // See 'alias' option above in setupTransport"," * }"," *"," * See https://github.com/andris9/Nodemailer for other supported options."," *"," * @param {Object} options"," * @param {Function} callback Called after the e-mail is sent or the sending failed"," */","","Mailer.send = function(options, fn) {","  var dataSource = this.dataSource;","  var settings = dataSource && dataSource.settings;","  var connector = dataSource.connector;","  assert(connector, 'Cannot send mail without a connector!');","","  var transport = connector.transportForName(options.transport);","","  if (!transport) {","    transport = connector.defaultTransport();","  }","","  if (debug.enabled || settings && settings.debug) {","    g.log('Sending Mail:');","    if (options.transport) {","      console.log(g.f('\\t TRANSPORT:%s', options.transport));","    }","    g.log('\\t TO:%s', options.to);","    g.log('\\t FROM:%s', options.from);","    g.log('\\t SUBJECT:%s', options.subject);","    g.log('\\t TEXT:%s', options.text);","    g.log('\\t HTML:%s', options.html);","  }","","  if (transport) {","    assert(transport.sendMail,","      'You must supply an Email.settings.transports containing a valid transport');","    transport.sendMail(options, fn);","  } else {","    g.warn('Warning: No email transport specified for sending email.' +","      ' Setup a transport to send mail messages.');","    process.nextTick(function() {","      fn(null, options);","    });","  }","};","","/**"," * Send an email instance using `modelInstance.send()`."," */","","Mailer.prototype.send = function(fn) {","  this.constructor.send(this, fn);","};","","/**"," * Access the node mailer object."," */","","MailConnector.mailer =","MailConnector.prototype.mailer =","Mailer.mailer =","Mailer.prototype.mailer = mailer;",""],"l":{"11":1,"12":1,"13":1,"14":1,"15":1,"21":1,"27":1,"28":0,"30":0,"33":0,"35":0,"38":0,"39":0,"42":0,"43":0,"45":0,"46":0,"50":1,"51":0,"52":0,"55":1,"76":1,"77":0,"78":0,"79":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"88":0,"89":0,"90":0,"93":0,"94":0,"97":1,"108":1,"109":0,"118":1,"119":0,"142":1,"143":0,"144":0,"145":0,"146":0,"148":0,"150":0,"151":0,"154":0,"155":0,"156":0,"157":0,"159":0,"160":0,"161":0,"162":0,"163":0,"166":0,"167":0,"169":0,"171":0,"173":0,"174":0,"183":1,"184":0,"191":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector-remote/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector-remote/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":51}}},"branchMap":{},"code":["// Copyright IBM Corp. 2014. All Rights Reserved.","// Node module: loopback-connector-remote","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","module.exports = require('./lib/remote-connector');"],"l":{"6":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector-remote/lib/remote-connector.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector-remote/lib/remote-connector.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"RemoteConnector","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":35}}},"2":{"name":"(anonymous_2)","line":49,"loc":{"start":{"line":49,"column":36},"end":{"line":49,"column":47}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":36},"end":{"line":54,"column":47}}},"4":{"name":"(anonymous_4)","line":58,"loc":{"start":{"line":58,"column":29},"end":{"line":58,"column":60}}},"5":{"name":"(anonymous_5)","line":65,"loc":{"start":{"line":65,"column":35},"end":{"line":65,"column":56}}},"6":{"name":"(anonymous_6)","line":80,"loc":{"start":{"line":80,"column":36},"end":{"line":80,"column":52}}},"7":{"name":"(anonymous_7)","line":83,"loc":{"start":{"line":83,"column":38},"end":{"line":83,"column":61}}},"8":{"name":"(anonymous_8)","line":90,"loc":{"start":{"line":90,"column":44},"end":{"line":90,"column":59}}},"9":{"name":"createProxyMethod","line":95,"loc":{"start":{"line":95,"column":0},"end":{"line":95,"column":57}}},"10":{"name":"remoteMethodProxy","line":99,"loc":{"start":{"line":99,"column":2},"end":{"line":99,"column":31}}},"11":{"name":"(anonymous_11)","line":120,"loc":{"start":{"line":120,"column":31},"end":{"line":120,"column":47}}},"12":{"name":"noop","line":125,"loc":{"start":{"line":125,"column":0},"end":{"line":125,"column":16}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":31}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":42}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":61}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":61}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":43}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":72}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":33}},"8":{"start":{"line":29,"column":0},"end":{"line":52,"column":1}},"9":{"start":{"line":30,"column":2},"end":{"line":32,"column":65}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":32}},"11":{"start":{"line":34,"column":2},"end":{"line":34,"column":44}},"12":{"start":{"line":35,"column":2},"end":{"line":35,"column":46}},"13":{"start":{"line":36,"column":2},"end":{"line":36,"column":34}},"14":{"start":{"line":37,"column":2},"end":{"line":37,"column":43}},"15":{"start":{"line":38,"column":2},"end":{"line":38,"column":36}},"16":{"start":{"line":39,"column":2},"end":{"line":39,"column":35}},"17":{"start":{"line":40,"column":2},"end":{"line":40,"column":33}},"18":{"start":{"line":42,"column":2},"end":{"line":46,"column":3}},"19":{"start":{"line":43,"column":4},"end":{"line":43,"column":28}},"20":{"start":{"line":45,"column":4},"end":{"line":45,"column":79}},"21":{"start":{"line":49,"column":2},"end":{"line":50,"column":4}},"22":{"start":{"line":54,"column":0},"end":{"line":56,"column":2}},"23":{"start":{"line":55,"column":2},"end":{"line":55,"column":47}},"24":{"start":{"line":58,"column":0},"end":{"line":63,"column":2}},"25":{"start":{"line":59,"column":2},"end":{"line":60,"column":45}},"26":{"start":{"line":61,"column":2},"end":{"line":61,"column":22}},"27":{"start":{"line":62,"column":2},"end":{"line":62,"column":29}},"28":{"start":{"line":65,"column":0},"end":{"line":78,"column":2}},"29":{"start":{"line":66,"column":2},"end":{"line":66,"column":31}},"30":{"start":{"line":67,"column":2},"end":{"line":67,"column":29}},"31":{"start":{"line":69,"column":2},"end":{"line":72,"column":60}},"32":{"start":{"line":74,"column":2},"end":{"line":74,"column":36}},"33":{"start":{"line":75,"column":2},"end":{"line":75,"column":37}},"34":{"start":{"line":76,"column":2},"end":{"line":76,"column":38}},"35":{"start":{"line":77,"column":2},"end":{"line":77,"column":22}},"36":{"start":{"line":80,"column":0},"end":{"line":93,"column":2}},"37":{"start":{"line":81,"column":2},"end":{"line":81,"column":29}},"38":{"start":{"line":83,"column":2},"end":{"line":87,"column":5}},"39":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"40":{"start":{"line":85,"column":6},"end":{"line":85,"column":54}},"41":{"start":{"line":90,"column":2},"end":{"line":92,"column":5}},"42":{"start":{"line":91,"column":4},"end":{"line":91,"column":27}},"43":{"start":{"line":95,"column":0},"end":{"line":123,"column":1}},"44":{"start":{"line":96,"column":2},"end":{"line":96,"column":62}},"45":{"start":{"line":97,"column":2},"end":{"line":97,"column":42}},"46":{"start":{"line":99,"column":2},"end":{"line":117,"column":3}},"47":{"start":{"line":100,"column":4},"end":{"line":100,"column":53}},"48":{"start":{"line":101,"column":4},"end":{"line":101,"column":68}},"49":{"start":{"line":102,"column":4},"end":{"line":102,"column":17}},"50":{"start":{"line":103,"column":4},"end":{"line":107,"column":5}},"51":{"start":{"line":104,"column":6},"end":{"line":104,"column":28}},"52":{"start":{"line":106,"column":6},"end":{"line":106,"column":47}},"53":{"start":{"line":109,"column":4},"end":{"line":114,"column":5}},"54":{"start":{"line":110,"column":6},"end":{"line":110,"column":62}},"55":{"start":{"line":112,"column":6},"end":{"line":112,"column":31}},"56":{"start":{"line":113,"column":6},"end":{"line":113,"column":72}},"57":{"start":{"line":116,"column":4},"end":{"line":116,"column":28}},"58":{"start":{"line":119,"column":2},"end":{"line":119,"column":47}},"59":{"start":{"line":120,"column":2},"end":{"line":122,"column":5}},"60":{"start":{"line":121,"column":4},"end":{"line":121,"column":37}},"61":{"start":{"line":125,"column":0},"end":{"line":126,"column":1}}},"branchMap":{"1":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":17},"end":{"line":34,"column":33}},{"start":{"line":34,"column":37},"end":{"line":34,"column":43}}]},"2":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":18},"end":{"line":35,"column":35}},{"start":{"line":35,"column":39},"end":{"line":35,"column":45}}]},"3":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":14},"end":{"line":36,"column":27}},{"start":{"line":36,"column":31},"end":{"line":36,"column":33}}]},"4":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":14},"end":{"line":37,"column":27}},{"start":{"line":37,"column":31},"end":{"line":37,"column":42}}]},"5":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":27}},{"start":{"line":38,"column":31},"end":{"line":38,"column":35}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"7":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"8":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":38}},{"start":{"line":84,"column":42},"end":{"line":84,"column":76}}]},"9":{"line":96,"type":"cond-expr","locations":[{"start":{"line":96,"column":38},"end":{"line":96,"column":43}},{"start":{"line":96,"column":46},"end":{"line":96,"column":61}}]},"10":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"11":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback-connector-remote","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","/**"," * Dependencies."," */","","var assert = require('assert');","var remoting = require('strong-remoting');","var utils = require('loopback-datasource-juggler/lib/utils');","var jutil = require('loopback-datasource-juggler/lib/jutil');","var RelationMixin = require('./relations');","var InclusionMixin = require('loopback-datasource-juggler/lib/include');","","/**"," * Export the RemoteConnector class."," */","","module.exports = RemoteConnector;","","/**"," * Create an instance of the connector with the given `settings`."," */","","function RemoteConnector(settings) {","  assert(typeof settings ===","    'object',","    'cannot initiaze RemoteConnector without a settings object');","  this.client = settings.client;","  this.adapter = settings.adapter || 'rest';","  this.protocol = settings.protocol || 'http';","  this.root = settings.root || '';","  this.host = settings.host || 'localhost';","  this.port = settings.port || 3000;","  this.remotes = remoting.create();","  this.name = 'remote-connector';","","  if (settings.url) {","    this.url = settings.url;","  } else {","    this.url = this.protocol + '://' + this.host + ':' + this.port + this.root;","  }","","  // handle mixins in the define() method","  var DAO = this.DataAccessObject = function() {","  };","","}","","RemoteConnector.prototype.connect = function() {","  this.remotes.connect(this.url, this.adapter);","};","","RemoteConnector.initialize = function(dataSource, callback) {","  var connector = dataSource.connector =","    new RemoteConnector(dataSource.settings);","  connector.connect();","  process.nextTick(callback);","};","","RemoteConnector.prototype.define = function(definition) {","  var Model = definition.model;","  var remotes = this.remotes;","","  assert(Model.sharedClass,","      'cannot attach ' +","      Model.modelName +","      ' to a remote connector without a Model.sharedClass');","","  jutil.mixin(Model, RelationMixin);","  jutil.mixin(Model, InclusionMixin);","  remotes.addClass(Model.sharedClass);","  this.resolve(Model);","};","","RemoteConnector.prototype.resolve = function(Model) {","  var remotes = this.remotes;","","  Model.sharedClass.methods().forEach(function(remoteMethod) {","    if (remoteMethod.name !== 'Change' && remoteMethod.name !== 'Checkpoint') {","      createProxyMethod(Model, remotes, remoteMethod);","    }","  });","","  // setup a remoting type converter for this model","  remotes.defineObjectType(Model.modelName, function(data) {","    return new Model(data);","  });","};","","function createProxyMethod(Model, remotes, remoteMethod) {","  var scope = remoteMethod.isStatic ? Model : Model.prototype;","  var original = scope[remoteMethod.name];","","  function remoteMethodProxy() {","    var args = Array.prototype.slice.call(arguments);","    var lastArgIsFunc = typeof args[args.length - 1] === 'function';","    var callback;","    if (lastArgIsFunc) {","      callback = args.pop();","    } else {","      callback = utils.createPromiseCallback();","    }","","    if (remoteMethod.isStatic) {","      remotes.invoke(remoteMethod.stringName, args, callback);","    } else {","      var ctorArgs = [this.id];","      remotes.invoke(remoteMethod.stringName, ctorArgs, args, callback);","    }","","    return callback.promise;","  }","","  scope[remoteMethod.name] = remoteMethodProxy;","  remoteMethod.aliases.forEach(function(alias) {","    scope[alias] = remoteMethodProxy;","  });","}","","function noop() {","}",""],"l":{"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"23":1,"29":1,"30":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"42":0,"43":0,"45":0,"49":0,"54":1,"55":0,"58":1,"59":0,"61":0,"62":0,"65":1,"66":0,"67":0,"69":0,"74":0,"75":0,"76":0,"77":0,"80":1,"81":0,"83":0,"84":0,"85":0,"90":0,"91":0,"95":1,"96":0,"97":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"106":0,"109":0,"110":0,"112":0,"113":0,"116":0,"119":0,"120":0,"121":0,"125":1}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector-remote/lib/relations.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback-connector-remote/lib/relations.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"RelationMixin","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":25}}},"2":{"name":"hasMany","line":77,"loc":{"start":{"line":77,"column":24},"end":{"line":77,"column":58}}},"3":{"name":"(anonymous_3)","line":141,"loc":{"start":{"line":141,"column":26},"end":{"line":141,"column":52}}},"4":{"name":"hasAndBelongsToMany","line":181,"loc":{"start":{"line":181,"column":2},"end":{"line":181,"column":48}}},"5":{"name":"hasOne","line":187,"loc":{"start":{"line":187,"column":23},"end":{"line":187,"column":56}}},"6":{"name":"referencesMany","line":193,"loc":{"start":{"line":193,"column":31},"end":{"line":193,"column":72}}},"7":{"name":"embedsOne","line":199,"loc":{"start":{"line":199,"column":26},"end":{"line":199,"column":62}}},"8":{"name":"embedsMany","line":205,"loc":{"start":{"line":205,"column":27},"end":{"line":205,"column":64}}},"9":{"name":"defineRelationProperty","line":211,"loc":{"start":{"line":211,"column":0},"end":{"line":211,"column":49}}},"10":{"name":"(anonymous_10)","line":213,"loc":{"start":{"line":213,"column":9},"end":{"line":213,"column":20}}},"11":{"name":"(anonymous_11)","line":215,"loc":{"start":{"line":215,"column":18},"end":{"line":215,"column":29}}},"12":{"name":"(anonymous_12)","line":218,"loc":{"start":{"line":218,"column":20},"end":{"line":218,"column":31}}},"13":{"name":"(anonymous_13)","line":221,"loc":{"start":{"line":221,"column":21},"end":{"line":221,"column":32}}},"14":{"name":"(anonymous_14)","line":224,"loc":{"start":{"line":224,"column":45},"end":{"line":224,"column":56}}},"15":{"name":"(anonymous_15)","line":227,"loc":{"start":{"line":227,"column":21},"end":{"line":227,"column":32}}},"16":{"name":"(anonymous_16)","line":230,"loc":{"start":{"line":230,"column":23},"end":{"line":230,"column":34}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":78}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":53}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}},"4":{"start":{"line":21,"column":0},"end":{"line":22,"column":1}},"5":{"start":{"line":77,"column":0},"end":{"line":81,"column":2}},"6":{"start":{"line":78,"column":2},"end":{"line":78,"column":62}},"7":{"start":{"line":79,"column":2},"end":{"line":79,"column":40}},"8":{"start":{"line":80,"column":2},"end":{"line":80,"column":36}},"9":{"start":{"line":141,"column":0},"end":{"line":145,"column":2}},"10":{"start":{"line":142,"column":2},"end":{"line":142,"column":64}},"11":{"start":{"line":143,"column":2},"end":{"line":143,"column":40}},"12":{"start":{"line":144,"column":2},"end":{"line":144,"column":36}},"13":{"start":{"line":180,"column":0},"end":{"line":185,"column":4}},"14":{"start":{"line":182,"column":4},"end":{"line":182,"column":76}},"15":{"start":{"line":183,"column":4},"end":{"line":183,"column":42}},"16":{"start":{"line":184,"column":4},"end":{"line":184,"column":38}},"17":{"start":{"line":187,"column":0},"end":{"line":191,"column":2}},"18":{"start":{"line":188,"column":2},"end":{"line":188,"column":61}},"19":{"start":{"line":189,"column":2},"end":{"line":189,"column":40}},"20":{"start":{"line":190,"column":2},"end":{"line":190,"column":36}},"21":{"start":{"line":193,"column":0},"end":{"line":197,"column":2}},"22":{"start":{"line":194,"column":2},"end":{"line":194,"column":69}},"23":{"start":{"line":195,"column":2},"end":{"line":195,"column":40}},"24":{"start":{"line":196,"column":2},"end":{"line":196,"column":36}},"25":{"start":{"line":199,"column":0},"end":{"line":203,"column":2}},"26":{"start":{"line":200,"column":2},"end":{"line":200,"column":64}},"27":{"start":{"line":201,"column":2},"end":{"line":201,"column":40}},"28":{"start":{"line":202,"column":2},"end":{"line":202,"column":36}},"29":{"start":{"line":205,"column":0},"end":{"line":209,"column":2}},"30":{"start":{"line":206,"column":2},"end":{"line":206,"column":65}},"31":{"start":{"line":207,"column":2},"end":{"line":207,"column":40}},"32":{"start":{"line":208,"column":2},"end":{"line":208,"column":36}},"33":{"start":{"line":211,"column":0},"end":{"line":236,"column":1}},"34":{"start":{"line":212,"column":2},"end":{"line":235,"column":5}},"35":{"start":{"line":214,"column":6},"end":{"line":214,"column":22}},"36":{"start":{"line":215,"column":6},"end":{"line":217,"column":8}},"37":{"start":{"line":216,"column":8},"end":{"line":216,"column":65}},"38":{"start":{"line":218,"column":6},"end":{"line":220,"column":8}},"39":{"start":{"line":219,"column":8},"end":{"line":219,"column":67}},"40":{"start":{"line":221,"column":6},"end":{"line":223,"column":8}},"41":{"start":{"line":222,"column":8},"end":{"line":222,"column":68}},"42":{"start":{"line":224,"column":6},"end":{"line":226,"column":8}},"43":{"start":{"line":225,"column":8},"end":{"line":225,"column":73}},"44":{"start":{"line":227,"column":6},"end":{"line":229,"column":8}},"45":{"start":{"line":228,"column":8},"end":{"line":228,"column":68}},"46":{"start":{"line":230,"column":6},"end":{"line":232,"column":8}},"47":{"start":{"line":231,"column":8},"end":{"line":231,"column":70}},"48":{"start":{"line":233,"column":6},"end":{"line":233,"column":19}}},"branchMap":{},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback-connector-remote","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","","/*!"," * Dependencies"," */","var relation = require('loopback-datasource-juggler/lib/relation-definition');","var RelationDefinition = relation.RelationDefinition;","","module.exports = RelationMixin;","","/**"," * RelationMixin class.  Use to define relationships between models."," *"," * @class RelationMixin"," */","function RelationMixin() {","}","","/**"," * Define a \"one to many\" relationship by specifying the model name"," *"," * Examples:"," * ```"," * User.hasMany(Post, {as: 'posts', foreignKey: 'authorId'});"," * ```"," *"," * ```"," * Book.hasMany(Chapter);"," * ```"," * Or, equivalently:"," * ```"," * Book.hasMany('chapters', {model: Chapter});"," * ```"," *"," * Query and create related models:"," *"," * ```js"," * Book.create(function(err, book) {"," *"," *   // Create a chapter instance ready to be saved in the data source."," *   var chapter = book.chapters.build({name: 'Chapter 1'});"," *"," *   // Save the new chapter"," *   chapter.save();"," *"," *  // you can also call the Chapter.create method with the `chapters` property"," *  // which will build a chapter instance and save the it in the data source."," *  book.chapters.create({name: 'Chapter 2'}, function(err, savedChapter) {"," *  // this callback is optional"," *  });"," *"," *   // Query chapters for the book"," *   book.chapters(function(err, chapters) {"," *     // all chapters with bookId = book.id"," *     console.log(chapters);"," *   });"," *"," *   book.chapters({where: {name: 'test'}, function(err, chapters) {"," *    // All chapters with bookId = book.id and name = 'test'"," *     console.log(chapters);"," *   });"," * });"," *```"," * @param {Object|String} modelTo Model object (or String name of model) to"," *    which you are creating the relationship."," * @options {Object} parameters Configuration parameters; see below."," * @property {String} as Name of the property in the referring model that"," *    corresponds to the foreign key field in the related model."," * @property {String} foreignKey Property name of foreign key field."," * @property {Object} model Model object"," */","RelationMixin.hasMany = function hasMany(modelTo, params) {","  var def = RelationDefinition.hasMany(this, modelTo, params);","  this.dataSource.adapter.resolve(this);","  defineRelationProperty(this, def);","};","","/**"," * Declare \"belongsTo\" relation that sets up a one-to-one connection with"," * another model, such that each instance of the declaring model \"belongs"," * to\" one instance of the other model."," *"," * For example, if an application includes users and posts, and each post can be"," * written by exactly one user. The following code specifies that `Post` has a"," * reference called `author` to the `User` model via the `userId` property of"," * `Post` as the foreign key."," * ```"," * Post.belongsTo(User, {as: 'author', foreignKey: 'userId'});"," * ```"," * You can then access the author in one of the following styles."," * Get the User object for the post author asynchronously:"," * ```"," * post.author(callback);"," * ```"," * Get the User object for the post author synchronously:"," * ```"," * post.author();"," * Set the author to be the given user:"," * ```"," * post.author(user)"," * ```"," * Examples:"," *"," * Suppose the model Post has a *belongsTo* relationship with User (the author"," * of the post). You could declare it this way:"," * ```js"," * Post.belongsTo(User, {as: 'author', foreignKey: 'userId'});"," * ```"," *"," * When a post is loaded, you can load the related author with:"," * ```js"," * post.author(function(err, user) {"," *     // the user variable is your user object"," * });"," * ```"," *"," * The related object is cached, so if later you try to get again the author, no"," * additional request will be made. But there is an optional boolean parameter"," * in first position that set whether or not you want to reload the cache:"," * ```js"," * post.author(true, function(err, user) {"," *     // The user is reloaded, even if it was already cached."," * });"," * ```"," * This optional parameter default value is false, so the related object will"," * be loaded from cache if available."," *"," * @param {Class|String} modelTo Model object (or String name of model)"," *    to which you are creating the relationship."," * @options {Object} params Configuration parameters; see below."," * @property {String} as Name of the property in the referring model that"," *    corresponds to the foreign key field in the related model."," * @property {String} foreignKey Name of foreign key property."," *"," */","RelationMixin.belongsTo = function(modelTo, params) {","  var def = RelationDefinition.belongsTo(this, modelTo, params);","  this.dataSource.adapter.resolve(this);","  defineRelationProperty(this, def);","};","","/**"," * A hasAndBelongsToMany relation creates a direct many-to-many connection with"," * another model, with no intervening model. For example, if your application"," * includes users and groups, with each group having many users and each user"," * appearing in many groups, you could declare the models this way:"," * ```"," *  User.hasAndBelongsToMany('groups', {model: Group, foreignKey: 'groupId'});"," * ```"," *  Then, to get the groups to which the user belongs:"," * ```"," *  user.groups(callback);"," * ```"," *  Create a new group and connect it with the user:"," * ```"," *  user.groups.create(data, callback);"," * ```"," *  Connect an existing group with the user:"," * ```"," *  user.groups.add(group, callback);"," * ```"," *  Remove the user from the group:"," * ```"," *  user.groups.remove(group, callback);"," * ```"," *"," * @param {String|Object} modelTo Model object (or String name of model) to"," *    which you are creating the relationship."," * @options {Object} params Configuration parameters; see below."," * @property {String} as Name of the property in the referring model that"," *    corresponds to the foreign key field in the related model."," * @property {String} foreignKey Property name of foreign key field."," * @property {Object} model Model object"," */","RelationMixin.hasAndBelongsToMany =","  function hasAndBelongsToMany(modelTo, params) {","    var def = RelationDefinition.hasAndBelongsToMany(this, modelTo, params);","    this.dataSource.adapter.resolve(this);","    defineRelationProperty(this, def);","  };","","RelationMixin.hasOne = function hasOne(modelTo, params) {","  var def = RelationDefinition.hasOne(this, modelTo, params);","  this.dataSource.adapter.resolve(this);","  defineRelationProperty(this, def);","};","","RelationMixin.referencesMany = function referencesMany(modelTo, params) {","  var def = RelationDefinition.referencesMany(this, modelTo, params);","  this.dataSource.adapter.resolve(this);","  defineRelationProperty(this, def);","};","","RelationMixin.embedsOne = function embedsOne(modelTo, params) {","  var def = RelationDefinition.embedsOne(this, modelTo, params);","  this.dataSource.adapter.resolve(this);","  defineRelationProperty(this, def);","};","","RelationMixin.embedsMany = function embedsMany(modelTo, params) {","  var def = RelationDefinition.embedsMany(this, modelTo, params);","  this.dataSource.adapter.resolve(this);","  defineRelationProperty(this, def);","};","","function defineRelationProperty(modelClass, def) {","  Object.defineProperty(modelClass.prototype, def.name, {","    get: function() {","      var that = this;","      var scope = function() {","        return that['__get__' + def.name].apply(that, arguments);","      };","      scope.count = function() {","        return that['__count__' + def.name].apply(that, arguments);","      };","      scope.create = function() {","        return that['__create__' + def.name].apply(that, arguments);","      };","      scope.deleteById = scope.destroyById = function() {","        return that['__destroyById__' + def.name].apply(that, arguments);","      };","      scope.exists = function() {","        return that['__exists__' + def.name].apply(that, arguments);","      };","      scope.findById = function() {","        return that['__findById__' + def.name].apply(that, arguments);","      };","      return scope;","    }","  });","}",""],"l":{"11":1,"12":1,"14":1,"21":1,"77":1,"78":0,"79":0,"80":0,"141":1,"142":0,"143":0,"144":0,"180":1,"182":0,"183":0,"184":0,"187":1,"188":0,"189":0,"190":0,"193":1,"194":0,"195":0,"196":0,"199":1,"200":0,"201":0,"202":0,"205":1,"206":0,"207":0,"208":0,"211":1,"212":0,"214":0,"215":0,"216":0,"218":0,"219":0,"221":0,"222":0,"224":0,"225":0,"227":0,"228":0,"230":0,"231":0,"233":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/Gruntfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/Gruntfile.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":33}}},"2":{"name":"(anonymous_2)","line":220,"loc":{"start":{"line":220,"column":35},"end":{"line":220,"column":46}}},"3":{"name":"(anonymous_3)","line":223,"loc":{"start":{"line":223,"column":18},"end":{"line":223,"column":29}}},"4":{"name":"(anonymous_4)","line":229,"loc":{"start":{"line":229,"column":46},"end":{"line":229,"column":57}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":247,"column":2}},"2":{"start":{"line":10,"column":2},"end":{"line":10,"column":42}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":41}},"4":{"start":{"line":15,"column":2},"end":{"line":211,"column":5}},"5":{"start":{"line":214,"column":2},"end":{"line":214,"column":41}},"6":{"start":{"line":215,"column":2},"end":{"line":215,"column":45}},"7":{"start":{"line":216,"column":2},"end":{"line":216,"column":37}},"8":{"start":{"line":217,"column":2},"end":{"line":217,"column":44}},"9":{"start":{"line":218,"column":2},"end":{"line":218,"column":36}},"10":{"start":{"line":220,"column":2},"end":{"line":227,"column":5}},"11":{"start":{"line":221,"column":4},"end":{"line":221,"column":28}},"12":{"start":{"line":222,"column":4},"end":{"line":222,"column":49}},"13":{"start":{"line":223,"column":4},"end":{"line":226,"column":7}},"14":{"start":{"line":224,"column":6},"end":{"line":224,"column":45}},"15":{"start":{"line":225,"column":6},"end":{"line":225,"column":13}},"16":{"start":{"line":229,"column":2},"end":{"line":231,"column":5}},"17":{"start":{"line":230,"column":4},"end":{"line":230,"column":70}},"18":{"start":{"line":233,"column":2},"end":{"line":233,"column":57}},"19":{"start":{"line":236,"column":2},"end":{"line":236,"column":48}},"20":{"start":{"line":238,"column":2},"end":{"line":243,"column":5}},"21":{"start":{"line":246,"column":2},"end":{"line":246,"column":50}}},"branchMap":{"1":{"line":240,"type":"cond-expr","locations":[{"start":{"line":240,"column":31},"end":{"line":240,"column":51}},{"start":{"line":240,"column":54},"end":{"line":240,"column":70}}]},"2":{"line":241,"type":"cond-expr","locations":[{"start":{"line":242,"column":6},"end":{"line":242,"column":29}},{"start":{"line":242,"column":32},"end":{"line":242,"column":49}}]},"3":{"line":241,"type":"binary-expr","locations":[{"start":{"line":241,"column":4},"end":{"line":241,"column":28}},{"start":{"line":241,"column":32},"end":{"line":241,"column":61}}]}},"code":["// Copyright IBM Corp. 2014,2016. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","/* global module:false */","'use strict';","module.exports = function(grunt) {","  // Do not report warnings from unit-tests exercising deprecated paths","  process.env.NO_DEPRECATION = 'loopback';","","  grunt.loadNpmTasks('grunt-mocha-test');","","  // Project configuration.","  grunt.initConfig({","    // Metadata.","    pkg: grunt.file.readJSON('package.json'),","    banner: '/*! <%= pkg.title || pkg.name %> - v<%= pkg.version %> - ' +","      '<%= grunt.template.today(\"yyyy-mm-dd\") %>\\n' +","      '<%= pkg.homepage ? \"* \" + pkg.homepage + \"\\\\n\" : \"\" %>' +","      '* Copyright (c) <%= grunt.template.today(\"yyyy\") %> <%= pkg.author.name %>;' +","      ' Licensed <%= _.pluck(pkg.licenses, \"type\").join(\", \") %> */\\n',","    // Task configuration.","    uglify: {","      options: {","        banner: '<%= banner %>',","      },","      dist: {","        files: {","          'dist/loopback.min.js': ['dist/loopback.js'],","        },","      },","    },","    eslint: {","      gruntfile: {","        src: 'Gruntfile.js',","      },","      lib: {","        src: ['lib/**/*.js'],","      },","      common: {","        src: ['common/**/*.js'],","      },","      server: {","        src: ['server/**/*.js'],","      },","      test: {","        src: ['test/**/*.js'],","      },","    },","    watch: {","      gruntfile: {","        files: '<%= eslint.gruntfile.src %>',","        tasks: ['eslint:gruntfile'],","      },","      browser: {","        files: ['<%= eslint.browser.src %>'],","        tasks: ['eslint:browser'],","      },","      common: {","        files: ['<%= eslint.common.src %>'],","        tasks: ['eslint:common'],","      },","      lib: {","        files: ['<%= eslint.lib.src %>'],","        tasks: ['eslint:lib'],","      },","      server: {","        files: ['<%= eslint.server.src %>'],","        tasks: ['eslint:server'],","      },","      test: {","        files: ['<%= eslint.test.src %>'],","        tasks: ['eslint:test'],","      },","    },","    browserify: {","      dist: {","        files: {","          'dist/loopback.js': ['index.js'],","        },","        options: {","          ignore: ['nodemailer', 'passport', 'bcrypt'],","          standalone: 'loopback',","        },","      },","    },","    mochaTest: {","      'unit': {","        src: 'test/*.js',","        options: {","          reporter: 'dot',","          require: require.resolve('./test/helpers/use-english.js'),","        },","      },","      'unit-xml': {","        src: 'test/*.js',","        options: {","          reporter: 'xunit',","          captureFile: 'xunit.xml',","        },","      },","    },","    karma: {","      'unit-once': {","        configFile: 'test/karma.conf.js',","        browsers: ['PhantomJS'],","        singleRun: true,","        reporters: ['dots', 'junit'],","","        // increase the timeout for slow build slaves (e.g. Travis-ci)","        browserNoActivityTimeout: 30000,","","        // CI friendly test output","        junitReporter: {","          outputFile: 'karma-xunit.xml',","        },","","        browserify: {","          // Disable sourcemaps to prevent","          // Fatal error: Maximum call stack size exceeded","          debug: false,","          // Disable watcher, grunt will exit after the first run","          watch: false,","        },","      },","      unit: {","        configFile: 'test/karma.conf.js',","      },","      e2e: {","        options: {","          // base path, that will be used to resolve files and exclude","          basePath: '',","","          // frameworks to use","          frameworks: ['mocha', 'browserify'],","","          // list of files / patterns to load in the browser","          files: [","            'test/e2e/remote-connector.e2e.js',","            'test/e2e/replication.e2e.js',","          ],","","          // list of files to exclude","          exclude: [","","          ],","","          // test results reporter to use","          // possible values: 'dots', 'progress', 'junit', 'growl', 'coverage'","          reporters: ['dots'],","","          // web server port","          port: 9876,","","          // cli runner port","          runnerPort: 9100,","","          // enable / disable colors in the output (reporters and logs)","          colors: true,","","          // level of logging","          // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG","          logLevel: 'warn',","","          // enable / disable watching file and executing tests whenever any file changes","          autoWatch: true,","","          // Start these browsers, currently available:","          // - Chrome","          // - ChromeCanary","          // - Firefox","          // - Opera","          // - Safari (only Mac)","          // - PhantomJS","          // - IE (only Windows)","          browsers: [","            'Chrome',","          ],","","          // If browser does not capture in given timeout [ms], kill it","          captureTimeout: 60000,","","          // Continuous Integration mode","          // if true, it capture browsers, run tests and exit","          singleRun: false,","","          // Browserify config (all optional)","          browserify: {","            // extensions: ['.coffee'],","            ignore: [","              'nodemailer',","              'passport',","              'passport-local',","              'superagent',","              'supertest',","              'bcrypt',","            ],","            // transform: ['coffeeify'],","            // debug: true,","            // noParse: ['jquery'],","            watch: true,","          },","","          // Add browserify to preprocessors","          preprocessors: {'test/e2e/*': ['browserify']},","        },","      },","    },","","  });","","  // These plugins provide necessary tasks.","  grunt.loadNpmTasks('grunt-browserify');","  grunt.loadNpmTasks('grunt-contrib-uglify');","  grunt.loadNpmTasks('grunt-eslint');","  grunt.loadNpmTasks('grunt-contrib-watch');","  grunt.loadNpmTasks('grunt-karma');","","  grunt.registerTask('e2e-server', function() {","    var done = this.async();","    var app = require('./test/fixtures/e2e/app');","    app.listen(0, function() {","      process.env.PORT = this.address().port;","      done();","    });","  });","","  grunt.registerTask('skip-karma-on-windows', function() {","    console.log('*** SKIPPING PHANTOM-JS BASED TESTS ON WINDOWS ***');","  });","","  grunt.registerTask('e2e', ['e2e-server', 'karma:e2e']);","","  // Default task.","  grunt.registerTask('default', ['browserify']);","","  grunt.registerTask('test', [","    'eslint',","    process.env.JENKINS_HOME ? 'mochaTest:unit-xml' : 'mochaTest:unit',","    process.env.JENKINS_HOME && /^win/.test(process.platform) ?","      'skip-karma-on-windows' : 'karma:unit-once',","  ]);","","  // alias for sl-ci-run and `npm test`","  grunt.registerTask('mocha-and-karma', ['test']);","};",""],"l":{"8":1,"10":0,"12":0,"15":0,"214":0,"215":0,"216":0,"217":0,"218":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"229":0,"230":0,"233":0,"236":0,"238":0,"246":0}},"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/browser-express.js":{"path":"/home/travis/build/npmtest/node-npmtest-loopback/node_modules/loopback/lib/browser-express.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":1,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"browserExpress","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":26}}},"2":{"name":"BrowserExpress","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":26}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":31},"end":{"line":24,"column":52}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":31},"end":{"line":34,"column":45}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":50}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":32}},"4":{"start":{"line":12,"column":0},"end":{"line":14,"column":1}},"5":{"start":{"line":13,"column":2},"end":{"line":13,"column":30}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":33}},"7":{"start":{"line":18,"column":0},"end":{"line":20,"column":1}},"8":{"start":{"line":19,"column":2},"end":{"line":19,"column":21}},"9":{"start":{"line":22,"column":0},"end":{"line":22,"column":44}},"10":{"start":{"line":24,"column":0},"end":{"line":32,"column":2}},"11":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"12":{"start":{"line":26,"column":4},"end":{"line":26,"column":25}},"13":{"start":{"line":29,"column":2},"end":{"line":29,"column":29}},"14":{"start":{"line":31,"column":2},"end":{"line":31,"column":14}},"15":{"start":{"line":34,"column":0},"end":{"line":36,"column":2}},"16":{"start":{"line":35,"column":2},"end":{"line":35,"column":28}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]}},"code":["// Copyright IBM Corp. 2014. All Rights Reserved.","// Node module: loopback","// This file is licensed under the MIT License.","// License text available at https://opensource.org/licenses/MIT","","'use strict';","var EventEmitter = require('events').EventEmitter;","var util = require('util');","","module.exports = browserExpress;","","function browserExpress() {","  return new BrowserExpress();","}","","browserExpress.errorHandler = {};","","function BrowserExpress() {","  this.settings = {};","}","","util.inherits(BrowserExpress, EventEmitter);","","BrowserExpress.prototype.set = function(key, value) {","  if (arguments.length == 1) {","    return this.get(key);","  }","","  this.settings[key] = value;","","  return this; // fluent API","};","","BrowserExpress.prototype.get = function(key) {","  return this.settings[key];","};",""],"l":{"7":1,"8":1,"10":1,"12":1,"13":0,"16":1,"18":1,"19":0,"22":1,"24":1,"25":0,"26":0,"29":0,"31":0,"34":1,"35":0}}}